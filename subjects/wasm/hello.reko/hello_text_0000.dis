// stackAlloc
// Return size: 0
word32 stackAlloc(word32 arg0)
stackAlloc_entry:
	// succ:  l000D0000
l000D0000:
	v3 = Mem0[0x00140030<p32>:word32]
	loc1 = v3
	v4 = Mem0[0x00140030<p32>:word32]
	v5 = arg0
	v6 = v4 + v5
	Mem0[0x00140030<p32>:word32] = v6
	v7 = Mem0[0x00140030<p32>:word32]
	v8 = 0xF<32>
	v9 = v7 + v8
	v10 = 0xFFFFFFF0<32>
	v11 = v9 & v10
	Mem0[0x00140030<p32>:word32] = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000D0023
	// succ:  l000D001E l000D0023
l000D001E:
	v15 = arg0
	abortStackOverflow(v15)
	// succ:  l000D0023
l000D0023:
	v16 = loc1
stackAlloc_exit:


// stackSave
// Return size: 0
word32 stackSave()
stackSave_entry:
	// succ:  l000D0028
l000D0028:
	v2 = Mem0[0x00140030<p32>:word32]
stackSave_exit:


// stackRestore
// Return size: 0
void stackRestore(word32 arg0)
stackRestore_entry:
	// succ:  l000D002C
l000D002C:
	v2 = arg0
	Mem0[0x00140030<p32>:word32] = v2
	return
	// succ:  stackRestore_exit
stackRestore_exit:


// establishStackSpace
// Return size: 0
void establishStackSpace(word32 arg0, word32 arg1)
establishStackSpace_entry:
	// succ:  l000D0031
l000D0031:
	v2 = arg0
	Mem0[0x00140030<p32>:word32] = v2
	v3 = arg1
	Mem0[0x00140034<p32>:word32] = v3
	// succ:  l000D003B
l000D003B:
	return
	// succ:  establishStackSpace_exit
establishStackSpace_exit:


// setThrew
// Return size: 0
void setThrew(word32 arg0, word32 arg1)
setThrew_entry:
	// succ:  l000D003D
l000D003D:
	v2 = Mem0[0x00140048<p32>:word32]
	v3 = 0<32>
	v4 = v2 == v3
	branch !v4 l000D004D
	// succ:  l000D0044 l000D004D
l000D0044:
	v5 = arg0
	Mem0[0x00140048<p32>:word32] = v5
	v6 = arg1
	Mem0[0x0014004C<p32>:word32] = v6
	// succ:  l000D004D
l000D004D:
	return
	// succ:  setThrew_exit
setThrew_exit:


// setTempRet0
// Return size: 0
void setTempRet0(word32 arg0)
setTempRet0_entry:
	// succ:  l000D004E
l000D004E:
	v2 = arg0
	Mem0[0x00140094<p32>:word32] = v2
	return
	// succ:  setTempRet0_exit
setTempRet0_exit:


// getTempRet0
// Return size: 0
word32 getTempRet0()
getTempRet0_entry:
	// succ:  l000D0053
l000D0053:
	v2 = Mem0[0x00140094<p32>:word32]
getTempRet0_exit:


// fn000D0057
// Return size: 0
word32 fn000D0057()
fn000D0057_entry:
	// succ:  l000D0057
l000D0057:
	v6 = Mem0[0x00140030<p32>:word32]
	loc3 = v6
	v7 = Mem0[0x00140030<p32>:word32]
	v8 = 0x10<32>
	v9 = v7 + v8
	Mem0[0x00140030<p32>:word32] = v9
	v10 = Mem0[0x00140030<p32>:word32]
	v11 = Mem0[0x00140034<p32>:word32]
	v12 = v10 >= v11
	branch !v12 l000D0070
	// succ:  l000D006B l000D0070
l000D006B:
	v13 = 0x10<32>
	abortStackOverflow(v13)
	// succ:  l000D0070
l000D0070:
	v14 = 0x7B<32>
	loc0 = v14
	v15 = loc0
	loc1 = v15
	v16 = loc3
	Mem0[0x00140030<p32>:word32] = v16
	v17 = loc1
fn000D0057_exit:


// fn000D0082
// Return size: 0
void fn000D0082()
fn000D0082_entry:
	// succ:  l000D0082
l000D0082:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	v6 = fn000D0057()
	loc0 = v6
	v7 = 0x4620<32>
	v8 = loc0
	Mem0[v7:word32] = v8
fn000D0082_exit:


// _main
// Return size: 0
word32 _main()
_main_entry:
	// succ:  l000D0098
l000D0098:
	v12 = Mem0[0x00140030<p32>:word32]
	loc9 = v12
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = 0x10<32>
	v15 = v13 + v14
	Mem0[0x00140030<p32>:word32] = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = Mem0[0x00140034<p32>:word32]
	v18 = v16 >= v17
	branch !v18 l000D00B1
	// succ:  l000D00AC l000D00B1
l000D00AC:
	v19 = 0x10<32>
	abortStackOverflow(v19)
	// succ:  l000D00B1
l000D00B1:
	v20 = 0<32>
	loc2 = v20
	v21 = 0x4908<32>
	v22 = 0x2A44<32>
	v23 = fn000D00FD(v21, v22)
	loc3 = v23
	v24 = 0x4620<32>
	v25 = Mem0[v24:word32]
	loc4 = v25
	v26 = loc3
	v27 = loc4
	v28 = fn000E6E2A(v26, v27)
	loc5 = v28
	v29 = loc5
	loc0 = v29
	v30 = 0x163<32>
	loc1 = v30
	v31 = loc0
	loc6 = v31
	v32 = loc1
	loc7 = v32
	v33 = loc6
	v34 = loc7
	v35 = 0x1FF<32>
	v36 = v34 & v35
	v37 = 0xB00<32>
	v38 = v36 + v37
_main_exit:


// fn000D00FD
// Return size: 0
word32 fn000D00FD(word32 arg0, word32 arg1)
fn000D00FD_entry:
	// succ:  l000D00FD
l000D00FD:
	v11 = Mem0[0x00140030<p32>:word32]
	loc10 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000D0116
	// succ:  l000D0111 l000D0116
l000D0111:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000D0116
l000D0116:
	v19 = arg0
	loc2 = v19
	v20 = arg1
	loc3 = v20
	v21 = loc2
	loc4 = v21
	v22 = loc3
	loc5 = v22
	v23 = loc3
	loc6 = v23
	v24 = loc6
	v25 = fn000D0843(v24)
	loc7 = v25
	v26 = loc4
	v27 = loc5
	v28 = loc7
	v29 = fn000D0290(v26, v27, v28)
	loc8 = v29
	v30 = loc10
	Mem0[0x00140030<p32>:word32] = v30
	v31 = loc8
fn000D00FD_exit:


// fn000D0143
// Return size: 0
word32 fn000D0143(word32 arg0)
fn000D0143_entry:
	// succ:  l000D0143
l000D0143:
	v44 = Mem0[0x00140030<p32>:word32]
	loc42 = v44
	v45 = Mem0[0x00140030<p32>:word32]
	v46 = 0x20<32>
	v47 = v45 + v46
	Mem0[0x00140030<p32>:word32] = v47
	v48 = Mem0[0x00140030<p32>:word32]
	v49 = Mem0[0x00140034<p32>:word32]
	v50 = v48 >= v49
	branch !v50 l000D015C
	// succ:  l000D0157 l000D015C
l000D0157:
	v51 = 0x20<32>
	abortStackOverflow(v51)
	// succ:  l000D015C
l000D015C:
	v52 = loc42
	v53 = 0xC<32>
	v54 = v52 + v53
	loc37 = v54
	v55 = arg0
	loc40 = v55
	v56 = loc40
	loc2 = v56
	v57 = loc40
	loc3 = v57
	v58 = loc3
	v59 = Mem0[v58:word32]
	loc4 = v59
	v60 = loc4
	v61 = 0xFFFFFFF4<32>
	v62 = v60 + v61
	loc5 = v62
	v63 = loc5
	v64 = Mem0[v63:word32]
	loc6 = v64
	v65 = loc3
	v66 = loc6
	v67 = v65 + v66
	loc7 = v67
	v68 = loc7
	loc34 = v68
	v69 = 0xA<32>
	loc36 = v69
	v70 = loc34
	loc8 = v70
	v71 = loc8
	v72 = fn000E64CA(v71)
	loc9 = v72
	v73 = loc37
	v74 = loc9
	Mem0[v73:word32] = v74
	v75 = loc37
	loc23 = v75
	v76 = loc23
	loc10 = v76
	v77 = 0<32>
	Mem0[0x00140048<p32>:word32] = v77
	v78 = 0x164<32>
	v79 = loc10
	v80 = 0x4C70<32>
	v81 = invoke_iii(v78, v79, v80)
	loc11 = v81
	v82 = Mem0[0x00140048<p32>:word32]
	loc13 = v82
	v83 = 0<32>
	Mem0[0x00140048<p32>:word32] = v83
	v84 = loc13
	v85 = 1<32>
	v86 = v84 & v85
	loc14 = v86
	v87 = loc14
	v88 = v87 == 0<32>
	v88 = v88
	// succ:  l000D01D2 l000D01D2
l000D01D2:
	v89 = loc36
	loc15 = v89
	v90 = loc11
	loc1 = v90
	v91 = loc15
	loc12 = v91
	v92 = loc1
	loc16 = v92
	v93 = loc16
	v94 = Mem0[v93:word32]
	loc17 = v94
	v95 = loc17
	v96 = 0x1C<32>
	v97 = v95 + v96
	loc18 = v97
	v98 = loc18
	v99 = Mem0[v98:word32]
	loc19 = v99
	v100 = loc12
	loc20 = v100
	v101 = 0<32>
	Mem0[0x00140048<p32>:word32] = v101
	v102 = loc19
	v103 = loc16
	v104 = loc20
	v105 = invoke_iii(v102, v103, v104)
	loc21 = v105
	v106 = Mem0[0x00140048<p32>:word32]
	loc22 = v106
	v107 = 0<32>
	Mem0[0x00140048<p32>:word32] = v107
	v108 = loc22
	v109 = 1<32>
	v110 = v108 & v109
	loc24 = v110
	v111 = loc24
	v112 = v111 == 0<32>
	v112 = v112
	// succ:  l000D021D l000D021D
l000D021D:
	v113 = loc37
	fn0011B3FB(v113)
	v114 = loc2
	v115 = loc21
	v116 = fn000E71A1(v114, v115)
fn000D0143_exit:


// fn000D0290
// Return size: 0
word32 fn000D0290(word32 arg0, word32 arg1, word32 arg2)
fn000D0290_entry:
	// succ:  l000D0290
l000D0290:
	v163 = Mem0[0x00140030<p32>:word32]
	loc163 = v163
	v164 = Mem0[0x00140030<p32>:word32]
	v165 = 0x80<32>
	v166 = v164 + v165
	Mem0[0x00140030<p32>:word32] = v166
	v167 = Mem0[0x00140030<p32>:word32]
	v168 = Mem0[0x00140034<p32>:word32]
	v169 = v167 >= v168
	branch !v169 l000D02AC
	// succ:  l000D02A6 l000D02AC
l000D02A6:
	v170 = 0x80<32>
	abortStackOverflow(v170)
	// succ:  l000D02AC
l000D02AC:
	v171 = loc163
	v172 = 0x6C<32>
	v173 = v171 + v172
	loc3 = v173
	v174 = loc163
	v175 = 0x5C<32>
	v176 = v174 + v175
	loc140 = v176
	v177 = loc163
	v178 = 0x10<32>
	v179 = v177 + v178
	loc81 = v179
	v180 = loc163
	v181 = 4<32>
	v182 = v180 + v181
	loc84 = v182
	v183 = loc163
	loc86 = v183
	v184 = arg0
	loc78 = v184
	v185 = arg1
	loc79 = v185
	v186 = arg2
	loc80 = v186
	v187 = loc78
	loc87 = v187
	v188 = 0<32>
	Mem0[0x00140048<p32>:word32] = v188
	v189 = 0x166<32>
	v190 = loc81
	v191 = loc87
	invoke_vii(v189, v190, v191)
	v192 = Mem0[0x00140048<p32>:word32]
	loc88 = v192
	v193 = 0<32>
	Mem0[0x00140048<p32>:word32] = v193
	v194 = loc88
	v195 = 1<32>
	v196 = v194 & v195
	loc89 = v196
	// succ:  l000D0300
l000D0300:
	v197 = loc89
	branch !v197 l000D030C
	// succ:  l000D0306 l000D030C
l000D0306:
	v198 = 0xF<32>
	loc162 = v198
l000D030C:
	v199 = loc81
	loc77 = v199
	v200 = loc77
	loc90 = v200
	v201 = loc90
	v202 = Mem0[v201:int8]
	v203 = CONVERT(v202, int8, word32)
	loc91 = v203
	v204 = loc91
	v205 = 1<32>
	v206 = v204 & v205
	loc92 = v206
	// succ:  l000D0322
l000D0322:
	v207 = loc92
	branch !v207 l000D0750
	// succ:  l000D0328 l000D0750
l000D0328:
	v208 = loc78
	loc93 = v208
	v209 = loc84
	loc75 = v209
	v210 = loc93
	loc76 = v210
	v211 = loc75
	loc94 = v211
	v212 = loc76
	loc95 = v212
	v213 = loc95
	v214 = Mem0[v213:word32]
	loc97 = v214
	v215 = loc97
	v216 = 0xFFFFFFF4<32>
	v217 = v215 + v216
	loc98 = v217
	v218 = loc98
	v219 = Mem0[v218:word32]
	loc99 = v219
	v220 = loc95
	v221 = loc99
	v222 = v220 + v221
	loc100 = v222
	v223 = loc100
	loc74 = v223
	v224 = loc74
	loc101 = v224
	v225 = loc101
	loc73 = v225
	v226 = loc73
	loc102 = v226
	v227 = loc102
	v228 = 0x18<32>
	v229 = v227 + v228
	loc103 = v229
	v230 = loc103
	v231 = Mem0[v230:word32]
	loc104 = v231
	v232 = loc94
	v233 = loc104
	Mem0[v232:word32] = v233
	v234 = loc79
	loc105 = v234
	v235 = loc78
	loc106 = v235
	v236 = loc106
	v237 = Mem0[v236:word32]
	loc108 = v237
	v238 = loc108
	v239 = 0xFFFFFFF4<32>
	v240 = v238 + v239
	loc109 = v240
	v241 = loc109
	v242 = Mem0[v241:word32]
	loc110 = v242
	v243 = loc106
	v244 = loc110
	v245 = v243 + v244
	loc111 = v245
	v246 = loc111
	loc39 = v246
	v247 = loc39
	loc112 = v247
	v248 = loc112
	v249 = 4<32>
	v250 = v248 + v249
	loc113 = v250
	v251 = loc113
	v252 = Mem0[v251:word32]
	loc114 = v252
	v253 = loc114
	v254 = 0xB0<32>
	v255 = v253 & v254
	loc115 = v255
	v256 = loc115
	v257 = 0x20<32>
	v258 = v256 == v257
	loc116 = v258
	v259 = loc79
	loc117 = v259
	v260 = loc80
	loc119 = v260
	v261 = loc117
	v262 = loc119
	v263 = v261 + v262
	loc120 = v263
	v264 = loc79
	loc121 = v264
	v265 = loc116
	branch !v265 l000D03E0
	// succ:  l000D03DD l000D03E0
l000D03DD:
	v266 = loc120
	goto l000D03E2
	// succ:  l000D03E2
l000D03E0:
	v267 = loc121
	// succ:  l000D03E2
l000D03E2:
	loc122 = v267
	v268 = loc79
	loc123 = v268
	v269 = loc80
	loc124 = v269
	v270 = loc123
	v271 = loc124
	v272 = v270 + v271
	loc125 = v272
	v273 = loc78
	loc126 = v273
	v274 = loc126
	v275 = Mem0[v274:word32]
	loc127 = v275
	v276 = loc127
	v277 = 0xFFFFFFF4<32>
	v278 = v276 + v277
	loc128 = v278
	v279 = loc128
	v280 = Mem0[v279:word32]
	loc130 = v280
	v281 = loc126
	v282 = loc130
	v283 = v281 + v282
	loc131 = v283
	v284 = loc78
	loc132 = v284
	v285 = loc132
	v286 = Mem0[v285:word32]
	loc133 = v286
	v287 = loc133
	v288 = 0xFFFFFFF4<32>
	v289 = v287 + v288
	loc134 = v289
	v290 = loc134
	v291 = Mem0[v290:word32]
	loc135 = v291
	v292 = loc132
	v293 = loc135
	v294 = v292 + v293
	loc136 = v294
	v295 = loc136
	loc17 = v295
	v296 = loc17
	loc137 = v296
	v297 = fn000D0EAE()
	loc138 = v297
	v298 = loc137
	v299 = 0x4C<32>
	v300 = v298 + v299
	loc139 = v300
	v301 = loc139
	v302 = Mem0[v301:word32]
	loc141 = v302
	v303 = loc138
	v304 = loc141
	v305 = fn000D0E75(v303, v304)
	loc142 = v305
	// succ:  l000D0470
l000D0470:
	v306 = loc142
	branch !v306 l000D05F5
	// succ:  l000D0477 l000D05F5
l000D0477:
	v307 = loc137
	loc118 = v307
	v308 = 0x20<32>
	loc129 = v308
	v309 = loc118
	loc143 = v309
	v310 = 0<32>
	Mem0[0x00140048<p32>:word32] = v310
	v311 = 0x167<32>
	v312 = loc143
	v313 = invoke_ii(v311, v312)
	loc144 = v313
	v314 = Mem0[0x00140048<p32>:word32]
	loc145 = v314
	v315 = 0<32>
	Mem0[0x00140048<p32>:word32] = v315
	v316 = loc145
	v317 = 1<32>
	v318 = v316 & v317
	loc146 = v318
	v319 = loc146
	branch !v319 l000D04B2
	// succ:  l000D04AC l000D04B2
l000D04AC:
	v320 = 0x10<32>
	loc162 = v320
	goto l000D05F3
	// succ:  l000D05F3
l000D04B2:
	v321 = loc140
	v322 = loc144
	Mem0[v321:word32] = v322
	v323 = loc140
	loc107 = v323
	v324 = loc107
	loc147 = v324
	v325 = 0<32>
	Mem0[0x00140048<p32>:word32] = v325
	v326 = 0x164<32>
	v327 = loc147
	v328 = 0x4C70<32>
	v329 = invoke_iii(v326, v327, v328)
	loc148 = v329
	v330 = Mem0[0x00140048<p32>:word32]
	loc149 = v330
	v331 = 0<32>
	Mem0[0x00140048<p32>:word32] = v331
	v332 = loc149
	v333 = 1<32>
	v334 = v332 & v333
	loc150 = v334
	v335 = loc150
	v336 = v335 == 0<32>
	branch !v336 l000D059A
	// succ:  l000D04F0 l000D059A
l000D04F0:
	v337 = loc129
	loc152 = v337
	v338 = loc148
	loc85 = v338
	v339 = loc152
	loc96 = v339
	v340 = loc85
	loc153 = v340
	v341 = loc153
	v342 = Mem0[v341:word32]
	loc154 = v342
	v343 = loc154
	v344 = 0x1C<32>
	v345 = v343 + v344
	loc155 = v345
	v346 = loc155
	v347 = Mem0[v346:word32]
	loc156 = v347
	v348 = loc96
	loc157 = v348
	v349 = 0<32>
	Mem0[0x00140048<p32>:word32] = v349
	v350 = loc156
	v351 = loc153
	v352 = loc157
	v353 = invoke_iii(v350, v351, v352)
	loc158 = v353
	v354 = Mem0[0x00140048<p32>:word32]
	loc159 = v354
	v355 = 0<32>
	Mem0[0x00140048<p32>:word32] = v355
	v356 = loc159
	v357 = 1<32>
	v358 = v356 & v357
	loc160 = v358
	v359 = loc160
	v360 = v359 == 0<32>
	branch !v360 l000D0599
	// succ:  l000D054F l000D0599
l000D054F:
	v361 = 0<32>
	Mem0[0x00140048<p32>:word32] = v361
	v362 = 0x165<32>
	v363 = loc140
	invoke_vi(v362, v363)
	v364 = Mem0[0x00140048<p32>:word32]
	loc14 = v364
	v365 = 0<32>
	Mem0[0x00140048<p32>:word32] = v365
	v366 = loc14
	v367 = 1<32>
	v368 = v366 & v367
	loc15 = v368
	v369 = loc15
	branch !v369 l000D0576
	// succ:  l000D056E l000D0576
l000D056E:
	v370 = 0x10<32>
	loc162 = v370
	goto l000D05FB
	// succ:  l000D05FB
l000D0576:
	v371 = loc158
	v372 = 0x18<32>
	v373 = v371 << v372
	v374 = 0x18<32>
	v375 = v373 >> v374
	loc16 = v375
	v376 = loc137
	v377 = 0x4C<32>
	v378 = v376 + v377
	loc18 = v378
	v379 = loc18
	v380 = loc16
	Mem0[v379:word32] = v380
	v381 = 0xC<32>
	loc162 = v381
	goto l000D05FB
	// succ:  l000D05FB
l000D0599:
	// succ:  l000D059A
l000D059A:
	v382 = 0<32>
	v383 = ___cxa_find_matching_catch_3(v382)
	loc161 = v383
	v384 = Mem0[0x00140094<p32>:word32]
	loc7 = v384
	v385 = loc161
	loc151 = v385
	v386 = loc7
	loc6 = v386
	v387 = 0<32>
	Mem0[0x00140048<p32>:word32] = v387
	v388 = 0x165<32>
	v389 = loc140
	invoke_vi(v388, v389)
	v390 = Mem0[0x00140048<p32>:word32]
	loc8 = v390
	v391 = 0<32>
	Mem0[0x00140048<p32>:word32] = v391
	v392 = loc8
	v393 = 1<32>
	v394 = v392 & v393
	loc9 = v394
	v395 = loc9
	branch !v395 l000D05DF
	// succ:  l000D05CE l000D05DF
l000D05CE:
	v396 = 0<32>
	v397 = 0<32>
	v398 = ___cxa_find_matching_catch_4(v396, v397)
	loc12 = v398
	v399 = Mem0[0x00140094<p32>:word32]
	loc13 = v399
	v400 = loc12
	fn000D0E65(v400)
	goto l000D05F2
	// succ:  l000D05F2
l000D05DF:
	v401 = loc151
	loc10 = v401
	v402 = loc6
	loc11 = v402
	v403 = loc10
	loc4 = v403
	v404 = loc11
	loc5 = v404
	goto l000D05FB
	// succ:  l000D05FB
l000D05F2:
	// succ:  l000D05F3
l000D05F3:
	goto l000D05FA
	// succ:  l000D05FA
l000D05F5:
	v405 = 0xC<32>
	loc162 = v405
	// succ:  l000D05FA
l000D05FA:
	// succ:  l000D05FB
l000D05FB:
	v406 = loc162
	v407 = 0xC<32>
	v408 = v406 == v407
	branch !v408 l000D06FC
	// succ:  l000D0604 l000D06FC
l000D0604:
	v409 = loc137
	v410 = 0x4C<32>
	v411 = v409 + v410
	loc19 = v411
	v412 = loc19
	v413 = Mem0[v412:word32]
	loc20 = v413
	v414 = loc20
	v415 = 0xFF<32>
	v416 = v414 & v415
	loc21 = v416
	v417 = 0<32>
	Mem0[0x00140048<p32>:word32] = v417
	v418 = loc3
	v419 = loc84
	v420 = Mem0[v419:word32]
	Mem0[v418:word32] = v420
	v421 = 0x168<32>
	v422 = loc3
	v423 = loc105
	v424 = loc122
	v425 = loc125
	v426 = loc131
	v427 = loc21
	v428 = invoke_iiiiiii(v421, v422, v423, v424, v425, v426, v427)
	loc22 = v428
	v429 = Mem0[0x00140048<p32>:word32]
	loc23 = v429
	v430 = 0<32>
	Mem0[0x00140048<p32>:word32] = v430
	v431 = loc23
	v432 = 1<32>
	v433 = v431 & v432
	loc24 = v433
	v434 = loc24
	branch !v434 l000D0657
	// succ:  l000D0651 l000D0657
l000D0651:
	v435 = 0x10<32>
	loc162 = v435
	goto l000D06FA
	// succ:  l000D06FA
l000D0657:
	v436 = loc86
	v437 = loc22
	Mem0[v436:word32] = v437
	v438 = loc86
	loc28 = v438
	v439 = loc28
	loc25 = v439
	v440 = loc25
	v441 = Mem0[v440:word32]
	loc26 = v441
	v442 = loc26
	v443 = 0<32>
	v444 = v442 == v443
	loc27 = v444
	v445 = loc27
	v446 = v445 == 0<32>
	branch !v446 l000D067C
	// succ:  l000D0679 l000D067C
l000D0679:
	goto l000D0750
	// succ:  l000D0750
l000D067C:
	v447 = loc78
	loc29 = v447
	v448 = loc29
	v449 = Mem0[v448:word32]
	loc30 = v449
	v450 = loc30
	v451 = 0xFFFFFFF4<32>
	v452 = v450 + v451
	loc31 = v452
	v453 = loc31
	v454 = Mem0[v453:word32]
	loc32 = v454
	v455 = loc29
	v456 = loc32
	v457 = v455 + v456
	loc33 = v457
	v458 = loc33
	loc71 = v458
	v459 = 5<32>
	loc72 = v459
	v460 = loc71
	loc34 = v460
	v461 = loc72
	loc35 = v461
	v462 = loc34
	loc50 = v462
	v463 = loc35
	loc61 = v463
	v464 = loc50
	loc36 = v464
	v465 = loc36
	v466 = 0x10<32>
	v467 = v465 + v466
	loc37 = v467
	v468 = loc37
	v469 = Mem0[v468:word32]
	loc38 = v469
	v470 = loc61
	loc40 = v470
	v471 = loc38
	v472 = loc40
	v473 = v471 | v472
	loc41 = v473
	v474 = 0<32>
	Mem0[0x00140048<p32>:word32] = v474
	v475 = 0x169<32>
	v476 = loc36
	v477 = loc41
	invoke_vii(v475, v476, v477)
	v478 = Mem0[0x00140048<p32>:word32]
	loc42 = v478
	v479 = 0<32>
	Mem0[0x00140048<p32>:word32] = v479
	v480 = loc42
	v481 = 1<32>
	v482 = v480 & v481
	loc43 = v482
	v483 = loc43
	branch !v483 l000D06F7
	// succ:  l000D06F1 l000D06F7
l000D06F1:
	v484 = 0x10<32>
	loc162 = v484
	goto l000D06F9
	// succ:  l000D06F9
l000D06F7:
	goto l000D0750
	// succ:  l000D0750
l000D06F9:
	// succ:  l000D06FA
l000D06FA:
	// succ:  l000D06FC
l000D06FC:
	v485 = loc162
	v486 = 0x10<32>
	v487 = v485 == v486
	branch !v487 l000D0717
	// succ:  l000D0704 l000D0717
l000D0704:
	v488 = 0<32>
	v489 = ___cxa_find_matching_catch_3(v488)
	loc46 = v489
	v490 = Mem0[0x00140094<p32>:word32]
	loc47 = v490
	v491 = loc46
	loc4 = v491
	v492 = loc47
	loc5 = v492
	// succ:  l000D0717
l000D0717:
	v493 = loc4
	loc82 = v493
	v494 = loc5
	loc83 = v494
	v495 = 0<32>
	Mem0[0x00140048<p32>:word32] = v495
	v496 = 0x16A<32>
	v497 = loc81
	invoke_vi(v496, v497)
	v498 = Mem0[0x00140048<p32>:word32]
	loc48 = v498
	v499 = 0<32>
	Mem0[0x00140048<p32>:word32] = v499
	v500 = loc48
	v501 = 1<32>
	v502 = v500 & v501
	loc49 = v502
	v503 = loc49
	v504 = v503 == 0<32>
	branch !v504 l000D0741
	// succ:  l000D073E l000D0741
l000D073E:
l000D0741:
	v505 = 0<32>
	v506 = ___cxa_find_matching_catch_3(v505)
	loc69 = v506
	v507 = Mem0[0x00140094<p32>:word32]
	loc70 = v507
	v508 = loc69
	fn000D0E65(v508)
	// succ:  l000D0750
l000D0750:
	// succ:  l000D0750
l000D0750:
	v509 = 0<32>
	Mem0[0x00140048<p32>:word32] = v509
	v510 = 0x16A<32>
	v511 = loc81
	invoke_vi(v510, v511)
	v512 = Mem0[0x00140048<p32>:word32]
	loc51 = v512
	v513 = 0<32>
	Mem0[0x00140048<p32>:word32] = v513
	v514 = loc51
	v515 = 1<32>
	v516 = v514 & v515
	loc52 = v516
	v517 = loc52
	branch !v517 l000D0775
	// succ:  l000D076F l000D0775
l000D076F:
	v518 = 0xF<32>
	loc162 = v518
l000D0775:
	v519 = loc78
	loc62 = v519
	v520 = loc163
	Mem0[0x00140030<p32>:word32] = v520
	v521 = loc62
fn000D0290_exit:


// fn000D0843
// Return size: 0
word32 fn000D0843(word32 arg0)
fn000D0843_entry:
	// succ:  l000D0843
l000D0843:
	v7 = Mem0[0x00140030<p32>:word32]
	loc5 = v7
	v8 = Mem0[0x00140030<p32>:word32]
	v9 = 0x10<32>
	v10 = v8 + v9
	Mem0[0x00140030<p32>:word32] = v10
	v11 = Mem0[0x00140030<p32>:word32]
	v12 = Mem0[0x00140034<p32>:word32]
	v13 = v11 >= v12
	branch !v13 l000D085C
	// succ:  l000D0857 l000D085C
l000D0857:
	v14 = 0x10<32>
	abortStackOverflow(v14)
	// succ:  l000D085C
l000D085C:
	v15 = arg0
	loc1 = v15
	v16 = loc1
	loc2 = v16
	v17 = loc2
	v18 = fn000DAF30(v17)
	loc3 = v18
	v19 = loc5
	Mem0[0x00140030<p32>:word32] = v19
	v20 = loc3
fn000D0843_exit:


// fn000D0874
// Return size: 0
word32 fn000D0874(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000D0874_entry:
	// succ:  l000D0874
l000D0874:
	v193 = Mem0[0x00140030<p32>:word32]
	loc196 = v193
	v194 = Mem0[0x00140030<p32>:word32]
	v195 = 0x110<32>
	v196 = v194 + v195
	Mem0[0x00140030<p32>:word32] = v196
	v197 = Mem0[0x00140030<p32>:word32]
	v198 = Mem0[0x00140034<p32>:word32]
	v199 = v197 >= v198
	branch !v199 l000D0890
	// succ:  l000D088A l000D0890
l000D088A:
	v200 = 0x110<32>
	abortStackOverflow(v200)
	// succ:  l000D0890
l000D0890:
	v201 = loc196
	v202 = 0xAC<32>
	v203 = v201 + v202
	loc119 = v203
	v204 = loc196
	v205 = 0x88<32>
	v206 = v204 + v205
	loc128 = v206
	v207 = loc196
	v208 = 0x68<32>
	v209 = v207 + v208
	loc136 = v209
	v210 = loc196
	v211 = 0x48<32>
	v212 = v210 + v211
	loc144 = v212
	v213 = loc196
	v214 = 0x44<32>
	v215 = v213 + v214
	loc145 = v215
	v216 = loc196
	v217 = 0x30<32>
	v218 = v216 + v217
	loc152 = v218
	v219 = loc196
	v220 = 0x20<32>
	v221 = v219 + v220
	loc156 = v221
	v222 = loc196
	v223 = 0x14<32>
	v224 = v222 + v223
	loc157 = v224
	v225 = loc196
	v226 = 8<32>
	v227 = v225 + v226
	loc160 = v227
	v228 = loc196
	loc163 = v228
	v229 = arg1
	loc146 = v229
	v230 = arg2
	loc147 = v230
	v231 = arg3
	loc148 = v231
	v232 = arg4
	loc149 = v232
	v233 = arg5
	loc151 = v233
	v234 = arg0
	v235 = Mem0[v234:word32]
	loc164 = v235
	v236 = loc144
	loc142 = v236
	v237 = 0xFFFFFFFF<32>
	loc143 = v237
	v238 = loc142
	loc165 = v238
	v239 = loc165
	v240 = 0<32>
	Mem0[v239:word32] = v240
	v241 = loc144
	v242 = Mem0[v241:word32]
	loc166 = v242
	v243 = loc152
	v244 = loc166
	Mem0[v243:word32] = v244
	v245 = loc152
	loc141 = v245
	v246 = loc164
	v247 = 0<32>
	v248 = v246 == v247
	loc167 = v248
	v249 = loc167
	v249 = v249
	// succ:  l000D094B l000D094B
l000D094B:
	v250 = loc145
	v251 = arg0
	v252 = Mem0[v251:word32]
	Mem0[v250:word32] = v252
	v253 = loc145
	v254 = Mem0[v253:word32]
	loc104 = v254
	v255 = loc196
	Mem0[0x00140030<p32>:word32] = v255
	v256 = loc104
fn000D0874_exit:


// fn000D0E65
// Return size: 0
void fn000D0E65(word32 arg0)
fn000D0E65_entry:
	// succ:  l000D0E65
l000D0E65:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	v6 = ___cxa_begin_catch(v5)
fn000D0E65_exit:


// fn000D0E75
// Return size: 0
word32 fn000D0E75(word32 arg0, word32 arg1)
fn000D0E75_entry:
	// succ:  l000D0E75
l000D0E75:
	v9 = Mem0[0x00140030<p32>:word32]
	loc8 = v9
	v10 = Mem0[0x00140030<p32>:word32]
	v11 = 0x10<32>
	v12 = v10 + v11
	Mem0[0x00140030<p32>:word32] = v12
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = Mem0[0x00140034<p32>:word32]
	v15 = v13 >= v14
	branch !v15 l000D0E8E
	// succ:  l000D0E89 l000D0E8E
l000D0E89:
	v16 = 0x10<32>
	abortStackOverflow(v16)
	// succ:  l000D0E8E
l000D0E8E:
	v17 = arg0
	loc2 = v17
	v18 = arg1
	loc3 = v18
	v19 = loc2
	loc4 = v19
	v20 = loc3
	loc5 = v20
	v21 = loc4
	v22 = loc5
	v23 = v21 == v22
	loc6 = v23
	v24 = loc8
	Mem0[0x00140030<p32>:word32] = v24
	v25 = loc6
fn000D0E75_exit:


// fn000D0EAE
// Return size: 0
word32 fn000D0EAE()
fn000D0EAE_entry:
	// succ:  l000D0EAE
l000D0EAE:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	v5 = 0xFFFFFFFF<32>
fn000D0EAE_exit:


// __GLOBAL__sub_I_hello_cpp
// Return size: 0
void __GLOBAL__sub_I_hello_cpp()
__GLOBAL__sub_I_hello_cpp_entry:
	// succ:  l000D0EB9
l000D0EB9:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	fn000D0082()
__GLOBAL__sub_I_hello_cpp_exit:


// fn000D0EC4
// Return size: 0
word32 fn000D0EC4(word32 arg0)
fn000D0EC4_entry:
	// succ:  l000D0EC4
l000D0EC4:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v10 = Mem0[0x00140030<p32>:word32]
	v11 = 0x10<32>
	v12 = v10 + v11
	Mem0[0x00140030<p32>:word32] = v12
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = Mem0[0x00140034<p32>:word32]
	v15 = v13 >= v14
	branch !v15 l000D0EDD
	// succ:  l000D0ED8 l000D0EDD
l000D0ED8:
	v16 = 0x10<32>
	abortStackOverflow(v16)
	// succ:  l000D0EDD
l000D0EDD:
	v17 = loc7
	loc5 = v17
	v18 = arg0
	v19 = 0x3C<32>
	v20 = v18 + v19
	loc1 = v20
	v21 = loc1
	v22 = Mem0[v21:word32]
	loc2 = v22
	v23 = loc5
	v24 = loc2
	Mem0[v23:word32] = v24
	v25 = 6<32>
	v26 = loc5
	v27 = ___syscall6(v25, v26)
	loc3 = v27
	v28 = loc3
	v29 = fn000D12B7(v28)
	loc4 = v29
	v30 = loc7
	Mem0[0x00140030<p32>:word32] = v30
	v31 = loc4
fn000D0EC4_exit:


// fn000D0F0D
// Return size: 0
word32 fn000D0F0D(word32 arg0, word32 arg1, word32 arg2)
fn000D0F0D_entry:
	// succ:  l000D0F0D
l000D0F0D:
	v71 = Mem0[0x00140030<p32>:word32]
	loc71 = v71
	v72 = Mem0[0x00140030<p32>:word32]
	v73 = 0x30<32>
	v74 = v72 + v73
	Mem0[0x00140030<p32>:word32] = v74
	v75 = Mem0[0x00140030<p32>:word32]
	v76 = Mem0[0x00140034<p32>:word32]
	v77 = v75 >= v76
	branch !v77 l000D0F26
	// succ:  l000D0F21 l000D0F26
l000D0F21:
	v78 = 0x30<32>
	abortStackOverflow(v78)
	// succ:  l000D0F26
l000D0F26:
	v79 = loc71
	v80 = 0x10<32>
	v81 = v79 + v80
	loc65 = v81
	v82 = loc71
	loc64 = v82
	v83 = loc71
	v84 = 0x20<32>
	v85 = v83 + v84
	loc33 = v85
	v86 = arg0
	v87 = 0x1C<32>
	v88 = v86 + v87
	loc44 = v88
	v89 = loc44
	v90 = Mem0[v89:word32]
	loc55 = v90
	v91 = loc33
	v92 = loc55
	Mem0[v91:word32] = v92
	v93 = loc33
	v94 = 4<32>
	v95 = v93 + v94
	loc60 = v95
	v96 = arg0
	v97 = 0x14<32>
	v98 = v96 + v97
	loc61 = v98
	v99 = loc61
	v100 = Mem0[v99:word32]
	loc62 = v100
	v101 = loc62
	v102 = loc55
	v103 = v101 - v102
	loc63 = v103
	v104 = loc60
	v105 = loc63
	Mem0[v104:word32] = v105
	v106 = loc33
	v107 = 8<32>
	v108 = v106 + v107
	loc13 = v108
	v109 = loc13
	v110 = arg1
	Mem0[v109:word32] = v110
	v111 = loc33
	v112 = 0xC<32>
	v113 = v111 + v112
	loc14 = v113
	v114 = loc14
	v115 = arg2
	Mem0[v114:word32] = v115
	v116 = loc63
	v117 = arg2
	v118 = v116 + v117
	loc15 = v118
	v119 = arg0
	v120 = 0x3C<32>
	v121 = v119 + v120
	loc16 = v121
	v122 = arg0
	v123 = 0x2C<32>
	v124 = v122 + v123
	loc17 = v124
	v125 = 2<32>
	loc4 = v125
	v126 = loc15
	loc5 = v126
	v127 = loc33
	loc6 = v127
	// succ:  l000D0FAF
l000D0FAF:
	v128 = 0x4624<32>
	v129 = Mem0[v128:word32]
	loc18 = v129
	v130 = loc18
	v131 = 0<32>
	v132 = v130 == v131
	loc19 = v132
	v133 = loc19
	branch !v133 l000D1003
	// succ:  l000D0FC5 l000D1003
l000D0FC5:
	v134 = loc16
	v135 = Mem0[v134:word32]
	loc23 = v135
	v136 = loc65
	v137 = loc23
	Mem0[v136:word32] = v137
	v138 = loc65
	v139 = 4<32>
	v140 = v138 + v139
	loc68 = v140
	v141 = loc68
	v142 = loc6
	Mem0[v141:word32] = v142
	v143 = loc65
	v144 = 8<32>
	v145 = v143 + v144
	loc69 = v145
	v146 = loc69
	v147 = loc4
	Mem0[v146:word32] = v147
	v148 = 0x92<32>
	v149 = loc65
	v150 = ___syscall146(v148, v149)
	loc24 = v150
	v151 = loc24
	v152 = fn000D12B7(v151)
	loc25 = v152
	v153 = loc25
	loc3 = v153
	goto l000D104B
	// succ:  l000D104B
l000D1003:
	v154 = 0x16E<32>
	v155 = arg0
	_pthread_cleanup_push(v154, v155)
	v156 = loc16
	v157 = Mem0[v156:word32]
	loc20 = v157
	v158 = loc64
	v159 = loc20
	Mem0[v158:word32] = v159
	v160 = loc64
	v161 = 4<32>
	v162 = v160 + v161
	loc66 = v162
	v163 = loc66
	v164 = loc6
	Mem0[v163:word32] = v164
	v165 = loc64
	v166 = 8<32>
	v167 = v165 + v166
	loc67 = v167
	v168 = loc67
	v169 = loc4
	Mem0[v168:word32] = v169
	v170 = 0x92<32>
	v171 = loc64
	v172 = ___syscall146(v170, v171)
	loc21 = v172
	v173 = loc21
	v174 = fn000D12B7(v173)
	loc22 = v174
	v175 = 0<32>
	_pthread_cleanup_pop(v175)
	v176 = loc22
	loc3 = v176
	// succ:  l000D104B
l000D104B:
	v177 = loc5
	v178 = loc3
	v179 = v177 == v178
	loc26 = v179
	v180 = loc26
	branch !v180 l000D105E
	// succ:  l000D1057 l000D105E
l000D1057:
	v181 = 6<32>
	loc70 = v181
	goto l000D1154
	// succ:  l000D1154
l000D105E:
	v182 = loc3
	v183 = 0<32>
	v184 = v182 < v183
	loc34 = v184
	v185 = loc34
	branch !v185 l000D1070
	// succ:  l000D1069 l000D1070
l000D1069:
	v186 = 8<32>
	loc70 = v186
	goto l000D1154
	// succ:  l000D1154
l000D1070:
	v187 = loc5
	v188 = loc3
	v189 = v187 - v188
	loc42 = v189
	v190 = loc6
	v191 = 4<32>
	v192 = v190 + v191
	loc43 = v192
	v193 = loc43
	v194 = Mem0[v193:word32]
	loc45 = v194
	v195 = loc3
	v196 = loc45
	v197 = v195 >u v196
	loc46 = v197
	v198 = loc46
	branch !v198 l000D10D9
	// succ:  l000D1090 l000D10D9
l000D1090:
	v199 = loc17
	v200 = Mem0[v199:word32]
	loc47 = v200
	v201 = loc44
	v202 = loc47
	Mem0[v201:word32] = v202
	v203 = loc61
	v204 = loc47
	Mem0[v203:word32] = v204
	v205 = loc3
	v206 = loc45
	v207 = v205 - v206
	loc48 = v207
	v208 = loc6
	v209 = 8<32>
	v210 = v208 + v209
	loc49 = v210
	v211 = loc4
	v212 = 0xFFFFFFFF<32>
	v213 = v211 + v212
	loc50 = v213
	v214 = loc6
	v215 = 0xC<32>
	v216 = v214 + v215
	loc11 = v216
	v217 = loc11
	v218 = Mem0[v217:word32]
	loc12 = v218
	v219 = loc48
	loc8 = v219
	v220 = loc50
	loc9 = v220
	v221 = loc49
	loc10 = v221
	v222 = loc12
	loc59 = v222
	goto l000D111B
	// succ:  l000D111B
l000D10D9:
	v223 = loc4
	v224 = 2<32>
	v225 = v223 == v224
	loc51 = v225
	v226 = loc51
	branch !v226 l000D110A
	// succ:  l000D10E4 l000D110A
l000D10E4:
	v227 = loc44
	v228 = Mem0[v227:word32]
	loc52 = v228
	v229 = loc52
	v230 = loc3
	v231 = v229 + v230
	loc53 = v231
	v232 = loc44
	v233 = loc53
	Mem0[v232:word32] = v233
	v234 = loc3
	loc8 = v234
	v235 = 2<32>
	loc9 = v235
	v236 = loc6
	loc10 = v236
	v237 = loc45
	loc59 = v237
	goto l000D111A
	// succ:  l000D111A
l000D110A:
	v238 = loc3
	loc8 = v238
	v239 = loc4
	loc9 = v239
	v240 = loc6
	loc10 = v240
	v241 = loc45
	loc59 = v241
	// succ:  l000D111A
l000D111A:
	// succ:  l000D111B
l000D111B:
	v242 = loc10
	v243 = Mem0[v242:word32]
	loc54 = v243
	v244 = loc54
	v245 = loc8
	v246 = v244 + v245
	loc56 = v246
	v247 = loc10
	v248 = loc56
	Mem0[v247:word32] = v248
	v249 = loc10
	v250 = 4<32>
	v251 = v249 + v250
	loc57 = v251
	v252 = loc59
	v253 = loc8
	v254 = v252 - v253
	loc58 = v254
	v255 = loc57
	v256 = loc58
	Mem0[v255:word32] = v256
	v257 = loc9
	loc4 = v257
	v258 = loc42
	loc5 = v258
	v259 = loc10
	loc6 = v259
	goto l000D0F26
	// succ:  l000D0F26
l000D1154:
	v260 = loc70
	v261 = 6<32>
	v262 = v260 == v261
	branch !v262 l000D119E
	// succ:  l000D115D l000D119E
l000D115D:
	v263 = loc17
	v264 = Mem0[v263:word32]
	loc27 = v264
	v265 = arg0
	v266 = 0x30<32>
	v267 = v265 + v266
	loc28 = v267
	v268 = loc28
	v269 = Mem0[v268:word32]
	loc29 = v269
	v270 = loc27
	v271 = loc29
	v272 = v270 + v271
	loc30 = v272
	v273 = arg0
	v274 = 0x10<32>
	v275 = v273 + v274
	loc31 = v275
	v276 = loc31
	v277 = loc30
	Mem0[v276:word32] = v277
	v278 = loc27
	loc32 = v278
	v279 = loc44
	v280 = loc32
	Mem0[v279:word32] = v280
	v281 = loc61
	v282 = loc32
	Mem0[v281:word32] = v282
	v283 = arg2
	loc7 = v283
	goto l000D1201
	// succ:  l000D1201
l000D119E:
	v284 = loc70
	v285 = 8<32>
	v286 = v284 == v285
	branch !v286 l000D1201
	// succ:  l000D11A5 l000D1201
l000D11A5:
	v287 = arg0
	v288 = 0x10<32>
	v289 = v287 + v288
	loc35 = v289
	v290 = loc35
	v291 = 0<32>
	Mem0[v290:word32] = v291
	v292 = loc44
	v293 = 0<32>
	Mem0[v292:word32] = v293
	v294 = loc61
	v295 = 0<32>
	Mem0[v294:word32] = v295
	v296 = arg0
	v297 = Mem0[v296:word32]
	loc36 = v297
	v298 = loc36
	v299 = 0x20<32>
	v300 = v298 | v299
	loc37 = v300
	v301 = arg0
	v302 = loc37
	Mem0[v301:word32] = v302
	v303 = loc4
	v304 = 2<32>
	v305 = v303 == v304
	loc38 = v305
	v306 = loc38
	branch !v306 l000D11E6
	// succ:  l000D11E1 l000D11E6
l000D11E1:
	v307 = 0<32>
	loc7 = v307
	goto l000D11FF
	// succ:  l000D11FF
l000D11E6:
	v308 = loc6
	v309 = 4<32>
	v310 = v308 + v309
	loc39 = v310
	v311 = loc39
	v312 = Mem0[v311:word32]
	loc40 = v312
	v313 = arg2
	v314 = loc40
	v315 = v313 - v314
	loc41 = v315
	v316 = loc41
	loc7 = v316
	// succ:  l000D11FF
l000D11FF:
	// succ:  l000D1201
l000D1201:
	// succ:  l000D1201
l000D1201:
	v317 = loc71
	Mem0[0x00140030<p32>:word32] = v317
	v318 = loc7
fn000D0F0D_exit:


// fn000D120B
// Return size: 0
word32 fn000D120B(word32 arg0, word32 arg1, word32 arg2)
fn000D120B_entry:
	// succ:  l000D120B
l000D120B:
	v17 = Mem0[0x00140030<p32>:word32]
	loc17 = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = 0x20<32>
	v20 = v18 + v19
	Mem0[0x00140030<p32>:word32] = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = Mem0[0x00140034<p32>:word32]
	v23 = v21 >= v22
	branch !v23 l000D1224
	// succ:  l000D121F l000D1224
l000D121F:
	v24 = 0x20<32>
	abortStackOverflow(v24)
	// succ:  l000D1224
l000D1224:
	v25 = loc17
	loc11 = v25
	v26 = loc17
	v27 = 0x14<32>
	v28 = v26 + v27
	loc4 = v28
	v29 = arg0
	v30 = 0x3C<32>
	v31 = v29 + v30
	loc5 = v31
	v32 = loc5
	v33 = Mem0[v32:word32]
	loc6 = v33
	v34 = loc11
	v35 = loc6
	Mem0[v34:word32] = v35
	v36 = loc11
	v37 = 4<32>
	v38 = v36 + v37
	loc12 = v38
	v39 = loc12
	v40 = 0<32>
	Mem0[v39:word32] = v40
	v41 = loc11
	v42 = 8<32>
	v43 = v41 + v42
	loc13 = v43
	v44 = loc13
	v45 = arg1
	Mem0[v44:word32] = v45
	v46 = loc11
	v47 = 0xC<32>
	v48 = v46 + v47
	loc14 = v48
	v49 = loc14
	v50 = loc4
	Mem0[v49:word32] = v50
	v51 = loc11
	v52 = 0x10<32>
	v53 = v51 + v52
	loc15 = v53
	v54 = loc15
	v55 = arg2
	Mem0[v54:word32] = v55
	v56 = 0x8C<32>
	v57 = loc11
	v58 = ___syscall140(v56, v57)
	loc7 = v58
	v59 = loc7
	v60 = fn000D12B7(v59)
	loc8 = v60
	v61 = loc8
	v62 = 0<32>
	v63 = v61 < v62
	loc9 = v63
	v64 = loc9
	branch !v64 l000D12A2
	// succ:  l000D1296 l000D12A2
l000D1296:
	v65 = loc4
	v66 = 0xFFFFFFFF<32>
	Mem0[v65:word32] = v66
	v67 = 0xFFFFFFFF<32>
	loc10 = v67
	goto l000D12AD
	// succ:  l000D12AD
l000D12A2:
	v68 = loc4
	v69 = Mem0[v68:word32]
	loc3 = v69
	v70 = loc3
	loc10 = v70
	// succ:  l000D12AD
l000D12AD:
	v71 = loc17
	Mem0[0x00140030<p32>:word32] = v71
	v72 = loc10
fn000D120B_exit:


// fn000D12B7
// Return size: 0
word32 fn000D12B7(word32 arg0)
fn000D12B7_entry:
	// succ:  l000D12B7
l000D12B7:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v9 = arg0
	v10 = 0xFFFFF000<32>
	v11 = v9 >u v10
	loc2 = v11
	v12 = loc2
	branch !v12 l000D12E0
	// succ:  l000D12C9 l000D12E0
l000D12C9:
	v13 = 0<32>
	v14 = arg0
	v15 = v13 - v14
	loc3 = v15
	v16 = ___errno_location()
	loc4 = v16
	v17 = loc4
	v18 = loc3
	Mem0[v17:word32] = v18
	v19 = 0xFFFFFFFF<32>
	loc1 = v19
	goto l000D12E4
	// succ:  l000D12E4
l000D12E0:
	v20 = arg0
	loc1 = v20
	// succ:  l000D12E4
l000D12E4:
	v21 = loc1
fn000D12B7_exit:


// ___errno_location
// Return size: 0
word32 ___errno_location()
___errno_location_entry:
	// succ:  l000D12EA
l000D12EA:
	v10 = Mem0[0x00140030<p32>:word32]
	loc7 = v10
	v11 = 0x4624<32>
	v12 = Mem0[v11:word32]
	loc1 = v12
	v13 = loc1
	v14 = 0<32>
	v15 = v13 == v14
	loc2 = v15
	v16 = loc2
	branch !v16 l000D130B
	// succ:  l000D1304 l000D130B
l000D1304:
	v17 = 0x4650<32>
	loc0 = v17
	goto l000D1323
	// succ:  l000D1323
l000D130B:
	v18 = _pthread_self()
	loc3 = v18
	v19 = loc3
	v20 = 0x40<32>
	v21 = v19 + v20
	loc4 = v21
	v22 = loc4
	v23 = Mem0[v22:word32]
	loc5 = v23
	v24 = loc5
	loc0 = v24
	// succ:  l000D1323
l000D1323:
	v25 = loc0
___errno_location_exit:


// fn000D1329
// Return size: 0
void fn000D1329(word32 arg0)
fn000D1329_entry:
	// succ:  l000D1329
l000D1329:
	v7 = Mem0[0x00140030<p32>:word32]
	loc5 = v7
	v8 = arg0
	v9 = 0x44<32>
	v10 = v8 + v9
	loc1 = v10
	v11 = loc1
	v12 = Mem0[v11:word32]
	loc2 = v12
	v13 = loc2
	v14 = 0<32>
	v15 = v13 == v14
	loc3 = v15
	v16 = loc3
	branch !v16 l000D134E
	// succ:  l000D1349 l000D134E
l000D1349:
	v17 = arg0
	fn000D1351(v17)
	// succ:  l000D134E
l000D134E:
fn000D1329_exit:


// fn000D1351
// Return size: 0
void fn000D1351(word32 arg0)
fn000D1351_entry:
	// succ:  l000D1351
l000D1351:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn000D1351_exit:


// fn000D135A
// Return size: 0
word32 fn000D135A(word32 arg0, word32 arg1, word32 arg2)
fn000D135A_entry:
	// succ:  l000D135A
l000D135A:
	v54 = Mem0[0x00140030<p32>:word32]
	loc54 = v54
	v55 = Mem0[0x00140030<p32>:word32]
	v56 = 0x30<32>
	v57 = v55 + v56
	Mem0[0x00140030<p32>:word32] = v57
	v58 = Mem0[0x00140030<p32>:word32]
	v59 = Mem0[0x00140034<p32>:word32]
	v60 = v58 >= v59
	branch !v60 l000D1373
	// succ:  l000D136E l000D1373
l000D136E:
	v61 = 0x30<32>
	abortStackOverflow(v61)
	// succ:  l000D1373
l000D1373:
	v62 = loc54
	v63 = 0x10<32>
	v64 = v62 + v63
	loc48 = v64
	v65 = loc54
	loc47 = v65
	v66 = loc54
	v67 = 0x20<32>
	v68 = v66 + v67
	loc26 = v68
	v69 = loc26
	v70 = arg1
	Mem0[v69:word32] = v70
	v71 = loc26
	v72 = 4<32>
	v73 = v71 + v72
	loc37 = v73
	v74 = arg0
	v75 = 0x30<32>
	v76 = v74 + v75
	loc42 = v76
	v77 = loc42
	v78 = Mem0[v77:word32]
	loc43 = v78
	v79 = loc43
	v80 = 0<32>
	v81 = v79 != v80
	loc44 = v81
	v82 = loc44
	v83 = 1<32>
	v84 = v82 & v83
	loc45 = v84
	v85 = arg2
	v86 = loc45
	v87 = v85 - v86
	loc46 = v87
	v88 = loc37
	v89 = loc46
	Mem0[v88:word32] = v89
	v90 = loc26
	v91 = 8<32>
	v92 = v90 + v91
	loc6 = v92
	v93 = arg0
	v94 = 0x2C<32>
	v95 = v93 + v94
	loc7 = v95
	v96 = loc7
	v97 = Mem0[v96:word32]
	loc8 = v97
	v98 = loc6
	v99 = loc8
	Mem0[v98:word32] = v99
	v100 = loc26
	v101 = 0xC<32>
	v102 = v100 + v101
	loc9 = v102
	v103 = loc9
	v104 = loc43
	Mem0[v103:word32] = v104
	v105 = 0x4624<32>
	v106 = Mem0[v105:word32]
	loc10 = v106
	v107 = loc10
	v108 = 0<32>
	v109 = v107 == v108
	loc11 = v109
	v110 = loc11
	branch !v110 l000D1440
	// succ:  l000D13FB l000D1440
l000D13FB:
	v111 = arg0
	v112 = 0x3C<32>
	v113 = v111 + v112
	loc16 = v113
	v114 = loc16
	v115 = Mem0[v114:word32]
	loc17 = v115
	v116 = loc48
	v117 = loc17
	Mem0[v116:word32] = v117
	v118 = loc48
	v119 = 4<32>
	v120 = v118 + v119
	loc51 = v120
	v121 = loc51
	v122 = loc26
	Mem0[v121:word32] = v122
	v123 = loc48
	v124 = 8<32>
	v125 = v123 + v124
	loc52 = v125
	v126 = loc52
	v127 = 2<32>
	Mem0[v126:word32] = v127
	v128 = 0x91<32>
	v129 = loc48
	v130 = ___syscall145(v128, v129)
	loc18 = v130
	v131 = loc18
	v132 = fn000D12B7(v131)
	loc19 = v132
	v133 = loc19
	loc3 = v133
	goto l000D148F
	// succ:  l000D148F
l000D1440:
	v134 = 0x16F<32>
	v135 = arg0
	_pthread_cleanup_push(v134, v135)
	v136 = arg0
	v137 = 0x3C<32>
	v138 = v136 + v137
	loc12 = v138
	v139 = loc12
	v140 = Mem0[v139:word32]
	loc13 = v140
	v141 = loc47
	v142 = loc13
	Mem0[v141:word32] = v142
	v143 = loc47
	v144 = 4<32>
	v145 = v143 + v144
	loc49 = v145
	v146 = loc49
	v147 = loc26
	Mem0[v146:word32] = v147
	v148 = loc47
	v149 = 8<32>
	v150 = v148 + v149
	loc50 = v150
	v151 = loc50
	v152 = 2<32>
	Mem0[v151:word32] = v152
	v153 = 0x91<32>
	v154 = loc47
	v155 = ___syscall145(v153, v154)
	loc14 = v155
	v156 = loc14
	v157 = fn000D12B7(v156)
	loc15 = v157
	v158 = 0<32>
	_pthread_cleanup_pop(v158)
	v159 = loc15
	loc3 = v159
	// succ:  l000D148F
l000D148F:
	v160 = loc3
	v161 = 1<32>
	v162 = v160 < v161
	loc20 = v162
	v163 = loc20
	branch !v163 l000D14DF
	// succ:  l000D149B l000D14DF
l000D149B:
	v164 = loc3
	v165 = 0x30<32>
	v166 = v164 & v165
	loc21 = v166
	v167 = loc21
	v168 = 0x10<32>
	v169 = v167 ^ v168
	loc22 = v169
	v170 = arg0
	v171 = Mem0[v170:word32]
	loc23 = v171
	v172 = loc23
	v173 = loc22
	v174 = v172 | v173
	loc24 = v174
	v175 = arg0
	v176 = loc24
	Mem0[v175:word32] = v176
	v177 = arg0
	v178 = 8<32>
	v179 = v177 + v178
	loc25 = v179
	v180 = loc25
	v181 = 0<32>
	Mem0[v180:word32] = v181
	v182 = arg0
	v183 = 4<32>
	v184 = v182 + v183
	loc27 = v184
	v185 = loc27
	v186 = 0<32>
	Mem0[v185:word32] = v186
	v187 = loc3
	loc4 = v187
	goto l000D1572
	// succ:  l000D1572
l000D14DF:
	v188 = loc37
	v189 = Mem0[v188:word32]
	loc28 = v189
	v190 = loc3
	v191 = loc28
	v192 = v190 >u v191
	loc29 = v192
	v193 = loc29
	branch !v193 l000D156D
	// succ:  l000D14F1 l000D156D
l000D14F1:
	v194 = loc3
	v195 = loc28
	v196 = v194 - v195
	loc30 = v196
	v197 = loc7
	v198 = Mem0[v197:word32]
	loc31 = v198
	v199 = arg0
	v200 = 4<32>
	v201 = v199 + v200
	loc32 = v201
	v202 = loc32
	v203 = loc31
	Mem0[v202:word32] = v203
	v204 = loc31
	loc5 = v204
	v205 = loc5
	v206 = loc30
	v207 = v205 + v206
	loc33 = v207
	v208 = arg0
	v209 = 8<32>
	v210 = v208 + v209
	loc34 = v210
	v211 = loc34
	v212 = loc33
	Mem0[v211:word32] = v212
	v213 = loc42
	v214 = Mem0[v213:word32]
	loc35 = v214
	v215 = loc35
	v216 = 0<32>
	v217 = v215 == v216
	loc36 = v217
	v218 = loc36
	branch !v218 l000D153D
	// succ:  l000D1538 l000D153D
l000D1538:
	v219 = arg2
	loc4 = v219
	goto l000D156B
	// succ:  l000D156B
l000D153D:
	v220 = loc5
	v221 = 1<32>
	v222 = v220 + v221
	loc38 = v222
	v223 = loc32
	v224 = loc38
	Mem0[v223:word32] = v224
	v225 = loc5
	v226 = Mem0[v225:int8]
	v227 = CONVERT(v226, int8, word32)
	loc39 = v227
	v228 = arg2
	v229 = 0xFFFFFFFF<32>
	v230 = v228 + v229
	loc40 = v230
	v231 = arg1
	v232 = loc40
	v233 = v231 + v232
	loc41 = v233
	v234 = loc41
	v235 = loc39
	v236 = SLICE(v235, byte, 0)
	Mem0[v234:byte] = v236
	v237 = arg2
	loc4 = v237
	// succ:  l000D156B
l000D156B:
	goto l000D1571
	// succ:  l000D1571
l000D156D:
	v238 = loc3
	loc4 = v238
	// succ:  l000D1571
l000D1571:
	// succ:  l000D1572
l000D1572:
	v239 = loc54
	Mem0[0x00140030<p32>:word32] = v239
	v240 = loc4
fn000D135A_exit:


// fn000D157C
// Return size: 0
void fn000D157C(word32 arg0)
fn000D157C_entry:
	// succ:  l000D157C
l000D157C:
	v7 = Mem0[0x00140030<p32>:word32]
	loc5 = v7
	v8 = arg0
	v9 = 0x44<32>
	v10 = v8 + v9
	loc1 = v10
	v11 = loc1
	v12 = Mem0[v11:word32]
	loc2 = v12
	v13 = loc2
	v14 = 0<32>
	v15 = v13 == v14
	loc3 = v15
	v16 = loc3
	branch !v16 l000D15A1
	// succ:  l000D159C l000D15A1
l000D159C:
	v17 = arg0
	fn000D1351(v17)
	// succ:  l000D15A1
l000D15A1:
fn000D157C_exit:


// fn000D15A4
// Return size: 0
word32 fn000D15A4(word32 arg0, word32 arg1, word32 arg2)
fn000D15A4_entry:
	// succ:  l000D15A4
l000D15A4:
	v18 = Mem0[0x00140030<p32>:word32]
	loc18 = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = 0x50<32>
	v21 = v19 + v20
	Mem0[0x00140030<p32>:word32] = v21
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = Mem0[0x00140034<p32>:word32]
	v24 = v22 >= v23
	branch !v24 l000D15BF
	// succ:  l000D15B9 l000D15BF
l000D15B9:
	v25 = 0x50<32>
	abortStackOverflow(v25)
	// succ:  l000D15BF
l000D15BF:
	v26 = loc18
	loc14 = v26
	v27 = loc18
	v28 = 0xC<32>
	v29 = v27 + v28
	loc7 = v29
	v30 = arg0
	v31 = 0x24<32>
	v32 = v30 + v31
	loc8 = v32
	v33 = loc8
	v34 = 2<32>
	Mem0[v33:word32] = v34
	v35 = arg0
	v36 = Mem0[v35:word32]
	loc9 = v36
	v37 = loc9
	v38 = 0x40<32>
	v39 = v37 & v38
	loc10 = v39
	v40 = loc10
	v41 = 0<32>
	v42 = v40 == v41
	loc11 = v42
	v43 = loc11
	branch !v43 l000D164A
	// succ:  l000D15F2 l000D164A
l000D15F2:
	v44 = arg0
	v45 = 0x3C<32>
	v46 = v44 + v45
	loc12 = v46
	v47 = loc12
	v48 = Mem0[v47:word32]
	loc13 = v48
	v49 = loc14
	v50 = loc13
	Mem0[v49:word32] = v50
	v51 = loc14
	v52 = 4<32>
	v53 = v51 + v52
	loc15 = v53
	v54 = loc15
	v55 = 0x5401<32>
	Mem0[v54:word32] = v55
	v56 = loc14
	v57 = 8<32>
	v58 = v56 + v57
	loc16 = v58
	v59 = loc16
	v60 = loc7
	Mem0[v59:word32] = v60
	v61 = 0x36<32>
	v62 = loc14
	v63 = ___syscall54(v61, v62)
	loc3 = v63
	v64 = loc3
	v65 = 0<32>
	v66 = v64 == v65
	loc4 = v66
	v67 = loc4
	v68 = v67 == 0<32>
	branch !v68 l000D1649
	// succ:  l000D1639 l000D1649
l000D1639:
	v69 = arg0
	v70 = 0x4B<32>
	v71 = v69 + v70
	loc5 = v71
	v72 = loc5
	v73 = 0xFFFFFFFF<32>
	v74 = SLICE(v73, byte, 0)
	Mem0[v72:byte] = v74
	// succ:  l000D1649
l000D1649:
	// succ:  l000D164A
l000D164A:
	v75 = arg0
	v76 = arg1
	v77 = arg2
	v78 = fn000D0F0D(v75, v76, v77)
	loc6 = v78
	v79 = loc18
	Mem0[0x00140030<p32>:word32] = v79
	v80 = loc6
fn000D15A4_exit:


// fn000D165D
// Return size: 0
word64 fn000D165D(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000D165D_entry:
	// succ:  l000D165D
l000D165D:
	v5 = Mem0[0x00140030<p32>:word32]
	loc5 = v5
	v6 = arg0
	v7 = arg1
	v8 = arg2
	v9 = fn000D1672(v6, v7, v8)
	loc6 = v9
	v10 = loc6
fn000D165D_exit:


// fn000D1672
// Return size: 0
word64 fn000D1672(word32 arg0, word32 arg1, word32 arg2)
fn000D1672_entry:
	// succ:  l000D1672
l000D1672:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v6 = arg0
	v7 = arg1
	v8 = arg2
	v9 = 0xFFFFFFFFFFFFFFFF<64>
	v10 = fn000D1689(v6, v7, v8, v9)
	loc5 = v10
	v11 = loc5
fn000D1672_exit:


// fn000D1689
// Return size: 0
word64 fn000D1689(word32 arg0, word32 arg1, word32 arg2, word64 arg3)
fn000D1689_entry:
	// succ:  l000D1689
l000D1689:
	v21 = Mem0[0x00140030<p32>:word32]
	loc21 = v21
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = 0x70<32>
	v24 = v22 + v23
	Mem0[0x00140030<p32>:word32] = v24
	v25 = Mem0[0x00140030<p32>:word32]
	v26 = Mem0[0x00140034<p32>:word32]
	v27 = v25 >= v26
	branch !v27 l000D16A4
	// succ:  l000D169E l000D16A4
l000D169E:
	v28 = 0x70<32>
	abortStackOverflow(v28)
	// succ:  l000D16A4
l000D16A4:
	v29 = loc21
	loc14 = v29
	v30 = loc14
	v31 = 0<32>
	Mem0[v30:word32] = v31
	v32 = loc14
	v33 = 4<32>
	v34 = v32 + v33
	loc15 = v34
	v35 = loc15
	v36 = arg0
	Mem0[v35:word32] = v36
	v37 = loc14
	v38 = 0x2C<32>
	v39 = v37 + v38
	loc16 = v39
	v40 = loc16
	v41 = arg0
	Mem0[v40:word32] = v41
	v42 = arg0
	v43 = 0<32>
	v44 = v42 < v43
	loc17 = v44
	v45 = arg0
	v46 = 0x7FFFFFFF<32>
	v47 = v45 + v46
	loc18 = v47
	v48 = loc17
	branch !v48 l000D16E4
	// succ:  l000D16E1 l000D16E4
l000D16E1:
	v49 = 0xFFFFFFFF<32>
	goto l000D16E6
	// succ:  l000D16E6
l000D16E4:
	v50 = loc18
	// succ:  l000D16E6
l000D16E6:
	loc4 = v50
	v51 = loc14
	v52 = 8<32>
	v53 = v51 + v52
	loc19 = v53
	v54 = loc19
	v55 = loc4
	Mem0[v54:word32] = v55
	v56 = loc14
	v57 = 0x4C<32>
	v58 = v56 + v57
	loc5 = v58
	v59 = loc5
	v60 = 0xFFFFFFFF<32>
	Mem0[v59:word32] = v60
	v61 = loc14
	v62 = 0<32>
	fn000D1767(v61, v62)
	v63 = loc14
	v64 = arg2
	v65 = 1<32>
	v66 = arg3
	v67 = fn000D1804(v63, v64, v65, v66)
	loc22 = v67
	v68 = arg1
	v69 = 0<32>
	v70 = v68 == v69
	loc6 = v70
	v71 = loc6
	v72 = v71 == 0<32>
	branch !v72 l000D175E
	// succ:  l000D1724 l000D175E
l000D1724:
	v73 = loc14
	v74 = 0x6C<32>
	v75 = v73 + v74
	loc7 = v75
	v76 = loc7
	v77 = Mem0[v76:word32]
	loc8 = v77
	v78 = loc15
	v79 = Mem0[v78:word32]
	loc9 = v79
	v80 = loc19
	v81 = Mem0[v80:word32]
	loc10 = v81
	v82 = loc9
	v83 = loc8
	v84 = v82 + v83
	loc11 = v84
	v85 = loc11
	v86 = loc10
	v87 = v85 - v86
	loc12 = v87
	v88 = arg0
	v89 = loc12
	v90 = v88 + v89
	loc13 = v90
	v91 = arg1
	v92 = loc13
	Mem0[v91:word32] = v92
	// succ:  l000D175E
l000D175E:
	v93 = loc21
	Mem0[0x00140030<p32>:word32] = v93
	v94 = loc22
fn000D1689_exit:


// fn000D1767
// Return size: 0
void fn000D1767(word32 arg0, word32 arg1)
fn000D1767_entry:
	// succ:  l000D1767
l000D1767:
	v18 = Mem0[0x00140030<p32>:word32]
	loc17 = v18
	v19 = arg0
	v20 = 0x68<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc7
	v23 = arg1
	Mem0[v22:word32] = v23
	v24 = arg0
	v25 = 8<32>
	v26 = v24 + v25
	loc8 = v26
	v27 = loc8
	v28 = Mem0[v27:word32]
	loc9 = v28
	v29 = arg0
	v30 = 4<32>
	v31 = v29 + v30
	loc10 = v31
	v32 = loc10
	v33 = Mem0[v32:word32]
	loc11 = v33
	v34 = loc9
	v35 = loc11
	v36 = v34 - v35
	loc12 = v36
	v37 = arg0
	v38 = 0x6C<32>
	v39 = v37 + v38
	loc13 = v39
	v40 = loc13
	v41 = loc12
	Mem0[v40:word32] = v41
	v42 = arg1
	v43 = 0<32>
	v44 = v42 != v43
	loc14 = v44
	v45 = loc12
	v46 = arg1
	v47 = v45 > v46
	loc2 = v47
	v48 = loc14
	v49 = loc2
	v50 = v48 & v49
	loc15 = v50
	v51 = loc15
	branch !v51 l000D17E2
	// succ:  l000D17C7 l000D17E2
l000D17C7:
	v52 = loc11
	loc3 = v52
	v53 = loc3
	v54 = arg1
	v55 = v53 + v54
	loc4 = v55
	v56 = arg0
	v57 = 0x64<32>
	v58 = v56 + v57
	loc5 = v58
	v59 = loc5
	v60 = loc4
	Mem0[v59:word32] = v60
	goto l000D17F1
	// succ:  l000D17F1
l000D17E2:
	v61 = arg0
	v62 = 0x64<32>
	v63 = v61 + v62
	loc6 = v63
	v64 = loc6
	v65 = loc9
	Mem0[v64:word32] = v65
	// succ:  l000D17F1
l000D17F1:
fn000D1767_exit:


// fn000D17F5
// Return size: 0
word64 fn000D17F5(word64 arg0, word64 arg1)
fn000D17F5_entry:
	// succ:  l000D17F5
l000D17F5:
	v2 = arg1
	v3 = v2 == 0<64>
	branch !v3 l000D17FD
	// succ:  l000D17FA l000D17FD
l000D17FA:
	v4 = 0<64>
	goto l000D1802
	// succ:  l000D1802
l000D17FD:
	v5 = arg0
	v6 = arg1
	v7 = v5 /u v6
	// succ:  l000D1802
l000D1802:
	return v7
	// succ:  fn000D17F5_exit
fn000D17F5_exit:


// fn000D1804
// Return size: 0
word64 fn000D1804(word32 arg0, word32 arg1, word32 arg2, word64 arg3)
fn000D1804_entry:
	// succ:  l000D1804
l000D1804:
	v277 = Mem0[0x00140030<p32>:word32]
	loc244 = v277
	v278 = arg1
	v279 = 0x24<32>
	v280 = v278 >u v279
	loc176 = v280
	// succ:  l000D1813
l000D1813:
	v281 = loc176
	branch !v281 l000D182D
	// succ:  l000D181A l000D182D
l000D181A:
	v282 = ___errno_location()
	loc209 = v282
	v283 = loc209
	v284 = 0x16<32>
	Mem0[v283:word32] = v284
	v285 = 0<64>
	loc245 = v285
l000D182D:
	v286 = arg0
	v287 = 4<32>
	v288 = v286 + v287
	loc187 = v288
	v289 = arg0
	v290 = 0x64<32>
	v291 = v289 + v290
	loc198 = v291
	// succ:  l000D1840
l000D1840:
	v292 = loc187
	v293 = Mem0[v292:word32]
	loc220 = v293
	v294 = loc198
	v295 = Mem0[v294:word32]
	loc229 = v295
	v296 = loc220
	v297 = loc229
	v298 = v296 <u v297
	loc32 = v298
	v299 = loc32
	branch !v299 l000D1886
	// succ:  l000D1861 l000D1886
l000D1861:
	v300 = loc220
	v301 = 1<32>
	v302 = v300 + v301
	loc43 = v302
	v303 = loc187
	v304 = loc43
	Mem0[v303:word32] = v304
	v305 = loc220
	v306 = Mem0[v305:int8]
	v307 = CONVERT(v306, int8, word32)
	loc54 = v307
	v308 = loc54
	v309 = 0xFF<32>
	v310 = v308 & v309
	loc65 = v310
	v311 = loc65
	loc82 = v311
	goto l000D1890
	// succ:  l000D1890
l000D1886:
	v312 = arg0
	v313 = fn000D2493(v312)
	loc74 = v313
	v314 = loc74
	loc82 = v314
	// succ:  l000D1890
l000D1890:
	v315 = loc82
	v316 = fn000D2665(v315)
	loc93 = v316
	v317 = loc93
	v318 = 0<32>
	v319 = v317 == v318
	loc104 = v319
	v320 = loc104
	branch !v320 l000D18A5
	// succ:  l000D18A2 l000D18A5
l000D18A2:
	goto l000D18A7
	// succ:  l000D18A7
l000D18A5:
	goto l000D182D
	// succ:  l000D182D
l000D18A7:
	v321 = loc82
	v322 = 0x2D<32>
	v323 = v321 == v322
	loc113 = v323
	// succ:  l000D18B0
l000D18B0:
	v324 = loc82
	v325 = 0x2B<32>
	v326 = v324 - v325
fn000D1804_exit:


// fn000D2493
// Return size: 0
word32 fn000D2493(word32 arg0)
fn000D2493_entry:
	// succ:  l000D2493
l000D2493:
	v51 = Mem0[0x00140030<p32>:word32]
	loc49 = v51
	v52 = arg0
	v53 = 0x68<32>
	v54 = v52 + v53
	loc6 = v54
	v55 = loc6
	v56 = Mem0[v55:word32]
	loc17 = v56
	v57 = loc17
	v58 = 0<32>
	v59 = v57 == v58
	loc28 = v59
	v60 = loc28
	branch !v60 l000D24B8
	// succ:  l000D24B3 l000D24B8
l000D24B3:
	v61 = 3<32>
	loc48 = v61
	goto l000D24DC
	// succ:  l000D24DC
l000D24B8:
	v62 = arg0
	v63 = 0x6C<32>
	v64 = v62 + v63
	loc39 = v64
	v65 = loc39
	v66 = Mem0[v65:word32]
	loc43 = v66
	v67 = loc43
	v68 = loc17
	v69 = v67 < v68
	loc44 = v69
	v70 = loc44
	branch !v70 l000D24D7
	// succ:  l000D24D2 l000D24D7
l000D24D2:
	v71 = 3<32>
	loc48 = v71
	goto l000D24DB
	// succ:  l000D24DB
l000D24D7:
	v72 = 4<32>
	loc48 = v72
	// succ:  l000D24DB
l000D24DB:
	// succ:  l000D24DC
l000D24DC:
	v73 = loc48
	v74 = 3<32>
	v75 = v73 == v74
	branch !v75 l000D2645
	// succ:  l000D24E4 l000D2645
l000D24E4:
	v76 = arg0
	v77 = fn000D2693(v76)
	loc45 = v77
	v78 = loc45
	v79 = 0<32>
	v80 = v78 < v79
	loc46 = v80
	v81 = loc46
	branch !v81 l000D24FA
	// succ:  l000D24F5 l000D24FA
l000D24F5:
	v82 = 4<32>
	loc48 = v82
	goto l000D2643
	// succ:  l000D2643
l000D24FA:
	v83 = loc6
	v84 = Mem0[v83:word32]
	loc7 = v84
	v85 = loc7
	v86 = 0<32>
	v87 = v85 == v86
	loc8 = v87
	v88 = arg0
	v89 = 8<32>
	v90 = v88 + v89
	loc2 = v90
	v91 = loc2
	v92 = Mem0[v91:word32]
	loc4 = v92
	v93 = loc8
	branch !v93 l000D2527
	// succ:  l000D251A l000D2527
l000D251A:
	v94 = loc4
	loc9 = v94
	v95 = loc9
	loc42 = v95
	v96 = 9<32>
	loc48 = v96
	goto l000D2590
	// succ:  l000D2590
l000D2527:
	v97 = arg0
	v98 = 4<32>
	v99 = v97 + v98
	loc10 = v99
	v100 = loc10
	v101 = Mem0[v100:word32]
	loc11 = v101
	v102 = loc11
	loc12 = v102
	v103 = loc4
	v104 = loc12
	v105 = v103 - v104
	loc13 = v105
	v106 = arg0
	v107 = 0x6C<32>
	v108 = v106 + v107
	loc14 = v108
	v109 = loc14
	v110 = Mem0[v109:word32]
	loc15 = v110
	v111 = loc7
	v112 = loc15
	v113 = v111 - v112
	loc16 = v113
	v114 = loc13
	v115 = loc16
	v116 = v114 < v115
	loc18 = v116
	v117 = loc4
	loc19 = v117
	v118 = loc18
	branch !v118 l000D256E
	// succ:  l000D2565 l000D256E
l000D2565:
	v119 = loc19
	loc42 = v119
	v120 = 9<32>
	loc48 = v120
	goto l000D258F
	// succ:  l000D258F
l000D256E:
	v121 = loc16
	v122 = 0xFFFFFFFF<32>
	v123 = v121 + v122
	loc20 = v123
	v124 = loc11
	v125 = loc20
	v126 = v124 + v125
	loc21 = v126
	v127 = arg0
	v128 = 0x64<32>
	v129 = v127 + v128
	loc22 = v129
	v130 = loc22
	v131 = loc21
	Mem0[v130:word32] = v131
	v132 = loc19
	loc25 = v132
	// succ:  l000D258F
l000D258F:
	// succ:  l000D2590
l000D2590:
	v133 = loc48
	v134 = 9<32>
	v135 = v133 == v134
	branch !v135 l000D25AC
	// succ:  l000D2598 l000D25AC
l000D2598:
	v136 = arg0
	v137 = 0x64<32>
	v138 = v136 + v137
	loc23 = v138
	v139 = loc23
	v140 = loc4
	Mem0[v139:word32] = v140
	v141 = loc42
	loc25 = v141
	// succ:  l000D25AC
l000D25AC:
	v142 = loc25
	v143 = 0<32>
	v144 = v142 == v143
	loc24 = v144
	v145 = arg0
	v146 = 4<32>
	v147 = v145 + v146
	loc3 = v147
	v148 = loc24
	branch !v148 l000D25CA
	// succ:  l000D25BE l000D25CA
l000D25BE:
	v149 = loc3
	v150 = Mem0[v149:word32]
	loc5 = v150
	v151 = loc5
	loc36 = v151
	goto l000D2608
	// succ:  l000D2608
l000D25CA:
	v152 = loc3
	v153 = Mem0[v152:word32]
	loc26 = v153
	v154 = loc25
	loc27 = v154
	v155 = arg0
	v156 = 0x6C<32>
	v157 = v155 + v156
	loc29 = v157
	v158 = loc29
	v159 = Mem0[v158:word32]
	loc30 = v159
	v160 = loc27
	v161 = 1<32>
	v162 = v160 + v161
	loc31 = v162
	v163 = loc31
	v164 = loc26
	v165 = v163 - v164
	loc32 = v165
	v166 = loc32
	v167 = loc30
	v168 = v166 + v167
	loc33 = v168
	v169 = loc29
	v170 = loc33
	Mem0[v169:word32] = v170
	v171 = loc26
	loc34 = v171
	v172 = loc34
	loc36 = v172
	// succ:  l000D2608
l000D2608:
	v173 = loc36
	v174 = 0xFFFFFFFF<32>
	v175 = v173 + v174
	loc35 = v175
	v176 = loc35
	v177 = Mem0[v176:int8]
	v178 = CONVERT(v177, int8, word32)
	loc37 = v178
	v179 = loc37
	v180 = 0xFF<32>
	v181 = v179 & v180
	loc38 = v181
	v182 = loc38
	v183 = loc45
	v184 = v182 == v183
	loc40 = v184
	v185 = loc40
	branch !v185 l000D262F
	// succ:  l000D262A l000D262F
l000D262A:
	v186 = loc45
	loc1 = v186
	goto l000D2642
	// succ:  l000D2642
l000D262F:
	v187 = loc45
	v188 = 0xFF<32>
	v189 = v187 & v188
	loc41 = v189
	v190 = loc35
	v191 = loc41
	v192 = SLICE(v191, byte, 0)
	Mem0[v190:byte] = v192
	v193 = loc45
	loc1 = v193
	// succ:  l000D2642
l000D2642:
	// succ:  l000D2643
l000D2643:
	// succ:  l000D2645
l000D2645:
	v194 = loc48
	v195 = 4<32>
	v196 = v194 == v195
	branch !v196 l000D2660
	// succ:  l000D264C l000D2660
l000D264C:
	v197 = arg0
	v198 = 0x64<32>
	v199 = v197 + v198
	loc47 = v199
	v200 = loc47
	v201 = 0<32>
	Mem0[v200:word32] = v201
	v202 = 0xFFFFFFFF<32>
	loc1 = v202
	// succ:  l000D2660
l000D2660:
	v203 = loc1
fn000D2493_exit:


// fn000D2665
// Return size: 0
word32 fn000D2665(word32 arg0)
fn000D2665_entry:
	// succ:  l000D2665
l000D2665:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v10 = arg0
	v11 = 0x20<32>
	v12 = v10 == v11
	loc1 = v12
	v13 = arg0
	v14 = 0xFFFFFFF7<32>
	v15 = v13 + v14
	loc2 = v15
	v16 = loc2
	v17 = 5<32>
	v18 = v16 <u v17
	loc3 = v18
	v19 = loc1
	v20 = loc3
	v21 = v19 | v20
	loc4 = v21
	v22 = loc4
	v23 = 1<32>
	v24 = v22 & v23
	loc5 = v24
	v25 = loc5
fn000D2665_exit:


// fn000D2693
// Return size: 0
word32 fn000D2693(word32 arg0)
fn000D2693_entry:
	// succ:  l000D2693
l000D2693:
	v17 = Mem0[0x00140030<p32>:word32]
	loc15 = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = 0x10<32>
	v20 = v18 + v19
	Mem0[0x00140030<p32>:word32] = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = Mem0[0x00140034<p32>:word32]
	v23 = v21 >= v22
	branch !v23 l000D26AC
	// succ:  l000D26A7 l000D26AC
l000D26A7:
	v24 = 0x10<32>
	abortStackOverflow(v24)
	// succ:  l000D26AC
l000D26AC:
	v25 = loc15
	loc2 = v25
	v26 = arg0
	v27 = 8<32>
	v28 = v26 + v27
	loc6 = v28
	v29 = loc6
	v30 = Mem0[v29:word32]
	loc7 = v30
	v31 = loc7
	v32 = 0<32>
	v33 = v31 == v32
	loc8 = v33
	v34 = loc8
	branch !v34 l000D26E5
	// succ:  l000D26C9 l000D26E5
l000D26C9:
	v35 = arg0
	v36 = fn000D2742(v35)
	loc9 = v36
	v37 = loc9
	v38 = 0<32>
	v39 = v37 == v38
	loc10 = v39
	v40 = loc10
	branch !v40 l000D26DF
	// succ:  l000D26DA l000D26DF
l000D26DA:
	v41 = 3<32>
	loc14 = v41
	goto l000D26E3
	// succ:  l000D26E3
l000D26DF:
	v42 = 0xFFFFFFFF<32>
	loc1 = v42
	// succ:  l000D26E3
l000D26E3:
	goto l000D26E9
	// succ:  l000D26E9
l000D26E5:
	v43 = 3<32>
	loc14 = v43
	// succ:  l000D26E9
l000D26E9:
	v44 = loc14
	v45 = 3<32>
	v46 = v44 == v45
	v46 = v46
	// succ:  l000D26F1 l000D26F1
l000D26F1:
	v47 = arg0
	v48 = 0x20<32>
	v49 = v47 + v48
	loc11 = v49
	v50 = loc11
	v51 = Mem0[v50:word32]
	loc12 = v51
	v52 = arg0
	v53 = loc2
	v54 = 1<32>
	v55 = loc12
	v56 = 0x1FF<32>
	v57 = v55 & v56
	v58 = 0xF20<32>
	v59 = v57 + v58
fn000D2693_exit:


// fn000D2742
// Return size: 0
word32 fn000D2742(word32 arg0)
fn000D2742_entry:
	// succ:  l000D2742
l000D2742:
	v29 = Mem0[0x00140030<p32>:word32]
	loc27 = v29
	v30 = arg0
	v31 = 0x4A<32>
	v32 = v30 + v31
	loc2 = v32
	v33 = loc2
	v34 = Mem0[v33:int8]
	v35 = CONVERT(v34, int8, word32)
	loc13 = v35
	v36 = loc13
	v37 = 0x18<32>
	v38 = v36 << v37
	v39 = 0x18<32>
	v40 = v38 >> v39
	loc19 = v40
	v41 = loc19
	v42 = 0xFF<32>
	v43 = v41 + v42
	loc20 = v43
	v44 = loc20
	v45 = loc19
	v46 = v44 | v45
	loc21 = v46
	v47 = loc21
	v48 = 0xFF<32>
	v49 = v47 & v48
	loc22 = v49
	v50 = loc2
	v51 = loc22
	v52 = SLICE(v51, byte, 0)
	Mem0[v50:byte] = v52
	v53 = arg0
	v54 = 0x14<32>
	v55 = v53 + v54
	loc23 = v55
	v56 = loc23
	v57 = Mem0[v56:word32]
	loc24 = v57
	v58 = arg0
	v59 = 0x2C<32>
	v60 = v58 + v59
	loc25 = v60
	v61 = loc25
	v62 = Mem0[v61:word32]
	loc3 = v62
	v63 = loc24
	v64 = loc3
	v65 = v63 >u v64
	loc4 = v65
	v66 = loc4
	v66 = v66
	// succ:  l000D27A6 l000D27A6
l000D27A6:
	v67 = arg0
	v68 = 0x24<32>
	v69 = v67 + v68
	loc5 = v69
	v70 = loc5
	v71 = Mem0[v70:word32]
	loc6 = v71
	v72 = arg0
	v73 = 0<32>
	v74 = 0<32>
	v75 = loc6
	v76 = 0x1FF<32>
	v77 = v75 & v76
	v78 = 0xF20<32>
	v79 = v77 + v78
fn000D2742_exit:


// fn000D285D
// Return size: 0
word64 fn000D285D(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000D285D_entry:
	// succ:  l000D285D
l000D285D:
	v5 = Mem0[0x00140030<p32>:word32]
	loc5 = v5
	v6 = arg0
	v7 = arg1
	v8 = arg2
	v9 = fn000D2872(v6, v7, v8)
	loc6 = v9
	v10 = loc6
fn000D285D_exit:


// fn000D2872
// Return size: 0
word64 fn000D2872(word32 arg0, word32 arg1, word32 arg2)
fn000D2872_entry:
	// succ:  l000D2872
l000D2872:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v6 = arg0
	v7 = arg1
	v8 = arg2
	v9 = 0x80000000<64>
	v10 = fn000D1689(v6, v7, v8, v9)
	loc5 = v10
	v11 = loc5
fn000D2872_exit:


// fn000D2892
// Return size: 0
real64 fn000D2892(real64 arg0, real64 arg1)
fn000D2892_entry:
	// succ:  l000D2892
l000D2892:
	v10 = Mem0[0x00140030<p32>:word32]
	loc3 = v10
	v11 = arg0
fn000D2892_exit:


// fn000D29A3
// Return size: 0
word32 fn000D29A3(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000D29A3_entry:
	// succ:  l000D29A3
l000D29A3:
	v30 = Mem0[0x00140030<p32>:word32]
	loc31 = v30
	v31 = Mem0[0x00140030<p32>:word32]
	v32 = 0x80<32>
	v33 = v31 + v32
	Mem0[0x00140030<p32>:word32] = v33
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = Mem0[0x00140034<p32>:word32]
	v36 = v34 >= v35
	branch !v36 l000D29BE
	// succ:  l000D29B8 l000D29BE
l000D29B8:
	v37 = 0x80<32>
	abortStackOverflow(v37)
	// succ:  l000D29BE
l000D29BE:
	v38 = loc31
	v39 = 0x70<32>
	v40 = v38 + v39
	loc24 = v40
	v41 = loc31
	loc25 = v41
	v42 = loc25
	v43 = 0xC74<32>
	v44 = Mem0[v43:word64]
	Mem0[v42:word64] = v44
	v45 = loc25
	v46 = 8<32>
	v47 = v45 + v46
	v48 = 0xC74<32>
	v49 = 8<32>
	v50 = v48 + v49
	v51 = Mem0[v50:word64]
	Mem0[v47:word64] = v51
	v52 = loc25
	v53 = 0x10<32>
	v54 = v52 + v53
	v55 = 0xC74<32>
	v56 = 0x10<32>
	v57 = v55 + v56
	v58 = Mem0[v57:word64]
	Mem0[v54:word64] = v58
	v59 = loc25
	v60 = 0x18<32>
	v61 = v59 + v60
	v62 = 0xC74<32>
	v63 = 0x18<32>
	v64 = v62 + v63
	v65 = Mem0[v64:word64]
	Mem0[v61:word64] = v65
	v66 = loc25
	v67 = 0x20<32>
	v68 = v66 + v67
	v69 = 0xC74<32>
	v70 = 0x20<32>
	v71 = v69 + v70
	v72 = Mem0[v71:word64]
	Mem0[v68:word64] = v72
	v73 = loc25
	v74 = 0x28<32>
	v75 = v73 + v74
	v76 = 0xC74<32>
	v77 = 0x28<32>
	v78 = v76 + v77
	v79 = Mem0[v78:word64]
	Mem0[v75:word64] = v79
	v80 = loc25
	v81 = 0x30<32>
	v82 = v80 + v81
	v83 = 0xC74<32>
	v84 = 0x30<32>
	v85 = v83 + v84
	v86 = Mem0[v85:word64]
	Mem0[v82:word64] = v86
	v87 = loc25
	v88 = 0x38<32>
	v89 = v87 + v88
	v90 = 0xC74<32>
	v91 = 0x38<32>
	v92 = v90 + v91
	v93 = Mem0[v92:word64]
	Mem0[v89:word64] = v93
	v94 = loc25
	v95 = 0x40<32>
	v96 = v94 + v95
	v97 = 0xC74<32>
	v98 = 0x40<32>
	v99 = v97 + v98
	v100 = Mem0[v99:word64]
	Mem0[v96:word64] = v100
	v101 = loc25
	v102 = 0x48<32>
	v103 = v101 + v102
	v104 = 0xC74<32>
	v105 = 0x48<32>
	v106 = v104 + v105
	v107 = Mem0[v106:word64]
	Mem0[v103:word64] = v107
	v108 = loc25
	v109 = 0x50<32>
	v110 = v108 + v109
	v111 = 0xC74<32>
	v112 = 0x50<32>
	v113 = v111 + v112
	v114 = Mem0[v113:word64]
	Mem0[v110:word64] = v114
	v115 = loc25
	v116 = 0x58<32>
	v117 = v115 + v116
	v118 = 0xC74<32>
	v119 = 0x58<32>
	v120 = v118 + v119
	v121 = Mem0[v120:word64]
	Mem0[v117:word64] = v121
	v122 = loc25
	v123 = 0x60<32>
	v124 = v122 + v123
	v125 = 0xC74<32>
	v126 = 0x60<32>
	v127 = v125 + v126
	v128 = Mem0[v127:word64]
	Mem0[v124:word64] = v128
	v129 = loc25
	v130 = 0x68<32>
	v131 = v129 + v130
	v132 = 0xC74<32>
	v133 = 0x68<32>
	v134 = v132 + v133
	v135 = Mem0[v134:word64]
	Mem0[v131:word64] = v135
	v136 = arg1
	v137 = 0xFFFFFFFF<32>
	v138 = v136 + v137
	loc26 = v138
	v139 = loc26
	v140 = 0x7FFFFFFE<32>
	v141 = v139 >u v140
	loc27 = v141
	v142 = loc27
	branch !v142 l000D2AFE
	// succ:  l000D2AD4 l000D2AFE
l000D2AD4:
	v143 = arg1
	v144 = 0<32>
	v145 = v143 == v144
	loc28 = v145
	v146 = loc28
	branch !v146 l000D2AEC
	// succ:  l000D2ADF l000D2AEC
l000D2ADF:
	v147 = loc24
	loc6 = v147
	v148 = 1<32>
	loc7 = v148
	v149 = 4<32>
	loc30 = v149
	goto l000D2AFC
	// succ:  l000D2AFC
l000D2AEC:
	v150 = ___errno_location()
	loc29 = v150
	v151 = loc29
	v152 = 0x4B<32>
	Mem0[v151:word32] = v152
	v153 = 0xFFFFFFFF<32>
	loc5 = v153
	// succ:  l000D2AFC
l000D2AFC:
	goto l000D2B0A
	// succ:  l000D2B0A
l000D2AFE:
	v154 = arg0
	loc6 = v154
	v155 = arg1
	loc7 = v155
	v156 = 4<32>
	loc30 = v156
	// succ:  l000D2B0A
l000D2B0A:
	v157 = loc30
	v158 = 4<32>
	v159 = v157 == v158
	branch !v159 l000D2BCB
	// succ:  l000D2B12 l000D2BCB
l000D2B12:
	v160 = loc6
	loc8 = v160
	v161 = 0xFFFFFFFE<32>
	v162 = loc8
	v163 = v161 - v162
	loc9 = v163
	v164 = loc7
	v165 = loc9
	v166 = v164 >u v165
	loc10 = v166
	v167 = loc10
	branch !v167 l000D2B2B
	// succ:  l000D2B28 l000D2B2B
l000D2B28:
	v168 = loc9
	goto l000D2B2D
	// succ:  l000D2B2D
l000D2B2B:
	v169 = loc7
	// succ:  l000D2B2D
l000D2B2D:
	loc4 = v169
	v170 = loc25
	v171 = 0x30<32>
	v172 = v170 + v171
	loc11 = v172
	v173 = loc11
	v174 = loc4
	Mem0[v173:word32] = v174
	v175 = loc25
	v176 = 0x14<32>
	v177 = v175 + v176
	loc12 = v177
	v178 = loc12
	v179 = loc6
	Mem0[v178:word32] = v179
	v180 = loc25
	v181 = 0x2C<32>
	v182 = v180 + v181
	loc13 = v182
	v183 = loc13
	v184 = loc6
	Mem0[v183:word32] = v184
	v185 = loc6
	v186 = loc4
	v187 = v185 + v186
	loc14 = v187
	v188 = loc25
	v189 = 0x10<32>
	v190 = v188 + v189
	loc15 = v190
	v191 = loc15
	v192 = loc14
	Mem0[v191:word32] = v192
	v193 = loc25
	v194 = 0x1C<32>
	v195 = v193 + v194
	loc16 = v195
	v196 = loc16
	v197 = loc14
	Mem0[v196:word32] = v197
	v198 = loc25
	v199 = arg2
	v200 = arg3
	v201 = fn000D2BD4(v198, v199, v200)
	loc17 = v201
	v202 = loc4
	v203 = 0<32>
	v204 = v202 == v203
	loc18 = v204
	v205 = loc18
	branch !v205 l000D2B98
	// succ:  l000D2B93 l000D2B98
l000D2B93:
	v206 = loc17
	loc5 = v206
	goto l000D2BC9
	// succ:  l000D2BC9
l000D2B98:
	v207 = loc12
	v208 = Mem0[v207:word32]
	loc19 = v208
	v209 = loc15
	v210 = Mem0[v209:word32]
	loc20 = v210
	v211 = loc19
	v212 = loc20
	v213 = v211 == v212
	loc21 = v213
	v214 = loc21
	v215 = 0x1F<32>
	v216 = v214 << v215
	v217 = 0x1F<32>
	v218 = v216 >> v217
	loc22 = v218
	v219 = loc19
	v220 = loc22
	v221 = v219 + v220
	loc23 = v221
	v222 = loc23
	v223 = 0<32>
	v224 = SLICE(v223, byte, 0)
	Mem0[v222:byte] = v224
	v225 = loc17
	loc5 = v225
	// succ:  l000D2BC9
l000D2BC9:
	// succ:  l000D2BCB
l000D2BCB:
	v226 = loc31
	Mem0[0x00140030<p32>:word32] = v226
	v227 = loc5
fn000D29A3_exit:


// fn000D2BD4
// Return size: 0
word32 fn000D2BD4(word32 arg0, word32 arg1, word32 arg2)
fn000D2BD4_entry:
	// succ:  l000D2BD4
l000D2BD4:
	v47 = Mem0[0x00140030<p32>:word32]
	loc47 = v47
	v48 = Mem0[0x00140030<p32>:word32]
	v49 = 0xE0<32>
	v50 = v48 + v49
	Mem0[0x00140030<p32>:word32] = v50
	v51 = Mem0[0x00140030<p32>:word32]
	v52 = Mem0[0x00140034<p32>:word32]
	v53 = v51 >= v52
	branch !v53 l000D2BEF
	// succ:  l000D2BE9 l000D2BEF
l000D2BE9:
	v54 = 0xE0<32>
	abortStackOverflow(v54)
	// succ:  l000D2BEF
l000D2BEF:
	v55 = loc47
	v56 = 0x78<32>
	v57 = v55 + v56
	loc27 = v57
	v58 = loc47
	v59 = 0x50<32>
	v60 = v58 + v59
	loc38 = v60
	v61 = loc47
	loc40 = v61
	v62 = loc47
	v63 = 0x88<32>
	v64 = v62 + v63
	loc41 = v64
	v65 = loc38
	v66 = 0<64>
	Mem0[v65:word64] = v66
	v67 = loc38
	v68 = 8<32>
	v69 = v67 + v68
	v70 = 0<64>
	Mem0[v69:word64] = v70
	v71 = loc38
	v72 = 0x10<32>
	v73 = v71 + v72
	v74 = 0<64>
	Mem0[v73:word64] = v74
	v75 = loc38
	v76 = 0x18<32>
	v77 = v75 + v76
	v78 = 0<64>
	Mem0[v77:word64] = v78
	v79 = loc38
	v80 = 0x20<32>
	v81 = v79 + v80
	v82 = 0<64>
	Mem0[v81:word64] = v82
	v83 = arg2
	v84 = Mem0[v83:word32]
	loc45 = v84
	v85 = loc27
	v86 = loc45
	Mem0[v85:word32] = v86
	v87 = 0<32>
	v88 = arg1
	v89 = loc27
	v90 = loc40
	v91 = loc38
	v92 = fn000D2E2C(v87, v88, v89, v90, v91)
	loc42 = v92
	v93 = loc42
	v94 = 0<32>
	v95 = v93 < v94
	loc43 = v95
	v96 = loc43
	branch !v96 l000D2C67
	// succ:  l000D2C62 l000D2C67
l000D2C62:
	v97 = 0xFFFFFFFF<32>
	loc4 = v97
l000D2C67:
	v98 = arg0
	v99 = 0x4C<32>
	v100 = v98 + v99
	loc44 = v100
	v101 = loc44
	v102 = Mem0[v101:word32]
	loc7 = v102
	v103 = loc7
	v104 = 0xFFFFFFFF<32>
	v105 = v103 > v104
	loc8 = v105
	v106 = loc8
	branch !v106 l000D2C8D
	// succ:  l000D2C81 l000D2C8D
l000D2C81:
	v107 = arg0
	v108 = fn000D61F1(v107)
	loc9 = v108
	v109 = loc9
	loc39 = v109
	goto l000D2C91
	// succ:  l000D2C91
l000D2C8D:
	v110 = 0<32>
	loc39 = v110
	// succ:  l000D2C91
l000D2C91:
	v111 = arg0
	v112 = Mem0[v111:word32]
	loc10 = v112
	v113 = loc10
	v114 = 0x20<32>
	v115 = v113 & v114
	loc11 = v115
	v116 = arg0
	v117 = 0x4A<32>
	v118 = v116 + v117
	loc12 = v118
	v119 = loc12
	v120 = Mem0[v119:int8]
	v121 = CONVERT(v120, int8, word32)
	loc13 = v121
	v122 = loc13
	v123 = 0x18<32>
	v124 = v122 << v123
	v125 = 0x18<32>
	v126 = v124 >> v125
	v127 = 1<32>
	v128 = v126 < v127
	loc14 = v128
	v129 = loc14
	branch !v129 l000D2CCF
	// succ:  l000D2CC0 l000D2CCF
l000D2CC0:
	v130 = loc10
	v131 = 0xFFFFFFDF<32>
	v132 = v130 & v131
	loc15 = v132
	v133 = arg0
	v134 = loc15
	Mem0[v133:word32] = v134
	// succ:  l000D2CCF
l000D2CCF:
	v135 = arg0
	v136 = 0x30<32>
	v137 = v135 + v136
	loc16 = v137
	v138 = loc16
	v139 = Mem0[v138:word32]
	loc17 = v139
	v140 = loc17
	v141 = 0<32>
	v142 = v140 == v141
	loc18 = v142
	v143 = loc18
	v143 = v143
	// succ:  l000D2CE8 l000D2CE8
l000D2CE8:
	v144 = arg0
	v145 = 0x2C<32>
	v146 = v144 + v145
	loc20 = v146
	v147 = loc20
	v148 = Mem0[v147:word32]
	loc21 = v148
	v149 = loc20
	v150 = loc41
	Mem0[v149:word32] = v150
	v151 = arg0
	v152 = 0x1C<32>
	v153 = v151 + v152
	loc22 = v153
	v154 = loc22
	v155 = loc41
	Mem0[v154:word32] = v155
	v156 = arg0
	v157 = 0x14<32>
	v158 = v156 + v157
	loc23 = v158
	v159 = loc23
	v160 = loc41
	Mem0[v159:word32] = v160
	v161 = loc16
	v162 = 0x50<32>
	Mem0[v161:word32] = v162
	v163 = loc41
	v164 = 0x50<32>
	v165 = v163 + v164
	loc24 = v165
	v166 = arg0
	v167 = 0x10<32>
	v168 = v166 + v167
	loc25 = v168
	v169 = loc25
	v170 = loc24
	Mem0[v169:word32] = v170
	v171 = arg0
	v172 = arg1
	v173 = loc27
	v174 = loc40
	v175 = loc38
	v176 = fn000D2E2C(v171, v172, v173, v174, v175)
	loc26 = v176
	v177 = loc21
	v178 = 0<32>
	v179 = v177 == v178
	loc28 = v179
	v180 = loc28
	branch !v180 l000D2D56
	// succ:  l000D2D51 l000D2D56
l000D2D51:
	v181 = loc26
	loc5 = v181
l000D2D56:
	v182 = arg0
	v183 = 0x24<32>
	v184 = v182 + v183
	loc29 = v184
	v185 = loc29
	v186 = Mem0[v185:word32]
	loc30 = v186
	v187 = arg0
	v188 = 0<32>
	v189 = 0<32>
	v190 = loc30
	v191 = 0x1FF<32>
	v192 = v190 & v191
	v193 = 0xF20<32>
	v194 = v192 + v193
fn000D2BD4_exit:


// fn000D2E1D
// Return size: 0
word64 fn000D2E1D(word64 arg0, word64 arg1)
fn000D2E1D_entry:
	// succ:  l000D2E1D
l000D2E1D:
	v2 = arg1
	v3 = v2 == 0<64>
	branch !v3 l000D2E25
	// succ:  l000D2E22 l000D2E25
l000D2E22:
	v4 = 0<64>
	goto l000D2E2A
	// succ:  l000D2E2A
l000D2E25:
	v5 = arg0
	v6 = arg1
	v7 = v5 %u v6
	// succ:  l000D2E2A
l000D2E2A:
	return v7
	// succ:  fn000D2E1D_exit
fn000D2E1D_exit:


// fn000D61F1
// Return size: 0
word32 fn000D61F1(word32 arg0)
fn000D61F1_entry:
	// succ:  l000D61F1
l000D61F1:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0<32>
fn000D61F1_exit:


// fn000D61FC
// Return size: 0
word32 fn000D61FC(word32 arg0, word32 arg1, word32 arg2)
fn000D61FC_entry:
	// succ:  l000D61FC
l000D61FC:
	v44 = Mem0[0x00140030<p32>:word32]
	loc44 = v44
	v45 = arg2
	v46 = 0x10<32>
	v47 = v45 + v46
	loc30 = v47
	v48 = loc30
	v49 = Mem0[v48:word32]
	loc37 = v49
	v50 = loc37
	v51 = 0<32>
	v52 = v50 == v51
	loc38 = v52
	v53 = loc38
	branch !v53 l000D6243
	// succ:  l000D621B l000D6243
l000D621B:
	v54 = arg2
	v55 = fn000D799D(v54)
	loc40 = v55
	v56 = loc40
	v57 = 0<32>
	v58 = v56 == v57
	loc41 = v58
	v59 = loc41
	branch !v59 l000D623D
	// succ:  l000D622D l000D623D
l000D622D:
	v60 = loc30
	v61 = Mem0[v60:word32]
	loc8 = v61
	v62 = loc8
	loc12 = v62
	v63 = 5<32>
	loc43 = v63
	goto l000D6241
	// succ:  l000D6241
l000D623D:
	v64 = 0<32>
	loc4 = v64
	// succ:  l000D6241
l000D6241:
	goto l000D624F
	// succ:  l000D624F
l000D6243:
	v65 = loc37
	loc39 = v65
	v66 = loc39
	loc12 = v66
	v67 = 5<32>
	loc43 = v67
	// succ:  l000D624F
l000D624F:
	v68 = loc43
	v69 = 5<32>
	v70 = v68 == v69
	v70 = v70
	// succ:  l000D6259 l000D6259
l000D6259:
	v71 = arg2
	v72 = 0x14<32>
	v73 = v71 + v72
	loc42 = v73
	v74 = loc42
	v75 = Mem0[v74:word32]
	loc10 = v75
	v76 = loc12
	v77 = loc10
	v78 = v76 - v77
	loc11 = v78
	v79 = loc11
	v80 = arg1
	v81 = v79 <u v80
	loc13 = v81
	v82 = loc10
	loc14 = v82
	v83 = loc13
	v83 = v83
	// succ:  l000D627D l000D627D
l000D627D:
	v84 = arg2
	v85 = 0x24<32>
	v86 = v84 + v85
	loc15 = v86
	v87 = loc15
	v88 = Mem0[v87:word32]
	loc16 = v88
	v89 = arg2
	v90 = arg0
	v91 = arg1
	v92 = loc16
	v93 = 0x1FF<32>
	v94 = v92 & v93
	v95 = 0xF20<32>
	v96 = v94 + v95
fn000D61FC_exit:


// fn000D63BF
// Return size: 0
void fn000D63BF(word32 arg0, word32 arg1, word32 arg2)
fn000D63BF_entry:
	// succ:  l000D63BF
l000D63BF:
	v155 = Mem0[0x00140030<p32>:word32]
	loc146 = v155
	v156 = arg1
	v157 = 0x14<32>
	v158 = v156 >u v157
	loc22 = v158
	// succ:  l000D63CD
l000D63CD:
	v159 = loc22
	v160 = v159 == 0<32>
	v160 = v160
	// succ:  l000D63D4 l000D63D4
l000D63D4:
	v161 = arg1
	v162 = 9<32>
	v163 = v161 - v162
fn000D63BF_exit:


// fn000D6D47
// Return size: 0
void fn000D6D47(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000D6D47_entry:
	// succ:  l000D6D47
l000D6D47:
	v28 = Mem0[0x00140030<p32>:word32]
	loc30 = v28
	v29 = Mem0[0x00140030<p32>:word32]
	v30 = 0x100<32>
	v31 = v29 + v30
	Mem0[0x00140030<p32>:word32] = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000D6D62
	// succ:  l000D6D5C l000D6D62
l000D6D5C:
	v35 = 0x100<32>
	abortStackOverflow(v35)
	// succ:  l000D6D62
l000D6D62:
	v36 = loc30
	loc23 = v36
	v37 = arg4
	v38 = 0x12000<32>
	v39 = v37 & v38
	loc24 = v39
	v40 = loc24
	v41 = 0<32>
	v42 = v40 == v41
	loc25 = v42
	v43 = arg2
	v44 = arg3
	v45 = v43 > v44
	loc26 = v45
	v46 = loc26
	v47 = loc25
	v48 = v46 & v47
	loc28 = v48
	// succ:  l000D6D84
l000D6D84:
	v49 = loc28
	v49 = v49
	// succ:  l000D6D8A l000D6D8A
l000D6D8A:
	v50 = arg2
	v51 = arg3
	v52 = v50 - v51
	loc27 = v52
	v53 = loc27
	v54 = 0x100<32>
	v55 = v53 >u v54
	loc8 = v55
	v56 = loc8
	branch !v56 l000D6DA1
	// succ:  l000D6D9D l000D6DA1
l000D6D9D:
	v57 = 0x100<32>
	goto l000D6DA3
	// succ:  l000D6DA3
l000D6DA1:
	v58 = loc27
	// succ:  l000D6DA3
l000D6DA3:
	loc9 = v58
	v59 = loc23
	v60 = arg1
	v61 = loc9
	v62 = _memset(v59, v60, v61)
fn000D6D47_exit:


// fn000D6E73
// Return size: 0
word32 fn000D6E73(word32 arg0, word32 arg1)
fn000D6E73_entry:
	// succ:  l000D6E73
l000D6E73:
	v7 = Mem0[0x00140030<p32>:word32]
	loc6 = v7
	v8 = arg0
	v9 = 0<32>
	v10 = v8 == v9
	loc3 = v10
	v11 = loc3
	branch !v11 l000D6E89
	// succ:  l000D6E84 l000D6E89
l000D6E84:
	v12 = 0<32>
	loc2 = v12
	goto l000D6E98
	// succ:  l000D6E98
l000D6E89:
	v13 = arg0
	v14 = arg1
	v15 = 0<32>
	v16 = fn000D779F(v13, v14, v15)
	loc4 = v16
	v17 = loc4
	loc2 = v17
	// succ:  l000D6E98
l000D6E98:
	v18 = loc2
fn000D6E73_exit:


// fn000D6E9E
// Return size: 0
real64 fn000D6E9E(real64 arg0, word32 arg1)
fn000D6E9E_entry:
	// succ:  l000D6E9E
l000D6E9E:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = arg1
	v8 = fn000D6EB2(v6, v7)
	loc4 = v8
	v9 = loc4
fn000D6E9E_exit:


// fn000D6EB2
// Return size: 0
real64 fn000D6EB2(real64 arg0, word32 arg1)
fn000D6EB2_entry:
	// succ:  l000D6EB2
l000D6EB2:
	v22 = Mem0[0x00140030<p32>:word32]
	loc12 = v22
	v23 = arg0
fn000D6EB2_exit:


// fn000D799D
// Return size: 0
word32 fn000D799D(word32 arg0)
fn000D799D_entry:
	// succ:  l000D799D
l000D799D:
	v26 = Mem0[0x00140030<p32>:word32]
	loc24 = v26
	v27 = arg0
	v28 = 0x4A<32>
	v29 = v27 + v28
	loc2 = v29
	v30 = loc2
	v31 = Mem0[v30:int8]
	v32 = CONVERT(v31, int8, word32)
	loc13 = v32
	v33 = loc13
	v34 = 0x18<32>
	v35 = v33 << v34
	v36 = 0x18<32>
	v37 = v35 >> v36
	loc16 = v37
	v38 = loc16
	v39 = 0xFF<32>
	v40 = v38 + v39
	loc17 = v40
	v41 = loc17
	v42 = loc16
	v43 = v41 | v42
	loc18 = v43
	v44 = loc18
	v45 = 0xFF<32>
	v46 = v44 & v45
	loc19 = v46
	v47 = loc2
	v48 = loc19
	v49 = SLICE(v48, byte, 0)
	Mem0[v47:byte] = v49
	v50 = arg0
	v51 = Mem0[v50:word32]
	loc20 = v51
	v52 = loc20
	v53 = 8<32>
	v54 = v52 & v53
	loc21 = v54
	v55 = loc21
	v56 = 0<32>
	v57 = v55 == v56
	loc22 = v57
	v58 = loc22
	branch !v58 l000D7A65
	// succ:  l000D79F3 l000D7A65
l000D79F3:
	v59 = arg0
	v60 = 8<32>
	v61 = v59 + v60
	loc4 = v61
	v62 = loc4
	v63 = 0<32>
	Mem0[v62:word32] = v63
	v64 = arg0
	v65 = 4<32>
	v66 = v64 + v65
	loc5 = v66
	v67 = loc5
	v68 = 0<32>
	Mem0[v67:word32] = v68
	v69 = arg0
	v70 = 0x2C<32>
	v71 = v69 + v70
	loc6 = v71
	v72 = loc6
	v73 = Mem0[v72:word32]
	loc7 = v73
	v74 = arg0
	v75 = 0x1C<32>
	v76 = v74 + v75
	loc8 = v76
	v77 = loc8
	v78 = loc7
	Mem0[v77:word32] = v78
	v79 = arg0
	v80 = 0x14<32>
	v81 = v79 + v80
	loc9 = v81
	v82 = loc9
	v83 = loc7
	Mem0[v82:word32] = v83
	v84 = loc7
	loc10 = v84
	v85 = arg0
	v86 = 0x30<32>
	v87 = v85 + v86
	loc11 = v87
	v88 = loc11
	v89 = Mem0[v88:word32]
	loc12 = v89
	v90 = loc10
	v91 = loc12
	v92 = v90 + v91
	loc14 = v92
	v93 = arg0
	v94 = 0x10<32>
	v95 = v93 + v94
	loc15 = v95
	v96 = loc15
	v97 = loc14
	Mem0[v96:word32] = v97
	v98 = 0<32>
	loc1 = v98
	goto l000D7A77
	// succ:  l000D7A77
l000D7A65:
	v99 = loc20
	v100 = 0x20<32>
	v101 = v99 | v100
	loc3 = v101
	v102 = arg0
	v103 = loc3
	Mem0[v102:word32] = v103
	v104 = 0xFFFFFFFF<32>
	loc1 = v104
	// succ:  l000D7A77
l000D7A77:
	v105 = loc1
fn000D799D_exit:


// fn000D7A7D
// Return size: 0
word32 fn000D7A7D(word32 arg0, word32 arg1, word32 arg2)
fn000D7A7D_entry:
	// succ:  l000D7A7D
l000D7A7D:
	v14 = Mem0[0x00140030<p32>:word32]
	loc14 = v14
	v15 = arg0
	v16 = 0x10<32>
	v17 = v15 + v16
	loc6 = v17
	v18 = loc6
	v19 = Mem0[v18:word32]
	loc7 = v19
	v20 = arg0
	v21 = 0x14<32>
	v22 = v20 + v21
	loc8 = v22
	v23 = loc8
	v24 = Mem0[v23:word32]
	loc9 = v24
	v25 = loc7
	v26 = loc9
	v27 = v25 - v26
	loc10 = v27
	v28 = loc10
	v29 = arg2
	v30 = v28 >u v29
	loc11 = v30
	v31 = loc11
	branch !v31 l000D7AB4
	// succ:  l000D7AB1 l000D7AB4
l000D7AB1:
	v32 = arg2
	goto l000D7AB6
	// succ:  l000D7AB6
l000D7AB4:
	v33 = loc10
	// succ:  l000D7AB6
l000D7AB6:
	loc3 = v33
	v34 = loc9
	loc4 = v34
	v35 = loc4
	v36 = arg1
	v37 = loc3
	v38 = _memcpy(v35, v36, v37)
fn000D7A7D_exit:


// fn000D7AE1
// Return size: 0
word32 fn000D7AE1()
fn000D7AE1_entry:
	// succ:  l000D7AE1
l000D7AE1:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	v5 = 0xCE4<32>
fn000D7AE1_exit:


// fn000D7AED
// Return size: 0
word32 fn000D7AED()
fn000D7AED_entry:
	// succ:  l000D7AED
l000D7AED:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	v5 = 0xCE8<32>
fn000D7AED_exit:


// fn000D7AF9
// Return size: 0
word32 fn000D7AF9()
fn000D7AF9_entry:
	// succ:  l000D7AF9
l000D7AF9:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	v5 = 0x12EC<32>
fn000D7AF9_exit:


// fn000D7B53
// Return size: 0
word32 fn000D7B53(word32 arg0)
fn000D7B53_entry:
	// succ:  l000D7B53
l000D7B53:
	v11 = Mem0[0x00140030<p32>:word32]
	loc9 = v11
	v12 = arg0
	v13 = 0xFFFFFFD0<32>
	v14 = v12 + v13
	loc7 = v14
	v15 = loc7
	v16 = 0xA<32>
	v17 = v15 <u v16
	loc6 = v17
	v18 = arg0
	v19 = 0x20<32>
	v20 = v18 | v19
	loc1 = v20
	v21 = loc1
	v22 = 0xFFFFFF9F<32>
	v23 = v21 + v22
	loc2 = v23
	v24 = loc2
	v25 = 6<32>
	v26 = v24 <u v25
	loc3 = v26
	v27 = loc6
	v28 = loc3
	v29 = v27 | v28
	loc4 = v29
	v30 = loc4
	v31 = 1<32>
	v32 = v30 & v31
	loc5 = v32
	v33 = loc5
fn000D7B53_exit:


// fn000D7B90
// Return size: 0
real64 fn000D7B90(word32 arg0, word32 arg1, word32 arg2)
fn000D7B90_entry:
	// succ:  l000D7B90
l000D7B90:
	v819 = Mem0[0x00140030<p32>:word32]
	loc663 = v819
	v820 = Mem0[0x00140030<p32>:word32]
	v821 = 0x200<32>
	v822 = v820 + v821
	Mem0[0x00140030<p32>:word32] = v822
	v823 = Mem0[0x00140030<p32>:word32]
	v824 = Mem0[0x00140034<p32>:word32]
	v825 = v823 >= v824
	branch !v825 l000D7BAC
	// succ:  l000D7BA6 l000D7BAC
l000D7BA6:
	v826 = 0x200<32>
	abortStackOverflow(v826)
	// succ:  l000D7BAC
l000D7BAC:
	v827 = loc663
	loc321 = v827
	// succ:  l000D7BB2
l000D7BB2:
	v828 = arg1
	v829 = 0<32>
	v830 = v828 - v829
fn000D7B90_exit:


// fn000DA625
// Return size: 0
word64 fn000DA625(word32 arg0, word32 arg1)
fn000DA625_entry:
	// succ:  l000DA625
l000DA625:
	v100 = Mem0[0x00140030<p32>:word32]
	loc89 = v100
	v101 = arg0
	v102 = 4<32>
	v103 = v101 + v102
	loc21 = v103
	v104 = loc21
	v105 = Mem0[v104:word32]
	loc32 = v105
	v106 = arg0
	v107 = 0x64<32>
	v108 = v106 + v107
	loc43 = v108
	v109 = loc43
	v110 = Mem0[v109:word32]
	loc54 = v110
	v111 = loc32
	v112 = loc54
	v113 = v111 <u v112
	loc61 = v113
	v114 = loc61
	branch !v114 l000DA675
	// succ:  l000DA653 l000DA675
l000DA653:
	v115 = loc32
	v116 = 1<32>
	v117 = v115 + v116
	loc72 = v117
	v118 = loc21
	v119 = loc72
	Mem0[v118:word32] = v119
	v120 = loc32
	v121 = Mem0[v120:int8]
	v122 = CONVERT(v121, int8, word32)
	loc83 = v122
	v123 = loc83
	v124 = 0xFF<32>
	v125 = v123 & v124
	loc86 = v125
	v126 = loc86
	loc13 = v126
	goto l000DA67F
	// succ:  l000DA67F
l000DA675:
	v127 = arg0
	v128 = fn000D2493(v127)
	loc11 = v128
	v129 = loc11
	loc13 = v129
	// succ:  l000DA67F
l000DA67F:
	v130 = loc13
	v131 = 0x2D<32>
	v132 = v130 == v131
	loc12 = v132
	// succ:  l000DA687
l000DA687:
	v133 = loc13
	v134 = 0x2B<32>
	v135 = v133 - v134
fn000DA625_exit:


// fn000DA9E1
// Return size: 0
real64 fn000DA9E1(real64 arg0, word32 arg1)
fn000DA9E1_entry:
	// succ:  l000DA9E1
l000DA9E1:
	v27 = Mem0[0x00140030<p32>:word32]
	loc17 = v27
	v28 = arg1
	v29 = 0x3FF<32>
	v30 = v28 > v29
	loc10 = v30
	v31 = loc10
	branch !v31 l000DAA53
	// succ:  l000DA9F3 l000DAA53
l000DA9F3:
	v32 = arg0
	v33 = 8.98846567431158e+307
	v34 = v32 * v33
	loc25 = v34
	v35 = arg1
	v36 = 0xFFFFFC01<32>
	v37 = v35 + v36
	loc11 = v37
	v38 = loc11
	v39 = 0x3FF<32>
	v40 = v38 > v39
	loc12 = v40
	v41 = arg1
	v42 = 0xFFFFF802<32>
	v43 = v41 + v42
	loc13 = v43
	v44 = loc12
	branch !v44 l000DAA49
	// succ:  l000DAA1D l000DAA49
l000DAA1D:
	v45 = loc25
	v46 = 8.98846567431158e+307
	v47 = v45 * v46
	loc26 = v47
	v48 = loc13
	v49 = 0x3FF<32>
	v50 = v48 > v49
	loc14 = v50
	v51 = loc14
	branch !v51 l000DAA3B
	// succ:  l000DAA37 l000DAA3B
l000DAA37:
	v52 = 0x3FF<32>
	goto l000DAA3D
	// succ:  l000DAA3D
l000DAA3B:
	v53 = loc13
	// succ:  l000DAA3D
l000DAA3D:
	loc2 = v53
	v54 = loc26
	loc20 = v54
	v55 = loc2
	loc3 = v55
	goto l000DAA51
	// succ:  l000DAA51
l000DAA49:
	v56 = loc25
	loc20 = v56
	v57 = loc11
	loc3 = v57
	// succ:  l000DAA51
l000DAA51:
	goto l000DAAC8
	// succ:  l000DAAC8
l000DAA53:
	v58 = arg1
	v59 = 0xFFFFFC02<32>
	v60 = v58 < v59
	loc15 = v60
	v61 = loc15
	branch !v61 l000DAABF
	// succ:  l000DAA5F l000DAABF
l000DAA5F:
	v62 = arg0
	v63 = 2.2250738585072014e-308
	v64 = v62 * v63
	loc21 = v64
	v65 = arg1
	v66 = 0x3FE<32>
	v67 = v65 + v66
	loc5 = v67
	v68 = loc5
	v69 = 0xFFFFFC02<32>
	v70 = v68 < v69
	loc6 = v70
	v71 = arg1
	v72 = 0x7FC<32>
	v73 = v71 + v72
	loc7 = v73
	v74 = loc6
	branch !v74 l000DAAB5
	// succ:  l000DAA89 l000DAAB5
l000DAA89:
	v75 = loc21
	v76 = 2.2250738585072014e-308
	v77 = v75 * v76
	loc22 = v77
	v78 = loc7
	v79 = 0xFFFFFC02<32>
	v80 = v78 < v79
	loc8 = v80
	v81 = loc8
	branch !v81 l000DAAA7
	// succ:  l000DAAA3 l000DAAA7
l000DAAA3:
	v82 = 0xFFFFFC02<32>
	goto l000DAAA9
	// succ:  l000DAAA9
l000DAAA7:
	v83 = loc7
	// succ:  l000DAAA9
l000DAAA9:
	loc4 = v83
	v84 = loc22
	loc20 = v84
	v85 = loc4
	loc3 = v85
	goto l000DAABD
	// succ:  l000DAABD
l000DAAB5:
	v86 = loc21
	loc20 = v86
	v87 = loc5
	loc3 = v87
	// succ:  l000DAABD
l000DAABD:
	goto l000DAAC7
	// succ:  l000DAAC7
l000DAABF:
	v88 = arg0
	loc20 = v88
	v89 = arg1
	loc3 = v89
	// succ:  l000DAAC7
l000DAAC7:
	// succ:  l000DAAC8
l000DAAC8:
	v90 = loc3
	v91 = 0x3FF<32>
	v92 = v90 + v91
	loc9 = v92
	v93 = loc9
	v94 = CONVERT(v93, word32, uint64)
	loc18 = v94
	v95 = loc18
	v96 = 0x34<64>
	v97 = v95 << v96
	loc19 = v97
	v98 = loc19
fn000DA9E1_exit:


// fn000DAAEE
// Return size: 0
real64 fn000DAAEE(real64 arg0, real64 arg1)
fn000DAAEE_entry:
	// succ:  l000DAAEE
l000DAAEE:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = arg1
	v8 = fn000D2892(v6, v7)
	loc4 = v8
	v9 = loc4
fn000DAAEE_exit:


// fn000DAB02
// Return size: 0
real64 fn000DAB02(real64 arg0, word32 arg1)
fn000DAB02_entry:
	// succ:  l000DAB02
l000DAB02:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = arg1
	v8 = fn000DA9E1(v6, v7)
	loc4 = v8
	v9 = loc4
fn000DAB02_exit:


// fn000DAB16
// Return size: 0
real64 fn000DAB16(real64 arg0, real64 arg1)
fn000DAB16_entry:
	// succ:  l000DAB16
l000DAB16:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = arg1
	v8 = fn000DAB2A(v6, v7)
	loc4 = v8
	v9 = loc4
fn000DAB16_exit:


// fn000DAB2A
// Return size: 0
real64 fn000DAB2A(real64 arg0, real64 arg1)
fn000DAB2A_entry:
	// succ:  l000DAB2A
l000DAB2A:
	v100 = Mem0[0x00140030<p32>:word32]
	loc47 = v100
	v101 = arg0
fn000DAB2A_exit:


// fn000DAF01
// Return size: 0
word32 fn000DAF01(word32 arg0)
fn000DAF01_entry:
	// succ:  l000DAF01
l000DAF01:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0<32>
fn000DAF01_exit:


// fn000DAF0C
// Return size: 0
word32 fn000DAF0C(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000DAF0C_entry:
	// succ:  l000DAF0C
l000DAF0C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc5 = v4
	v5 = arg3
fn000DAF0C_exit:


// fn000DAF17
// Return size: 0
word32 fn000DAF17(word32 arg0, word32 arg1)
fn000DAF17_entry:
	// succ:  l000DAF17
l000DAF17:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = 0xFFFFFFFF<32>
fn000DAF17_exit:


// fn000DAF22
// Return size: 0
void fn000DAF22(word32 arg0)
fn000DAF22_entry:
	// succ:  l000DAF22
l000DAF22:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	_free(v5)
fn000DAF22_exit:


// fn000DB2F6
// Return size: 0
word32 fn000DB2F6(word32 arg0, word32 arg1)
fn000DB2F6_entry:
	// succ:  l000DB2F6
l000DB2F6:
	v7 = Mem0[0x00140030<p32>:word32]
	loc6 = v7
	v8 = arg0
	v9 = 0xFFFFFFD0<32>
	v10 = v8 + v9
	loc4 = v10
	v11 = loc4
	v12 = 0xA<32>
	v13 = v11 <u v12
	loc3 = v13
	v14 = loc3
	v15 = 1<32>
	v16 = v14 & v15
	loc2 = v16
	v17 = loc2
fn000DB2F6_exit:


// fn000DB316
// Return size: 0
word32 fn000DB316(word32 arg0, word32 arg1)
fn000DB316_entry:
	// succ:  l000DB316
l000DB316:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v6 = arg0
	v7 = fn000D7B53(v6)
	loc2 = v7
	v8 = loc2
fn000DB316_exit:


// fn000DB3DF
// Return size: 0
word32 fn000DB3DF(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000DB3DF_entry:
	// succ:  l000DB3DF
l000DB3DF:
	v6 = Mem0[0x00140030<p32>:word32]
	loc7 = v6
	v7 = Mem0[0x00140030<p32>:word32]
	v8 = 0x10<32>
	v9 = v7 + v8
	Mem0[0x00140030<p32>:word32] = v9
	v10 = Mem0[0x00140030<p32>:word32]
	v11 = Mem0[0x00140034<p32>:word32]
	v12 = v10 >= v11
	branch !v12 l000DB3F8
	// succ:  l000DB3F3 l000DB3F8
l000DB3F3:
	v13 = 0x10<32>
	abortStackOverflow(v13)
	// succ:  l000DB3F8
l000DB3F8:
	v14 = loc7
	loc4 = v14
	v15 = loc4
	v16 = arg3
	Mem0[v15:word32] = v16
	v17 = arg0
	v18 = arg1
	v19 = arg2
	v20 = loc4
	v21 = fn000D29A3(v17, v18, v19, v20)
	loc5 = v21
	v22 = loc7
	Mem0[0x00140030<p32>:word32] = v22
	v23 = loc5
fn000DB3DF_exit:


// fn000DB419
// Return size: 0
word32 fn000DB419(word32 arg0)
fn000DB419_entry:
	// succ:  l000DB419
l000DB419:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v9 = _pthread_self()
	loc1 = v9
	v10 = loc1
	v11 = 0xB8<32>
	v12 = v10 + v11
	loc2 = v12
	v13 = loc2
	v14 = Mem0[v13:word32]
	loc3 = v14
	v15 = arg0
	v16 = 0<32>
	v17 = v15 == v16
	loc4 = v17
	v18 = loc4
	v19 = v18 == 0<32>
	branch !v19 l000DB447
	// succ:  l000DB43F l000DB447
l000DB43F:
	v20 = loc2
	v21 = arg0
	Mem0[v20:word32] = v21
	// succ:  l000DB447
l000DB447:
	v22 = loc3
fn000DB419_exit:


// fn000DB4B6
// Return size: 0
word32 fn000DB4B6(word32 arg0, word32 arg1, word32 arg2)
fn000DB4B6_entry:
	// succ:  l000DB4B6
l000DB4B6:
	v54 = Mem0[0x00140030<p32>:word32]
	loc54 = v54
	v55 = Mem0[0x00140030<p32>:word32]
	v56 = 0x10<32>
	v57 = v55 + v56
	Mem0[0x00140030<p32>:word32] = v57
	v58 = Mem0[0x00140030<p32>:word32]
	v59 = Mem0[0x00140034<p32>:word32]
	v60 = v58 >= v59
	branch !v60 l000DB4CF
	// succ:  l000DB4CA l000DB4CF
l000DB4CA:
	v61 = 0x10<32>
	abortStackOverflow(v61)
	// succ:  l000DB4CF
l000DB4CF:
	v62 = loc54
	loc25 = v62
	v63 = arg1
	v64 = 0<32>
	v65 = v63 == v64
	loc36 = v65
	// succ:  l000DB4DA
l000DB4DA:
	v66 = loc36
	branch !v66 l000DB4E5
	// succ:  l000DB4E0 l000DB4E5
l000DB4E0:
	v67 = 0<32>
	loc4 = v67
	goto l000DB6CB
	// succ:  l000DB6CB
l000DB4E5:
	v68 = arg2
	v69 = 0<32>
	v70 = v68 == v69
	loc47 = v70
	// succ:  l000DB4EC
l000DB4EC:
	v71 = loc47
	v72 = v71 == 0<32>
	branch !v72 l000DB6BA
	// succ:  l000DB4F3 l000DB6BA
l000DB4F3:
	v73 = arg0
	v74 = 0<32>
	v75 = v73 == v74
	loc49 = v75
	v76 = loc49
	branch !v76 l000DB501
	// succ:  l000DB4FE l000DB501
l000DB4FE:
	v77 = loc25
	goto l000DB503
	// succ:  l000DB503
l000DB501:
	v78 = arg0
	// succ:  l000DB503
l000DB503:
	loc3 = v78
	v79 = arg1
	v80 = Mem0[v79:int8]
	v81 = CONVERT(v80, int8, word32)
	loc50 = v81
	v82 = loc50
	v83 = 0xFF<32>
	v84 = v82 & v83
	loc51 = v84
	v85 = loc50
	v86 = 0x18<32>
	v87 = v85 << v86
	v88 = 0x18<32>
	v89 = v87 >> v88
	v90 = 0xFFFFFFFF<32>
	v91 = v89 > v90
	loc52 = v91
	v92 = loc52
	branch !v92 l000DB548
	// succ:  l000DB526 l000DB548
l000DB526:
	v93 = loc3
	v94 = loc51
	Mem0[v93:word32] = v94
	v95 = loc50
	v96 = 0x18<32>
	v97 = v95 << v96
	v98 = 0x18<32>
	v99 = v97 >> v98
	v100 = 0<32>
	v101 = v99 != v100
	loc5 = v101
	v102 = loc5
	v103 = 1<32>
	v104 = v102 & v103
	loc6 = v104
	v105 = loc6
	loc4 = v105
	goto l000DB6CC
	// succ:  l000DB6CC
l000DB548:
	v106 = loc51
	v107 = 0xFFFFFF3E<32>
	v108 = v106 + v107
	loc7 = v108
	v109 = loc7
	v110 = 0x32<32>
	v111 = v109 >u v110
	loc8 = v111
	v112 = loc8
	v113 = v112 == 0<32>
	branch !v113 l000DB6B9
	// succ:  l000DB55C l000DB6B9
l000DB55C:
	v114 = arg1
	v115 = 1<32>
	v116 = v114 + v115
	loc9 = v116
	v117 = 0xA48<32>
	v118 = loc7
	v119 = 2<32>
	v120 = v118 << v119
	v121 = v117 + v120
	loc10 = v121
	v122 = loc10
	v123 = Mem0[v122:word32]
	loc11 = v123
	v124 = arg2
	v125 = 4<32>
	v126 = v124 <u v125
	loc12 = v126
	v127 = loc12
	branch !v127 l000DB5B0
	// succ:  l000DB580 l000DB5B0
l000DB580:
	v128 = arg2
	v129 = 6<32>
	v130 = v128 * v129
	loc13 = v130
	v131 = loc13
	v132 = 0xFFFFFFFA<32>
	v133 = v131 + v132
	loc14 = v133
	v134 = 0x80000000<32>
	v135 = loc14
	v136 = v134 >>u v135
	loc15 = v136
	v137 = loc11
	v138 = loc15
	v139 = v137 & v138
	loc16 = v139
	v140 = loc16
	v141 = 0<32>
	v142 = v140 == v141
	loc17 = v142
	v143 = loc17
	v144 = v143 == 0<32>
	branch !v144 l000DB5AF
	// succ:  l000DB5AC l000DB5AF
l000DB5AC:
	goto l000DB6BA
	// succ:  l000DB6BA
l000DB5AF:
	// succ:  l000DB5B0
l000DB5B0:
	v145 = loc9
	v146 = Mem0[v145:int8]
	v147 = CONVERT(v146, int8, word32)
	loc18 = v147
	v148 = loc18
	v149 = 0xFF<32>
	v150 = v148 & v149
	loc19 = v150
	v151 = loc19
	v152 = 3<32>
	v153 = v151 >>u v152
	loc20 = v153
	v154 = loc20
	v155 = 0xFFFFFFF0<32>
	v156 = v154 + v155
	loc21 = v156
	v157 = loc11
	v158 = 0x1A<32>
	v159 = v157 >> v158
	loc22 = v159
	v160 = loc20
	v161 = loc22
	v162 = v160 + v161
	loc23 = v162
	v163 = loc21
	v164 = loc23
	v165 = v163 | v164
	loc24 = v165
	v166 = loc24
	v167 = 7<32>
	v168 = v166 >u v167
	loc26 = v168
	v169 = loc26
	v170 = v169 == 0<32>
	branch !v170 l000DB6B8
	// succ:  l000DB5EE l000DB6B8
l000DB5EE:
	v171 = loc11
	v172 = 6<32>
	v173 = v171 << v172
	loc27 = v173
	v174 = loc19
	v175 = 0xFFFFFF80<32>
	v176 = v174 + v175
	loc28 = v176
	v177 = loc28
	v178 = loc27
	v179 = v177 | v178
	loc29 = v179
	v180 = loc29
	v181 = 0<32>
	v182 = v180 < v181
	loc30 = v182
	v183 = loc30
	v184 = v183 == 0<32>
	branch !v184 l000DB61E
	// succ:  l000DB610 l000DB61E
l000DB610:
	v185 = loc3
	v186 = loc29
	Mem0[v185:word32] = v186
	v187 = 2<32>
	loc4 = v187
	goto l000DB6CC
	// succ:  l000DB6CC
l000DB61E:
	v188 = arg1
	v189 = 2<32>
	v190 = v188 + v189
	loc31 = v190
	v191 = loc31
	v192 = Mem0[v191:int8]
	v193 = CONVERT(v192, int8, word32)
	loc32 = v193
	v194 = loc32
	v195 = 0xFF<32>
	v196 = v194 & v195
	loc33 = v196
	v197 = loc33
	v198 = 0xFFFFFF80<32>
	v199 = v197 + v198
	loc34 = v199
	v200 = loc34
	v201 = 0x3F<32>
	v202 = v200 >u v201
	loc35 = v202
	v203 = loc35
	v204 = v203 == 0<32>
	branch !v204 l000DB6B7
	// succ:  l000DB648 l000DB6B7
l000DB648:
	v205 = loc29
	v206 = 6<32>
	v207 = v205 << v206
	loc37 = v207
	v208 = loc34
	v209 = loc37
	v210 = v208 | v209
	loc38 = v210
	v211 = loc38
	v212 = 0<32>
	v213 = v211 < v212
	loc39 = v213
	v214 = loc39
	v215 = v214 == 0<32>
	branch !v215 l000DB670
	// succ:  l000DB662 l000DB670
l000DB662:
	v216 = loc3
	v217 = loc38
	Mem0[v216:word32] = v217
	v218 = 3<32>
	loc4 = v218
	goto l000DB6CC
	// succ:  l000DB6CC
l000DB670:
	v219 = arg1
	v220 = 3<32>
	v221 = v219 + v220
	loc40 = v221
	v222 = loc40
	v223 = Mem0[v222:int8]
	v224 = CONVERT(v223, int8, word32)
	loc41 = v224
	v225 = loc41
	v226 = 0xFF<32>
	v227 = v225 & v226
	loc42 = v227
	v228 = loc42
	v229 = 0xFFFFFF80<32>
	v230 = v228 + v229
	loc43 = v230
	v231 = loc43
	v232 = 0x3F<32>
	v233 = v231 >u v232
	loc44 = v233
	v234 = loc44
	v235 = v234 == 0<32>
	branch !v235 l000DB6B6
	// succ:  l000DB69A l000DB6B6
l000DB69A:
	v236 = loc38
	v237 = 6<32>
	v238 = v236 << v237
	loc45 = v238
	v239 = loc43
	v240 = loc45
	v241 = v239 | v240
	loc46 = v241
	v242 = loc3
	v243 = loc46
	Mem0[v242:word32] = v243
	v244 = 4<32>
	loc4 = v244
	goto l000DB6CC
	// succ:  l000DB6CC
l000DB6B6:
	// succ:  l000DB6B7
l000DB6B7:
	// succ:  l000DB6B8
l000DB6B8:
	// succ:  l000DB6B9
l000DB6B9:
	// succ:  l000DB6BA
l000DB6BA:
	// succ:  l000DB6BA
l000DB6BA:
	v245 = ___errno_location()
	loc48 = v245
	v246 = loc48
	v247 = 0x54<32>
	Mem0[v246:word32] = v247
	v248 = 0xFFFFFFFF<32>
	loc4 = v248
	// succ:  l000DB6CB
l000DB6CB:
	// succ:  l000DB6CC
l000DB6CC:
	v249 = loc54
	Mem0[0x00140030<p32>:word32] = v249
	v250 = loc4
fn000DB4B6_exit:


// fn000DB84B
// Return size: 0
word32 fn000DB84B(word32 arg0)
fn000DB84B_entry:
	// succ:  l000DB84B
l000DB84B:
	v25 = Mem0[0x00140030<p32>:word32]
	loc23 = v25
	v26 = arg0
	v27 = 0x14<32>
	v28 = v26 + v27
	loc2 = v28
	v29 = loc2
	v30 = Mem0[v29:word32]
	loc13 = v30
	v31 = arg0
	v32 = 0x1C<32>
	v33 = v31 + v32
	loc15 = v33
	v34 = loc15
	v35 = Mem0[v34:word32]
	loc16 = v35
	v36 = loc13
	v37 = loc16
	v38 = v36 >u v37
	loc17 = v38
	v39 = loc17
	v39 = v39
	// succ:  l000DB878 l000DB878
l000DB878:
	v40 = arg0
	v41 = 0x24<32>
	v42 = v40 + v41
	loc18 = v42
	v43 = loc18
	v44 = Mem0[v43:word32]
	loc19 = v44
	v45 = arg0
	v46 = 0<32>
	v47 = 0<32>
	v48 = loc19
	v49 = 0x1FF<32>
	v50 = v48 & v49
	v51 = 0xF20<32>
	v52 = v50 + v51
fn000DB84B_exit:


// fn000DB950
// Return size: 0
word32 fn000DB950(word32 arg0, word32 arg1, word32 arg2)
fn000DB950_entry:
	// succ:  l000DB950
l000DB950:
	v6 = Mem0[0x00140030<p32>:word32]
	loc6 = v6
	v7 = Mem0[0x00140030<p32>:word32]
	v8 = 0x10<32>
	v9 = v7 + v8
	Mem0[0x00140030<p32>:word32] = v9
	v10 = Mem0[0x00140030<p32>:word32]
	v11 = Mem0[0x00140034<p32>:word32]
	v12 = v10 >= v11
	branch !v12 l000DB969
	// succ:  l000DB964 l000DB969
l000DB964:
	v13 = 0x10<32>
	abortStackOverflow(v13)
	// succ:  l000DB969
l000DB969:
	v14 = loc6
	loc3 = v14
	v15 = loc3
	v16 = arg2
	Mem0[v15:word32] = v16
	v17 = arg0
	v18 = arg1
	v19 = loc3
	v20 = fn000DB988(v17, v18, v19)
	loc4 = v20
	v21 = loc6
	Mem0[0x00140030<p32>:word32] = v21
	v22 = loc4
fn000DB950_exit:


// fn000DB988
// Return size: 0
word32 fn000DB988(word32 arg0, word32 arg1, word32 arg2)
fn000DB988_entry:
	// succ:  l000DB988
l000DB988:
	v10 = Mem0[0x00140030<p32>:word32]
	loc10 = v10
	v11 = Mem0[0x00140030<p32>:word32]
	v12 = 0x70<32>
	v13 = v11 + v12
	Mem0[0x00140030<p32>:word32] = v13
	v14 = Mem0[0x00140030<p32>:word32]
	v15 = Mem0[0x00140034<p32>:word32]
	v16 = v14 >= v15
	branch !v16 l000DB9A3
	// succ:  l000DB99D l000DB9A3
l000DB99D:
	v17 = 0x70<32>
	abortStackOverflow(v17)
	// succ:  l000DB9A3
l000DB9A3:
	v18 = loc10
	loc3 = v18
	v19 = loc3
	v20 = 0<64>
	Mem0[v19:word64] = v20
	v21 = loc3
	v22 = 8<32>
	v23 = v21 + v22
	v24 = 0<64>
	Mem0[v23:word64] = v24
	v25 = loc3
	v26 = 0x10<32>
	v27 = v25 + v26
	v28 = 0<64>
	Mem0[v27:word64] = v28
	v29 = loc3
	v30 = 0x18<32>
	v31 = v29 + v30
	v32 = 0<64>
	Mem0[v31:word64] = v32
	v33 = loc3
	v34 = 0x20<32>
	v35 = v33 + v34
	v36 = 0<64>
	Mem0[v35:word64] = v36
	v37 = loc3
	v38 = 0x28<32>
	v39 = v37 + v38
	v40 = 0<64>
	Mem0[v39:word64] = v40
	v41 = loc3
	v42 = 0x30<32>
	v43 = v41 + v42
	v44 = 0<64>
	Mem0[v43:word64] = v44
	v45 = loc3
	v46 = 0x38<32>
	v47 = v45 + v46
	v48 = 0<64>
	Mem0[v47:word64] = v48
	v49 = loc3
	v50 = 0x40<32>
	v51 = v49 + v50
	v52 = 0<64>
	Mem0[v51:word64] = v52
	v53 = loc3
	v54 = 0x48<32>
	v55 = v53 + v54
	v56 = 0<64>
	Mem0[v55:word64] = v56
	v57 = loc3
	v58 = 0x50<32>
	v59 = v57 + v58
	v60 = 0<64>
	Mem0[v59:word64] = v60
	v61 = loc3
	v62 = 0x58<32>
	v63 = v61 + v62
	v64 = 0<64>
	Mem0[v63:word64] = v64
	v65 = loc3
	v66 = 0x60<32>
	v67 = v65 + v66
	v68 = 0<64>
	Mem0[v67:word64] = v68
	v69 = loc3
	v70 = 0x68<32>
	v71 = v69 + v70
	v72 = 0<64>
	Mem0[v71:word64] = v72
	v73 = loc3
	v74 = 0x20<32>
	v75 = v73 + v74
	loc4 = v75
	v76 = loc4
	v77 = 0x170<32>
	Mem0[v76:word32] = v77
	v78 = loc3
	v79 = 0x2C<32>
	v80 = v78 + v79
	loc5 = v80
	v81 = loc5
	v82 = arg0
	Mem0[v81:word32] = v82
	v83 = loc3
	v84 = 0x4C<32>
	v85 = v83 + v84
	loc6 = v85
	v86 = loc6
	v87 = 0xFFFFFFFF<32>
	Mem0[v86:word32] = v87
	v88 = loc3
	v89 = 0x54<32>
	v90 = v88 + v89
	loc7 = v90
	v91 = loc7
	v92 = arg0
	Mem0[v91:word32] = v92
	v93 = loc3
	v94 = arg1
	v95 = arg2
	v96 = fn000DBA9B(v93, v94, v95)
	loc8 = v96
	v97 = loc10
	Mem0[0x00140030<p32>:word32] = v97
	v98 = loc8
fn000DB988_exit:


// fn000DBA85
// Return size: 0
word32 fn000DBA85(word32 arg0, word32 arg1, word32 arg2)
fn000DBA85_entry:
	// succ:  l000DBA85
l000DBA85:
	v5 = Mem0[0x00140030<p32>:word32]
	loc5 = v5
	v6 = arg0
	v7 = arg1
	v8 = arg2
	v9 = fn000DD5D8(v6, v7, v8)
	loc3 = v9
	v10 = loc3
fn000DBA85_exit:


// fn000DBA9B
// Return size: 0
word32 fn000DBA9B(word32 arg0, word32 arg1, word32 arg2)
fn000DBA9B_entry:
	// succ:  l000DBA9B
l000DBA9B:
	v442 = Mem0[0x00140030<p32>:word32]
	loc438 = v442
	v443 = Mem0[0x00140030<p32>:word32]
	v444 = 0x130<32>
	v445 = v443 + v444
	Mem0[0x00140030<p32>:word32] = v445
	v446 = Mem0[0x00140030<p32>:word32]
	v447 = Mem0[0x00140034<p32>:word32]
	v448 = v446 >= v447
	branch !v448 l000DBAB7
	// succ:  l000DBAB1 l000DBAB7
l000DBAB1:
	v449 = 0x130<32>
	abortStackOverflow(v449)
	// succ:  l000DBAB7
l000DBAB7:
	v450 = loc438
	v451 = 0x10<32>
	v452 = v450 + v451
	loc306 = v452
	v453 = loc438
	v454 = 8<32>
	v455 = v453 + v454
	loc338 = v455
	v456 = loc438
	v457 = 0x21<32>
	v458 = v456 + v457
	loc349 = v458
	v459 = loc438
	loc360 = v459
	v460 = loc438
	v461 = 0x20<32>
	v462 = v460 + v461
	loc371 = v462
	v463 = arg0
	v464 = 0x4C<32>
	v465 = v463 + v464
	loc382 = v465
	v466 = loc382
	v467 = Mem0[v466:word32]
	loc393 = v467
	v468 = loc393
	v469 = 0xFFFFFFFF<32>
	v470 = v468 > v469
	loc88 = v470
	v471 = loc88
	branch !v471 l000DBB0C
	// succ:  l000DBAFF l000DBB0C
l000DBAFF:
	v472 = arg0
	v473 = fn000D61F1(v472)
	loc99 = v473
	v474 = loc99
	loc330 = v474
	goto l000DBB11
	// succ:  l000DBB11
l000DBB0C:
	v475 = 0<32>
	loc330 = v475
	// succ:  l000DBB11
l000DBB11:
	v476 = arg1
	v477 = Mem0[v476:int8]
	v478 = CONVERT(v477, int8, word32)
	loc110 = v478
	v479 = loc110
	v480 = 0x18<32>
	v481 = v479 << v480
	v482 = 0x18<32>
	v483 = v481 >> v482
	v484 = 0<32>
	v485 = v483 == v484
	loc120 = v485
	// succ:  l000DBB26
l000DBB26:
	v486 = loc120
	branch !v486 l000DBB31
	// succ:  l000DBB2C l000DBB31
l000DBB2C:
	v487 = 0<32>
	loc52 = v487
l000DBB31:
	v488 = arg0
	v489 = 4<32>
	v490 = v488 + v489
	loc131 = v490
	v491 = arg0
	v492 = 0x64<32>
	v493 = v491 + v492
	loc142 = v493
	v494 = arg0
	v495 = 0x6C<32>
	v496 = v494 + v495
	loc153 = v496
	v497 = arg0
	v498 = 8<32>
	v499 = v497 + v498
	loc164 = v499
	v500 = loc349
	v501 = 0xA<32>
	v502 = v500 + v501
	loc175 = v502
	v503 = loc349
	v504 = 0x21<32>
	v505 = v503 + v504
	loc186 = v505
	v506 = loc338
	v507 = 4<32>
	v508 = v506 + v507
	loc87 = v508
	v509 = loc349
	v510 = 0x2E<32>
	v511 = v509 + v510
	loc197 = v511
	v512 = loc349
	v513 = 0x5E<32>
	v514 = v512 + v513
	loc208 = v514
	v515 = loc349
	v516 = 1<32>
	v517 = v515 + v516
	loc219 = v517
	v518 = loc349
	v519 = 1<32>
	v520 = v518 + v519
	loc230 = v520
	v521 = arg1
	loc12 = v521
	v522 = 0<32>
	loc17 = v522
	v523 = 0<32>
	loc20 = v523
	v524 = 0<32>
	loc23 = v524
	v525 = 0<32>
	loc24 = v525
	v526 = loc110
	loc252 = v526
	// succ:  l000DBBAD
l000DBBAD:
	v527 = loc252
	v528 = 0xFF<32>
	v529 = v527 & v528
	loc241 = v529
	v530 = loc241
	v531 = fn000D2665(v530)
	loc263 = v531
	v532 = loc263
	v533 = 0<32>
	v534 = v532 == v533
	loc274 = v534
	// succ:  l000DBBCA
l000DBBCA:
	v535 = loc274
	v535 = v535
	// succ:  l000DBBD1 l000DBBD1
l000DBBD1:
	v536 = loc252
	v537 = 0x18<32>
	v538 = v536 << v537
	v539 = 0x18<32>
	v540 = v538 >> v539
	v541 = 0x25<32>
	v542 = v540 == v541
	loc354 = v542
	// succ:  l000DBBE0
l000DBBE0:
	v543 = loc354
	v543 = v543
	// succ:  l000DBBE7 l000DBBE7
l000DBBE7:
	v544 = loc12
	v545 = 1<32>
	v546 = v544 + v545
	loc355 = v546
	v547 = loc355
	v548 = Mem0[v547:int8]
	v549 = CONVERT(v548, int8, word32)
	loc356 = v549
	// succ:  l000DBBF8
l000DBBF8:
	v550 = loc356
	v551 = 0x18<32>
	v552 = v550 << v551
	v553 = 0x18<32>
	v554 = v552 >> v553
	v555 = 0x25<32>
	v556 = v554 - v555
fn000DBA9B_exit:


// fn000DD5A3
// Return size: 0
word32 fn000DD5A3(word32 arg0)
fn000DD5A3_entry:
	// succ:  l000DD5A3
l000DD5A3:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v10 = arg0
	v11 = 0<32>
	v12 = v10 == v11
	loc1 = v12
	v13 = loc1
	branch !v13 l000DD5B9
	// succ:  l000DD5B4 l000DD5B9
l000DD5B4:
	v14 = 1<32>
	loc5 = v14
	goto l000DD5CB
	// succ:  l000DD5CB
l000DD5B9:
	v15 = arg0
	v16 = Mem0[v15:word32]
	loc2 = v16
	v17 = loc2
	v18 = 0<32>
	v19 = v17 == v18
	loc3 = v19
	v20 = loc3
	loc5 = v20
	// succ:  l000DD5CB
l000DD5CB:
	v21 = loc5
	v22 = 1<32>
	v23 = v21 & v22
	loc4 = v23
	v24 = loc4
fn000DD5A3_exit:


// fn000DD5D8
// Return size: 0
word32 fn000DD5D8(word32 arg0, word32 arg1, word32 arg2)
fn000DD5D8_entry:
	// succ:  l000DD5D8
l000DD5D8:
	v19 = Mem0[0x00140030<p32>:word32]
	loc19 = v19
	v20 = arg0
	v21 = 0x54<32>
	v22 = v20 + v21
	loc11 = v22
	v23 = loc11
	v24 = Mem0[v23:word32]
	loc12 = v24
	v25 = arg2
	v26 = 0x100<32>
	v27 = v25 + v26
	loc13 = v27
	v28 = loc12
	v29 = 0<32>
	v30 = loc13
	v31 = fn000D6AC0(v28, v29, v30)
	loc14 = v31
	v32 = loc14
	v33 = 0<32>
	v34 = v32 == v33
	loc15 = v34
	v35 = loc14
	loc16 = v35
	v36 = loc12
	loc17 = v36
	v37 = loc16
	v38 = loc17
	v39 = v37 - v38
	loc5 = v39
	v40 = loc15
	branch !v40 l000DD61D
	// succ:  l000DD61A l000DD61D
l000DD61A:
	v41 = loc13
	goto l000DD61F
	// succ:  l000DD61F
l000DD61D:
	v42 = loc5
	// succ:  l000DD61F
l000DD61F:
	loc3 = v42
	v43 = loc3
	v44 = arg2
	v45 = v43 <u v44
	loc6 = v45
	v46 = loc6
	branch !v46 l000DD630
	// succ:  l000DD62D l000DD630
l000DD62D:
	v47 = loc3
	goto l000DD632
	// succ:  l000DD632
l000DD630:
	v48 = arg2
	// succ:  l000DD632
l000DD632:
	loc4 = v48
	v49 = arg1
	v50 = loc12
	v51 = loc4
	v52 = _memcpy(v49, v50, v51)
fn000DD5D8_exit:


// fn000DD675
// Return size: 0
word32 fn000DD675(word32 arg0, word32 arg1, word32 arg2)
fn000DD675_entry:
	// succ:  l000DD675
l000DD675:
	v7 = Mem0[0x00140030<p32>:word32]
	loc7 = v7
	v8 = arg2
	v9 = 0<32>
	v10 = v8 != v9
	loc3 = v10
	v11 = loc3
	branch !v11 l000DD689
	// succ:  l000DD686 l000DD689
l000DD686:
	v12 = arg2
	goto l000DD68D
	// succ:  l000DD68D
l000DD689:
	v13 = 0x4660<32>
	// succ:  l000DD68D
l000DD68D:
	loc4 = v13
	v14 = 0<32>
	v15 = arg0
	v16 = arg1
	v17 = loc4
	v18 = fn000DB07F(v14, v15, v16, v17)
	loc5 = v18
	v19 = loc5
fn000DD675_exit:


// fn000DD6A2
// Return size: 0
word32 fn000DD6A2(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000DD6A2_entry:
	// succ:  l000DD6A2
l000DD6A2:
	v66 = Mem0[0x00140030<p32>:word32]
	loc68 = v66
	v67 = Mem0[0x00140030<p32>:word32]
	v68 = 0x410<32>
	v69 = v67 + v68
	Mem0[0x00140030<p32>:word32] = v69
	v70 = Mem0[0x00140030<p32>:word32]
	v71 = Mem0[0x00140034<p32>:word32]
	v72 = v70 >= v71
	branch !v72 l000DD6BD
	// succ:  l000DD6B7 l000DD6BD
l000DD6B7:
	v73 = 0x410<32>
	abortStackOverflow(v73)
	// succ:  l000DD6BD
l000DD6BD:
	v74 = loc68
	v75 = 8<32>
	v76 = v74 + v75
	loc60 = v76
	v77 = loc68
	loc61 = v77
	v78 = arg1
	v79 = Mem0[v78:word32]
	loc62 = v79
	v80 = loc61
	v81 = loc62
	Mem0[v80:word32] = v81
	v82 = arg0
	v83 = 0<32>
	v84 = v82 != v83
	loc63 = v84
	v85 = loc63
	branch !v85 l000DD6E4
	// succ:  l000DD6E1 l000DD6E4
l000DD6E1:
	v86 = arg3
	goto l000DD6E7
	// succ:  l000DD6E7
l000DD6E4:
	v87 = 0x100<32>
	// succ:  l000DD6E7
l000DD6E7:
	loc5 = v87
	v88 = loc63
	branch !v88 l000DD6F1
	// succ:  l000DD6EE l000DD6F1
l000DD6EE:
	v89 = arg0
	goto l000DD6F3
	// succ:  l000DD6F3
l000DD6F1:
	v90 = loc60
	// succ:  l000DD6F3
l000DD6F3:
	loc22 = v90
	v91 = loc62
	loc23 = v91
	v92 = loc62
	v93 = 0<32>
	v94 = v92 != v93
	loc64 = v94
	v95 = loc5
	v96 = 0<32>
	v97 = v95 != v96
	loc25 = v97
	v98 = loc25
	v99 = loc64
	v100 = v98 & v99
	loc66 = v100
	// succ:  l000DD70F
l000DD70F:
	v101 = loc66
	branch !v101 l000DD837
	// succ:  l000DD715 l000DD837
l000DD715:
	v102 = 0<32>
	loc6 = v102
	v103 = arg2
	loc7 = v103
	v104 = loc5
	loc9 = v104
	v105 = loc22
	loc11 = v105
	v106 = loc23
	loc59 = v106
	// succ:  l000DD72B
l000DD72B:
	v107 = loc7
	v108 = 2<32>
	v109 = v107 >>u v108
	loc26 = v109
	v110 = loc26
	v111 = loc9
	v112 = v110 >=u v111
	loc27 = v112
	v113 = loc7
	v114 = 0x83<32>
	v115 = v113 >u v114
	loc28 = v115
	v116 = loc28
	v117 = loc27
	v118 = v116 | v117
	loc29 = v118
	v119 = loc29
	v120 = v119 == 0<32>
	branch !v120 l000DD766
	// succ:  l000DD74F l000DD766
l000DD74F:
	v121 = loc11
	loc10 = v121
	v122 = loc6
	loc13 = v122
	v123 = loc7
	loc14 = v123
	v124 = loc9
	loc18 = v124
	v125 = loc59
	loc41 = v125
	goto l000DD84C
	// succ:  l000DD84C
l000DD766:
	v126 = loc27
	branch !v126 l000DD76D
	// succ:  l000DD76A l000DD76D
l000DD76A:
	v127 = loc9
	goto l000DD76F
	// succ:  l000DD76F
l000DD76D:
	v128 = loc26
	// succ:  l000DD76F
l000DD76F:
	loc8 = v128
	v129 = loc7
	v130 = loc8
	v131 = v129 - v130
	loc30 = v131
	v132 = loc11
	v133 = loc61
	v134 = loc8
	v135 = arg4
	v136 = fn000DD983(v132, v133, v134, v135)
	loc31 = v136
	v137 = loc31
	v138 = 0xFFFFFFFF<32>
	v139 = v137 == v138
	loc32 = v139
	v140 = loc32
	branch !v140 l000DD794
	// succ:  l000DD791 l000DD794
l000DD791:
	goto l000DD819
	// succ:  l000DD819
l000DD794:
	v141 = loc11
	v142 = loc60
	v143 = v141 == v142
	loc33 = v143
	v144 = loc11
	v145 = loc31
	v146 = 2<32>
	v147 = v145 << v146
	v148 = v144 + v147
	loc34 = v148
	v149 = loc33
	branch !v149 l000DD7AC
	// succ:  l000DD7A9 l000DD7AC
l000DD7A9:
	v150 = 0<32>
	goto l000DD7AE
	// succ:  l000DD7AE
l000DD7AC:
	v151 = loc31
	// succ:  l000DD7AE
l000DD7AE:
	loc35 = v151
	v152 = loc9
	v153 = loc35
	v154 = v152 - v153
	loc15 = v154
	v155 = loc33
	branch !v155 l000DD7BF
	// succ:  l000DD7BC l000DD7BF
l000DD7BC:
	v156 = loc11
	goto l000DD7C1
	// succ:  l000DD7C1
l000DD7BF:
	v157 = loc34
	// succ:  l000DD7C1
l000DD7C1:
	loc12 = v157
	v158 = loc31
	v159 = loc6
	v160 = v158 + v159
	loc36 = v160
	v161 = loc61
	v162 = Mem0[v161:word32]
	loc37 = v162
	v163 = loc37
	v164 = 0<32>
	v165 = v163 != v164
	loc38 = v165
	v166 = loc15
	v167 = 0<32>
	v168 = v166 != v167
	loc39 = v168
	v169 = loc39
	v170 = loc38
	v171 = v169 & v170
	loc65 = v171
	v172 = loc65
	branch !v172 l000DD800
	// succ:  l000DD7EB l000DD800
l000DD7EB:
	v173 = loc36
	loc6 = v173
	v174 = loc30
	loc7 = v174
	v175 = loc15
	loc9 = v175
	v176 = loc12
	loc11 = v176
	v177 = loc37
	loc59 = v177
	goto l000DD816
	// succ:  l000DD816
l000DD800:
	v178 = loc12
	loc10 = v178
	v179 = loc36
	loc13 = v179
	v180 = loc30
	loc14 = v180
	v181 = loc15
	loc18 = v181
	v182 = loc37
	loc41 = v182
	goto l000DD84C
	// succ:  l000DD84C
l000DD816:
	goto l000DD715
	// succ:  l000DD715
l000DD819:
	v183 = loc61
	v184 = Mem0[v183:word32]
	loc24 = v184
	v185 = loc11
	loc10 = v185
	v186 = 0xFFFFFFFF<32>
	loc13 = v186
	v187 = loc30
	loc14 = v187
	v188 = 0<32>
	loc18 = v188
	v189 = loc24
	loc41 = v189
	goto l000DD84B
	// succ:  l000DD84B
l000DD837:
	v190 = loc22
	loc10 = v190
	v191 = 0<32>
	loc13 = v191
	v192 = arg2
	loc14 = v192
	v193 = loc5
	loc18 = v193
	v194 = loc23
	loc41 = v194
	// succ:  l000DD84B
l000DD84B:
	// succ:  l000DD84C
l000DD84C:
	v195 = loc41
	v196 = 0<32>
	v197 = v195 == v196
	loc40 = v197
	// succ:  l000DD854
l000DD854:
	v198 = loc40
	branch !v198 l000DD85F
	// succ:  l000DD85A l000DD85F
l000DD85A:
	v199 = loc13
	loc20 = v199
l000DD85F:
	v200 = loc18
	v201 = 0<32>
	v202 = v200 != v201
	loc42 = v202
	v203 = loc14
	v204 = 0<32>
	v205 = v203 != v204
	loc43 = v205
	v206 = loc42
	v207 = loc43
	v208 = v206 & v207
	loc44 = v208
	v209 = loc44
	v209 = v209
	// succ:  l000DD878 l000DD878
l000DD878:
	v210 = loc13
	loc16 = v210
	v211 = loc14
	loc17 = v211
	v212 = loc10
	loc19 = v212
	v213 = loc18
	loc21 = v213
	v214 = loc41
	loc45 = v214
	// succ:  l000DD88E
l000DD88E:
	v215 = loc19
	v216 = loc45
	v217 = loc17
	v218 = arg4
	v219 = fn000DB07F(v215, v216, v217, v218)
	loc46 = v219
	v220 = loc46
	v221 = 2<32>
	v222 = v220 + v221
	loc47 = v222
	v223 = loc47
	v224 = 3<32>
	v225 = v223 <u v224
	loc48 = v225
	v226 = loc48
	branch !v226 l000DD8B2
	// succ:  l000DD8AF l000DD8B2
l000DD8AF:
	goto l000DD91A
	// succ:  l000DD91A
l000DD8B2:
	v227 = loc61
	v228 = Mem0[v227:word32]
	loc49 = v228
	v229 = loc49
	v230 = loc46
	v231 = v229 + v230
	loc50 = v231
	v232 = loc61
	v233 = loc50
	Mem0[v232:word32] = v233
	v234 = loc17
	v235 = loc46
	v236 = v234 - v235
	loc51 = v236
	v237 = loc19
	v238 = 4<32>
	v239 = v237 + v238
	loc52 = v239
	v240 = loc21
	v241 = 0xFFFFFFFF<32>
	v242 = v240 + v241
	loc53 = v242
	v243 = loc16
	v244 = 1<32>
	v245 = v243 + v244
	loc54 = v245
	v246 = loc53
	v247 = 0<32>
	v248 = v246 != v247
	loc55 = v248
	v249 = loc51
	v250 = 0<32>
	v251 = v249 != v250
	loc56 = v251
	v252 = loc55
	v253 = loc56
	v254 = v252 & v253
	loc57 = v254
	v255 = loc57
	branch !v255 l000DD911
	// succ:  l000DD8FC l000DD911
l000DD8FC:
	v256 = loc54
	loc16 = v256
	v257 = loc51
	loc17 = v257
	v258 = loc52
	loc19 = v258
	v259 = loc53
	loc21 = v259
	v260 = loc50
	loc45 = v260
	goto l000DD917
	// succ:  l000DD917
l000DD911:
	v261 = loc54
	loc20 = v261
l000DD917:
	goto l000DD878
	// succ:  l000DD878
l000DD91A:
	v262 = loc46
	v263 = 0xFFFFFFFF<32>
	v264 = v262 - v263
fn000DD6A2_exit:


// fn000DE31D
// Return size: 0
word32 fn000DE31D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000DE31D_entry:
	// succ:  l000DE31D
l000DE31D:
	v67 = Mem0[0x00140030<p32>:word32]
	loc69 = v67
	v68 = Mem0[0x00140030<p32>:word32]
	v69 = 0x110<32>
	v70 = v68 + v69
	Mem0[0x00140030<p32>:word32] = v70
	v71 = Mem0[0x00140030<p32>:word32]
	v72 = Mem0[0x00140034<p32>:word32]
	v73 = v71 >= v72
	branch !v73 l000DE338
	// succ:  l000DE332 l000DE338
l000DE332:
	v74 = 0x110<32>
	abortStackOverflow(v74)
	// succ:  l000DE338
l000DE338:
	v75 = loc69
	v76 = 8<32>
	v77 = v75 + v76
	loc61 = v77
	v78 = loc69
	loc62 = v78
	v79 = arg1
	v80 = Mem0[v79:word32]
	loc63 = v80
	v81 = loc62
	v82 = loc63
	Mem0[v81:word32] = v82
	v83 = arg0
	v84 = 0<32>
	v85 = v83 != v84
	loc64 = v85
	v86 = loc64
	branch !v86 l000DE35F
	// succ:  l000DE35C l000DE35F
l000DE35C:
	v87 = arg3
	goto l000DE362
	// succ:  l000DE362
l000DE35F:
	v88 = 0x100<32>
	// succ:  l000DE362
l000DE362:
	loc5 = v88
	v89 = loc64
	branch !v89 l000DE36C
	// succ:  l000DE369 l000DE36C
l000DE369:
	v90 = arg0
	goto l000DE36E
	// succ:  l000DE36E
l000DE36C:
	v91 = loc61
	// succ:  l000DE36E
l000DE36E:
	loc22 = v91
	v92 = loc63
	loc23 = v92
	v93 = loc63
	v94 = 0<32>
	v95 = v93 != v94
	loc65 = v95
	v96 = loc5
	v97 = 0<32>
	v98 = v96 != v97
	loc25 = v98
	v99 = loc25
	v100 = loc65
	v101 = v99 & v100
	loc67 = v101
	// succ:  l000DE38A
l000DE38A:
	v102 = loc67
	branch !v102 l000DE4A7
	// succ:  l000DE390 l000DE4A7
l000DE390:
	v103 = 0<32>
	loc6 = v103
	v104 = arg2
	loc7 = v104
	v105 = loc5
	loc9 = v105
	v106 = loc22
	loc11 = v106
	v107 = loc23
	loc60 = v107
	// succ:  l000DE3A6
l000DE3A6:
	v108 = loc7
	v109 = loc9
	v110 = v108 >=u v109
	loc26 = v110
	v111 = loc7
	v112 = 0x20<32>
	v113 = v111 >u v112
	loc27 = v113
	v114 = loc26
	v115 = loc27
	v116 = v114 | v115
	loc28 = v116
	v117 = loc28
	v118 = v117 == 0<32>
	branch !v118 l000DE3D9
	// succ:  l000DE3C2 l000DE3D9
l000DE3C2:
	v119 = loc11
	loc10 = v119
	v120 = loc6
	loc13 = v120
	v121 = loc7
	loc14 = v121
	v122 = loc9
	loc18 = v122
	v123 = loc60
	loc40 = v123
	goto l000DE4BC
	// succ:  l000DE4BC
l000DE3D9:
	v124 = loc26
	branch !v124 l000DE3E0
	// succ:  l000DE3DD l000DE3E0
l000DE3DD:
	v125 = loc9
	goto l000DE3E2
	// succ:  l000DE3E2
l000DE3E0:
	v126 = loc7
	// succ:  l000DE3E2
l000DE3E2:
	loc8 = v126
	v127 = loc7
	v128 = loc8
	v129 = v127 - v128
	loc29 = v129
	v130 = loc11
	v131 = loc62
	v132 = loc8
	v133 = 0<32>
	v134 = fn000DE5D1(v130, v131, v132, v133)
	loc30 = v134
	v135 = loc30
	v136 = 0xFFFFFFFF<32>
	v137 = v135 == v136
	loc31 = v137
	v138 = loc31
	branch !v138 l000DE407
	// succ:  l000DE404 l000DE407
l000DE404:
	goto l000DE489
	// succ:  l000DE489
l000DE407:
	v139 = loc11
	v140 = loc61
	v141 = v139 == v140
	loc32 = v141
	v142 = loc11
	v143 = loc30
	v144 = v142 + v143
	loc33 = v144
	v145 = loc32
	branch !v145 l000DE41C
	// succ:  l000DE419 l000DE41C
l000DE419:
	v146 = 0<32>
	goto l000DE41E
	// succ:  l000DE41E
l000DE41C:
	v147 = loc30
	// succ:  l000DE41E
l000DE41E:
	loc34 = v147
	v148 = loc9
	v149 = loc34
	v150 = v148 - v149
	loc15 = v150
	v151 = loc32
	branch !v151 l000DE42F
	// succ:  l000DE42C l000DE42F
l000DE42C:
	v152 = loc11
	goto l000DE431
	// succ:  l000DE431
l000DE42F:
	v153 = loc33
	// succ:  l000DE431
l000DE431:
	loc12 = v153
	v154 = loc30
	v155 = loc6
	v156 = v154 + v155
	loc35 = v156
	v157 = loc62
	v158 = Mem0[v157:word32]
	loc36 = v158
	v159 = loc36
	v160 = 0<32>
	v161 = v159 != v160
	loc37 = v161
	v162 = loc15
	v163 = 0<32>
	v164 = v162 != v163
	loc38 = v164
	v165 = loc38
	v166 = loc37
	v167 = v165 & v166
	loc66 = v167
	v168 = loc66
	branch !v168 l000DE470
	// succ:  l000DE45B l000DE470
l000DE45B:
	v169 = loc35
	loc6 = v169
	v170 = loc29
	loc7 = v170
	v171 = loc15
	loc9 = v171
	v172 = loc12
	loc11 = v172
	v173 = loc36
	loc60 = v173
	goto l000DE486
	// succ:  l000DE486
l000DE470:
	v174 = loc12
	loc10 = v174
	v175 = loc35
	loc13 = v175
	v176 = loc29
	loc14 = v176
	v177 = loc15
	loc18 = v177
	v178 = loc36
	loc40 = v178
	goto l000DE4BC
	// succ:  l000DE4BC
l000DE486:
	goto l000DE390
	// succ:  l000DE390
l000DE489:
	v179 = loc62
	v180 = Mem0[v179:word32]
	loc24 = v180
	v181 = loc11
	loc10 = v181
	v182 = 0xFFFFFFFF<32>
	loc13 = v182
	v183 = loc29
	loc14 = v183
	v184 = 0<32>
	loc18 = v184
	v185 = loc24
	loc40 = v185
	goto l000DE4BB
	// succ:  l000DE4BB
l000DE4A7:
	v186 = loc22
	loc10 = v186
	v187 = 0<32>
	loc13 = v187
	v188 = arg2
	loc14 = v188
	v189 = loc5
	loc18 = v189
	v190 = loc23
	loc40 = v190
	// succ:  l000DE4BB
l000DE4BB:
	// succ:  l000DE4BC
l000DE4BC:
	v191 = loc40
	v192 = 0<32>
	v193 = v191 == v192
	loc39 = v193
	// succ:  l000DE4C4
l000DE4C4:
	v194 = loc39
	branch !v194 l000DE4CF
	// succ:  l000DE4CA l000DE4CF
l000DE4CA:
	v195 = loc13
	loc20 = v195
	goto l000DE5B3
	// succ:  l000DE5B3
l000DE4CF:
	v196 = loc18
	v197 = 0<32>
	v198 = v196 != v197
	loc41 = v198
	v199 = loc14
	v200 = 0<32>
	v201 = v199 != v200
	loc42 = v201
	v202 = loc41
	v203 = loc42
	v204 = v202 & v203
	loc43 = v204
	v205 = loc43
	branch !v205 l000DE5AE
	// succ:  l000DE4E8 l000DE5AE
l000DE4E8:
	v206 = loc13
	loc16 = v206
	v207 = loc14
	loc17 = v207
	v208 = loc10
	loc19 = v208
	v209 = loc18
	loc21 = v209
	v210 = loc40
	loc45 = v210
	// succ:  l000DE4FE
l000DE4FE:
	v211 = loc45
	v212 = Mem0[v211:word32]
	loc44 = v212
	v213 = loc19
	v214 = loc44
	v215 = 0<32>
	v216 = fn000D779F(v213, v214, v215)
	loc46 = v216
	v217 = loc46
	v218 = 1<32>
	v219 = v217 + v218
	loc47 = v219
	v220 = loc47
	v221 = 2<32>
	v222 = v220 <u v221
	loc48 = v222
	v223 = loc48
	branch !v223 l000DE527
	// succ:  l000DE524 l000DE527
l000DE524:
	goto l000DE58F
	// succ:  l000DE58F
l000DE527:
	v224 = loc62
	v225 = Mem0[v224:word32]
	loc50 = v225
	v226 = loc50
	v227 = 4<32>
	v228 = v226 + v227
	loc51 = v228
	v229 = loc62
	v230 = loc51
	Mem0[v229:word32] = v230
	v231 = loc17
	v232 = 0xFFFFFFFF<32>
	v233 = v231 + v232
	loc52 = v233
	v234 = loc19
	v235 = loc46
	v236 = v234 + v235
	loc53 = v236
	v237 = loc21
	v238 = loc46
	v239 = v237 - v238
	loc54 = v239
	v240 = loc16
	v241 = 1<32>
	v242 = v240 + v241
	loc55 = v242
	v243 = loc54
	v244 = 0<32>
	v245 = v243 != v244
	loc56 = v245
	v246 = loc52
	v247 = 0<32>
	v248 = v246 != v247
	loc57 = v248
	v249 = loc56
	v250 = loc57
	v251 = v249 & v250
	loc58 = v251
	v252 = loc58
	branch !v252 l000DE586
	// succ:  l000DE571 l000DE586
l000DE571:
	v253 = loc55
	loc16 = v253
	v254 = loc52
	loc17 = v254
	v255 = loc53
	loc19 = v255
	v256 = loc54
	loc21 = v256
	v257 = loc51
	loc45 = v257
	goto l000DE58C
	// succ:  l000DE58C
l000DE586:
	v258 = loc55
	loc20 = v258
	goto l000DE5B4
	// succ:  l000DE5B4
l000DE58C:
	goto l000DE4E8
	// succ:  l000DE4E8
l000DE58F:
	v259 = loc46
	v260 = 0<32>
	v261 = v259 == v260
	loc49 = v261
	v262 = loc49
	branch !v262 l000DE5A8
	// succ:  l000DE59C l000DE5A8
l000DE59C:
	v263 = loc62
	v264 = 0<32>
	Mem0[v263:word32] = v264
	v265 = loc16
	loc20 = v265
	goto l000DE5AC
	// succ:  l000DE5AC
l000DE5A8:
	v266 = 0xFFFFFFFF<32>
	loc20 = v266
	// succ:  l000DE5AC
l000DE5AC:
	goto l000DE5B2
	// succ:  l000DE5B2
l000DE5AE:
	v267 = loc13
	loc20 = v267
	// succ:  l000DE5B2
l000DE5B2:
	// succ:  l000DE5B3
l000DE5B3:
	// succ:  l000DE5B4
l000DE5B4:
	v268 = loc64
	branch !v268 l000DE5C8
	// succ:  l000DE5B9 l000DE5C8
l000DE5B9:
	v269 = loc62
	v270 = Mem0[v269:word32]
	loc59 = v270
	v271 = arg1
	v272 = loc59
	Mem0[v271:word32] = v272
	// succ:  l000DE5C8
l000DE5C8:
	v273 = loc69
	Mem0[0x00140030<p32>:word32] = v273
	v274 = loc20
fn000DE31D_exit:


// fn000DE8FC
// Return size: 0
word32 fn000DE8FC(word32 arg0, word32 arg1)
fn000DE8FC_entry:
	// succ:  l000DE8FC
l000DE8FC:
	v29 = Mem0[0x00140030<p32>:word32]
	loc28 = v29
	v30 = Mem0[0x00140030<p32>:word32]
	v31 = 0x10<32>
	v32 = v30 + v31
	Mem0[0x00140030<p32>:word32] = v32
	v33 = Mem0[0x00140030<p32>:word32]
	v34 = Mem0[0x00140034<p32>:word32]
	v35 = v33 >= v34
	branch !v35 l000DE915
	// succ:  l000DE910 l000DE915
l000DE910:
	v36 = 0x10<32>
	abortStackOverflow(v36)
	// succ:  l000DE915
l000DE915:
	v37 = loc28
	loc14 = v37
	v38 = arg1
	v39 = 0xFF<32>
	v40 = v38 & v39
	loc20 = v40
	v41 = loc14
	v42 = loc20
	v43 = SLICE(v42, byte, 0)
	Mem0[v41:byte] = v43
	v44 = arg0
	v45 = 0x10<32>
	v46 = v44 + v45
	loc21 = v46
	v47 = loc21
	v48 = Mem0[v47:word32]
	loc22 = v48
	v49 = loc22
	v50 = 0<32>
	v51 = v49 == v50
	loc23 = v51
	v52 = loc23
	branch !v52 l000DE969
	// succ:  l000DE941 l000DE969
l000DE941:
	v53 = arg0
	v54 = fn000D799D(v53)
	loc24 = v54
	v55 = loc24
	v56 = 0<32>
	v57 = v55 == v56
	loc25 = v57
	v58 = loc25
	branch !v58 l000DE963
	// succ:  l000DE953 l000DE963
l000DE953:
	v59 = loc21
	v60 = Mem0[v59:word32]
	loc3 = v60
	v61 = loc3
	loc6 = v61
	v62 = 4<32>
	loc27 = v62
	goto l000DE967
	// succ:  l000DE967
l000DE963:
	v63 = 0xFFFFFFFF<32>
	loc2 = v63
	// succ:  l000DE967
l000DE967:
	goto l000DE971
	// succ:  l000DE971
l000DE969:
	v64 = loc22
	loc6 = v64
	v65 = 4<32>
	loc27 = v65
	// succ:  l000DE971
l000DE971:
	v66 = loc27
	v67 = 4<32>
	v68 = v66 == v67
	v68 = v68
	// succ:  l000DE97B l000DE97B
l000DE97B:
	v69 = arg0
	v70 = 0x14<32>
	v71 = v69 + v70
	loc26 = v71
	v72 = loc26
	v73 = Mem0[v72:word32]
	loc4 = v73
	v74 = loc4
	v75 = loc6
	v76 = v74 <u v75
	loc5 = v76
	v77 = loc5
	branch !v77 l000DE9DE
	// succ:  l000DE994 l000DE9DE
l000DE994:
	v78 = arg1
	v79 = 0xFF<32>
	v80 = v78 & v79
	loc7 = v80
	v81 = arg0
	v82 = 0x4B<32>
	v83 = v81 + v82
	loc8 = v83
	v84 = loc8
	v85 = Mem0[v84:int8]
	v86 = CONVERT(v85, int8, word32)
	loc9 = v86
	v87 = loc9
	v88 = 0x18<32>
	v89 = v87 << v88
	v90 = 0x18<32>
	v91 = v89 >> v90
	loc10 = v91
	v92 = loc7
	v93 = loc10
	v94 = v92 == v93
	loc11 = v94
	v95 = loc11
	v96 = v95 == 0<32>
	branch !v96 l000DE9DD
	// succ:  l000DE9C1 l000DE9DD
l000DE9C1:
	v97 = loc4
	v98 = 1<32>
	v99 = v97 + v98
	loc12 = v99
	v100 = loc26
	v101 = loc12
	Mem0[v100:word32] = v101
	v102 = loc4
	v103 = loc20
	v104 = SLICE(v103, byte, 0)
	Mem0[v102:byte] = v104
	v105 = loc7
	loc2 = v105
l000DE9DD:
	// succ:  l000DE9DE
l000DE9DE:
	v106 = arg0
	v107 = 0x24<32>
	v108 = v106 + v107
	loc13 = v108
	v109 = loc13
	v110 = Mem0[v109:word32]
	loc15 = v110
	v111 = arg0
	v112 = loc14
	v113 = 1<32>
	v114 = loc15
	v115 = 0x1FF<32>
	v116 = v114 & v115
	v117 = 0xF20<32>
	v118 = v116 + v117
fn000DE8FC_exit:


// fn000DEA30
// Return size: 0
word32 fn000DEA30(word32 arg0, word32 arg1, word32 arg2)
fn000DEA30_entry:
	// succ:  l000DEA30
l000DEA30:
	v20 = Mem0[0x00140030<p32>:word32]
	loc20 = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = 0x10<32>
	v23 = v21 + v22
	Mem0[0x00140030<p32>:word32] = v23
	v24 = Mem0[0x00140030<p32>:word32]
	v25 = Mem0[0x00140034<p32>:word32]
	v26 = v24 >= v25
	branch !v26 l000DEA49
	// succ:  l000DEA44 l000DEA49
l000DEA44:
	v27 = 0x10<32>
	abortStackOverflow(v27)
	// succ:  l000DEA49
l000DEA49:
	v28 = loc20
	loc11 = v28
	v29 = 0xF0<32>
	v30 = _malloc(v29)
	loc12 = v30
	v31 = loc12
	v32 = 0<32>
	v33 = v31 == v32
	loc13 = v33
	// succ:  l000DEA5C
l000DEA5C:
	v34 = loc13
	branch !v34 l000DEA67
	// succ:  l000DEA62 l000DEA67
l000DEA62:
	v35 = 0xFFFFFFFF<32>
	loc3 = v35
	goto l000DEB0D
	// succ:  l000DEB0D
l000DEA67:
	v36 = arg2
	v37 = Mem0[v36:word32]
	loc18 = v37
	v38 = loc11
	v39 = loc18
	Mem0[v38:word32] = v39
	v40 = loc12
	v41 = 0xF0<32>
	v42 = arg1
	v43 = loc11
	v44 = fn000D29A3(v40, v41, v42, v43)
	loc14 = v44
	v45 = loc14
	v46 = 0xF0<32>
	v47 = v45 <u v46
	loc15 = v47
	v48 = loc15
	branch !v48 l000DEAC0
	// succ:  l000DEA8F l000DEAC0
l000DEA8F:
	v49 = loc14
	v50 = 1<32>
	v51 = v49 + v50
	loc16 = v51
	v52 = loc12
	v53 = loc16
	v54 = fn000E3E00(v52, v53)
	loc17 = v54
	v55 = loc17
	v56 = 0<32>
	v57 = v55 != v56
	loc4 = v57
	v58 = loc4
	branch !v58 l000DEAAD
	// succ:  l000DEAAA l000DEAAD
l000DEAAA:
	v59 = loc17
	goto l000DEAAF
	// succ:  l000DEAAF
l000DEAAD:
	v60 = loc12
	// succ:  l000DEAAF
l000DEAAF:
	loc5 = v60
	v61 = arg0
	v62 = loc5
	Mem0[v61:word32] = v62
	v63 = loc14
	loc3 = v63
	goto l000DEB0E
	// succ:  l000DEB0E
l000DEAC0:
	v64 = loc12
	_free(v64)
	v65 = loc14
	v66 = 0<32>
	v67 = v65 < v66
	loc6 = v67
	v68 = loc6
	branch !v68 l000DEAD5
	// succ:  l000DEAD0 l000DEAD5
l000DEAD0:
	v69 = 0xFFFFFFFF<32>
	loc3 = v69
	goto l000DEB0C
	// succ:  l000DEB0C
l000DEAD5:
	v70 = loc14
	v71 = 1<32>
	v72 = v70 + v71
	loc7 = v72
	v73 = loc7
	v74 = _malloc(v73)
	loc8 = v74
	v75 = arg0
	v76 = loc8
	Mem0[v75:word32] = v76
	v77 = loc8
	v78 = 0<32>
	v79 = v77 == v78
	loc9 = v79
	v80 = loc9
	branch !v80 l000DEAFA
	// succ:  l000DEAF5 l000DEAFA
l000DEAF5:
	v81 = 0xFFFFFFFF<32>
	loc3 = v81
	goto l000DEB0B
	// succ:  l000DEB0B
l000DEAFA:
	v82 = loc8
	v83 = loc7
	v84 = arg1
	v85 = arg2
	v86 = fn000D29A3(v82, v83, v84, v85)
	loc10 = v86
	v87 = loc10
	loc3 = v87
	// succ:  l000DEB0B
l000DEB0B:
	// succ:  l000DEB0C
l000DEB0C:
	// succ:  l000DEB0D
l000DEB0D:
	// succ:  l000DEB0E
l000DEB0E:
	v88 = loc20
	Mem0[0x00140030<p32>:word32] = v88
	v89 = loc3
fn000DEA30_exit:


// fn000DEB18
// Return size: 0
word32 fn000DEB18(word32 arg0, word32 arg1)
fn000DEB18_entry:
	// succ:  l000DEB18
l000DEB18:
	v28 = Mem0[0x00140030<p32>:word32]
	loc27 = v28
	v29 = arg0
	v30 = 0xFFFFFFFF<32>
	v31 = v29 == v30
	loc13 = v31
	// succ:  l000DEB25
l000DEB25:
	v32 = loc13
	branch !v32 l000DEB30
	// succ:  l000DEB2B l000DEB30
l000DEB2B:
	v33 = 0xFFFFFFFF<32>
	loc2 = v33
	goto l000DEC2E
	// succ:  l000DEC2E
l000DEB30:
	v34 = arg1
	v35 = 0x4C<32>
	v36 = v34 + v35
	loc19 = v36
	v37 = loc19
	v38 = Mem0[v37:word32]
	loc20 = v38
	v39 = loc20
	v40 = 0xFFFFFFFF<32>
	v41 = v39 > v40
	loc21 = v41
	v42 = loc21
	branch !v42 l000DEB56
	// succ:  l000DEB4A l000DEB56
l000DEB4A:
	v43 = arg1
	v44 = fn000D61F1(v43)
	loc22 = v44
	v45 = loc22
	loc12 = v45
	goto l000DEB5A
	// succ:  l000DEB5A
l000DEB56:
	v46 = 0<32>
	loc12 = v46
	// succ:  l000DEB5A
l000DEB5A:
	v47 = arg1
	v48 = 8<32>
	v49 = v47 + v48
	loc23 = v49
	v50 = loc23
	v51 = Mem0[v50:word32]
	loc24 = v51
	v52 = loc24
	v53 = 0<32>
	v54 = v52 == v53
	loc25 = v54
	v55 = loc25
	branch !v55 l000DEB8B
	// succ:  l000DEB74 l000DEB8B
l000DEB74:
	v56 = arg1
	v57 = fn000D2742(v56)
	loc3 = v57
	v58 = loc3
	v59 = 0<32>
	v60 = v58 == v59
	loc4 = v60
	v61 = loc4
	branch !v61 l000DEB8A
	// succ:  l000DEB85 l000DEB8A
l000DEB85:
	v62 = 6<32>
	loc26 = v62
	// succ:  l000DEB8A
l000DEB8A:
	goto l000DEB8F
	// succ:  l000DEB8F
l000DEB8B:
	v63 = 6<32>
	loc26 = v63
	// succ:  l000DEB8F
l000DEB8F:
	v64 = loc26
	v65 = 6<32>
	v66 = v64 == v65
	branch !v66 l000DEC15
	// succ:  l000DEB97 l000DEC15
l000DEB97:
	v67 = arg1
	v68 = 4<32>
	v69 = v67 + v68
	loc5 = v69
	v70 = loc5
	v71 = Mem0[v70:word32]
	loc6 = v71
	v72 = arg1
	v73 = 0x2C<32>
	v74 = v72 + v73
	loc7 = v74
	v75 = loc7
	v76 = Mem0[v75:word32]
	loc8 = v76
	v77 = loc8
	v78 = 0xFFFFFFF8<32>
	v79 = v77 + v78
	loc9 = v79
	v80 = loc6
	v81 = loc9
	v82 = v80 >u v81
	loc10 = v82
	v83 = loc10
	branch !v83 l000DEC14
	// succ:  l000DEBC5 l000DEC14
l000DEBC5:
	v84 = arg0
	v85 = 0xFF<32>
	v86 = v84 & v85
	loc14 = v86
	v87 = loc6
	v88 = 0xFFFFFFFF<32>
	v89 = v87 + v88
	loc15 = v89
	v90 = loc5
	v91 = loc15
	Mem0[v90:word32] = v91
	v92 = loc15
	v93 = loc14
	v94 = SLICE(v93, byte, 0)
	Mem0[v92:byte] = v94
	v95 = arg1
	v96 = Mem0[v95:word32]
	loc16 = v96
	v97 = loc16
	v98 = 0xFFFFFFEF<32>
	v99 = v97 & v98
	loc17 = v99
	v100 = arg1
	v101 = loc17
	Mem0[v100:word32] = v101
	v102 = loc12
	v103 = 0<32>
	v104 = v102 == v103
	loc18 = v104
	v105 = loc18
	branch !v105 l000DEC09
	// succ:  l000DEC02 l000DEC09
l000DEC02:
	v106 = arg0
	loc2 = v106
	goto l000DEC2F
	// succ:  l000DEC2F
l000DEC09:
	v107 = arg1
	fn000D1351(v107)
	v108 = arg0
	loc2 = v108
	goto l000DEC2F
	// succ:  l000DEC2F
l000DEC14:
	// succ:  l000DEC15
l000DEC15:
	v109 = loc12
	v110 = 0<32>
	v111 = v109 == v110
	loc11 = v111
	v112 = loc11
	branch !v112 l000DEC25
	// succ:  l000DEC20 l000DEC25
l000DEC20:
	v113 = 0xFFFFFFFF<32>
	loc2 = v113
	goto l000DEC2D
	// succ:  l000DEC2D
l000DEC25:
	v114 = arg1
	fn000D1351(v114)
	v115 = 0xFFFFFFFF<32>
	loc2 = v115
	// succ:  l000DEC2D
l000DEC2D:
	// succ:  l000DEC2E
l000DEC2E:
	// succ:  l000DEC2F
l000DEC2F:
	v116 = loc2
fn000DEB18_exit:


// fn000DEC35
// Return size: 0
word32 fn000DEC35(word32 arg0, word32 arg1)
fn000DEC35_entry:
	// succ:  l000DEC35
l000DEC35:
	v37 = Mem0[0x00140030<p32>:word32]
	loc36 = v37
	v38 = arg1
	v39 = 0x4C<32>
	v40 = v38 + v39
	loc13 = v40
	v41 = loc13
	v42 = Mem0[v41:word32]
	loc24 = v42
	v43 = loc24
	v44 = 0<32>
	v45 = v43 < v44
	loc29 = v45
	v46 = loc29
	branch !v46 l000DEC5A
	// succ:  l000DEC55 l000DEC5A
l000DEC55:
	v47 = 3<32>
	loc35 = v47
	goto l000DED0F
	// succ:  l000DED0F
l000DEC5A:
	v48 = arg1
	v49 = fn000D61F1(v48)
	loc30 = v49
	v50 = loc30
	v51 = 0<32>
	v52 = v50 == v51
	loc31 = v52
	v53 = loc31
	branch !v53 l000DEC71
	// succ:  l000DEC6C l000DEC71
l000DEC6C:
	v54 = 3<32>
	loc35 = v54
	goto l000DED0E
	// succ:  l000DED0E
l000DEC71:
	v55 = arg1
	v56 = 0x4B<32>
	v57 = v55 + v56
	loc14 = v57
	v58 = loc14
	v59 = Mem0[v58:int8]
	v60 = CONVERT(v59, int8, word32)
	loc15 = v60
	v61 = loc15
	v62 = 0x18<32>
	v63 = v61 << v62
	v64 = 0x18<32>
	v65 = v63 >> v64
	loc16 = v65
	v66 = loc16
	v67 = arg0
	v68 = v66 == v67
	loc17 = v68
	v69 = loc17
	branch !v69 l000DEC9A
	// succ:  l000DEC95 l000DEC9A
l000DEC95:
	v70 = 0xA<32>
	loc35 = v70
	goto l000DECF0
	// succ:  l000DECF0
l000DEC9A:
	v71 = arg1
	v72 = 0x14<32>
	v73 = v71 + v72
	loc18 = v73
	v74 = loc18
	v75 = Mem0[v74:word32]
	loc19 = v75
	v76 = arg1
	v77 = 0x10<32>
	v78 = v76 + v77
	loc20 = v78
	v79 = loc20
	v80 = Mem0[v79:word32]
	loc21 = v80
	v81 = loc19
	v82 = loc21
	v83 = v81 <u v82
	loc22 = v83
	v84 = loc22
	branch !v84 l000DECEB
	// succ:  l000DECC1 l000DECEB
l000DECC1:
	v85 = arg0
	v86 = 0xFF<32>
	v87 = v85 & v86
	loc23 = v87
	v88 = loc19
	v89 = 1<32>
	v90 = v88 + v89
	loc25 = v90
	v91 = loc18
	v92 = loc25
	Mem0[v91:word32] = v92
	v93 = loc19
	v94 = loc23
	v95 = SLICE(v94, byte, 0)
	Mem0[v93:byte] = v95
	v96 = arg0
	v97 = 0xFF<32>
	v98 = v96 & v97
	loc26 = v98
	v99 = loc26
	loc28 = v99
	goto l000DECEF
	// succ:  l000DECEF
l000DECEB:
	v100 = 0xA<32>
	loc35 = v100
	// succ:  l000DECEF
l000DECEF:
	// succ:  l000DECF0
l000DECF0:
	v101 = loc35
	v102 = 0xA<32>
	v103 = v101 == v102
	branch !v103 l000DED06
	// succ:  l000DECF8 l000DED06
l000DECF8:
	v104 = arg1
	v105 = arg0
	v106 = fn000DE8FC(v104, v105)
	loc27 = v106
	v107 = loc27
	loc28 = v107
	// succ:  l000DED06
l000DED06:
	v108 = arg1
	fn000D1351(v108)
	v109 = loc28
	loc2 = v109
	// succ:  l000DED0E
l000DED0E:
	// succ:  l000DED0F
l000DED0F:
	v110 = loc35
	v111 = 3<32>
	v112 = v110 == v111
	branch !v112 l000DEDA0
	// succ:  l000DED19 l000DEDA0
l000DED19:
	v113 = arg1
	v114 = 0x4B<32>
	v115 = v113 + v114
	loc32 = v115
	v116 = loc32
	v117 = Mem0[v116:int8]
	v118 = CONVERT(v117, int8, word32)
	loc33 = v118
	v119 = loc33
	v120 = 0x18<32>
	v121 = v119 << v120
	v122 = 0x18<32>
	v123 = v121 >> v122
	loc34 = v123
	v124 = loc34
	v125 = arg0
	v126 = v124 == v125
	loc3 = v126
	v127 = loc3
	v128 = v127 == 0<32>
	branch !v128 l000DED92
	// succ:  l000DED3E l000DED92
l000DED3E:
	v129 = arg1
	v130 = 0x14<32>
	v131 = v129 + v130
	loc4 = v131
	v132 = loc4
	v133 = Mem0[v132:word32]
	loc5 = v133
	v134 = arg1
	v135 = 0x10<32>
	v136 = v134 + v135
	loc6 = v136
	v137 = loc6
	v138 = Mem0[v137:word32]
	loc7 = v138
	v139 = loc5
	v140 = loc7
	v141 = v139 <u v140
	loc8 = v141
	v142 = loc8
	branch !v142 l000DED91
	// succ:  l000DED65 l000DED91
l000DED65:
	v143 = arg0
	v144 = 0xFF<32>
	v145 = v143 & v144
	loc9 = v145
	v146 = loc5
	v147 = 1<32>
	v148 = v146 + v147
	loc10 = v148
	v149 = loc4
	v150 = loc10
	Mem0[v149:word32] = v150
	v151 = loc5
	v152 = loc9
	v153 = SLICE(v152, byte, 0)
	Mem0[v151:byte] = v153
	v154 = arg0
	v155 = 0xFF<32>
	v156 = v154 & v155
	loc11 = v156
	v157 = loc11
	loc2 = v157
	goto l000DEDA0
	// succ:  l000DEDA0
l000DED91:
	// succ:  l000DED92
l000DED92:
	v158 = arg1
	v159 = arg0
	v160 = fn000DE8FC(v158, v159)
	loc12 = v160
	v161 = loc12
	loc2 = v161
	// succ:  l000DEDA0
l000DEDA0:
	// succ:  l000DEDA0
l000DEDA0:
	v162 = loc2
fn000DEC35_exit:


// fn000DEDA6
// Return size: 0
word32 fn000DEDA6(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000DEDA6_entry:
	// succ:  l000DEDA6
l000DEDA6:
	v16 = Mem0[0x00140030<p32>:word32]
	loc17 = v16
	v17 = arg2
	v18 = arg1
	v19 = v17 * v18
	loc9 = v19
	v20 = arg3
	v21 = 0x4C<32>
	v22 = v20 + v21
	loc10 = v22
	v23 = loc10
	v24 = Mem0[v23:word32]
	loc11 = v24
	v25 = loc11
	v26 = 0xFFFFFFFF<32>
	v27 = v25 > v26
	loc12 = v27
	v28 = loc12
	branch !v28 l000DEDF9
	// succ:  l000DEDCD l000DEDF9
l000DEDCD:
	v29 = arg3
	v30 = fn000D61F1(v29)
	loc14 = v30
	v31 = loc14
	v32 = 0<32>
	v33 = v31 == v32
	loc15 = v33
	v34 = arg0
	v35 = loc9
	v36 = arg3
	v37 = fn000D61FC(v34, v35, v36)
	loc4 = v37
	v38 = loc15
	branch !v38 l000DEDEF
	// succ:  l000DEDEA l000DEDEF
l000DEDEA:
	v39 = loc4
	loc6 = v39
	goto l000DEDF7
	// succ:  l000DEDF7
l000DEDEF:
	v40 = arg3
	fn000D1351(v40)
	v41 = loc4
	loc6 = v41
	// succ:  l000DEDF7
l000DEDF7:
	goto l000DEE08
	// succ:  l000DEE08
l000DEDF9:
	v42 = arg0
	v43 = loc9
	v44 = arg3
	v45 = fn000D61FC(v42, v43, v44)
	loc13 = v45
	v46 = loc13
	loc6 = v46
	// succ:  l000DEE08
l000DEE08:
	v47 = loc6
	v48 = loc9
	v49 = v47 == v48
	loc5 = v49
	v50 = loc5
	branch !v50 l000DEE19
	// succ:  l000DEE14 l000DEE19
l000DEE14:
	v51 = arg2
	loc8 = v51
	goto l000DEE28
	// succ:  l000DEE28
l000DEE19:
	v52 = loc6
	v53 = arg1
	v54 = i32u-div(v52, v53)
	v55 = 0xFFFFFFFF<32>
	v56 = v54 & v55
	loc7 = v56
	v57 = loc7
	loc8 = v57
	// succ:  l000DEE28
l000DEE28:
	v58 = loc8
fn000DEDA6_exit:


// fn000DEF2C
// Return size: 0
real64 fn000DEF2C(word32 arg0, word32 arg1, word32 arg2)
fn000DEF2C_entry:
	// succ:  l000DEF2C
l000DEF2C:
	v20 = Mem0[0x00140030<p32>:word32]
	loc19 = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = 0x70<32>
	v23 = v21 + v22
	Mem0[0x00140030<p32>:word32] = v23
	v24 = Mem0[0x00140030<p32>:word32]
	v25 = Mem0[0x00140034<p32>:word32]
	v26 = v24 >= v25
	branch !v26 l000DEF47
	// succ:  l000DEF41 l000DEF47
l000DEF41:
	v27 = 0x70<32>
	abortStackOverflow(v27)
	// succ:  l000DEF47
l000DEF47:
	v28 = loc19
	loc12 = v28
	v29 = loc12
	v30 = 0<64>
	Mem0[v29:word64] = v30
	v31 = loc12
	v32 = 8<32>
	v33 = v31 + v32
	v34 = 0<64>
	Mem0[v33:word64] = v34
	v35 = loc12
	v36 = 0x10<32>
	v37 = v35 + v36
	v38 = 0<64>
	Mem0[v37:word64] = v38
	v39 = loc12
	v40 = 0x18<32>
	v41 = v39 + v40
	v42 = 0<64>
	Mem0[v41:word64] = v42
	v43 = loc12
	v44 = 0x20<32>
	v45 = v43 + v44
	v46 = 0<64>
	Mem0[v45:word64] = v46
	v47 = loc12
	v48 = 0x28<32>
	v49 = v47 + v48
	v50 = 0<64>
	Mem0[v49:word64] = v50
	v51 = loc12
	v52 = 0x30<32>
	v53 = v51 + v52
	v54 = 0<64>
	Mem0[v53:word64] = v54
	v55 = loc12
	v56 = 0x38<32>
	v57 = v55 + v56
	v58 = 0<64>
	Mem0[v57:word64] = v58
	v59 = loc12
	v60 = 0x40<32>
	v61 = v59 + v60
	v62 = 0<64>
	Mem0[v61:word64] = v62
	v63 = loc12
	v64 = 0x48<32>
	v65 = v63 + v64
	v66 = 0<64>
	Mem0[v65:word64] = v66
	v67 = loc12
	v68 = 0x50<32>
	v69 = v67 + v68
	v70 = 0<64>
	Mem0[v69:word64] = v70
	v71 = loc12
	v72 = 0x58<32>
	v73 = v71 + v72
	v74 = 0<64>
	Mem0[v73:word64] = v74
	v75 = loc12
	v76 = 0x60<32>
	v77 = v75 + v76
	v78 = 0<64>
	Mem0[v77:word64] = v78
	v79 = loc12
	v80 = 0x68<32>
	v81 = v79 + v80
	v82 = 0<64>
	Mem0[v81:word64] = v82
	v83 = loc12
	v84 = 4<32>
	v85 = v83 + v84
	loc13 = v85
	v86 = loc13
	v87 = arg0
	Mem0[v86:word32] = v87
	v88 = loc12
	v89 = 8<32>
	v90 = v88 + v89
	loc14 = v90
	v91 = loc14
	v92 = 0xFFFFFFFF<32>
	Mem0[v91:word32] = v92
	v93 = loc12
	v94 = 0x2C<32>
	v95 = v93 + v94
	loc15 = v95
	v96 = loc15
	v97 = arg0
	Mem0[v96:word32] = v97
	v98 = loc12
	v99 = 0x4C<32>
	v100 = v98 + v99
	loc16 = v100
	v101 = loc16
	v102 = 0xFFFFFFFF<32>
	Mem0[v101:word32] = v102
	v103 = loc12
	v104 = 0<32>
	fn000D1767(v103, v104)
	v105 = loc12
	v106 = arg2
	v107 = 1<32>
	v108 = fn000D7B90(v105, v106, v107)
	loc20 = v108
	v109 = loc12
	v110 = 0x6C<32>
	v111 = v109 + v110
	loc17 = v111
	v112 = loc17
	v113 = Mem0[v112:word32]
	loc3 = v113
	v114 = loc13
	v115 = Mem0[v114:word32]
	loc4 = v115
	v116 = loc14
	v117 = Mem0[v116:word32]
	loc5 = v117
	v118 = loc4
	v119 = loc5
	v120 = v118 - v119
	loc6 = v120
	v121 = loc6
	v122 = loc3
	v123 = v121 + v122
	loc7 = v123
	v124 = arg1
	v125 = 0<32>
	v126 = v124 == v125
	loc8 = v126
	v127 = loc8
	v128 = v127 == 0<32>
	branch !v128 l000DF07D
	// succ:  l000DF05B l000DF07D
l000DF05B:
	v129 = loc7
	v130 = 0<32>
	v131 = v129 != v130
	loc9 = v131
	v132 = arg0
	v133 = loc7
	v134 = v132 + v133
	loc10 = v134
	v135 = loc9
	branch !v135 l000DF070
	// succ:  l000DF06D l000DF070
l000DF06D:
	v136 = loc10
	goto l000DF072
	// succ:  l000DF072
l000DF070:
	v137 = arg0
	// succ:  l000DF072
l000DF072:
	loc11 = v137
	v138 = arg1
	v139 = loc11
	Mem0[v138:word32] = v139
	// succ:  l000DF07D
l000DF07D:
	v140 = loc19
	Mem0[0x00140030<p32>:word32] = v140
	v141 = loc20
fn000DEF2C_exit:


// fn000DF086
// Return size: 0
real64 fn000DF086(word32 arg0, word32 arg1, word32 arg2)
fn000DF086_entry:
	// succ:  l000DF086
l000DF086:
	v5 = Mem0[0x00140030<p32>:word32]
	loc4 = v5
	v6 = arg0
	v7 = arg1
	v8 = 2<32>
	v9 = fn000DEF2C(v6, v7, v8)
	loc5 = v9
	v10 = loc5
fn000DF086_exit:


