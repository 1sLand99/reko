// fn000E3D5D
// Return size: 0
word32 fn000E3D5D(word32 arg0, word32 arg1)
fn000E3D5D_entry:
	// succ:  l000E3D5D
l000E3D5D:
	v18 = Mem0[0x00140030<p32>:word32]
	loc17 = v18
	v19 = arg0
	v20 = 0<32>
	v21 = v19 == v20
	loc8 = v21
	v22 = loc8
	branch !v22 l000E3D73
	// succ:  l000E3D6E l000E3D73
l000E3D6E:
	v23 = 0<32>
	loc3 = v23
	goto l000E3DB6
	// succ:  l000E3DB6
l000E3D73:
	v24 = arg1
	v25 = arg0
	v26 = v24 * v25
	loc9 = v26
	v27 = arg1
	v28 = arg0
	v29 = v27 | v28
	loc10 = v29
	v30 = loc10
	v31 = 0xFFFF<32>
	v32 = v30 >u v31
	loc11 = v32
	v33 = loc11
	branch !v33 l000E3DB1
	// succ:  l000E3D8E l000E3DB1
l000E3D8E:
	v34 = loc9
	v35 = arg0
	v36 = i32u-div(v34, v35)
	v37 = 0xFFFFFFFF<32>
	v38 = v36 & v37
	loc12 = v38
	v39 = loc12
	v40 = arg1
	v41 = v39 == v40
	loc13 = v41
	v42 = loc13
	branch !v42 l000E3DA7
	// succ:  l000E3DA4 l000E3DA7
l000E3DA4:
	v43 = loc9
	goto l000E3DA9
	// succ:  l000E3DA9
l000E3DA7:
	v44 = 0xFFFFFFFF<32>
	// succ:  l000E3DA9
l000E3DA9:
	loc2 = v44
	v45 = loc2
	loc3 = v45
	goto l000E3DB5
	// succ:  l000E3DB5
l000E3DB1:
	v46 = loc9
	loc3 = v46
	// succ:  l000E3DB5
l000E3DB5:
	// succ:  l000E3DB6
l000E3DB6:
	v47 = loc3
	v48 = _malloc(v47)
	loc14 = v48
	v49 = loc14
	v50 = 0<32>
	v51 = v49 == v50
	loc15 = v51
	v52 = loc15
	branch !v52 l000E3DCD
	// succ:  l000E3DC9 l000E3DCD
l000E3DC9:
	v53 = loc14
	return v53
	// succ:  fn000E3D5D_exit
l000E3DCD:
	v54 = loc14
	v55 = 0xFFFFFFFC<32>
	v56 = v54 + v55
	loc4 = v56
	v57 = loc4
	v58 = Mem0[v57:word32]
	loc5 = v58
	v59 = loc5
	v60 = 3<32>
	v61 = v59 & v60
	loc6 = v61
	v62 = loc6
	v63 = 0<32>
	v64 = v62 == v63
	loc7 = v64
	v65 = loc7
	branch !v65 l000E3DF1
	// succ:  l000E3DED l000E3DF1
l000E3DED:
	v66 = loc14
	return v66
	// succ:  fn000E3D5D_exit
l000E3DF1:
	v67 = loc14
	v68 = 0<32>
	v69 = loc3
	v70 = _memset(v67, v68, v69)
	v71 = loc14
	return v71
	// succ:  fn000E3D5D_exit
l000E3DFE:
	return v43
	// succ:  fn000E3D5D_exit
fn000E3D5D_exit:


// fn000E3E00
// Return size: 0
word32 fn000E3E00(word32 arg0, word32 arg1)
fn000E3E00_entry:
	// succ:  l000E3E00
l000E3E00:
	v28 = Mem0[0x00140030<p32>:word32]
	loc27 = v28
	v29 = arg0
	v30 = 0<32>
	v31 = v29 == v30
	loc13 = v31
	v32 = loc13
	branch !v32 l000E3E20
	// succ:  l000E3E11 l000E3E20
l000E3E11:
	v33 = arg1
	v34 = _malloc(v33)
	loc19 = v34
	v35 = loc19
	loc2 = v35
	v36 = loc2
	return v36
	// succ:  fn000E3E00_exit
l000E3E20:
	v37 = arg1
	v38 = 0xFFFFFFBF<32>
	v39 = v37 >u v38
	loc20 = v39
	v40 = loc20
	branch !v40 l000E3E3F
	// succ:  l000E3E2C l000E3E3F
l000E3E2C:
	v41 = ___errno_location()
	loc21 = v41
	v42 = loc21
	v43 = 0xC<32>
	Mem0[v42:word32] = v43
	v44 = 0<32>
	loc2 = v44
	v45 = loc2
	return v45
	// succ:  fn000E3E00_exit
l000E3E3F:
	v46 = arg1
	v47 = 0xB<32>
	v48 = v46 <u v47
	loc22 = v48
	v49 = arg1
	v50 = 0xB<32>
	v51 = v49 + v50
	loc23 = v51
	v52 = loc23
	v53 = 0xFFFFFFF8<32>
	v54 = v52 & v53
	loc24 = v54
	v55 = loc22
	branch !v55 l000E3E5B
	// succ:  l000E3E58 l000E3E5B
l000E3E58:
	v56 = 0x10<32>
	goto l000E3E5D
	// succ:  l000E3E5D
l000E3E5B:
	v57 = loc24
	// succ:  l000E3E5D
l000E3E5D:
	loc25 = v57
	v58 = arg0
	v59 = 0xFFFFFFF8<32>
	v60 = v58 + v59
	loc3 = v60
	v61 = loc3
	v62 = loc25
	v63 = fn000E3F06(v61, v62)
	loc4 = v63
	v64 = loc4
	v65 = 0<32>
	v66 = v64 == v65
	loc5 = v66
	v67 = loc5
	v68 = v67 == 0<32>
	branch !v68 l000E3E8B
	// succ:  l000E3E7C l000E3E8B
l000E3E7C:
	v69 = loc4
	v70 = 8<32>
	v71 = v69 + v70
	loc6 = v71
	v72 = loc6
	loc2 = v72
	v73 = loc2
	return v73
	// succ:  fn000E3E00_exit
l000E3E8B:
	v74 = arg1
	v75 = _malloc(v74)
	loc7 = v75
	v76 = loc7
	v77 = 0<32>
	v78 = v76 == v77
	loc8 = v78
	v79 = loc8
	branch !v79 l000E3EA5
	// succ:  l000E3E9D l000E3EA5
l000E3E9D:
	v80 = 0<32>
	loc2 = v80
	v81 = loc2
	return v81
	// succ:  fn000E3E00_exit
l000E3EA5:
	v82 = arg0
	v83 = 0xFFFFFFFC<32>
	v84 = v82 + v83
	loc9 = v84
	v85 = loc9
	v86 = Mem0[v85:word32]
	loc10 = v86
	v87 = loc10
	v88 = 0xFFFFFFF8<32>
	v89 = v87 & v88
	loc11 = v89
	v90 = loc10
	v91 = 3<32>
	v92 = v90 & v91
	loc12 = v92
	v93 = loc12
	v94 = 0<32>
	v95 = v93 == v94
	loc14 = v95
	v96 = loc14
	branch !v96 l000E3ECF
	// succ:  l000E3ECC l000E3ECF
l000E3ECC:
	v97 = 8<32>
	goto l000E3ED1
	// succ:  l000E3ED1
l000E3ECF:
	v98 = 4<32>
	// succ:  l000E3ED1
l000E3ED1:
	loc15 = v98
	v99 = loc11
	v100 = loc15
	v101 = v99 - v100
	loc16 = v101
	v102 = loc16
	v103 = arg1
	v104 = v102 <u v103
	loc17 = v104
	v105 = loc17
	branch !v105 l000E3EE9
	// succ:  l000E3EE6 l000E3EE9
l000E3EE6:
	v106 = loc16
	goto l000E3EEB
	// succ:  l000E3EEB
l000E3EE9:
	v107 = arg1
	// succ:  l000E3EEB
l000E3EEB:
	loc18 = v107
	v108 = loc7
	v109 = arg0
	v110 = loc18
	v111 = _memcpy(v108, v109, v110)
	v112 = arg0
	_free(v112)
	v113 = loc7
	loc2 = v113
	v114 = loc2
	return v114
	// succ:  fn000E3E00_exit
l000E3F04:
	return v106
	// succ:  fn000E3E00_exit
fn000E3E00_exit:


// fn000E5815
// Return size: 0
void fn000E5815(word32 arg0)
fn000E5815_entry:
	// succ:  l000E5815
l000E5815:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn000E5823(v5)
	return
	// succ:  fn000E5815_exit
l000E5821:
	return
	// succ:  fn000E5815_exit
fn000E5815_exit:


// fn000E5823
// Return size: 0
void fn000E5823(word32 arg0)
fn000E5823_entry:
	// succ:  l000E5823
l000E5823:
	v17 = Mem0[0x00140030<p32>:word32]
	loc15 = v17
	v18 = arg0
	v19 = 0x1920<32>
	Mem0[v18:word32] = v19
	v20 = 0<32>
	Mem0[0x00140048<p32>:word32] = v20
	v21 = 0x171<32>
	v22 = arg0
	v23 = 0<32>
	invoke_vii(v21, v22, v23)
	v24 = Mem0[0x00140048<p32>:word32]
	loc1 = v24
	v25 = 0<32>
	Mem0[0x00140048<p32>:word32] = v25
	v26 = loc1
	v27 = 1<32>
	v28 = v26 & v27
	loc6 = v28
	v29 = loc6
	branch !v29 l000E5860
	// succ:  l000E5851 l000E5860
l000E5851:
	v30 = 0<32>
	v31 = ___cxa_find_matching_catch_3(v30)
	loc4 = v31
	v32 = Mem0[0x00140094<p32>:word32]
	loc5 = v32
	v33 = loc4
	fn000D0E65(v33)
	goto l000E58B9
	// succ:  l000E58B9
l000E5860:
	v34 = arg0
	v35 = 0x1C<32>
	v36 = v34 + v35
	loc7 = v36
	v37 = loc7
	fn0011B3FB(v37)
	v38 = arg0
	v39 = 0x20<32>
	v40 = v38 + v39
	loc8 = v40
	v41 = loc8
	v42 = Mem0[v41:word32]
	loc9 = v42
	v43 = loc9
	_free(v43)
	v44 = arg0
	v45 = 0x24<32>
	v46 = v44 + v45
	loc10 = v46
	v47 = loc10
	v48 = Mem0[v47:word32]
	loc11 = v48
	v49 = loc11
	_free(v49)
	v50 = arg0
	v51 = 0x30<32>
	v52 = v50 + v51
	loc12 = v52
	v53 = loc12
	v54 = Mem0[v53:word32]
	loc13 = v54
	v55 = loc13
	_free(v55)
	v56 = arg0
	v57 = 0x3C<32>
	v58 = v56 + v57
	loc2 = v58
	v59 = loc2
	v60 = Mem0[v59:word32]
	loc3 = v60
	v61 = loc3
	_free(v61)
	return
	// succ:  fn000E5823_exit
l000E58B9:
	// succ:  l000E58BA
l000E58BA:
	return
	// succ:  fn000E5823_exit
fn000E5823_exit:


// fn000E58BC
// Return size: 0
void fn000E58BC(word32 arg0, word32 arg1)
fn000E58BC_entry:
	// succ:  l000E58BC
l000E58BC:
	v17 = Mem0[0x00140030<p32>:word32]
	loc16 = v17
	v18 = arg0
	v19 = 0x28<32>
	v20 = v18 + v19
	loc7 = v20
	v21 = loc7
	v22 = Mem0[v21:word32]
	loc8 = v22
	v23 = arg0
	v24 = 0x20<32>
	v25 = v23 + v24
	loc9 = v25
	v26 = arg0
	v27 = 0x24<32>
	v28 = v26 + v27
	loc10 = v28
	v29 = loc8
	loc2 = v29
	// succ:  l000E58E4
l000E58E4:
	v30 = loc2
	v31 = 0<32>
	v32 = v30 == v31
	loc11 = v32
	v33 = loc11
	branch !v33 l000E58F4
	// succ:  l000E58F1 l000E58F4
l000E58F1:
l000E58F4:
	v34 = loc2
	v35 = 0xFFFFFFFF<32>
	v36 = v34 + v35
	loc12 = v36
	v37 = loc9
	v38 = Mem0[v37:word32]
	loc13 = v38
	v39 = loc13
	v40 = loc12
	v41 = 2<32>
	v42 = v40 << v41
	v43 = v39 + v42
	loc14 = v43
	v44 = loc14
	v45 = Mem0[v44:word32]
	loc3 = v45
	v46 = loc10
	v47 = Mem0[v46:word32]
	loc4 = v47
	v48 = loc4
	v49 = loc12
	v50 = 2<32>
	v51 = v49 << v50
	v52 = v48 + v51
	loc5 = v52
	v53 = loc5
	v54 = Mem0[v53:word32]
	loc6 = v54
	v55 = arg1
	v56 = arg0
	v57 = loc6
	v58 = loc3
	v59 = 0x1FF<32>
	v60 = v58 & v59
	v61 = 0x2820<32>
	v62 = v60 + v61
fn000E58BC_exit:


// fn000E594A
// Return size: 0
void fn000E594A(word32 arg0)
fn000E594A_entry:
	// succ:  l000E594A
l000E594A:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn000E5823(v5)
	v6 = arg0
	fn0011B709(v6)
	return
	// succ:  fn000E594A_exit
l000E595B:
	return
	// succ:  fn000E594A_exit
fn000E594A_exit:


// fn000E595D
// Return size: 0
void fn000E595D(word32 arg0)
fn000E595D_entry:
	// succ:  l000E595D
l000E595D:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn000E5823(v5)
	return
	// succ:  fn000E595D_exit
l000E5969:
	return
	// succ:  fn000E595D_exit
fn000E595D_exit:


// fn000E596B
// Return size: 0
void fn000E596B(word32 arg0)
fn000E596B_entry:
	// succ:  l000E596B
l000E596B:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 0x1930<32>
	Mem0[v6:word32] = v7
	v8 = arg0
	v9 = 4<32>
	v10 = v8 + v9
	loc1 = v10
	v11 = loc1
	fn0011B3FB(v11)
	return
	// succ:  fn000E596B_exit
l000E5986:
	return
	// succ:  fn000E596B_exit
fn000E596B_exit:


// fn000E5988
// Return size: 0
void fn000E5988(word32 arg0)
fn000E5988_entry:
	// succ:  l000E5988
l000E5988:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 0x1930<32>
	Mem0[v6:word32] = v7
	v8 = arg0
	v9 = 4<32>
	v10 = v8 + v9
	loc1 = v10
	v11 = loc1
	fn0011B3FB(v11)
	v12 = arg0
	fn0011B709(v12)
	return
	// succ:  fn000E5988_exit
l000E59A8:
	return
	// succ:  fn000E5988_exit
fn000E5988_exit:


// fn000E59AA
// Return size: 0
void fn000E59AA(word32 arg0, word32 arg1)
fn000E59AA_entry:
	// succ:  l000E59AA
l000E59AA:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	return
	// succ:  fn000E59AA_exit
l000E59B1:
	return
	// succ:  fn000E59AA_exit
fn000E59AA_exit:


// fn000E59BE
// Return size: 0
void fn000E59BE(word32 arg0, word32 arg1, word64 arg2, word32 arg3, word32 arg4)
fn000E59BE_entry:
	// succ:  l000E59BE
l000E59BE:
	v5 = Mem0[0x00140030<p32>:word32]
	loc7 = v5
	v6 = arg0
	v7 = 0<64>
	Mem0[v6:word64] = v7
	v8 = arg0
	v9 = 8<32>
	v10 = v8 + v9
	loc5 = v10
	v11 = loc5
	v12 = 0xFFFFFFFFFFFFFFFF<64>
	Mem0[v11:word64] = v12
	return
	// succ:  fn000E59BE_exit
l000E59DA:
	return
	// succ:  fn000E59BE_exit
fn000E59BE_exit:


// fn000E59DC
// Return size: 0
void fn000E59DC(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000E59DC_entry:
	// succ:  l000E59DC
l000E59DC:
	v5 = Mem0[0x00140030<p32>:word32]
	loc6 = v5
	v6 = arg0
	v7 = 0<64>
	Mem0[v6:word64] = v7
	v8 = arg0
	v9 = 8<32>
	v10 = v8 + v9
	loc4 = v10
	v11 = loc4
	v12 = 0xFFFFFFFFFFFFFFFF<64>
	Mem0[v11:word64] = v12
	return
	// succ:  fn000E59DC_exit
l000E59F8:
	return
	// succ:  fn000E59DC_exit
fn000E59DC_exit:


// fn000E5A10
// Return size: 0
word32 fn000E5A10(word32 arg0, word32 arg1, word32 arg2)
fn000E5A10_entry:
	// succ:  l000E5A10
l000E5A10:
	v23 = Mem0[0x00140030<p32>:word32]
	loc23 = v23
	v24 = arg0
	v25 = 0xC<32>
	v26 = v24 + v25
	loc14 = v26
	v27 = arg0
	v28 = 0x10<32>
	v29 = v27 + v28
	loc15 = v29
	v30 = 0<32>
	loc3 = v30
	v31 = arg1
	loc4 = v31
	// succ:  l000E5A2E
l000E5A2E:
	v32 = loc3
	v33 = arg2
	v34 = v32 < v33
	loc16 = v34
	v35 = loc16
	v36 = v35 == 0<32>
	branch !v36 l000E5A3F
	// succ:  l000E5A3C l000E5A3F
l000E5A3C:
l000E5A3F:
	v37 = loc14
	v38 = Mem0[v37:word32]
	loc17 = v38
	v39 = loc15
	v40 = Mem0[v39:word32]
	loc18 = v40
	v41 = loc17
	v42 = loc18
	v43 = v41 <u v42
	loc19 = v43
	v44 = loc19
	branch !v44 l000E5A72
	// succ:  l000E5A58 l000E5A72
l000E5A58:
	v45 = loc17
	v46 = 1<32>
	v47 = v45 + v46
	loc20 = v47
	v48 = loc14
	v49 = loc20
	Mem0[v48:word32] = v49
	v50 = loc17
	v51 = Mem0[v50:int8]
	v52 = CONVERT(v51, int8, word32)
	loc5 = v52
	v53 = loc5
	loc21 = v53
l000E5A72:
	v54 = arg0
	v55 = Mem0[v54:word32]
	loc6 = v55
	v56 = loc6
	v57 = 0x28<32>
	v58 = v56 + v57
	loc7 = v58
	v59 = loc7
	v60 = Mem0[v59:word32]
	loc8 = v60
	v61 = arg0
	v62 = loc8
	v63 = 0x1FF<32>
	v64 = v62 & v63
	v65 = 0xB00<32>
	v66 = v64 + v65
fn000E5A10_exit:


// fn000E5AE4
// Return size: 0
word32 fn000E5AE4(word32 arg0)
fn000E5AE4_entry:
	// succ:  l000E5AE4
l000E5AE4:
	v15 = Mem0[0x00140030<p32>:word32]
	loc13 = v15
	v16 = arg0
	v17 = Mem0[v16:word32]
	loc2 = v17
	v18 = loc2
	v19 = 0x24<32>
	v20 = v18 + v19
	loc4 = v20
	v21 = loc4
	v22 = Mem0[v21:word32]
	loc5 = v22
	v23 = arg0
	v24 = loc5
	v25 = 0x1FF<32>
	v26 = v24 & v25
	v27 = 0xB00<32>
	v28 = v26 + v27
fn000E5AE4_exit:


// fn000E5B60
// Return size: 0
word32 fn000E5B60(word32 arg0, word32 arg1, word32 arg2)
fn000E5B60_entry:
	// succ:  l000E5B60
l000E5B60:
	v33 = Mem0[0x00140030<p32>:word32]
	loc33 = v33
	v34 = arg0
	v35 = 0x18<32>
	v36 = v34 + v35
	loc25 = v36
	v37 = arg0
	v38 = 0x1C<32>
	v39 = v37 + v38
	loc26 = v39
	v40 = arg1
	loc3 = v40
	v41 = 0<32>
	loc4 = v41
	// succ:  l000E5B7E
l000E5B7E:
	v42 = loc4
	v43 = arg2
	v44 = v42 < v43
	loc27 = v44
	v45 = loc27
	v46 = v45 == 0<32>
	branch !v46 l000E5B8F
	// succ:  l000E5B8C l000E5B8F
l000E5B8C:
l000E5B8F:
	v47 = loc25
	v48 = Mem0[v47:word32]
	loc28 = v48
	v49 = loc26
	v50 = Mem0[v49:word32]
	loc29 = v50
	v51 = loc28
	v52 = loc29
	v53 = v51 <u v52
	loc30 = v53
	v54 = loc30
	v55 = v54 == 0<32>
	v55 = v55
	// succ:  l000E5BA9 l000E5BA9
l000E5BA9:
	v56 = arg0
	v57 = Mem0[v56:word32]
	loc31 = v57
	v58 = loc31
	v59 = 0x34<32>
	v60 = v58 + v59
	loc7 = v60
	v61 = loc7
	v62 = Mem0[v61:word32]
	loc8 = v62
	v63 = loc3
	v64 = Mem0[v63:int8]
	v65 = CONVERT(v64, int8, word32)
	loc9 = v65
	v66 = loc9
	v67 = 0xFF<32>
	v68 = v66 & v67
	loc10 = v68
	v69 = arg0
	v70 = loc10
	v71 = loc8
	v72 = 0x1FF<32>
	v73 = v71 & v72
	v74 = 0x1B20<32>
	v75 = v73 + v74
fn000E5B60_exit:


// fn000E5C8E
// Return size: 0
void fn000E5C8E(word32 arg0)
fn000E5C8E_entry:
	// succ:  l000E5C8E
l000E5C8E:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 0x1970<32>
	Mem0[v6:word32] = v7
	v8 = arg0
	v9 = 4<32>
	v10 = v8 + v9
	loc1 = v10
	v11 = loc1
	fn0011B3FB(v11)
	return
	// succ:  fn000E5C8E_exit
l000E5CA9:
	return
	// succ:  fn000E5C8E_exit
fn000E5C8E_exit:


// fn000E5CAB
// Return size: 0
void fn000E5CAB(word32 arg0)
fn000E5CAB_entry:
	// succ:  l000E5CAB
l000E5CAB:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 0x1970<32>
	Mem0[v6:word32] = v7
	v8 = arg0
	v9 = 4<32>
	v10 = v8 + v9
	loc1 = v10
	v11 = loc1
	fn0011B3FB(v11)
	v12 = arg0
	fn0011B709(v12)
	return
	// succ:  fn000E5CAB_exit
l000E5CCB:
	return
	// succ:  fn000E5CAB_exit
fn000E5CAB_exit:


// fn000E5CCD
// Return size: 0
void fn000E5CCD(word32 arg0, word32 arg1)
fn000E5CCD_entry:
	// succ:  l000E5CCD
l000E5CCD:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	return
	// succ:  fn000E5CCD_exit
l000E5CD4:
	return
	// succ:  fn000E5CCD_exit
fn000E5CCD_exit:


// fn000E5CE1
// Return size: 0
void fn000E5CE1(word32 arg0, word32 arg1, word64 arg2, word32 arg3, word32 arg4)
fn000E5CE1_entry:
	// succ:  l000E5CE1
l000E5CE1:
	v5 = Mem0[0x00140030<p32>:word32]
	loc7 = v5
	v6 = arg0
	v7 = 0<64>
	Mem0[v6:word64] = v7
	v8 = arg0
	v9 = 8<32>
	v10 = v8 + v9
	loc5 = v10
	v11 = loc5
	v12 = 0xFFFFFFFFFFFFFFFF<64>
	Mem0[v11:word64] = v12
	return
	// succ:  fn000E5CE1_exit
l000E5CFD:
	return
	// succ:  fn000E5CE1_exit
fn000E5CE1_exit:


// fn000E5CFF
// Return size: 0
void fn000E5CFF(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000E5CFF_entry:
	// succ:  l000E5CFF
l000E5CFF:
	v5 = Mem0[0x00140030<p32>:word32]
	loc6 = v5
	v6 = arg0
	v7 = 0<64>
	Mem0[v6:word64] = v7
	v8 = arg0
	v9 = 8<32>
	v10 = v8 + v9
	loc4 = v10
	v11 = loc4
	v12 = 0xFFFFFFFFFFFFFFFF<64>
	Mem0[v11:word64] = v12
	return
	// succ:  fn000E5CFF_exit
l000E5D1B:
	return
	// succ:  fn000E5CFF_exit
fn000E5CFF_exit:


// fn000E5D33
// Return size: 0
word32 fn000E5D33(word32 arg0, word32 arg1, word32 arg2)
fn000E5D33_entry:
	// succ:  l000E5D33
l000E5D33:
	v22 = Mem0[0x00140030<p32>:word32]
	loc22 = v22
	v23 = arg0
	v24 = 0xC<32>
	v25 = v23 + v24
	loc13 = v25
	v26 = arg0
	v27 = 0x10<32>
	v28 = v26 + v27
	loc14 = v28
	v29 = 0<32>
	loc3 = v29
	v30 = arg1
	loc4 = v30
	// succ:  l000E5D51
l000E5D51:
	v31 = loc3
	v32 = arg2
	v33 = v31 < v32
	loc15 = v33
	v34 = loc15
	v35 = v34 == 0<32>
	branch !v35 l000E5D62
	// succ:  l000E5D5F l000E5D62
l000E5D5F:
l000E5D62:
	v36 = loc13
	v37 = Mem0[v36:word32]
	loc16 = v37
	v38 = loc14
	v39 = Mem0[v38:word32]
	loc17 = v39
	v40 = loc16
	v41 = loc17
	v42 = v40 <u v41
	loc18 = v42
	v43 = loc18
	branch !v43 l000E5D95
	// succ:  l000E5D7B l000E5D95
l000E5D7B:
	v44 = loc16
	v45 = 4<32>
	v46 = v44 + v45
	loc19 = v46
	v47 = loc13
	v48 = loc19
	Mem0[v47:word32] = v48
	v49 = loc16
	v50 = Mem0[v49:word32]
	loc5 = v50
	v51 = loc5
	loc20 = v51
l000E5D95:
	v52 = arg0
	v53 = Mem0[v52:word32]
	loc6 = v53
	v54 = loc6
	v55 = 0x28<32>
	v56 = v54 + v55
	loc7 = v56
	v57 = loc7
	v58 = Mem0[v57:word32]
	loc8 = v58
	v59 = arg0
	v60 = loc8
	v61 = 0x1FF<32>
	v62 = v60 & v61
	v63 = 0xB00<32>
	v64 = v62 + v63
fn000E5D33_exit:


// fn000E5E00
// Return size: 0
word32 fn000E5E00(word32 arg0)
fn000E5E00_entry:
	// succ:  l000E5E00
l000E5E00:
	v14 = Mem0[0x00140030<p32>:word32]
	loc12 = v14
	v15 = arg0
	v16 = Mem0[v15:word32]
	loc2 = v16
	v17 = loc2
	v18 = 0x24<32>
	v19 = v17 + v18
	loc3 = v19
	v20 = loc3
	v21 = Mem0[v20:word32]
	loc4 = v21
	v22 = arg0
	v23 = loc4
	v24 = 0x1FF<32>
	v25 = v23 & v24
	v26 = 0xB00<32>
	v27 = v25 + v26
fn000E5E00_exit:


// fn000E5E74
// Return size: 0
word32 fn000E5E74(word32 arg0, word32 arg1, word32 arg2)
fn000E5E74_entry:
	// succ:  l000E5E74
l000E5E74:
	v31 = Mem0[0x00140030<p32>:word32]
	loc31 = v31
	v32 = arg0
	v33 = 0x18<32>
	v34 = v32 + v33
	loc23 = v34
	v35 = arg0
	v36 = 0x1C<32>
	v37 = v35 + v36
	loc24 = v37
	v38 = arg1
	loc3 = v38
	v39 = 0<32>
	loc4 = v39
	// succ:  l000E5E92
l000E5E92:
	v40 = loc4
	v41 = arg2
	v42 = v40 < v41
	loc25 = v42
	v43 = loc25
	v44 = v43 == 0<32>
	branch !v44 l000E5EA3
	// succ:  l000E5EA0 l000E5EA3
l000E5EA0:
l000E5EA3:
	v45 = loc23
	v46 = Mem0[v45:word32]
	loc26 = v46
	v47 = loc24
	v48 = Mem0[v47:word32]
	loc27 = v48
	v49 = loc26
	v50 = loc27
	v51 = v49 <u v50
	loc28 = v51
	v52 = loc28
	branch !v52 l000E5F2A
	// succ:  l000E5EBC l000E5F2A
l000E5EBC:
	v53 = loc26
	loc13 = v53
	v54 = loc27
	loc14 = v54
	v55 = loc14
	v56 = loc13
	v57 = v55 - v56
	loc15 = v57
	v58 = loc15
	v59 = 2<32>
	v60 = v58 >> v59
	loc16 = v60
	v61 = arg2
	v62 = loc4
	v63 = v61 - v62
	loc17 = v63
	v64 = loc17
	v65 = loc16
	v66 = v64 < v65
	loc18 = v66
	v67 = loc18
	branch !v67 l000E5EE7
	// succ:  l000E5EE4 l000E5EE7
l000E5EE4:
	v68 = loc17
	goto l000E5EE9
	// succ:  l000E5EE9
l000E5EE7:
	v69 = loc16
	// succ:  l000E5EE9
l000E5EE9:
	loc5 = v69
	v70 = loc26
	v71 = loc3
	v72 = loc5
	v73 = fn000E5F91(v70, v71, v72)
	v74 = loc23
	v75 = Mem0[v74:word32]
	loc19 = v75
	v76 = loc19
	v77 = loc5
	v78 = 2<32>
	v79 = v77 << v78
	v80 = v76 + v79
	loc20 = v80
	v81 = loc23
	v82 = loc20
	Mem0[v81:word32] = v82
	v83 = loc3
	v84 = loc5
	v85 = 2<32>
	v86 = v84 << v85
	v87 = v83 + v86
	loc21 = v87
	v88 = loc5
	v89 = loc4
	v90 = v88 + v89
	loc22 = v90
	v91 = loc21
	loc3 = v91
	v92 = loc22
	loc4 = v92
	goto l000E5E74
	// succ:  l000E5E74
l000E5F2A:
	v93 = arg0
	v94 = Mem0[v93:word32]
	loc29 = v94
	v95 = loc29
	v96 = 0x34<32>
	v97 = v95 + v96
	loc6 = v97
	v98 = loc6
	v99 = Mem0[v98:word32]
	loc7 = v99
	v100 = loc3
	v101 = Mem0[v100:word32]
	loc8 = v101
	v102 = arg0
	v103 = loc8
	v104 = loc7
	v105 = 0x1FF<32>
	v106 = v104 & v105
	v107 = 0x1B20<32>
	v108 = v106 + v107
fn000E5E74_exit:


// fn000E5FBC
// Return size: 0
void fn000E5FBC(word32 arg0)
fn000E5FBC_entry:
	// succ:  l000E5FBC
l000E5FBC:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 8<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn000E5823(v9)
	return
	// succ:  fn000E5FBC_exit
l000E5FCF:
	return
	// succ:  fn000E5FBC_exit
fn000E5FBC_exit:


// fn000E5FD1
// Return size: 0
void fn000E5FD1(word32 arg0)
fn000E5FD1_entry:
	// succ:  l000E5FD1
l000E5FD1:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 8<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn000E5823(v9)
	v10 = arg0
	fn0011B709(v10)
	return
	// succ:  fn000E5FD1_exit
l000E5FE9:
	return
	// succ:  fn000E5FD1_exit
fn000E5FD1_exit:


// fn000E5FEB
// Return size: 0
void fn000E5FEB(word32 arg0)
fn000E5FEB_entry:
	// succ:  l000E5FEB
l000E5FEB:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v10 = arg0
	v11 = Mem0[v10:word32]
	loc1 = v11
	v12 = loc1
	v13 = 0xFFFFFFF4<32>
	v14 = v12 + v13
	loc2 = v14
	v15 = loc2
	v16 = Mem0[v15:word32]
	loc3 = v16
	v17 = arg0
	v18 = loc3
	v19 = v17 + v18
	loc4 = v19
	v20 = loc4
	v21 = 8<32>
	v22 = v20 + v21
	loc5 = v22
	v23 = loc5
	fn000E5823(v23)
	return
	// succ:  fn000E5FEB_exit
l000E601A:
	return
	// succ:  fn000E5FEB_exit
fn000E5FEB_exit:


// fn000E601C
// Return size: 0
void fn000E601C(word32 arg0)
fn000E601C_entry:
	// succ:  l000E601C
l000E601C:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v9 = arg0
	v10 = Mem0[v9:word32]
	loc1 = v10
	v11 = loc1
	v12 = 0xFFFFFFF4<32>
	v13 = v11 + v12
	loc2 = v13
	v14 = loc2
	v15 = Mem0[v14:word32]
	loc3 = v15
	v16 = arg0
	v17 = loc3
	v18 = v16 + v17
	loc4 = v18
	v19 = loc4
	fn000E5FD1(v19)
	return
	// succ:  fn000E601C_exit
l000E6044:
	return
	// succ:  fn000E601C_exit
fn000E601C_exit:


// fn000E6046
// Return size: 0
void fn000E6046(word32 arg0)
fn000E6046_entry:
	// succ:  l000E6046
l000E6046:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 8<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn000E5823(v9)
	return
	// succ:  fn000E6046_exit
l000E6059:
	return
	// succ:  fn000E6046_exit
fn000E6046_exit:


// fn000E605B
// Return size: 0
void fn000E605B(word32 arg0)
fn000E605B_entry:
	// succ:  l000E605B
l000E605B:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 8<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn000E5823(v9)
	v10 = arg0
	fn0011B709(v10)
	return
	// succ:  fn000E605B_exit
l000E6073:
	return
	// succ:  fn000E605B_exit
fn000E605B_exit:


// fn000E6075
// Return size: 0
void fn000E6075(word32 arg0)
fn000E6075_entry:
	// succ:  l000E6075
l000E6075:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v10 = arg0
	v11 = Mem0[v10:word32]
	loc1 = v11
	v12 = loc1
	v13 = 0xFFFFFFF4<32>
	v14 = v12 + v13
	loc2 = v14
	v15 = loc2
	v16 = Mem0[v15:word32]
	loc3 = v16
	v17 = arg0
	v18 = loc3
	v19 = v17 + v18
	loc4 = v19
	v20 = loc4
	v21 = 8<32>
	v22 = v20 + v21
	loc5 = v22
	v23 = loc5
	fn000E5823(v23)
	return
	// succ:  fn000E6075_exit
l000E60A4:
	return
	// succ:  fn000E6075_exit
fn000E6075_exit:


// fn000E60A6
// Return size: 0
void fn000E60A6(word32 arg0)
fn000E60A6_entry:
	// succ:  l000E60A6
l000E60A6:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v9 = arg0
	v10 = Mem0[v9:word32]
	loc1 = v10
	v11 = loc1
	v12 = 0xFFFFFFF4<32>
	v13 = v11 + v12
	loc2 = v13
	v14 = loc2
	v15 = Mem0[v14:word32]
	loc3 = v15
	v16 = arg0
	v17 = loc3
	v18 = v16 + v17
	loc4 = v18
	v19 = loc4
	fn000E605B(v19)
	return
	// succ:  fn000E60A6_exit
l000E60CE:
	return
	// succ:  fn000E60A6_exit
fn000E60A6_exit:


// fn000E60D0
// Return size: 0
void fn000E60D0(word32 arg0)
fn000E60D0_entry:
	// succ:  l000E60D0
l000E60D0:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 4<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn000E5823(v9)
	return
	// succ:  fn000E60D0_exit
l000E60E3:
	return
	// succ:  fn000E60D0_exit
fn000E60D0_exit:


// fn000E60E5
// Return size: 0
void fn000E60E5(word32 arg0)
fn000E60E5_entry:
	// succ:  l000E60E5
l000E60E5:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 4<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn000E5823(v9)
	v10 = arg0
	fn0011B709(v10)
	return
	// succ:  fn000E60E5_exit
l000E60FD:
	return
	// succ:  fn000E60E5_exit
fn000E60E5_exit:


// fn000E60FF
// Return size: 0
void fn000E60FF(word32 arg0)
fn000E60FF_entry:
	// succ:  l000E60FF
l000E60FF:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v10 = arg0
	v11 = Mem0[v10:word32]
	loc1 = v11
	v12 = loc1
	v13 = 0xFFFFFFF4<32>
	v14 = v12 + v13
	loc2 = v14
	v15 = loc2
	v16 = Mem0[v15:word32]
	loc3 = v16
	v17 = arg0
	v18 = loc3
	v19 = v17 + v18
	loc4 = v19
	v20 = loc4
	v21 = 4<32>
	v22 = v20 + v21
	loc5 = v22
	v23 = loc5
	fn000E5823(v23)
	return
	// succ:  fn000E60FF_exit
l000E612E:
	return
	// succ:  fn000E60FF_exit
fn000E60FF_exit:


// fn000E6130
// Return size: 0
void fn000E6130(word32 arg0)
fn000E6130_entry:
	// succ:  l000E6130
l000E6130:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v9 = arg0
	v10 = Mem0[v9:word32]
	loc1 = v10
	v11 = loc1
	v12 = 0xFFFFFFF4<32>
	v13 = v11 + v12
	loc2 = v13
	v14 = loc2
	v15 = Mem0[v14:word32]
	loc3 = v15
	v16 = arg0
	v17 = loc3
	v18 = v16 + v17
	loc4 = v18
	v19 = loc4
	fn000E60E5(v19)
	return
	// succ:  fn000E6130_exit
l000E6158:
	return
	// succ:  fn000E6130_exit
fn000E6130_exit:


// fn000E615A
// Return size: 0
void fn000E615A(word32 arg0)
fn000E615A_entry:
	// succ:  l000E615A
l000E615A:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 4<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn000E5823(v9)
	return
	// succ:  fn000E615A_exit
l000E616D:
	return
	// succ:  fn000E615A_exit
fn000E615A_exit:


// fn000E616F
// Return size: 0
void fn000E616F(word32 arg0)
fn000E616F_entry:
	// succ:  l000E616F
l000E616F:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 4<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn000E5823(v9)
	v10 = arg0
	fn0011B709(v10)
	return
	// succ:  fn000E616F_exit
l000E6187:
	return
	// succ:  fn000E616F_exit
fn000E616F_exit:


// fn000E6189
// Return size: 0
void fn000E6189(word32 arg0)
fn000E6189_entry:
	// succ:  l000E6189
l000E6189:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v10 = arg0
	v11 = Mem0[v10:word32]
	loc1 = v11
	v12 = loc1
	v13 = 0xFFFFFFF4<32>
	v14 = v12 + v13
	loc2 = v14
	v15 = loc2
	v16 = Mem0[v15:word32]
	loc3 = v16
	v17 = arg0
	v18 = loc3
	v19 = v17 + v18
	loc4 = v19
	v20 = loc4
	v21 = 4<32>
	v22 = v20 + v21
	loc5 = v22
	v23 = loc5
	fn000E5823(v23)
	return
	// succ:  fn000E6189_exit
l000E61B8:
	return
	// succ:  fn000E6189_exit
fn000E6189_exit:


// fn000E61BA
// Return size: 0
void fn000E61BA(word32 arg0)
fn000E61BA_entry:
	// succ:  l000E61BA
l000E61BA:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v9 = arg0
	v10 = Mem0[v9:word32]
	loc1 = v10
	v11 = loc1
	v12 = 0xFFFFFFF4<32>
	v13 = v11 + v12
	loc2 = v13
	v14 = loc2
	v15 = Mem0[v14:word32]
	loc3 = v15
	v16 = arg0
	v17 = loc3
	v18 = v16 + v17
	loc4 = v18
	v19 = loc4
	fn000E616F(v19)
	return
	// succ:  fn000E61BA_exit
l000E61E2:
	return
	// succ:  fn000E61BA_exit
fn000E61BA_exit:


// fn000E61E4
// Return size: 0
void fn000E61E4(word32 arg0)
fn000E61E4_entry:
	// succ:  l000E61E4
l000E61E4:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011D14E(v5)
	return
	// succ:  fn000E61E4_exit
l000E61F0:
	return
	// succ:  fn000E61E4_exit
fn000E61E4_exit:


// fn000E61F2
// Return size: 0
void fn000E61F2(word32 arg0)
fn000E61F2_entry:
	// succ:  l000E61F2
l000E61F2:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011D14E(v5)
	v6 = arg0
	fn0011B709(v6)
	return
	// succ:  fn000E61F2_exit
l000E6203:
	return
	// succ:  fn000E61F2_exit
fn000E61F2_exit:


// fn000E6205
// Return size: 0
void fn000E6205(word32 arg0)
fn000E6205_entry:
	// succ:  l000E6205
l000E6205:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000E6205_exit
l000E6211:
	return
	// succ:  fn000E6205_exit
fn000E6205_exit:


// fn000E6220
// Return size: 0
void fn000E6220(word32 arg0, word32 arg1, word32 arg2)
fn000E6220_entry:
	// succ:  l000E6220
l000E6220:
	v7 = Mem0[0x00140030<p32>:word32]
	loc7 = v7
	v8 = arg2
	v9 = 1<32>
	v10 = v8 != v9
	loc3 = v10
	v11 = arg2
	v12 = 0x101<32>
	v13 = v11 < v12
	loc4 = v13
	v14 = loc3
	v15 = loc4
	v16 = v14 & v15
	loc5 = v16
	v17 = loc5
	branch !v17 l000E624A
	// succ:  l000E6240 l000E624A
l000E6240:
	v18 = arg0
	v19 = arg1
	v20 = arg2
	fn0011D16F(v18, v19, v20)
	goto l000E6266
	// succ:  l000E6266
l000E624A:
	v21 = arg0
	v22 = 0<64>
	Mem0[v21:word64] = v22
	v23 = arg0
	v24 = 8<32>
	v25 = v23 + v24
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = arg0
	v28 = 0x368A<32>
	v29 = 0x23<32>
	fn0011B96D(v27, v28, v29)
	// succ:  l000E6266
l000E6266:
	return
	// succ:  fn000E6220_exit
l000E6268:
	return
	// succ:  fn000E6220_exit
fn000E6220_exit:


// fn000E626A
// Return size: 0
void fn000E626A(word32 arg0, word32 arg1)
fn000E626A_entry:
	// succ:  l000E626A
l000E626A:
	v28 = Mem0[0x00140030<p32>:word32]
	loc27 = v28
	v29 = Mem0[0x00140030<p32>:word32]
	v30 = 0x10<32>
	v31 = v29 + v30
	Mem0[0x00140030<p32>:word32] = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000E6283
	// succ:  l000E627E l000E6283
l000E627E:
	v35 = 0x10<32>
	abortStackOverflow(v35)
	// succ:  l000E6283
l000E6283:
	v36 = loc27
	loc16 = v36
	v37 = arg0
	v38 = 0x18<32>
	v39 = v37 + v38
	loc19 = v39
	v40 = loc19
	v41 = Mem0[v40:word32]
	loc20 = v41
	v42 = loc20
	v43 = 0<32>
	v44 = v42 == v43
	loc21 = v44
	v45 = loc21
	v46 = 1<32>
	v47 = v45 & v46
	loc22 = v47
	v48 = loc22
	v49 = arg1
	v50 = v48 | v49
	loc2 = v50
	v51 = arg0
	v52 = 0x10<32>
	v53 = v51 + v52
	loc23 = v53
	v54 = loc23
	v55 = loc2
	Mem0[v54:word32] = v55
	v56 = loc21
	v57 = 1<32>
	v58 = v56 & v57
	loc24 = v58
	v59 = loc24
	v60 = arg1
	v61 = v59 | v60
	loc25 = v61
	v62 = arg0
	v63 = 0x14<32>
	v64 = v62 + v63
	loc6 = v64
	v65 = loc6
	v66 = Mem0[v65:word32]
	loc7 = v66
	v67 = loc25
	v68 = loc7
	v69 = v67 & v68
	loc8 = v69
	v70 = loc8
	v71 = 0<32>
	v72 = v70 == v71
	loc9 = v72
	v73 = loc9
	branch !v73 l000E62EC
	// succ:  l000E62E6 l000E62EC
l000E62E6:
	v74 = loc27
	Mem0[0x00140030<p32>:word32] = v74
	return
	// succ:  fn000E626A_exit
l000E62EC:
	v75 = 0x10<32>
	v76 = ___cxa_allocate_exception(v75)
	loc10 = v76
	v77 = fn000E6375()
	v78 = loc16
	v79 = 1<32>
	Mem0[v78:word32] = v79
	v80 = loc16
	v81 = 4<32>
	v82 = v80 + v81
	loc5 = v82
	v83 = loc5
	v84 = 0x4854<32>
	Mem0[v83:word32] = v84
	v85 = 0<32>
	Mem0[0x00140048<p32>:word32] = v85
	v86 = 0x172<32>
	v87 = loc10
	v88 = 0x36D5<32>
	v89 = loc16
	invoke_viii(v86, v87, v88, v89)
	v90 = Mem0[0x00140048<p32>:word32]
	loc11 = v90
	v91 = 0<32>
	Mem0[0x00140048<p32>:word32] = v91
	v92 = loc11
	v93 = 1<32>
	v94 = v92 & v93
	loc12 = v94
	v95 = loc12
	branch !v95 l000E6346
	// succ:  l000E6331 l000E6346
l000E6331:
	v96 = ___cxa_find_matching_catch_2()
	loc17 = v96
	v97 = Mem0[0x00140094<p32>:word32]
	loc18 = v97
	v98 = loc10
	___cxa_free_exception(v98)
	v99 = loc17
	loc3 = v99
	v100 = loc18
	loc4 = v100
	goto l000E636E
	// succ:  l000E636E
l000E6346:
	v101 = 0<32>
	Mem0[0x00140048<p32>:word32] = v101
	v102 = 0x173<32>
	v103 = loc10
	v104 = 0x498<32>
	v105 = 0x35<32>
	invoke_viii(v102, v103, v104, v105)
	v106 = Mem0[0x00140048<p32>:word32]
	loc13 = v106
	v107 = 0<32>
	Mem0[0x00140048<p32>:word32] = v107
	v108 = ___cxa_find_matching_catch_2()
	loc14 = v108
	v109 = Mem0[0x00140094<p32>:word32]
	loc15 = v109
	v110 = loc14
	loc3 = v110
	v111 = loc15
	loc4 = v111
	// succ:  l000E636E
l000E636E:
	v112 = loc3
	___resumeException(v112)
	// succ:  l000E6373
l000E6373:
	return
	// succ:  fn000E626A_exit
fn000E626A_exit:


// fn000E63C8
// Return size: 0
void fn000E63C8(word32 arg0, word32 arg1, word32 arg2)
fn000E63C8_entry:
	// succ:  l000E63C8
l000E63C8:
	v7 = Mem0[0x00140030<p32>:word32]
	loc6 = v7
	v8 = Mem0[0x00140030<p32>:word32]
	v9 = 0x10<32>
	v10 = v8 + v9
	Mem0[0x00140030<p32>:word32] = v10
	v11 = Mem0[0x00140030<p32>:word32]
	v12 = Mem0[0x00140034<p32>:word32]
	v13 = v11 >= v12
	branch !v13 l000E63E1
	// succ:  l000E63DC l000E63E1
l000E63DC:
	v14 = 0x10<32>
	abortStackOverflow(v14)
	// succ:  l000E63E1
l000E63E1:
	v15 = loc6
	v16 = 8<32>
	v17 = v15 + v16
	loc4 = v17
	v18 = loc6
	loc3 = v18
	v19 = arg2
	v20 = Mem0[v19:word64]
	loc7 = v20
	v21 = loc3
	v22 = loc7
	Mem0[v21:word64] = v22
	v23 = loc4
	v24 = loc3
	v25 = Mem0[v24:word64]
	Mem0[v23:word64] = v25
	v26 = arg0
	v27 = loc4
	v28 = arg1
	fn0011D354(v26, v27, v28)
	v29 = arg0
	v30 = 0x1A50<32>
	Mem0[v29:word32] = v30
	v31 = loc6
	Mem0[0x00140030<p32>:word32] = v31
	return
	// succ:  fn000E63C8_exit
l000E641A:
	return
	// succ:  fn000E63C8_exit
fn000E63C8_exit:


// fn000E641C
// Return size: 0
void fn000E641C(word32 arg0, word32 arg1)
fn000E641C_entry:
	// succ:  l000E641C
l000E641C:
	v14 = Mem0[0x00140030<p32>:word32]
	loc13 = v14
	v15 = arg0
	v16 = 0x18<32>
	v17 = v15 + v16
	loc3 = v17
	v18 = loc3
	v19 = arg1
	Mem0[v18:word32] = v19
	v20 = arg1
	v21 = 0<32>
	v22 = v20 == v21
	loc11 = v22
	v23 = loc11
	v24 = 1<32>
	v25 = v23 & v24
	loc4 = v25
	v26 = arg0
	v27 = 0x10<32>
	v28 = v26 + v27
	loc5 = v28
	v29 = loc5
	v30 = loc4
	Mem0[v29:word32] = v30
	v31 = arg0
	v32 = 0x14<32>
	v33 = v31 + v32
	loc6 = v33
	v34 = loc6
	v35 = 0<32>
	Mem0[v34:word32] = v35
	v36 = arg0
	v37 = 4<32>
	v38 = v36 + v37
	loc7 = v38
	v39 = loc7
	v40 = 0x1002<32>
	Mem0[v39:word32] = v40
	v41 = arg0
	v42 = 0xC<32>
	v43 = v41 + v42
	loc8 = v43
	v44 = loc8
	v45 = 0<32>
	Mem0[v44:word32] = v45
	v46 = arg0
	v47 = 8<32>
	v48 = v46 + v47
	loc9 = v48
	v49 = loc9
	v50 = 6<32>
	Mem0[v49:word32] = v50
	v51 = arg0
	v52 = 0x20<32>
	v53 = v51 + v52
	loc10 = v53
	v54 = arg0
	v55 = 0x1C<32>
	v56 = v54 + v55
	loc2 = v56
	v57 = loc10
	v58 = 0<64>
	Mem0[v57:word64] = v58
	v59 = loc10
	v60 = 8<32>
	v61 = v59 + v60
	v62 = 0<64>
	Mem0[v61:word64] = v62
	v63 = loc10
	v64 = 0x10<32>
	v65 = v63 + v64
	v66 = 0<64>
	Mem0[v65:word64] = v66
	v67 = loc10
	v68 = 0x18<32>
	v69 = v67 + v68
	v70 = 0<64>
	Mem0[v69:word64] = v70
	v71 = loc10
	v72 = 0x20<32>
	v73 = v71 + v72
	v74 = 0<64>
	Mem0[v73:word64] = v74
	v75 = loc2
	fn0011B395(v75)
	return
	// succ:  fn000E641C_exit
l000E64C8:
	return
	// succ:  fn000E641C_exit
fn000E641C_exit:


// fn000E6505
// Return size: 0
void fn000E6505(word32 arg0)
fn000E6505_entry:
	// succ:  l000E6505
l000E6505:
	v6 = Mem0[0x00140030<p32>:word32]
	loc4 = v6
	v7 = arg0
	v8 = 0x1930<32>
	Mem0[v7:word32] = v8
	v9 = arg0
	v10 = 4<32>
	v11 = v9 + v10
	loc1 = v11
	v12 = loc1
	fn0011B395(v12)
	v13 = arg0
	v14 = 8<32>
	v15 = v13 + v14
	loc2 = v15
	v16 = loc2
	v17 = 0<64>
	Mem0[v16:word64] = v17
	v18 = loc2
	v19 = 8<32>
	v20 = v18 + v19
	v21 = 0<64>
	Mem0[v20:word64] = v21
	v22 = loc2
	v23 = 0x10<32>
	v24 = v22 + v23
	v25 = 0<64>
	Mem0[v24:word64] = v25
	return
	// succ:  fn000E6505_exit
l000E6542:
	return
	// succ:  fn000E6505_exit
fn000E6505_exit:


// fn000E6544
// Return size: 0
void fn000E6544(word32 arg0)
fn000E6544_entry:
	// succ:  l000E6544
l000E6544:
	v6 = Mem0[0x00140030<p32>:word32]
	loc4 = v6
	v7 = arg0
	v8 = 0x1970<32>
	Mem0[v7:word32] = v8
	v9 = arg0
	v10 = 4<32>
	v11 = v9 + v10
	loc1 = v11
	v12 = loc1
	fn0011B395(v12)
	v13 = arg0
	v14 = 8<32>
	v15 = v13 + v14
	loc2 = v15
	v16 = loc2
	v17 = 0<64>
	Mem0[v16:word64] = v17
	v18 = loc2
	v19 = 8<32>
	v20 = v18 + v19
	v21 = 0<64>
	Mem0[v20:word64] = v21
	v22 = loc2
	v23 = 0x10<32>
	v24 = v22 + v23
	v25 = 0<64>
	Mem0[v24:word64] = v25
	return
	// succ:  fn000E6544_exit
l000E6581:
	return
	// succ:  fn000E6544_exit
fn000E6544_exit:


// fn000E6790
// Return size: 0
void fn000E6790(word32 arg0, word32 arg1)
fn000E6790_entry:
	// succ:  l000E6790
l000E6790:
	v15 = Mem0[0x00140030<p32>:word32]
	loc14 = v15
	v16 = arg0
	v17 = 0<32>
	v18 = SLICE(v17, byte, 0)
	Mem0[v16:byte] = v18
	v19 = arg0
	v20 = 4<32>
	v21 = v19 + v20
	loc5 = v21
	v22 = loc5
	v23 = arg1
	Mem0[v22:word32] = v23
	v24 = arg1
	v25 = Mem0[v24:word32]
	loc6 = v25
	v26 = loc6
	v27 = 0xFFFFFFF4<32>
	v28 = v26 + v27
	loc7 = v28
	v29 = loc7
	v30 = Mem0[v29:word32]
	loc8 = v30
	v31 = arg1
	v32 = loc8
	v33 = v31 + v32
	loc9 = v33
	v34 = loc9
	v35 = 0x10<32>
	v36 = v34 + v35
	loc10 = v36
	v37 = loc10
	v38 = Mem0[v37:word32]
	loc11 = v38
	v39 = loc11
	v40 = 0<32>
	v41 = v39 == v40
	loc12 = v41
	v42 = loc12
	branch !v42 l000E680A
	// succ:  l000E67E0 l000E680A
l000E67E0:
	v43 = loc9
	v44 = 0x48<32>
	v45 = v43 + v44
	loc2 = v45
	v46 = loc2
	v47 = Mem0[v46:word32]
	loc3 = v47
	v48 = loc3
	v49 = 0<32>
	v50 = v48 == v49
	loc4 = v50
	v51 = loc4
	v52 = v51 == 0<32>
	branch !v52 l000E6802
	// succ:  l000E67FB l000E6802
l000E67FB:
	v53 = loc3
	v54 = fn000E6583(v53)
	// succ:  l000E6802
l000E6802:
	v55 = arg0
	v56 = 1<32>
	v57 = SLICE(v56, byte, 0)
	Mem0[v55:byte] = v57
	// succ:  l000E680A
l000E680A:
	return
	// succ:  fn000E6790_exit
l000E680B:
	return
	// succ:  fn000E6790_exit
fn000E6790_exit:


// fn000E680D
// Return size: 0
void fn000E680D(word32 arg0)
fn000E680D_entry:
	// succ:  l000E680D
l000E680D:
	v51 = Mem0[0x00140030<p32>:word32]
	loc49 = v51
	v52 = arg0
	v53 = 4<32>
	v54 = v52 + v53
	loc1 = v54
	v55 = loc1
	v56 = Mem0[v55:word32]
	loc12 = v56
	v57 = loc12
	v58 = Mem0[v57:word32]
	loc23 = v58
	v59 = loc23
	v60 = 0xFFFFFFF4<32>
	v61 = v59 + v60
	loc34 = v61
	v62 = loc34
	v63 = Mem0[v62:word32]
	loc43 = v63
	v64 = loc12
	v65 = loc43
	v66 = v64 + v65
	loc44 = v66
	v67 = loc44
	v68 = 0x18<32>
	v69 = v67 + v68
	loc45 = v69
	v70 = loc45
	v71 = Mem0[v70:word32]
	loc46 = v71
	v72 = loc46
	v73 = 0<32>
	v74 = v72 == v73
	loc47 = v74
	// succ:  l000E6852
l000E6852:
	v75 = loc47
	v76 = v75 == 0<32>
	branch !v76 l000E69AE
	// succ:  l000E6859 l000E69AE
l000E6859:
	v77 = loc44
	v78 = 0x10<32>
	v79 = v77 + v78
	loc2 = v79
	v80 = loc2
	v81 = Mem0[v80:word32]
	loc3 = v81
	v82 = loc3
	v83 = 0<32>
	v84 = v82 == v83
	loc4 = v84
	v85 = loc4
	branch !v85 l000E69AD
	// succ:  l000E6872 l000E69AD
l000E6872:
	v86 = loc44
	v87 = 4<32>
	v88 = v86 + v87
	loc5 = v88
	v89 = loc5
	v90 = Mem0[v89:word32]
	loc6 = v90
	v91 = loc6
	v92 = 0x2000<32>
	v93 = v91 & v92
	loc7 = v93
	v94 = loc7
	v95 = 0<32>
	v96 = v94 == v95
	loc8 = v96
	v97 = loc8
	v98 = v97 == 0<32>
	branch !v98 l000E69AC
	// succ:  l000E6895 l000E69AC
l000E6895:
	v99 = __ZSt18uncaught_exceptionv()
	loc9 = v99
	v100 = loc9
	v101 = v100 == 0<32>
	branch !v101 l000E69AB
	// succ:  l000E689E l000E69AB
l000E689E:
	v102 = loc1
	v103 = Mem0[v102:word32]
	loc10 = v103
	v104 = loc10
	v105 = Mem0[v104:word32]
	loc11 = v105
	v106 = loc11
	v107 = 0xFFFFFFF4<32>
	v108 = v106 + v107
	loc13 = v108
	v109 = loc13
	v110 = Mem0[v109:word32]
	loc14 = v110
	v111 = loc10
	v112 = loc14
	v113 = v111 + v112
	loc15 = v113
	v114 = loc15
	v115 = 0x18<32>
	v116 = v114 + v115
	loc16 = v116
	v117 = loc16
	v118 = Mem0[v117:word32]
	loc17 = v118
	v119 = loc17
	v120 = Mem0[v119:word32]
	loc18 = v120
	v121 = loc18
	v122 = 0x18<32>
	v123 = v121 + v122
	loc19 = v123
	v124 = loc19
	v125 = Mem0[v124:word32]
	loc20 = v125
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v127 = loc20
	v128 = loc17
	v129 = invoke_ii(v127, v128)
	loc21 = v129
	v130 = Mem0[0x00140048<p32>:word32]
	loc22 = v130
	v131 = 0<32>
	Mem0[0x00140048<p32>:word32] = v131
	v132 = loc22
	v133 = 1<32>
	v134 = v132 & v133
	loc24 = v134
	v135 = loc24
	v136 = v135 == 0<32>
	branch !v136 l000E6970
	// succ:  l000E6904 l000E6970
l000E6904:
	v137 = loc21
	v138 = 0xFFFFFFFF<32>
	v139 = v137 == v138
	loc25 = v139
	v140 = loc25
	v141 = v140 == 0<32>
	branch !v141 l000E6913
	// succ:  l000E6910 l000E6913
l000E6910:
	goto l000E69AE
	// succ:  l000E69AE
l000E6913:
	v142 = loc1
	v143 = Mem0[v142:word32]
	loc26 = v143
	v144 = loc26
	v145 = Mem0[v144:word32]
	loc27 = v145
	v146 = loc27
	v147 = 0xFFFFFFF4<32>
	v148 = v146 + v147
	loc28 = v148
	v149 = loc28
	v150 = Mem0[v149:word32]
	loc29 = v150
	v151 = loc26
	v152 = loc29
	v153 = v151 + v152
	loc30 = v153
	v154 = loc30
	v155 = 0x10<32>
	v156 = v154 + v155
	loc31 = v156
	v157 = loc31
	v158 = Mem0[v157:word32]
	loc32 = v158
	v159 = loc32
	v160 = 1<32>
	v161 = v159 | v160
	loc33 = v161
	v162 = 0<32>
	Mem0[0x00140048<p32>:word32] = v162
	v163 = 0x169<32>
	v164 = loc30
	v165 = loc33
	invoke_vii(v163, v164, v165)
	v166 = Mem0[0x00140048<p32>:word32]
	loc35 = v166
	v167 = 0<32>
	Mem0[0x00140048<p32>:word32] = v167
	v168 = loc35
	v169 = 1<32>
	v170 = v168 & v169
	loc36 = v170
	v171 = loc36
	v172 = v171 == 0<32>
	branch !v172 l000E696F
	// succ:  l000E696C l000E696F
l000E696C:
	goto l000E69AE
	// succ:  l000E69AE
l000E696F:
	// succ:  l000E6970
l000E6970:
	v173 = 0<32>
	v174 = ___cxa_find_matching_catch_3(v173)
	loc37 = v174
	v175 = Mem0[0x00140094<p32>:word32]
	loc38 = v175
	v176 = loc37
	v177 = ___cxa_begin_catch(v176)
	v178 = 0<32>
	Mem0[0x00140048<p32>:word32] = v178
	v179 = 0x16C<32>
	invoke_v(v179)
	v180 = Mem0[0x00140048<p32>:word32]
	loc39 = v180
	v181 = 0<32>
	Mem0[0x00140048<p32>:word32] = v181
	v182 = loc39
	v183 = 1<32>
	v184 = v182 & v183
	loc40 = v184
	v185 = loc40
	branch !v185 l000E69AA
	// succ:  l000E699B l000E69AA
l000E699B:
	v186 = 0<32>
	v187 = ___cxa_find_matching_catch_3(v186)
	loc41 = v187
	v188 = Mem0[0x00140094<p32>:word32]
	loc42 = v188
	v189 = loc41
	fn000D0E65(v189)
	// succ:  l000E69AA
l000E69AA:
	// succ:  l000E69AB
l000E69AB:
	// succ:  l000E69AC
l000E69AC:
	// succ:  l000E69AD
l000E69AD:
	// succ:  l000E69AE
l000E69AE:
	// succ:  l000E69AE
l000E69AE:
	return
	// succ:  fn000E680D_exit
l000E69B0:
	return
	// succ:  fn000E680D_exit
fn000E680D_exit:


// fn000E6C08
// Return size: 0
void fn000E6C08(word32 arg0, word32 arg1)
fn000E6C08_entry:
	// succ:  l000E6C08
l000E6C08:
	v15 = Mem0[0x00140030<p32>:word32]
	loc14 = v15
	v16 = arg0
	v17 = 0<32>
	v18 = SLICE(v17, byte, 0)
	Mem0[v16:byte] = v18
	v19 = arg0
	v20 = 4<32>
	v21 = v19 + v20
	loc5 = v21
	v22 = loc5
	v23 = arg1
	Mem0[v22:word32] = v23
	v24 = arg1
	v25 = Mem0[v24:word32]
	loc6 = v25
	v26 = loc6
	v27 = 0xFFFFFFF4<32>
	v28 = v26 + v27
	loc7 = v28
	v29 = loc7
	v30 = Mem0[v29:word32]
	loc8 = v30
	v31 = arg1
	v32 = loc8
	v33 = v31 + v32
	loc9 = v33
	v34 = loc9
	v35 = 0x10<32>
	v36 = v34 + v35
	loc10 = v36
	v37 = loc10
	v38 = Mem0[v37:word32]
	loc11 = v38
	v39 = loc11
	v40 = 0<32>
	v41 = v39 == v40
	loc12 = v41
	v42 = loc12
	branch !v42 l000E6C82
	// succ:  l000E6C58 l000E6C82
l000E6C58:
	v43 = loc9
	v44 = 0x48<32>
	v45 = v43 + v44
	loc2 = v45
	v46 = loc2
	v47 = Mem0[v46:word32]
	loc3 = v47
	v48 = loc3
	v49 = 0<32>
	v50 = v48 == v49
	loc4 = v50
	v51 = loc4
	v52 = v51 == 0<32>
	branch !v52 l000E6C7A
	// succ:  l000E6C73 l000E6C7A
l000E6C73:
	v53 = loc3
	v54 = fn000E69FB(v53)
	// succ:  l000E6C7A
l000E6C7A:
	v55 = arg0
	v56 = 1<32>
	v57 = SLICE(v56, byte, 0)
	Mem0[v55:byte] = v57
	// succ:  l000E6C82
l000E6C82:
	return
	// succ:  fn000E6C08_exit
l000E6C83:
	return
	// succ:  fn000E6C08_exit
fn000E6C08_exit:


// fn000E6C85
// Return size: 0
void fn000E6C85(word32 arg0)
fn000E6C85_entry:
	// succ:  l000E6C85
l000E6C85:
	v51 = Mem0[0x00140030<p32>:word32]
	loc49 = v51
	v52 = arg0
	v53 = 4<32>
	v54 = v52 + v53
	loc1 = v54
	v55 = loc1
	v56 = Mem0[v55:word32]
	loc12 = v56
	v57 = loc12
	v58 = Mem0[v57:word32]
	loc23 = v58
	v59 = loc23
	v60 = 0xFFFFFFF4<32>
	v61 = v59 + v60
	loc34 = v61
	v62 = loc34
	v63 = Mem0[v62:word32]
	loc43 = v63
	v64 = loc12
	v65 = loc43
	v66 = v64 + v65
	loc44 = v66
	v67 = loc44
	v68 = 0x18<32>
	v69 = v67 + v68
	loc45 = v69
	v70 = loc45
	v71 = Mem0[v70:word32]
	loc46 = v71
	v72 = loc46
	v73 = 0<32>
	v74 = v72 == v73
	loc47 = v74
	// succ:  l000E6CCA
l000E6CCA:
	v75 = loc47
	v76 = v75 == 0<32>
	branch !v76 l000E6E26
	// succ:  l000E6CD1 l000E6E26
l000E6CD1:
	v77 = loc44
	v78 = 0x10<32>
	v79 = v77 + v78
	loc2 = v79
	v80 = loc2
	v81 = Mem0[v80:word32]
	loc3 = v81
	v82 = loc3
	v83 = 0<32>
	v84 = v82 == v83
	loc4 = v84
	v85 = loc4
	branch !v85 l000E6E25
	// succ:  l000E6CEA l000E6E25
l000E6CEA:
	v86 = loc44
	v87 = 4<32>
	v88 = v86 + v87
	loc5 = v88
	v89 = loc5
	v90 = Mem0[v89:word32]
	loc6 = v90
	v91 = loc6
	v92 = 0x2000<32>
	v93 = v91 & v92
	loc7 = v93
	v94 = loc7
	v95 = 0<32>
	v96 = v94 == v95
	loc8 = v96
	v97 = loc8
	v98 = v97 == 0<32>
	branch !v98 l000E6E24
	// succ:  l000E6D0D l000E6E24
l000E6D0D:
	v99 = __ZSt18uncaught_exceptionv()
	loc9 = v99
	v100 = loc9
	v101 = v100 == 0<32>
	branch !v101 l000E6E23
	// succ:  l000E6D16 l000E6E23
l000E6D16:
	v102 = loc1
	v103 = Mem0[v102:word32]
	loc10 = v103
	v104 = loc10
	v105 = Mem0[v104:word32]
	loc11 = v105
	v106 = loc11
	v107 = 0xFFFFFFF4<32>
	v108 = v106 + v107
	loc13 = v108
	v109 = loc13
	v110 = Mem0[v109:word32]
	loc14 = v110
	v111 = loc10
	v112 = loc14
	v113 = v111 + v112
	loc15 = v113
	v114 = loc15
	v115 = 0x18<32>
	v116 = v114 + v115
	loc16 = v116
	v117 = loc16
	v118 = Mem0[v117:word32]
	loc17 = v118
	v119 = loc17
	v120 = Mem0[v119:word32]
	loc18 = v120
	v121 = loc18
	v122 = 0x18<32>
	v123 = v121 + v122
	loc19 = v123
	v124 = loc19
	v125 = Mem0[v124:word32]
	loc20 = v125
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v127 = loc20
	v128 = loc17
	v129 = invoke_ii(v127, v128)
	loc21 = v129
	v130 = Mem0[0x00140048<p32>:word32]
	loc22 = v130
	v131 = 0<32>
	Mem0[0x00140048<p32>:word32] = v131
	v132 = loc22
	v133 = 1<32>
	v134 = v132 & v133
	loc24 = v134
	v135 = loc24
	v136 = v135 == 0<32>
	branch !v136 l000E6DE8
	// succ:  l000E6D7C l000E6DE8
l000E6D7C:
	v137 = loc21
	v138 = 0xFFFFFFFF<32>
	v139 = v137 == v138
	loc25 = v139
	v140 = loc25
	v141 = v140 == 0<32>
	branch !v141 l000E6D8B
	// succ:  l000E6D88 l000E6D8B
l000E6D88:
	goto l000E6E26
	// succ:  l000E6E26
l000E6D8B:
	v142 = loc1
	v143 = Mem0[v142:word32]
	loc26 = v143
	v144 = loc26
	v145 = Mem0[v144:word32]
	loc27 = v145
	v146 = loc27
	v147 = 0xFFFFFFF4<32>
	v148 = v146 + v147
	loc28 = v148
	v149 = loc28
	v150 = Mem0[v149:word32]
	loc29 = v150
	v151 = loc26
	v152 = loc29
	v153 = v151 + v152
	loc30 = v153
	v154 = loc30
	v155 = 0x10<32>
	v156 = v154 + v155
	loc31 = v156
	v157 = loc31
	v158 = Mem0[v157:word32]
	loc32 = v158
	v159 = loc32
	v160 = 1<32>
	v161 = v159 | v160
	loc33 = v161
	v162 = 0<32>
	Mem0[0x00140048<p32>:word32] = v162
	v163 = 0x169<32>
	v164 = loc30
	v165 = loc33
	invoke_vii(v163, v164, v165)
	v166 = Mem0[0x00140048<p32>:word32]
	loc35 = v166
	v167 = 0<32>
	Mem0[0x00140048<p32>:word32] = v167
	v168 = loc35
	v169 = 1<32>
	v170 = v168 & v169
	loc36 = v170
	v171 = loc36
	v172 = v171 == 0<32>
	branch !v172 l000E6DE7
	// succ:  l000E6DE4 l000E6DE7
l000E6DE4:
	goto l000E6E26
	// succ:  l000E6E26
l000E6DE7:
	// succ:  l000E6DE8
l000E6DE8:
	v173 = 0<32>
	v174 = ___cxa_find_matching_catch_3(v173)
	loc37 = v174
	v175 = Mem0[0x00140094<p32>:word32]
	loc38 = v175
	v176 = loc37
	v177 = ___cxa_begin_catch(v176)
	v178 = 0<32>
	Mem0[0x00140048<p32>:word32] = v178
	v179 = 0x16C<32>
	invoke_v(v179)
	v180 = Mem0[0x00140048<p32>:word32]
	loc39 = v180
	v181 = 0<32>
	Mem0[0x00140048<p32>:word32] = v181
	v182 = loc39
	v183 = 1<32>
	v184 = v182 & v183
	loc40 = v184
	v185 = loc40
	branch !v185 l000E6E22
	// succ:  l000E6E13 l000E6E22
l000E6E13:
	v186 = 0<32>
	v187 = ___cxa_find_matching_catch_3(v186)
	loc41 = v187
	v188 = Mem0[0x00140094<p32>:word32]
	loc42 = v188
	v189 = loc41
	fn000D0E65(v189)
	// succ:  l000E6E22
l000E6E22:
	// succ:  l000E6E23
l000E6E23:
	// succ:  l000E6E24
l000E6E24:
	// succ:  l000E6E25
l000E6E25:
	// succ:  l000E6E26
l000E6E26:
	// succ:  l000E6E26
l000E6E26:
	return
	// succ:  fn000E6C85_exit
l000E6E28:
	return
	// succ:  fn000E6C85_exit
fn000E6C85_exit:


// __GLOBAL__I_000101
// Return size: 0
void __GLOBAL__I_000101()
__GLOBAL__I_000101_entry:
	// succ:  l000E7404
l000E7404:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	v5 = 0<32>
	fn000E7427(v5)
	v6 = 0x175<32>
	v7 = 0x5C10<32>
	v8 = Mem0[0x00140044<p32>:word32]
	v9 = ___cxa_atexit(v6, v7, v8)
	return
	// succ:  __GLOBAL__I_000101_exit
l000E741C:
	return
	// succ:  __GLOBAL__I_000101_exit
__GLOBAL__I_000101_exit:


// __GLOBAL__sub_I_iostream_cpp
// Return size: 0
void __GLOBAL__sub_I_iostream_cpp()
__GLOBAL__sub_I_iostream_cpp_entry:
	// succ:  l000E741E
l000E741E:
	v4 = Mem0[0x00140030<p32>:word32]
	loc1 = v4
	return
	// succ:  __GLOBAL__sub_I_iostream_cpp_exit
l000E7425:
	return
	// succ:  __GLOBAL__sub_I_iostream_cpp_exit
__GLOBAL__sub_I_iostream_cpp_exit:


// fn000E7427
// Return size: 0
void fn000E7427(word32 arg0)
fn000E7427_entry:
	// succ:  l000E7427
l000E7427:
	v85 = Mem0[0x00140030<p32>:word32]
	loc83 = v85
	v86 = 0xB88<32>
	v87 = Mem0[v86:word32]
	loc1 = v87
	v88 = 0x4B00<32>
	v89 = loc1
	v90 = 0x4B38<32>
	fn000E79F6(v88, v89, v90)
	v91 = 0x4858<32>
	v92 = 0x19B4<32>
	Mem0[v91:word32] = v92
	v93 = 0x4860<32>
	v94 = 0x19C8<32>
	Mem0[v93:word32] = v94
	v95 = 0x485C<32>
	v96 = 0<32>
	Mem0[v95:word32] = v96
	v97 = 0<32>
	Mem0[0x00140048<p32>:word32] = v97
	v98 = 0x176<32>
	v99 = 0x4860<32>
	v100 = 0x4B00<32>
	invoke_vii(v98, v99, v100)
	v101 = Mem0[0x00140048<p32>:word32]
	loc12 = v101
	v102 = 0<32>
	Mem0[0x00140048<p32>:word32] = v102
	v103 = loc12
	v104 = 1<32>
	v105 = v103 & v104
	loc23 = v105
	v106 = loc23
	branch !v106 l000E7497
	// succ:  l000E7483 l000E7497
l000E7483:
	v107 = ___cxa_find_matching_catch_2()
	loc34 = v107
	v108 = Mem0[0x00140094<p32>:word32]
	loc45 = v108
	v109 = 0x4860<32>
	fn000E5815(v109)
	v110 = loc34
	___resumeException(v110)
	// succ:  l000E7497
l000E7497:
	v111 = 0x48A8<32>
	v112 = 0<32>
	Mem0[v111:word32] = v112
	v113 = 0x48AC<32>
	v114 = 0xFFFFFFFF<32>
	Mem0[v113:word32] = v114
	v115 = 0x4B40<32>
	v116 = loc1
	v117 = 0x4B78<32>
	fn000E7ABF(v115, v116, v117)
	v118 = 0x48B0<32>
	v119 = 0x19DC<32>
	Mem0[v118:word32] = v119
	v120 = 0x48B8<32>
	v121 = 0x19F0<32>
	Mem0[v120:word32] = v121
	v122 = 0x48B4<32>
	v123 = 0<32>
	Mem0[v122:word32] = v123
	v124 = 0<32>
	Mem0[0x00140048<p32>:word32] = v124
	v125 = 0x176<32>
	v126 = 0x48B8<32>
	v127 = 0x4B40<32>
	invoke_vii(v125, v126, v127)
	v128 = Mem0[0x00140048<p32>:word32]
	loc56 = v128
	v129 = 0<32>
	Mem0[0x00140048<p32>:word32] = v129
	v130 = loc56
	v131 = 1<32>
	v132 = v130 & v131
	loc67 = v132
	v133 = loc67
	branch !v133 l000E750B
	// succ:  l000E74F7 l000E750B
l000E74F7:
	v134 = ___cxa_find_matching_catch_2()
	loc78 = v134
	v135 = Mem0[0x00140094<p32>:word32]
	loc81 = v135
	v136 = 0x48B8<32>
	fn000E595D(v136)
	v137 = loc78
	___resumeException(v137)
	// succ:  l000E750B
l000E750B:
	v138 = 0x4900<32>
	v139 = 0<32>
	Mem0[v138:word32] = v139
	v140 = 0x4904<32>
	v141 = 0xFFFFFFFF<32>
	Mem0[v140:word32] = v141
	v142 = 0xBFC<32>
	v143 = Mem0[v142:word32]
	loc2 = v143
	v144 = 0x4B80<32>
	v145 = loc2
	v146 = 0x4BB0<32>
	fn000E7B88(v144, v145, v146)
	v147 = 0x4908<32>
	v148 = 0x1A04<32>
	Mem0[v147:word32] = v148
	v149 = 0x490C<32>
	v150 = 0x1A18<32>
	Mem0[v149:word32] = v150
	v151 = 0<32>
	Mem0[0x00140048<p32>:word32] = v151
	v152 = 0x176<32>
	v153 = 0x490C<32>
	v154 = 0x4B80<32>
	invoke_vii(v152, v153, v154)
	v155 = Mem0[0x00140048<p32>:word32]
	loc3 = v155
	v156 = 0<32>
	Mem0[0x00140048<p32>:word32] = v156
	v157 = loc3
	v158 = 1<32>
	v159 = v157 & v158
	loc4 = v159
	v160 = loc4
	branch !v160 l000E757E
	// succ:  l000E756A l000E757E
l000E756A:
	v161 = ___cxa_find_matching_catch_2()
	loc5 = v161
	v162 = Mem0[0x00140094<p32>:word32]
	loc6 = v162
	v163 = 0x490C<32>
	fn000E5815(v163)
	v164 = loc5
	___resumeException(v164)
	// succ:  l000E757E
l000E757E:
	v165 = 0x4954<32>
	v166 = 0<32>
	Mem0[v165:word32] = v166
	v167 = 0x4958<32>
	v168 = 0xFFFFFFFF<32>
	Mem0[v167:word32] = v168
	v169 = 0x4BB8<32>
	v170 = loc2
	v171 = 0x4BE8<32>
	fn000E7C82(v169, v170, v171)
	v172 = 0x495C<32>
	v173 = 0x1A2C<32>
	Mem0[v172:word32] = v173
	v174 = 0x4960<32>
	v175 = 0x1A40<32>
	Mem0[v174:word32] = v175
	v176 = 0<32>
	Mem0[0x00140048<p32>:word32] = v176
	v177 = 0x176<32>
	v178 = 0x4960<32>
	v179 = 0x4BB8<32>
	invoke_vii(v177, v178, v179)
	v180 = Mem0[0x00140048<p32>:word32]
	loc7 = v180
	v181 = 0<32>
	Mem0[0x00140048<p32>:word32] = v181
	v182 = loc7
	v183 = 1<32>
	v184 = v182 & v183
	loc8 = v184
	v185 = loc8
	branch !v185 l000E75E9
	// succ:  l000E75D5 l000E75E9
l000E75D5:
	v186 = ___cxa_find_matching_catch_2()
	loc9 = v186
	v187 = Mem0[0x00140094<p32>:word32]
	loc10 = v187
	v188 = 0x4960<32>
	fn000E595D(v188)
	v189 = loc9
	___resumeException(v189)
	// succ:  l000E75E9
l000E75E9:
	v190 = 0x49A8<32>
	v191 = 0<32>
	Mem0[v190:word32] = v191
	v192 = 0x49AC<32>
	v193 = 0xFFFFFFFF<32>
	Mem0[v192:word32] = v193
	v194 = 0xB14<32>
	v195 = Mem0[v194:word32]
	loc11 = v195
	v196 = 0x4BF0<32>
	v197 = loc11
	v198 = 0x4C20<32>
	fn000E7B88(v196, v197, v198)
	v199 = 0x49B0<32>
	v200 = 0x1A04<32>
	Mem0[v199:word32] = v200
	v201 = 0x49B4<32>
	v202 = 0x1A18<32>
	Mem0[v201:word32] = v202
	v203 = 0<32>
	Mem0[0x00140048<p32>:word32] = v203
	v204 = 0x176<32>
	v205 = 0x49B4<32>
	v206 = 0x4BF0<32>
	invoke_vii(v204, v205, v206)
	v207 = Mem0[0x00140048<p32>:word32]
	loc13 = v207
	v208 = 0<32>
	Mem0[0x00140048<p32>:word32] = v208
	v209 = loc13
	v210 = 1<32>
	v211 = v209 & v210
	loc14 = v211
	v212 = loc14
	branch !v212 l000E765C
	// succ:  l000E7648 l000E765C
l000E7648:
	v213 = ___cxa_find_matching_catch_2()
	loc15 = v213
	v214 = Mem0[0x00140094<p32>:word32]
	loc16 = v214
	v215 = 0x49B4<32>
	fn000E5815(v215)
	v216 = loc15
	___resumeException(v216)
	// succ:  l000E765C
l000E765C:
	v217 = 0x49FC<32>
	v218 = 0<32>
	Mem0[v217:word32] = v218
	v219 = 0x4A00<32>
	v220 = 0xFFFFFFFF<32>
	Mem0[v219:word32] = v220
	v221 = 0x49B0<32>
	v222 = Mem0[v221:word32]
	loc17 = v222
	v223 = loc17
	v224 = 0xFFFFFFF4<32>
	v225 = v223 + v224
	loc18 = v225
	v226 = loc18
	v227 = Mem0[v226:word32]
	loc19 = v227
	v228 = 0x49B0<32>
	v229 = loc19
	v230 = v228 + v229
	loc20 = v230
	v231 = loc20
	v232 = 0x18<32>
	v233 = v231 + v232
	loc21 = v233
	v234 = loc21
	v235 = Mem0[v234:word32]
	loc22 = v235
	v236 = 0x4A58<32>
	v237 = 0x1A04<32>
	Mem0[v236:word32] = v237
	v238 = 0x4A5C<32>
	v239 = 0x1A18<32>
	Mem0[v238:word32] = v239
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v241 = 0x176<32>
	v242 = 0x4A5C<32>
	v243 = loc22
	invoke_vii(v241, v242, v243)
	v244 = Mem0[0x00140048<p32>:word32]
	loc24 = v244
	v245 = 0<32>
	Mem0[0x00140048<p32>:word32] = v245
	v246 = loc24
	v247 = 1<32>
	v248 = v246 & v247
	loc25 = v248
	v249 = loc25
	branch !v249 l000E76E6
	// succ:  l000E76D2 l000E76E6
l000E76D2:
	v250 = ___cxa_find_matching_catch_2()
	loc26 = v250
	v251 = Mem0[0x00140094<p32>:word32]
	loc27 = v251
	v252 = 0x4A5C<32>
	fn000E5815(v252)
	v253 = loc26
	___resumeException(v253)
	// succ:  l000E76E6
l000E76E6:
	v254 = 0x4AA4<32>
	v255 = 0<32>
	Mem0[v254:word32] = v255
	v256 = 0x4AA8<32>
	v257 = 0xFFFFFFFF<32>
	Mem0[v256:word32] = v257
	v258 = 0x4C28<32>
	v259 = loc11
	v260 = 0x4C58<32>
	fn000E7C82(v258, v259, v260)
	v261 = 0x4A04<32>
	v262 = 0x1A2C<32>
	Mem0[v261:word32] = v262
	v263 = 0x4A08<32>
	v264 = 0x1A40<32>
	Mem0[v263:word32] = v264
	v265 = 0<32>
	Mem0[0x00140048<p32>:word32] = v265
	v266 = 0x176<32>
	v267 = 0x4A08<32>
	v268 = 0x4C28<32>
	invoke_vii(v266, v267, v268)
	v269 = Mem0[0x00140048<p32>:word32]
	loc28 = v269
	v270 = 0<32>
	Mem0[0x00140048<p32>:word32] = v270
	v271 = loc28
	v272 = 1<32>
	v273 = v271 & v272
	loc29 = v273
	v274 = loc29
	branch !v274 l000E7751
	// succ:  l000E773D l000E7751
l000E773D:
	v275 = ___cxa_find_matching_catch_2()
	loc30 = v275
	v276 = Mem0[0x00140094<p32>:word32]
	loc31 = v276
	v277 = 0x4A08<32>
	fn000E595D(v277)
	v278 = loc30
	___resumeException(v278)
	// succ:  l000E7751
l000E7751:
	v279 = 0x4A50<32>
	v280 = 0<32>
	Mem0[v279:word32] = v280
	v281 = 0x4A54<32>
	v282 = 0xFFFFFFFF<32>
	Mem0[v281:word32] = v282
	v283 = 0x4A04<32>
	v284 = Mem0[v283:word32]
	loc32 = v284
	v285 = loc32
	v286 = 0xFFFFFFF4<32>
	v287 = v285 + v286
	loc33 = v287
	v288 = loc33
	v289 = Mem0[v288:word32]
	loc35 = v289
	v290 = 0x4A04<32>
	v291 = loc35
	v292 = v290 + v291
	loc36 = v292
	v293 = loc36
	v294 = 0x18<32>
	v295 = v293 + v294
	loc37 = v295
	v296 = loc37
	v297 = Mem0[v296:word32]
	loc38 = v297
	v298 = 0x4AAC<32>
	v299 = 0x1A2C<32>
	Mem0[v298:word32] = v299
	v300 = 0x4AB0<32>
	v301 = 0x1A40<32>
	Mem0[v300:word32] = v301
	v302 = 0<32>
	Mem0[0x00140048<p32>:word32] = v302
	v303 = 0x176<32>
	v304 = 0x4AB0<32>
	v305 = loc38
	invoke_vii(v303, v304, v305)
	v306 = Mem0[0x00140048<p32>:word32]
	loc39 = v306
	v307 = 0<32>
	Mem0[0x00140048<p32>:word32] = v307
	v308 = loc39
	v309 = 1<32>
	v310 = v308 & v309
	loc40 = v310
	v311 = loc40
	branch !v311 l000E77DB
	// succ:  l000E77C7 l000E77DB
l000E77C7:
	v312 = ___cxa_find_matching_catch_2()
	loc41 = v312
	v313 = Mem0[0x00140094<p32>:word32]
	loc42 = v313
	v314 = 0x4AB0<32>
	fn000E595D(v314)
	v315 = loc41
	___resumeException(v315)
	goto l000E792E
	// succ:  l000E792E
l000E77DB:
	v316 = 0x4AF8<32>
	v317 = 0<32>
	Mem0[v316:word32] = v317
	v318 = 0x4AFC<32>
	v319 = 0xFFFFFFFF<32>
	Mem0[v318:word32] = v319
	v320 = 0x4858<32>
	v321 = Mem0[v320:word32]
	loc43 = v321
	v322 = loc43
	v323 = 0xFFFFFFF4<32>
	v324 = v322 + v323
	loc44 = v324
	v325 = loc44
	v326 = Mem0[v325:word32]
	loc46 = v326
	v327 = 0x4858<32>
	v328 = loc46
	v329 = v327 + v328
	loc47 = v329
	v330 = loc47
	v331 = 0x48<32>
	v332 = v330 + v331
	loc48 = v332
	v333 = loc48
	v334 = 0x4908<32>
	Mem0[v333:word32] = v334
	v335 = 0x48B0<32>
	v336 = Mem0[v335:word32]
	loc49 = v336
	v337 = loc49
	v338 = 0xFFFFFFF4<32>
	v339 = v337 + v338
	loc50 = v339
	v340 = loc50
	v341 = Mem0[v340:word32]
	loc51 = v341
	v342 = 0x48B0<32>
	v343 = loc51
	v344 = v342 + v343
	loc52 = v344
	v345 = loc52
	v346 = 0x48<32>
	v347 = v345 + v346
	loc53 = v347
	v348 = loc53
	v349 = 0x495C<32>
	Mem0[v348:word32] = v349
	v350 = 0x49B0<32>
	v351 = Mem0[v350:word32]
	loc54 = v351
	v352 = loc54
	v353 = 0xFFFFFFF4<32>
	v354 = v352 + v353
	loc55 = v354
	v355 = loc55
	v356 = Mem0[v355:word32]
	loc57 = v356
	v357 = 0x49B0<32>
	v358 = loc57
	v359 = v357 + v358
	loc58 = v359
	v360 = loc58
	v361 = 4<32>
	v362 = v360 + v361
	loc59 = v362
	v363 = loc59
	v364 = Mem0[v363:word32]
	loc60 = v364
	v365 = loc60
	v366 = 0x2000<32>
	v367 = v365 | v366
	loc61 = v367
	v368 = loc59
	v369 = loc61
	Mem0[v368:word32] = v369
	v370 = 0x4A04<32>
	v371 = Mem0[v370:word32]
	loc62 = v371
	v372 = loc62
	v373 = 0xFFFFFFF4<32>
	v374 = v372 + v373
	loc63 = v374
	v375 = loc63
	v376 = Mem0[v375:word32]
	loc64 = v376
	v377 = 0x4A04<32>
	v378 = loc64
	v379 = v377 + v378
	loc65 = v379
	v380 = loc65
	v381 = 4<32>
	v382 = v380 + v381
	loc66 = v382
	v383 = loc66
	v384 = Mem0[v383:word32]
	loc68 = v384
	v385 = loc68
	v386 = 0x2000<32>
	v387 = v385 | v386
	loc69 = v387
	v388 = loc66
	v389 = loc69
	Mem0[v388:word32] = v389
	v390 = 0x49B0<32>
	v391 = Mem0[v390:word32]
	loc70 = v391
	v392 = loc70
	v393 = 0xFFFFFFF4<32>
	v394 = v392 + v393
	loc71 = v394
	v395 = loc71
	v396 = Mem0[v395:word32]
	loc72 = v396
	v397 = 0x49B0<32>
	v398 = loc72
	v399 = v397 + v398
	loc73 = v399
	v400 = loc73
	v401 = 0x48<32>
	v402 = v400 + v401
	loc74 = v402
	v403 = loc74
	v404 = 0x4908<32>
	Mem0[v403:word32] = v404
	v405 = 0x4A04<32>
	v406 = Mem0[v405:word32]
	loc75 = v406
	v407 = loc75
	v408 = 0xFFFFFFF4<32>
	v409 = v407 + v408
	loc76 = v409
	v410 = loc76
	v411 = Mem0[v410:word32]
	loc77 = v411
	v412 = 0x4A04<32>
	v413 = loc77
	v414 = v412 + v413
	loc79 = v414
	v415 = loc79
	v416 = 0x48<32>
	v417 = v415 + v416
	loc80 = v417
	v418 = loc80
	v419 = 0x495C<32>
	Mem0[v418:word32] = v419
	return
	// succ:  fn000E7427_exit
l000E792E:
	// succ:  l000E792F
l000E792F:
	return
	// succ:  fn000E7427_exit
fn000E7427_exit:


// fn000E7931
// Return size: 0
void fn000E7931(word32 arg0)
fn000E7931_entry:
	// succ:  l000E7931
l000E7931:
	v17 = Mem0[0x00140030<p32>:word32]
	loc15 = v17
	v18 = 0<32>
	Mem0[0x00140048<p32>:word32] = v18
	v19 = 0x177<32>
	v20 = 0x4908<32>
	v21 = invoke_ii(v19, v20)
	v22 = Mem0[0x00140048<p32>:word32]
	loc2 = v22
	v23 = 0<32>
	Mem0[0x00140048<p32>:word32] = v23
	v24 = loc2
	v25 = 1<32>
	v26 = v24 & v25
	loc6 = v26
	v27 = loc6
	branch !v27 l000E795D
	// succ:  l000E7958 l000E795D
l000E7958:
	v28 = 6<32>
	loc14 = v28
	goto l000E79D9
	// succ:  l000E79D9
l000E795D:
	v29 = 0<32>
	Mem0[0x00140048<p32>:word32] = v29
	v30 = 0x178<32>
	v31 = 0x495C<32>
	v32 = invoke_ii(v30, v31)
	v33 = Mem0[0x00140048<p32>:word32]
	loc7 = v33
	v34 = 0<32>
	Mem0[0x00140048<p32>:word32] = v34
	v35 = loc7
	v36 = 1<32>
	v37 = v35 & v36
	loc8 = v37
	v38 = loc8
	branch !v38 l000E7983
	// succ:  l000E797E l000E7983
l000E797E:
	v39 = 6<32>
	loc14 = v39
	goto l000E79D8
	// succ:  l000E79D8
l000E7983:
	v40 = 0<32>
	Mem0[0x00140048<p32>:word32] = v40
	v41 = 0x177<32>
	v42 = 0x4A58<32>
	v43 = invoke_ii(v41, v42)
	v44 = Mem0[0x00140048<p32>:word32]
	loc9 = v44
	v45 = 0<32>
	Mem0[0x00140048<p32>:word32] = v45
	v46 = loc9
	v47 = 1<32>
	v48 = v46 & v47
	loc10 = v48
	v49 = loc10
	v50 = v49 == 0<32>
	branch !v50 l000E79CA
	// succ:  l000E79A5 l000E79CA
l000E79A5:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v52 = 0x178<32>
	v53 = 0x4AAC<32>
	v54 = invoke_ii(v52, v53)
	v55 = Mem0[0x00140048<p32>:word32]
	loc11 = v55
	v56 = 0<32>
	Mem0[0x00140048<p32>:word32] = v56
	v57 = loc11
	v58 = 1<32>
	v59 = v57 & v58
	loc12 = v59
	v60 = loc12
	v61 = v60 == 0<32>
	branch !v61 l000E79C9
	// succ:  l000E79C7 l000E79C9
l000E79C7:
	return
	// succ:  fn000E7931_exit
l000E79C9:
	// succ:  l000E79CA
l000E79CA:
	v62 = 0<32>
	v63 = ___cxa_find_matching_catch_3(v62)
	loc4 = v63
	v64 = Mem0[0x00140094<p32>:word32]
	loc5 = v64
	v65 = loc4
	loc1 = v65
	// succ:  l000E79D8
l000E79D8:
	// succ:  l000E79D9
l000E79D9:
	v66 = loc14
	v67 = 6<32>
	v68 = v66 == v67
	branch !v68 l000E79F0
	// succ:  l000E79E1 l000E79F0
l000E79E1:
	v69 = 0<32>
	v70 = ___cxa_find_matching_catch_3(v69)
	loc13 = v70
	v71 = Mem0[0x00140094<p32>:word32]
	loc3 = v71
	v72 = loc13
	loc1 = v72
	// succ:  l000E79F0
l000E79F0:
	v73 = loc1
	fn000D0E65(v73)
	// succ:  l000E79F4
l000E79F4:
	return
	// succ:  fn000E7931_exit
fn000E7931_exit:


// fn000E79F6
// Return size: 0
void fn000E79F6(word32 arg0, word32 arg1, word32 arg2)
fn000E79F6_entry:
	// succ:  l000E79F6
l000E79F6:
	v16 = Mem0[0x00140030<p32>:word32]
	loc16 = v16
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v19 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l000E7A0F
	// succ:  l000E7A0A l000E7A0F
l000E7A0A:
	v23 = 0x10<32>
	abortStackOverflow(v23)
	// succ:  l000E7A0F
l000E7A0F:
	v24 = loc16
	v25 = 4<32>
	v26 = v24 + v25
	loc8 = v26
	v27 = loc16
	loc9 = v27
	v28 = arg0
	fn000E6505(v28)
	v29 = arg0
	v30 = 0x1B48<32>
	Mem0[v29:word32] = v30
	v31 = arg0
	v32 = 0x20<32>
	v33 = v31 + v32
	loc10 = v33
	v34 = loc10
	v35 = arg1
	Mem0[v34:word32] = v35
	v36 = arg0
	v37 = 0x28<32>
	v38 = v36 + v37
	loc11 = v38
	v39 = loc11
	v40 = arg2
	Mem0[v39:word32] = v40
	v41 = arg0
	v42 = 0x30<32>
	v43 = v41 + v42
	loc12 = v43
	v44 = loc12
	v45 = 0xFFFFFFFF<32>
	Mem0[v44:word32] = v45
	v46 = arg0
	v47 = 0x34<32>
	v48 = v46 + v47
	loc13 = v48
	v49 = loc13
	v50 = 0<32>
	v51 = SLICE(v50, byte, 0)
	Mem0[v49:byte] = v51
	v52 = arg0
	v53 = 4<32>
	v54 = v52 + v53
	loc14 = v54
	v55 = loc8
	v56 = loc14
	fn0011B3DF(v55, v56)
	v57 = loc8
	v58 = Mem0[v57:word32]
	loc3 = v58
	v59 = loc9
	v60 = loc3
	Mem0[v59:word32] = v60
	v61 = 0<32>
	Mem0[0x00140048<p32>:word32] = v61
	v62 = 0x4F<32>
	v63 = arg0
	v64 = loc9
	invoke_vii(v62, v63, v64)
	v65 = Mem0[0x00140048<p32>:word32]
	loc4 = v65
	v66 = 0<32>
	Mem0[0x00140048<p32>:word32] = v66
	v67 = loc4
	v68 = 1<32>
	v69 = v67 & v68
	loc5 = v69
	v70 = loc5
	branch !v70 l000E7AB2
	// succ:  l000E7A9B l000E7AB2
l000E7A9B:
	v71 = ___cxa_find_matching_catch_2()
	loc6 = v71
	v72 = Mem0[0x00140094<p32>:word32]
	loc7 = v72
	v73 = loc9
	fn0011B3FB(v73)
	v74 = arg0
	fn000E596B(v74)
	v75 = loc6
	___resumeException(v75)
	goto l000E7ABC
	// succ:  l000E7ABC
l000E7AB2:
	v76 = loc9
	fn0011B3FB(v76)
	v77 = loc16
	Mem0[0x00140030<p32>:word32] = v77
	return
	// succ:  fn000E79F6_exit
l000E7ABC:
	// succ:  l000E7ABD
l000E7ABD:
	return
	// succ:  fn000E79F6_exit
fn000E79F6_exit:


// fn000E7ABF
// Return size: 0
void fn000E7ABF(word32 arg0, word32 arg1, word32 arg2)
fn000E7ABF_entry:
	// succ:  l000E7ABF
l000E7ABF:
	v16 = Mem0[0x00140030<p32>:word32]
	loc16 = v16
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v19 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l000E7AD8
	// succ:  l000E7AD3 l000E7AD8
l000E7AD3:
	v23 = 0x10<32>
	abortStackOverflow(v23)
	// succ:  l000E7AD8
l000E7AD8:
	v24 = loc16
	v25 = 4<32>
	v26 = v24 + v25
	loc8 = v26
	v27 = loc16
	loc9 = v27
	v28 = arg0
	fn000E6544(v28)
	v29 = arg0
	v30 = 0x1B08<32>
	Mem0[v29:word32] = v30
	v31 = arg0
	v32 = 0x20<32>
	v33 = v31 + v32
	loc10 = v33
	v34 = loc10
	v35 = arg1
	Mem0[v34:word32] = v35
	v36 = arg0
	v37 = 0x28<32>
	v38 = v36 + v37
	loc11 = v38
	v39 = loc11
	v40 = arg2
	Mem0[v39:word32] = v40
	v41 = arg0
	v42 = 0x30<32>
	v43 = v41 + v42
	loc12 = v43
	v44 = loc12
	v45 = 0xFFFFFFFF<32>
	Mem0[v44:word32] = v45
	v46 = arg0
	v47 = 0x34<32>
	v48 = v46 + v47
	loc13 = v48
	v49 = loc13
	v50 = 0<32>
	v51 = SLICE(v50, byte, 0)
	Mem0[v49:byte] = v51
	v52 = arg0
	v53 = 4<32>
	v54 = v52 + v53
	loc14 = v54
	v55 = loc8
	v56 = loc14
	fn0011B3DF(v55, v56)
	v57 = loc8
	v58 = Mem0[v57:word32]
	loc3 = v58
	v59 = loc9
	v60 = loc3
	Mem0[v59:word32] = v60
	v61 = 0<32>
	Mem0[0x00140048<p32>:word32] = v61
	v62 = 0x4A<32>
	v63 = arg0
	v64 = loc9
	invoke_vii(v62, v63, v64)
	v65 = Mem0[0x00140048<p32>:word32]
	loc4 = v65
	v66 = 0<32>
	Mem0[0x00140048<p32>:word32] = v66
	v67 = loc4
	v68 = 1<32>
	v69 = v67 & v68
	loc5 = v69
	v70 = loc5
	branch !v70 l000E7B7B
	// succ:  l000E7B64 l000E7B7B
l000E7B64:
	v71 = ___cxa_find_matching_catch_2()
	loc6 = v71
	v72 = Mem0[0x00140094<p32>:word32]
	loc7 = v72
	v73 = loc9
	fn0011B3FB(v73)
	v74 = arg0
	fn000E5C8E(v74)
	v75 = loc6
	___resumeException(v75)
	goto l000E7B85
	// succ:  l000E7B85
l000E7B7B:
	v76 = loc9
	fn0011B3FB(v76)
	v77 = loc16
	Mem0[0x00140030<p32>:word32] = v77
	return
	// succ:  fn000E7ABF_exit
l000E7B85:
	// succ:  l000E7B86
l000E7B86:
	return
	// succ:  fn000E7ABF_exit
fn000E7ABF_exit:


// fn000E7B88
// Return size: 0
void fn000E7B88(word32 arg0, word32 arg1, word32 arg2)
fn000E7B88_entry:
	// succ:  l000E7B88
l000E7B88:
	v22 = Mem0[0x00140030<p32>:word32]
	loc22 = v22
	v23 = Mem0[0x00140030<p32>:word32]
	v24 = 0x10<32>
	v25 = v23 + v24
	Mem0[0x00140030<p32>:word32] = v25
	v26 = Mem0[0x00140030<p32>:word32]
	v27 = Mem0[0x00140034<p32>:word32]
	v28 = v26 >= v27
	branch !v28 l000E7BA1
	// succ:  l000E7B9C l000E7BA1
l000E7B9C:
	v29 = 0x10<32>
	abortStackOverflow(v29)
	// succ:  l000E7BA1
l000E7BA1:
	v30 = loc22
	v31 = 4<32>
	v32 = v30 + v31
	loc14 = v32
	v33 = loc22
	loc15 = v33
	v34 = arg0
	fn000E6505(v34)
	v35 = arg0
	v36 = 0x1AC8<32>
	Mem0[v35:word32] = v36
	v37 = arg0
	v38 = 0x20<32>
	v39 = v37 + v38
	loc16 = v39
	v40 = loc16
	v41 = arg1
	Mem0[v40:word32] = v41
	v42 = arg0
	v43 = 4<32>
	v44 = v42 + v43
	loc17 = v44
	v45 = loc14
	v46 = loc17
	fn0011B3DF(v45, v46)
	v47 = loc14
	v48 = Mem0[v47:word32]
	loc18 = v48
	v49 = loc15
	v50 = loc18
	Mem0[v49:word32] = v50
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v52 = 0x164<32>
	v53 = loc15
	v54 = 0x5370<32>
	v55 = invoke_iii(v52, v53, v54)
	loc19 = v55
	v56 = Mem0[0x00140048<p32>:word32]
	loc20 = v56
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v58 = loc20
	v59 = 1<32>
	v60 = v58 & v59
	loc3 = v60
	v61 = loc3
	branch !v61 l000E7C1E
	// succ:  l000E7C07 l000E7C1E
l000E7C07:
	v62 = ___cxa_find_matching_catch_2()
	loc12 = v62
	v63 = Mem0[0x00140094<p32>:word32]
	loc13 = v63
	v64 = loc15
	fn0011B3FB(v64)
	v65 = arg0
	fn000E596B(v65)
	v66 = loc12
	___resumeException(v66)
l000E7C1E:
	v67 = arg0
	v68 = 0x24<32>
	v69 = v67 + v68
	loc4 = v69
	v70 = loc15
	fn0011B3FB(v70)
	v71 = loc4
	v72 = loc19
	Mem0[v71:word32] = v72
	v73 = arg0
	v74 = 0x28<32>
	v75 = v73 + v74
	loc5 = v75
	v76 = loc5
	v77 = arg2
	Mem0[v76:word32] = v77
	v78 = arg0
	v79 = 0x2C<32>
	v80 = v78 + v79
	loc6 = v80
	v81 = loc19
	v82 = Mem0[v81:word32]
	loc7 = v82
	v83 = loc7
	v84 = 0x1C<32>
	v85 = v83 + v84
	loc8 = v85
	v86 = loc8
	v87 = Mem0[v86:word32]
	loc9 = v87
	v88 = loc19
	v89 = loc9
	v90 = 0x1FF<32>
	v91 = v89 & v90
	v92 = 0xB00<32>
	v93 = v91 + v92
fn000E7B88_exit:


// fn000E7C82
// Return size: 0
void fn000E7C82(word32 arg0, word32 arg1, word32 arg2)
fn000E7C82_entry:
	// succ:  l000E7C82
l000E7C82:
	v22 = Mem0[0x00140030<p32>:word32]
	loc22 = v22
	v23 = Mem0[0x00140030<p32>:word32]
	v24 = 0x10<32>
	v25 = v23 + v24
	Mem0[0x00140030<p32>:word32] = v25
	v26 = Mem0[0x00140030<p32>:word32]
	v27 = Mem0[0x00140034<p32>:word32]
	v28 = v26 >= v27
	branch !v28 l000E7C9B
	// succ:  l000E7C96 l000E7C9B
l000E7C96:
	v29 = 0x10<32>
	abortStackOverflow(v29)
	// succ:  l000E7C9B
l000E7C9B:
	v30 = loc22
	v31 = 4<32>
	v32 = v30 + v31
	loc14 = v32
	v33 = loc22
	loc15 = v33
	v34 = arg0
	fn000E6544(v34)
	v35 = arg0
	v36 = 0x1A88<32>
	Mem0[v35:word32] = v36
	v37 = arg0
	v38 = 0x20<32>
	v39 = v37 + v38
	loc16 = v39
	v40 = loc16
	v41 = arg1
	Mem0[v40:word32] = v41
	v42 = arg0
	v43 = 4<32>
	v44 = v42 + v43
	loc17 = v44
	v45 = loc14
	v46 = loc17
	fn0011B3DF(v45, v46)
	v47 = loc14
	v48 = Mem0[v47:word32]
	loc18 = v48
	v49 = loc15
	v50 = loc18
	Mem0[v49:word32] = v50
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v52 = 0x164<32>
	v53 = loc15
	v54 = 0x5378<32>
	v55 = invoke_iii(v52, v53, v54)
	loc19 = v55
	v56 = Mem0[0x00140048<p32>:word32]
	loc20 = v56
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v58 = loc20
	v59 = 1<32>
	v60 = v58 & v59
	loc3 = v60
	v61 = loc3
	branch !v61 l000E7D18
	// succ:  l000E7D01 l000E7D18
l000E7D01:
	v62 = ___cxa_find_matching_catch_2()
	loc12 = v62
	v63 = Mem0[0x00140094<p32>:word32]
	loc13 = v63
	v64 = loc15
	fn0011B3FB(v64)
	v65 = arg0
	fn000E5C8E(v65)
	v66 = loc12
	___resumeException(v66)
l000E7D18:
	v67 = arg0
	v68 = 0x24<32>
	v69 = v67 + v68
	loc4 = v69
	v70 = loc15
	fn0011B3FB(v70)
	v71 = loc4
	v72 = loc19
	Mem0[v71:word32] = v72
	v73 = arg0
	v74 = 0x28<32>
	v75 = v73 + v74
	loc5 = v75
	v76 = loc5
	v77 = arg2
	Mem0[v76:word32] = v77
	v78 = arg0
	v79 = 0x2C<32>
	v80 = v78 + v79
	loc6 = v80
	v81 = loc19
	v82 = Mem0[v81:word32]
	loc7 = v82
	v83 = loc7
	v84 = 0x1C<32>
	v85 = v83 + v84
	loc8 = v85
	v86 = loc8
	v87 = Mem0[v86:word32]
	loc9 = v87
	v88 = loc19
	v89 = loc9
	v90 = 0x1FF<32>
	v91 = v89 & v90
	v92 = 0xB00<32>
	v93 = v91 + v92
fn000E7C82_exit:


// fn000E7D7C
// Return size: 0
void fn000E7D7C(word32 arg0)
fn000E7D7C_entry:
	// succ:  l000E7D7C
l000E7D7C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn000E5C8E(v5)
	v6 = arg0
	fn0011B709(v6)
	return
	// succ:  fn000E7D7C_exit
l000E7D8D:
	return
	// succ:  fn000E7D7C_exit
fn000E7D7C_exit:


// fn000E7D8F
// Return size: 0
void fn000E7D8F(word32 arg0, word32 arg1)
fn000E7D8F_entry:
	// succ:  l000E7D8F
l000E7D8F:
	v15 = Mem0[0x00140030<p32>:word32]
	loc14 = v15
	v16 = arg0
	v17 = Mem0[v16:word32]
	loc5 = v17
	v18 = loc5
	v19 = 0x18<32>
	v20 = v18 + v19
	loc6 = v20
	v21 = loc6
	v22 = Mem0[v21:word32]
	loc7 = v22
	v23 = arg0
	v24 = loc7
	v25 = 0x1FF<32>
	v26 = v24 & v25
	v27 = 0xB00<32>
	v28 = v26 + v27
fn000E7D8F_exit:


// fn000E7E11
// Return size: 0
word32 fn000E7E11(word32 arg0)
fn000E7E11_entry:
	// succ:  l000E7E11
l000E7E11:
	v27 = Mem0[0x00140030<p32>:word32]
	loc25 = v27
	v28 = Mem0[0x00140030<p32>:word32]
	v29 = 0x10<32>
	v30 = v28 + v29
	Mem0[0x00140030<p32>:word32] = v30
	v31 = Mem0[0x00140030<p32>:word32]
	v32 = Mem0[0x00140034<p32>:word32]
	v33 = v31 >= v32
	branch !v33 l000E7E2A
	// succ:  l000E7E25 l000E7E2A
l000E7E25:
	v34 = 0x10<32>
	abortStackOverflow(v34)
	// succ:  l000E7E2A
l000E7E2A:
	v35 = loc25
	v36 = 8<32>
	v37 = v35 + v36
	loc3 = v37
	v38 = loc25
	loc14 = v38
	v39 = arg0
	v40 = 0x24<32>
	v41 = v39 + v40
	loc16 = v41
	v42 = arg0
	v43 = 0x28<32>
	v44 = v42 + v43
	loc17 = v44
	v45 = loc3
	v46 = 8<32>
	v47 = v45 + v46
	loc18 = v47
	v48 = loc3
	loc19 = v48
	v49 = arg0
	v50 = 0x20<32>
	v51 = v49 + v50
	loc20 = v51
	// succ:  l000E7E57
l000E7E57:
	v52 = loc16
	v53 = Mem0[v52:word32]
	loc21 = v53
	v54 = loc17
	v55 = Mem0[v54:word32]
	loc22 = v55
	v56 = loc21
	v57 = Mem0[v56:word32]
	loc4 = v57
	v58 = loc4
	v59 = 0x14<32>
	v60 = v58 + v59
	loc5 = v60
	v61 = loc5
	v62 = Mem0[v61:word32]
	loc6 = v62
	v63 = loc21
	v64 = loc22
	v65 = loc3
	v66 = loc18
	v67 = loc14
	v68 = loc6
	v69 = 0x1FF<32>
	v70 = v68 & v69
	v71 = 0x1D20<32>
	v72 = v70 + v71
fn000E7E11_exit:


// fn000E7F2E
// Return size: 0
word32 fn000E7F2E(word32 arg0, word32 arg1, word32 arg2)
fn000E7F2E_entry:
	// succ:  l000E7F2E
l000E7F2E:
	v22 = Mem0[0x00140030<p32>:word32]
	loc22 = v22
	v23 = arg0
	v24 = 0x2C<32>
	v25 = v23 + v24
	loc14 = v25
	v26 = loc14
	v27 = Mem0[v26:int8]
	v28 = CONVERT(v27, int8, word32)
	loc15 = v28
	v29 = loc15
	v30 = 0x18<32>
	v31 = v29 << v30
	v32 = 0x18<32>
	v33 = v31 >> v32
	v34 = 0<32>
	v35 = v33 == v34
	loc16 = v35
	// succ:  l000E7F4F
l000E7F4F:
	v36 = loc16
	v36 = v36
	// succ:  l000E7F55 l000E7F55
l000E7F55:
	v37 = 0<32>
	loc3 = v37
	v38 = arg1
	loc5 = v38
	v39 = loc3
	v40 = arg2
	v41 = v39 < v40
	loc20 = v41
	v42 = loc20
	v43 = v42 == 0<32>
	branch !v43 l000E7F72
	// succ:  l000E7F6B l000E7F72
l000E7F6B:
	v44 = loc3
	loc4 = v44
l000E7F72:
	v45 = arg0
	v46 = Mem0[v45:word32]
	loc6 = v46
	v47 = loc6
	v48 = 0x34<32>
	v49 = v47 + v48
	loc7 = v49
	v50 = loc7
	v51 = Mem0[v50:word32]
	loc8 = v51
	v52 = loc5
	v53 = Mem0[v52:word32]
	loc9 = v53
	v54 = arg0
	v55 = loc9
	v56 = loc8
	v57 = 0x1FF<32>
	v58 = v56 & v57
	v59 = 0x1B20<32>
	v60 = v58 + v59
fn000E7F2E_exit:


// fn000E8219
// Return size: 0
void fn000E8219(word32 arg0)
fn000E8219_entry:
	// succ:  l000E8219
l000E8219:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn000E596B(v5)
	v6 = arg0
	fn0011B709(v6)
	return
	// succ:  fn000E8219_exit
l000E822A:
	return
	// succ:  fn000E8219_exit
fn000E8219_exit:


// fn000E822C
// Return size: 0
void fn000E822C(word32 arg0, word32 arg1)
fn000E822C_entry:
	// succ:  l000E822C
l000E822C:
	v15 = Mem0[0x00140030<p32>:word32]
	loc14 = v15
	v16 = arg0
	v17 = Mem0[v16:word32]
	loc5 = v17
	v18 = loc5
	v19 = 0x18<32>
	v20 = v18 + v19
	loc6 = v20
	v21 = loc6
	v22 = Mem0[v21:word32]
	loc7 = v22
	v23 = arg0
	v24 = loc7
	v25 = 0x1FF<32>
	v26 = v24 & v25
	v27 = 0xB00<32>
	v28 = v26 + v27
fn000E822C_exit:


// fn000E82AE
// Return size: 0
word32 fn000E82AE(word32 arg0)
fn000E82AE_entry:
	// succ:  l000E82AE
l000E82AE:
	v27 = Mem0[0x00140030<p32>:word32]
	loc25 = v27
	v28 = Mem0[0x00140030<p32>:word32]
	v29 = 0x10<32>
	v30 = v28 + v29
	Mem0[0x00140030<p32>:word32] = v30
	v31 = Mem0[0x00140030<p32>:word32]
	v32 = Mem0[0x00140034<p32>:word32]
	v33 = v31 >= v32
	branch !v33 l000E82C7
	// succ:  l000E82C2 l000E82C7
l000E82C2:
	v34 = 0x10<32>
	abortStackOverflow(v34)
	// succ:  l000E82C7
l000E82C7:
	v35 = loc25
	v36 = 8<32>
	v37 = v35 + v36
	loc3 = v37
	v38 = loc25
	loc14 = v38
	v39 = arg0
	v40 = 0x24<32>
	v41 = v39 + v40
	loc16 = v41
	v42 = arg0
	v43 = 0x28<32>
	v44 = v42 + v43
	loc17 = v44
	v45 = loc3
	v46 = 8<32>
	v47 = v45 + v46
	loc18 = v47
	v48 = loc3
	loc19 = v48
	v49 = arg0
	v50 = 0x20<32>
	v51 = v49 + v50
	loc20 = v51
	// succ:  l000E82F4
l000E82F4:
	v52 = loc16
	v53 = Mem0[v52:word32]
	loc21 = v53
	v54 = loc17
	v55 = Mem0[v54:word32]
	loc22 = v55
	v56 = loc21
	v57 = Mem0[v56:word32]
	loc4 = v57
	v58 = loc4
	v59 = 0x14<32>
	v60 = v58 + v59
	loc5 = v60
	v61 = loc5
	v62 = Mem0[v61:word32]
	loc6 = v62
	v63 = loc21
	v64 = loc22
	v65 = loc3
	v66 = loc18
	v67 = loc14
	v68 = loc6
	v69 = 0x1FF<32>
	v70 = v68 & v69
	v71 = 0x1D20<32>
	v72 = v70 + v71
fn000E82AE_exit:


// fn000E83CB
// Return size: 0
word32 fn000E83CB(word32 arg0, word32 arg1, word32 arg2)
fn000E83CB_entry:
	// succ:  l000E83CB
l000E83CB:
	v23 = Mem0[0x00140030<p32>:word32]
	loc23 = v23
	v24 = arg0
	v25 = 0x2C<32>
	v26 = v24 + v25
	loc15 = v26
	v27 = loc15
	v28 = Mem0[v27:int8]
	v29 = CONVERT(v28, int8, word32)
	loc16 = v29
	v30 = loc16
	v31 = 0x18<32>
	v32 = v30 << v31
	v33 = 0x18<32>
	v34 = v32 >> v33
	v35 = 0<32>
	v36 = v34 == v35
	loc17 = v36
	// succ:  l000E83EC
l000E83EC:
	v37 = loc17
	v37 = v37
	// succ:  l000E83F2 l000E83F2
l000E83F2:
	v38 = 0<32>
	loc3 = v38
	v39 = arg1
	loc5 = v39
	v40 = loc3
	v41 = arg2
	v42 = v40 < v41
	loc21 = v42
	v43 = loc21
	v44 = v43 == 0<32>
	branch !v44 l000E840F
	// succ:  l000E8408 l000E840F
l000E8408:
	v45 = loc3
	loc4 = v45
l000E840F:
	v46 = arg0
	v47 = Mem0[v46:word32]
	loc6 = v47
	v48 = loc6
	v49 = 0x34<32>
	v50 = v48 + v49
	loc7 = v50
	v51 = loc7
	v52 = Mem0[v51:word32]
	loc8 = v52
	v53 = loc5
	v54 = Mem0[v53:int8]
	v55 = CONVERT(v54, int8, word32)
	loc9 = v55
	v56 = loc9
	v57 = 0xFF<32>
	v58 = v56 & v57
	loc10 = v58
	v59 = arg0
	v60 = loc10
	v61 = loc8
	v62 = 0x1FF<32>
	v63 = v61 & v62
	v64 = 0x1B20<32>
	v65 = v63 + v64
fn000E83CB_exit:


// fn000E86C6
// Return size: 0
void fn000E86C6(word32 arg0, word32 arg1)
fn000E86C6_entry:
	// succ:  l000E86C6
l000E86C6:
	v20 = Mem0[0x00140030<p32>:word32]
	loc19 = v20
	v21 = arg1
	v22 = 0x5378<32>
	v23 = fn000EA9F7(v21, v22)
	loc10 = v23
	v24 = arg0
	v25 = 0x24<32>
	v26 = v24 + v25
	loc11 = v26
	v27 = loc11
	v28 = loc10
	Mem0[v27:word32] = v28
	v29 = loc10
	v30 = Mem0[v29:word32]
	loc12 = v30
	v31 = loc12
	v32 = 0x18<32>
	v33 = v31 + v32
	loc13 = v33
	v34 = loc13
	v35 = Mem0[v34:word32]
	loc14 = v35
	v36 = loc10
	v37 = loc14
	v38 = 0x1FF<32>
	v39 = v37 & v38
	v40 = 0xB00<32>
	v41 = v39 + v40
fn000E86C6_exit:


// fn000E8778
// Return size: 0
void fn000E8778(word32 arg0)
fn000E8778_entry:
	// succ:  l000E8778
l000E8778:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn000E5C8E(v5)
	v6 = arg0
	fn0011B709(v6)
	return
	// succ:  fn000E8778_exit
l000E8789:
	return
	// succ:  fn000E8778_exit
fn000E8778_exit:


// fn000E87B3
// Return size: 0
word32 fn000E87B3(word32 arg0, word32 arg1)
fn000E87B3_entry:
	// succ:  l000E87B3
l000E87B3:
	v43 = Mem0[0x00140030<p32>:word32]
	loc42 = v43
	v44 = Mem0[0x00140030<p32>:word32]
	v45 = 0x20<32>
	v46 = v44 + v45
	Mem0[0x00140030<p32>:word32] = v46
	v47 = Mem0[0x00140030<p32>:word32]
	v48 = Mem0[0x00140034<p32>:word32]
	v49 = v47 >= v48
	branch !v49 l000E87CC
	// succ:  l000E87C7 l000E87CC
l000E87C7:
	v50 = 0x20<32>
	abortStackOverflow(v50)
	// succ:  l000E87CC
l000E87CC:
	v51 = loc42
	v52 = 0x10<32>
	v53 = v51 + v52
	loc15 = v53
	v54 = loc42
	v55 = 8<32>
	v56 = v54 + v55
	loc26 = v56
	v57 = loc42
	v58 = 4<32>
	v59 = v57 + v58
	loc35 = v59
	v60 = loc42
	loc36 = v60
	v61 = arg1
	v62 = 0xFFFFFFFF<32>
	v63 = v61 == v62
	loc37 = v63
	v64 = arg0
	v65 = 0x34<32>
	v66 = v64 + v65
	loc38 = v66
	v67 = loc38
	v68 = Mem0[v67:int8]
	v69 = CONVERT(v68, int8, word32)
	loc39 = v69
	v70 = loc39
	v71 = 0x18<32>
	v72 = v70 << v71
	v73 = 0x18<32>
	v74 = v72 >> v73
	v75 = 0<32>
	v76 = v74 != v75
	loc40 = v76
	// succ:  l000E8807
l000E8807:
	v77 = loc37
	branch !v77 l000E883F
	// succ:  l000E880D l000E883F
l000E880D:
	v78 = loc40
	branch !v78 l000E8816
	// succ:  l000E8811 l000E8816
l000E8811:
	v79 = 0xFFFFFFFF<32>
	loc2 = v79
	goto l000E883D
	// succ:  l000E883D
l000E8816:
	v80 = arg0
	v81 = 0x30<32>
	v82 = v80 + v81
	loc5 = v82
	v83 = loc5
	v84 = Mem0[v83:word32]
	loc6 = v84
	v85 = loc6
	v86 = 0xFFFFFFFF<32>
	v87 = v85 != v86
	loc7 = v87
	v88 = loc7
	v89 = 1<32>
	v90 = v88 & v89
	loc8 = v90
	v91 = loc38
	v92 = loc8
	v93 = SLICE(v92, byte, 0)
	Mem0[v91:byte] = v93
	v94 = loc6
	loc2 = v94
	// succ:  l000E883D
l000E883D:
l000E883F:
	v95 = loc40
	v95 = v95
	// succ:  l000E8845 l000E8845
l000E8845:
	v96 = arg0
	v97 = 0x30<32>
	v98 = v96 + v97
	loc9 = v98
	v99 = loc9
	v100 = Mem0[v99:word32]
	loc10 = v100
	v101 = loc35
	v102 = loc10
	Mem0[v101:word32] = v102
	v103 = arg0
	v104 = 0x24<32>
	v105 = v103 + v104
	loc11 = v105
	v106 = loc11
	v107 = Mem0[v106:word32]
	loc12 = v107
	v108 = arg0
	v109 = 0x28<32>
	v110 = v108 + v109
	loc13 = v110
	v111 = loc13
	v112 = Mem0[v111:word32]
	loc14 = v112
	v113 = loc35
	v114 = 4<32>
	v115 = v113 + v114
	loc16 = v115
	v116 = loc15
	v117 = 8<32>
	v118 = v116 + v117
	loc17 = v118
	v119 = loc12
	v120 = Mem0[v119:word32]
	loc18 = v120
	v121 = loc18
	v122 = 0xC<32>
	v123 = v121 + v122
	loc19 = v123
	v124 = loc19
	v125 = Mem0[v124:word32]
	loc20 = v125
	v126 = loc12
	v127 = loc14
	v128 = loc35
	v129 = loc16
	v130 = loc36
	v131 = loc15
	v132 = loc17
	v133 = loc26
	v134 = loc20
	v135 = 0x1FF<32>
	v136 = v134 & v135
	v137 = 0x2C20<32>
	v138 = v136 + v137
fn000E87B3_exit:


// fn000E89AB
// Return size: 0
word32 fn000E89AB(word32 arg0, word32 arg1)
fn000E89AB_entry:
	// succ:  l000E89AB
l000E89AB:
	v68 = Mem0[0x00140030<p32>:word32]
	loc66 = v68
	v69 = Mem0[0x00140030<p32>:word32]
	v70 = 0x20<32>
	v71 = v69 + v70
	Mem0[0x00140030<p32>:word32] = v71
	v72 = Mem0[0x00140030<p32>:word32]
	v73 = Mem0[0x00140034<p32>:word32]
	v74 = v72 >= v73
	branch !v74 l000E89C4
	// succ:  l000E89BF l000E89C4
l000E89BF:
	v75 = 0x20<32>
	abortStackOverflow(v75)
	// succ:  l000E89C4
l000E89C4:
	v76 = loc66
	v77 = 0x10<32>
	v78 = v76 + v77
	loc21 = v78
	v79 = loc66
	v80 = 8<32>
	v81 = v79 + v80
	loc32 = v81
	v82 = loc66
	v83 = 4<32>
	v84 = v82 + v83
	loc42 = v84
	v85 = loc66
	loc53 = v85
	v86 = arg0
	v87 = 0x34<32>
	v88 = v86 + v87
	loc61 = v88
	v89 = loc61
	v90 = Mem0[v89:int8]
	v91 = CONVERT(v90, int8, word32)
	loc62 = v91
	v92 = loc62
	v93 = 0x18<32>
	v94 = v92 << v93
	v95 = 0x18<32>
	v96 = v94 >> v95
	v97 = 0<32>
	v98 = v96 == v97
	loc63 = v98
	v99 = loc63
	v99 = v99
	// succ:  l000E89FC l000E89FC
l000E89FC:
	v100 = arg0
	v101 = 0x2C<32>
	v102 = v100 + v101
	loc12 = v102
	v103 = loc12
	v104 = Mem0[v103:word32]
	loc13 = v104
	v105 = loc13
	v106 = 1<32>
	v107 = v105 > v106
	loc14 = v107
	v108 = loc14
	branch !v108 l000E8A18
	// succ:  l000E8A15 l000E8A18
l000E8A15:
	v109 = loc13
	goto l000E8A1A
	// succ:  l000E8A1A
l000E8A18:
	v110 = 1<32>
	// succ:  l000E8A1A
l000E8A1A:
	loc10 = v110
	v111 = arg0
	v112 = 0x20<32>
	v113 = v111 + v112
	loc15 = v113
	v114 = 0<32>
	loc4 = v114
	// succ:  l000E8A2A
l000E8A2A:
	v115 = loc4
	v116 = loc10
	v117 = v115 < v116
	loc16 = v117
	v118 = loc16
	v119 = v118 == 0<32>
	branch !v119 l000E8A3F
	// succ:  l000E8A38 l000E8A3F
l000E8A38:
	v120 = 8<32>
	loc65 = v120
	goto l000E8A82
	// succ:  l000E8A82
l000E8A3F:
	v121 = loc15
	v122 = Mem0[v121:word32]
	loc17 = v122
	v123 = loc17
	v124 = fn000DEE2E(v123)
	loc18 = v124
	v125 = loc18
	v126 = 0xFFFFFFFF<32>
	v127 = v125 == v126
	loc19 = v127
	v128 = loc19
	branch !v128 l000E8A5F
	// succ:  l000E8A58 l000E8A5F
l000E8A58:
	v129 = 0xFFFFFFFF<32>
	loc5 = v129
	goto l000E8A82
	// succ:  l000E8A82
l000E8A5F:
	v130 = loc18
	v131 = 0xFF<32>
	v132 = v130 & v131
	loc20 = v132
	v133 = loc21
	v134 = loc4
	v135 = v133 + v134
	loc22 = v135
	v136 = loc22
	v137 = loc20
	v138 = SLICE(v137, byte, 0)
	Mem0[v136:byte] = v138
	v139 = loc4
	v140 = 1<32>
	v141 = v139 + v140
	loc23 = v141
	v142 = loc23
	loc4 = v142
	goto l000E8A1A
	// succ:  l000E8A1A
l000E8A82:
	v143 = loc65
	v144 = 8<32>
	v145 = v143 == v144
	v145 = v145
	// succ:  l000E8A8B l000E8A8B
l000E8A8B:
	v146 = arg0
	v147 = 0x35<32>
	v148 = v146 + v147
	loc24 = v148
	v149 = loc24
	v150 = Mem0[v149:int8]
	v151 = CONVERT(v150, int8, word32)
	loc25 = v151
	v152 = loc25
	v153 = 0x18<32>
	v154 = v152 << v153
	v155 = 0x18<32>
	v156 = v154 >> v155
	v157 = 0<32>
	v158 = v156 == v157
	loc26 = v158
	// succ:  l000E8AA6
l000E8AA6:
	v159 = loc26
	v159 = v159
	// succ:  l000E8AAC l000E8AAC
l000E8AAC:
	v160 = arg0
	v161 = 0x28<32>
	v162 = v160 + v161
	loc29 = v162
	v163 = arg0
	v164 = 0x24<32>
	v165 = v163 + v164
	loc30 = v165
	v166 = loc32
	v167 = 4<32>
	v168 = v166 + v167
	loc31 = v168
	v169 = loc10
	loc3 = v169
	// succ:  l000E8AC7
l000E8AC7:
	v170 = loc29
	v171 = Mem0[v170:word32]
	loc33 = v171
	v172 = loc33
	v173 = Mem0[v172:word64]
	loc67 = v173
	v174 = loc30
	v175 = Mem0[v174:word32]
	loc34 = v175
	v176 = loc21
	v177 = loc3
	v178 = v176 + v177
	loc35 = v178
	v179 = loc34
	v180 = Mem0[v179:word32]
	loc36 = v180
	v181 = loc36
	v182 = 0x10<32>
	v183 = v181 + v182
	loc37 = v183
	v184 = loc37
	v185 = Mem0[v184:word32]
	loc38 = v185
	v186 = loc34
	v187 = loc33
	v188 = loc21
	v189 = loc35
	v190 = loc42
	v191 = loc32
	v192 = loc31
	v193 = loc53
	v194 = loc38
	v195 = 0x1FF<32>
	v196 = v194 & v195
	v197 = 0x2C20<32>
	v198 = v196 + v197
fn000E89AB_exit:


// fn000E8CDC
// Return size: 0
void fn000E8CDC(word32 arg0, word32 arg1)
fn000E8CDC_entry:
	// succ:  l000E8CDC
l000E8CDC:
	v20 = Mem0[0x00140030<p32>:word32]
	loc19 = v20
	v21 = arg1
	v22 = 0x5370<32>
	v23 = fn000EA9F7(v21, v22)
	loc10 = v23
	v24 = arg0
	v25 = 0x24<32>
	v26 = v24 + v25
	loc11 = v26
	v27 = loc11
	v28 = loc10
	Mem0[v27:word32] = v28
	v29 = loc10
	v30 = Mem0[v29:word32]
	loc12 = v30
	v31 = loc12
	v32 = 0x18<32>
	v33 = v31 + v32
	loc13 = v33
	v34 = loc13
	v35 = Mem0[v34:word32]
	loc14 = v35
	v36 = loc10
	v37 = loc14
	v38 = 0x1FF<32>
	v39 = v37 & v38
	v40 = 0xB00<32>
	v41 = v39 + v40
fn000E8CDC_exit:


// fn000E8D8E
// Return size: 0
void fn000E8D8E(word32 arg0)
fn000E8D8E_entry:
	// succ:  l000E8D8E
l000E8D8E:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn000E596B(v5)
	v6 = arg0
	fn0011B709(v6)
	return
	// succ:  fn000E8D8E_exit
l000E8D9F:
	return
	// succ:  fn000E8D8E_exit
fn000E8D8E_exit:


// fn000E8DC9
// Return size: 0
word32 fn000E8DC9(word32 arg0, word32 arg1)
fn000E8DC9_entry:
	// succ:  l000E8DC9
l000E8DC9:
	v44 = Mem0[0x00140030<p32>:word32]
	loc43 = v44
	v45 = Mem0[0x00140030<p32>:word32]
	v46 = 0x20<32>
	v47 = v45 + v46
	Mem0[0x00140030<p32>:word32] = v47
	v48 = Mem0[0x00140030<p32>:word32]
	v49 = Mem0[0x00140034<p32>:word32]
	v50 = v48 >= v49
	branch !v50 l000E8DE2
	// succ:  l000E8DDD l000E8DE2
l000E8DDD:
	v51 = 0x20<32>
	abortStackOverflow(v51)
	// succ:  l000E8DE2
l000E8DE2:
	v52 = loc43
	v53 = 0x10<32>
	v54 = v52 + v53
	loc15 = v54
	v55 = loc43
	v56 = 4<32>
	v57 = v55 + v56
	loc26 = v57
	v58 = loc43
	v59 = 8<32>
	v60 = v58 + v59
	loc36 = v60
	v61 = loc43
	loc37 = v61
	v62 = arg1
	v63 = 0xFFFFFFFF<32>
	v64 = v62 == v63
	loc38 = v64
	v65 = arg0
	v66 = 0x34<32>
	v67 = v65 + v66
	loc39 = v67
	v68 = loc39
	v69 = Mem0[v68:int8]
	v70 = CONVERT(v69, int8, word32)
	loc40 = v70
	v71 = loc40
	v72 = 0x18<32>
	v73 = v71 << v72
	v74 = 0x18<32>
	v75 = v73 >> v74
	v76 = 0<32>
	v77 = v75 != v76
	loc41 = v77
	// succ:  l000E8E1D
l000E8E1D:
	v78 = loc38
	branch !v78 l000E8E55
	// succ:  l000E8E23 l000E8E55
l000E8E23:
	v79 = loc41
	branch !v79 l000E8E2C
	// succ:  l000E8E27 l000E8E2C
l000E8E27:
	v80 = 0xFFFFFFFF<32>
	loc2 = v80
	goto l000E8E53
	// succ:  l000E8E53
l000E8E2C:
	v81 = arg0
	v82 = 0x30<32>
	v83 = v81 + v82
	loc5 = v83
	v84 = loc5
	v85 = Mem0[v84:word32]
	loc6 = v85
	v86 = loc6
	v87 = 0xFFFFFFFF<32>
	v88 = v86 != v87
	loc7 = v88
	v89 = loc7
	v90 = 1<32>
	v91 = v89 & v90
	loc8 = v91
	v92 = loc39
	v93 = loc8
	v94 = SLICE(v93, byte, 0)
	Mem0[v92:byte] = v94
	v95 = loc6
	loc2 = v95
	// succ:  l000E8E53
l000E8E53:
l000E8E55:
	v96 = loc41
	v96 = v96
	// succ:  l000E8E5B l000E8E5B
l000E8E5B:
	v97 = arg0
	v98 = 0x30<32>
	v99 = v97 + v98
	loc9 = v99
	v100 = loc9
	v101 = Mem0[v100:word32]
	loc10 = v101
	v102 = loc10
	v103 = 0xFF<32>
	v104 = v102 & v103
	loc11 = v104
	v105 = loc36
	v106 = loc11
	v107 = SLICE(v106, byte, 0)
	Mem0[v105:byte] = v107
	v108 = arg0
	v109 = 0x24<32>
	v110 = v108 + v109
	loc12 = v110
	v111 = loc12
	v112 = Mem0[v111:word32]
	loc13 = v112
	v113 = arg0
	v114 = 0x28<32>
	v115 = v113 + v114
	loc14 = v115
	v116 = loc14
	v117 = Mem0[v116:word32]
	loc16 = v117
	v118 = loc36
	v119 = 1<32>
	v120 = v118 + v119
	loc17 = v120
	v121 = loc15
	v122 = 8<32>
	v123 = v121 + v122
	loc18 = v123
	v124 = loc13
	v125 = Mem0[v124:word32]
	loc19 = v125
	v126 = loc19
	v127 = 0xC<32>
	v128 = v126 + v127
	loc20 = v128
	v129 = loc20
	v130 = Mem0[v129:word32]
	loc21 = v130
	v131 = loc13
	v132 = loc16
	v133 = loc36
	v134 = loc17
	v135 = loc37
	v136 = loc15
	v137 = loc18
	v138 = loc26
	v139 = loc21
	v140 = 0x1FF<32>
	v141 = v139 & v140
	v142 = 0x2C20<32>
	v143 = v141 + v142
fn000E8DC9_exit:


// fn000E8FC9
// Return size: 0
word32 fn000E8FC9(word32 arg0, word32 arg1)
fn000E8FC9_entry:
	// succ:  l000E8FC9
l000E8FC9:
	v69 = Mem0[0x00140030<p32>:word32]
	loc67 = v69
	v70 = Mem0[0x00140030<p32>:word32]
	v71 = 0x20<32>
	v72 = v70 + v71
	Mem0[0x00140030<p32>:word32] = v72
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = Mem0[0x00140034<p32>:word32]
	v75 = v73 >= v74
	branch !v75 l000E8FE2
	// succ:  l000E8FDD l000E8FE2
l000E8FDD:
	v76 = 0x20<32>
	abortStackOverflow(v76)
	// succ:  l000E8FE2
l000E8FE2:
	v77 = loc67
	v78 = 0x10<32>
	v79 = v77 + v78
	loc21 = v79
	v80 = loc67
	v81 = 8<32>
	v82 = v80 + v81
	loc32 = v82
	v83 = loc67
	v84 = 4<32>
	v85 = v83 + v84
	loc42 = v85
	v86 = loc67
	loc53 = v86
	v87 = arg0
	v88 = 0x34<32>
	v89 = v87 + v88
	loc62 = v89
	v90 = loc62
	v91 = Mem0[v90:int8]
	v92 = CONVERT(v91, int8, word32)
	loc63 = v92
	v93 = loc63
	v94 = 0x18<32>
	v95 = v93 << v94
	v96 = 0x18<32>
	v97 = v95 >> v96
	v98 = 0<32>
	v99 = v97 == v98
	loc64 = v99
	v100 = loc64
	v100 = v100
	// succ:  l000E901A l000E901A
l000E901A:
	v101 = arg0
	v102 = 0x2C<32>
	v103 = v101 + v102
	loc12 = v103
	v104 = loc12
	v105 = Mem0[v104:word32]
	loc13 = v105
	v106 = loc13
	v107 = 1<32>
	v108 = v106 > v107
	loc14 = v108
	v109 = loc14
	branch !v109 l000E9036
	// succ:  l000E9033 l000E9036
l000E9033:
	v110 = loc13
	goto l000E9038
	// succ:  l000E9038
l000E9036:
	v111 = 1<32>
	// succ:  l000E9038
l000E9038:
	loc10 = v111
	v112 = arg0
	v113 = 0x20<32>
	v114 = v112 + v113
	loc15 = v114
	v115 = 0<32>
	loc4 = v115
	// succ:  l000E9048
l000E9048:
	v116 = loc4
	v117 = loc10
	v118 = v116 < v117
	loc16 = v118
	v119 = loc16
	v120 = v119 == 0<32>
	branch !v120 l000E905D
	// succ:  l000E9056 l000E905D
l000E9056:
	v121 = 8<32>
	loc66 = v121
	goto l000E90A0
	// succ:  l000E90A0
l000E905D:
	v122 = loc15
	v123 = Mem0[v122:word32]
	loc17 = v123
	v124 = loc17
	v125 = fn000DEE2E(v124)
	loc18 = v125
	v126 = loc18
	v127 = 0xFFFFFFFF<32>
	v128 = v126 == v127
	loc19 = v128
	v129 = loc19
	branch !v129 l000E907D
	// succ:  l000E9076 l000E907D
l000E9076:
	v130 = 0xFFFFFFFF<32>
	loc5 = v130
	goto l000E90A0
	// succ:  l000E90A0
l000E907D:
	v131 = loc18
	v132 = 0xFF<32>
	v133 = v131 & v132
	loc20 = v133
	v134 = loc21
	v135 = loc4
	v136 = v134 + v135
	loc22 = v136
	v137 = loc22
	v138 = loc20
	v139 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v139
	v140 = loc4
	v141 = 1<32>
	v142 = v140 + v141
	loc23 = v142
	v143 = loc23
	loc4 = v143
	goto l000E9038
	// succ:  l000E9038
l000E90A0:
	v144 = loc66
	v145 = 8<32>
	v146 = v144 == v145
	v146 = v146
	// succ:  l000E90A9 l000E90A9
l000E90A9:
	v147 = arg0
	v148 = 0x35<32>
	v149 = v147 + v148
	loc24 = v149
	v150 = loc24
	v151 = Mem0[v150:int8]
	v152 = CONVERT(v151, int8, word32)
	loc25 = v152
	v153 = loc25
	v154 = 0x18<32>
	v155 = v153 << v154
	v156 = 0x18<32>
	v157 = v155 >> v156
	v158 = 0<32>
	v159 = v157 == v158
	loc26 = v159
	// succ:  l000E90C4
l000E90C4:
	v160 = loc26
	v160 = v160
	// succ:  l000E90CA l000E90CA
l000E90CA:
	v161 = arg0
	v162 = 0x28<32>
	v163 = v161 + v162
	loc28 = v163
	v164 = arg0
	v165 = 0x24<32>
	v166 = v164 + v165
	loc29 = v166
	v167 = loc32
	v168 = 1<32>
	v169 = v167 + v168
	loc30 = v169
	v170 = loc10
	loc3 = v170
	// succ:  l000E90E5
l000E90E5:
	v171 = loc28
	v172 = Mem0[v171:word32]
	loc31 = v172
	v173 = loc31
	v174 = Mem0[v173:word64]
	loc68 = v174
	v175 = loc29
	v176 = Mem0[v175:word32]
	loc33 = v176
	v177 = loc21
	v178 = loc3
	v179 = v177 + v178
	loc34 = v179
	v180 = loc33
	v181 = Mem0[v180:word32]
	loc35 = v181
	v182 = loc35
	v183 = 0x10<32>
	v184 = v182 + v183
	loc36 = v184
	v185 = loc36
	v186 = Mem0[v185:word32]
	loc37 = v186
	v187 = loc33
	v188 = loc31
	v189 = loc21
	v190 = loc34
	v191 = loc42
	v192 = loc32
	v193 = loc30
	v194 = loc53
	v195 = loc37
	v196 = 0x1FF<32>
	v197 = v195 & v196
	v198 = 0x2C20<32>
	v199 = v197 + v198
fn000E8FC9_exit:


// fn000E92F6
// Return size: 0
void fn000E92F6(word32 arg0)
fn000E92F6_entry:
	// succ:  l000E92F6
l000E92F6:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn000E92F6_exit
l000E92FD:
	return
	// succ:  fn000E92F6_exit
fn000E92F6_exit:


// fn000E92FF
// Return size: 0
void fn000E92FF(word32 arg0)
fn000E92FF_entry:
	// succ:  l000E92FF
l000E92FF:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000E92FF_exit
l000E930B:
	return
	// succ:  fn000E92FF_exit
fn000E92FF_exit:


// fn000E930D
// Return size: 0
void fn000E930D(word32 arg0)
fn000E930D_entry:
	// succ:  l000E930D
l000E930D:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v9 = arg0
	v10 = 0<32>
	v11 = v9 == v10
	loc1 = v11
	v12 = loc1
	v13 = v12 == 0<32>
	v13 = v13
	// succ:  l000E931F l000E931F
l000E931F:
	v14 = arg0
	v15 = Mem0[v14:word32]
	loc2 = v15
	v16 = loc2
	v17 = 4<32>
	v18 = v16 + v17
	loc3 = v18
	v19 = loc3
	v20 = Mem0[v19:word32]
	loc4 = v20
	v21 = arg0
	v22 = loc4
	v23 = 0x1FF<32>
	v24 = v22 & v23
	v25 = 0x500<32>
	v26 = v24 + v25
fn000E930D_exit:


// fn000E9400
// Return size: 0
void fn000E9400(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000E9400_entry:
	// succ:  l000E9400
l000E9400:
	v4 = Mem0[0x00140030<p32>:word32]
	loc5 = v4
	v5 = arg0
	v6 = 0<64>
	Mem0[v5:word64] = v6
	v7 = arg0
	v8 = 8<32>
	v9 = v7 + v8
	v10 = 0<32>
	Mem0[v9:word32] = v10
	v11 = arg0
	v12 = arg2
	v13 = arg3
	fn000E949A(v11, v12, v13)
	return
	// succ:  fn000E9400_exit
l000E9421:
	return
	// succ:  fn000E9400_exit
fn000E9400_exit:


// fn000E949A
// Return size: 0
void fn000E949A(word32 arg0, word32 arg1, word32 arg2)
fn000E949A_entry:
	// succ:  l000E949A
l000E949A:
	v27 = Mem0[0x00140030<p32>:word32]
	loc27 = v27
	v28 = arg1
	loc18 = v28
	v29 = arg2
	loc19 = v29
	v30 = loc19
	v31 = loc18
	v32 = v30 - v31
	loc20 = v32
	v33 = loc20
	v34 = 0xFFFFFFEF<32>
	v35 = v33 >u v34
	loc21 = v35
	v36 = loc21
	branch !v36 l000E94C0
	// succ:  l000E94BA l000E94C0
l000E94BA:
	v37 = arg0
	fn0011B8A5(v37)
	// succ:  l000E94C0
l000E94C0:
	v38 = loc20
	v39 = 0xB<32>
	v40 = v38 <u v39
	loc22 = v40
	v41 = loc22
	branch !v41 l000E94E6
	// succ:  l000E94CB l000E94E6
l000E94CB:
	v42 = loc20
	v43 = 0xFF<32>
	v44 = v42 & v43
	loc23 = v44
	v45 = arg0
	v46 = 0xB<32>
	v47 = v45 + v46
	loc24 = v47
	v48 = loc24
	v49 = loc23
	v50 = SLICE(v49, byte, 0)
	Mem0[v48:byte] = v50
	v51 = arg0
	loc5 = v51
	goto l000E952D
	// succ:  l000E952D
l000E94E6:
	v52 = loc20
	v53 = 0x10<32>
	v54 = v52 + v53
	loc6 = v54
	v55 = loc6
	v56 = 0xFFFFFFF0<32>
	v57 = v55 & v56
	loc7 = v57
	v58 = loc7
	v59 = fn0011B67B(v58)
	loc8 = v59
	v60 = arg0
	v61 = loc8
	Mem0[v60:word32] = v61
	v62 = loc7
	v63 = 0x80000000<32>
	v64 = v62 | v63
	loc9 = v64
	v65 = arg0
	v66 = 8<32>
	v67 = v65 + v66
	loc10 = v67
	v68 = loc10
	v69 = loc9
	Mem0[v68:word32] = v69
	v70 = arg0
	v71 = 4<32>
	v72 = v70 + v71
	loc11 = v72
	v73 = loc11
	v74 = loc20
	Mem0[v73:word32] = v74
	v75 = loc8
	loc5 = v75
	// succ:  l000E952D
l000E952D:
	v76 = arg2
	loc12 = v76
	v77 = loc12
	v78 = loc18
	v79 = v77 - v78
	loc13 = v79
	v80 = arg1
	loc3 = v80
	v81 = loc5
	loc4 = v81
	// succ:  l000E9543
l000E9543:
	v82 = loc3
	v83 = arg2
	v84 = v82 == v83
	loc14 = v84
	v85 = loc14
	branch !v85 l000E9553
	// succ:  l000E9550 l000E9553
l000E9550:
	goto l000E9579
	// succ:  l000E9579
l000E9553:
	v86 = loc3
	v87 = Mem0[v86:int8]
	v88 = CONVERT(v87, int8, word32)
	loc15 = v88
	v89 = loc4
	v90 = loc15
	v91 = SLICE(v90, byte, 0)
	Mem0[v89:byte] = v91
	v92 = loc3
	v93 = 1<32>
	v94 = v92 + v93
	loc16 = v94
	v95 = loc4
	v96 = 1<32>
	v97 = v95 + v96
	loc17 = v97
	v98 = loc16
	loc3 = v98
	v99 = loc17
	loc4 = v99
	goto l000E952D
	// succ:  l000E952D
l000E9579:
	v100 = loc5
	v101 = loc13
	v102 = v100 + v101
	loc25 = v102
	v103 = loc25
	v104 = 0<32>
	v105 = SLICE(v104, byte, 0)
	Mem0[v103:byte] = v105
	return
	// succ:  fn000E949A_exit
l000E958A:
	return
	// succ:  fn000E949A_exit
fn000E949A_exit:


// fn000E958C
// Return size: 0
void fn000E958C(word32 arg0)
fn000E958C_entry:
	// succ:  l000E958C
l000E958C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn000E958C_exit
l000E9593:
	return
	// succ:  fn000E958C_exit
fn000E958C_exit:


// fn000E9595
// Return size: 0
void fn000E9595(word32 arg0)
fn000E9595_entry:
	// succ:  l000E9595
l000E9595:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000E9595_exit
l000E95A1:
	return
	// succ:  fn000E9595_exit
fn000E9595_exit:


// fn000E9644
// Return size: 0
void fn000E9644(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000E9644_entry:
	// succ:  l000E9644
l000E9644:
	v4 = Mem0[0x00140030<p32>:word32]
	loc5 = v4
	v5 = arg0
	v6 = 0<64>
	Mem0[v5:word64] = v6
	v7 = arg0
	v8 = 8<32>
	v9 = v7 + v8
	v10 = 0<32>
	Mem0[v9:word32] = v10
	v11 = arg0
	v12 = arg2
	v13 = arg3
	fn000E96D4(v11, v12, v13)
	return
	// succ:  fn000E9644_exit
l000E9665:
	return
	// succ:  fn000E9644_exit
fn000E9644_exit:


// fn000E96D4
// Return size: 0
void fn000E96D4(word32 arg0, word32 arg1, word32 arg2)
fn000E96D4_entry:
	// succ:  l000E96D4
l000E96D4:
	v33 = Mem0[0x00140030<p32>:word32]
	loc33 = v33
	v34 = arg1
	loc24 = v34
	v35 = arg2
	loc25 = v35
	v36 = loc25
	v37 = loc24
	v38 = v36 - v37
	loc26 = v38
	v39 = loc26
	v40 = 2<32>
	v41 = v39 >> v40
	loc27 = v41
	v42 = loc27
	v43 = 0x3FFFFFEF<32>
	v44 = v42 >u v43
	loc28 = v44
	v45 = loc28
	branch !v45 l000E9705
	// succ:  l000E96FF l000E9705
l000E96FF:
	v46 = arg0
	fn0011B8A5(v46)
	// succ:  l000E9705
l000E9705:
	v47 = loc27
	v48 = 2<32>
	v49 = v47 <u v48
	loc29 = v49
	// succ:  l000E970C
l000E970C:
	v50 = loc29
	branch !v50 l000E9734
	// succ:  l000E9712 l000E9734
l000E9712:
	v51 = loc27
	v52 = 0xFF<32>
	v53 = v51 & v52
	loc30 = v53
	v54 = arg0
	v55 = 8<32>
	v56 = v54 + v55
	loc6 = v56
	v57 = loc6
	v58 = 3<32>
	v59 = v57 + v58
	loc7 = v59
	v60 = loc7
	v61 = loc30
	v62 = SLICE(v61, byte, 0)
	Mem0[v60:byte] = v62
	v63 = arg0
	loc5 = v63
	goto l000E97AA
	// succ:  l000E97AA
l000E9734:
	v64 = loc27
	v65 = 4<32>
	v66 = v64 + v65
	loc8 = v66
	v67 = loc8
	v68 = 0xFFFFFFFC<32>
	v69 = v67 & v68
	loc9 = v69
	v70 = loc9
	v71 = 0x3FFFFFFF<32>
	v72 = v70 >u v71
	loc10 = v72
	v73 = loc10
	branch !v73 l000E9767
	// succ:  l000E9751 l000E9767
l000E9751:
	v74 = 4<32>
	v75 = ___cxa_allocate_exception(v74)
	loc11 = v75
	v76 = loc11
	fn0011EE8C(v76)
	v77 = loc11
	v78 = 0x9C8<32>
	v79 = 0x153<32>
	___cxa_throw(v77, v78, v79)
	goto l000E97A9
	// succ:  l000E97A9
l000E9767:
	v80 = loc9
	v81 = 2<32>
	v82 = v80 << v81
	loc12 = v82
	v83 = loc12
	v84 = fn0011B67B(v83)
	loc13 = v84
	v85 = arg0
	v86 = loc13
	Mem0[v85:word32] = v86
	v87 = loc9
	v88 = 0x80000000<32>
	v89 = v87 | v88
	loc14 = v89
	v90 = arg0
	v91 = 8<32>
	v92 = v90 + v91
	loc15 = v92
	v93 = loc15
	v94 = loc14
	Mem0[v93:word32] = v94
	v95 = arg0
	v96 = 4<32>
	v97 = v95 + v96
	loc16 = v97
	v98 = loc16
	v99 = loc27
	Mem0[v98:word32] = v99
	v100 = loc13
	loc5 = v100
	goto l000E97AB
	// succ:  l000E97AB
l000E97A9:
	// succ:  l000E97AA
l000E97AA:
	// succ:  l000E97AB
l000E97AB:
	v101 = arg2
	loc17 = v101
	v102 = loc17
	v103 = loc24
	v104 = v102 - v103
	loc18 = v104
	v105 = loc18
	v106 = 2<32>
	v107 = v105 >>u v106
	loc19 = v107
	v108 = arg1
	loc3 = v108
	v109 = loc5
	loc4 = v109
	// succ:  l000E97C8
l000E97C8:
	v110 = loc3
	v111 = arg2
	v112 = v110 == v111
	loc20 = v112
	v113 = loc20
	branch !v113 l000E97D8
	// succ:  l000E97D5 l000E97D8
l000E97D5:
	goto l000E97FE
	// succ:  l000E97FE
l000E97D8:
	v114 = loc3
	v115 = Mem0[v114:word32]
	loc21 = v115
	v116 = loc4
	v117 = loc21
	Mem0[v116:word32] = v117
	v118 = loc3
	v119 = 4<32>
	v120 = v118 + v119
	loc22 = v120
	v121 = loc4
	v122 = 4<32>
	v123 = v121 + v122
	loc23 = v123
	v124 = loc22
	loc3 = v124
	v125 = loc23
	loc4 = v125
	goto l000E97AB
	// succ:  l000E97AB
l000E97FE:
	v126 = loc5
	v127 = loc19
	v128 = 2<32>
	v129 = v127 << v128
	v130 = v126 + v129
	loc31 = v130
	v131 = loc31
	v132 = 0<32>
	Mem0[v131:word32] = v132
	return
	// succ:  fn000E96D4_exit
l000E9812:
	return
	// succ:  fn000E96D4_exit
fn000E96D4_exit:


// fn000E9814
// Return size: 0
void fn000E9814(word32 arg0)
fn000E9814_entry:
	// succ:  l000E9814
l000E9814:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn000E9814_exit
l000E981B:
	return
	// succ:  fn000E9814_exit
fn000E9814_exit:


// fn000E981D
// Return size: 0
void fn000E981D(word32 arg0)
fn000E981D_entry:
	// succ:  l000E981D
l000E981D:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000E981D_exit
l000E9829:
	return
	// succ:  fn000E981D_exit
fn000E981D_exit:


// fn000E982B
// Return size: 0
word32 fn000E982B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000E982B_entry:
	// succ:  l000E982B
l000E982B:
	v72 = Mem0[0x00140030<p32>:word32]
	loc75 = v72
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = 0x40<32>
	v75 = v73 + v74
	Mem0[0x00140030<p32>:word32] = v75
	v76 = Mem0[0x00140030<p32>:word32]
	v77 = Mem0[0x00140034<p32>:word32]
	v78 = v76 >= v77
	branch !v78 l000E9846
	// succ:  l000E9840 l000E9846
l000E9840:
	v79 = 0x40<32>
	abortStackOverflow(v79)
	// succ:  l000E9846
l000E9846:
	v80 = loc75
	v81 = 0x3C<32>
	v82 = v80 + v81
	loc10 = v82
	v83 = loc75
	v84 = 0x38<32>
	v85 = v83 + v84
	loc9 = v85
	v86 = loc75
	v87 = 0x34<32>
	v88 = v86 + v87
	loc8 = v88
	v89 = loc75
	v90 = 0x30<32>
	v91 = v89 + v90
	loc65 = v91
	v92 = loc75
	v93 = 0x2C<32>
	v94 = v92 + v93
	loc71 = v94
	v95 = loc75
	v96 = 0x28<32>
	v97 = v95 + v96
	loc72 = v97
	v98 = loc75
	v99 = 0x24<32>
	v100 = v98 + v99
	loc73 = v100
	v101 = loc75
	v102 = 0x20<32>
	v103 = v101 + v102
	loc15 = v103
	v104 = loc75
	v105 = 8<32>
	v106 = v104 + v105
	loc16 = v106
	v107 = loc75
	loc17 = v107
	v108 = arg3
	v109 = 4<32>
	v110 = v108 + v109
	loc18 = v110
	v111 = loc18
	v112 = Mem0[v111:word32]
	loc19 = v112
	v113 = loc19
	v114 = 1<32>
	v115 = v113 & v114
	loc20 = v115
	v116 = loc20
	v117 = 0<32>
	v118 = v116 == v117
	loc21 = v118
	// succ:  l000E98A5
l000E98A5:
	v119 = loc21
	v119 = v119
	// succ:  l000E98AB l000E98AB
l000E98AB:
	v120 = loc65
	v121 = 0xFFFFFFFF<32>
	Mem0[v120:word32] = v121
	v122 = arg0
	v123 = Mem0[v122:word32]
	loc22 = v123
	v124 = loc22
	v125 = 0x10<32>
	v126 = v124 + v125
	loc23 = v126
	v127 = loc23
	v128 = Mem0[v127:word32]
	loc24 = v128
	v129 = arg1
	v130 = Mem0[v129:word32]
	loc25 = v130
	v131 = loc71
	v132 = loc25
	Mem0[v131:word32] = v132
	v133 = arg2
	v134 = Mem0[v133:word32]
	loc26 = v134
	v135 = loc72
	v136 = loc26
	Mem0[v135:word32] = v136
	v137 = loc8
	v138 = loc71
	v139 = Mem0[v138:word32]
	Mem0[v137:word32] = v139
	v140 = loc9
	v141 = loc72
	v142 = Mem0[v141:word32]
	Mem0[v140:word32] = v142
	v143 = arg0
	v144 = loc8
	v145 = loc9
	v146 = arg3
	v147 = arg4
	v148 = loc65
	v149 = loc24
	v150 = 0x1FF<32>
	v151 = v149 & v150
	v152 = 0x900<32>
	v153 = v151 + v152
fn000E982B_exit:


// fn000EAF62
// Return size: 0
void fn000EAF62(word32 arg0)
fn000EAF62_entry:
	// succ:  l000EAF62
l000EAF62:
	v8 = Mem0[0x00140030<p32>:word32]
	loc6 = v8
	v9 = 0x4C7C<32>
	v10 = Mem0[v9:word32]
	loc1 = v10
	v11 = loc1
	v12 = 1<32>
	v13 = v11 + v12
	loc2 = v13
	v14 = 0x4C7C<32>
	v15 = loc2
	Mem0[v14:word32] = v15
	v16 = loc1
	v17 = 1<32>
	v18 = v16 + v17
	loc3 = v18
	v19 = arg0
	v20 = 4<32>
	v21 = v19 + v20
	loc4 = v21
	v22 = loc4
	v23 = loc3
	Mem0[v22:word32] = v23
	return
	// succ:  fn000EAF62_exit
l000EAF97:
	return
	// succ:  fn000EAF62_exit
fn000EAF62_exit:


// fn000EAF99
// Return size: 0
void fn000EAF99(word32 arg0)
fn000EAF99_entry:
	// succ:  l000EAF99
l000EAF99:
	v20 = Mem0[0x00140030<p32>:word32]
	loc18 = v20
	v21 = arg0
	v22 = Mem0[v21:word32]
	loc5 = v22
	v23 = loc5
	v24 = Mem0[v23:word32]
	loc9 = v24
	v25 = loc9
	v26 = 4<32>
	v27 = v25 + v26
	loc1 = v27
	v28 = loc1
	v29 = Mem0[v28:word32]
	loc3 = v29
	v30 = loc9
	v31 = 8<32>
	v32 = v30 + v31
	loc2 = v32
	v33 = loc2
	v34 = Mem0[v33:word32]
	loc4 = v34
	v35 = loc9
	v36 = Mem0[v35:word32]
	loc10 = v36
	v37 = loc4
	v38 = 1<32>
	v39 = v37 >> v38
	loc11 = v39
	v40 = loc10
	v41 = loc11
	v42 = v40 + v41
	loc12 = v42
	v43 = loc4
	v44 = 1<32>
	v45 = v43 & v44
	loc13 = v45
	v46 = loc13
	v47 = 0<32>
	v48 = v46 == v47
	loc14 = v48
	v49 = loc14
	branch !v49 l000EAFF9
	// succ:  l000EAFF0 l000EAFF9
l000EAFF0:
	v50 = loc3
	loc7 = v50
	v51 = loc7
	loc8 = v51
	goto l000EB012
	// succ:  l000EB012
l000EAFF9:
	v52 = loc12
	v53 = Mem0[v52:word32]
	loc15 = v53
	v54 = loc15
	v55 = loc3
	v56 = v54 + v55
	loc16 = v56
	v57 = loc16
	v58 = Mem0[v57:word32]
	loc6 = v58
	v59 = loc6
	loc8 = v59
	// succ:  l000EB012
l000EB012:
	v60 = loc12
	v61 = loc8
	v62 = 0x1FF<32>
	v63 = v61 & v62
	v64 = 0x500<32>
	v65 = v63 + v64
fn000EAF99_exit:


// fn000EB941
// Return size: 0
void fn000EB941(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000EB941_entry:
	// succ:  l000EB941
l000EB941:
	v40 = Mem0[0x00140030<p32>:word32]
	loc42 = v40
	v41 = Mem0[0x00140030<p32>:word32]
	v42 = 0x10<32>
	v43 = v41 + v42
	Mem0[0x00140030<p32>:word32] = v43
	v44 = Mem0[0x00140030<p32>:word32]
	v45 = Mem0[0x00140034<p32>:word32]
	v46 = v44 >= v45
	branch !v46 l000EB95A
	// succ:  l000EB955 l000EB95A
l000EB955:
	v47 = 0x10<32>
	abortStackOverflow(v47)
	// succ:  l000EB95A
l000EB95A:
	v48 = loc42
	loc36 = v48
	v49 = arg1
	v50 = fn000E64CA(v49)
	loc37 = v50
	v51 = loc36
	v52 = loc37
	Mem0[v51:word32] = v52
	v53 = 0<32>
	Mem0[0x00140048<p32>:word32] = v53
	v54 = 0x164<32>
	v55 = loc36
	v56 = 0x4C70<32>
	v57 = invoke_iii(v54, v55, v56)
	loc38 = v57
	v58 = Mem0[0x00140048<p32>:word32]
	loc39 = v58
	v59 = 0<32>
	Mem0[0x00140048<p32>:word32] = v59
	v60 = loc39
	v61 = 1<32>
	v62 = v60 & v61
	loc40 = v62
	v63 = loc40
	branch !v63 l000EB995
	// succ:  l000EB990 l000EB995
l000EB990:
	v64 = 8<32>
	loc41 = v64
	goto l000EBACD
	// succ:  l000EBACD
l000EB995:
	v65 = loc38
	v66 = Mem0[v65:word32]
	loc7 = v66
	v67 = loc7
	v68 = 0x20<32>
	v69 = v67 + v68
	loc8 = v69
	v70 = loc8
	v71 = Mem0[v70:word32]
	loc9 = v71
	v72 = 0<32>
	Mem0[0x00140048<p32>:word32] = v72
	v73 = loc9
	v74 = loc38
	v75 = 0x37AB<32>
	v76 = 0x37CB<32>
	v77 = arg2
	v78 = invoke_iiiii(v73, v74, v75, v76, v77)
	v79 = Mem0[0x00140048<p32>:word32]
	loc10 = v79
	v80 = 0<32>
	Mem0[0x00140048<p32>:word32] = v80
	v81 = loc10
	v82 = 1<32>
	v83 = v81 & v82
	loc11 = v83
	v84 = loc11
	branch !v84 l000EB9D7
	// succ:  l000EB9D2 l000EB9D7
l000EB9D2:
	v85 = 8<32>
	loc41 = v85
	goto l000EBACC
	// succ:  l000EBACC
l000EB9D7:
	v86 = 0<32>
	Mem0[0x00140048<p32>:word32] = v86
	v87 = 0x164<32>
	v88 = loc36
	v89 = 0x4C80<32>
	v90 = invoke_iii(v87, v88, v89)
	loc12 = v90
	v91 = Mem0[0x00140048<p32>:word32]
	loc13 = v91
	v92 = 0<32>
	Mem0[0x00140048<p32>:word32] = v92
	v93 = loc13
	v94 = 1<32>
	v95 = v93 & v94
	loc14 = v95
	v96 = loc14
	branch !v96 l000EBA00
	// succ:  l000EB9FB l000EBA00
l000EB9FB:
	v97 = 8<32>
	loc41 = v97
	goto l000EBACB
	// succ:  l000EBACB
l000EBA00:
	v98 = loc12
	v99 = Mem0[v98:word32]
	loc15 = v99
	v100 = loc15
	v101 = 0xC<32>
	v102 = v100 + v101
	loc16 = v102
	v103 = loc16
	v104 = Mem0[v103:word32]
	loc17 = v104
	v105 = 0<32>
	Mem0[0x00140048<p32>:word32] = v105
	v106 = loc17
	v107 = loc12
	v108 = invoke_ii(v106, v107)
	loc18 = v108
	v109 = Mem0[0x00140048<p32>:word32]
	loc19 = v109
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v111 = loc19
	v112 = 1<32>
	v113 = v111 & v112
	loc20 = v113
	v114 = loc20
	v115 = v114 == 0<32>
	branch !v115 l000EBABB
	// succ:  l000EBA35 l000EBABB
l000EBA35:
	v116 = arg3
	v117 = loc18
	v118 = SLICE(v117, byte, 0)
	Mem0[v116:byte] = v118
	v119 = loc12
	v120 = Mem0[v119:word32]
	loc21 = v120
	v121 = loc21
	v122 = 0x10<32>
	v123 = v121 + v122
	loc22 = v123
	v124 = loc22
	v125 = Mem0[v124:word32]
	loc23 = v125
	v126 = 0<32>
	Mem0[0x00140048<p32>:word32] = v126
	v127 = loc23
	v128 = loc12
	v129 = invoke_ii(v127, v128)
	loc24 = v129
	v130 = Mem0[0x00140048<p32>:word32]
	loc25 = v130
	v131 = 0<32>
	Mem0[0x00140048<p32>:word32] = v131
	v132 = loc25
	v133 = 1<32>
	v134 = v132 & v133
	loc26 = v134
	v135 = loc26
	v136 = v135 == 0<32>
	branch !v136 l000EBABA
	// succ:  l000EBA71 l000EBABA
l000EBA71:
	v137 = arg4
	v138 = loc24
	v139 = SLICE(v138, byte, 0)
	Mem0[v137:byte] = v139
	v140 = loc12
	v141 = Mem0[v140:word32]
	loc27 = v141
	v142 = loc27
	v143 = 0x14<32>
	v144 = v142 + v143
	loc28 = v144
	v145 = loc28
	v146 = Mem0[v145:word32]
	loc29 = v146
	v147 = 0<32>
	Mem0[0x00140048<p32>:word32] = v147
	v148 = loc29
	v149 = arg0
	v150 = loc12
	invoke_vii(v148, v149, v150)
	v151 = Mem0[0x00140048<p32>:word32]
	loc30 = v151
	v152 = 0<32>
	Mem0[0x00140048<p32>:word32] = v152
	v153 = loc30
	v154 = 1<32>
	v155 = v153 & v154
	loc31 = v155
	v156 = loc31
	v157 = v156 == 0<32>
	branch !v157 l000EBAB9
	// succ:  l000EBAAD l000EBAB9
l000EBAAD:
	v158 = loc37
	v159 = fn0011B43F(v158)
	v160 = loc42
	Mem0[0x00140030<p32>:word32] = v160
	return
	// succ:  fn000EB941_exit
l000EBAB9:
	// succ:  l000EBABA
l000EBABA:
	// succ:  l000EBABB
l000EBABB:
	v161 = ___cxa_find_matching_catch_2()
	loc34 = v161
	v162 = Mem0[0x00140094<p32>:word32]
	loc35 = v162
	v163 = loc34
	loc5 = v163
	v164 = loc35
	loc6 = v164
	// succ:  l000EBACB
l000EBACB:
	// succ:  l000EBACC
l000EBACC:
	// succ:  l000EBACD
l000EBACD:
	v165 = loc41
	v166 = 8<32>
	v167 = v165 == v166
	branch !v167 l000EBAE6
	// succ:  l000EBAD5 l000EBAE6
l000EBAD5:
	v168 = ___cxa_find_matching_catch_2()
	loc32 = v168
	v169 = Mem0[0x00140094<p32>:word32]
	loc33 = v169
	v170 = loc32
	loc5 = v170
	v171 = loc33
	loc6 = v171
	// succ:  l000EBAE6
l000EBAE6:
	v172 = loc37
	v173 = fn0011B43F(v172)
	v174 = loc5
	___resumeException(v174)
	// succ:  l000EBAF0
l000EBAF0:
	return
	// succ:  fn000EB941_exit
fn000EB941_exit:


// fn000EC01D
// Return size: 0
void fn000EC01D(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000EC01D_entry:
	// succ:  l000EC01D
l000EC01D:
	v48 = Mem0[0x00140030<p32>:word32]
	loc49 = v48
	v49 = arg0
	v50 = 0xB<32>
	v51 = v49 + v50
	loc40 = v51
	v52 = loc40
	v53 = Mem0[v52:int8]
	v54 = CONVERT(v53, int8, word32)
	loc42 = v54
	v55 = loc42
	v56 = 0x18<32>
	v57 = v55 << v56
	v58 = 0x18<32>
	v59 = v57 >> v58
	v60 = 0<32>
	v61 = v59 < v60
	loc43 = v61
	v62 = arg0
	v63 = 4<32>
	v64 = v62 + v63
	loc44 = v64
	v65 = loc44
	v66 = Mem0[v65:word32]
	loc45 = v66
	v67 = loc42
	v68 = 0xFF<32>
	v69 = v67 & v68
	loc46 = v69
	v70 = loc43
	branch !v70 l000EC05B
	// succ:  l000EC058 l000EC05B
l000EC058:
	v71 = loc45
	goto l000EC05D
	// succ:  l000EC05D
l000EC05B:
	v72 = loc46
	// succ:  l000EC05D
l000EC05D:
	loc10 = v72
	v73 = loc10
	v74 = 0<32>
	v75 = v73 == v74
	loc11 = v75
	// succ:  l000EC067
l000EC067:
	v76 = loc11
	v77 = v76 == 0<32>
	branch !v77 l000EC1F4
	// succ:  l000EC06E l000EC1F4
l000EC06E:
	v78 = arg1
	v79 = arg2
	v80 = v78 == v79
	loc12 = v80
	v81 = loc12
	branch !v81 l000EC07E
	// succ:  l000EC079 l000EC07E
l000EC079:
	v82 = loc45
	loc21 = v82
	goto l000EC0DA
	// succ:  l000EC0DA
l000EC07E:
	v83 = arg2
	loc5 = v83
	v84 = arg1
	loc8 = v84
	// succ:  l000EC088
l000EC088:
	v85 = loc5
	v86 = 0xFFFFFFFC<32>
	v87 = v85 + v86
	loc13 = v87
	v88 = loc8
	v89 = loc13
	v90 = v88 <u v89
	loc14 = v90
	v91 = loc14
	v92 = v91 == 0<32>
	branch !v92 l000EC0A0
	// succ:  l000EC09D l000EC0A0
l000EC09D:
	goto l000EC0CD
	// succ:  l000EC0CD
l000EC0A0:
	v93 = loc8
	v94 = Mem0[v93:word32]
	loc15 = v94
	v95 = loc13
	v96 = Mem0[v95:word32]
	loc16 = v96
	v97 = loc8
	v98 = loc16
	Mem0[v97:word32] = v98
	v99 = loc13
	v100 = loc15
	Mem0[v99:word32] = v100
	v101 = loc8
	v102 = 4<32>
	v103 = v101 + v102
	loc17 = v103
	v104 = loc13
	loc5 = v104
	v105 = loc17
	loc8 = v105
	goto l000EC07E
	// succ:  l000EC07E
l000EC0CD:
	v106 = loc44
	v107 = Mem0[v106:word32]
	loc9 = v107
	v108 = loc9
	loc21 = v108
	// succ:  l000EC0DA
l000EC0DA:
	v109 = arg0
	v110 = Mem0[v109:word32]
	loc18 = v110
	v111 = loc43
	branch !v111 l000EC0E9
	// succ:  l000EC0E6 l000EC0E9
l000EC0E6:
	v112 = loc18
	goto l000EC0EB
	// succ:  l000EC0EB
l000EC0E9:
	v113 = arg0
	// succ:  l000EC0EB
l000EC0EB:
	loc19 = v113
	v114 = loc43
	branch !v114 l000EC0F5
	// succ:  l000EC0F2 l000EC0F5
l000EC0F2:
	v115 = loc21
	goto l000EC0F7
	// succ:  l000EC0F7
l000EC0F5:
	v116 = loc46
	// succ:  l000EC0F7
l000EC0F7:
	loc20 = v116
	v117 = loc19
	v118 = loc20
	v119 = v117 + v118
	loc22 = v119
	v120 = arg2
	v121 = 0xFFFFFFFC<32>
	v122 = v120 + v121
	loc23 = v122
	v123 = loc22
	loc24 = v123
	v124 = arg1
	loc6 = v124
	v125 = loc19
	loc7 = v125
	// succ:  l000EC116
l000EC116:
	v126 = loc6
	v127 = loc23
	v128 = v126 <u v127
	loc25 = v128
	v129 = loc7
	v130 = Mem0[v129:int8]
	v131 = CONVERT(v130, int8, word32)
	loc26 = v131
	v132 = loc26
	v133 = 0x18<32>
	v134 = v132 << v133
	v135 = 0x18<32>
	v136 = v134 >> v135
	v137 = 0<32>
	v138 = v136 > v137
	loc27 = v138
	v139 = loc26
	v140 = 0x18<32>
	v141 = v139 << v140
	v142 = 0x18<32>
	v143 = v141 >> v142
	v144 = 0x7F<32>
	v145 = v143 != v144
	loc28 = v145
	v146 = loc27
	v147 = loc28
	v148 = v146 & v147
	loc47 = v148
	v149 = loc25
	v150 = v149 == 0<32>
	branch !v150 l000EC150
	// succ:  l000EC14D l000EC150
l000EC14D:
	goto l000EC1AF
	// succ:  l000EC1AF
l000EC150:
	v151 = loc47
	branch !v151 l000EC179
	// succ:  l000EC154 l000EC179
l000EC154:
	v152 = loc26
	v153 = 0x18<32>
	v154 = v152 << v153
	v155 = 0x18<32>
	v156 = v154 >> v155
	loc29 = v156
	v157 = loc6
	v158 = Mem0[v157:word32]
	loc30 = v158
	v159 = loc29
	v160 = loc30
	v161 = v159 == v160
	loc31 = v161
	v162 = loc31
	v163 = v162 == 0<32>
	branch !v163 l000EC178
	// succ:  l000EC171 l000EC178
l000EC171:
	v164 = 0xA<32>
	loc48 = v164
	goto l000EC1AF
	// succ:  l000EC1AF
l000EC178:
	// succ:  l000EC179
l000EC179:
	v165 = loc7
	loc32 = v165
	v166 = loc24
	v167 = loc32
	v168 = v166 - v167
	loc33 = v168
	v169 = loc33
	v170 = 1<32>
	v171 = v169 > v170
	loc34 = v171
	v172 = loc7
	v173 = 1<32>
	v174 = v172 + v173
	loc35 = v174
	v175 = loc34
	branch !v175 l000EC199
	// succ:  l000EC196 l000EC199
l000EC196:
	v176 = loc35
	goto l000EC19B
	// succ:  l000EC19B
l000EC199:
	v177 = loc7
	// succ:  l000EC19B
l000EC19B:
	loc4 = v177
	v178 = loc6
	v179 = 4<32>
	v180 = v178 + v179
	loc36 = v180
	v181 = loc36
	loc6 = v181
	v182 = loc4
	loc7 = v182
	goto l000EC0F7
	// succ:  l000EC0F7
l000EC1AF:
	v183 = loc48
	v184 = 0xA<32>
	v185 = v183 == v184
	branch !v185 l000EC1C2
	// succ:  l000EC1B8 l000EC1C2
l000EC1B8:
	v186 = arg3
	v187 = 4<32>
	Mem0[v186:word32] = v187
	goto l000EC1F4
	// succ:  l000EC1F4
l000EC1C2:
	v188 = loc47
	branch !v188 l000EC1F3
	// succ:  l000EC1C6 l000EC1F3
l000EC1C6:
	v189 = loc26
	v190 = 0x18<32>
	v191 = v189 << v190
	v192 = 0x18<32>
	v193 = v191 >> v192
	loc37 = v193
	v194 = loc23
	v195 = Mem0[v194:word32]
	loc38 = v195
	v196 = loc38
	v197 = 0xFFFFFFFF<32>
	v198 = v196 + v197
	loc39 = v198
	v199 = loc39
	v200 = loc37
	v201 = v199 <u v200
	loc41 = v201
	v202 = loc41
	v203 = v202 == 0<32>
	branch !v203 l000EC1F2
	// succ:  l000EC1EA l000EC1F2
l000EC1EA:
	v204 = arg3
	v205 = 4<32>
	Mem0[v204:word32] = v205
	// succ:  l000EC1F2
l000EC1F2:
	// succ:  l000EC1F3
l000EC1F3:
	// succ:  l000EC1F4
l000EC1F4:
	// succ:  l000EC1F4
l000EC1F4:
	return
	// succ:  fn000EC01D_exit
l000EC1F6:
	return
	// succ:  fn000EC01D_exit
fn000EC01D_exit:


// fn000EDF31
// Return size: 0
void fn000EDF31(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000EDF31_entry:
	// succ:  l000EDF31
l000EDF31:
	v34 = Mem0[0x00140030<p32>:word32]
	loc35 = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = 0x10<32>
	v37 = v35 + v36
	Mem0[0x00140030<p32>:word32] = v37
	v38 = Mem0[0x00140030<p32>:word32]
	v39 = Mem0[0x00140034<p32>:word32]
	v40 = v38 >= v39
	branch !v40 l000EDF4A
	// succ:  l000EDF45 l000EDF4A
l000EDF45:
	v41 = 0x10<32>
	abortStackOverflow(v41)
	// succ:  l000EDF4A
l000EDF4A:
	v42 = loc35
	loc28 = v42
	v43 = arg1
	v44 = fn000E64CA(v43)
	loc29 = v44
	v45 = loc28
	v46 = loc29
	Mem0[v45:word32] = v46
	v47 = 0<32>
	Mem0[0x00140048<p32>:word32] = v47
	v48 = 0x164<32>
	v49 = loc28
	v50 = 0x4C70<32>
	v51 = invoke_iii(v48, v49, v50)
	loc30 = v51
	v52 = Mem0[0x00140048<p32>:word32]
	loc31 = v52
	v53 = 0<32>
	Mem0[0x00140048<p32>:word32] = v53
	v54 = loc31
	v55 = 1<32>
	v56 = v54 & v55
	loc32 = v56
	v57 = loc32
	branch !v57 l000EDF85
	// succ:  l000EDF80 l000EDF85
l000EDF80:
	v58 = 7<32>
	loc34 = v58
	goto l000EE080
	// succ:  l000EE080
l000EDF85:
	v59 = loc30
	v60 = Mem0[v59:word32]
	loc33 = v60
	v61 = loc33
	v62 = 0x20<32>
	v63 = v61 + v62
	loc6 = v63
	v64 = loc6
	v65 = Mem0[v64:word32]
	loc7 = v65
	v66 = 0<32>
	Mem0[0x00140048<p32>:word32] = v66
	v67 = loc7
	v68 = loc30
	v69 = 0x37AB<32>
	v70 = 0x37C5<32>
	v71 = arg2
	v72 = invoke_iiiii(v67, v68, v69, v70, v71)
	v73 = Mem0[0x00140048<p32>:word32]
	loc8 = v73
	v74 = 0<32>
	Mem0[0x00140048<p32>:word32] = v74
	v75 = loc8
	v76 = 1<32>
	v77 = v75 & v76
	loc9 = v77
	v78 = loc9
	branch !v78 l000EDFC7
	// succ:  l000EDFC2 l000EDFC7
l000EDFC2:
	v79 = 7<32>
	loc34 = v79
	goto l000EE07F
	// succ:  l000EE07F
l000EDFC7:
	v80 = 0<32>
	Mem0[0x00140048<p32>:word32] = v80
	v81 = 0x164<32>
	v82 = loc28
	v83 = 0x4C80<32>
	v84 = invoke_iii(v81, v82, v83)
	loc10 = v84
	v85 = Mem0[0x00140048<p32>:word32]
	loc11 = v85
	v86 = 0<32>
	Mem0[0x00140048<p32>:word32] = v86
	v87 = loc11
	v88 = 1<32>
	v89 = v87 & v88
	loc12 = v89
	v90 = loc12
	branch !v90 l000EDFF0
	// succ:  l000EDFEB l000EDFF0
l000EDFEB:
	v91 = 7<32>
	loc34 = v91
	goto l000EE07E
	// succ:  l000EE07E
l000EDFF0:
	v92 = loc10
	v93 = Mem0[v92:word32]
	loc13 = v93
	v94 = loc13
	v95 = 0x10<32>
	v96 = v94 + v95
	loc14 = v96
	v97 = loc14
	v98 = Mem0[v97:word32]
	loc15 = v98
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v100 = loc15
	v101 = loc10
	v102 = invoke_ii(v100, v101)
	loc16 = v102
	v103 = Mem0[0x00140048<p32>:word32]
	loc17 = v103
	v104 = 0<32>
	Mem0[0x00140048<p32>:word32] = v104
	v105 = loc17
	v106 = 1<32>
	v107 = v105 & v106
	loc18 = v107
	v108 = loc18
	v109 = v108 == 0<32>
	branch !v109 l000EE06E
	// succ:  l000EE025 l000EE06E
l000EE025:
	v110 = arg3
	v111 = loc16
	v112 = SLICE(v111, byte, 0)
	Mem0[v110:byte] = v112
	v113 = loc10
	v114 = Mem0[v113:word32]
	loc19 = v114
	v115 = loc19
	v116 = 0x14<32>
	v117 = v115 + v116
	loc20 = v117
	v118 = loc20
	v119 = Mem0[v118:word32]
	loc21 = v119
	v120 = 0<32>
	Mem0[0x00140048<p32>:word32] = v120
	v121 = loc21
	v122 = arg0
	v123 = loc10
	invoke_vii(v121, v122, v123)
	v124 = Mem0[0x00140048<p32>:word32]
	loc22 = v124
	v125 = 0<32>
	Mem0[0x00140048<p32>:word32] = v125
	v126 = loc22
	v127 = 1<32>
	v128 = v126 & v127
	loc23 = v128
	v129 = loc23
	v130 = v129 == 0<32>
	branch !v130 l000EE06D
	// succ:  l000EE061 l000EE06D
l000EE061:
	v131 = loc29
	v132 = fn0011B43F(v131)
	v133 = loc35
	Mem0[0x00140030<p32>:word32] = v133
	return
	// succ:  fn000EDF31_exit
l000EE06D:
	// succ:  l000EE06E
l000EE06E:
	v134 = ___cxa_find_matching_catch_2()
	loc26 = v134
	v135 = Mem0[0x00140094<p32>:word32]
	loc27 = v135
	v136 = loc26
	loc4 = v136
	v137 = loc27
	loc5 = v137
	// succ:  l000EE07E
l000EE07E:
	// succ:  l000EE07F
l000EE07F:
	// succ:  l000EE080
l000EE080:
	v138 = loc34
	v139 = 7<32>
	v140 = v138 == v139
	branch !v140 l000EE099
	// succ:  l000EE088 l000EE099
l000EE088:
	v141 = ___cxa_find_matching_catch_2()
	loc24 = v141
	v142 = Mem0[0x00140094<p32>:word32]
	loc25 = v142
	v143 = loc24
	loc4 = v143
	v144 = loc25
	loc5 = v144
	// succ:  l000EE099
l000EE099:
	v145 = loc29
	v146 = fn0011B43F(v145)
	v147 = loc4
	___resumeException(v147)
	// succ:  l000EE0A3
l000EE0A3:
	return
	// succ:  fn000EDF31_exit
fn000EDF31_exit:


