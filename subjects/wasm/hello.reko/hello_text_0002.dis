// fn000F07BB
// Return size: 0
word64 fn000F07BB(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000F07BB_entry:
	// succ:  l000F07BB
l000F07BB:
	v19 = Mem0[0x00140030<p32>:word32]
	loc16 = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = 0x10<32>
	v22 = v20 + v21
	Mem0[0x00140030<p32>:word32] = v22
	v23 = Mem0[0x00140030<p32>:word32]
	v24 = Mem0[0x00140034<p32>:word32]
	v25 = v23 >= v24
	branch !v25 l000F07D3
	// succ:  l000F07CF l000F07D3
l000F07CF:
	v26 = 0x10<32>
	abortStackOverflow(v26)
	// succ:  l000F07D3
l000F07D3:
	v27 = loc16
	loc10 = v27
	v28 = arg0
	v29 = arg1
	v30 = v28 == v29
	loc11 = v30
	v31 = loc11
	branch !v31 l000F07EE
	// succ:  l000F07E3 l000F07EE
l000F07E3:
	v32 = arg2
	v33 = 4<32>
	Mem0[v32:word32] = v33
	v34 = 0<64>
	loc19 = v34
	goto l000F0890
	// succ:  l000F0890
l000F07EE:
	v35 = ___errno_location()
	loc12 = v35
	v36 = loc12
	v37 = Mem0[v36:word32]
	loc13 = v37
	v38 = loc12
	v39 = 0<32>
	Mem0[v38:word32] = v39
	v40 = fn000EAD0D()
	loc14 = v40
	v41 = arg0
	v42 = loc10
	v43 = arg3
	v44 = loc14
	v45 = fn000D285D(v41, v42, v43, v44)
	loc20 = v45
	v46 = loc12
	v47 = Mem0[v46:word32]
	loc4 = v47
	v48 = loc4
	v49 = 0<32>
	v50 = v48 == v49
	loc5 = v50
	v51 = loc5
	branch !v51 l000F082B
	// succ:  l000F0824 l000F082B
l000F0824:
	v52 = loc12
	v53 = loc13
	Mem0[v52:word32] = v53
	// succ:  l000F082B
l000F082B:
	v54 = loc10
	v55 = Mem0[v54:word32]
	loc6 = v55
	v56 = loc6
	v57 = arg1
	v58 = v56 == v57
	loc7 = v58
	v59 = loc7
	branch !v59 l000F087F
	// succ:  l000F083E l000F087F
l000F083E:
	v60 = loc4
	v61 = 0x22<32>
	v62 = v60 == v61
	loc8 = v62
	v63 = loc8
	branch !v63 l000F0879
	// succ:  l000F0849 l000F0879
l000F0849:
	v64 = arg2
	v65 = 4<32>
	Mem0[v64:word32] = v65
	v66 = loc20
	v67 = 0<64>
	v68 = v66 > v67
	loc9 = v68
	v69 = loc9
	branch !v69 l000F0866
	// succ:  l000F085B l000F0866
l000F085B:
	v70 = 0xFFFFFFFF<64>
	goto l000F0872
	// succ:  l000F0872
l000F0866:
	v71 = 0x80000000<64>
	// succ:  l000F0872
l000F0872:
	loc17 = v71
	v72 = loc17
	loc18 = v72
	goto l000F087E
	// succ:  l000F087E
l000F0879:
	v73 = loc20
	loc18 = v73
	// succ:  l000F087E
l000F087E:
	goto l000F088B
	// succ:  l000F088B
l000F087F:
	v74 = arg2
	v75 = 4<32>
	Mem0[v74:word32] = v75
	v76 = 0<64>
	loc18 = v76
	// succ:  l000F088B
l000F088B:
	v77 = loc18
	loc19 = v77
	// succ:  l000F0890
l000F0890:
	v78 = loc16
	Mem0[0x00140030<p32>:word32] = v78
	v79 = loc19
fn000F07BB_exit:


// fn000F1D53
// Return size: 0
void fn000F1D53(word32 arg0)
fn000F1D53_entry:
	// succ:  l000F1D53
l000F1D53:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn000F1D53_exit:


// fn000F1D5C
// Return size: 0
void fn000F1D5C(word32 arg0)
fn000F1D5C_entry:
	// succ:  l000F1D5C
l000F1D5C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn000F1D5C_exit:


// fn000F1D6A
// Return size: 0
word32 fn000F1D6A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F1D6A_entry:
	// succ:  l000F1D6A
l000F1D6A:
	v72 = Mem0[0x00140030<p32>:word32]
	loc75 = v72
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = 0x40<32>
	v75 = v73 + v74
	Mem0[0x00140030<p32>:word32] = v75
	v76 = Mem0[0x00140030<p32>:word32]
	v77 = Mem0[0x00140034<p32>:word32]
	v78 = v76 >= v77
	branch !v78 l000F1D84
	// succ:  l000F1D7F l000F1D84
l000F1D7F:
	v79 = 0x40<32>
	abortStackOverflow(v79)
	// succ:  l000F1D84
l000F1D84:
	v80 = loc75
	v81 = 0x3C<32>
	v82 = v80 + v81
	loc10 = v82
	v83 = loc75
	v84 = 0x38<32>
	v85 = v83 + v84
	loc9 = v85
	v86 = loc75
	v87 = 0x34<32>
	v88 = v86 + v87
	loc8 = v88
	v89 = loc75
	v90 = 0x30<32>
	v91 = v89 + v90
	loc65 = v91
	v92 = loc75
	v93 = 0x2C<32>
	v94 = v92 + v93
	loc71 = v94
	v95 = loc75
	v96 = 0x28<32>
	v97 = v95 + v96
	loc72 = v97
	v98 = loc75
	v99 = 0x24<32>
	v100 = v98 + v99
	loc73 = v100
	v101 = loc75
	v102 = 0x20<32>
	v103 = v101 + v102
	loc15 = v103
	v104 = loc75
	v105 = 8<32>
	v106 = v104 + v105
	loc16 = v106
	v107 = loc75
	loc17 = v107
	v108 = arg3
	v109 = 4<32>
	v110 = v108 + v109
	loc18 = v110
	v111 = loc18
	v112 = Mem0[v111:word32]
	loc19 = v112
	v113 = loc19
	v114 = 1<32>
	v115 = v113 & v114
	loc20 = v115
	v116 = loc20
	v117 = 0<32>
	v118 = v116 == v117
	loc21 = v118
	// succ:  l000F1DE4
l000F1DE4:
	v119 = loc21
	v119 = v119
	// succ:  l000F1DEA l000F1DEA
l000F1DEA:
	v120 = loc65
	v121 = 0xFFFFFFFF<32>
	Mem0[v120:word32] = v121
	v122 = arg0
	v123 = Mem0[v122:word32]
	loc22 = v123
	v124 = loc22
	v125 = 0x10<32>
	v126 = v124 + v125
	loc23 = v126
	v127 = loc23
	v128 = Mem0[v127:word32]
	loc24 = v128
	v129 = arg1
	v130 = Mem0[v129:word32]
	loc25 = v130
	v131 = loc71
	v132 = loc25
	Mem0[v131:word32] = v132
	v133 = arg2
	v134 = Mem0[v133:word32]
	loc26 = v134
	v135 = loc72
	v136 = loc26
	Mem0[v135:word32] = v136
	v137 = loc8
	v138 = loc71
	v139 = Mem0[v138:word32]
	Mem0[v137:word32] = v139
	v140 = loc9
	v141 = loc72
	v142 = Mem0[v141:word32]
	Mem0[v140:word32] = v142
	v143 = arg0
	v144 = loc8
	v145 = loc9
	v146 = arg3
	v147 = arg4
	v148 = loc65
	v149 = loc24
	v150 = 0x1FF<32>
	v151 = v149 & v150
	v152 = 0x900<32>
	v153 = v151 + v152
fn000F1D6A_exit:


// fn000F20CE
// Return size: 0
word32 fn000F20CE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F20CE_entry:
	// succ:  l000F20CE
l000F20CE:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F20E6
	// succ:  l000F20E2 l000F20E6
l000F20E2:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F20E6
l000F20E6:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F81B1(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F20CE_exit:


// fn000F214A
// Return size: 0
word32 fn000F214A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F214A_entry:
	// succ:  l000F214A
l000F214A:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F2162
	// succ:  l000F215E l000F2162
l000F215E:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F2162
l000F2162:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F78C3(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F214A_exit:


// fn000F21C6
// Return size: 0
word32 fn000F21C6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F21C6_entry:
	// succ:  l000F21C6
l000F21C6:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F21DE
	// succ:  l000F21DA l000F21DE
l000F21DA:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F21DE
l000F21DE:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F6FD6(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F21C6_exit:


// fn000F2242
// Return size: 0
word32 fn000F2242(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F2242_entry:
	// succ:  l000F2242
l000F2242:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F225A
	// succ:  l000F2256 l000F225A
l000F2256:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F225A
l000F225A:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F66E9(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F2242_exit:


// fn000F22BE
// Return size: 0
word32 fn000F22BE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F22BE_entry:
	// succ:  l000F22BE
l000F22BE:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F22D6
	// succ:  l000F22D2 l000F22D6
l000F22D2:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F22D6
l000F22D6:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F5DFC(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F22BE_exit:


// fn000F233A
// Return size: 0
word32 fn000F233A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F233A_entry:
	// succ:  l000F233A
l000F233A:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F2352
	// succ:  l000F234E l000F2352
l000F234E:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F2352
l000F2352:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F539A(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F233A_exit:


// fn000F23B6
// Return size: 0
word32 fn000F23B6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F23B6_entry:
	// succ:  l000F23B6
l000F23B6:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F23CE
	// succ:  l000F23CA l000F23CE
l000F23CA:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F23CE
l000F23CE:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F4A65(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F23B6_exit:


// fn000F2432
// Return size: 0
word32 fn000F2432(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F2432_entry:
	// succ:  l000F2432
l000F2432:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F244A
	// succ:  l000F2446 l000F244A
l000F2446:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F244A
l000F244A:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F4131(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F2432_exit:


// fn000F24AE
// Return size: 0
word32 fn000F24AE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F24AE_entry:
	// succ:  l000F24AE
l000F24AE:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000F24C6
	// succ:  l000F24C2 l000F24C6
l000F24C2:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000F24C6
l000F24C6:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = fn000F3224(v43, v44, v45, v46, v47, v48)
	loc8 = v49
	v50 = loc14
	Mem0[0x00140030<p32>:word32] = v50
	v51 = loc8
fn000F24AE_exit:


// fn000F3B58
// Return size: 0
void fn000F3B58(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F3B58_entry:
	// succ:  l000F3B58
l000F3B58:
	v40 = Mem0[0x00140030<p32>:word32]
	loc42 = v40
	v41 = Mem0[0x00140030<p32>:word32]
	v42 = 0x10<32>
	v43 = v41 + v42
	Mem0[0x00140030<p32>:word32] = v43
	v44 = Mem0[0x00140030<p32>:word32]
	v45 = Mem0[0x00140034<p32>:word32]
	v46 = v44 >= v45
	branch !v46 l000F3B70
	// succ:  l000F3B6C l000F3B70
l000F3B6C:
	v47 = 0x10<32>
	abortStackOverflow(v47)
	// succ:  l000F3B70
l000F3B70:
	v48 = loc42
	loc36 = v48
	v49 = arg1
	v50 = fn000E64CA(v49)
	loc37 = v50
	v51 = loc36
	v52 = loc37
	Mem0[v51:word32] = v52
	v53 = 0<32>
	Mem0[0x00140048<p32>:word32] = v53
	v54 = 0x164<32>
	v55 = loc36
	v56 = 0x4C90<32>
	v57 = invoke_iii(v54, v55, v56)
	loc38 = v57
	v58 = Mem0[0x00140048<p32>:word32]
	loc39 = v58
	v59 = 0<32>
	Mem0[0x00140048<p32>:word32] = v59
	v60 = loc39
	v61 = 1<32>
	v62 = v60 & v61
	loc40 = v62
	v63 = loc40
	branch !v63 l000F3BAB
	// succ:  l000F3BA7 l000F3BAB
l000F3BA7:
	v64 = 8<32>
	loc41 = v64
l000F3BAB:
	v65 = loc38
	v66 = Mem0[v65:word32]
	loc7 = v66
	v67 = loc7
	v68 = 0x30<32>
	v69 = v67 + v68
	loc8 = v69
	v70 = loc8
	v71 = Mem0[v70:word32]
	loc9 = v71
	v72 = 0<32>
	Mem0[0x00140048<p32>:word32] = v72
	v73 = loc9
	v74 = loc38
	v75 = 0x37AB<32>
	v76 = 0x37CB<32>
	v77 = arg2
	v78 = invoke_iiiii(v73, v74, v75, v76, v77)
fn000F3B58_exit:


// fn000F5C88
// Return size: 0
void fn000F5C88(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000F5C88_entry:
	// succ:  l000F5C88
l000F5C88:
	v34 = Mem0[0x00140030<p32>:word32]
	loc35 = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = 0x10<32>
	v37 = v35 + v36
	Mem0[0x00140030<p32>:word32] = v37
	v38 = Mem0[0x00140030<p32>:word32]
	v39 = Mem0[0x00140034<p32>:word32]
	v40 = v38 >= v39
	branch !v40 l000F5CA0
	// succ:  l000F5C9C l000F5CA0
l000F5C9C:
	v41 = 0x10<32>
	abortStackOverflow(v41)
	// succ:  l000F5CA0
l000F5CA0:
	v42 = loc35
	loc28 = v42
	v43 = arg1
	v44 = fn000E64CA(v43)
	loc29 = v44
	v45 = loc28
	v46 = loc29
	Mem0[v45:word32] = v46
	v47 = 0<32>
	Mem0[0x00140048<p32>:word32] = v47
	v48 = 0x164<32>
	v49 = loc28
	v50 = 0x4C90<32>
	v51 = invoke_iii(v48, v49, v50)
	loc30 = v51
	v52 = Mem0[0x00140048<p32>:word32]
	loc31 = v52
	v53 = 0<32>
	Mem0[0x00140048<p32>:word32] = v53
	v54 = loc31
	v55 = 1<32>
	v56 = v54 & v55
	loc32 = v56
	v57 = loc32
	branch !v57 l000F5CDB
	// succ:  l000F5CD7 l000F5CDB
l000F5CD7:
	v58 = 7<32>
	loc34 = v58
l000F5CDB:
	v59 = loc30
	v60 = Mem0[v59:word32]
	loc33 = v60
	v61 = loc33
	v62 = 0x30<32>
	v63 = v61 + v62
	loc6 = v63
	v64 = loc6
	v65 = Mem0[v64:word32]
	loc7 = v65
	v66 = 0<32>
	Mem0[0x00140048<p32>:word32] = v66
	v67 = loc7
	v68 = loc30
	v69 = 0x37AB<32>
	v70 = 0x37C5<32>
	v71 = arg2
	v72 = invoke_iiiii(v67, v68, v69, v70, v71)
fn000F5C88_exit:


// fn000F95C3
// Return size: 0
void fn000F95C3(word32 arg0)
fn000F95C3_entry:
	// succ:  l000F95C3
l000F95C3:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn000F95C3_exit:


// fn000F95CC
// Return size: 0
void fn000F95CC(word32 arg0)
fn000F95CC_entry:
	// succ:  l000F95CC
l000F95CC:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn000F95CC_exit:


// fn000F95DA
// Return size: 0
word32 fn000F95DA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F95DA_entry:
	// succ:  l000F95DA
l000F95DA:
	v71 = Mem0[0x00140030<p32>:word32]
	loc73 = v71
	v72 = Mem0[0x00140030<p32>:word32]
	v73 = 0x20<32>
	v74 = v72 + v73
	Mem0[0x00140030<p32>:word32] = v74
	v75 = Mem0[0x00140030<p32>:word32]
	v76 = Mem0[0x00140034<p32>:word32]
	v77 = v75 >= v76
	branch !v77 l000F95F2
	// succ:  l000F95EE l000F95F2
l000F95EE:
	v78 = 0x20<32>
	abortStackOverflow(v78)
	// succ:  l000F95F2
l000F95F2:
	v79 = loc73
	v80 = 0x14<32>
	v81 = v79 + v80
	loc7 = v81
	v82 = loc73
	v83 = 0x10<32>
	v84 = v82 + v83
	loc54 = v84
	v85 = loc73
	v86 = 0xC<32>
	v87 = v85 + v86
	loc65 = v87
	v88 = loc73
	loc69 = v88
	v89 = arg2
	v90 = 4<32>
	v91 = v89 + v90
	loc70 = v91
	v92 = loc70
	v93 = Mem0[v92:word32]
	loc71 = v93
	v94 = loc71
	v95 = 1<32>
	v96 = v94 & v95
	loc14 = v96
	v97 = loc14
	v98 = 0<32>
	v99 = v97 == v98
	loc15 = v99
	// succ:  l000F9628
l000F9628:
	v100 = loc15
	v100 = v100
	// succ:  l000F962E l000F962E
l000F962E:
	v101 = arg0
	v102 = Mem0[v101:word32]
	loc16 = v102
	v103 = loc16
	v104 = 0x18<32>
	v105 = v103 + v104
	loc17 = v105
	v106 = loc17
	v107 = Mem0[v106:word32]
	loc18 = v107
	v108 = arg1
	v109 = Mem0[v108:word32]
	loc19 = v109
	v110 = loc54
	v111 = loc19
	Mem0[v110:word32] = v111
	v112 = arg4
	v113 = 1<32>
	v114 = v112 & v113
	loc20 = v114
	v115 = loc7
	v116 = loc54
	v117 = Mem0[v116:word32]
	Mem0[v115:word32] = v117
	v118 = arg0
	v119 = loc7
	v120 = arg2
	v121 = arg3
	v122 = loc20
	v123 = loc18
	v124 = 0x1FF<32>
	v125 = v123 & v124
	v126 = 0x1D20<32>
	v127 = v125 + v126
fn000F95DA_exit:


// fn000F98EA
// Return size: 0
word32 fn000F98EA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F98EA_entry:
	// succ:  l000F98EA
l000F98EA:
	v31 = Mem0[0x00140030<p32>:word32]
	loc33 = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x50<32>
	v34 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000F9904
	// succ:  l000F98FF l000F9904
l000F98FF:
	v38 = 0x50<32>
	abortStackOverflow(v38)
	// succ:  l000F9904
l000F9904:
	v39 = loc33
	v40 = 0x14<32>
	v41 = v39 + v40
	loc5 = v41
	v42 = loc33
	loc31 = v42
	v43 = loc33
	v44 = 0x3C<32>
	v45 = v43 + v44
	loc26 = v45
	v46 = loc33
	v47 = 0x2F<32>
	v48 = v46 + v47
	loc27 = v48
	v49 = loc33
	v50 = 0x18<32>
	v51 = v49 + v50
	loc28 = v51
	v52 = loc33
	v53 = 0x10<32>
	v54 = v52 + v53
	loc29 = v54
	v55 = loc33
	v56 = 0xC<32>
	v57 = v55 + v56
	loc30 = v57
	v58 = loc33
	v59 = 8<32>
	v60 = v58 + v59
	loc6 = v60
	v61 = loc33
	v62 = 4<32>
	v63 = v61 + v62
	loc7 = v63
	v64 = loc26
	v65 = 0x38A9<32>
	v66 = Mem0[v65:word32]
	Mem0[v64:word32] = v66
	v67 = loc26
	v68 = 4<32>
	v69 = v67 + v68
	v70 = 0x38A9<32>
	v71 = 4<32>
	v72 = v70 + v71
	v73 = Mem0[v72:int16]
	v74 = CONVERT(v73, int16, word32)
	v75 = SLICE(v74, word16, 0)
	Mem0[v69:word16] = v75
	v76 = loc26
	v77 = 1<32>
	v78 = v76 + v77
	loc8 = v78
	v79 = arg2
	v80 = 4<32>
	v81 = v79 + v80
	loc9 = v81
	v82 = loc9
	v83 = Mem0[v82:word32]
	loc10 = v83
	v84 = loc8
	v85 = 0x38AF<32>
	v86 = 1<32>
	v87 = loc10
	fn000FB8CE(v84, v85, v86, v87)
	v88 = fn000EAD0D()
	loc11 = v88
	v89 = loc31
	v90 = arg4
	Mem0[v89:word32] = v90
	v91 = loc27
	v92 = 0xD<32>
	v93 = loc11
	v94 = loc26
	v95 = loc31
	v96 = fn000FA95B(v91, v92, v93, v94, v95)
	loc12 = v96
	v97 = loc27
	v98 = loc12
	v99 = v97 + v98
	loc13 = v99
	v100 = loc27
	v101 = loc13
	v102 = arg2
	v103 = fn000FA9D7(v100, v101, v102)
	loc14 = v103
	v104 = arg2
	v105 = fn000E64CA(v104)
	loc15 = v105
	v106 = loc6
	v107 = loc15
	Mem0[v106:word32] = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = 0x18C<32>
	v110 = loc27
	v111 = loc14
	v112 = loc13
	v113 = loc28
	v114 = loc29
	v115 = loc30
	v116 = loc6
	invoke_viiiiiii(v109, v110, v111, v112, v113, v114, v115, v116)
	v117 = Mem0[0x00140048<p32>:word32]
	loc16 = v117
	v118 = 0<32>
	Mem0[0x00140048<p32>:word32] = v118
	v119 = loc16
	v120 = 1<32>
	v121 = v119 & v120
	loc17 = v121
	v122 = loc17
	v122 = v122
	// succ:  l000F99E6 l000F99E6
l000F99E6:
	v123 = ___cxa_find_matching_catch_2()
	loc23 = v123
	v124 = Mem0[0x00140094<p32>:word32]
	loc24 = v124
	v125 = loc6
	v126 = Mem0[v125:word32]
	loc25 = v126
	v127 = loc25
	v128 = fn0011B43F(v127)
fn000F98EA_exit:


// fn000F9A50
// Return size: 0
word32 fn000F9A50(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn000F9A50_entry:
	// succ:  l000F9A50
l000F9A50:
	v31 = Mem0[0x00140030<p32>:word32]
	loc33 = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x70<32>
	v34 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000F9A6A
	// succ:  l000F9A65 l000F9A6A
l000F9A65:
	v38 = 0x70<32>
	abortStackOverflow(v38)
	// succ:  l000F9A6A
l000F9A6A:
	v39 = loc33
	v40 = 0x20<32>
	v41 = v39 + v40
	loc5 = v41
	v42 = loc33
	v43 = 8<32>
	v44 = v42 + v43
	loc31 = v44
	v45 = loc33
	loc26 = v45
	v46 = loc33
	v47 = 0x4F<32>
	v48 = v46 + v47
	loc27 = v48
	v49 = loc33
	v50 = 0x24<32>
	v51 = v49 + v50
	loc28 = v51
	v52 = loc33
	v53 = 0x1C<32>
	v54 = v52 + v53
	loc29 = v54
	v55 = loc33
	v56 = 0x18<32>
	v57 = v55 + v56
	loc30 = v57
	v58 = loc33
	v59 = 0x14<32>
	v60 = v58 + v59
	loc6 = v60
	v61 = loc33
	v62 = 0x10<32>
	v63 = v61 + v62
	loc7 = v63
	v64 = loc26
	v65 = 0x25<64>
	Mem0[v64:word64] = v65
	v66 = loc26
	v67 = 1<32>
	v68 = v66 + v67
	loc8 = v68
	v69 = arg2
	v70 = 4<32>
	v71 = v69 + v70
	loc9 = v71
	v72 = loc9
	v73 = Mem0[v72:word32]
	loc10 = v73
	v74 = loc8
	v75 = 0x38A6<32>
	v76 = 1<32>
	v77 = loc10
	fn000FB8CE(v74, v75, v76, v77)
	v78 = fn000EAD0D()
	loc11 = v78
	v79 = loc31
	v80 = arg4
	Mem0[v79:word64] = v80
	v81 = loc27
	v82 = 0x17<32>
	v83 = loc11
	v84 = loc26
	v85 = loc31
	v86 = fn000FA95B(v81, v82, v83, v84, v85)
	loc12 = v86
	v87 = loc27
	v88 = loc12
	v89 = v87 + v88
	loc13 = v89
	v90 = loc27
	v91 = loc13
	v92 = arg2
	v93 = fn000FA9D7(v90, v91, v92)
	loc14 = v93
	v94 = arg2
	v95 = fn000E64CA(v94)
	loc15 = v95
	v96 = loc6
	v97 = loc15
	Mem0[v96:word32] = v97
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = 0x18C<32>
	v100 = loc27
	v101 = loc14
	v102 = loc13
	v103 = loc28
	v104 = loc29
	v105 = loc30
	v106 = loc6
	invoke_viiiiiii(v99, v100, v101, v102, v103, v104, v105, v106)
	v107 = Mem0[0x00140048<p32>:word32]
	loc16 = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = loc16
	v110 = 1<32>
	v111 = v109 & v110
	loc17 = v111
	v112 = loc17
	v112 = v112
	// succ:  l000F9B36 l000F9B36
l000F9B36:
	v113 = ___cxa_find_matching_catch_2()
	loc23 = v113
	v114 = Mem0[0x00140094<p32>:word32]
	loc24 = v114
	v115 = loc6
	v116 = Mem0[v115:word32]
	loc25 = v116
	v117 = loc25
	v118 = fn0011B43F(v117)
fn000F9A50_exit:


// fn000F9BA0
// Return size: 0
word32 fn000F9BA0(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F9BA0_entry:
	// succ:  l000F9BA0
l000F9BA0:
	v31 = Mem0[0x00140030<p32>:word32]
	loc33 = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x50<32>
	v34 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000F9BBA
	// succ:  l000F9BB5 l000F9BBA
l000F9BB5:
	v38 = 0x50<32>
	abortStackOverflow(v38)
	// succ:  l000F9BBA
l000F9BBA:
	v39 = loc33
	v40 = 0x14<32>
	v41 = v39 + v40
	loc5 = v41
	v42 = loc33
	loc31 = v42
	v43 = loc33
	v44 = 0x3C<32>
	v45 = v43 + v44
	loc26 = v45
	v46 = loc33
	v47 = 0x30<32>
	v48 = v46 + v47
	loc27 = v48
	v49 = loc33
	v50 = 0x18<32>
	v51 = v49 + v50
	loc28 = v51
	v52 = loc33
	v53 = 0x10<32>
	v54 = v52 + v53
	loc29 = v54
	v55 = loc33
	v56 = 0xC<32>
	v57 = v55 + v56
	loc30 = v57
	v58 = loc33
	v59 = 8<32>
	v60 = v58 + v59
	loc6 = v60
	v61 = loc33
	v62 = 4<32>
	v63 = v61 + v62
	loc7 = v63
	v64 = loc26
	v65 = 0x38A9<32>
	v66 = Mem0[v65:word32]
	Mem0[v64:word32] = v66
	v67 = loc26
	v68 = 4<32>
	v69 = v67 + v68
	v70 = 0x38A9<32>
	v71 = 4<32>
	v72 = v70 + v71
	v73 = Mem0[v72:int16]
	v74 = CONVERT(v73, int16, word32)
	v75 = SLICE(v74, word16, 0)
	Mem0[v69:word16] = v75
	v76 = loc26
	v77 = 1<32>
	v78 = v76 + v77
	loc8 = v78
	v79 = arg2
	v80 = 4<32>
	v81 = v79 + v80
	loc9 = v81
	v82 = loc9
	v83 = Mem0[v82:word32]
	loc10 = v83
	v84 = loc8
	v85 = 0x38AF<32>
	v86 = 0<32>
	v87 = loc10
	fn000FB8CE(v84, v85, v86, v87)
	v88 = fn000EAD0D()
	loc11 = v88
	v89 = loc31
	v90 = arg4
	Mem0[v89:word32] = v90
	v91 = loc27
	v92 = 0xC<32>
	v93 = loc11
	v94 = loc26
	v95 = loc31
	v96 = fn000FA95B(v91, v92, v93, v94, v95)
	loc12 = v96
	v97 = loc27
	v98 = loc12
	v99 = v97 + v98
	loc13 = v99
	v100 = loc27
	v101 = loc13
	v102 = arg2
	v103 = fn000FA9D7(v100, v101, v102)
	loc14 = v103
	v104 = arg2
	v105 = fn000E64CA(v104)
	loc15 = v105
	v106 = loc6
	v107 = loc15
	Mem0[v106:word32] = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = 0x18C<32>
	v110 = loc27
	v111 = loc14
	v112 = loc13
	v113 = loc28
	v114 = loc29
	v115 = loc30
	v116 = loc6
	invoke_viiiiiii(v109, v110, v111, v112, v113, v114, v115, v116)
	v117 = Mem0[0x00140048<p32>:word32]
	loc16 = v117
	v118 = 0<32>
	Mem0[0x00140048<p32>:word32] = v118
	v119 = loc16
	v120 = 1<32>
	v121 = v119 & v120
	loc17 = v121
	v122 = loc17
	v122 = v122
	// succ:  l000F9C9C l000F9C9C
l000F9C9C:
	v123 = ___cxa_find_matching_catch_2()
	loc23 = v123
	v124 = Mem0[0x00140094<p32>:word32]
	loc24 = v124
	v125 = loc6
	v126 = Mem0[v125:word32]
	loc25 = v126
	v127 = loc25
	v128 = fn0011B43F(v127)
fn000F9BA0_exit:


// fn000F9D06
// Return size: 0
word32 fn000F9D06(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn000F9D06_entry:
	// succ:  l000F9D06
l000F9D06:
	v31 = Mem0[0x00140030<p32>:word32]
	loc33 = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x70<32>
	v34 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000F9D20
	// succ:  l000F9D1B l000F9D20
l000F9D1B:
	v38 = 0x70<32>
	abortStackOverflow(v38)
	// succ:  l000F9D20
l000F9D20:
	v39 = loc33
	v40 = 0x20<32>
	v41 = v39 + v40
	loc5 = v41
	v42 = loc33
	v43 = 8<32>
	v44 = v42 + v43
	loc31 = v44
	v45 = loc33
	loc26 = v45
	v46 = loc33
	v47 = 0x4F<32>
	v48 = v46 + v47
	loc27 = v48
	v49 = loc33
	v50 = 0x24<32>
	v51 = v49 + v50
	loc28 = v51
	v52 = loc33
	v53 = 0x1C<32>
	v54 = v52 + v53
	loc29 = v54
	v55 = loc33
	v56 = 0x18<32>
	v57 = v55 + v56
	loc30 = v57
	v58 = loc33
	v59 = 0x14<32>
	v60 = v58 + v59
	loc6 = v60
	v61 = loc33
	v62 = 0x10<32>
	v63 = v61 + v62
	loc7 = v63
	v64 = loc26
	v65 = 0x25<64>
	Mem0[v64:word64] = v65
	v66 = loc26
	v67 = 1<32>
	v68 = v66 + v67
	loc8 = v68
	v69 = arg2
	v70 = 4<32>
	v71 = v69 + v70
	loc9 = v71
	v72 = loc9
	v73 = Mem0[v72:word32]
	loc10 = v73
	v74 = loc8
	v75 = 0x38A6<32>
	v76 = 0<32>
	v77 = loc10
	fn000FB8CE(v74, v75, v76, v77)
	v78 = fn000EAD0D()
	loc11 = v78
	v79 = loc31
	v80 = arg4
	Mem0[v79:word64] = v80
	v81 = loc27
	v82 = 0x17<32>
	v83 = loc11
	v84 = loc26
	v85 = loc31
	v86 = fn000FA95B(v81, v82, v83, v84, v85)
	loc12 = v86
	v87 = loc27
	v88 = loc12
	v89 = v87 + v88
	loc13 = v89
	v90 = loc27
	v91 = loc13
	v92 = arg2
	v93 = fn000FA9D7(v90, v91, v92)
	loc14 = v93
	v94 = arg2
	v95 = fn000E64CA(v94)
	loc15 = v95
	v96 = loc6
	v97 = loc15
	Mem0[v96:word32] = v97
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = 0x18C<32>
	v100 = loc27
	v101 = loc14
	v102 = loc13
	v103 = loc28
	v104 = loc29
	v105 = loc30
	v106 = loc6
	invoke_viiiiiii(v99, v100, v101, v102, v103, v104, v105, v106)
	v107 = Mem0[0x00140048<p32>:word32]
	loc16 = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = loc16
	v110 = 1<32>
	v111 = v109 & v110
	loc17 = v111
	v112 = loc17
	v112 = v112
	// succ:  l000F9DEC l000F9DEC
l000F9DEC:
	v113 = ___cxa_find_matching_catch_2()
	loc23 = v113
	v114 = Mem0[0x00140094<p32>:word32]
	loc24 = v114
	v115 = loc6
	v116 = Mem0[v115:word32]
	loc25 = v116
	v117 = loc25
	v118 = fn0011B43F(v117)
fn000F9D06_exit:


// fn000FA7EA
// Return size: 0
word32 fn000FA7EA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FA7EA_entry:
	// succ:  l000FA7EA
l000FA7EA:
	v33 = Mem0[0x00140030<p32>:word32]
	loc35 = v33
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = 0x60<32>
	v36 = v34 + v35
	Mem0[0x00140030<p32>:word32] = v36
	v37 = Mem0[0x00140030<p32>:word32]
	v38 = Mem0[0x00140034<p32>:word32]
	v39 = v37 >= v38
	branch !v39 l000FA804
	// succ:  l000FA7FF l000FA804
l000FA7FF:
	v40 = 0x60<32>
	abortStackOverflow(v40)
	// succ:  l000FA804
l000FA804:
	v41 = loc35
	v42 = 0xC<32>
	v43 = v41 + v42
	loc6 = v43
	v44 = loc35
	loc33 = v44
	v45 = loc35
	v46 = 0x4C<32>
	v47 = v45 + v46
	loc28 = v47
	v48 = loc35
	v49 = 0x38<32>
	v50 = v48 + v49
	loc29 = v50
	v51 = loc35
	v52 = 0x10<32>
	v53 = v51 + v52
	loc30 = v53
	v54 = loc35
	v55 = 8<32>
	v56 = v54 + v55
	loc31 = v56
	v57 = loc35
	v58 = 4<32>
	v59 = v57 + v58
	loc32 = v59
	v60 = loc28
	v61 = 0x389E<32>
	v62 = Mem0[v61:word32]
	Mem0[v60:word32] = v62
	v63 = loc28
	v64 = 4<32>
	v65 = v63 + v64
	v66 = 0x389E<32>
	v67 = 4<32>
	v68 = v66 + v67
	v69 = Mem0[v68:int16]
	v70 = CONVERT(v69, int16, word32)
	v71 = SLICE(v70, word16, 0)
	Mem0[v65:word16] = v71
	v72 = fn000EAD0D()
	loc7 = v72
	v73 = loc33
	v74 = arg4
	Mem0[v73:word32] = v74
	v75 = loc29
	v76 = 0x14<32>
	v77 = loc7
	v78 = loc28
	v79 = loc33
	v80 = fn000FA95B(v75, v76, v77, v78, v79)
	loc8 = v80
	v81 = loc29
	v82 = loc8
	v83 = v81 + v82
	loc9 = v83
	v84 = loc29
	v85 = loc9
	v86 = arg2
	v87 = fn000FA9D7(v84, v85, v86)
	loc10 = v87
	v88 = arg2
	v89 = fn000E64CA(v88)
	loc11 = v89
	v90 = loc31
	v91 = loc11
	Mem0[v90:word32] = v91
	v92 = 0<32>
	Mem0[0x00140048<p32>:word32] = v92
	v93 = 0x164<32>
	v94 = loc31
	v95 = 0x4C70<32>
	v96 = invoke_iii(v93, v94, v95)
	loc12 = v96
	v97 = Mem0[0x00140048<p32>:word32]
	loc13 = v97
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = loc13
	v100 = 1<32>
	v101 = v99 & v100
	loc14 = v101
	v102 = loc14
	v102 = v102
	// succ:  l000FA8B1 l000FA8B1
l000FA8B1:
	v103 = ___cxa_find_matching_catch_2()
	loc26 = v103
	v104 = Mem0[0x00140094<p32>:word32]
	loc27 = v104
	v105 = loc11
	v106 = fn0011B43F(v105)
fn000FA7EA_exit:


// fn000FA95B
// Return size: 0
word32 fn000FA95B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FA95B_entry:
	// succ:  l000FA95B
l000FA95B:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = 0x10<32>
	v15 = v13 + v14
	Mem0[0x00140030<p32>:word32] = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = Mem0[0x00140034<p32>:word32]
	v18 = v16 >= v17
	branch !v18 l000FA973
	// succ:  l000FA96F l000FA973
l000FA96F:
	v19 = 0x10<32>
	abortStackOverflow(v19)
	// succ:  l000FA973
l000FA973:
	v20 = loc14
	loc7 = v20
	v21 = loc7
	v22 = arg4
	Mem0[v21:word32] = v22
	v23 = arg2
	v24 = fn000DB419(v23)
	loc8 = v24
	v25 = arg0
	v26 = arg1
	v27 = arg3
	v28 = loc7
	v29 = fn000D29A3(v25, v26, v27, v28)
	loc9 = v29
	v30 = loc8
	v31 = 0<32>
	v32 = v30 == v31
	loc10 = v32
	v33 = loc10
	v34 = v33 == 0<32>
	v34 = v34
	// succ:  l000FA99F l000FA99F
l000FA99F:
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v36 = 0x17E<32>
	v37 = loc8
	v38 = invoke_ii(v36, v37)
fn000FA95B_exit:


// fn000FA9D7
// Return size: 0
word32 fn000FA9D7(word32 arg0, word32 arg1, word32 arg2)
fn000FA9D7_entry:
	// succ:  l000FA9D7
l000FA9D7:
	v20 = Mem0[0x00140030<p32>:word32]
	loc20 = v20
	v21 = arg2
	v22 = 4<32>
	v23 = v21 + v22
	loc10 = v23
	v24 = loc10
	v25 = Mem0[v24:word32]
	loc11 = v25
	v26 = loc11
	v27 = 0xB0<32>
	v28 = v26 & v27
	loc12 = v28
	v29 = loc12
	v30 = 0xFF<32>
	v31 = v29 & v30
	loc18 = v31
	// succ:  l000FA9FB
l000FA9FB:
	v32 = loc18
	v33 = 0x18<32>
	v34 = v32 << v33
	v35 = 0x18<32>
	v36 = v34 >> v35
	v37 = 0x10<32>
	v38 = v36 - v37
fn000FA9D7_exit:


// fn000FADDC
// Return size: 0
word32 fn000FADDC(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000FADDC_entry:
	// succ:  l000FADDC
l000FADDC:
	v21 = Mem0[0x00140030<p32>:word32]
	loc22 = v21
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = 0x10<32>
	v24 = v22 + v23
	Mem0[0x00140030<p32>:word32] = v24
	v25 = Mem0[0x00140030<p32>:word32]
	v26 = Mem0[0x00140034<p32>:word32]
	v27 = v25 >= v26
	branch !v27 l000FADF4
	// succ:  l000FADF0 l000FADF4
l000FADF0:
	v28 = 0x10<32>
	abortStackOverflow(v28)
	// succ:  l000FADF4
l000FADF4:
	v29 = loc22
	loc14 = v29
	v30 = loc14
	v31 = arg3
	Mem0[v30:word32] = v31
	v32 = arg1
	v33 = fn000DB419(v32)
	loc15 = v33
	v34 = 0<32>
	Mem0[0x00140048<p32>:word32] = v34
	v35 = 0x18F<32>
	v36 = arg0
	v37 = arg2
	v38 = loc14
	v39 = invoke_iiii(v35, v36, v37, v38)
	loc16 = v39
	v40 = Mem0[0x00140048<p32>:word32]
	loc17 = v40
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v42 = loc17
	v43 = 1<32>
	v44 = v42 & v43
	loc18 = v44
	v45 = loc18
	v45 = v45
	// succ:  l000FAE2B l000FAE2B
l000FAE2B:
	v46 = ___cxa_find_matching_catch_2()
	loc7 = v46
	v47 = Mem0[0x00140094<p32>:word32]
	loc8 = v47
	v48 = loc15
	v49 = 0<32>
	v50 = v48 == v49
	loc9 = v50
	v51 = loc9
	v52 = v51 == 0<32>
	v52 = v52
	// succ:  l000FAE3F l000FAE3F
l000FAE3F:
	v53 = 0<32>
	Mem0[0x00140048<p32>:word32] = v53
	v54 = 0x17E<32>
	v55 = loc15
	v56 = invoke_ii(v54, v55)
fn000FADDC_exit:


// fn000FAEBB
// Return size: 0
void fn000FAEBB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FAEBB_entry:
	// succ:  l000FAEBB
l000FAEBB:
	v211 = Mem0[0x00140030<p32>:word32]
	loc215 = v211
	v212 = Mem0[0x00140030<p32>:word32]
	v213 = 0x10<32>
	v214 = v212 + v213
	Mem0[0x00140030<p32>:word32] = v214
	v215 = Mem0[0x00140030<p32>:word32]
	v216 = Mem0[0x00140034<p32>:word32]
	v217 = v215 >= v216
	branch !v217 l000FAED4
	// succ:  l000FAED0 l000FAED4
l000FAED0:
	v218 = 0x10<32>
	abortStackOverflow(v218)
	// succ:  l000FAED4
l000FAED4:
	v219 = loc215
	loc179 = v219
	v220 = arg6
	v221 = 0x4C70<32>
	v222 = fn000EA9F7(v220, v221)
	loc190 = v222
	v223 = arg6
	v224 = 0x4C80<32>
	v225 = fn000EA9F7(v223, v224)
	loc201 = v225
	v226 = loc201
	v227 = Mem0[v226:word32]
	loc27 = v227
	v228 = loc27
	v229 = 0x14<32>
	v230 = v228 + v229
	loc38 = v230
	v231 = loc38
	v232 = Mem0[v231:word32]
	loc49 = v232
	v233 = loc179
	v234 = loc201
	v235 = loc49
	v236 = 0x1FF<32>
	v237 = v235 & v236
	v238 = 0x700<32>
	v239 = v237 + v238
fn000FAEBB_exit:


// fn000FBA39
// Return size: 0
void fn000FBA39(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FBA39_entry:
	// succ:  l000FBA39
l000FBA39:
	v146 = Mem0[0x00140030<p32>:word32]
	loc150 = v146
	v147 = Mem0[0x00140030<p32>:word32]
	v148 = 0x10<32>
	v149 = v147 + v148
	Mem0[0x00140030<p32>:word32] = v149
	v150 = Mem0[0x00140030<p32>:word32]
	v151 = Mem0[0x00140034<p32>:word32]
	v152 = v150 >= v151
	branch !v152 l000FBA52
	// succ:  l000FBA4E l000FBA52
l000FBA4E:
	v153 = 0x10<32>
	abortStackOverflow(v153)
	// succ:  l000FBA52
l000FBA52:
	v154 = loc150
	loc114 = v154
	v155 = arg6
	v156 = 0x4C70<32>
	v157 = fn000EA9F7(v155, v156)
	loc125 = v157
	v158 = arg6
	v159 = 0x4C80<32>
	v160 = fn000EA9F7(v158, v159)
	loc136 = v160
	v161 = loc136
	v162 = Mem0[v161:word32]
	loc23 = v162
	v163 = loc23
	v164 = 0x14<32>
	v165 = v163 + v164
	loc34 = v165
	v166 = loc34
	v167 = Mem0[v166:word32]
	loc45 = v167
	v168 = loc114
	v169 = loc136
	v170 = loc45
	v171 = 0x1FF<32>
	v172 = v170 & v171
	v173 = 0x700<32>
	v174 = v172 + v173
fn000FBA39_exit:


// fn000FC0C8
// Return size: 0
void fn000FC0C8(word32 arg0)
fn000FC0C8_entry:
	// succ:  l000FC0C8
l000FC0C8:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn000FC0C8_exit:


// fn000FC0D1
// Return size: 0
void fn000FC0D1(word32 arg0)
fn000FC0D1_entry:
	// succ:  l000FC0D1
l000FC0D1:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn000FC0D1_exit:


// fn000FC0DF
// Return size: 0
word32 fn000FC0DF(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FC0DF_entry:
	// succ:  l000FC0DF
l000FC0DF:
	v72 = Mem0[0x00140030<p32>:word32]
	loc74 = v72
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = 0x20<32>
	v75 = v73 + v74
	Mem0[0x00140030<p32>:word32] = v75
	v76 = Mem0[0x00140030<p32>:word32]
	v77 = Mem0[0x00140034<p32>:word32]
	v78 = v76 >= v77
	branch !v78 l000FC0F7
	// succ:  l000FC0F3 l000FC0F7
l000FC0F3:
	v79 = 0x20<32>
	abortStackOverflow(v79)
	// succ:  l000FC0F7
l000FC0F7:
	v80 = loc74
	v81 = 0x14<32>
	v82 = v80 + v81
	loc8 = v82
	v83 = loc74
	v84 = 0x10<32>
	v85 = v83 + v84
	loc55 = v85
	v86 = loc74
	v87 = 0xC<32>
	v88 = v86 + v87
	loc66 = v88
	v89 = loc74
	loc70 = v89
	v90 = arg2
	v91 = 4<32>
	v92 = v90 + v91
	loc71 = v92
	v93 = loc71
	v94 = Mem0[v93:word32]
	loc72 = v94
	v95 = loc72
	v96 = 1<32>
	v97 = v95 & v96
	loc15 = v97
	v98 = loc15
	v99 = 0<32>
	v100 = v98 == v99
	loc16 = v100
	// succ:  l000FC12D
l000FC12D:
	v101 = loc16
	v101 = v101
	// succ:  l000FC133 l000FC133
l000FC133:
	v102 = arg0
	v103 = Mem0[v102:word32]
	loc17 = v103
	v104 = loc17
	v105 = 0x18<32>
	v106 = v104 + v105
	loc18 = v106
	v107 = loc18
	v108 = Mem0[v107:word32]
	loc19 = v108
	v109 = arg1
	v110 = Mem0[v109:word32]
	loc20 = v110
	v111 = loc55
	v112 = loc20
	Mem0[v111:word32] = v112
	v113 = arg4
	v114 = 1<32>
	v115 = v113 & v114
	loc21 = v115
	v116 = loc8
	v117 = loc55
	v118 = Mem0[v117:word32]
	Mem0[v116:word32] = v118
	v119 = arg0
	v120 = loc8
	v121 = arg2
	v122 = arg3
	v123 = loc21
	v124 = loc19
	v125 = 0x1FF<32>
	v126 = v124 & v125
	v127 = 0x1D20<32>
	v128 = v126 + v127
fn000FC0DF_exit:


// fn000FC3DF
// Return size: 0
word32 fn000FC3DF(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FC3DF_entry:
	// succ:  l000FC3DF
l000FC3DF:
	v31 = Mem0[0x00140030<p32>:word32]
	loc33 = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x90<32>
	v34 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000FC3F9
	// succ:  l000FC3F4 l000FC3F9
l000FC3F4:
	v38 = 0x90<32>
	abortStackOverflow(v38)
	// succ:  l000FC3F9
l000FC3F9:
	v39 = loc33
	v40 = 0x70<32>
	v41 = v39 + v40
	loc5 = v41
	v42 = loc33
	loc31 = v42
	v43 = loc33
	v44 = 0x82<32>
	v45 = v43 + v44
	loc26 = v45
	v46 = loc33
	v47 = 0x74<32>
	v48 = v46 + v47
	loc27 = v48
	v49 = loc33
	v50 = 0x14<32>
	v51 = v49 + v50
	loc28 = v51
	v52 = loc33
	v53 = 0x10<32>
	v54 = v52 + v53
	loc29 = v54
	v55 = loc33
	v56 = 0xC<32>
	v57 = v55 + v56
	loc30 = v57
	v58 = loc33
	v59 = 8<32>
	v60 = v58 + v59
	loc6 = v60
	v61 = loc33
	v62 = 4<32>
	v63 = v61 + v62
	loc7 = v63
	v64 = loc26
	v65 = 0x38A9<32>
	v66 = Mem0[v65:word32]
	Mem0[v64:word32] = v66
	v67 = loc26
	v68 = 4<32>
	v69 = v67 + v68
	v70 = 0x38A9<32>
	v71 = 4<32>
	v72 = v70 + v71
	v73 = Mem0[v72:int16]
	v74 = CONVERT(v73, int16, word32)
	v75 = SLICE(v74, word16, 0)
	Mem0[v69:word16] = v75
	v76 = loc26
	v77 = 1<32>
	v78 = v76 + v77
	loc8 = v78
	v79 = arg2
	v80 = 4<32>
	v81 = v79 + v80
	loc9 = v81
	v82 = loc9
	v83 = Mem0[v82:word32]
	loc10 = v83
	v84 = loc8
	v85 = 0x38AF<32>
	v86 = 1<32>
	v87 = loc10
	fn000FB8CE(v84, v85, v86, v87)
	v88 = fn000EAD0D()
	loc11 = v88
	v89 = loc31
	v90 = arg4
	Mem0[v89:word32] = v90
	v91 = loc27
	v92 = 0xD<32>
	v93 = loc11
	v94 = loc26
	v95 = loc31
	v96 = fn000FA95B(v91, v92, v93, v94, v95)
	loc12 = v96
	v97 = loc27
	v98 = loc12
	v99 = v97 + v98
	loc13 = v99
	v100 = loc27
	v101 = loc13
	v102 = arg2
	v103 = fn000FA9D7(v100, v101, v102)
	loc14 = v103
	v104 = arg2
	v105 = fn000E64CA(v104)
	loc15 = v105
	v106 = loc6
	v107 = loc15
	Mem0[v106:word32] = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = 0x192<32>
	v110 = loc27
	v111 = loc14
	v112 = loc13
	v113 = loc28
	v114 = loc29
	v115 = loc30
	v116 = loc6
	invoke_viiiiiii(v109, v110, v111, v112, v113, v114, v115, v116)
	v117 = Mem0[0x00140048<p32>:word32]
	loc16 = v117
	v118 = 0<32>
	Mem0[0x00140048<p32>:word32] = v118
	v119 = loc16
	v120 = 1<32>
	v121 = v119 & v120
	loc17 = v121
	v122 = loc17
	v122 = v122
	// succ:  l000FC4DE l000FC4DE
l000FC4DE:
	v123 = ___cxa_find_matching_catch_2()
	loc23 = v123
	v124 = Mem0[0x00140094<p32>:word32]
	loc24 = v124
	v125 = loc6
	v126 = Mem0[v125:word32]
	loc25 = v126
	v127 = loc25
	v128 = fn0011B43F(v127)
fn000FC3DF_exit:


// fn000FC549
// Return size: 0
word32 fn000FC549(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn000FC549_entry:
	// succ:  l000FC549
l000FC549:
	v31 = Mem0[0x00140030<p32>:word32]
	loc33 = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0xF0<32>
	v34 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000FC563
	// succ:  l000FC55E l000FC563
l000FC55E:
	v38 = 0xF0<32>
	abortStackOverflow(v38)
	// succ:  l000FC563
l000FC563:
	v39 = loc33
	v40 = 0xCC<32>
	v41 = v39 + v40
	loc5 = v41
	v42 = loc33
	v43 = 8<32>
	v44 = v42 + v43
	loc31 = v44
	v45 = loc33
	loc26 = v45
	v46 = loc33
	v47 = 0xD0<32>
	v48 = v46 + v47
	loc27 = v48
	v49 = loc33
	v50 = 0x20<32>
	v51 = v49 + v50
	loc28 = v51
	v52 = loc33
	v53 = 0x1C<32>
	v54 = v52 + v53
	loc29 = v54
	v55 = loc33
	v56 = 0x18<32>
	v57 = v55 + v56
	loc30 = v57
	v58 = loc33
	v59 = 0x14<32>
	v60 = v58 + v59
	loc6 = v60
	v61 = loc33
	v62 = 0x10<32>
	v63 = v61 + v62
	loc7 = v63
	v64 = loc26
	v65 = 0x25<64>
	Mem0[v64:word64] = v65
	v66 = loc26
	v67 = 1<32>
	v68 = v66 + v67
	loc8 = v68
	v69 = arg2
	v70 = 4<32>
	v71 = v69 + v70
	loc9 = v71
	v72 = loc9
	v73 = Mem0[v72:word32]
	loc10 = v73
	v74 = loc8
	v75 = 0x38A6<32>
	v76 = 1<32>
	v77 = loc10
	fn000FB8CE(v74, v75, v76, v77)
	v78 = fn000EAD0D()
	loc11 = v78
	v79 = loc31
	v80 = arg4
	Mem0[v79:word64] = v80
	v81 = loc27
	v82 = 0x17<32>
	v83 = loc11
	v84 = loc26
	v85 = loc31
	v86 = fn000FA95B(v81, v82, v83, v84, v85)
	loc12 = v86
	v87 = loc27
	v88 = loc12
	v89 = v87 + v88
	loc13 = v89
	v90 = loc27
	v91 = loc13
	v92 = arg2
	v93 = fn000FA9D7(v90, v91, v92)
	loc14 = v93
	v94 = arg2
	v95 = fn000E64CA(v94)
	loc15 = v95
	v96 = loc6
	v97 = loc15
	Mem0[v96:word32] = v97
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = 0x192<32>
	v100 = loc27
	v101 = loc14
	v102 = loc13
	v103 = loc28
	v104 = loc29
	v105 = loc30
	v106 = loc6
	invoke_viiiiiii(v99, v100, v101, v102, v103, v104, v105, v106)
	v107 = Mem0[0x00140048<p32>:word32]
	loc16 = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = loc16
	v110 = 1<32>
	v111 = v109 & v110
	loc17 = v111
	v112 = loc17
	v112 = v112
	// succ:  l000FC630 l000FC630
l000FC630:
	v113 = ___cxa_find_matching_catch_2()
	loc23 = v113
	v114 = Mem0[0x00140094<p32>:word32]
	loc24 = v114
	v115 = loc6
	v116 = Mem0[v115:word32]
	loc25 = v116
	v117 = loc25
	v118 = fn0011B43F(v117)
fn000FC549_exit:


// fn000FC69B
// Return size: 0
word32 fn000FC69B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FC69B_entry:
	// succ:  l000FC69B
l000FC69B:
	v31 = Mem0[0x00140030<p32>:word32]
	loc33 = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x80<32>
	v34 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000FC6B5
	// succ:  l000FC6B0 l000FC6B5
l000FC6B0:
	v38 = 0x80<32>
	abortStackOverflow(v38)
	// succ:  l000FC6B5
l000FC6B5:
	v39 = loc33
	v40 = 0x68<32>
	v41 = v39 + v40
	loc5 = v41
	v42 = loc33
	loc31 = v42
	v43 = loc33
	v44 = 0x78<32>
	v45 = v43 + v44
	loc26 = v45
	v46 = loc33
	v47 = 0x6C<32>
	v48 = v46 + v47
	loc27 = v48
	v49 = loc33
	v50 = 0x14<32>
	v51 = v49 + v50
	loc28 = v51
	v52 = loc33
	v53 = 0x10<32>
	v54 = v52 + v53
	loc29 = v54
	v55 = loc33
	v56 = 0xC<32>
	v57 = v55 + v56
	loc30 = v57
	v58 = loc33
	v59 = 8<32>
	v60 = v58 + v59
	loc6 = v60
	v61 = loc33
	v62 = 4<32>
	v63 = v61 + v62
	loc7 = v63
	v64 = loc26
	v65 = 0x38A9<32>
	v66 = Mem0[v65:word32]
	Mem0[v64:word32] = v66
	v67 = loc26
	v68 = 4<32>
	v69 = v67 + v68
	v70 = 0x38A9<32>
	v71 = 4<32>
	v72 = v70 + v71
	v73 = Mem0[v72:int16]
	v74 = CONVERT(v73, int16, word32)
	v75 = SLICE(v74, word16, 0)
	Mem0[v69:word16] = v75
	v76 = loc26
	v77 = 1<32>
	v78 = v76 + v77
	loc8 = v78
	v79 = arg2
	v80 = 4<32>
	v81 = v79 + v80
	loc9 = v81
	v82 = loc9
	v83 = Mem0[v82:word32]
	loc10 = v83
	v84 = loc8
	v85 = 0x38AF<32>
	v86 = 0<32>
	v87 = loc10
	fn000FB8CE(v84, v85, v86, v87)
	v88 = fn000EAD0D()
	loc11 = v88
	v89 = loc31
	v90 = arg4
	Mem0[v89:word32] = v90
	v91 = loc27
	v92 = 0xC<32>
	v93 = loc11
	v94 = loc26
	v95 = loc31
	v96 = fn000FA95B(v91, v92, v93, v94, v95)
	loc12 = v96
	v97 = loc27
	v98 = loc12
	v99 = v97 + v98
	loc13 = v99
	v100 = loc27
	v101 = loc13
	v102 = arg2
	v103 = fn000FA9D7(v100, v101, v102)
	loc14 = v103
	v104 = arg2
	v105 = fn000E64CA(v104)
	loc15 = v105
	v106 = loc6
	v107 = loc15
	Mem0[v106:word32] = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = 0x192<32>
	v110 = loc27
	v111 = loc14
	v112 = loc13
	v113 = loc28
	v114 = loc29
	v115 = loc30
	v116 = loc6
	invoke_viiiiiii(v109, v110, v111, v112, v113, v114, v115, v116)
	v117 = Mem0[0x00140048<p32>:word32]
	loc16 = v117
	v118 = 0<32>
	Mem0[0x00140048<p32>:word32] = v118
	v119 = loc16
	v120 = 1<32>
	v121 = v119 & v120
	loc17 = v121
	v122 = loc17
	v122 = v122
	// succ:  l000FC79A l000FC79A
l000FC79A:
	v123 = ___cxa_find_matching_catch_2()
	loc23 = v123
	v124 = Mem0[0x00140094<p32>:word32]
	loc24 = v124
	v125 = loc6
	v126 = Mem0[v125:word32]
	loc25 = v126
	v127 = loc25
	v128 = fn0011B43F(v127)
fn000FC69B_exit:


// fn000FC805
// Return size: 0
word32 fn000FC805(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn000FC805_entry:
	// succ:  l000FC805
l000FC805:
	v31 = Mem0[0x00140030<p32>:word32]
	loc33 = v31
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0xF0<32>
	v34 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000FC81F
	// succ:  l000FC81A l000FC81F
l000FC81A:
	v38 = 0xF0<32>
	abortStackOverflow(v38)
	// succ:  l000FC81F
l000FC81F:
	v39 = loc33
	v40 = 0xCC<32>
	v41 = v39 + v40
	loc5 = v41
	v42 = loc33
	v43 = 8<32>
	v44 = v42 + v43
	loc31 = v44
	v45 = loc33
	loc26 = v45
	v46 = loc33
	v47 = 0xD0<32>
	v48 = v46 + v47
	loc27 = v48
	v49 = loc33
	v50 = 0x20<32>
	v51 = v49 + v50
	loc28 = v51
	v52 = loc33
	v53 = 0x1C<32>
	v54 = v52 + v53
	loc29 = v54
	v55 = loc33
	v56 = 0x18<32>
	v57 = v55 + v56
	loc30 = v57
	v58 = loc33
	v59 = 0x14<32>
	v60 = v58 + v59
	loc6 = v60
	v61 = loc33
	v62 = 0x10<32>
	v63 = v61 + v62
	loc7 = v63
	v64 = loc26
	v65 = 0x25<64>
	Mem0[v64:word64] = v65
	v66 = loc26
	v67 = 1<32>
	v68 = v66 + v67
	loc8 = v68
	v69 = arg2
	v70 = 4<32>
	v71 = v69 + v70
	loc9 = v71
	v72 = loc9
	v73 = Mem0[v72:word32]
	loc10 = v73
	v74 = loc8
	v75 = 0x38A6<32>
	v76 = 0<32>
	v77 = loc10
	fn000FB8CE(v74, v75, v76, v77)
	v78 = fn000EAD0D()
	loc11 = v78
	v79 = loc31
	v80 = arg4
	Mem0[v79:word64] = v80
	v81 = loc27
	v82 = 0x17<32>
	v83 = loc11
	v84 = loc26
	v85 = loc31
	v86 = fn000FA95B(v81, v82, v83, v84, v85)
	loc12 = v86
	v87 = loc27
	v88 = loc12
	v89 = v87 + v88
	loc13 = v89
	v90 = loc27
	v91 = loc13
	v92 = arg2
	v93 = fn000FA9D7(v90, v91, v92)
	loc14 = v93
	v94 = arg2
	v95 = fn000E64CA(v94)
	loc15 = v95
	v96 = loc6
	v97 = loc15
	Mem0[v96:word32] = v97
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = 0x192<32>
	v100 = loc27
	v101 = loc14
	v102 = loc13
	v103 = loc28
	v104 = loc29
	v105 = loc30
	v106 = loc6
	invoke_viiiiiii(v99, v100, v101, v102, v103, v104, v105, v106)
	v107 = Mem0[0x00140048<p32>:word32]
	loc16 = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = loc16
	v110 = 1<32>
	v111 = v109 & v110
	loc17 = v111
	v112 = loc17
	v112 = v112
	// succ:  l000FC8EC l000FC8EC
l000FC8EC:
	v113 = ___cxa_find_matching_catch_2()
	loc23 = v113
	v114 = Mem0[0x00140094<p32>:word32]
	loc24 = v114
	v115 = loc6
	v116 = Mem0[v115:word32]
	loc25 = v116
	v117 = loc25
	v118 = fn0011B43F(v117)
fn000FC805_exit:


// fn000FD2EB
// Return size: 0
word32 fn000FD2EB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FD2EB_entry:
	// succ:  l000FD2EB
l000FD2EB:
	v33 = Mem0[0x00140030<p32>:word32]
	loc35 = v33
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = 0xC0<32>
	v36 = v34 + v35
	Mem0[0x00140030<p32>:word32] = v36
	v37 = Mem0[0x00140030<p32>:word32]
	v38 = Mem0[0x00140034<p32>:word32]
	v39 = v37 >= v38
	branch !v39 l000FD305
	// succ:  l000FD300 l000FD305
l000FD300:
	v40 = 0xC0<32>
	abortStackOverflow(v40)
	// succ:  l000FD305
l000FD305:
	v41 = loc35
	v42 = 0xA0<32>
	v43 = v41 + v42
	loc6 = v43
	v44 = loc35
	loc33 = v44
	v45 = loc35
	v46 = 0xB8<32>
	v47 = v45 + v46
	loc28 = v47
	v48 = loc35
	v49 = 0xA4<32>
	v50 = v48 + v49
	loc29 = v50
	v51 = loc35
	v52 = 0xC<32>
	v53 = v51 + v52
	loc30 = v53
	v54 = loc35
	v55 = 8<32>
	v56 = v54 + v55
	loc31 = v56
	v57 = loc35
	v58 = 4<32>
	v59 = v57 + v58
	loc32 = v59
	v60 = loc28
	v61 = 0x389E<32>
	v62 = Mem0[v61:word32]
	Mem0[v60:word32] = v62
	v63 = loc28
	v64 = 4<32>
	v65 = v63 + v64
	v66 = 0x389E<32>
	v67 = 4<32>
	v68 = v66 + v67
	v69 = Mem0[v68:int16]
	v70 = CONVERT(v69, int16, word32)
	v71 = SLICE(v70, word16, 0)
	Mem0[v65:word16] = v71
	v72 = fn000EAD0D()
	loc7 = v72
	v73 = loc33
	v74 = arg4
	Mem0[v73:word32] = v74
	v75 = loc29
	v76 = 0x14<32>
	v77 = loc7
	v78 = loc28
	v79 = loc33
	v80 = fn000FA95B(v75, v76, v77, v78, v79)
	loc8 = v80
	v81 = loc29
	v82 = loc8
	v83 = v81 + v82
	loc9 = v83
	v84 = loc29
	v85 = loc9
	v86 = arg2
	v87 = fn000FA9D7(v84, v85, v86)
	loc10 = v87
	v88 = arg2
	v89 = fn000E64CA(v88)
	loc11 = v89
	v90 = loc31
	v91 = loc11
	Mem0[v90:word32] = v91
	v92 = 0<32>
	Mem0[0x00140048<p32>:word32] = v92
	v93 = 0x164<32>
	v94 = loc31
	v95 = 0x4C90<32>
	v96 = invoke_iii(v93, v94, v95)
	loc12 = v96
	v97 = Mem0[0x00140048<p32>:word32]
	loc13 = v97
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = loc13
	v100 = 1<32>
	v101 = v99 & v100
	loc14 = v101
	v102 = loc14
	v102 = v102
	// succ:  l000FD3B4 l000FD3B4
l000FD3B4:
	v103 = ___cxa_find_matching_catch_2()
	loc26 = v103
	v104 = Mem0[0x00140094<p32>:word32]
	loc27 = v104
	v105 = loc11
	v106 = fn0011B43F(v105)
fn000FD2EB_exit:


// fn000FD465
// Return size: 0
word32 fn000FD465(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FD465_entry:
	// succ:  l000FD465
l000FD465:
	v50 = Mem0[0x00140030<p32>:word32]
	loc53 = v50
	v51 = Mem0[0x00140030<p32>:word32]
	v52 = 0x10<32>
	v53 = v51 + v52
	Mem0[0x00140030<p32>:word32] = v53
	v54 = Mem0[0x00140030<p32>:word32]
	v55 = Mem0[0x00140034<p32>:word32]
	v56 = v54 >= v55
	branch !v56 l000FD47D
	// succ:  l000FD479 l000FD47D
l000FD479:
	v57 = 0x10<32>
	abortStackOverflow(v57)
	// succ:  l000FD47D
l000FD47D:
	v58 = loc53
	loc48 = v58
	v59 = arg0
	v60 = Mem0[v59:word32]
	loc49 = v60
	v61 = loc49
	v62 = 0<32>
	v63 = v61 == v62
	loc50 = v63
	// succ:  l000FD490
l000FD490:
	v64 = loc50
	branch !v64 l000FD49A
	// succ:  l000FD496 l000FD49A
l000FD496:
	v65 = 0<32>
	loc7 = v65
l000FD49A:
	v66 = arg3
	loc51 = v66
	v67 = arg1
	loc8 = v67
	v68 = loc51
	v69 = loc8
	v70 = v68 - v69
	loc9 = v70
	v71 = loc9
	v72 = 2<32>
	v73 = v71 >> v72
	loc10 = v73
	v74 = arg4
	v75 = 0xC<32>
	v76 = v74 + v75
	loc11 = v76
	v77 = loc11
	v78 = Mem0[v77:word32]
	loc12 = v78
	v79 = loc12
	v80 = loc10
	v81 = v79 > v80
	loc13 = v81
	v82 = loc12
	v83 = loc10
	v84 = v82 - v83
	loc14 = v84
	v85 = loc13
	branch !v85 l000FD4D3
	// succ:  l000FD4D1 l000FD4D3
l000FD4D1:
	v86 = loc14
	goto l000FD4D6
	// succ:  l000FD4D6
l000FD4D3:
	v87 = 0<32>
	// succ:  l000FD4D6
l000FD4D6:
	loc6 = v87
	v88 = arg2
	loc15 = v88
	v89 = loc15
	v90 = loc8
	v91 = v89 - v90
	loc16 = v91
	v92 = loc16
	v93 = 2<32>
	v94 = v92 >> v93
	loc17 = v94
	v95 = loc16
	v96 = 0<32>
	v97 = v95 > v96
	loc18 = v97
	v98 = loc18
	v98 = v98
	// succ:  l000FD4F6 l000FD4F6
l000FD4F6:
	v99 = loc49
	v100 = Mem0[v99:word32]
	loc19 = v100
	v101 = loc19
	v102 = 0x30<32>
	v103 = v101 + v102
	loc20 = v103
	v104 = loc20
	v105 = Mem0[v104:word32]
	loc21 = v105
	v106 = loc49
	v107 = arg1
	v108 = loc17
	v109 = loc21
	v110 = 0x1FF<32>
	v111 = v109 & v110
	v112 = 0xF20<32>
	v113 = v111 + v112
fn000FD465_exit:


// fn000FD67D
// Return size: 0
void fn000FD67D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FD67D_entry:
	// succ:  l000FD67D
l000FD67D:
	v211 = Mem0[0x00140030<p32>:word32]
	loc215 = v211
	v212 = Mem0[0x00140030<p32>:word32]
	v213 = 0x10<32>
	v214 = v212 + v213
	Mem0[0x00140030<p32>:word32] = v214
	v215 = Mem0[0x00140030<p32>:word32]
	v216 = Mem0[0x00140034<p32>:word32]
	v217 = v215 >= v216
	branch !v217 l000FD696
	// succ:  l000FD692 l000FD696
l000FD692:
	v218 = 0x10<32>
	abortStackOverflow(v218)
	// succ:  l000FD696
l000FD696:
	v219 = loc215
	loc179 = v219
	v220 = arg6
	v221 = 0x4C90<32>
	v222 = fn000EA9F7(v220, v221)
	loc190 = v222
	v223 = arg6
	v224 = 0x4C98<32>
	v225 = fn000EA9F7(v223, v224)
	loc201 = v225
	v226 = loc201
	v227 = Mem0[v226:word32]
	loc27 = v227
	v228 = loc27
	v229 = 0x14<32>
	v230 = v228 + v229
	loc38 = v230
	v231 = loc38
	v232 = Mem0[v231:word32]
	loc49 = v232
	v233 = loc179
	v234 = loc201
	v235 = loc49
	v236 = 0x1FF<32>
	v237 = v235 & v236
	v238 = 0x700<32>
	v239 = v237 + v238
fn000FD67D_exit:


// fn000FE09E
// Return size: 0
void fn000FE09E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FE09E_entry:
	// succ:  l000FE09E
l000FE09E:
	v143 = Mem0[0x00140030<p32>:word32]
	loc147 = v143
	v144 = Mem0[0x00140030<p32>:word32]
	v145 = 0x10<32>
	v146 = v144 + v145
	Mem0[0x00140030<p32>:word32] = v146
	v147 = Mem0[0x00140030<p32>:word32]
	v148 = Mem0[0x00140034<p32>:word32]
	v149 = v147 >= v148
	branch !v149 l000FE0B7
	// succ:  l000FE0B3 l000FE0B7
l000FE0B3:
	v150 = 0x10<32>
	abortStackOverflow(v150)
	// succ:  l000FE0B7
l000FE0B7:
	v151 = loc147
	loc111 = v151
	v152 = arg6
	v153 = 0x4C90<32>
	v154 = fn000EA9F7(v152, v153)
	loc122 = v154
	v155 = arg6
	v156 = 0x4C98<32>
	v157 = fn000EA9F7(v155, v156)
	loc133 = v157
	v158 = loc133
	v159 = Mem0[v158:word32]
	loc22 = v159
	v160 = loc22
	v161 = 0x14<32>
	v162 = v160 + v161
	loc33 = v162
	v163 = loc33
	v164 = Mem0[v163:word32]
	loc44 = v164
	v165 = loc111
	v166 = loc133
	v167 = loc44
	v168 = 0x1FF<32>
	v169 = v167 & v168
	v170 = 0x700<32>
	v171 = v169 + v170
fn000FE09E_exit:


// fn000FE711
// Return size: 0
void fn000FE711(word32 arg0)
fn000FE711_entry:
	// succ:  l000FE711
l000FE711:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn000FE711_exit:


// fn000FE71A
// Return size: 0
void fn000FE71A(word32 arg0)
fn000FE71A_entry:
	// succ:  l000FE71A
l000FE71A:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn000FE71A_exit:


// fn000FE728
// Return size: 0
word32 fn000FE728(word32 arg0)
fn000FE728_entry:
	// succ:  l000FE728
l000FE728:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 2<32>
fn000FE728_exit:


// fn000FE733
// Return size: 0
word32 fn000FE733(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE733_entry:
	// succ:  l000FE733
l000FE733:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l000FE74B
	// succ:  l000FE747 l000FE74B
l000FE747:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l000FE74B
l000FE74B:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = 0x3AB6<32>
	v50 = 0x3ABE<32>
	v51 = fn001003A9(v43, v44, v45, v46, v47, v48, v49, v50)
	loc8 = v51
	v52 = loc14
	Mem0[0x00140030<p32>:word32] = v52
	v53 = loc8
fn000FE733_exit:


// fn000FE7B7
// Return size: 0
word32 fn000FE7B7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE7B7_entry:
	// succ:  l000FE7B7
l000FE7B7:
	v26 = Mem0[0x00140030<p32>:word32]
	loc29 = v26
	v27 = Mem0[0x00140030<p32>:word32]
	v28 = 0x10<32>
	v29 = v27 + v28
	Mem0[0x00140030<p32>:word32] = v29
	v30 = Mem0[0x00140030<p32>:word32]
	v31 = Mem0[0x00140034<p32>:word32]
	v32 = v30 >= v31
	branch !v32 l000FE7CF
	// succ:  l000FE7CB l000FE7CF
l000FE7CB:
	v33 = 0x10<32>
	abortStackOverflow(v33)
	// succ:  l000FE7CF
l000FE7CF:
	v34 = loc29
	v35 = 0xC<32>
	v36 = v34 + v35
	loc7 = v36
	v37 = loc29
	v38 = 8<32>
	v39 = v37 + v38
	loc6 = v39
	v40 = loc29
	v41 = 4<32>
	v42 = v40 + v41
	loc24 = v42
	v43 = loc29
	loc25 = v43
	v44 = arg0
	v45 = 8<32>
	v46 = v44 + v45
	loc26 = v46
	v47 = loc26
	v48 = Mem0[v47:word32]
	loc27 = v48
	v49 = loc27
	v50 = 0x14<32>
	v51 = v49 + v50
	loc8 = v51
	v52 = loc8
	v53 = Mem0[v52:word32]
	loc9 = v53
	v54 = loc26
	v55 = loc9
	v56 = 0x1FF<32>
	v57 = v55 & v56
	v58 = 0xB00<32>
	v59 = v57 + v58
fn000FE7B7_exit:


// fn000FE8BB
// Return size: 0
word32 fn000FE8BB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE8BB_entry:
	// succ:  l000FE8BB
l000FE8BB:
	v16 = Mem0[0x00140030<p32>:word32]
	loc19 = v16
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v19 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l000FE8D3
	// succ:  l000FE8CF l000FE8D3
l000FE8CF:
	v23 = 0x10<32>
	abortStackOverflow(v23)
	// succ:  l000FE8D3
l000FE8D3:
	v24 = loc19
	v25 = 8<32>
	v26 = v24 + v25
	loc6 = v26
	v27 = loc19
	v28 = 4<32>
	v29 = v27 + v28
	loc14 = v29
	v30 = loc19
	loc15 = v30
	v31 = arg3
	v32 = fn000E64CA(v31)
	loc16 = v32
	v33 = loc14
	v34 = loc16
	Mem0[v33:word32] = v34
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v36 = 0x164<32>
	v37 = loc14
	v38 = 0x4C70<32>
	v39 = invoke_iii(v36, v37, v38)
	loc17 = v39
	v40 = Mem0[0x00140048<p32>:word32]
	loc8 = v40
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v42 = loc8
	v43 = 1<32>
	v44 = v42 & v43
	loc9 = v44
	v45 = loc9
	v45 = v45
	// succ:  l000FE918 l000FE918
l000FE918:
	v46 = ___cxa_find_matching_catch_2()
	loc12 = v46
	v47 = Mem0[0x00140094<p32>:word32]
	loc13 = v47
	v48 = loc16
	v49 = fn0011B43F(v48)
fn000FE8BB_exit:


// fn000FE973
// Return size: 0
word32 fn000FE973(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE973_entry:
	// succ:  l000FE973
l000FE973:
	v16 = Mem0[0x00140030<p32>:word32]
	loc19 = v16
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v19 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l000FE98B
	// succ:  l000FE987 l000FE98B
l000FE987:
	v23 = 0x10<32>
	abortStackOverflow(v23)
	// succ:  l000FE98B
l000FE98B:
	v24 = loc19
	v25 = 8<32>
	v26 = v24 + v25
	loc6 = v26
	v27 = loc19
	v28 = 4<32>
	v29 = v27 + v28
	loc14 = v29
	v30 = loc19
	loc15 = v30
	v31 = arg3
	v32 = fn000E64CA(v31)
	loc16 = v32
	v33 = loc14
	v34 = loc16
	Mem0[v33:word32] = v34
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v36 = 0x164<32>
	v37 = loc14
	v38 = 0x4C70<32>
	v39 = invoke_iii(v36, v37, v38)
	loc17 = v39
	v40 = Mem0[0x00140048<p32>:word32]
	loc8 = v40
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v42 = loc8
	v43 = 1<32>
	v44 = v42 & v43
	loc9 = v44
	v45 = loc9
	v45 = v45
	// succ:  l000FE9D0 l000FE9D0
l000FE9D0:
	v46 = ___cxa_find_matching_catch_2()
	loc12 = v46
	v47 = Mem0[0x00140094<p32>:word32]
	loc13 = v47
	v48 = loc16
	v49 = fn0011B43F(v48)
fn000FE973_exit:


// fn000FEA2B
// Return size: 0
word32 fn000FEA2B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FEA2B_entry:
	// succ:  l000FEA2B
l000FEA2B:
	v16 = Mem0[0x00140030<p32>:word32]
	loc19 = v16
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v19 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l000FEA43
	// succ:  l000FEA3F l000FEA43
l000FEA3F:
	v23 = 0x10<32>
	abortStackOverflow(v23)
	// succ:  l000FEA43
l000FEA43:
	v24 = loc19
	v25 = 8<32>
	v26 = v24 + v25
	loc6 = v26
	v27 = loc19
	v28 = 4<32>
	v29 = v27 + v28
	loc14 = v29
	v30 = loc19
	loc15 = v30
	v31 = arg3
	v32 = fn000E64CA(v31)
	loc16 = v32
	v33 = loc14
	v34 = loc16
	Mem0[v33:word32] = v34
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v36 = 0x164<32>
	v37 = loc14
	v38 = 0x4C70<32>
	v39 = invoke_iii(v36, v37, v38)
	loc17 = v39
	v40 = Mem0[0x00140048<p32>:word32]
	loc8 = v40
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v42 = loc8
	v43 = 1<32>
	v44 = v42 & v43
	loc9 = v44
	v45 = loc9
	v45 = v45
	// succ:  l000FEA88 l000FEA88
l000FEA88:
	v46 = ___cxa_find_matching_catch_2()
	loc12 = v46
	v47 = Mem0[0x00140094<p32>:word32]
	loc13 = v47
	v48 = loc16
	v49 = fn0011B43F(v48)
fn000FEA2B_exit:


// fn000FEAE3
// Return size: 0
word32 fn000FEAE3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn000FEAE3_entry:
	// succ:  l000FEAE3
l000FEAE3:
	v162 = Mem0[0x00140030<p32>:word32]
	loc167 = v162
	v163 = Mem0[0x00140030<p32>:word32]
	v164 = 0x100<32>
	v165 = v163 + v164
	Mem0[0x00140030<p32>:word32] = v165
	v166 = Mem0[0x00140030<p32>:word32]
	v167 = Mem0[0x00140034<p32>:word32]
	v168 = v166 >= v167
	branch !v168 l000FEAFE
	// succ:  l000FEAF9 l000FEAFE
l000FEAF9:
	v169 = 0x100<32>
	abortStackOverflow(v169)
	// succ:  l000FEAFE
l000FEAFE:
	v170 = loc167
	v171 = 0xF8<32>
	v172 = v170 + v171
	loc32 = v172
	v173 = loc167
	v174 = 0xF4<32>
	v175 = v173 + v174
	loc30 = v175
	v176 = loc167
	v177 = 0xF0<32>
	v178 = v176 + v177
	loc29 = v178
	v179 = loc167
	v180 = 0xEC<32>
	v181 = v179 + v180
	loc28 = v181
	v182 = loc167
	v183 = 0xE8<32>
	v184 = v182 + v183
	loc27 = v184
	v185 = loc167
	v186 = 0xE4<32>
	v187 = v185 + v186
	loc26 = v187
	v188 = loc167
	v189 = 0xE0<32>
	v190 = v188 + v189
	loc25 = v190
	v191 = loc167
	v192 = 0xDC<32>
	v193 = v191 + v192
	loc24 = v193
	v194 = loc167
	v195 = 0xD8<32>
	v196 = v194 + v195
	loc23 = v196
	v197 = loc167
	v198 = 0xD4<32>
	v199 = v197 + v198
	loc22 = v199
	v200 = loc167
	v201 = 0xD0<32>
	v202 = v200 + v201
	loc21 = v202
	v203 = loc167
	v204 = 0xCC<32>
	v205 = v203 + v204
	loc19 = v205
	v206 = loc167
	v207 = 0xC8<32>
	v208 = v206 + v207
	loc18 = v208
	v209 = loc167
	v210 = 0xC4<32>
	v211 = v209 + v210
	loc17 = v211
	v212 = loc167
	v213 = 0xC0<32>
	v214 = v212 + v213
	loc16 = v214
	v215 = loc167
	v216 = 0xBC<32>
	v217 = v215 + v216
	loc15 = v217
	v218 = loc167
	v219 = 0xB8<32>
	v220 = v218 + v219
	loc14 = v220
	v221 = loc167
	v222 = 0xB4<32>
	v223 = v221 + v222
	loc13 = v223
	v224 = loc167
	v225 = 0xB0<32>
	v226 = v224 + v225
	loc12 = v226
	v227 = loc167
	v228 = 0xAC<32>
	v229 = v227 + v228
	loc11 = v229
	v230 = loc167
	v231 = 0xA8<32>
	v232 = v230 + v231
	loc10 = v232
	v233 = loc167
	v234 = 0xA4<32>
	v235 = v233 + v234
	loc38 = v235
	v236 = loc167
	v237 = 0xA0<32>
	v238 = v236 + v237
	loc37 = v238
	v239 = loc167
	v240 = 0x9C<32>
	v241 = v239 + v240
	loc36 = v241
	v242 = loc167
	v243 = 0x98<32>
	v244 = v242 + v243
	loc35 = v244
	v245 = loc167
	v246 = 0x94<32>
	v247 = v245 + v246
	loc34 = v247
	v248 = loc167
	v249 = 0x90<32>
	v250 = v248 + v249
	loc33 = v250
	v251 = loc167
	v252 = 0x8C<32>
	v253 = v251 + v252
	loc31 = v253
	v254 = loc167
	v255 = 0x88<32>
	v256 = v254 + v255
	loc20 = v256
	v257 = loc167
	v258 = 0x84<32>
	v259 = v257 + v258
	loc9 = v259
	v260 = loc167
	v261 = 0x80<32>
	v262 = v260 + v261
	loc8 = v262
	v263 = loc167
	v264 = 0x7C<32>
	v265 = v263 + v264
	loc144 = v265
	v266 = loc167
	v267 = 0x78<32>
	v268 = v266 + v267
	loc155 = v268
	v269 = loc167
	v270 = 0x74<32>
	v271 = v269 + v270
	loc41 = v271
	v272 = loc167
	v273 = 0x70<32>
	v274 = v272 + v273
	loc52 = v274
	v275 = loc167
	v276 = 0x6C<32>
	v277 = v275 + v276
	loc63 = v277
	v278 = loc167
	v279 = 0x68<32>
	v280 = v278 + v279
	loc74 = v280
	v281 = loc167
	v282 = 0x64<32>
	v283 = v281 + v282
	loc78 = v283
	v284 = loc167
	v285 = 0x60<32>
	v286 = v284 + v285
	loc79 = v286
	v287 = loc167
	v288 = 0x5C<32>
	v289 = v287 + v288
	loc80 = v289
	v290 = loc167
	v291 = 0x58<32>
	v292 = v290 + v291
	loc81 = v292
	v293 = loc167
	v294 = 0x54<32>
	v295 = v293 + v294
	loc82 = v295
	v296 = loc167
	v297 = 0x50<32>
	v298 = v296 + v297
	loc83 = v298
	v299 = loc167
	v300 = 0x4C<32>
	v301 = v299 + v300
	loc84 = v301
	v302 = loc167
	v303 = 0x48<32>
	v304 = v302 + v303
	loc85 = v304
	v305 = loc167
	v306 = 0x44<32>
	v307 = v305 + v306
	loc86 = v307
	v308 = loc167
	v309 = 0x40<32>
	v310 = v308 + v309
	loc87 = v310
	v311 = loc167
	v312 = 0x3C<32>
	v313 = v311 + v312
	loc88 = v313
	v314 = loc167
	v315 = 0x38<32>
	v316 = v314 + v315
	loc89 = v316
	v317 = loc167
	v318 = 0x34<32>
	v319 = v317 + v318
	loc90 = v319
	v320 = loc167
	v321 = 0x30<32>
	v322 = v320 + v321
	loc91 = v322
	v323 = loc167
	v324 = 0x2C<32>
	v325 = v323 + v324
	loc92 = v325
	v326 = loc167
	v327 = 0x28<32>
	v328 = v326 + v327
	loc93 = v328
	v329 = loc167
	v330 = 0x24<32>
	v331 = v329 + v330
	loc94 = v331
	v332 = loc167
	v333 = 0x20<32>
	v334 = v332 + v333
	loc95 = v334
	v335 = loc167
	v336 = 0x1C<32>
	v337 = v335 + v336
	loc96 = v337
	v338 = loc167
	v339 = 0x18<32>
	v340 = v338 + v339
	loc97 = v340
	v341 = loc167
	v342 = 0x14<32>
	v343 = v341 + v342
	loc98 = v343
	v344 = loc167
	v345 = 0x10<32>
	v346 = v344 + v345
	loc99 = v346
	v347 = loc167
	v348 = 0xC<32>
	v349 = v347 + v348
	loc100 = v349
	v350 = loc167
	v351 = 8<32>
	v352 = v350 + v351
	loc101 = v352
	v353 = loc167
	v354 = 4<32>
	v355 = v353 + v354
	loc102 = v355
	v356 = loc167
	loc103 = v356
	v357 = arg4
	v358 = 0<32>
	Mem0[v357:word32] = v358
	v359 = arg3
	v360 = fn000E64CA(v359)
	loc104 = v360
	v361 = loc144
	v362 = loc104
	Mem0[v361:word32] = v362
	v363 = 0<32>
	Mem0[0x00140048<p32>:word32] = v363
	v364 = 0x164<32>
	v365 = loc144
	v366 = 0x4C70<32>
	v367 = invoke_iii(v364, v365, v366)
	loc105 = v367
	v368 = Mem0[0x00140048<p32>:word32]
	loc106 = v368
	v369 = 0<32>
	Mem0[0x00140048<p32>:word32] = v369
	v370 = loc106
	v371 = 1<32>
	v372 = v370 & v371
	loc107 = v372
	v373 = loc107
	v373 = v373
	// succ:  l000FED60 l000FED60
l000FED60:
	v374 = ___cxa_find_matching_catch_2()
	loc109 = v374
	v375 = Mem0[0x00140094<p32>:word32]
	loc110 = v375
	v376 = loc104
	v377 = fn0011B43F(v376)
fn000FEAE3_exit:


// fn000FFF20
// Return size: 0
word32 fn000FFF20(word32 arg0)
fn000FFF20_entry:
	// succ:  l000FFF20
l000FFF20:
	v12 = Mem0[0x00140030<p32>:word32]
	loc10 = v12
	v13 = 0x43B0<32>
	v14 = Mem0[v13:int8]
	v15 = CONVERT(v14, int8, word32)
	loc1 = v15
	v16 = loc1
	v17 = 0x18<32>
	v18 = v16 << v17
	v19 = 0x18<32>
	v20 = v18 >> v19
	v21 = 0<32>
	v22 = v20 == v21
	loc2 = v22
	// succ:  l000FFF3C
l000FFF3C:
	v23 = loc2
	v23 = v23
	// succ:  l000FFF42 l000FFF42
l000FFF42:
	v24 = 0x43B0<32>
	v25 = fn0011EE46(v24)
	loc3 = v25
	v26 = loc3
	v27 = 0<32>
	v28 = v26 == v27
	loc4 = v28
	v29 = loc4
	v30 = v29 == 0<32>
	v30 = v30
	// succ:  l000FFF57 l000FFF57
l000FFF57:
	v31 = 0x4CDC<32>
	v32 = 0<64>
	Mem0[v31:word64] = v32
	v33 = 0x4CDC<32>
	v34 = 8<32>
	v35 = v33 + v34
	v36 = 0<32>
	Mem0[v35:word32] = v36
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v38 = 0x199<32>
	v39 = 0x4CDC<32>
	v40 = 0x399C<32>
	v41 = 0x14<32>
	invoke_viii(v38, v39, v40, v41)
	v42 = Mem0[0x00140048<p32>:word32]
	loc5 = v42
	v43 = 0<32>
	Mem0[0x00140048<p32>:word32] = v43
	v44 = loc5
	v45 = 1<32>
	v46 = v44 & v45
	loc6 = v46
	v47 = loc6
	branch !v47 l000FFF9E
	// succ:  l000FFF92 l000FFF9E
l000FFF92:
	v48 = ___cxa_find_matching_catch_2()
	loc7 = v48
	v49 = Mem0[0x00140094<p32>:word32]
	loc8 = v49
	v50 = loc7
	___resumeException(v50)
l000FFF9E:
	v51 = 0x16D<32>
	v52 = 0x4CDC<32>
	v53 = Mem0[0x00140044<p32>:word32]
	v54 = ___cxa_atexit(v51, v52, v53)
fn000FFF20_exit:


// fn000FFFB8
// Return size: 0
word32 fn000FFFB8(word32 arg0)
fn000FFFB8_entry:
	// succ:  l000FFFB8
l000FFFB8:
	v12 = Mem0[0x00140030<p32>:word32]
	loc10 = v12
	v13 = 0x43A8<32>
	v14 = Mem0[v13:int8]
	v15 = CONVERT(v14, int8, word32)
	loc1 = v15
	v16 = loc1
	v17 = 0x18<32>
	v18 = v16 << v17
	v19 = 0x18<32>
	v20 = v18 >> v19
	v21 = 0<32>
	v22 = v20 == v21
	loc2 = v22
	// succ:  l000FFFD4
l000FFFD4:
	v23 = loc2
	v23 = v23
	// succ:  l000FFFDA l000FFFDA
l000FFFDA:
	v24 = 0x43A8<32>
	v25 = fn0011EE46(v24)
	loc3 = v25
	v26 = loc3
	v27 = 0<32>
	v28 = v26 == v27
	loc4 = v28
	v29 = loc4
	v30 = v29 == 0<32>
	v30 = v30
	// succ:  l000FFFEF l000FFFEF
l000FFFEF:
	v31 = 0x4CD0<32>
	v32 = 0<64>
	Mem0[v31:word64] = v32
	v33 = 0x4CD0<32>
	v34 = 8<32>
	v35 = v33 + v34
	v36 = 0<32>
	Mem0[v35:word32] = v36
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v38 = 0x199<32>
	v39 = 0x4CD0<32>
	v40 = 0x3990<32>
	v41 = 0xB<32>
	invoke_viii(v38, v39, v40, v41)
	v42 = Mem0[0x00140048<p32>:word32]
	loc5 = v42
	v43 = 0<32>
	Mem0[0x00140048<p32>:word32] = v43
	v44 = loc5
	v45 = 1<32>
	v46 = v44 & v45
	loc6 = v46
	v47 = loc6
	branch !v47 l00100036
	// succ:  l0010002A l00100036
l0010002A:
	v48 = ___cxa_find_matching_catch_2()
	loc7 = v48
	v49 = Mem0[0x00140094<p32>:word32]
	loc8 = v49
	v50 = loc7
	___resumeException(v50)
l00100036:
	v51 = 0x16D<32>
	v52 = 0x4CD0<32>
	v53 = Mem0[0x00140044<p32>:word32]
	v54 = ___cxa_atexit(v51, v52, v53)
fn000FFFB8_exit:


