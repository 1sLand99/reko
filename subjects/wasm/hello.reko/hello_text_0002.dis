// fn000F07BB
// Return size: 0
word64 fn000F07BB(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000F07BB_entry:
	// succ:  l000F07BB
l000F07BB:
	v19 = Mem0[0x00140030<p32>:word32]
	loc16 = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = 0x10<32>
	v22 = v20 + v21
	Mem0[0x00140030<p32>:word32] = v22
	v23 = Mem0[0x00140030<p32>:word32]
	v24 = Mem0[0x00140034<p32>:word32]
	v25 = v23 >= v24
	branch !v25 l000F07D4
	// succ:  l000F07CF l000F07D4
l000F07CF:
	v26 = 0x10<32>
	abortStackOverflow(v26)
	// succ:  l000F07D4
l000F07D4:
	v27 = loc16
	loc10 = v27
	v28 = arg0
	v29 = arg1
	v30 = v28 == v29
	loc11 = v30
	v31 = loc11
	branch !v31 l000F07EF
	// succ:  l000F07E3 l000F07EF
l000F07E3:
	v32 = arg2
	v33 = 4<32>
	Mem0[v32:word32] = v33
	v34 = 0<64>
	loc19 = v34
	goto l000F0890
	// succ:  l000F0890
l000F07EF:
	v35 = ___errno_location()
	loc12 = v35
	v36 = loc12
	v37 = Mem0[v36:word32]
	loc13 = v37
	v38 = loc12
	v39 = 0<32>
	Mem0[v38:word32] = v39
	v40 = fn000EAD0D()
	loc14 = v40
	v41 = arg0
	v42 = loc10
	v43 = arg3
	v44 = loc14
	v45 = fn000D285D(v41, v42, v43, v44)
	loc20 = v45
	v46 = loc12
	v47 = Mem0[v46:word32]
	loc4 = v47
	v48 = loc4
	v49 = 0<32>
	v50 = v48 == v49
	loc5 = v50
	v51 = loc5
	branch !v51 l000F082C
	// succ:  l000F0824 l000F082C
l000F0824:
	v52 = loc12
	v53 = loc13
	Mem0[v52:word32] = v53
	// succ:  l000F082C
l000F082C:
	v54 = loc10
	v55 = Mem0[v54:word32]
	loc6 = v55
	v56 = loc6
	v57 = arg1
	v58 = v56 == v57
	loc7 = v58
	v59 = loc7
	branch !v59 l000F0880
	// succ:  l000F083E l000F0880
l000F083E:
	v60 = loc4
	v61 = 0x22<32>
	v62 = v60 == v61
	loc8 = v62
	v63 = loc8
	branch !v63 l000F087A
	// succ:  l000F0849 l000F087A
l000F0849:
	v64 = arg2
	v65 = 4<32>
	Mem0[v64:word32] = v65
	v66 = loc20
	v67 = 0<64>
	v68 = v66 > v67
	loc9 = v68
	v69 = loc9
	branch !v69 l000F0867
	// succ:  l000F085B l000F0867
l000F085B:
	v70 = 0xFFFFFFFF<64>
	goto l000F0872
	// succ:  l000F0872
l000F0867:
	v71 = 0x80000000<64>
	// succ:  l000F0872
l000F0872:
	loc17 = v71
	v72 = loc17
	loc18 = v72
	goto l000F087E
	// succ:  l000F087E
l000F087A:
	v73 = loc20
	loc18 = v73
	// succ:  l000F087E
l000F087E:
	goto l000F088B
	// succ:  l000F088B
l000F0880:
	v74 = arg2
	v75 = 4<32>
	Mem0[v74:word32] = v75
	v76 = 0<64>
	loc18 = v76
	// succ:  l000F088B
l000F088B:
	v77 = loc18
	loc19 = v77
	// succ:  l000F0890
l000F0890:
	v78 = loc16
	Mem0[0x00140030<p32>:word32] = v78
	v79 = loc19
	return v79
	// succ:  fn000F07BB_exit
l000F0898:
	return v70
	// succ:  fn000F07BB_exit
fn000F07BB_exit:


// fn000F1D53
// Return size: 0
void fn000F1D53(word32 arg0)
fn000F1D53_entry:
	// succ:  l000F1D53
l000F1D53:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn000F1D53_exit
l000F1D5A:
	return
	// succ:  fn000F1D53_exit
fn000F1D53_exit:


// fn000F1D5C
// Return size: 0
void fn000F1D5C(word32 arg0)
fn000F1D5C_entry:
	// succ:  l000F1D5C
l000F1D5C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000F1D5C_exit
l000F1D68:
	return
	// succ:  fn000F1D5C_exit
fn000F1D5C_exit:


// fn000F1D6A
// Return size: 0
word32 fn000F1D6A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F1D6A_entry:
	// succ:  l000F1D6A
l000F1D6A:
	v72 = Mem0[0x00140030<p32>:word32]
	loc75 = v72
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = 0x40<32>
	v75 = v73 + v74
	Mem0[0x00140030<p32>:word32] = v75
	v76 = Mem0[0x00140030<p32>:word32]
	v77 = Mem0[0x00140034<p32>:word32]
	v78 = v76 >= v77
	branch !v78 l000F1D85
	// succ:  l000F1D7F l000F1D85
l000F1D7F:
	v79 = 0x40<32>
	abortStackOverflow(v79)
	// succ:  l000F1D85
l000F1D85:
	v80 = loc75
	v81 = 0x3C<32>
	v82 = v80 + v81
	loc10 = v82
	v83 = loc75
	v84 = 0x38<32>
	v85 = v83 + v84
	loc9 = v85
	v86 = loc75
	v87 = 0x34<32>
	v88 = v86 + v87
	loc8 = v88
	v89 = loc75
	v90 = 0x30<32>
	v91 = v89 + v90
	loc65 = v91
	v92 = loc75
	v93 = 0x2C<32>
	v94 = v92 + v93
	loc71 = v94
	v95 = loc75
	v96 = 0x28<32>
	v97 = v95 + v96
	loc72 = v97
	v98 = loc75
	v99 = 0x24<32>
	v100 = v98 + v99
	loc73 = v100
	v101 = loc75
	v102 = 0x20<32>
	v103 = v101 + v102
	loc15 = v103
	v104 = loc75
	v105 = 8<32>
	v106 = v104 + v105
	loc16 = v106
	v107 = loc75
	loc17 = v107
	v108 = arg3
	v109 = 4<32>
	v110 = v108 + v109
	loc18 = v110
	v111 = loc18
	v112 = Mem0[v111:word32]
	loc19 = v112
	v113 = loc19
	v114 = 1<32>
	v115 = v113 & v114
	loc20 = v115
	v116 = loc20
	v117 = 0<32>
	v118 = v116 == v117
	loc21 = v118
	// succ:  l000F1DE4
l000F1DE4:
	v119 = loc21
	v119 = v119
	// succ:  l000F1DEA l000F1DEA
l000F1DEA:
	v120 = loc65
	v121 = 0xFFFFFFFF<32>
	Mem0[v120:word32] = v121
	v122 = arg0
	v123 = Mem0[v122:word32]
	loc22 = v123
	v124 = loc22
	v125 = 0x10<32>
	v126 = v124 + v125
	loc23 = v126
	v127 = loc23
	v128 = Mem0[v127:word32]
	loc24 = v128
	v129 = arg1
	v130 = Mem0[v129:word32]
	loc25 = v130
	v131 = loc71
	v132 = loc25
	Mem0[v131:word32] = v132
	v133 = arg2
	v134 = Mem0[v133:word32]
	loc26 = v134
	v135 = loc72
	v136 = loc26
	Mem0[v135:word32] = v136
	v137 = loc8
	v138 = loc71
	v139 = Mem0[v138:word32]
	Mem0[v137:word32] = v139
	v140 = loc9
	v141 = loc72
	v142 = Mem0[v141:word32]
	Mem0[v140:word32] = v142
	v143 = arg0
	v144 = loc8
	v145 = loc9
	v146 = arg3
	v147 = arg4
	v148 = loc65
	v149 = loc24
	v150 = 0x1FF<32>
	v151 = v149 & v150
	v152 = 0x900<32>
	v153 = v151 + v152
fn000F1D6A_exit:


// fn000F3B58
// Return size: 0
void fn000F3B58(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F3B58_entry:
	// succ:  l000F3B58
l000F3B58:
	v40 = Mem0[0x00140030<p32>:word32]
	loc42 = v40
	v41 = Mem0[0x00140030<p32>:word32]
	v42 = 0x10<32>
	v43 = v41 + v42
	Mem0[0x00140030<p32>:word32] = v43
	v44 = Mem0[0x00140030<p32>:word32]
	v45 = Mem0[0x00140034<p32>:word32]
	v46 = v44 >= v45
	branch !v46 l000F3B71
	// succ:  l000F3B6C l000F3B71
l000F3B6C:
	v47 = 0x10<32>
	abortStackOverflow(v47)
	// succ:  l000F3B71
l000F3B71:
	v48 = loc42
	loc36 = v48
	v49 = arg1
	v50 = fn000E64CA(v49)
	loc37 = v50
	v51 = loc36
	v52 = loc37
	Mem0[v51:word32] = v52
	v53 = 0<32>
	Mem0[0x00140048<p32>:word32] = v53
	v54 = 0x164<32>
	v55 = loc36
	v56 = 0x4C90<32>
	v57 = invoke_iii(v54, v55, v56)
	loc38 = v57
	v58 = Mem0[0x00140048<p32>:word32]
	loc39 = v58
	v59 = 0<32>
	Mem0[0x00140048<p32>:word32] = v59
	v60 = loc39
	v61 = 1<32>
	v62 = v60 & v61
	loc40 = v62
	v63 = loc40
	branch !v63 l000F3BAC
	// succ:  l000F3BA7 l000F3BAC
l000F3BA7:
	v64 = 8<32>
	loc41 = v64
	goto l000F3CE4
	// succ:  l000F3CE4
l000F3BAC:
	v65 = loc38
	v66 = Mem0[v65:word32]
	loc7 = v66
	v67 = loc7
	v68 = 0x30<32>
	v69 = v67 + v68
	loc8 = v69
	v70 = loc8
	v71 = Mem0[v70:word32]
	loc9 = v71
	v72 = 0<32>
	Mem0[0x00140048<p32>:word32] = v72
	v73 = loc9
	v74 = loc38
	v75 = 0x37AB<32>
	v76 = 0x37CB<32>
	v77 = arg2
	v78 = invoke_iiiii(v73, v74, v75, v76, v77)
	v79 = Mem0[0x00140048<p32>:word32]
	loc10 = v79
	v80 = 0<32>
	Mem0[0x00140048<p32>:word32] = v80
	v81 = loc10
	v82 = 1<32>
	v83 = v81 & v82
	loc11 = v83
	v84 = loc11
	branch !v84 l000F3BEE
	// succ:  l000F3BE9 l000F3BEE
l000F3BE9:
	v85 = 8<32>
	loc41 = v85
	goto l000F3CE3
	// succ:  l000F3CE3
l000F3BEE:
	v86 = 0<32>
	Mem0[0x00140048<p32>:word32] = v86
	v87 = 0x164<32>
	v88 = loc36
	v89 = 0x4C98<32>
	v90 = invoke_iii(v87, v88, v89)
	loc12 = v90
	v91 = Mem0[0x00140048<p32>:word32]
	loc13 = v91
	v92 = 0<32>
	Mem0[0x00140048<p32>:word32] = v92
	v93 = loc13
	v94 = 1<32>
	v95 = v93 & v94
	loc14 = v95
	v96 = loc14
	branch !v96 l000F3C17
	// succ:  l000F3C12 l000F3C17
l000F3C12:
	v97 = 8<32>
	loc41 = v97
	goto l000F3CE2
	// succ:  l000F3CE2
l000F3C17:
	v98 = loc12
	v99 = Mem0[v98:word32]
	loc15 = v99
	v100 = loc15
	v101 = 0xC<32>
	v102 = v100 + v101
	loc16 = v102
	v103 = loc16
	v104 = Mem0[v103:word32]
	loc17 = v104
	v105 = 0<32>
	Mem0[0x00140048<p32>:word32] = v105
	v106 = loc17
	v107 = loc12
	v108 = invoke_ii(v106, v107)
	loc18 = v108
	v109 = Mem0[0x00140048<p32>:word32]
	loc19 = v109
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v111 = loc19
	v112 = 1<32>
	v113 = v111 & v112
	loc20 = v113
	v114 = loc20
	v115 = v114 == 0<32>
	branch !v115 l000F3CD2
	// succ:  l000F3C4C l000F3CD2
l000F3C4C:
	v116 = arg3
	v117 = loc18
	Mem0[v116:word32] = v117
	v118 = loc12
	v119 = Mem0[v118:word32]
	loc21 = v119
	v120 = loc21
	v121 = 0x10<32>
	v122 = v120 + v121
	loc22 = v122
	v123 = loc22
	v124 = Mem0[v123:word32]
	loc23 = v124
	v125 = 0<32>
	Mem0[0x00140048<p32>:word32] = v125
	v126 = loc23
	v127 = loc12
	v128 = invoke_ii(v126, v127)
	loc24 = v128
	v129 = Mem0[0x00140048<p32>:word32]
	loc25 = v129
	v130 = 0<32>
	Mem0[0x00140048<p32>:word32] = v130
	v131 = loc25
	v132 = 1<32>
	v133 = v131 & v132
	loc26 = v133
	v134 = loc26
	v135 = v134 == 0<32>
	branch !v135 l000F3CD1
	// succ:  l000F3C88 l000F3CD1
l000F3C88:
	v136 = arg4
	v137 = loc24
	Mem0[v136:word32] = v137
	v138 = loc12
	v139 = Mem0[v138:word32]
	loc27 = v139
	v140 = loc27
	v141 = 0x14<32>
	v142 = v140 + v141
	loc28 = v142
	v143 = loc28
	v144 = Mem0[v143:word32]
	loc29 = v144
	v145 = 0<32>
	Mem0[0x00140048<p32>:word32] = v145
	v146 = loc29
	v147 = arg0
	v148 = loc12
	invoke_vii(v146, v147, v148)
	v149 = Mem0[0x00140048<p32>:word32]
	loc30 = v149
	v150 = 0<32>
	Mem0[0x00140048<p32>:word32] = v150
	v151 = loc30
	v152 = 1<32>
	v153 = v151 & v152
	loc31 = v153
	v154 = loc31
	v155 = v154 == 0<32>
	branch !v155 l000F3CD0
	// succ:  l000F3CC4 l000F3CD0
l000F3CC4:
	v156 = loc37
	v157 = fn0011B43F(v156)
	v158 = loc42
	Mem0[0x00140030<p32>:word32] = v158
	return
	// succ:  fn000F3B58_exit
l000F3CD0:
	// succ:  l000F3CD1
l000F3CD1:
	// succ:  l000F3CD2
l000F3CD2:
	v159 = ___cxa_find_matching_catch_2()
	loc34 = v159
	v160 = Mem0[0x00140094<p32>:word32]
	loc35 = v160
	v161 = loc34
	loc5 = v161
	v162 = loc35
	loc6 = v162
	// succ:  l000F3CE2
l000F3CE2:
	// succ:  l000F3CE3
l000F3CE3:
	// succ:  l000F3CE4
l000F3CE4:
	v163 = loc41
	v164 = 8<32>
	v165 = v163 == v164
	branch !v165 l000F3CFD
	// succ:  l000F3CEC l000F3CFD
l000F3CEC:
	v166 = ___cxa_find_matching_catch_2()
	loc32 = v166
	v167 = Mem0[0x00140094<p32>:word32]
	loc33 = v167
	v168 = loc32
	loc5 = v168
	v169 = loc33
	loc6 = v169
	// succ:  l000F3CFD
l000F3CFD:
	v170 = loc37
	v171 = fn0011B43F(v170)
	v172 = loc5
	___resumeException(v172)
	// succ:  l000F3D07
l000F3D07:
	return
	// succ:  fn000F3B58_exit
fn000F3B58_exit:


// fn000F5C88
// Return size: 0
void fn000F5C88(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000F5C88_entry:
	// succ:  l000F5C88
l000F5C88:
	v34 = Mem0[0x00140030<p32>:word32]
	loc35 = v34
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = 0x10<32>
	v37 = v35 + v36
	Mem0[0x00140030<p32>:word32] = v37
	v38 = Mem0[0x00140030<p32>:word32]
	v39 = Mem0[0x00140034<p32>:word32]
	v40 = v38 >= v39
	branch !v40 l000F5CA1
	// succ:  l000F5C9C l000F5CA1
l000F5C9C:
	v41 = 0x10<32>
	abortStackOverflow(v41)
	// succ:  l000F5CA1
l000F5CA1:
	v42 = loc35
	loc28 = v42
	v43 = arg1
	v44 = fn000E64CA(v43)
	loc29 = v44
	v45 = loc28
	v46 = loc29
	Mem0[v45:word32] = v46
	v47 = 0<32>
	Mem0[0x00140048<p32>:word32] = v47
	v48 = 0x164<32>
	v49 = loc28
	v50 = 0x4C90<32>
	v51 = invoke_iii(v48, v49, v50)
	loc30 = v51
	v52 = Mem0[0x00140048<p32>:word32]
	loc31 = v52
	v53 = 0<32>
	Mem0[0x00140048<p32>:word32] = v53
	v54 = loc31
	v55 = 1<32>
	v56 = v54 & v55
	loc32 = v56
	v57 = loc32
	branch !v57 l000F5CDC
	// succ:  l000F5CD7 l000F5CDC
l000F5CD7:
	v58 = 7<32>
	loc34 = v58
	goto l000F5DD7
	// succ:  l000F5DD7
l000F5CDC:
	v59 = loc30
	v60 = Mem0[v59:word32]
	loc33 = v60
	v61 = loc33
	v62 = 0x30<32>
	v63 = v61 + v62
	loc6 = v63
	v64 = loc6
	v65 = Mem0[v64:word32]
	loc7 = v65
	v66 = 0<32>
	Mem0[0x00140048<p32>:word32] = v66
	v67 = loc7
	v68 = loc30
	v69 = 0x37AB<32>
	v70 = 0x37C5<32>
	v71 = arg2
	v72 = invoke_iiiii(v67, v68, v69, v70, v71)
	v73 = Mem0[0x00140048<p32>:word32]
	loc8 = v73
	v74 = 0<32>
	Mem0[0x00140048<p32>:word32] = v74
	v75 = loc8
	v76 = 1<32>
	v77 = v75 & v76
	loc9 = v77
	v78 = loc9
	branch !v78 l000F5D1E
	// succ:  l000F5D19 l000F5D1E
l000F5D19:
	v79 = 7<32>
	loc34 = v79
	goto l000F5DD6
	// succ:  l000F5DD6
l000F5D1E:
	v80 = 0<32>
	Mem0[0x00140048<p32>:word32] = v80
	v81 = 0x164<32>
	v82 = loc28
	v83 = 0x4C98<32>
	v84 = invoke_iii(v81, v82, v83)
	loc10 = v84
	v85 = Mem0[0x00140048<p32>:word32]
	loc11 = v85
	v86 = 0<32>
	Mem0[0x00140048<p32>:word32] = v86
	v87 = loc11
	v88 = 1<32>
	v89 = v87 & v88
	loc12 = v89
	v90 = loc12
	branch !v90 l000F5D47
	// succ:  l000F5D42 l000F5D47
l000F5D42:
	v91 = 7<32>
	loc34 = v91
	goto l000F5DD5
	// succ:  l000F5DD5
l000F5D47:
	v92 = loc10
	v93 = Mem0[v92:word32]
	loc13 = v93
	v94 = loc13
	v95 = 0x10<32>
	v96 = v94 + v95
	loc14 = v96
	v97 = loc14
	v98 = Mem0[v97:word32]
	loc15 = v98
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v100 = loc15
	v101 = loc10
	v102 = invoke_ii(v100, v101)
	loc16 = v102
	v103 = Mem0[0x00140048<p32>:word32]
	loc17 = v103
	v104 = 0<32>
	Mem0[0x00140048<p32>:word32] = v104
	v105 = loc17
	v106 = 1<32>
	v107 = v105 & v106
	loc18 = v107
	v108 = loc18
	v109 = v108 == 0<32>
	branch !v109 l000F5DC5
	// succ:  l000F5D7C l000F5DC5
l000F5D7C:
	v110 = arg3
	v111 = loc16
	Mem0[v110:word32] = v111
	v112 = loc10
	v113 = Mem0[v112:word32]
	loc19 = v113
	v114 = loc19
	v115 = 0x14<32>
	v116 = v114 + v115
	loc20 = v116
	v117 = loc20
	v118 = Mem0[v117:word32]
	loc21 = v118
	v119 = 0<32>
	Mem0[0x00140048<p32>:word32] = v119
	v120 = loc21
	v121 = arg0
	v122 = loc10
	invoke_vii(v120, v121, v122)
	v123 = Mem0[0x00140048<p32>:word32]
	loc22 = v123
	v124 = 0<32>
	Mem0[0x00140048<p32>:word32] = v124
	v125 = loc22
	v126 = 1<32>
	v127 = v125 & v126
	loc23 = v127
	v128 = loc23
	v129 = v128 == 0<32>
	branch !v129 l000F5DC4
	// succ:  l000F5DB8 l000F5DC4
l000F5DB8:
	v130 = loc29
	v131 = fn0011B43F(v130)
	v132 = loc35
	Mem0[0x00140030<p32>:word32] = v132
	return
	// succ:  fn000F5C88_exit
l000F5DC4:
	// succ:  l000F5DC5
l000F5DC5:
	v133 = ___cxa_find_matching_catch_2()
	loc26 = v133
	v134 = Mem0[0x00140094<p32>:word32]
	loc27 = v134
	v135 = loc26
	loc4 = v135
	v136 = loc27
	loc5 = v136
	// succ:  l000F5DD5
l000F5DD5:
	// succ:  l000F5DD6
l000F5DD6:
	// succ:  l000F5DD7
l000F5DD7:
	v137 = loc34
	v138 = 7<32>
	v139 = v137 == v138
	branch !v139 l000F5DF0
	// succ:  l000F5DDF l000F5DF0
l000F5DDF:
	v140 = ___cxa_find_matching_catch_2()
	loc24 = v140
	v141 = Mem0[0x00140094<p32>:word32]
	loc25 = v141
	v142 = loc24
	loc4 = v142
	v143 = loc25
	loc5 = v143
	// succ:  l000F5DF0
l000F5DF0:
	v144 = loc29
	v145 = fn0011B43F(v144)
	v146 = loc4
	___resumeException(v146)
	// succ:  l000F5DFA
l000F5DFA:
	return
	// succ:  fn000F5C88_exit
fn000F5C88_exit:


// fn000F95C3
// Return size: 0
void fn000F95C3(word32 arg0)
fn000F95C3_entry:
	// succ:  l000F95C3
l000F95C3:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn000F95C3_exit
l000F95CA:
	return
	// succ:  fn000F95C3_exit
fn000F95C3_exit:


// fn000F95CC
// Return size: 0
void fn000F95CC(word32 arg0)
fn000F95CC_entry:
	// succ:  l000F95CC
l000F95CC:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000F95CC_exit
l000F95D8:
	return
	// succ:  fn000F95CC_exit
fn000F95CC_exit:


// fn000F95DA
// Return size: 0
word32 fn000F95DA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F95DA_entry:
	// succ:  l000F95DA
l000F95DA:
	v71 = Mem0[0x00140030<p32>:word32]
	loc73 = v71
	v72 = Mem0[0x00140030<p32>:word32]
	v73 = 0x20<32>
	v74 = v72 + v73
	Mem0[0x00140030<p32>:word32] = v74
	v75 = Mem0[0x00140030<p32>:word32]
	v76 = Mem0[0x00140034<p32>:word32]
	v77 = v75 >= v76
	branch !v77 l000F95F3
	// succ:  l000F95EE l000F95F3
l000F95EE:
	v78 = 0x20<32>
	abortStackOverflow(v78)
	// succ:  l000F95F3
l000F95F3:
	v79 = loc73
	v80 = 0x14<32>
	v81 = v79 + v80
	loc7 = v81
	v82 = loc73
	v83 = 0x10<32>
	v84 = v82 + v83
	loc54 = v84
	v85 = loc73
	v86 = 0xC<32>
	v87 = v85 + v86
	loc65 = v87
	v88 = loc73
	loc69 = v88
	v89 = arg2
	v90 = 4<32>
	v91 = v89 + v90
	loc70 = v91
	v92 = loc70
	v93 = Mem0[v92:word32]
	loc71 = v93
	v94 = loc71
	v95 = 1<32>
	v96 = v94 & v95
	loc14 = v96
	v97 = loc14
	v98 = 0<32>
	v99 = v97 == v98
	loc15 = v99
	// succ:  l000F9628
l000F9628:
	v100 = loc15
	v100 = v100
	// succ:  l000F962E l000F962E
l000F962E:
	v101 = arg0
	v102 = Mem0[v101:word32]
	loc16 = v102
	v103 = loc16
	v104 = 0x18<32>
	v105 = v103 + v104
	loc17 = v105
	v106 = loc17
	v107 = Mem0[v106:word32]
	loc18 = v107
	v108 = arg1
	v109 = Mem0[v108:word32]
	loc19 = v109
	v110 = loc54
	v111 = loc19
	Mem0[v110:word32] = v111
	v112 = arg4
	v113 = 1<32>
	v114 = v112 & v113
	loc20 = v114
	v115 = loc7
	v116 = loc54
	v117 = Mem0[v116:word32]
	Mem0[v115:word32] = v117
	v118 = arg0
	v119 = loc7
	v120 = arg2
	v121 = arg3
	v122 = loc20
	v123 = loc18
	v124 = 0x1FF<32>
	v125 = v123 & v124
	v126 = 0x1D20<32>
	v127 = v125 + v126
fn000F95DA_exit:


// fn000FA7EA
// Return size: 0
word32 fn000FA7EA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FA7EA_entry:
	// succ:  l000FA7EA
l000FA7EA:
	v33 = Mem0[0x00140030<p32>:word32]
	loc35 = v33
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = 0x60<32>
	v36 = v34 + v35
	Mem0[0x00140030<p32>:word32] = v36
	v37 = Mem0[0x00140030<p32>:word32]
	v38 = Mem0[0x00140034<p32>:word32]
	v39 = v37 >= v38
	branch !v39 l000FA805
	// succ:  l000FA7FF l000FA805
l000FA7FF:
	v40 = 0x60<32>
	abortStackOverflow(v40)
	// succ:  l000FA805
l000FA805:
	v41 = loc35
	v42 = 0xC<32>
	v43 = v41 + v42
	loc6 = v43
	v44 = loc35
	loc33 = v44
	v45 = loc35
	v46 = 0x4C<32>
	v47 = v45 + v46
	loc28 = v47
	v48 = loc35
	v49 = 0x38<32>
	v50 = v48 + v49
	loc29 = v50
	v51 = loc35
	v52 = 0x10<32>
	v53 = v51 + v52
	loc30 = v53
	v54 = loc35
	v55 = 8<32>
	v56 = v54 + v55
	loc31 = v56
	v57 = loc35
	v58 = 4<32>
	v59 = v57 + v58
	loc32 = v59
	v60 = loc28
	v61 = 0x389E<32>
	v62 = Mem0[v61:word32]
	Mem0[v60:word32] = v62
	v63 = loc28
	v64 = 4<32>
	v65 = v63 + v64
	v66 = 0x389E<32>
	v67 = 4<32>
	v68 = v66 + v67
	v69 = Mem0[v68:int16]
	v70 = CONVERT(v69, int16, word32)
	v71 = SLICE(v70, word16, 0)
	Mem0[v65:word16] = v71
	v72 = fn000EAD0D()
	loc7 = v72
	v73 = loc33
	v74 = arg4
	Mem0[v73:word32] = v74
	v75 = loc29
	v76 = 0x14<32>
	v77 = loc7
	v78 = loc28
	v79 = loc33
	v80 = fn000FA95B(v75, v76, v77, v78, v79)
	loc8 = v80
	v81 = loc29
	v82 = loc8
	v83 = v81 + v82
	loc9 = v83
	v84 = loc29
	v85 = loc9
	v86 = arg2
	v87 = fn000FA9D7(v84, v85, v86)
	loc10 = v87
	v88 = arg2
	v89 = fn000E64CA(v88)
	loc11 = v89
	v90 = loc31
	v91 = loc11
	Mem0[v90:word32] = v91
	v92 = 0<32>
	Mem0[0x00140048<p32>:word32] = v92
	v93 = 0x164<32>
	v94 = loc31
	v95 = 0x4C70<32>
	v96 = invoke_iii(v93, v94, v95)
	loc12 = v96
	v97 = Mem0[0x00140048<p32>:word32]
	loc13 = v97
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = loc13
	v100 = 1<32>
	v101 = v99 & v100
	loc14 = v101
	v102 = loc14
	branch !v102 l000FA8C4
	// succ:  l000FA8B1 l000FA8C4
l000FA8B1:
	v103 = ___cxa_find_matching_catch_2()
	loc26 = v103
	v104 = Mem0[0x00140094<p32>:word32]
	loc27 = v104
	v105 = loc11
	v106 = fn0011B43F(v105)
	v107 = loc26
	___resumeException(v107)
l000FA8C4:
	v108 = loc11
	v109 = fn0011B43F(v108)
	v110 = loc12
	v111 = Mem0[v110:word32]
	loc15 = v111
	v112 = loc15
	v113 = 0x20<32>
	v114 = v112 + v113
	loc16 = v114
	v115 = loc16
	v116 = Mem0[v115:word32]
	loc17 = v116
	v117 = loc12
	v118 = loc29
	v119 = loc9
	v120 = loc30
	v121 = loc17
	v122 = 0x1FF<32>
	v123 = v121 & v122
	v124 = 0x2520<32>
	v125 = v123 + v124
fn000FA7EA_exit:


// fn000FAEBB
// Return size: 0
void fn000FAEBB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FAEBB_entry:
	// succ:  l000FAEBB
l000FAEBB:
	v211 = Mem0[0x00140030<p32>:word32]
	loc215 = v211
	v212 = Mem0[0x00140030<p32>:word32]
	v213 = 0x10<32>
	v214 = v212 + v213
	Mem0[0x00140030<p32>:word32] = v214
	v215 = Mem0[0x00140030<p32>:word32]
	v216 = Mem0[0x00140034<p32>:word32]
	v217 = v215 >= v216
	branch !v217 l000FAED5
	// succ:  l000FAED0 l000FAED5
l000FAED0:
	v218 = 0x10<32>
	abortStackOverflow(v218)
	// succ:  l000FAED5
l000FAED5:
	v219 = loc215
	loc179 = v219
	v220 = arg6
	v221 = 0x4C70<32>
	v222 = fn000EA9F7(v220, v221)
	loc190 = v222
	v223 = arg6
	v224 = 0x4C80<32>
	v225 = fn000EA9F7(v223, v224)
	loc201 = v225
	v226 = loc201
	v227 = Mem0[v226:word32]
	loc27 = v227
	v228 = loc27
	v229 = 0x14<32>
	v230 = v228 + v229
	loc38 = v230
	v231 = loc38
	v232 = Mem0[v231:word32]
	loc49 = v232
	v233 = loc179
	v234 = loc201
	v235 = loc49
	v236 = 0x1FF<32>
	v237 = v235 & v236
	v238 = 0x700<32>
	v239 = v237 + v238
fn000FAEBB_exit:


// fn000FBA39
// Return size: 0
void fn000FBA39(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FBA39_entry:
	// succ:  l000FBA39
l000FBA39:
	v146 = Mem0[0x00140030<p32>:word32]
	loc150 = v146
	v147 = Mem0[0x00140030<p32>:word32]
	v148 = 0x10<32>
	v149 = v147 + v148
	Mem0[0x00140030<p32>:word32] = v149
	v150 = Mem0[0x00140030<p32>:word32]
	v151 = Mem0[0x00140034<p32>:word32]
	v152 = v150 >= v151
	branch !v152 l000FBA53
	// succ:  l000FBA4E l000FBA53
l000FBA4E:
	v153 = 0x10<32>
	abortStackOverflow(v153)
	// succ:  l000FBA53
l000FBA53:
	v154 = loc150
	loc114 = v154
	v155 = arg6
	v156 = 0x4C70<32>
	v157 = fn000EA9F7(v155, v156)
	loc125 = v157
	v158 = arg6
	v159 = 0x4C80<32>
	v160 = fn000EA9F7(v158, v159)
	loc136 = v160
	v161 = loc136
	v162 = Mem0[v161:word32]
	loc23 = v162
	v163 = loc23
	v164 = 0x14<32>
	v165 = v163 + v164
	loc34 = v165
	v166 = loc34
	v167 = Mem0[v166:word32]
	loc45 = v167
	v168 = loc114
	v169 = loc136
	v170 = loc45
	v171 = 0x1FF<32>
	v172 = v170 & v171
	v173 = 0x700<32>
	v174 = v172 + v173
fn000FBA39_exit:


// fn000FC0C8
// Return size: 0
void fn000FC0C8(word32 arg0)
fn000FC0C8_entry:
	// succ:  l000FC0C8
l000FC0C8:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn000FC0C8_exit
l000FC0CF:
	return
	// succ:  fn000FC0C8_exit
fn000FC0C8_exit:


// fn000FC0D1
// Return size: 0
void fn000FC0D1(word32 arg0)
fn000FC0D1_entry:
	// succ:  l000FC0D1
l000FC0D1:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000FC0D1_exit
l000FC0DD:
	return
	// succ:  fn000FC0D1_exit
fn000FC0D1_exit:


// fn000FC0DF
// Return size: 0
word32 fn000FC0DF(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FC0DF_entry:
	// succ:  l000FC0DF
l000FC0DF:
	v72 = Mem0[0x00140030<p32>:word32]
	loc74 = v72
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = 0x20<32>
	v75 = v73 + v74
	Mem0[0x00140030<p32>:word32] = v75
	v76 = Mem0[0x00140030<p32>:word32]
	v77 = Mem0[0x00140034<p32>:word32]
	v78 = v76 >= v77
	branch !v78 l000FC0F8
	// succ:  l000FC0F3 l000FC0F8
l000FC0F3:
	v79 = 0x20<32>
	abortStackOverflow(v79)
	// succ:  l000FC0F8
l000FC0F8:
	v80 = loc74
	v81 = 0x14<32>
	v82 = v80 + v81
	loc8 = v82
	v83 = loc74
	v84 = 0x10<32>
	v85 = v83 + v84
	loc55 = v85
	v86 = loc74
	v87 = 0xC<32>
	v88 = v86 + v87
	loc66 = v88
	v89 = loc74
	loc70 = v89
	v90 = arg2
	v91 = 4<32>
	v92 = v90 + v91
	loc71 = v92
	v93 = loc71
	v94 = Mem0[v93:word32]
	loc72 = v94
	v95 = loc72
	v96 = 1<32>
	v97 = v95 & v96
	loc15 = v97
	v98 = loc15
	v99 = 0<32>
	v100 = v98 == v99
	loc16 = v100
	// succ:  l000FC12D
l000FC12D:
	v101 = loc16
	v101 = v101
	// succ:  l000FC133 l000FC133
l000FC133:
	v102 = arg0
	v103 = Mem0[v102:word32]
	loc17 = v103
	v104 = loc17
	v105 = 0x18<32>
	v106 = v104 + v105
	loc18 = v106
	v107 = loc18
	v108 = Mem0[v107:word32]
	loc19 = v108
	v109 = arg1
	v110 = Mem0[v109:word32]
	loc20 = v110
	v111 = loc55
	v112 = loc20
	Mem0[v111:word32] = v112
	v113 = arg4
	v114 = 1<32>
	v115 = v113 & v114
	loc21 = v115
	v116 = loc8
	v117 = loc55
	v118 = Mem0[v117:word32]
	Mem0[v116:word32] = v118
	v119 = arg0
	v120 = loc8
	v121 = arg2
	v122 = arg3
	v123 = loc21
	v124 = loc19
	v125 = 0x1FF<32>
	v126 = v124 & v125
	v127 = 0x1D20<32>
	v128 = v126 + v127
fn000FC0DF_exit:


// fn000FD2EB
// Return size: 0
word32 fn000FD2EB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FD2EB_entry:
	// succ:  l000FD2EB
l000FD2EB:
	v33 = Mem0[0x00140030<p32>:word32]
	loc35 = v33
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = 0xC0<32>
	v36 = v34 + v35
	Mem0[0x00140030<p32>:word32] = v36
	v37 = Mem0[0x00140030<p32>:word32]
	v38 = Mem0[0x00140034<p32>:word32]
	v39 = v37 >= v38
	branch !v39 l000FD306
	// succ:  l000FD300 l000FD306
l000FD300:
	v40 = 0xC0<32>
	abortStackOverflow(v40)
	// succ:  l000FD306
l000FD306:
	v41 = loc35
	v42 = 0xA0<32>
	v43 = v41 + v42
	loc6 = v43
	v44 = loc35
	loc33 = v44
	v45 = loc35
	v46 = 0xB8<32>
	v47 = v45 + v46
	loc28 = v47
	v48 = loc35
	v49 = 0xA4<32>
	v50 = v48 + v49
	loc29 = v50
	v51 = loc35
	v52 = 0xC<32>
	v53 = v51 + v52
	loc30 = v53
	v54 = loc35
	v55 = 8<32>
	v56 = v54 + v55
	loc31 = v56
	v57 = loc35
	v58 = 4<32>
	v59 = v57 + v58
	loc32 = v59
	v60 = loc28
	v61 = 0x389E<32>
	v62 = Mem0[v61:word32]
	Mem0[v60:word32] = v62
	v63 = loc28
	v64 = 4<32>
	v65 = v63 + v64
	v66 = 0x389E<32>
	v67 = 4<32>
	v68 = v66 + v67
	v69 = Mem0[v68:int16]
	v70 = CONVERT(v69, int16, word32)
	v71 = SLICE(v70, word16, 0)
	Mem0[v65:word16] = v71
	v72 = fn000EAD0D()
	loc7 = v72
	v73 = loc33
	v74 = arg4
	Mem0[v73:word32] = v74
	v75 = loc29
	v76 = 0x14<32>
	v77 = loc7
	v78 = loc28
	v79 = loc33
	v80 = fn000FA95B(v75, v76, v77, v78, v79)
	loc8 = v80
	v81 = loc29
	v82 = loc8
	v83 = v81 + v82
	loc9 = v83
	v84 = loc29
	v85 = loc9
	v86 = arg2
	v87 = fn000FA9D7(v84, v85, v86)
	loc10 = v87
	v88 = arg2
	v89 = fn000E64CA(v88)
	loc11 = v89
	v90 = loc31
	v91 = loc11
	Mem0[v90:word32] = v91
	v92 = 0<32>
	Mem0[0x00140048<p32>:word32] = v92
	v93 = 0x164<32>
	v94 = loc31
	v95 = 0x4C90<32>
	v96 = invoke_iii(v93, v94, v95)
	loc12 = v96
	v97 = Mem0[0x00140048<p32>:word32]
	loc13 = v97
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = loc13
	v100 = 1<32>
	v101 = v99 & v100
	loc14 = v101
	v102 = loc14
	branch !v102 l000FD3C7
	// succ:  l000FD3B4 l000FD3C7
l000FD3B4:
	v103 = ___cxa_find_matching_catch_2()
	loc26 = v103
	v104 = Mem0[0x00140094<p32>:word32]
	loc27 = v104
	v105 = loc11
	v106 = fn0011B43F(v105)
	v107 = loc26
	___resumeException(v107)
l000FD3C7:
	v108 = loc11
	v109 = fn0011B43F(v108)
	v110 = loc12
	v111 = Mem0[v110:word32]
	loc15 = v111
	v112 = loc15
	v113 = 0x30<32>
	v114 = v112 + v113
	loc16 = v114
	v115 = loc16
	v116 = Mem0[v115:word32]
	loc17 = v116
	v117 = loc12
	v118 = loc29
	v119 = loc9
	v120 = loc30
	v121 = loc17
	v122 = 0x1FF<32>
	v123 = v121 & v122
	v124 = 0x2520<32>
	v125 = v123 + v124
fn000FD2EB_exit:


// fn000FD465
// Return size: 0
word32 fn000FD465(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FD465_entry:
	// succ:  l000FD465
l000FD465:
	v50 = Mem0[0x00140030<p32>:word32]
	loc53 = v50
	v51 = Mem0[0x00140030<p32>:word32]
	v52 = 0x10<32>
	v53 = v51 + v52
	Mem0[0x00140030<p32>:word32] = v53
	v54 = Mem0[0x00140030<p32>:word32]
	v55 = Mem0[0x00140034<p32>:word32]
	v56 = v54 >= v55
	branch !v56 l000FD47E
	// succ:  l000FD479 l000FD47E
l000FD479:
	v57 = 0x10<32>
	abortStackOverflow(v57)
	// succ:  l000FD47E
l000FD47E:
	v58 = loc53
	loc48 = v58
	v59 = arg0
	v60 = Mem0[v59:word32]
	loc49 = v60
	v61 = loc49
	v62 = 0<32>
	v63 = v61 == v62
	loc50 = v63
	// succ:  l000FD490
l000FD490:
	v64 = loc50
	branch !v64 l000FD49B
	// succ:  l000FD496 l000FD49B
l000FD496:
	v65 = 0<32>
	loc7 = v65
l000FD49B:
	v66 = arg3
	loc51 = v66
	v67 = arg1
	loc8 = v67
	v68 = loc51
	v69 = loc8
	v70 = v68 - v69
	loc9 = v70
	v71 = loc9
	v72 = 2<32>
	v73 = v71 >> v72
	loc10 = v73
	v74 = arg4
	v75 = 0xC<32>
	v76 = v74 + v75
	loc11 = v76
	v77 = loc11
	v78 = Mem0[v77:word32]
	loc12 = v78
	v79 = loc12
	v80 = loc10
	v81 = v79 > v80
	loc13 = v81
	v82 = loc12
	v83 = loc10
	v84 = v82 - v83
	loc14 = v84
	v85 = loc13
	branch !v85 l000FD4D4
	// succ:  l000FD4D1 l000FD4D4
l000FD4D1:
	v86 = loc14
	goto l000FD4D6
	// succ:  l000FD4D6
l000FD4D4:
	v87 = 0<32>
	// succ:  l000FD4D6
l000FD4D6:
	loc6 = v87
	v88 = arg2
	loc15 = v88
	v89 = loc15
	v90 = loc8
	v91 = v89 - v90
	loc16 = v91
	v92 = loc16
	v93 = 2<32>
	v94 = v92 >> v93
	loc17 = v94
	v95 = loc16
	v96 = 0<32>
	v97 = v95 > v96
	loc18 = v97
	v98 = loc18
	v98 = v98
	// succ:  l000FD4F6 l000FD4F6
l000FD4F6:
	v99 = loc49
	v100 = Mem0[v99:word32]
	loc19 = v100
	v101 = loc19
	v102 = 0x30<32>
	v103 = v101 + v102
	loc20 = v103
	v104 = loc20
	v105 = Mem0[v104:word32]
	loc21 = v105
	v106 = loc49
	v107 = arg1
	v108 = loc17
	v109 = loc21
	v110 = 0x1FF<32>
	v111 = v109 & v110
	v112 = 0xF20<32>
	v113 = v111 + v112
fn000FD465_exit:


// fn000FD67D
// Return size: 0
void fn000FD67D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FD67D_entry:
	// succ:  l000FD67D
l000FD67D:
	v211 = Mem0[0x00140030<p32>:word32]
	loc215 = v211
	v212 = Mem0[0x00140030<p32>:word32]
	v213 = 0x10<32>
	v214 = v212 + v213
	Mem0[0x00140030<p32>:word32] = v214
	v215 = Mem0[0x00140030<p32>:word32]
	v216 = Mem0[0x00140034<p32>:word32]
	v217 = v215 >= v216
	branch !v217 l000FD697
	// succ:  l000FD692 l000FD697
l000FD692:
	v218 = 0x10<32>
	abortStackOverflow(v218)
	// succ:  l000FD697
l000FD697:
	v219 = loc215
	loc179 = v219
	v220 = arg6
	v221 = 0x4C90<32>
	v222 = fn000EA9F7(v220, v221)
	loc190 = v222
	v223 = arg6
	v224 = 0x4C98<32>
	v225 = fn000EA9F7(v223, v224)
	loc201 = v225
	v226 = loc201
	v227 = Mem0[v226:word32]
	loc27 = v227
	v228 = loc27
	v229 = 0x14<32>
	v230 = v228 + v229
	loc38 = v230
	v231 = loc38
	v232 = Mem0[v231:word32]
	loc49 = v232
	v233 = loc179
	v234 = loc201
	v235 = loc49
	v236 = 0x1FF<32>
	v237 = v235 & v236
	v238 = 0x700<32>
	v239 = v237 + v238
fn000FD67D_exit:


// fn000FE09E
// Return size: 0
void fn000FE09E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FE09E_entry:
	// succ:  l000FE09E
l000FE09E:
	v143 = Mem0[0x00140030<p32>:word32]
	loc147 = v143
	v144 = Mem0[0x00140030<p32>:word32]
	v145 = 0x10<32>
	v146 = v144 + v145
	Mem0[0x00140030<p32>:word32] = v146
	v147 = Mem0[0x00140030<p32>:word32]
	v148 = Mem0[0x00140034<p32>:word32]
	v149 = v147 >= v148
	branch !v149 l000FE0B8
	// succ:  l000FE0B3 l000FE0B8
l000FE0B3:
	v150 = 0x10<32>
	abortStackOverflow(v150)
	// succ:  l000FE0B8
l000FE0B8:
	v151 = loc147
	loc111 = v151
	v152 = arg6
	v153 = 0x4C90<32>
	v154 = fn000EA9F7(v152, v153)
	loc122 = v154
	v155 = arg6
	v156 = 0x4C98<32>
	v157 = fn000EA9F7(v155, v156)
	loc133 = v157
	v158 = loc133
	v159 = Mem0[v158:word32]
	loc22 = v159
	v160 = loc22
	v161 = 0x14<32>
	v162 = v160 + v161
	loc33 = v162
	v163 = loc33
	v164 = Mem0[v163:word32]
	loc44 = v164
	v165 = loc111
	v166 = loc133
	v167 = loc44
	v168 = 0x1FF<32>
	v169 = v167 & v168
	v170 = 0x700<32>
	v171 = v169 + v170
fn000FE09E_exit:


// fn000FE711
// Return size: 0
void fn000FE711(word32 arg0)
fn000FE711_entry:
	// succ:  l000FE711
l000FE711:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	return
	// succ:  fn000FE711_exit
l000FE718:
	return
	// succ:  fn000FE711_exit
fn000FE711_exit:


// fn000FE71A
// Return size: 0
void fn000FE71A(word32 arg0)
fn000FE71A_entry:
	// succ:  l000FE71A
l000FE71A:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000FE71A_exit
l000FE726:
	return
	// succ:  fn000FE71A_exit
fn000FE71A_exit:


// fn000FE7B7
// Return size: 0
word32 fn000FE7B7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE7B7_entry:
	// succ:  l000FE7B7
l000FE7B7:
	v26 = Mem0[0x00140030<p32>:word32]
	loc29 = v26
	v27 = Mem0[0x00140030<p32>:word32]
	v28 = 0x10<32>
	v29 = v27 + v28
	Mem0[0x00140030<p32>:word32] = v29
	v30 = Mem0[0x00140030<p32>:word32]
	v31 = Mem0[0x00140034<p32>:word32]
	v32 = v30 >= v31
	branch !v32 l000FE7D0
	// succ:  l000FE7CB l000FE7D0
l000FE7CB:
	v33 = 0x10<32>
	abortStackOverflow(v33)
	// succ:  l000FE7D0
l000FE7D0:
	v34 = loc29
	v35 = 0xC<32>
	v36 = v34 + v35
	loc7 = v36
	v37 = loc29
	v38 = 8<32>
	v39 = v37 + v38
	loc6 = v39
	v40 = loc29
	v41 = 4<32>
	v42 = v40 + v41
	loc24 = v42
	v43 = loc29
	loc25 = v43
	v44 = arg0
	v45 = 8<32>
	v46 = v44 + v45
	loc26 = v46
	v47 = loc26
	v48 = Mem0[v47:word32]
	loc27 = v48
	v49 = loc27
	v50 = 0x14<32>
	v51 = v49 + v50
	loc8 = v51
	v52 = loc8
	v53 = Mem0[v52:word32]
	loc9 = v53
	v54 = loc26
	v55 = loc9
	v56 = 0x1FF<32>
	v57 = v55 & v56
	v58 = 0xB00<32>
	v59 = v57 + v58
fn000FE7B7_exit:


// fn000FEAE3
// Return size: 0
word32 fn000FEAE3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn000FEAE3_entry:
	// succ:  l000FEAE3
l000FEAE3:
	v162 = Mem0[0x00140030<p32>:word32]
	loc167 = v162
	v163 = Mem0[0x00140030<p32>:word32]
	v164 = 0x100<32>
	v165 = v163 + v164
	Mem0[0x00140030<p32>:word32] = v165
	v166 = Mem0[0x00140030<p32>:word32]
	v167 = Mem0[0x00140034<p32>:word32]
	v168 = v166 >= v167
	branch !v168 l000FEAFF
	// succ:  l000FEAF9 l000FEAFF
l000FEAF9:
	v169 = 0x100<32>
	abortStackOverflow(v169)
	// succ:  l000FEAFF
l000FEAFF:
	v170 = loc167
	v171 = 0xF8<32>
	v172 = v170 + v171
	loc32 = v172
	v173 = loc167
	v174 = 0xF4<32>
	v175 = v173 + v174
	loc30 = v175
	v176 = loc167
	v177 = 0xF0<32>
	v178 = v176 + v177
	loc29 = v178
	v179 = loc167
	v180 = 0xEC<32>
	v181 = v179 + v180
	loc28 = v181
	v182 = loc167
	v183 = 0xE8<32>
	v184 = v182 + v183
	loc27 = v184
	v185 = loc167
	v186 = 0xE4<32>
	v187 = v185 + v186
	loc26 = v187
	v188 = loc167
	v189 = 0xE0<32>
	v190 = v188 + v189
	loc25 = v190
	v191 = loc167
	v192 = 0xDC<32>
	v193 = v191 + v192
	loc24 = v193
	v194 = loc167
	v195 = 0xD8<32>
	v196 = v194 + v195
	loc23 = v196
	v197 = loc167
	v198 = 0xD4<32>
	v199 = v197 + v198
	loc22 = v199
	v200 = loc167
	v201 = 0xD0<32>
	v202 = v200 + v201
	loc21 = v202
	v203 = loc167
	v204 = 0xCC<32>
	v205 = v203 + v204
	loc19 = v205
	v206 = loc167
	v207 = 0xC8<32>
	v208 = v206 + v207
	loc18 = v208
	v209 = loc167
	v210 = 0xC4<32>
	v211 = v209 + v210
	loc17 = v211
	v212 = loc167
	v213 = 0xC0<32>
	v214 = v212 + v213
	loc16 = v214
	v215 = loc167
	v216 = 0xBC<32>
	v217 = v215 + v216
	loc15 = v217
	v218 = loc167
	v219 = 0xB8<32>
	v220 = v218 + v219
	loc14 = v220
	v221 = loc167
	v222 = 0xB4<32>
	v223 = v221 + v222
	loc13 = v223
	v224 = loc167
	v225 = 0xB0<32>
	v226 = v224 + v225
	loc12 = v226
	v227 = loc167
	v228 = 0xAC<32>
	v229 = v227 + v228
	loc11 = v229
	v230 = loc167
	v231 = 0xA8<32>
	v232 = v230 + v231
	loc10 = v232
	v233 = loc167
	v234 = 0xA4<32>
	v235 = v233 + v234
	loc38 = v235
	v236 = loc167
	v237 = 0xA0<32>
	v238 = v236 + v237
	loc37 = v238
	v239 = loc167
	v240 = 0x9C<32>
	v241 = v239 + v240
	loc36 = v241
	v242 = loc167
	v243 = 0x98<32>
	v244 = v242 + v243
	loc35 = v244
	v245 = loc167
	v246 = 0x94<32>
	v247 = v245 + v246
	loc34 = v247
	v248 = loc167
	v249 = 0x90<32>
	v250 = v248 + v249
	loc33 = v250
	v251 = loc167
	v252 = 0x8C<32>
	v253 = v251 + v252
	loc31 = v253
	v254 = loc167
	v255 = 0x88<32>
	v256 = v254 + v255
	loc20 = v256
	v257 = loc167
	v258 = 0x84<32>
	v259 = v257 + v258
	loc9 = v259
	v260 = loc167
	v261 = 0x80<32>
	v262 = v260 + v261
	loc8 = v262
	v263 = loc167
	v264 = 0x7C<32>
	v265 = v263 + v264
	loc144 = v265
	v266 = loc167
	v267 = 0x78<32>
	v268 = v266 + v267
	loc155 = v268
	v269 = loc167
	v270 = 0x74<32>
	v271 = v269 + v270
	loc41 = v271
	v272 = loc167
	v273 = 0x70<32>
	v274 = v272 + v273
	loc52 = v274
	v275 = loc167
	v276 = 0x6C<32>
	v277 = v275 + v276
	loc63 = v277
	v278 = loc167
	v279 = 0x68<32>
	v280 = v278 + v279
	loc74 = v280
	v281 = loc167
	v282 = 0x64<32>
	v283 = v281 + v282
	loc78 = v283
	v284 = loc167
	v285 = 0x60<32>
	v286 = v284 + v285
	loc79 = v286
	v287 = loc167
	v288 = 0x5C<32>
	v289 = v287 + v288
	loc80 = v289
	v290 = loc167
	v291 = 0x58<32>
	v292 = v290 + v291
	loc81 = v292
	v293 = loc167
	v294 = 0x54<32>
	v295 = v293 + v294
	loc82 = v295
	v296 = loc167
	v297 = 0x50<32>
	v298 = v296 + v297
	loc83 = v298
	v299 = loc167
	v300 = 0x4C<32>
	v301 = v299 + v300
	loc84 = v301
	v302 = loc167
	v303 = 0x48<32>
	v304 = v302 + v303
	loc85 = v304
	v305 = loc167
	v306 = 0x44<32>
	v307 = v305 + v306
	loc86 = v307
	v308 = loc167
	v309 = 0x40<32>
	v310 = v308 + v309
	loc87 = v310
	v311 = loc167
	v312 = 0x3C<32>
	v313 = v311 + v312
	loc88 = v313
	v314 = loc167
	v315 = 0x38<32>
	v316 = v314 + v315
	loc89 = v316
	v317 = loc167
	v318 = 0x34<32>
	v319 = v317 + v318
	loc90 = v319
	v320 = loc167
	v321 = 0x30<32>
	v322 = v320 + v321
	loc91 = v322
	v323 = loc167
	v324 = 0x2C<32>
	v325 = v323 + v324
	loc92 = v325
	v326 = loc167
	v327 = 0x28<32>
	v328 = v326 + v327
	loc93 = v328
	v329 = loc167
	v330 = 0x24<32>
	v331 = v329 + v330
	loc94 = v331
	v332 = loc167
	v333 = 0x20<32>
	v334 = v332 + v333
	loc95 = v334
	v335 = loc167
	v336 = 0x1C<32>
	v337 = v335 + v336
	loc96 = v337
	v338 = loc167
	v339 = 0x18<32>
	v340 = v338 + v339
	loc97 = v340
	v341 = loc167
	v342 = 0x14<32>
	v343 = v341 + v342
	loc98 = v343
	v344 = loc167
	v345 = 0x10<32>
	v346 = v344 + v345
	loc99 = v346
	v347 = loc167
	v348 = 0xC<32>
	v349 = v347 + v348
	loc100 = v349
	v350 = loc167
	v351 = 8<32>
	v352 = v350 + v351
	loc101 = v352
	v353 = loc167
	v354 = 4<32>
	v355 = v353 + v354
	loc102 = v355
	v356 = loc167
	loc103 = v356
	v357 = arg4
	v358 = 0<32>
	Mem0[v357:word32] = v358
	v359 = arg3
	v360 = fn000E64CA(v359)
	loc104 = v360
	v361 = loc144
	v362 = loc104
	Mem0[v361:word32] = v362
	v363 = 0<32>
	Mem0[0x00140048<p32>:word32] = v363
	v364 = 0x164<32>
	v365 = loc144
	v366 = 0x4C70<32>
	v367 = invoke_iii(v364, v365, v366)
	loc105 = v367
	v368 = Mem0[0x00140048<p32>:word32]
	loc106 = v368
	v369 = 0<32>
	Mem0[0x00140048<p32>:word32] = v369
	v370 = loc106
	v371 = 1<32>
	v372 = v370 & v371
	loc107 = v372
	v373 = loc107
	branch !v373 l000FED73
	// succ:  l000FED60 l000FED73
l000FED60:
	v374 = ___cxa_find_matching_catch_2()
	loc109 = v374
	v375 = Mem0[0x00140094<p32>:word32]
	loc110 = v375
	v376 = loc104
	v377 = fn0011B43F(v376)
	v378 = loc109
	___resumeException(v378)
	// succ:  l000FED73
l000FED73:
	v379 = loc104
	v380 = fn0011B43F(v379)
	v381 = arg6
	v382 = 0x18<32>
	v383 = v381 << v382
	v384 = 0x18<32>
	v385 = v383 >> v384
	loc108 = v385
	// succ:  l000FED83
l000FED83:
	v386 = loc108
	v387 = 0x25<32>
	v388 = v386 - v387
	switch (v388) { <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> l000FEE1E l000FEE5D <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> l000FEE20 l000FEE5F l000FEE98 <null> <null> <null> <null> l000FEE5B <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> }
	// succ:  l000FEE1E l000FEE20 l000FEE5B l000FEE5D l000FEE5F l000FEE98
l000FEE1E:
	// succ:  l000FEE20
l000FEE20:
	v389 = arg5
	v390 = 0x18<32>
	v391 = v389 + v390
	loc111 = v391
	v392 = arg2
	v393 = Mem0[v392:word32]
	loc112 = v393
	v394 = loc155
	v395 = loc112
	Mem0[v394:word32] = v395
	v396 = loc8
	v397 = loc155
	v398 = Mem0[v397:word32]
	Mem0[v396:word32] = v398
	v399 = arg0
	v400 = loc111
	v401 = arg1
	v402 = loc8
	v403 = arg4
	v404 = loc105
	fn00100228(v399, v400, v401, v402, v403, v404)
	v405 = 0x1C<32>
	loc166 = v405
l000FEE5A:
	// succ:  l000FEE5B
l000FEE5B:
	// succ:  l000FEE5D
l000FEE5D:
	// succ:  l000FEE5F
l000FEE5F:
	v406 = arg5
	v407 = 0x10<32>
	v408 = v406 + v407
	loc113 = v408
	v409 = arg2
	v410 = Mem0[v409:word32]
	loc114 = v410
	v411 = loc41
	v412 = loc114
	Mem0[v411:word32] = v412
	v413 = loc9
	v414 = loc41
	v415 = Mem0[v414:word32]
	Mem0[v413:word32] = v415
	v416 = arg0
	v417 = loc113
	v418 = arg1
	v419 = loc9
	v420 = arg4
	v421 = loc105
	fn001002E5(v416, v417, v418, v419, v420, v421)
	v422 = 0x1C<32>
	loc166 = v422
l000FEE97:
	// succ:  l000FEE98
l000FEE98:
	v423 = arg0
	v424 = 8<32>
	v425 = v423 + v424
	loc115 = v425
	v426 = loc115
	v427 = Mem0[v426:word32]
	loc116 = v427
	v428 = loc116
	v429 = 0xC<32>
	v430 = v428 + v429
	loc117 = v430
	v431 = loc117
	v432 = Mem0[v431:word32]
	loc118 = v432
	v433 = loc115
	v434 = loc118
	v435 = 0x1FF<32>
	v436 = v434 & v435
	v437 = 0xB00<32>
	v438 = v436 + v437
fn000FEAE3_exit:


