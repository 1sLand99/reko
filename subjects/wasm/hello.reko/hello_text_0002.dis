// fn000F07BB
// Return size: 0
word64 fn000F07BB(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000F07BB_entry:
	// succ:  l000F07BB
l000F07BB:
	v20 = Mem0[0x00140030<p32>:word32]
	loc16 = v20
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = 0x10<32>
	v20 = v20 + v21
	Mem0[0x00140030<p32>:word32] = v20
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l000F07D4
	// succ:  l000F07CF l000F07D4
l000F07CF:
	v20 = 0x10<32>
	abortStackOverflow(v20)
	// succ:  l000F07D4
l000F07D4:
	v20 = loc16
	loc10 = v20
	v20 = arg0
	v21 = arg1
	v22 = v20 == v21
	loc11 = v22
	v20 = loc11
	branch !v20 l000F07EF
	// succ:  l000F07E3 l000F07EF
l000F07E3:
	v20 = arg2
	v21 = 4<32>
	Mem0[v20:word32] = v21
	v23 = 0<64>
	loc19 = v23
	goto l000F0890
	// succ:  l000F0890
l000F07EF:
	v20 = ___errno_location()
	loc12 = v20
	v20 = loc12
	v20 = Mem0[v20:word32]
	loc13 = v20
	v20 = loc12
	v21 = 0<32>
	Mem0[v20:word32] = v21
	v20 = fn000EAD0D()
	loc14 = v20
	v20 = arg0
	v21 = loc10
	v24 = arg3
	v25 = loc14
	v23 = fn000D285D(v20, v21, v24, v25)
	loc20 = v23
	v20 = loc12
	v20 = Mem0[v20:word32]
	loc4 = v20
	v20 = loc4
	v21 = 0<32>
	v22 = v20 == v21
	loc5 = v22
	v20 = loc5
	branch !v20 l000F082C
	// succ:  l000F0824 l000F082C
l000F0824:
	v20 = loc12
	v21 = loc13
	Mem0[v20:word32] = v21
	// succ:  l000F082C
l000F082C:
	v20 = loc10
	v20 = Mem0[v20:word32]
	loc6 = v20
	v20 = loc6
	v21 = arg1
	v22 = v20 == v21
	loc7 = v22
	v20 = loc7
	branch !v20 l000F0880
	// succ:  l000F083E l000F0880
l000F083E:
	v20 = loc4
	v21 = 0x22<32>
	v22 = v20 == v21
	loc8 = v22
	v20 = loc8
	branch !v20 l000F087A
	// succ:  l000F0849 l000F087A
l000F0849:
	v20 = arg2
	v21 = 4<32>
	Mem0[v20:word32] = v21
	v23 = loc20
	v26 = 0<64>
	v22 = v23 > v26
	loc9 = v22
	v20 = loc9
	branch !v20 l000F0867
	// succ:  l000F085B l000F0867
l000F085B:
	v23 = 0xFFFFFFFF<64>
	goto l000F0872
	// succ:  l000F0872
l000F0867:
	v23 = 0x80000000<64>
	// succ:  l000F0872
l000F0872:
	loc17 = v23
	v23 = loc17
	loc18 = v23
	goto l000F087E
	// succ:  l000F087E
l000F087A:
	v23 = loc20
	loc18 = v23
	// succ:  l000F087E
l000F087E:
	goto l000F088B
	// succ:  l000F088B
l000F0880:
	v20 = arg2
	v21 = 4<32>
	Mem0[v20:word32] = v21
	v23 = 0<64>
	loc18 = v23
	// succ:  l000F088B
l000F088B:
	v23 = loc18
	loc19 = v23
	// succ:  l000F0890
l000F0890:
	v20 = loc16
	Mem0[0x00140030<p32>:word32] = v20
	v23 = loc19
	return v23
	// succ:  fn000F07BB_exit
l000F0898:
	return v23
	// succ:  fn000F07BB_exit
fn000F07BB_exit:


// fn000F089A
// Return size: 0
word32 fn000F089A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F089A_entry:
	// succ:  l000F089A
l000F089A:
	v184 = Mem0[0x00140030<p32>:word32]
	loc186 = v184
	v184 = Mem0[0x00140030<p32>:word32]
	v185 = 0xE0<32>
	v184 = v184 + v185
	Mem0[0x00140030<p32>:word32] = v184
	v184 = Mem0[0x00140030<p32>:word32]
	v185 = Mem0[0x00140034<p32>:word32]
	v186 = v184 >= v185
	branch !v186 l000F08B6
	// succ:  l000F08B0 l000F08B6
l000F08B0:
	v184 = 0xE0<32>
	abortStackOverflow(v184)
	// succ:  l000F08B6
l000F08B6:
	v184 = loc186
	v185 = 0xC6<32>
	v184 = v184 + v185
	loc138 = v184
	v184 = loc186
	v185 = 0xC4<32>
	v184 = v184 + v185
	loc149 = v184
	v184 = loc186
	v185 = 0xB8<32>
	v184 = v184 + v185
	loc160 = v184
	v184 = loc186
	v185 = 0xAC<32>
	v184 = v184 + v185
	loc171 = v184
	v184 = loc186
	v185 = 0xA8<32>
	v184 = v184 + v185
	loc20 = v184
	v184 = loc186
	v185 = 8<32>
	v184 = v184 + v185
	loc31 = v184
	v184 = loc186
	v185 = 4<32>
	v184 = v184 + v185
	loc42 = v184
	v184 = loc186
	loc53 = v184
	v184 = arg3
	v184 = fn000EDE83(v184)
	loc64 = v184
	v184 = loc160
	v185 = arg3
	v187 = loc138
	v188 = loc149
	fn000EDF31(v184, v185, v187, v188)
	v184 = loc171
	v189 = 0<64>
	Mem0[v184:word64] = v189
	v184 = loc171
	v185 = 8<32>
	v184 = v184 + v185
	v185 = 0<32>
	Mem0[v184:word32] = v185
	v184 = 0<32>
	loc6 = v184
	// succ:  l000F092A
l000F092A:
	v184 = loc6
	v185 = 3<32>
	v186 = v184 == v185
	loc182 = v186
	v184 = loc182
	branch !v184 l000F093C
	// succ:  l000F0939 l000F093C
l000F0939:
	goto l000F095B
	// succ:  l000F095B
l000F093C:
	v184 = loc171
	v185 = loc6
	v187 = 2<32>
	v185 = v185 << v187
	v184 = v184 + v185
	loc75 = v184
	v184 = loc75
	v185 = 0<32>
	Mem0[v184:word32] = v185
	v184 = loc6
	v185 = 1<32>
	v184 = v184 + v185
	loc86 = v184
	v184 = loc86
	loc6 = v184
	goto l000F08B6
	// succ:  l000F08B6
l000F095B:
	v184 = loc171
	v185 = 0xB<32>
	v184 = v184 + v185
	loc95 = v184
	v184 = loc95
	v190 = Mem0[v184:int8]
	v184 = CONVERT(v190, int8, word32)
	loc96 = v184
	v184 = loc96
	v185 = 0x18<32>
	v184 = v184 << v185
	v185 = 0x18<32>
	v184 = v184 >> v185
	v185 = 0<32>
	v186 = v184 < v185
	loc97 = v186
	v184 = loc97
	branch !v184 l000F09A5
	// succ:  l000F097D l000F09A5
l000F097D:
	v184 = loc171
	v185 = 8<32>
	v184 = v184 + v185
	loc98 = v184
	v184 = loc98
	v184 = Mem0[v184:word32]
	loc99 = v184
	v184 = loc99
	v185 = 0x7FFFFFFF<32>
	v184 = v184 & v185
	loc100 = v184
	v184 = loc100
	v185 = 0xFFFFFFFF<32>
	v184 = v184 + v185
	loc183 = v184
	v184 = loc183
	loc101 = v184
	goto l000F09A9
	// succ:  l000F09A9
l000F09A5:
	v184 = 0xA<32>
	loc101 = v184
	// succ:  l000F09A9
l000F09A9:
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = 0x17A<32>
	v185 = loc171
	v187 = loc101
	v188 = 0<32>
	invoke_viii(v184, v185, v187, v188)
	v184 = Mem0[0x00140048<p32>:word32]
	loc102 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc102
	v185 = 1<32>
	v184 = v184 & v185
	loc103 = v184
	v184 = loc103
	branch !v184 l000F09E2
	// succ:  l000F09CD l000F09E2
l000F09CD:
	v184 = ___cxa_find_matching_catch_2()
	loc164 = v184
	v184 = Mem0[0x00140094<p32>:word32]
	loc165 = v184
	v184 = loc164
	loc9 = v184
	v184 = loc165
	loc11 = v184
	goto l000F114F
	// succ:  l000F114F
l000F09E2:
	v184 = loc95
	v191 = Mem0[v184:int8]
	v184 = CONVERT(v191, int8, word32)
	loc104 = v184
	v184 = loc104
	v185 = 0x18<32>
	v184 = v184 << v185
	v185 = 0x18<32>
	v184 = v184 >> v185
	v185 = 0<32>
	v186 = v184 < v185
	loc105 = v186
	v184 = loc171
	v184 = Mem0[v184:word32]
	loc106 = v184
	v184 = loc105
	branch !v184 l000F0A05
	// succ:  l000F0A02 l000F0A05
l000F0A02:
	v184 = loc106
	goto l000F0A08
	// succ:  l000F0A08
l000F0A05:
	v184 = loc171
	// succ:  l000F0A08
l000F0A08:
	loc107 = v184
	v184 = loc20
	v185 = loc107
	Mem0[v184:word32] = v185
	v184 = loc42
	v185 = loc31
	Mem0[v184:word32] = v185
	v184 = loc53
	v185 = 0<32>
	Mem0[v184:word32] = v185
	v184 = loc171
	v185 = 4<32>
	v184 = v184 + v185
	loc108 = v184
	v184 = loc171
	v185 = 8<32>
	v184 = v184 + v185
	loc109 = v184
	v184 = arg1
	v184 = Mem0[v184:word32]
	loc13 = v184
	v184 = loc107
	loc8 = v184
	v184 = loc13
	loc15 = v184
	// succ:  l000F0A41
l000F0A41:
	v184 = loc15
	v185 = 0<32>
	v186 = v184 == v185
	loc110 = v186
	v184 = loc110
	branch !v184 l000F0A53
	// succ:  l000F0A4E l000F0A53
l000F0A4E:
	v184 = 0<32>
	loc14 = v184
	goto l000F0AD8
	// succ:  l000F0AD8
l000F0A53:
	v184 = loc15
	v185 = 0xC<32>
	v184 = v184 + v185
	loc111 = v184
	v184 = loc111
	v184 = Mem0[v184:word32]
	loc112 = v184
	v184 = loc15
	v185 = 0x10<32>
	v184 = v184 + v185
	loc113 = v184
	v184 = loc113
	v184 = Mem0[v184:word32]
	loc114 = v184
	v184 = loc112
	v185 = loc114
	v186 = v184 == v185
	loc115 = v186
	v184 = loc115
	branch !v184 l000F0AD3
	// succ:  l000F0A7A l000F0AD3
l000F0A7A:
	v184 = loc15
	v184 = Mem0[v184:word32]
	loc116 = v184
	v184 = loc116
	v185 = 0x24<32>
	v184 = v184 + v185
	loc117 = v184
	v184 = loc117
	v184 = Mem0[v184:word32]
	loc118 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc118
	v185 = loc15
	v184 = invoke_ii(v184, v185)
	loc119 = v184
	v184 = Mem0[0x00140048<p32>:word32]
	loc120 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc120
	v185 = 1<32>
	v184 = v184 & v185
	loc121 = v184
	v184 = loc121
	branch !v184 l000F0AB6
	// succ:  l000F0AAE l000F0AB6
l000F0AAE:
	v184 = 0x1C<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0AB6:
	v184 = loc119
	v185 = 0xFFFFFFFF<32>
	v186 = v184 == v185
	loc122 = v186
	v184 = loc122
	branch !v184 l000F0ACD
	// succ:  l000F0AC1 l000F0ACD
l000F0AC1:
	v184 = arg1
	v185 = 0<32>
	Mem0[v184:word32] = v185
	v184 = 0<32>
	loc14 = v184
	goto l000F0AD1
	// succ:  l000F0AD1
l000F0ACD:
	v184 = loc15
	loc14 = v184
	// succ:  l000F0AD1
l000F0AD1:
	goto l000F0AD7
	// succ:  l000F0AD7
l000F0AD3:
	v184 = loc15
	loc14 = v184
	// succ:  l000F0AD7
l000F0AD7:
	// succ:  l000F0AD8
l000F0AD8:
	v184 = loc14
	v185 = 0<32>
	v186 = v184 == v185
	loc123 = v186
	v184 = arg2
	v184 = Mem0[v184:word32]
	loc124 = v184
	v184 = loc124
	v185 = 0<32>
	v186 = v184 == v185
	loc125 = v186
	// succ:  l000F0AEE
l000F0AEE:
	v184 = loc125
	branch !v184 l000F0AFA
	// succ:  l000F0AF4 l000F0AFA
l000F0AF4:
	v184 = 0x13<32>
	loc185 = v184
	goto l000F0BC4
	// succ:  l000F0BC4
l000F0AFA:
	v184 = loc124
	v185 = 0xC<32>
	v184 = v184 + v185
	loc126 = v184
	v184 = loc126
	v184 = Mem0[v184:word32]
	loc127 = v184
	v184 = loc124
	v185 = 0x10<32>
	v184 = v184 + v185
	loc128 = v184
	v184 = loc128
	v184 = Mem0[v184:word32]
	loc129 = v184
	v184 = loc127
	v185 = loc129
	v186 = v184 == v185
	loc130 = v186
	v184 = loc130
	v186 = v184 == 0<32>
	branch !v186 l000F0B44
	// succ:  l000F0B28 l000F0B44
l000F0B28:
	v184 = loc123
	branch !v184 l000F0B33
	// succ:  l000F0B2C l000F0B33
l000F0B2C:
	v184 = loc124
	loc94 = v184
	goto l000F0BC5
	// succ:  l000F0BC5
l000F0B33:
	v184 = loc8
	loc12 = v184
	v184 = loc124
	loc16 = v184
	v184 = 0x26<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0B42:
	// succ:  l000F0B44
l000F0B44:
	v184 = loc124
	v184 = Mem0[v184:word32]
	loc131 = v184
	v184 = loc131
	v185 = 0x24<32>
	v184 = v184 + v185
	loc132 = v184
	v184 = loc132
	v184 = Mem0[v184:word32]
	loc133 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc133
	v185 = loc124
	v184 = invoke_ii(v184, v185)
	loc134 = v184
	v184 = Mem0[0x00140048<p32>:word32]
	loc135 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc135
	v185 = 1<32>
	v184 = v184 & v185
	loc136 = v184
	v184 = loc136
	branch !v184 l000F0B8B
	// succ:  l000F0B83 l000F0B8B
l000F0B83:
	v184 = 0x1C<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0B8B:
	v184 = loc134
	v185 = 0xFFFFFFFF<32>
	v186 = v184 == v185
	loc137 = v186
	v184 = loc137
	branch !v184 l000F0BA8
	// succ:  l000F0B99 l000F0BA8
l000F0B99:
	v184 = arg2
	v185 = 0<32>
	Mem0[v184:word32] = v185
	v184 = 0x13<32>
	loc185 = v184
	goto l000F0BC5
	// succ:  l000F0BC5
l000F0BA8:
	v184 = loc123
	branch !v184 l000F0BB3
	// succ:  l000F0BAC l000F0BB3
l000F0BAC:
	v184 = loc124
	loc94 = v184
	goto l000F0BC5
	// succ:  l000F0BC5
l000F0BB3:
	v184 = loc8
	loc12 = v184
	v184 = loc124
	loc16 = v184
	v184 = 0x26<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0BC2:
	// succ:  l000F0BC3
l000F0BC3:
	// succ:  l000F0BC4
l000F0BC4:
	// succ:  l000F0BC5
l000F0BC5:
	v184 = loc185
	v185 = 0x13<32>
	v186 = v184 == v185
	branch !v186 l000F0BED
	// succ:  l000F0BCE l000F0BED
l000F0BCE:
	v184 = 0<32>
	loc185 = v184
	v184 = loc123
	branch !v184 l000F0BE7
	// succ:  l000F0BD7 l000F0BE7
l000F0BD7:
	v184 = loc8
	loc12 = v184
	v184 = 0<32>
	loc16 = v184
	v184 = 0x26<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0BE7:
	v184 = 0<32>
	loc94 = v184
	// succ:  l000F0BEB
l000F0BEB:
	// succ:  l000F0BED
l000F0BED:
	v184 = loc20
	v184 = Mem0[v184:word32]
	loc139 = v184
	v184 = loc95
	v192 = Mem0[v184:int8]
	v184 = CONVERT(v192, int8, word32)
	loc140 = v184
	v184 = loc140
	v185 = 0x18<32>
	v184 = v184 << v185
	v185 = 0x18<32>
	v184 = v184 >> v185
	v185 = 0<32>
	v186 = v184 < v185
	loc141 = v186
	v184 = loc108
	v184 = Mem0[v184:word32]
	loc142 = v184
	v184 = loc140
	v185 = 0xFF<32>
	v184 = v184 & v185
	loc143 = v184
	v184 = loc141
	branch !v184 l000F0C27
	// succ:  l000F0C23 l000F0C27
l000F0C23:
	v184 = loc142
	goto l000F0C2A
	// succ:  l000F0C2A
l000F0C27:
	v184 = loc143
	// succ:  l000F0C2A
l000F0C2A:
	loc144 = v184
	v184 = loc8
	v185 = loc144
	v184 = v184 + v185
	loc145 = v184
	v184 = loc139
	v185 = loc145
	v186 = v184 == v185
	loc146 = v186
	v184 = loc146
	branch !v184 l000F0D3E
	// succ:  l000F0C46 l000F0D3E
l000F0C46:
	v184 = loc144
	v185 = 1<32>
	v184 = v184 << v185
	loc147 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = 0x17A<32>
	v185 = loc171
	v187 = loc147
	v188 = 0<32>
	invoke_viii(v184, v185, v187, v188)
	v184 = Mem0[0x00140048<p32>:word32]
	loc148 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc148
	v185 = 1<32>
	v184 = v184 & v185
	loc150 = v184
	v184 = loc150
	branch !v184 l000F0C7F
	// succ:  l000F0C77 l000F0C7F
l000F0C77:
	v184 = 0x1E<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0C7F:
	v184 = loc95
	v193 = Mem0[v184:int8]
	v184 = CONVERT(v193, int8, word32)
	loc151 = v184
	v184 = loc151
	v185 = 0x18<32>
	v184 = v184 << v185
	v185 = 0x18<32>
	v184 = v184 >> v185
	v185 = 0<32>
	v186 = v184 < v185
	loc152 = v186
	v184 = loc152
	branch !v184 l000F0CC0
	// succ:  l000F0C9B l000F0CC0
l000F0C9B:
	v184 = loc109
	v184 = Mem0[v184:word32]
	loc153 = v184
	v184 = loc153
	v185 = 0x7FFFFFFF<32>
	v184 = v184 & v185
	loc154 = v184
	v184 = loc154
	v185 = 0xFFFFFFFF<32>
	v184 = v184 + v185
	loc184 = v184
	v184 = loc184
	loc155 = v184
	goto l000F0CC5
	// succ:  l000F0CC5
l000F0CC0:
	v184 = 0xA<32>
	loc155 = v184
	// succ:  l000F0CC5
l000F0CC5:
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = 0x17A<32>
	v185 = loc171
	v187 = loc155
	v188 = 0<32>
	invoke_viii(v184, v185, v187, v188)
	v184 = Mem0[0x00140048<p32>:word32]
	loc156 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc156
	v185 = 1<32>
	v184 = v184 & v185
	loc157 = v184
	v184 = loc157
	branch !v184 l000F0CF6
	// succ:  l000F0CEE l000F0CF6
l000F0CEE:
	v184 = 0x1E<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0CF6:
	v184 = loc95
	v194 = Mem0[v184:int8]
	v184 = CONVERT(v194, int8, word32)
	loc158 = v184
	v184 = loc158
	v185 = 0x18<32>
	v184 = v184 << v185
	v185 = 0x18<32>
	v184 = v184 >> v185
	v185 = 0<32>
	v186 = v184 < v185
	loc159 = v186
	v184 = loc171
	v184 = Mem0[v184:word32]
	loc161 = v184
	v184 = loc159
	branch !v184 l000F0D1F
	// succ:  l000F0D1B l000F0D1F
l000F0D1B:
	v184 = loc161
	goto l000F0D22
	// succ:  l000F0D22
l000F0D1F:
	v184 = loc171
	// succ:  l000F0D22
l000F0D22:
	loc162 = v184
	v184 = loc162
	v185 = loc144
	v184 = v184 + v185
	loc163 = v184
	v184 = loc20
	v185 = loc163
	Mem0[v184:word32] = v185
	v184 = loc162
	loc10 = v184
	goto l000F0D42
	// succ:  l000F0D42
l000F0D3E:
	v184 = loc8
	loc10 = v184
	// succ:  l000F0D42
l000F0D42:
	v184 = loc14
	v185 = 0xC<32>
	v184 = v184 + v185
	loc173 = v184
	v184 = loc173
	v184 = Mem0[v184:word32]
	loc174 = v184
	v184 = loc14
	v185 = 0x10<32>
	v184 = v184 + v185
	loc175 = v184
	v184 = loc175
	v184 = Mem0[v184:word32]
	loc176 = v184
	v184 = loc174
	v185 = loc176
	v186 = v184 == v185
	loc177 = v186
	v184 = loc177
	branch !v184 l000F0DBE
	// succ:  l000F0D74 l000F0DBE
l000F0D74:
	v184 = loc14
	v184 = Mem0[v184:word32]
	loc178 = v184
	v184 = loc178
	v185 = 0x24<32>
	v184 = v184 + v185
	loc179 = v184
	v184 = loc179
	v184 = Mem0[v184:word32]
	loc180 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc180
	v185 = loc14
	v184 = invoke_ii(v184, v185)
	loc181 = v184
	v184 = Mem0[0x00140048<p32>:word32]
	loc21 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc21
	v185 = 1<32>
	v184 = v184 & v185
	loc22 = v184
	v184 = loc22
	branch !v184 l000F0DB7
	// succ:  l000F0DAF l000F0DB7
l000F0DAF:
	v184 = 0x1C<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0DB7:
	v184 = loc181
	loc7 = v184
	// succ:  l000F0DBC
l000F0DBC:
	goto l000F0DD2
	// succ:  l000F0DD2
l000F0DBE:
	v184 = loc174
	v195 = Mem0[v184:int8]
	v184 = CONVERT(v195, int8, word32)
	loc23 = v184
	v184 = loc23
	v185 = 0xFF<32>
	v184 = v184 & v185
	loc24 = v184
	v184 = loc24
	loc7 = v184
	// succ:  l000F0DD2
l000F0DD2:
	v184 = loc7
	v185 = 0xFF<32>
	v184 = v184 & v185
	loc25 = v184
	v184 = loc149
	v196 = Mem0[v184:int8]
	v184 = CONVERT(v196, int8, word32)
	loc26 = v184
	v184 = loc25
	v185 = loc64
	v187 = loc10
	v188 = loc20
	v197 = loc53
	v198 = loc26
	v199 = loc160
	v200 = loc31
	v201 = loc42
	v202 = loc138
	v184 = fn000EAA19(v184, v185, v187, v188, v197, v198, v199, v200, v201, v202)
	loc27 = v184
	v184 = loc27
	v185 = 0<32>
	v186 = v184 == v185
	loc28 = v186
	v184 = loc28
	v186 = v184 == 0<32>
	branch !v186 l000F0E1A
	// succ:  l000F0E0A l000F0E1A
l000F0E0A:
	v184 = loc10
	loc12 = v184
	v184 = loc94
	loc16 = v184
	v184 = 0x26<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0E1A:
	v184 = loc173
	v184 = Mem0[v184:word32]
	loc29 = v184
	v184 = loc175
	v184 = Mem0[v184:word32]
	loc30 = v184
	v184 = loc29
	v185 = loc30
	v186 = v184 == v185
	loc32 = v186
	v184 = loc32
	branch !v184 l000F0E7C
	// succ:  l000F0E35 l000F0E7C
l000F0E35:
	v184 = loc14
	v184 = Mem0[v184:word32]
	loc33 = v184
	v184 = loc33
	v185 = 0x28<32>
	v184 = v184 + v185
	loc34 = v184
	v184 = loc34
	v184 = Mem0[v184:word32]
	loc35 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc35
	v185 = loc14
	v184 = invoke_ii(v184, v185)
	v184 = Mem0[0x00140048<p32>:word32]
	loc36 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc36
	v185 = 1<32>
	v184 = v184 & v185
	loc37 = v184
	v184 = loc37
	branch !v184 l000F0E70
	// succ:  l000F0E68 l000F0E70
l000F0E68:
	v184 = 0x1C<32>
	loc185 = v184
	goto l000F0E98
	// succ:  l000F0E98
l000F0E70:
	v184 = loc10
	loc8 = v184
	v184 = loc14
	loc15 = v184
	goto l000F0A08
	// succ:  l000F0A08
l000F0E7A:
	goto l000F0E95
	// succ:  l000F0E95
l000F0E7C:
	v184 = loc29
	v185 = 1<32>
	v184 = v184 + v185
	loc38 = v184
	v184 = loc173
	v185 = loc38
	Mem0[v184:word32] = v185
	v184 = loc10
	loc8 = v184
	v184 = loc14
	loc15 = v184
	goto l000F0A08
	// succ:  l000F0A08
l000F0E95:
	goto l000F0A08
	// succ:  l000F0A08
l000F0E98:
	v184 = loc185
	v185 = 0x1C<32>
	v186 = v184 == v185
	branch !v186 l000F0EB7
	// succ:  l000F0EA2 l000F0EB7
l000F0EA2:
	v184 = ___cxa_find_matching_catch_2()
	loc166 = v184
	v184 = Mem0[0x00140094<p32>:word32]
	loc167 = v184
	v184 = loc166
	loc17 = v184
	v184 = loc167
	loc18 = v184
	goto l000F1146
	// succ:  l000F1146
l000F0EB7:
	v184 = loc185
	v185 = 0x1E<32>
	v186 = v184 == v185
	branch !v186 l000F0ED4
	// succ:  l000F0EBF l000F0ED4
l000F0EBF:
	v184 = ___cxa_find_matching_catch_2()
	loc170 = v184
	v184 = Mem0[0x00140094<p32>:word32]
	loc172 = v184
	v184 = loc170
	loc17 = v184
	v184 = loc172
	loc18 = v184
	goto l000F1145
	// succ:  l000F1145
l000F0ED4:
	v184 = loc185
	v185 = 0x26<32>
	v186 = v184 == v185
	branch !v186 l000F1145
	// succ:  l000F0EDC l000F1145
l000F0EDC:
	v184 = loc160
	v185 = 0xB<32>
	v184 = v184 + v185
	loc39 = v184
	v184 = loc39
	v203 = Mem0[v184:int8]
	v184 = CONVERT(v203, int8, word32)
	loc40 = v184
	v184 = loc40
	v185 = 0x18<32>
	v184 = v184 << v185
	v185 = 0x18<32>
	v184 = v184 >> v185
	v185 = 0<32>
	v186 = v184 < v185
	loc41 = v186
	v184 = loc160
	v185 = 4<32>
	v184 = v184 + v185
	loc43 = v184
	v184 = loc43
	v184 = Mem0[v184:word32]
	loc44 = v184
	v184 = loc40
	v185 = 0xFF<32>
	v184 = v184 & v185
	loc45 = v184
	v184 = loc41
	branch !v184 l000F0F16
	// succ:  l000F0F13 l000F0F16
l000F0F13:
	v184 = loc44
	goto l000F0F18
	// succ:  l000F0F18
l000F0F16:
	v184 = loc45
	// succ:  l000F0F18
l000F0F18:
	loc46 = v184
	v184 = loc46
	v185 = 0<32>
	v186 = v184 == v185
	loc47 = v186
	v184 = loc47
	v186 = v184 == 0<32>
	branch !v186 l000F0F67
	// succ:  l000F0F27 l000F0F67
l000F0F27:
	v184 = loc42
	v184 = Mem0[v184:word32]
	loc48 = v184
	v184 = loc48
	loc49 = v184
	v184 = loc31
	loc50 = v184
	v184 = loc49
	v185 = loc50
	v184 = v184 - v185
	loc51 = v184
	v184 = loc51
	v185 = 0xA0<32>
	v186 = v184 < v185
	loc52 = v186
	v184 = loc52
	branch !v184 l000F0F66
	// succ:  l000F0F49 l000F0F66
l000F0F49:
	v184 = loc53
	v184 = Mem0[v184:word32]
	loc54 = v184
	v184 = loc48
	v185 = 4<32>
	v184 = v184 + v185
	loc55 = v184
	v184 = loc42
	v185 = loc55
	Mem0[v184:word32] = v185
	v184 = loc48
	v185 = loc54
	Mem0[v184:word32] = v185
	// succ:  l000F0F66
l000F0F66:
	// succ:  l000F0F67
l000F0F67:
	v184 = loc20
	v184 = Mem0[v184:word32]
	loc56 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = 0x189<32>
	v185 = loc12
	v187 = loc56
	v188 = arg4
	v197 = loc64
	v184 = invoke_iiiii(v184, v185, v187, v188, v197)
	loc57 = v184
	v184 = Mem0[0x00140048<p32>:word32]
	loc58 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc58
	v185 = 1<32>
	v184 = v184 & v185
	loc59 = v184
	// succ:  l000F0F90
l000F0F90:
	v184 = loc59
	v186 = v184 == 0<32>
	branch !v186 l000F112F
	// succ:  l000F0F97 l000F112F
l000F0F97:
	v184 = arg5
	v185 = loc57
	Mem0[v184:word32] = v185
	v184 = loc42
	v184 = Mem0[v184:word32]
	loc60 = v184
	v184 = loc160
	v185 = loc31
	v187 = loc60
	v188 = arg4
	fn000EC01D(v184, v185, v187, v188)
	v184 = loc14
	v185 = 0<32>
	v186 = v184 == v185
	loc61 = v186
	v184 = loc61
	branch !v184 l000F0FC1
	// succ:  l000F0FBC l000F0FC1
l000F0FBC:
	v184 = 0<32>
	loc77 = v184
	goto l000F1041
	// succ:  l000F1041
l000F0FC1:
	v184 = loc14
	v185 = 0xC<32>
	v184 = v184 + v185
	loc62 = v184
	v184 = loc62
	v184 = Mem0[v184:word32]
	loc63 = v184
	v184 = loc14
	v185 = 0x10<32>
	v184 = v184 + v185
	loc65 = v184
	v184 = loc65
	v184 = Mem0[v184:word32]
	loc66 = v184
	v184 = loc63
	v185 = loc66
	v186 = v184 == v185
	loc67 = v186
	v184 = loc67
	branch !v184 l000F103C
	// succ:  l000F0FE8 l000F103C
l000F0FE8:
	v184 = loc14
	v184 = Mem0[v184:word32]
	loc68 = v184
	v184 = loc68
	v185 = 0x24<32>
	v184 = v184 + v185
	loc69 = v184
	v184 = loc69
	v184 = Mem0[v184:word32]
	loc70 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc70
	v185 = loc14
	v184 = invoke_ii(v184, v185)
	loc71 = v184
	v184 = Mem0[0x00140048<p32>:word32]
	loc72 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc72
	v185 = 1<32>
	v184 = v184 & v185
	loc73 = v184
	v184 = loc73
	branch !v184 l000F101F
	// succ:  l000F101C l000F101F
l000F101C:
	goto l000F112F
	// succ:  l000F112F
l000F101F:
	v184 = loc71
	v185 = 0xFFFFFFFF<32>
	v186 = v184 == v185
	loc74 = v186
	v184 = loc74
	branch !v184 l000F1036
	// succ:  l000F102A l000F1036
l000F102A:
	v184 = arg1
	v185 = 0<32>
	Mem0[v184:word32] = v185
	v184 = 0<32>
	loc77 = v184
	goto l000F103A
	// succ:  l000F103A
l000F1036:
	v184 = loc14
	loc77 = v184
	// succ:  l000F103A
l000F103A:
	goto l000F1040
	// succ:  l000F1040
l000F103C:
	v184 = loc14
	loc77 = v184
	// succ:  l000F1040
l000F1040:
	// succ:  l000F1041
l000F1041:
	v184 = loc77
	v185 = 0<32>
	v186 = v184 == v185
	loc76 = v186
	v184 = loc16
	v185 = 0<32>
	v186 = v184 == v185
	loc78 = v186
	// succ:  l000F1050
l000F1050:
	v184 = loc78
	branch !v184 l000F105C
	// succ:  l000F1056 l000F105C
l000F1056:
	v184 = 0x35<32>
	loc185 = v184
	goto l000F10E0
	// succ:  l000F10E0
l000F105C:
	v184 = loc16
	v185 = 0xC<32>
	v184 = v184 + v185
	loc79 = v184
	v184 = loc79
	v184 = Mem0[v184:word32]
	loc80 = v184
	v184 = loc16
	v185 = 0x10<32>
	v184 = v184 + v185
	loc81 = v184
	v184 = loc81
	v184 = Mem0[v184:word32]
	loc82 = v184
	v184 = loc80
	v185 = loc82
	v186 = v184 == v185
	loc83 = v186
	v184 = loc83
	branch !v184 l000F10D5
	// succ:  l000F1083 l000F10D5
l000F1083:
	v184 = loc16
	v184 = Mem0[v184:word32]
	loc84 = v184
	v184 = loc84
	v185 = 0x24<32>
	v184 = v184 + v185
	loc85 = v184
	v184 = loc85
	v184 = Mem0[v184:word32]
	loc87 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc87
	v185 = loc16
	v184 = invoke_ii(v184, v185)
	loc88 = v184
	v184 = Mem0[0x00140048<p32>:word32]
	loc89 = v184
	v184 = 0<32>
	Mem0[0x00140048<p32>:word32] = v184
	v184 = loc89
	v185 = 1<32>
	v184 = v184 & v185
	loc90 = v184
	v184 = loc90
	branch !v184 l000F10BA
	// succ:  l000F10B7 l000F10BA
l000F10B7:
	goto l000F112F
	// succ:  l000F112F
l000F10BA:
	v184 = loc88
	v185 = 0xFFFFFFFF<32>
	v186 = v184 == v185
	loc91 = v186
	v184 = loc91
	branch !v184 l000F10D4
	// succ:  l000F10C5 l000F10D4
l000F10C5:
	v184 = arg2
	v185 = 0<32>
	Mem0[v184:word32] = v185
	v184 = 0x35<32>
	loc185 = v184
	goto l000F10E1
	// succ:  l000F10E1
l000F10D4:
	// succ:  l000F10D5
l000F10D5:
	v184 = loc76
	v186 = v184 == 0<32>
	branch !v186 l000F10E0
	// succ:  l000F10DA l000F10E0
l000F10DA:
	v184 = 0x36<32>
	loc185 = v184
	// succ:  l000F10E0
l000F10E0:
	// succ:  l000F10E0
l000F10E0:
	// succ:  l000F10E1
l000F10E1:
	v184 = loc185
	v185 = 0x35<32>
	v186 = v184 == v185
	branch !v186 l000F10F5
	// succ:  l000F10EA l000F10F5
l000F10EA:
	v184 = loc76
	branch !v184 l000F10F4
	// succ:  l000F10EE l000F10F4
l000F10EE:
	v184 = 0x36<32>
	loc185 = v184
	// succ:  l000F10F4
l000F10F4:
	// succ:  l000F10F5
l000F10F5:
	v184 = loc185
	v185 = 0x36<32>
	v186 = v184 == v185
	branch !v186 l000F1113
	// succ:  l000F10FD l000F1113
l000F10FD:
	v184 = arg4
	v184 = Mem0[v184:word32]
	loc92 = v184
	v184 = loc92
	v185 = 2<32>
	v184 = v184 | v185
	loc93 = v184
	v184 = arg4
	v185 = loc93
	Mem0[v184:word32] = v185
	// succ:  l000F1113
l000F1113:
	v184 = arg1
	v184 = Mem0[v184:word32]
	loc19 = v184
	v184 = loc171
	fn0011BAF7(v184)
	v184 = loc160
	fn0011BAF7(v184)
	v184 = loc186
	Mem0[0x00140030<p32>:word32] = v184
	v184 = loc19
	return v184
	// succ:  fn000F089A_exit
l000F112F:
	// succ:  l000F112F
l000F112F:
	v184 = ___cxa_find_matching_catch_2()
	loc168 = v184
	v184 = Mem0[0x00140094<p32>:word32]
	loc169 = v184
	v184 = loc168
	loc17 = v184
	v184 = loc169
	loc18 = v184
	// succ:  l000F1145
l000F1145:
	// succ:  l000F1145
l000F1145:
	// succ:  l000F1146
l000F1146:
	v184 = loc17
	loc9 = v184
	v184 = loc18
	loc11 = v184
	// succ:  l000F114F
l000F114F:
	v184 = loc171
	fn0011BAF7(v184)
	v184 = loc160
	fn0011BAF7(v184)
	v184 = loc9
	___resumeException(v184)
	v184 = 0<32>
	return v184
	// succ:  fn000F089A_exit
l000F1163:
	return v184
	// succ:  fn000F089A_exit
fn000F089A_exit:


// fn000F1165
// Return size: 0
word32 fn000F1165(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000F1165_entry:
	// succ:  l000F1165
l000F1165:
	v22 = Mem0[0x00140030<p32>:word32]
	loc21 = v22
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = 0x10<32>
	v22 = v22 + v23
	Mem0[0x00140030<p32>:word32] = v22
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = Mem0[0x00140034<p32>:word32]
	v24 = v22 >= v23
	branch !v24 l000F117E
	// succ:  l000F1179 l000F117E
l000F1179:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l000F117E
l000F117E:
	v22 = loc21
	loc15 = v22
	v22 = arg0
	v23 = arg1
	v24 = v22 == v23
	loc16 = v24
	v22 = loc16
	branch !v22 l000F1199
	// succ:  l000F118D l000F1199
l000F118D:
	v22 = arg2
	v23 = 4<32>
	Mem0[v22:word32] = v23
	v22 = 0<32>
	loc5 = v22
	goto l000F1277
	// succ:  l000F1277
l000F1199:
	v22 = ___errno_location()
	loc17 = v22
	v22 = loc17
	v22 = Mem0[v22:word32]
	loc18 = v22
	v22 = loc17
	v23 = 0<32>
	Mem0[v22:word32] = v23
	v22 = fn000EAD0D()
	loc19 = v22
	v22 = arg0
	v23 = loc15
	v25 = arg3
	v26 = loc19
	v27 = fn000D285D(v22, v23, v25, v26)
	loc22 = v27
	v22 = loc17
	v22 = Mem0[v22:word32]
	loc6 = v22
	v22 = loc6
	v23 = 0<32>
	v24 = v22 == v23
	loc7 = v24
	v22 = loc7
	branch !v22 l000F11D6
	// succ:  l000F11CE l000F11D6
l000F11CE:
	v22 = loc17
	v23 = loc18
	Mem0[v22:word32] = v23
	// succ:  l000F11D6
l000F11D6:
	v22 = loc15
	v22 = Mem0[v22:word32]
	loc8 = v22
	v22 = loc8
	v23 = arg1
	v24 = v22 == v23
	loc9 = v24
	// succ:  l000F11E4
l000F11E4:
	v22 = loc9
	branch !v22 l000F1266
	// succ:  l000F11EA l000F1266
l000F11EA:
	v22 = loc6
	v23 = 0x22<32>
	v24 = v22 == v23
	loc10 = v24
	// succ:  l000F11F1
l000F11F1:
	v22 = loc10
	branch !v22 l000F1215
	// succ:  l000F11F7 l000F1215
l000F11F7:
	v22 = arg2
	v23 = 4<32>
	Mem0[v22:word32] = v23
	v27 = loc22
	v28 = 0<64>
	v24 = v27 > v28
	loc13 = v24
	v22 = loc13
	branch !v22 l000F1214
	// succ:  l000F1209 l000F1214
l000F1209:
	v22 = 0x7FFFFFFF<32>
	loc4 = v22
	goto l000F1272
	// succ:  l000F1272
l000F1214:
	goto l000F125B
	// succ:  l000F125B
l000F1215:
	v27 = loc22
	v28 = 0xFFFFFFF880000000<64>
	v24 = v27 < v28
	loc11 = v24
	v22 = loc11
	branch !v22 l000F122E
	// succ:  l000F1224 l000F122E
l000F1224:
	v22 = arg2
	v23 = 4<32>
	Mem0[v22:word32] = v23
	goto l000F125C
	// succ:  l000F125C
l000F122E:
	v27 = loc22
	v28 = 0x7FFFFFFF<64>
	v24 = v27 > v28
	loc12 = v24
	v22 = loc12
	branch !v22 l000F124F
	// succ:  l000F123D l000F124F
l000F123D:
	v22 = arg2
	v23 = 4<32>
	Mem0[v22:word32] = v23
	v22 = 0x7FFFFFFF<32>
	loc4 = v22
	goto l000F1272
	// succ:  l000F1272
l000F124F:
	v27 = loc22
	v22 = SLICE(v27, word64, 0)
	loc14 = v22
	v22 = loc14
	loc4 = v22
	goto l000F1272
	// succ:  l000F1272
l000F125A:
	// succ:  l000F125B
l000F125B:
	// succ:  l000F125C
l000F125C:
	v22 = 0x80000000<32>
	loc4 = v22
	goto l000F1271
	// succ:  l000F1271
l000F1266:
	v22 = arg2
	v23 = 4<32>
	Mem0[v22:word32] = v23
	v22 = 0<32>
	loc4 = v22
	// succ:  l000F1271
l000F1271:
	// succ:  l000F1272
l000F1272:
	v22 = loc4
	loc5 = v22
	// succ:  l000F1277
l000F1277:
	v22 = loc21
	Mem0[0x00140030<p32>:word32] = v22
	v22 = loc5
	return v22
	// succ:  fn000F1165_exit
l000F127F:
	return v22
	// succ:  fn000F1165_exit
fn000F1165_exit:


// fn000F1281
// Return size: 0
word32 fn000F1281(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000F1281_entry:
	// succ:  l000F1281
l000F1281:
	v230 = Mem0[0x00140030<p32>:word32]
	loc233 = v230
	v230 = Mem0[0x00140030<p32>:word32]
	v231 = 0x70<32>
	v230 = v230 + v231
	Mem0[0x00140030<p32>:word32] = v230
	v230 = Mem0[0x00140030<p32>:word32]
	v231 = Mem0[0x00140034<p32>:word32]
	v232 = v230 >= v231
	branch !v232 l000F129D
	// succ:  l000F1297 l000F129D
l000F1297:
	v230 = 0x70<32>
	abortStackOverflow(v230)
	// succ:  l000F129D
l000F129D:
	v230 = loc233
	loc198 = v230
	v230 = arg3
	loc209 = v230
	v230 = arg2
	loc220 = v230
	v230 = loc209
	v231 = loc220
	v230 = v230 - v231
	loc43 = v230
	v230 = loc43
	v231 = 0xC<32>
	v230 = i32s-div(v230, v231)
	v231 = 0xFFFFFFFF<32>
	v230 = v230 & v231
	loc54 = v230
	v230 = loc54
	v231 = 0x64<32>
	v232 = v230 >u v231
	loc65 = v232
	// succ:  l000F12C9
l000F12C9:
	v230 = loc65
	branch !v230 l000F1327
	// succ:  l000F12CF l000F1327
l000F12CF:
	v230 = loc54
	v230 = _malloc(v230)
	loc76 = v230
	v230 = loc76
	v231 = 0<32>
	v232 = v230 == v231
	loc87 = v232
	v230 = loc87
	branch !v230 l000F1313
	// succ:  l000F12E1 l000F1313
l000F12E1:
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = 0x18A<32>
	invoke_v(v230)
	v230 = Mem0[0x00140048<p32>:word32]
	loc98 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc98
	v231 = 1<32>
	v230 = v230 & v231
	loc109 = v230
	v230 = loc109
	branch !v230 l000F1312
	// succ:  l000F12FD l000F1312
l000F12FD:
	v230 = ___cxa_find_matching_catch_2()
	loc120 = v230
	v230 = Mem0[0x00140094<p32>:word32]
	loc131 = v230
	v230 = loc120
	loc40 = v230
	v230 = loc131
	loc41 = v230
	goto l000F1336
	// succ:  l000F1336
l000F1312:
	// succ:  l000F1313
l000F1313:
	v230 = loc76
	loc142 = v230
	v230 = loc76
	loc15 = v230
	v230 = loc142
	loc42 = v230
	v230 = 6<32>
	loc232 = v230
	goto l000F1335
	// succ:  l000F1335
l000F1327:
	v230 = loc198
	loc15 = v230
	v230 = 0<32>
	loc42 = v230
	v230 = 6<32>
	loc232 = v230
	// succ:  l000F1335
l000F1335:
	// succ:  l000F1336
l000F1336:
	v230 = loc232
	v231 = 6<32>
	v232 = v230 == v231
	branch !v232 l000F1D4A
	// succ:  l000F133F l000F1D4A
l000F133F:
	v230 = arg2
	loc11 = v230
	v230 = loc15
	loc12 = v230
	v230 = 0<32>
	loc13 = v230
	v230 = loc54
	loc14 = v230
	// succ:  l000F1351
l000F1351:
	v230 = loc11
	v231 = arg3
	v232 = v230 == v231
	loc148 = v232
	v230 = loc148
	branch !v230 l000F1363
	// succ:  l000F1360 l000F1363
l000F1360:
	goto l000F1415
	// succ:  l000F1415
l000F1363:
	v230 = loc11
	v231 = 0xB<32>
	v230 = v230 + v231
	loc149 = v230
	v230 = loc149
	v233 = Mem0[v230:int8]
	v230 = CONVERT(v233, int8, word32)
	loc150 = v230
	v230 = loc150
	v231 = 0x18<32>
	v230 = v230 << v231
	v231 = 0x18<32>
	v230 = v230 >> v231
	v231 = 0<32>
	v232 = v230 < v231
	loc151 = v232
	v230 = loc151
	branch !v230 l000F13A0
	// succ:  l000F1388 l000F13A0
l000F1388:
	v230 = loc11
	v231 = 4<32>
	v230 = v230 + v231
	loc152 = v230
	v230 = loc152
	v230 = Mem0[v230:word32]
	loc153 = v230
	v230 = loc153
	loc156 = v230
	goto l000F13B0
	// succ:  l000F13B0
l000F13A0:
	v230 = loc150
	v231 = 0xFF<32>
	v230 = v230 & v231
	loc154 = v230
	v230 = loc154
	loc156 = v230
	// succ:  l000F13B0
l000F13B0:
	v230 = loc156
	v231 = 0<32>
	v232 = v230 == v231
	loc155 = v232
	v230 = loc155
	branch !v230 l000F13E1
	// succ:  l000F13BF l000F13E1
l000F13BF:
	v230 = loc12
	v231 = 2<32>
	v234 = SLICE(v231, byte, 0)
	Mem0[v230:byte] = v234
	v230 = loc14
	v231 = 0xFFFFFFFF<32>
	v230 = v230 + v231
	loc157 = v230
	v230 = loc13
	v231 = 1<32>
	v230 = v230 + v231
	loc158 = v230
	v230 = loc158
	loc22 = v230
	v230 = loc157
	loc23 = v230
	goto l000F13F0
	// succ:  l000F13F0
l000F13E1:
	v230 = loc12
	v231 = 1<32>
	v235 = SLICE(v231, byte, 0)
	Mem0[v230:byte] = v235
	v230 = loc13
	loc22 = v230
	v230 = loc14
	loc23 = v230
	// succ:  l000F13F0
l000F13F0:
	v230 = loc11
	v231 = 0xC<32>
	v230 = v230 + v231
	loc159 = v230
	v230 = loc12
	v231 = 1<32>
	v230 = v230 + v231
	loc160 = v230
	v230 = loc159
	loc11 = v230
	v230 = loc160
	loc12 = v230
	v230 = loc22
	loc13 = v230
	v230 = loc23
	loc14 = v230
	goto l000F133F
	// succ:  l000F133F
l000F1415:
	v230 = 0<32>
	loc10 = v230
	v230 = loc13
	loc26 = v230
	v230 = loc14
	loc27 = v230
	// succ:  l000F1425
l000F1425:
	v230 = arg0
	v230 = Mem0[v230:word32]
	loc161 = v230
	v230 = loc161
	v231 = 0<32>
	v232 = v230 == v231
	loc162 = v232
	// succ:  l000F1438
l000F1438:
	v230 = loc162
	branch !v230 l000F1445
	// succ:  l000F143F l000F1445
l000F143F:
	v230 = 0<32>
	loc176 = v230
	goto l000F14F5
	// succ:  l000F14F5
l000F1445:
	v230 = loc161
	v231 = 0xC<32>
	v230 = v230 + v231
	loc163 = v230
	v230 = loc163
	v230 = Mem0[v230:word32]
	loc164 = v230
	v230 = loc161
	v231 = 0x10<32>
	v230 = v230 + v231
	loc165 = v230
	v230 = loc165
	v230 = Mem0[v230:word32]
	loc166 = v230
	v230 = loc164
	v231 = loc166
	v232 = v230 == v231
	loc167 = v232
	v230 = loc167
	branch !v230 l000F14EE
	// succ:  l000F1478 l000F14EE
l000F1478:
	v230 = loc161
	v230 = Mem0[v230:word32]
	loc168 = v230
	v230 = loc168
	v231 = 0x24<32>
	v230 = v230 + v231
	loc169 = v230
	v230 = loc169
	v230 = Mem0[v230:word32]
	loc170 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc170
	v231 = loc161
	v230 = invoke_ii(v230, v231)
	loc171 = v230
	v230 = Mem0[0x00140048<p32>:word32]
	loc172 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc172
	v231 = 1<32>
	v230 = v230 & v231
	loc173 = v230
	v230 = loc173
	branch !v230 l000F14C1
	// succ:  l000F14B9 l000F14C1
l000F14B9:
	v230 = 0x27<32>
	loc232 = v230
	goto l000F1A03
	// succ:  l000F1A03
l000F14C1:
	v230 = loc171
	v231 = 0xFFFFFFFF<32>
	v232 = v230 == v231
	loc174 = v232
	v230 = loc174
	branch !v230 l000F14DE
	// succ:  l000F14CF l000F14DE
l000F14CF:
	v230 = arg0
	v231 = 0<32>
	Mem0[v230:word32] = v231
	v230 = 0<32>
	loc176 = v230
	goto l000F14F6
	// succ:  l000F14F6
l000F14DE:
	v230 = arg0
	v230 = Mem0[v230:word32]
	loc35 = v230
	v230 = loc35
	loc176 = v230
	goto l000F14F6
	// succ:  l000F14F6
l000F14EC:
	goto l000F14F4
	// succ:  l000F14F4
l000F14EE:
	v230 = loc161
	loc176 = v230
	// succ:  l000F14F4
l000F14F4:
	// succ:  l000F14F5
l000F14F5:
	// succ:  l000F14F6
l000F14F6:
	v230 = loc176
	v231 = 0<32>
	v232 = v230 == v231
	loc175 = v232
	v230 = arg1
	v230 = Mem0[v230:word32]
	loc177 = v230
	v230 = loc177
	v231 = 0<32>
	v232 = v230 == v231
	loc178 = v232
	v230 = loc178
	branch !v230 l000F151B
	// succ:  l000F1516 l000F151B
l000F1516:
	v230 = 0<32>
	loc37 = v230
	goto l000F15BE
	// succ:  l000F15BE
l000F151B:
	v230 = loc177
	v231 = 0xC<32>
	v230 = v230 + v231
	loc179 = v230
	v230 = loc179
	v230 = Mem0[v230:word32]
	loc180 = v230
	v230 = loc177
	v231 = 0x10<32>
	v230 = v230 + v231
	loc181 = v230
	v230 = loc181
	v230 = Mem0[v230:word32]
	loc182 = v230
	v230 = loc180
	v231 = loc182
	v232 = v230 == v231
	loc183 = v232
	v230 = loc183
	branch !v230 l000F15B8
	// succ:  l000F154E l000F15B8
l000F154E:
	v230 = loc177
	v230 = Mem0[v230:word32]
	loc184 = v230
	v230 = loc184
	v231 = 0x24<32>
	v230 = v230 + v231
	loc185 = v230
	v230 = loc185
	v230 = Mem0[v230:word32]
	loc186 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc186
	v231 = loc177
	v230 = invoke_ii(v230, v231)
	loc187 = v230
	v230 = Mem0[0x00140048<p32>:word32]
	loc188 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc188
	v231 = 1<32>
	v230 = v230 & v231
	loc189 = v230
	v230 = loc189
	branch !v230 l000F1597
	// succ:  l000F158F l000F1597
l000F158F:
	v230 = 0x27<32>
	loc232 = v230
	goto l000F1A03
	// succ:  l000F1A03
l000F1597:
	v230 = loc187
	v231 = 0xFFFFFFFF<32>
	v232 = v230 == v231
	loc190 = v232
	v230 = loc190
	branch !v230 l000F15B1
	// succ:  l000F15A5 l000F15B1
l000F15A5:
	v230 = arg1
	v231 = 0<32>
	Mem0[v230:word32] = v231
	v230 = 0<32>
	loc37 = v230
	goto l000F15B6
	// succ:  l000F15B6
l000F15B1:
	v230 = loc177
	loc37 = v230
	// succ:  l000F15B6
l000F15B6:
	goto l000F15BD
	// succ:  l000F15BD
l000F15B8:
	v230 = loc177
	loc37 = v230
	// succ:  l000F15BD
l000F15BD:
	// succ:  l000F15BE
l000F15BE:
	v230 = loc37
	v231 = 0<32>
	v232 = v230 == v231
	loc191 = v232
	v230 = loc175
	v231 = loc191
	v230 = v230 ^ v231
	loc231 = v230
	v230 = loc27
	v231 = 0<32>
	v232 = v230 != v231
	loc192 = v232
	v230 = loc192
	v231 = loc231
	v230 = v230 & v231
	loc193 = v230
	v230 = arg0
	v230 = Mem0[v230:word32]
	loc194 = v230
	v230 = loc193
	v232 = v230 == 0<32>
	branch !v232 l000F15F9
	// succ:  l000F15F1 l000F15F9
l000F15F1:
	v230 = 0x1C<32>
	loc232 = v230
	goto l000F1A03
	// succ:  l000F1A03
l000F15F9:
	v230 = loc194
	v231 = 0xC<32>
	v230 = v230 + v231
	loc227 = v230
	v230 = loc227
	v230 = Mem0[v230:word32]
	loc228 = v230
	v230 = loc194
	v231 = 0x10<32>
	v230 = v230 + v231
	loc229 = v230
	v230 = loc229
	v230 = Mem0[v230:word32]
	loc230 = v230
	v230 = loc228
	v231 = loc230
	v232 = v230 == v231
	loc44 = v232
	v230 = loc44
	branch !v230 l000F166E
	// succ:  l000F162A l000F166E
l000F162A:
	v230 = loc194
	v230 = Mem0[v230:word32]
	loc45 = v230
	v230 = loc45
	v231 = 0x24<32>
	v230 = v230 + v231
	loc46 = v230
	v230 = loc46
	v230 = Mem0[v230:word32]
	loc47 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc47
	v231 = loc194
	v230 = invoke_ii(v230, v231)
	loc48 = v230
	v230 = Mem0[0x00140048<p32>:word32]
	loc49 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc49
	v231 = 1<32>
	v230 = v230 & v231
	loc50 = v230
	v230 = loc50
	branch !v230 l000F1668
	// succ:  l000F1660 l000F1668
l000F1660:
	v230 = 0x27<32>
	loc232 = v230
	goto l000F1A03
	// succ:  l000F1A03
l000F1668:
	v230 = loc48
	loc8 = v230
	// succ:  l000F166C
l000F166C:
	goto l000F1682
	// succ:  l000F1682
l000F166E:
	v230 = loc228
	v236 = Mem0[v230:int8]
	v230 = CONVERT(v236, int8, word32)
	loc51 = v230
	v230 = loc51
	v231 = 0xFF<32>
	v230 = v230 & v231
	loc52 = v230
	v230 = loc52
	loc8 = v230
	// succ:  l000F1682
l000F1682:
	v230 = loc8
	v231 = 0xFF<32>
	v230 = v230 & v231
	loc53 = v230
	v230 = arg6
	branch !v230 l000F1694
	// succ:  l000F168F l000F1694
l000F168F:
	v230 = loc53
	loc9 = v230
	goto l000F16D7
	// succ:  l000F16D7
l000F1694:
	v230 = arg4
	v230 = Mem0[v230:word32]
	loc55 = v230
	v230 = loc55
	v231 = 0xC<32>
	v230 = v230 + v231
	loc56 = v230
	v230 = loc56
	v230 = Mem0[v230:word32]
	loc57 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc57
	v231 = arg4
	v237 = loc53
	v230 = invoke_iii(v230, v231, v237)
	loc58 = v230
	v230 = Mem0[0x00140048<p32>:word32]
	loc59 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc59
	v231 = 1<32>
	v230 = v230 & v231
	loc60 = v230
	v230 = loc60
	branch !v230 l000F16D2
	// succ:  l000F16CA l000F16D2
l000F16CA:
	v230 = 0x2D<32>
	loc232 = v230
	goto l000F1A03
	// succ:  l000F1A03
l000F16D2:
	v230 = loc58
	loc9 = v230
	// succ:  l000F16D6
l000F16D6:
	// succ:  l000F16D7
l000F16D7:
	v230 = loc10
	v231 = 1<32>
	v230 = v230 + v231
	loc63 = v230
	v230 = arg2
	loc19 = v230
	v230 = 0<32>
	loc20 = v230
	v230 = loc15
	loc21 = v230
	v230 = loc26
	loc29 = v230
	v230 = loc27
	loc30 = v230
	// succ:  l000F16F5
l000F16F5:
	v230 = loc19
	v231 = arg3
	v232 = v230 == v231
	loc64 = v232
	v230 = loc64
	branch !v230 l000F1705
	// succ:  l000F1702 l000F1705
l000F1702:
	goto l000F1884
	// succ:  l000F1884
l000F1705:
	v230 = loc21
	v238 = Mem0[v230:int8]
	v230 = CONVERT(v238, int8, word32)
	loc66 = v230
	v230 = loc66
	v231 = 0x18<32>
	v230 = v230 << v231
	v231 = 0x18<32>
	v230 = v230 >> v231
	v231 = 1<32>
	v232 = v230 == v231
	loc67 = v232
	// succ:  l000F1719
l000F1719:
	v230 = loc67
	branch !v230 l000F1852
	// succ:  l000F171F l000F1852
l000F171F:
	v230 = loc19
	v231 = 0xB<32>
	v230 = v230 + v231
	loc68 = v230
	v230 = loc68
	v239 = Mem0[v230:int8]
	v230 = CONVERT(v239, int8, word32)
	loc69 = v230
	v230 = loc69
	v231 = 0x18<32>
	v230 = v230 << v231
	v231 = 0x18<32>
	v230 = v230 >> v231
	v231 = 0<32>
	v232 = v230 < v231
	loc70 = v232
	v230 = loc70
	branch !v230 l000F174A
	// succ:  l000F173E l000F174A
l000F173E:
	v230 = loc19
	v230 = Mem0[v230:word32]
	loc71 = v230
	v230 = loc71
	loc73 = v230
	goto l000F174E
	// succ:  l000F174E
l000F174A:
	v230 = loc19
	loc73 = v230
	// succ:  l000F174E
l000F174E:
	v230 = loc73
	v231 = loc10
	v230 = v230 + v231
	loc72 = v230
	v230 = loc72
	v240 = Mem0[v230:int8]
	v230 = CONVERT(v240, int8, word32)
	loc74 = v230
	v230 = arg6
	branch !v230 l000F1766
	// succ:  l000F1761 l000F1766
l000F1761:
	v230 = loc74
	loc18 = v230
	goto l000F17A9
	// succ:  l000F17A9
l000F1766:
	v230 = arg4
	v230 = Mem0[v230:word32]
	loc75 = v230
	v230 = loc75
	v231 = 0xC<32>
	v230 = v230 + v231
	loc77 = v230
	v230 = loc77
	v230 = Mem0[v230:word32]
	loc78 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc78
	v231 = arg4
	v237 = loc74
	v230 = invoke_iii(v230, v231, v237)
	loc79 = v230
	v230 = Mem0[0x00140048<p32>:word32]
	loc80 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc80
	v231 = 1<32>
	v230 = v230 & v231
	loc81 = v230
	v230 = loc81
	branch !v230 l000F17A4
	// succ:  l000F179C l000F17A4
l000F179C:
	v230 = 0x37<32>
	loc232 = v230
	goto l000F1A03
	// succ:  l000F1A03
l000F17A4:
	v230 = loc79
	loc18 = v230
	// succ:  l000F17A8
l000F17A8:
	// succ:  l000F17A9
l000F17A9:
	v230 = loc9
	v231 = 0x18<32>
	v230 = v230 << v231
	v231 = 0x18<32>
	v230 = v230 >> v231
	v231 = loc18
	v237 = 0x18<32>
	v231 = v231 << v237
	v237 = 0x18<32>
	v231 = v231 >> v237
	v232 = v230 == v231
	loc84 = v232
	v230 = loc84
	v232 = v230 == 0<32>
	branch !v232 l000F17DF
	// succ:  l000F17C2 l000F17DF
l000F17C2:
	v230 = loc21
	v231 = 0<32>
	v241 = SLICE(v231, byte, 0)
	Mem0[v230:byte] = v241
	v230 = loc30
	v231 = 0xFFFFFFFF<32>
	v230 = v230 + v231
	loc95 = v230
	v230 = loc20
	loc24 = v230
	v230 = loc29
	loc31 = v230
	v230 = loc95
	loc32 = v230
	goto l000F185F
	// succ:  l000F185F
l000F17DF:
	v230 = loc68
	v242 = Mem0[v230:int8]
	v230 = CONVERT(v242, int8, word32)
	loc85 = v230
	v230 = loc85
	v231 = 0x18<32>
	v230 = v230 << v231
	v231 = 0x18<32>
	v230 = v230 >> v231
	v231 = 0<32>
	v232 = v230 < v231
	loc86 = v232
	v230 = loc86
	branch !v230 l000F180A
	// succ:  l000F17F7 l000F180A
l000F17F7:
	v230 = loc19
	v231 = 4<32>
	v230 = v230 + v231
	loc88 = v230
	v230 = loc88
	v230 = Mem0[v230:word32]
	loc89 = v230
	v230 = loc89
	loc92 = v230
	goto l000F1816
	// succ:  l000F1816
l000F180A:
	v230 = loc85
	v231 = 0xFF<32>
	v230 = v230 & v231
	loc90 = v230
	v230 = loc90
	loc92 = v230
	// succ:  l000F1816
l000F1816:
	v230 = loc92
	v231 = loc63
	v232 = v230 == v231
	loc91 = v232
	v230 = loc91
	branch !v230 l000F1844
	// succ:  l000F1822 l000F1844
l000F1822:
	v230 = loc30
	v231 = 0xFFFFFFFF<32>
	v230 = v230 + v231
	loc93 = v230
	v230 = loc29
	v231 = 1<32>
	v230 = v230 + v231
	loc94 = v230
	v230 = loc21
	v231 = 2<32>
	v243 = SLICE(v231, byte, 0)
	Mem0[v230:byte] = v243
	v230 = 1<32>
	loc24 = v230
	v230 = loc94
	loc31 = v230
	v230 = loc93
	loc32 = v230
	goto l000F1850
	// succ:  l000F1850
l000F1844:
	v230 = 1<32>
	loc24 = v230
	v230 = loc29
	loc31 = v230
	v230 = loc30
	loc32 = v230
	// succ:  l000F1850
l000F1850:
	goto l000F185E
	// succ:  l000F185E
l000F1852:
	v230 = loc20
	loc24 = v230
	v230 = loc29
	loc31 = v230
	v230 = loc30
	loc32 = v230
	// succ:  l000F185E
l000F185E:
	// succ:  l000F185F
l000F185F:
	v230 = loc19
	v231 = 0xC<32>
	v230 = v230 + v231
	loc96 = v230
	v230 = loc21
	v231 = 1<32>
	v230 = v230 + v231
	loc97 = v230
	v230 = loc96
	loc19 = v230
	v230 = loc24
	loc20 = v230
	v230 = loc97
	loc21 = v230
	v230 = loc31
	loc29 = v230
	v230 = loc32
	loc30 = v230
	goto l000F16D7
	// succ:  l000F16D7
l000F1884:
	v230 = loc20
	v232 = v230 == 0<32>
	branch !v232 l000F189A
	// succ:  l000F188B l000F189A
l000F188B:
	v230 = loc63
	loc10 = v230
	v230 = loc29
	loc26 = v230
	v230 = loc30
	loc27 = v230
	goto l000F1415
	// succ:  l000F1415
l000F189A:
	v230 = arg0
	v230 = Mem0[v230:word32]
	loc99 = v230
	v230 = loc99
	v231 = 0xC<32>
	v230 = v230 + v231
	loc100 = v230
	v230 = loc100
	v230 = Mem0[v230:word32]
	loc101 = v230
	v230 = loc99
	v231 = 0x10<32>
	v230 = v230 + v231
	loc102 = v230
	v230 = loc102
	v230 = Mem0[v230:word32]
	loc103 = v230
	v230 = loc101
	v231 = loc103
	v232 = v230 == v231
	loc104 = v232
	v230 = loc104
	branch !v230 l000F1905
	// succ:  l000F18C8 l000F1905
l000F18C8:
	v230 = loc99
	v230 = Mem0[v230:word32]
	loc105 = v230
	v230 = loc105
	v231 = 0x28<32>
	v230 = v230 + v231
	loc106 = v230
	v230 = loc106
	v230 = Mem0[v230:word32]
	loc107 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc107
	v231 = loc99
	v230 = invoke_ii(v230, v231)
	v230 = Mem0[0x00140048<p32>:word32]
	loc108 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc108
	v231 = 1<32>
	v230 = v230 & v231
	loc110 = v230
	v230 = loc110
	branch !v230 l000F1904
	// succ:  l000F18FB l000F1904
l000F18FB:
	v230 = 0x45<32>
	loc232 = v230
	goto l000F1A03
	// succ:  l000F1A03
l000F1904:
	goto l000F1913
	// succ:  l000F1913
l000F1905:
	v230 = loc101
	v231 = 1<32>
	v230 = v230 + v231
	loc111 = v230
	v230 = loc100
	v231 = loc111
	Mem0[v230:word32] = v231
	// succ:  l000F1913
l000F1913:
	v230 = loc29
	v231 = loc30
	v230 = v230 + v231
	loc112 = v230
	v230 = loc112
	v231 = 1<32>
	v232 = v230 >u v231
	loc113 = v232
	v230 = loc113
	branch !v230 l000F1933
	// succ:  l000F1926 l000F1933
l000F1926:
	v230 = arg2
	loc7 = v230
	v230 = loc15
	loc25 = v230
	v230 = loc29
	loc33 = v230
	goto l000F1941
	// succ:  l000F1941
l000F1933:
	v230 = loc63
	loc10 = v230
	v230 = loc29
	loc26 = v230
	v230 = loc30
	loc27 = v230
	goto l000F1415
	// succ:  l000F1415
l000F1941:
	v230 = loc7
	v231 = arg3
	v232 = v230 == v231
	loc114 = v232
	v230 = loc114
	branch !v230 l000F195E
	// succ:  l000F194F l000F195E
l000F194F:
	v230 = loc63
	loc10 = v230
	v230 = loc33
	loc26 = v230
	v230 = loc30
	loc27 = v230
	goto l000F1415
	// succ:  l000F1415
l000F195E:
	v230 = loc25
	v244 = Mem0[v230:int8]
	v230 = CONVERT(v244, int8, word32)
	loc117 = v230
	v230 = loc117
	v231 = 0x18<32>
	v230 = v230 << v231
	v231 = 0x18<32>
	v230 = v230 >> v231
	v231 = 2<32>
	v232 = v230 == v231
	loc118 = v232
	v230 = loc118
	branch !v230 l000F19DB
	// succ:  l000F1976 l000F19DB
l000F1976:
	v230 = loc7
	v231 = 0xB<32>
	v230 = v230 + v231
	loc119 = v230
	v230 = loc119
	v245 = Mem0[v230:int8]
	v230 = CONVERT(v245, int8, word32)
	loc121 = v230
	v230 = loc121
	v231 = 0x18<32>
	v230 = v230 << v231
	v231 = 0x18<32>
	v230 = v230 >> v231
	v231 = 0<32>
	v232 = v230 < v231
	loc122 = v232
	v230 = loc122
	branch !v230 l000F19A8
	// succ:  l000F1995 l000F19A8
l000F1995:
	v230 = loc7
	v231 = 4<32>
	v230 = v230 + v231
	loc123 = v230
	v230 = loc123
	v230 = Mem0[v230:word32]
	loc124 = v230
	v230 = loc124
	loc127 = v230
	goto l000F19B4
	// succ:  l000F19B4
l000F19A8:
	v230 = loc121
	v231 = 0xFF<32>
	v230 = v230 & v231
	loc125 = v230
	v230 = loc125
	loc127 = v230
	// succ:  l000F19B4
l000F19B4:
	v230 = loc127
	v231 = loc63
	v232 = v230 == v231
	loc126 = v232
	v230 = loc126
	branch !v230 l000F19C5
	// succ:  l000F19C0 l000F19C5
l000F19C0:
	v230 = loc33
	loc34 = v230
	goto l000F19D9
	// succ:  l000F19D9
l000F19C5:
	v230 = loc33
	v231 = 0xFFFFFFFF<32>
	v230 = v230 + v231
	loc128 = v230
	v230 = loc25
	v231 = 0<32>
	v246 = SLICE(v231, byte, 0)
	Mem0[v230:byte] = v246
	v230 = loc128
	loc34 = v230
	// succ:  l000F19D9
l000F19D9:
	goto l000F19DF
	// succ:  l000F19DF
l000F19DB:
	v230 = loc33
	loc34 = v230
	// succ:  l000F19DF
l000F19DF:
	v230 = loc7
	v231 = 0xC<32>
	v230 = v230 + v231
	loc129 = v230
	v230 = loc25
	v231 = 1<32>
	v230 = v230 + v231
	loc130 = v230
	v230 = loc129
	loc7 = v230
	v230 = loc130
	loc25 = v230
	v230 = loc34
	loc33 = v230
	goto l000F1941
	// succ:  l000F1941
l000F1A03:
	v230 = loc232
	v231 = 0x1C<32>
	v232 = v230 == v231
	branch !v232 l000F1CB2
	// succ:  l000F1A0D l000F1CB2
l000F1A0D:
	v230 = loc194
	v231 = 0<32>
	v232 = v230 == v231
	loc195 = v232
	// succ:  l000F1A16
l000F1A16:
	v230 = loc195
	branch !v230 l000F1A28
	// succ:  l000F1A1D l000F1A28
l000F1A1D:
	v230 = 0<32>
	loc211 = v230
	v230 = 0x22<32>
	loc232 = v230
	goto l000F1AE1
	// succ:  l000F1AE1
l000F1A28:
	v230 = loc194
	v231 = 0xC<32>
	v230 = v230 + v231
	loc196 = v230
	v230 = loc196
	v230 = Mem0[v230:word32]
	loc197 = v230
	v230 = loc194
	v231 = 0x10<32>
	v230 = v230 + v231
	loc199 = v230
	v230 = loc199
	v230 = Mem0[v230:word32]
	loc200 = v230
	v230 = loc197
	v231 = loc200
	v232 = v230 == v231
	loc201 = v232
	v230 = loc201
	branch !v230 l000F1AD5
	// succ:  l000F1A5B l000F1AD5
l000F1A5B:
	v230 = loc194
	v230 = Mem0[v230:word32]
	loc202 = v230
	v230 = loc202
	v231 = 0x24<32>
	v230 = v230 + v231
	loc203 = v230
	v230 = loc203
	v230 = Mem0[v230:word32]
	loc204 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc204
	v231 = loc194
	v230 = invoke_ii(v230, v231)
	loc205 = v230
	v230 = Mem0[0x00140048<p32>:word32]
	loc206 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc206
	v231 = 1<32>
	v230 = v230 & v231
	loc207 = v230
	v230 = loc207
	v232 = v230 == 0<32>
	branch !v232 l000F1AD4
	// succ:  l000F1A9D l000F1AD4
l000F1A9D:
	v230 = loc205
	v231 = 0xFFFFFFFF<32>
	v232 = v230 == v231
	loc208 = v232
	v230 = loc208
	branch !v230 l000F1ABF
	// succ:  l000F1AAB l000F1ABF
l000F1AAB:
	v230 = arg0
	v231 = 0<32>
	Mem0[v230:word32] = v231
	v230 = 0<32>
	loc211 = v230
	v230 = 0x22<32>
	loc232 = v230
	goto l000F1AE2
	// succ:  l000F1AE2
l000F1ABF:
	v230 = arg0
	v230 = Mem0[v230:word32]
	loc36 = v230
	v230 = loc36
	loc211 = v230
	v230 = 0x22<32>
	loc232 = v230
	goto l000F1AE2
	// succ:  l000F1AE2
l000F1AD2:
	// succ:  l000F1AD4
l000F1AD4:
	goto l000F1AE0
	// succ:  l000F1AE0
l000F1AD5:
	v230 = loc194
	loc211 = v230
	v230 = 0x22<32>
	loc232 = v230
	// succ:  l000F1AE0
l000F1AE0:
	// succ:  l000F1AE1
l000F1AE1:
	// succ:  l000F1AE2
l000F1AE2:
	v230 = loc232
	v231 = 0x22<32>
	v232 = v230 == v231
	branch !v232 l000F1C9C
	// succ:  l000F1AED l000F1C9C
l000F1AED:
	v230 = loc211
	v231 = 0<32>
	v232 = v230 == v231
	loc210 = v232
	// succ:  l000F1AF6
l000F1AF6:
	v230 = loc191
	branch !v230 l000F1B04
	// succ:  l000F1AFD l000F1B04
l000F1AFD:
	v230 = 0x4E<32>
	loc232 = v230
	goto l000F1BAB
	// succ:  l000F1BAB
l000F1B04:
	v230 = loc37
	v231 = 0xC<32>
	v230 = v230 + v231
	loc212 = v230
	v230 = loc212
	v230 = Mem0[v230:word32]
	loc213 = v230
	v230 = loc37
	v231 = 0x10<32>
	v230 = v230 + v231
	loc214 = v230
	v230 = loc214
	v230 = Mem0[v230:word32]
	loc215 = v230
	v230 = loc213
	v231 = loc215
	v232 = v230 == v231
	loc216 = v232
	v230 = loc216
	branch !v230 l000F1B96
	// succ:  l000F1B35 l000F1B96
l000F1B35:
	v230 = loc37
	v230 = Mem0[v230:word32]
	loc217 = v230
	v230 = loc217
	v231 = 0x24<32>
	v230 = v230 + v231
	loc218 = v230
	v230 = loc218
	v230 = Mem0[v230:word32]
	loc219 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc219
	v231 = loc37
	v230 = invoke_ii(v230, v231)
	loc221 = v230
	v230 = Mem0[0x00140048<p32>:word32]
	loc222 = v230
	v230 = 0<32>
	Mem0[0x00140048<p32>:word32] = v230
	v230 = loc222
	v231 = 1<32>
	v230 = v230 & v231
	loc223 = v230
	v230 = loc223
	branch !v230 l000F1B77
	// succ:  l000F1B74 l000F1B77
l000F1B74:
	goto l000F1C9C
	// succ:  l000F1C9C
l000F1B77:
	v230 = loc221
	v231 = 0xFFFFFFFF<32>
	v232 = v230 == v231
	loc224 = v232
	v230 = loc224
	branch !v230 l000F1B95
	// succ:  l000F1B85 l000F1B95
l000F1B85:
	v230 = arg1
	v231 = 0<32>
	Mem0[v230:word32] = v231
	v230 = 0x4E<32>
	loc232 = v230
	goto l000F1BAC
	// succ:  l000F1BAC
l000F1B95:
	// succ:  l000F1B96
l000F1B96:
	v230 = loc210
	branch !v230 l000F1BA4
	// succ:  l000F1B9B l000F1BA4
l000F1B9B:
	v230 = arg2
	loc16 = v230
	v230 = loc15
	loc28 = v230
	goto l000F1BAA
	// succ:  l000F1BAA
l000F1BA4:
	v230 = 0x4F<32>
	loc232 = v230
	// succ:  l000F1BAA
l000F1BAA:
	// succ:  l000F1BAB
l000F1BAB:
	// succ:  l000F1BAC
l000F1BAC:
	v230 = loc232
	v231 = 0x4E<32>
	v232 = v230 == v231
	branch !v232 l000F1BCC
	// succ:  l000F1BB6 l000F1BCC
l000F1BB6:
	v230 = loc210
	branch !v230 l000F1BC2
	// succ:  l000F1BBB l000F1BC2
l000F1BBB:
	v230 = 0x4F<32>
	loc232 = v230
	goto l000F1BCA
	// succ:  l000F1BCA
l000F1BC2:
	v230 = arg2
	loc16 = v230
	v230 = loc15
	loc28 = v230
	// succ:  l000F1BCA
l000F1BCA:
	// succ:  l000F1BCC
l000F1BCC:
	v230 = loc232
	v231 = 0x4F<32>
	v232 = v230 == v231
	branch !v232 l000F1BF7
	// succ:  l000F1BD5 l000F1BF7
l000F1BD5:
	v230 = arg5
	v230 = Mem0[v230:word32]
	loc132 = v230
	v230 = loc132
	v231 = 2<32>
	v230 = v230 | v231
	loc133 = v230
	v230 = arg5
	v231 = loc133
	Mem0[v230:word32] = v231
	v230 = arg2
	loc16 = v230
	v230 = loc15
	loc28 = v230
	// succ:  l000F1BF7
l000F1BF7:
	v230 = loc16
	v231 = arg3
	v232 = v230 == v231
	loc136 = v232
	v230 = loc136
	branch !v230 l000F1C11
	// succ:  l000F1C08 l000F1C11
l000F1C08:
	v230 = 0x54<32>
	loc232 = v230
	goto l000F1C50
	// succ:  l000F1C50
l000F1C11:
	v230 = loc28
	v247 = Mem0[v230:int8]
	v230 = CONVERT(v247, int8, word32)
	loc137 = v230
	v230 = loc137
	v231 = 0x18<32>
	v230 = v230 << v231
	v231 = 0x18<32>
	v230 = v230 >> v231
	v231 = 2<32>
	v232 = v230 == v231
	loc138 = v232
	v230 = loc138
	branch !v230 l000F1C34
	// succ:  l000F1C2D l000F1C34
l000F1C2D:
	v230 = loc16
	loc17 = v230
	goto l000F1C50
	// succ:  l000F1C50
l000F1C34:
	v230 = loc16
	v231 = 0xC<32>
	v230 = v230 + v231
	loc139 = v230
	v230 = loc28
	v231 = 1<32>
	v230 = v230 + v231
	loc140 = v230
	v230 = loc139
	loc16 = v230
	v230 = loc140
	loc28 = v230
	goto l000F1BF7
	// succ:  l000F1BF7
l000F1C50:
	v230 = loc232
	v231 = 0x54<32>
	v232 = v230 == v231
	branch !v232 l000F1C79
	// succ:  l000F1C5B l000F1C79
l000F1C5B:
	v230 = arg5
	v230 = Mem0[v230:word32]
	loc141 = v230
	v230 = loc141
	v231 = 4<32>
	v230 = v230 | v231
	loc143 = v230
	v230 = arg5
	v231 = loc143
	Mem0[v230:word32] = v231
	v230 = arg3
	loc17 = v230
	// succ:  l000F1C79
l000F1C79:
	v230 = loc42
	v231 = 0<32>
	v232 = v230 == v231
	loc144 = v232
	v230 = loc144
	v232 = v230 == 0<32>
	branch !v232 l000F1C93
	// succ:  l000F1C87 l000F1C93
l000F1C87:
	v230 = loc42
	loc145 = v230
	v230 = loc145
	_free(v230)
	// succ:  l000F1C93
l000F1C93:
	v230 = loc233
	Mem0[0x00140030<p32>:word32] = v230
	v230 = loc17
	return v230
	// succ:  fn000F1281_exit
l000F1C9C:
	// succ:  l000F1C9C
l000F1C9C:
	v230 = ___cxa_find_matching_catch_2()
	loc134 = v230
	v230 = Mem0[0x00140094<p32>:word32]
	loc135 = v230
	v230 = loc134
	loc38 = v230
	v230 = loc135
	loc39 = v230
	goto l000F1D1E
	// succ:  l000F1D1E
l000F1CB2:
	v230 = loc232
	v231 = 0x27<32>
	v232 = v230 == v231
	branch !v232 l000F1CCF
	// succ:  l000F1CBA l000F1CCF
l000F1CBA:
	v230 = ___cxa_find_matching_catch_2()
	loc225 = v230
	v230 = Mem0[0x00140094<p32>:word32]
	loc226 = v230
	v230 = loc225
	loc38 = v230
	v230 = loc226
	loc39 = v230
	goto l000F1D1D
	// succ:  l000F1D1D
l000F1CCF:
	v230 = loc232
	v231 = 0x2D<32>
	v232 = v230 == v231
	branch !v232 l000F1CE8
	// succ:  l000F1CD7 l000F1CE8
l000F1CD7:
	v230 = ___cxa_find_matching_catch_2()
	loc61 = v230
	v230 = Mem0[0x00140094<p32>:word32]
	loc62 = v230
	v230 = loc61
	loc38 = v230
	v230 = loc62
	loc39 = v230
	goto l000F1D1C
	// succ:  l000F1D1C
l000F1CE8:
	v230 = loc232
	v231 = 0x37<32>
	v232 = v230 == v231
	branch !v232 l000F1D01
	// succ:  l000F1CF0 l000F1D01
l000F1CF0:
	v230 = ___cxa_find_matching_catch_2()
	loc82 = v230
	v230 = Mem0[0x00140094<p32>:word32]
	loc83 = v230
	v230 = loc82
	loc38 = v230
	v230 = loc83
	loc39 = v230
	goto l000F1D1B
	// succ:  l000F1D1B
l000F1D01:
	v230 = loc232
	v231 = 0x45<32>
	v232 = v230 == v231
	branch !v232 l000F1D1B
	// succ:  l000F1D0A l000F1D1B
l000F1D0A:
	v230 = ___cxa_find_matching_catch_2()
	loc115 = v230
	v230 = Mem0[0x00140094<p32>:word32]
	loc116 = v230
	v230 = loc115
	loc38 = v230
	v230 = loc116
	loc39 = v230
	// succ:  l000F1D1B
l000F1D1B:
	// succ:  l000F1D1B
l000F1D1B:
	// succ:  l000F1D1C
l000F1D1C:
	// succ:  l000F1D1D
l000F1D1D:
	// succ:  l000F1D1E
l000F1D1E:
	v230 = loc42
	v231 = 0<32>
	v232 = v230 == v231
	loc146 = v232
	v230 = loc146
	branch !v230 l000F1D35
	// succ:  l000F1D2C l000F1D35
l000F1D2C:
	v230 = loc38
	loc40 = v230
	v230 = loc39
	loc41 = v230
	goto l000F1D48
	// succ:  l000F1D48
l000F1D35:
	v230 = loc42
	loc147 = v230
	v230 = loc147
	_free(v230)
	v230 = loc38
	loc40 = v230
	v230 = loc39
	loc41 = v230
	// succ:  l000F1D48
l000F1D48:
	// succ:  l000F1D4A
l000F1D4A:
	v230 = loc40
	___resumeException(v230)
	v230 = 0<32>
	return v230
	// succ:  fn000F1281_exit
l000F1D51:
	return v230
	// succ:  fn000F1281_exit
fn000F1281_exit:


// fn000F1D53
// Return size: 0
void fn000F1D53(word32 arg0)
fn000F1D53_entry:
	// succ:  l000F1D53
l000F1D53:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	return
	// succ:  fn000F1D53_exit
l000F1D5A:
	return
	// succ:  fn000F1D53_exit
fn000F1D53_exit:


// fn000F1D5C
// Return size: 0
void fn000F1D5C(word32 arg0)
fn000F1D5C_entry:
	// succ:  l000F1D5C
l000F1D5C:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000F1D5C_exit
l000F1D68:
	return
	// succ:  fn000F1D5C_exit
fn000F1D5C_exit:


// fn000F1D6A
// Return size: 0
word32 fn000F1D6A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F1D6A_entry:
	// succ:  l000F1D6A
l000F1D6A:
	v73 = Mem0[0x00140030<p32>:word32]
	loc75 = v73
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = 0x40<32>
	v73 = v73 + v74
	Mem0[0x00140030<p32>:word32] = v73
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = Mem0[0x00140034<p32>:word32]
	v75 = v73 >= v74
	branch !v75 l000F1D85
	// succ:  l000F1D7F l000F1D85
l000F1D7F:
	v73 = 0x40<32>
	abortStackOverflow(v73)
	// succ:  l000F1D85
l000F1D85:
	v73 = loc75
	v74 = 0x3C<32>
	v73 = v73 + v74
	loc10 = v73
	v73 = loc75
	v74 = 0x38<32>
	v73 = v73 + v74
	loc9 = v73
	v73 = loc75
	v74 = 0x34<32>
	v73 = v73 + v74
	loc8 = v73
	v73 = loc75
	v74 = 0x30<32>
	v73 = v73 + v74
	loc65 = v73
	v73 = loc75
	v74 = 0x2C<32>
	v73 = v73 + v74
	loc71 = v73
	v73 = loc75
	v74 = 0x28<32>
	v73 = v73 + v74
	loc72 = v73
	v73 = loc75
	v74 = 0x24<32>
	v73 = v73 + v74
	loc73 = v73
	v73 = loc75
	v74 = 0x20<32>
	v73 = v73 + v74
	loc15 = v73
	v73 = loc75
	v74 = 8<32>
	v73 = v73 + v74
	loc16 = v73
	v73 = loc75
	loc17 = v73
	v73 = arg3
	v74 = 4<32>
	v73 = v73 + v74
	loc18 = v73
	v73 = loc18
	v73 = Mem0[v73:word32]
	loc19 = v73
	v73 = loc19
	v74 = 1<32>
	v73 = v73 & v74
	loc20 = v73
	v73 = loc20
	v74 = 0<32>
	v75 = v73 == v74
	loc21 = v75
	// succ:  l000F1DE4
l000F1DE4:
	v73 = loc21
	v73 = v73
	// succ:  l000F1DEA
l000F1DEA:
	v73 = loc65
	v74 = 0xFFFFFFFF<32>
	Mem0[v73:word32] = v74
	v73 = arg0
	v73 = Mem0[v73:word32]
	loc22 = v73
	v73 = loc22
	v74 = 0x10<32>
	v73 = v73 + v74
	loc23 = v73
	v73 = loc23
	v73 = Mem0[v73:word32]
	loc24 = v73
	v73 = arg1
	v73 = Mem0[v73:word32]
	loc25 = v73
	v73 = loc71
	v74 = loc25
	Mem0[v73:word32] = v74
	v73 = arg2
	v73 = Mem0[v73:word32]
	loc26 = v73
	v73 = loc72
	v74 = loc26
	Mem0[v73:word32] = v74
	v73 = loc8
	v74 = loc71
	v74 = Mem0[v74:word32]
	Mem0[v73:word32] = v74
	v73 = loc9
	v74 = loc72
	v74 = Mem0[v74:word32]
	Mem0[v73:word32] = v74
	v73 = arg0
	v74 = loc8
	v76 = loc9
	v77 = arg3
	v78 = arg4
	v79 = loc65
	v80 = loc24
	v81 = 0x1FF<32>
	v80 = v80 & v81
	v81 = 0x900<32>
	v80 = v80 + v81
fn000F1D6A_exit:


// fn000F20CE
// Return size: 0
word32 fn000F20CE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F20CE_entry:
	// succ:  l000F20CE
l000F20CE:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F20E7
	// succ:  l000F20E2 l000F20E7
l000F20E2:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F20E7
l000F20E7:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F81B1(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F20CE_exit
l000F2148:
	return v12
	// succ:  fn000F20CE_exit
fn000F20CE_exit:


// fn000F214A
// Return size: 0
word32 fn000F214A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F214A_entry:
	// succ:  l000F214A
l000F214A:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F2163
	// succ:  l000F215E l000F2163
l000F215E:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F2163
l000F2163:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F78C3(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F214A_exit
l000F21C4:
	return v12
	// succ:  fn000F214A_exit
fn000F214A_exit:


// fn000F21C6
// Return size: 0
word32 fn000F21C6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F21C6_entry:
	// succ:  l000F21C6
l000F21C6:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F21DF
	// succ:  l000F21DA l000F21DF
l000F21DA:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F21DF
l000F21DF:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F6FD6(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F21C6_exit
l000F2240:
	return v12
	// succ:  fn000F21C6_exit
fn000F21C6_exit:


// fn000F2242
// Return size: 0
word32 fn000F2242(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F2242_entry:
	// succ:  l000F2242
l000F2242:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F225B
	// succ:  l000F2256 l000F225B
l000F2256:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F225B
l000F225B:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F66E9(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F2242_exit
l000F22BC:
	return v12
	// succ:  fn000F2242_exit
fn000F2242_exit:


// fn000F22BE
// Return size: 0
word32 fn000F22BE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F22BE_entry:
	// succ:  l000F22BE
l000F22BE:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F22D7
	// succ:  l000F22D2 l000F22D7
l000F22D2:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F22D7
l000F22D7:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F5DFC(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F22BE_exit
l000F2338:
	return v12
	// succ:  fn000F22BE_exit
fn000F22BE_exit:


// fn000F233A
// Return size: 0
word32 fn000F233A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F233A_entry:
	// succ:  l000F233A
l000F233A:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F2353
	// succ:  l000F234E l000F2353
l000F234E:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F2353
l000F2353:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F539A(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F233A_exit
l000F23B4:
	return v12
	// succ:  fn000F233A_exit
fn000F233A_exit:


// fn000F23B6
// Return size: 0
word32 fn000F23B6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F23B6_entry:
	// succ:  l000F23B6
l000F23B6:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F23CF
	// succ:  l000F23CA l000F23CF
l000F23CA:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F23CF
l000F23CF:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F4A65(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F23B6_exit
l000F2430:
	return v12
	// succ:  fn000F23B6_exit
fn000F23B6_exit:


// fn000F2432
// Return size: 0
word32 fn000F2432(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F2432_entry:
	// succ:  l000F2432
l000F2432:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F244B
	// succ:  l000F2446 l000F244B
l000F2446:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F244B
l000F244B:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F4131(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F2432_exit
l000F24AC:
	return v12
	// succ:  fn000F2432_exit
fn000F2432_exit:


// fn000F24AE
// Return size: 0
word32 fn000F24AE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F24AE_entry:
	// succ:  l000F24AE
l000F24AE:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000F24C7
	// succ:  l000F24C2 l000F24C7
l000F24C2:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000F24C7
l000F24C7:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v12 = fn000F3224(v12, v13, v15, v16, v17, v18)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000F24AE_exit
l000F2528:
	return v12
	// succ:  fn000F24AE_exit
fn000F24AE_exit:


// fn000F252A
// Return size: 0
word32 fn000F252A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F252A_entry:
	// succ:  l000F252A
l000F252A:
	v207 = Mem0[0x00140030<p32>:word32]
	loc209 = v207
	v207 = Mem0[0x00140030<p32>:word32]
	v208 = 0x140<32>
	v207 = v207 + v208
	Mem0[0x00140030<p32>:word32] = v207
	v207 = Mem0[0x00140030<p32>:word32]
	v208 = Mem0[0x00140034<p32>:word32]
	v209 = v207 >= v208
	branch !v209 l000F2546
	// succ:  l000F2540 l000F2546
l000F2540:
	v207 = 0x140<32>
	abortStackOverflow(v207)
	// succ:  l000F2546
l000F2546:
	v207 = loc209
	loc207 = v207
	v207 = loc209
	v208 = 0xD0<32>
	v207 = v207 + v208
	loc159 = v207
	v207 = loc209
	v208 = 0xC4<32>
	v207 = v207 + v208
	loc170 = v207
	v207 = loc209
	v208 = 0xC0<32>
	v207 = v207 + v208
	loc181 = v207
	v207 = loc209
	v208 = 0xB4<32>
	v207 = v207 + v208
	loc192 = v207
	v207 = loc209
	v208 = 0xB0<32>
	v207 = v207 + v208
	loc29 = v207
	v207 = loc209
	v208 = 0x10<32>
	v207 = v207 + v208
	loc40 = v207
	v207 = loc209
	v208 = 8<32>
	v207 = v207 + v208
	loc51 = v207
	v207 = loc209
	v208 = 4<32>
	v207 = v207 + v208
	loc62 = v207
	v207 = loc170
	v210 = 0<64>
	Mem0[v207:word64] = v210
	v207 = loc170
	v208 = 8<32>
	v207 = v207 + v208
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = 0<32>
	loc7 = v207
	// succ:  l000F25AE
l000F25AE:
	v207 = loc7
	v208 = 3<32>
	v209 = v207 == v208
	loc203 = v209
	v207 = loc203
	branch !v207 l000F25C0
	// succ:  l000F25BD l000F25C0
l000F25BD:
	goto l000F25DF
	// succ:  l000F25DF
l000F25C0:
	v207 = loc170
	v208 = loc7
	v211 = 2<32>
	v208 = v208 << v211
	v207 = v207 + v208
	loc73 = v207
	v207 = loc73
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = loc7
	v208 = 1<32>
	v207 = v207 + v208
	loc84 = v207
	v207 = loc84
	loc7 = v207
	goto l000F2546
	// succ:  l000F2546
l000F25DF:
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = 0x167<32>
	v208 = arg3
	v207 = invoke_ii(v207, v208)
	loc95 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc106 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc106
	v208 = 1<32>
	v207 = v207 & v208
	loc117 = v207
	// succ:  l000F25FD
l000F25FD:
	v207 = loc117
	branch !v207 l000F261D
	// succ:  l000F2603 l000F261D
l000F2603:
	v207 = ___cxa_find_matching_catch_2()
	loc199 = v207
	v207 = Mem0[0x00140094<p32>:word32]
	loc200 = v207
	v207 = loc199
	loc6 = v207
	v207 = loc200
	loc15 = v207
	v207 = 0x24<32>
	loc208 = v207
	goto l000F2F2F
	// succ:  l000F2F2F
l000F261D:
	v207 = loc181
	v208 = loc95
	Mem0[v207:word32] = v208
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = 0x164<32>
	v208 = loc181
	v211 = 0x4C90<32>
	v207 = invoke_iii(v207, v208, v211)
	loc118 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc119 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc119
	v208 = 1<32>
	v207 = v207 & v208
	loc120 = v207
	v207 = loc120
	v209 = v207 == 0<32>
	branch !v209 l000F2F10
	// succ:  l000F264B l000F2F10
l000F264B:
	v207 = loc118
	v207 = Mem0[v207:word32]
	loc121 = v207
	v207 = loc121
	v208 = 0x30<32>
	v207 = v207 + v208
	loc122 = v207
	v207 = loc122
	v207 = Mem0[v207:word32]
	loc123 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc123
	v208 = loc118
	v211 = 0x37AB<32>
	v212 = 0x37C5<32>
	v213 = loc159
	v207 = invoke_iiiii(v207, v208, v211, v212, v213)
	v207 = Mem0[0x00140048<p32>:word32]
	loc124 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc124
	v208 = 1<32>
	v207 = v207 & v208
	loc125 = v207
	v207 = loc125
	v209 = v207 == 0<32>
	branch !v209 l000F2F0F
	// succ:  l000F268A l000F2F0F
l000F268A:
	v207 = loc95
	v207 = fn0011B43F(v207)
	v207 = loc192
	v210 = 0<64>
	Mem0[v207:word64] = v210
	v207 = loc192
	v208 = 8<32>
	v207 = v207 + v208
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = 0<32>
	loc12 = v207
	// succ:  l000F26A9
l000F26A9:
	v207 = loc12
	v208 = 3<32>
	v209 = v207 == v208
	loc204 = v209
	v207 = loc204
	branch !v207 l000F26BB
	// succ:  l000F26B8 l000F26BB
l000F26B8:
	goto l000F26DA
	// succ:  l000F26DA
l000F26BB:
	v207 = loc192
	v208 = loc12
	v211 = 2<32>
	v208 = v208 << v211
	v207 = v207 + v208
	loc126 = v207
	v207 = loc126
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = loc12
	v208 = 1<32>
	v207 = v207 + v208
	loc127 = v207
	v207 = loc127
	loc12 = v207
	goto l000F268A
	// succ:  l000F268A
l000F26DA:
	v207 = loc192
	v208 = 0xB<32>
	v207 = v207 + v208
	loc128 = v207
	v207 = loc128
	v214 = Mem0[v207:int8]
	v207 = CONVERT(v214, int8, word32)
	loc129 = v207
	v207 = loc129
	v208 = 0x18<32>
	v207 = v207 << v208
	v208 = 0x18<32>
	v207 = v207 >> v208
	v208 = 0<32>
	v209 = v207 < v208
	loc130 = v209
	v207 = loc130
	branch !v207 l000F2731
	// succ:  l000F2702 l000F2731
l000F2702:
	v207 = loc192
	v208 = 8<32>
	v207 = v207 + v208
	loc131 = v207
	v207 = loc131
	v207 = Mem0[v207:word32]
	loc132 = v207
	v207 = loc132
	v208 = 0x7FFFFFFF<32>
	v207 = v207 & v208
	loc133 = v207
	v207 = loc133
	v208 = 0xFFFFFFFF<32>
	v207 = v207 + v208
	loc205 = v207
	v207 = loc205
	loc134 = v207
	goto l000F2736
	// succ:  l000F2736
l000F2731:
	v207 = 0xA<32>
	loc134 = v207
	// succ:  l000F2736
l000F2736:
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = 0x17A<32>
	v208 = loc192
	v211 = loc134
	v212 = 0<32>
	invoke_viii(v207, v208, v211, v212)
	v207 = Mem0[0x00140048<p32>:word32]
	loc135 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc135
	v208 = 1<32>
	v207 = v207 & v208
	loc136 = v207
	v207 = loc136
	branch !v207 l000F2770
	// succ:  l000F275F l000F2770
l000F275F:
	v207 = ___cxa_find_matching_catch_2()
	loc30 = v207
	v207 = Mem0[0x00140094<p32>:word32]
	loc31 = v207
	v207 = loc30
	loc17 = v207
	v207 = loc31
	loc19 = v207
	goto l000F2EFD
	// succ:  l000F2EFD
l000F2770:
	v207 = loc128
	v215 = Mem0[v207:int8]
	v207 = CONVERT(v215, int8, word32)
	loc137 = v207
	v207 = loc137
	v208 = 0x18<32>
	v207 = v207 << v208
	v208 = 0x18<32>
	v207 = v207 >> v208
	v208 = 0<32>
	v209 = v207 < v208
	loc138 = v209
	v207 = loc192
	v207 = Mem0[v207:word32]
	loc139 = v207
	v207 = loc138
	branch !v207 l000F279A
	// succ:  l000F2796 l000F279A
l000F2796:
	v207 = loc139
	goto l000F279D
	// succ:  l000F279D
l000F279A:
	v207 = loc192
	// succ:  l000F279D
l000F279D:
	loc140 = v207
	v207 = loc29
	v208 = loc140
	Mem0[v207:word32] = v208
	v207 = loc51
	v208 = loc40
	Mem0[v207:word32] = v208
	v207 = loc62
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = loc192
	v208 = 4<32>
	v207 = v207 + v208
	loc141 = v207
	v207 = loc192
	v208 = 8<32>
	v207 = v207 + v208
	loc142 = v207
	v207 = arg1
	v207 = Mem0[v207:word32]
	loc22 = v207
	v207 = loc140
	loc14 = v207
	v207 = loc22
	loc24 = v207
	// succ:  l000F27DB
l000F27DB:
	v207 = loc24
	v208 = 0<32>
	v209 = v207 == v208
	loc143 = v209
	v207 = loc143
	branch !v207 l000F27F3
	// succ:  l000F27EA l000F27F3
l000F27EA:
	v207 = 0<32>
	loc23 = v207
	v207 = 1<32>
	loc114 = v207
	goto l000F28A7
	// succ:  l000F28A7
l000F27F3:
	v207 = loc24
	v208 = 0xC<32>
	v207 = v207 + v208
	loc144 = v207
	v207 = loc144
	v207 = Mem0[v207:word32]
	loc145 = v207
	v207 = loc24
	v208 = 0x10<32>
	v207 = v207 + v208
	loc146 = v207
	v207 = loc146
	v207 = Mem0[v207:word32]
	loc147 = v207
	v207 = loc145
	v208 = loc147
	v209 = v207 == v208
	loc148 = v209
	v207 = loc148
	branch !v207 l000F2872
	// succ:  l000F2824 l000F2872
l000F2824:
	v207 = loc24
	v207 = Mem0[v207:word32]
	loc149 = v207
	v207 = loc149
	v208 = 0x24<32>
	v207 = v207 + v208
	loc150 = v207
	v207 = loc150
	v207 = Mem0[v207:word32]
	loc151 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc151
	v208 = loc24
	v207 = invoke_ii(v207, v208)
	loc152 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc153 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc153
	v208 = 1<32>
	v207 = v207 & v208
	loc154 = v207
	v207 = loc154
	branch !v207 l000F286B
	// succ:  l000F2863 l000F286B
l000F2863:
	v207 = 0x26<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F286B:
	v207 = loc152
	loc9 = v207
	// succ:  l000F2870
l000F2870:
	goto l000F2880
	// succ:  l000F2880
l000F2872:
	v207 = loc145
	v207 = Mem0[v207:word32]
	loc155 = v207
	v207 = loc155
	loc9 = v207
	// succ:  l000F2880
l000F2880:
	v207 = loc9
	v208 = 0xFFFFFFFF<32>
	v209 = v207 == v208
	loc156 = v209
	v207 = loc156
	branch !v207 l000F289E
	// succ:  l000F288E l000F289E
l000F288E:
	v207 = arg1
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = 0<32>
	loc23 = v207
	v207 = 1<32>
	loc114 = v207
	goto l000F28A6
	// succ:  l000F28A6
l000F289E:
	v207 = loc24
	loc23 = v207
	v207 = 0<32>
	loc114 = v207
	// succ:  l000F28A6
l000F28A6:
	// succ:  l000F28A7
l000F28A7:
	v207 = arg2
	v207 = Mem0[v207:word32]
	loc157 = v207
	v207 = loc157
	v208 = 0<32>
	v209 = v207 == v208
	loc158 = v209
	// succ:  l000F28B9
l000F28B9:
	v207 = loc158
	branch !v207 l000F28C6
	// succ:  l000F28C0 l000F28C6
l000F28C0:
	v207 = 0x1A<32>
	loc208 = v207
	goto l000F2992
	// succ:  l000F2992
l000F28C6:
	v207 = loc157
	v208 = 0xC<32>
	v207 = v207 + v208
	loc160 = v207
	v207 = loc160
	v207 = Mem0[v207:word32]
	loc161 = v207
	v207 = loc157
	v208 = 0x10<32>
	v207 = v207 + v208
	loc162 = v207
	v207 = loc162
	v207 = Mem0[v207:word32]
	loc163 = v207
	v207 = loc161
	v208 = loc163
	v209 = v207 == v208
	loc164 = v209
	v207 = loc164
	branch !v207 l000F2949
	// succ:  l000F28F9 l000F2949
l000F28F9:
	v207 = loc157
	v207 = Mem0[v207:word32]
	loc165 = v207
	v207 = loc165
	v208 = 0x24<32>
	v207 = v207 + v208
	loc166 = v207
	v207 = loc166
	v207 = Mem0[v207:word32]
	loc167 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc167
	v208 = loc157
	v207 = invoke_ii(v207, v208)
	loc168 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc169 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc169
	v208 = 1<32>
	v207 = v207 & v208
	loc171 = v207
	v207 = loc171
	branch !v207 l000F2942
	// succ:  l000F293A l000F2942
l000F293A:
	v207 = 0x26<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F2942:
	v207 = loc168
	loc11 = v207
	// succ:  l000F2947
l000F2947:
	goto l000F2957
	// succ:  l000F2957
l000F2949:
	v207 = loc161
	v207 = Mem0[v207:word32]
	loc172 = v207
	v207 = loc172
	loc11 = v207
	// succ:  l000F2957
l000F2957:
	v207 = loc11
	v208 = 0xFFFFFFFF<32>
	v209 = v207 == v208
	loc173 = v209
	v207 = loc173
	branch !v207 l000F2974
	// succ:  l000F2965 l000F2974
l000F2965:
	v207 = arg2
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = 0x1A<32>
	loc208 = v207
	goto l000F2993
	// succ:  l000F2993
l000F2974:
	v207 = loc114
	branch !v207 l000F2980
	// succ:  l000F2978 l000F2980
l000F2978:
	v207 = loc157
	loc115 = v207
	goto l000F2993
	// succ:  l000F2993
l000F2980:
	v207 = loc14
	loc18 = v207
	v207 = loc157
	loc25 = v207
	v207 = 0x30<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F2990:
	// succ:  l000F2991
l000F2991:
	// succ:  l000F2992
l000F2992:
	// succ:  l000F2993
l000F2993:
	v207 = loc208
	v208 = 0x1A<32>
	v209 = v207 == v208
	branch !v209 l000F29BB
	// succ:  l000F299C l000F29BB
l000F299C:
	v207 = 0<32>
	loc208 = v207
	v207 = loc114
	branch !v207 l000F29B5
	// succ:  l000F29A5 l000F29B5
l000F29A5:
	v207 = loc14
	loc18 = v207
	v207 = 0<32>
	loc25 = v207
	v207 = 0x30<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F29B5:
	v207 = 0<32>
	loc115 = v207
	// succ:  l000F29B9
l000F29B9:
	// succ:  l000F29BB
l000F29BB:
	v207 = loc29
	v207 = Mem0[v207:word32]
	loc174 = v207
	v207 = loc128
	v216 = Mem0[v207:int8]
	v207 = CONVERT(v216, int8, word32)
	loc175 = v207
	v207 = loc175
	v208 = 0x18<32>
	v207 = v207 << v208
	v208 = 0x18<32>
	v207 = v207 >> v208
	v208 = 0<32>
	v209 = v207 < v208
	loc176 = v209
	v207 = loc141
	v207 = Mem0[v207:word32]
	loc177 = v207
	v207 = loc175
	v208 = 0xFF<32>
	v207 = v207 & v208
	loc178 = v207
	v207 = loc176
	branch !v207 l000F29F7
	// succ:  l000F29F3 l000F29F7
l000F29F3:
	v207 = loc177
	goto l000F29FA
	// succ:  l000F29FA
l000F29F7:
	v207 = loc178
	// succ:  l000F29FA
l000F29FA:
	loc179 = v207
	v207 = loc14
	v208 = loc179
	v207 = v207 + v208
	loc180 = v207
	v207 = loc174
	v208 = loc180
	v209 = v207 == v208
	loc182 = v209
	v207 = loc182
	branch !v207 l000F2B11
	// succ:  l000F2A16 l000F2B11
l000F2A16:
	v207 = loc179
	v208 = 1<32>
	v207 = v207 << v208
	loc183 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = 0x17A<32>
	v208 = loc192
	v211 = loc183
	v212 = 0<32>
	invoke_viii(v207, v208, v211, v212)
	v207 = Mem0[0x00140048<p32>:word32]
	loc184 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc184
	v208 = 1<32>
	v207 = v207 & v208
	loc185 = v207
	v207 = loc185
	branch !v207 l000F2A4F
	// succ:  l000F2A47 l000F2A4F
l000F2A47:
	v207 = 0x28<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F2A4F:
	v207 = loc128
	v217 = Mem0[v207:int8]
	v207 = CONVERT(v217, int8, word32)
	loc186 = v207
	v207 = loc186
	v208 = 0x18<32>
	v207 = v207 << v208
	v208 = 0x18<32>
	v207 = v207 >> v208
	v208 = 0<32>
	v209 = v207 < v208
	loc187 = v209
	v207 = loc187
	branch !v207 l000F2A92
	// succ:  l000F2A6C l000F2A92
l000F2A6C:
	v207 = loc142
	v207 = Mem0[v207:word32]
	loc188 = v207
	v207 = loc188
	v208 = 0x7FFFFFFF<32>
	v207 = v207 & v208
	loc189 = v207
	v207 = loc189
	v208 = 0xFFFFFFFF<32>
	v207 = v207 + v208
	loc206 = v207
	v207 = loc206
	loc190 = v207
	goto l000F2A97
	// succ:  l000F2A97
l000F2A92:
	v207 = 0xA<32>
	loc190 = v207
	// succ:  l000F2A97
l000F2A97:
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = 0x17A<32>
	v208 = loc192
	v211 = loc190
	v212 = 0<32>
	invoke_viii(v207, v208, v211, v212)
	v207 = Mem0[0x00140048<p32>:word32]
	loc191 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc191
	v208 = 1<32>
	v207 = v207 & v208
	loc193 = v207
	v207 = loc193
	branch !v207 l000F2AC8
	// succ:  l000F2AC0 l000F2AC8
l000F2AC0:
	v207 = 0x28<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F2AC8:
	v207 = loc128
	v218 = Mem0[v207:int8]
	v207 = CONVERT(v218, int8, word32)
	loc194 = v207
	v207 = loc194
	v208 = 0x18<32>
	v207 = v207 << v208
	v208 = 0x18<32>
	v207 = v207 >> v208
	v208 = 0<32>
	v209 = v207 < v208
	loc195 = v209
	v207 = loc192
	v207 = Mem0[v207:word32]
	loc196 = v207
	v207 = loc195
	branch !v207 l000F2AF2
	// succ:  l000F2AEE l000F2AF2
l000F2AEE:
	v207 = loc196
	goto l000F2AF5
	// succ:  l000F2AF5
l000F2AF2:
	v207 = loc192
	// succ:  l000F2AF5
l000F2AF5:
	loc197 = v207
	v207 = loc197
	v208 = loc179
	v207 = v207 + v208
	loc198 = v207
	v207 = loc29
	v208 = loc198
	Mem0[v207:word32] = v208
	v207 = loc197
	loc16 = v207
	goto l000F2B15
	// succ:  l000F2B15
l000F2B11:
	v207 = loc14
	loc16 = v207
	// succ:  l000F2B15
l000F2B15:
	v207 = loc23
	v208 = 0xC<32>
	v207 = v207 + v208
	loc38 = v207
	v207 = loc38
	v207 = Mem0[v207:word32]
	loc39 = v207
	v207 = loc23
	v208 = 0x10<32>
	v207 = v207 + v208
	loc41 = v207
	v207 = loc41
	v207 = Mem0[v207:word32]
	loc42 = v207
	v207 = loc39
	v208 = loc42
	v209 = v207 == v208
	loc43 = v209
	v207 = loc43
	branch !v207 l000F2B7F
	// succ:  l000F2B3D l000F2B7F
l000F2B3D:
	v207 = loc23
	v207 = Mem0[v207:word32]
	loc44 = v207
	v207 = loc44
	v208 = 0x24<32>
	v207 = v207 + v208
	loc45 = v207
	v207 = loc45
	v207 = Mem0[v207:word32]
	loc46 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc46
	v208 = loc23
	v207 = invoke_ii(v207, v208)
	loc47 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc48 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc48
	v208 = 1<32>
	v207 = v207 & v208
	loc49 = v207
	v207 = loc49
	branch !v207 l000F2B79
	// succ:  l000F2B71 l000F2B79
l000F2B71:
	v207 = 0x26<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F2B79:
	v207 = loc47
	loc13 = v207
	// succ:  l000F2B7D
l000F2B7D:
	goto l000F2B8A
	// succ:  l000F2B8A
l000F2B7F:
	v207 = loc39
	v207 = Mem0[v207:word32]
	loc50 = v207
	v207 = loc50
	loc13 = v207
	// succ:  l000F2B8A
l000F2B8A:
	v207 = loc13
	v208 = 0x10<32>
	v211 = loc16
	v212 = loc29
	v213 = loc62
	v219 = 0<32>
	v220 = loc170
	v221 = loc40
	v222 = loc51
	v223 = loc159
	v207 = fn000F2F51(v207, v208, v211, v212, v213, v219, v220, v221, v222, v223)
	loc52 = v207
	v207 = loc52
	v208 = 0<32>
	v209 = v207 == v208
	loc53 = v209
	v207 = loc53
	v209 = v207 == 0<32>
	branch !v209 l000F2BC2
	// succ:  l000F2BB2 l000F2BC2
l000F2BB2:
	v207 = loc16
	loc18 = v207
	v207 = loc115
	loc25 = v207
	v207 = 0x30<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F2BC2:
	v207 = loc38
	v207 = Mem0[v207:word32]
	loc54 = v207
	v207 = loc41
	v207 = Mem0[v207:word32]
	loc55 = v207
	v207 = loc54
	v208 = loc55
	v209 = v207 == v208
	loc56 = v209
	v207 = loc56
	branch !v207 l000F2C22
	// succ:  l000F2BDB l000F2C22
l000F2BDB:
	v207 = loc23
	v207 = Mem0[v207:word32]
	loc57 = v207
	v207 = loc57
	v208 = 0x28<32>
	v207 = v207 + v208
	loc58 = v207
	v207 = loc58
	v207 = Mem0[v207:word32]
	loc59 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc59
	v208 = loc23
	v207 = invoke_ii(v207, v208)
	v207 = Mem0[0x00140048<p32>:word32]
	loc60 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc60
	v208 = 1<32>
	v207 = v207 & v208
	loc61 = v207
	v207 = loc61
	branch !v207 l000F2C16
	// succ:  l000F2C0E l000F2C16
l000F2C0E:
	v207 = 0x26<32>
	loc208 = v207
	goto l000F2C3D
	// succ:  l000F2C3D
l000F2C16:
	v207 = loc16
	loc14 = v207
	v207 = loc23
	loc24 = v207
	goto l000F279D
	// succ:  l000F279D
l000F2C20:
	goto l000F2C3A
	// succ:  l000F2C3A
l000F2C22:
	v207 = loc54
	v208 = 4<32>
	v207 = v207 + v208
	loc63 = v207
	v207 = loc38
	v208 = loc63
	Mem0[v207:word32] = v208
	v207 = loc16
	loc14 = v207
	v207 = loc23
	loc24 = v207
	goto l000F279D
	// succ:  l000F279D
l000F2C3A:
	goto l000F279D
	// succ:  l000F279D
l000F2C3D:
	v207 = loc208
	v208 = 0x26<32>
	v209 = v207 == v208
	branch !v209 l000F2C58
	// succ:  l000F2C47 l000F2C58
l000F2C47:
	v207 = ___cxa_find_matching_catch_2()
	loc32 = v207
	v207 = Mem0[0x00140094<p32>:word32]
	loc33 = v207
	v207 = loc32
	loc26 = v207
	v207 = loc33
	loc27 = v207
	goto l000F2EF4
	// succ:  l000F2EF4
l000F2C58:
	v207 = loc208
	v208 = 0x28<32>
	v209 = v207 == v208
	branch !v209 l000F2C71
	// succ:  l000F2C60 l000F2C71
l000F2C60:
	v207 = ___cxa_find_matching_catch_2()
	loc36 = v207
	v207 = Mem0[0x00140094<p32>:word32]
	loc37 = v207
	v207 = loc36
	loc26 = v207
	v207 = loc37
	loc27 = v207
	goto l000F2EF3
	// succ:  l000F2EF3
l000F2C71:
	v207 = loc208
	v208 = 0x30<32>
	v209 = v207 == v208
	branch !v209 l000F2EF3
	// succ:  l000F2C79 l000F2EF3
l000F2C79:
	v207 = loc29
	v207 = Mem0[v207:word32]
	loc64 = v207
	v207 = loc18
	loc65 = v207
	v207 = loc64
	v208 = loc65
	v207 = v207 - v208
	loc66 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = 0x17A<32>
	v208 = loc192
	v211 = loc66
	v212 = 0<32>
	invoke_viii(v207, v208, v211, v212)
	v207 = Mem0[0x00140048<p32>:word32]
	loc67 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc67
	v208 = 1<32>
	v207 = v207 & v208
	loc68 = v207
	// succ:  l000F2CAA
l000F2CAA:
	v207 = loc68
	v209 = v207 == 0<32>
	branch !v209 l000F2EE1
	// succ:  l000F2CB1 l000F2EE1
l000F2CB1:
	v207 = loc128
	v224 = Mem0[v207:int8]
	v207 = CONVERT(v224, int8, word32)
	loc69 = v207
	v207 = loc192
	v207 = Mem0[v207:word32]
	loc70 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = 0x17B<32>
	v207 = invoke_i(v207)
	loc71 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc72 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc72
	v208 = 1<32>
	v207 = v207 & v208
	loc74 = v207
	v207 = loc74
	v209 = v207 == 0<32>
	branch !v209 l000F2EE0
	// succ:  l000F2CE0 l000F2EE0
l000F2CE0:
	v207 = loc69
	v208 = 0x18<32>
	v207 = v207 << v208
	v208 = 0x18<32>
	v207 = v207 >> v208
	v208 = 0<32>
	v209 = v207 < v208
	loc75 = v209
	v207 = loc75
	branch !v207 l000F2CF4
	// succ:  l000F2CF1 l000F2CF4
l000F2CF1:
	v207 = loc70
	goto l000F2CF7
	// succ:  l000F2CF7
l000F2CF4:
	v207 = loc192
	// succ:  l000F2CF7
l000F2CF7:
	loc76 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc207
	v208 = arg5
	Mem0[v207:word32] = v208
	v207 = 0x17C<32>
	v208 = loc76
	v211 = loc71
	v212 = 0x37CC<32>
	v213 = loc207
	v207 = invoke_iiiii(v207, v208, v211, v212, v213)
	loc77 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc78 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc78
	v208 = 1<32>
	v207 = v207 & v208
	loc79 = v207
	v207 = loc79
	v209 = v207 == 0<32>
	branch !v209 l000F2EDF
	// succ:  l000F2D2C l000F2EDF
l000F2D2C:
	v207 = loc77
	v208 = 1<32>
	v209 = v207 == v208
	loc80 = v209
	v207 = loc80
	v209 = v207 == 0<32>
	branch !v209 l000F2D40
	// succ:  l000F2D38 l000F2D40
l000F2D38:
	v207 = arg4
	v208 = 4<32>
	Mem0[v207:word32] = v208
	// succ:  l000F2D40
l000F2D40:
	v207 = loc23
	v208 = 0<32>
	v209 = v207 == v208
	loc81 = v209
	v207 = loc81
	branch !v207 l000F2D50
	// succ:  l000F2D4B l000F2D50
l000F2D4B:
	v207 = 1<32>
	loc116 = v207
	goto l000F2DDC
	// succ:  l000F2DDC
l000F2D50:
	v207 = loc23
	v208 = 0xC<32>
	v207 = v207 + v208
	loc82 = v207
	v207 = loc82
	v207 = Mem0[v207:word32]
	loc83 = v207
	v207 = loc23
	v208 = 0x10<32>
	v207 = v207 + v208
	loc85 = v207
	v207 = loc85
	v207 = Mem0[v207:word32]
	loc86 = v207
	v207 = loc83
	v208 = loc86
	v209 = v207 == v208
	loc87 = v209
	v207 = loc87
	branch !v207 l000F2DB4
	// succ:  l000F2D77 l000F2DB4
l000F2D77:
	v207 = loc23
	v207 = Mem0[v207:word32]
	loc88 = v207
	v207 = loc88
	v208 = 0x24<32>
	v207 = v207 + v208
	loc89 = v207
	v207 = loc89
	v207 = Mem0[v207:word32]
	loc90 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc90
	v208 = loc23
	v207 = invoke_ii(v207, v208)
	loc91 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc92 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc92
	v208 = 1<32>
	v207 = v207 & v208
	loc93 = v207
	v207 = loc93
	branch !v207 l000F2DAE
	// succ:  l000F2DAB l000F2DAE
l000F2DAB:
	goto l000F2EE1
	// succ:  l000F2EE1
l000F2DAE:
	v207 = loc91
	loc8 = v207
	// succ:  l000F2DB2
l000F2DB2:
	goto l000F2DBF
	// succ:  l000F2DBF
l000F2DB4:
	v207 = loc83
	v207 = Mem0[v207:word32]
	loc94 = v207
	v207 = loc94
	loc8 = v207
	// succ:  l000F2DBF
l000F2DBF:
	v207 = loc8
	v208 = 0xFFFFFFFF<32>
	v209 = v207 == v208
	loc96 = v209
	v207 = loc96
	branch !v207 l000F2DD7
	// succ:  l000F2DCB l000F2DD7
l000F2DCB:
	v207 = arg1
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = 1<32>
	loc116 = v207
	goto l000F2DDB
	// succ:  l000F2DDB
l000F2DD7:
	v207 = 0<32>
	loc116 = v207
	// succ:  l000F2DDB
l000F2DDB:
	// succ:  l000F2DDC
l000F2DDC:
	v207 = loc25
	v208 = 0<32>
	v209 = v207 == v208
	loc97 = v209
	// succ:  l000F2DE4
l000F2DE4:
	v207 = loc97
	branch !v207 l000F2DF1
	// succ:  l000F2DEA l000F2DF1
l000F2DEA:
	v207 = 0x41<32>
	loc208 = v207
	goto l000F2E8D
	// succ:  l000F2E8D
l000F2DF1:
	v207 = loc25
	v208 = 0xC<32>
	v207 = v207 + v208
	loc98 = v207
	v207 = loc98
	v207 = Mem0[v207:word32]
	loc99 = v207
	v207 = loc25
	v208 = 0x10<32>
	v207 = v207 + v208
	loc100 = v207
	v207 = loc100
	v207 = Mem0[v207:word32]
	loc101 = v207
	v207 = loc99
	v208 = loc101
	v209 = v207 == v208
	loc102 = v209
	v207 = loc102
	branch !v207 l000F2E55
	// succ:  l000F2E18 l000F2E55
l000F2E18:
	v207 = loc25
	v207 = Mem0[v207:word32]
	loc103 = v207
	v207 = loc103
	v208 = 0x24<32>
	v207 = v207 + v208
	loc104 = v207
	v207 = loc104
	v207 = Mem0[v207:word32]
	loc105 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc105
	v208 = loc25
	v207 = invoke_ii(v207, v208)
	loc107 = v207
	v207 = Mem0[0x00140048<p32>:word32]
	loc108 = v207
	v207 = 0<32>
	Mem0[0x00140048<p32>:word32] = v207
	v207 = loc108
	v208 = 1<32>
	v207 = v207 & v208
	loc109 = v207
	v207 = loc109
	branch !v207 l000F2E4F
	// succ:  l000F2E4C l000F2E4F
l000F2E4C:
	goto l000F2EE1
	// succ:  l000F2EE1
l000F2E4F:
	v207 = loc107
	loc10 = v207
	// succ:  l000F2E53
l000F2E53:
	goto l000F2E60
	// succ:  l000F2E60
l000F2E55:
	v207 = loc99
	v207 = Mem0[v207:word32]
	loc110 = v207
	v207 = loc110
	loc10 = v207
	// succ:  l000F2E60
l000F2E60:
	v207 = loc10
	v208 = 0xFFFFFFFF<32>
	v209 = v207 == v208
	loc111 = v209
	v207 = loc111
	branch !v207 l000F2E7C
	// succ:  l000F2E6C l000F2E7C
l000F2E6C:
	v207 = arg2
	v208 = 0<32>
	Mem0[v207:word32] = v208
	v207 = 0x41<32>
	loc208 = v207
	goto l000F2E8E
	// succ:  l000F2E8E
l000F2E7C:
	v207 = loc116
	branch !v207 l000F2E83
	// succ:  l000F2E80 l000F2E83
l000F2E80:
	goto l000F2E8E
	// succ:  l000F2E8E
l000F2E83:
	v207 = 0x43<32>
	loc208 = v207
	goto l000F2E8E
	// succ:  l000F2E8E
l000F2E8B:
	// succ:  l000F2E8C
l000F2E8C:
	// succ:  l000F2E8D
l000F2E8D:
	// succ:  l000F2E8E
l000F2E8E:
	v207 = loc208
	v208 = 0x41<32>
	v209 = v207 == v208
	branch !v209 l000F2EA4
	// succ:  l000F2E98 l000F2EA4
l000F2E98:
	v207 = loc116
	branch !v207 l000F2EA3
	// succ:  l000F2E9C l000F2EA3
l000F2E9C:
	v207 = 0x43<32>
	loc208 = v207
	// succ:  l000F2EA3
l000F2EA3:
	// succ:  l000F2EA4
l000F2EA4:
	v207 = loc208
	v208 = 0x43<32>
	v209 = v207 == v208
	branch !v209 l000F2EC3
	// succ:  l000F2EAD l000F2EC3
l000F2EAD:
	v207 = arg4
	v207 = Mem0[v207:word32]
	loc112 = v207
	v207 = loc112
	v208 = 2<32>
	v207 = v207 | v208
	loc113 = v207
	v207 = arg4
	v208 = loc113
	Mem0[v207:word32] = v208
	// succ:  l000F2EC3
l000F2EC3:
	v207 = arg1
	v207 = Mem0[v207:word32]
	loc28 = v207
	v207 = loc192
	fn0011BAF7(v207)
	v207 = loc170
	fn0011BAF7(v207)
	v207 = loc209
	Mem0[0x00140030<p32>:word32] = v207
	v207 = loc28
	return v207
	// succ:  fn000F252A_exit
l000F2EDF:
	// succ:  l000F2EE0
l000F2EE0:
	// succ:  l000F2EE1
l000F2EE1:
	// succ:  l000F2EE1
l000F2EE1:
	v207 = ___cxa_find_matching_catch_2()
	loc34 = v207
	v207 = Mem0[0x00140094<p32>:word32]
	loc35 = v207
	v207 = loc34
	loc26 = v207
	v207 = loc35
	loc27 = v207
	// succ:  l000F2EF3
l000F2EF3:
	// succ:  l000F2EF3
l000F2EF3:
	// succ:  l000F2EF4
l000F2EF4:
	v207 = loc26
	loc17 = v207
	v207 = loc27
	loc19 = v207
	// succ:  l000F2EFD
l000F2EFD:
	v207 = loc192
	fn0011BAF7(v207)
	v207 = loc17
	loc20 = v207
	v207 = loc19
	loc21 = v207
	goto l000F2F30
	// succ:  l000F2F30
l000F2F0F:
	// succ:  l000F2F10
l000F2F10:
	v207 = ___cxa_find_matching_catch_2()
	loc201 = v207
	v207 = Mem0[0x00140094<p32>:word32]
	loc202 = v207
	v207 = loc95
	v207 = fn0011B43F(v207)
	v207 = loc201
	loc6 = v207
	v207 = loc202
	loc15 = v207
	v207 = 0x24<32>
	loc208 = v207
	// succ:  l000F2F2F
l000F2F2F:
	// succ:  l000F2F30
l000F2F30:
	v207 = loc208
	v208 = 0x24<32>
	v209 = v207 == v208
	branch !v209 l000F2F42
	// succ:  l000F2F39 l000F2F42
l000F2F39:
	v207 = loc6
	loc20 = v207
	v207 = loc15
	loc21 = v207
	// succ:  l000F2F42
l000F2F42:
	v207 = loc170
	fn0011BAF7(v207)
	v207 = loc20
	___resumeException(v207)
	v207 = 0<32>
	return v207
	// succ:  fn000F252A_exit
l000F2F4F:
	return v207
	// succ:  fn000F252A_exit
fn000F252A_exit:


// fn000F2F51
// Return size: 0
word32 fn000F2F51(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
fn000F2F51_entry:
	// succ:  l000F2F51
l000F2F51:
	v63 = Mem0[0x00140030<p32>:word32]
	loc69 = v63
	v63 = arg3
	v63 = Mem0[v63:word32]
	loc15 = v63
	v63 = loc15
	v64 = arg2
	v65 = v63 == v64
	loc16 = v65
	// succ:  l000F2F65
l000F2F65:
	v63 = loc16
	branch !v63 l000F2FD6
	// succ:  l000F2F6B l000F2FD6
l000F2F6B:
	v63 = arg9
	v64 = 0x60<32>
	v63 = v63 + v64
	loc17 = v63
	v63 = loc17
	v63 = Mem0[v63:word32]
	loc18 = v63
	v63 = loc18
	v64 = arg0
	v65 = v63 == v64
	loc19 = v65
	v63 = loc19
	v65 = v63 == 0<32>
	branch !v65 l000F2FA9
	// succ:  l000F2F86 l000F2FA9
l000F2F86:
	v63 = arg9
	v64 = 0x64<32>
	v63 = v63 + v64
	loc20 = v63
	v63 = loc20
	v63 = Mem0[v63:word32]
	loc21 = v63
	v63 = loc21
	v64 = arg0
	v65 = v63 == v64
	loc22 = v65
	v63 = loc22
	v65 = v63 == 0<32>
	branch !v65 l000F2FA8
	// succ:  l000F2FA1 l000F2FA8
l000F2FA1:
	v63 = 5<32>
	loc68 = v63
	goto l000F2FDB
	// succ:  l000F2FDB
l000F2FA8:
	// succ:  l000F2FA9
l000F2FA9:
	v63 = loc19
	branch !v63 l000F2FB0
	// succ:  l000F2FAD l000F2FB0
l000F2FAD:
	v63 = 0x2B<32>
	goto l000F2FB2
	// succ:  l000F2FB2
l000F2FB0:
	v63 = 0x2D<32>
	// succ:  l000F2FB2
l000F2FB2:
	loc23 = v63
	v63 = arg2
	v64 = 1<32>
	v63 = v63 + v64
	loc24 = v63
	v63 = arg3
	v64 = loc24
	Mem0[v63:word32] = v64
	v63 = arg2
	v64 = loc23
	v66 = SLICE(v64, byte, 0)
	Mem0[v63:byte] = v66
	v63 = arg4
	v64 = 0<32>
	Mem0[v63:word32] = v64
	v63 = 0<32>
	loc14 = v63
	goto l000F2FDA
	// succ:  l000F2FDA
l000F2FD6:
	v63 = 5<32>
	loc68 = v63
	// succ:  l000F2FDA
l000F2FDA:
	// succ:  l000F2FDB
l000F2FDB:
	v63 = loc68
	v64 = 5<32>
	v65 = v63 == v64
	branch !v65 l000F321E
	// succ:  l000F2FE5 l000F321E
l000F2FE5:
	v63 = arg6
	v64 = 0xB<32>
	v63 = v63 + v64
	loc25 = v63
	v63 = loc25
	v67 = Mem0[v63:int8]
	v63 = CONVERT(v67, int8, word32)
	loc26 = v63
	v63 = loc26
	v64 = 0x18<32>
	v63 = v63 << v64
	v64 = 0x18<32>
	v63 = v63 >> v64
	v64 = 0<32>
	v65 = v63 < v64
	loc27 = v65
	v63 = arg6
	v64 = 4<32>
	v63 = v63 + v64
	loc28 = v63
	v63 = loc28
	v63 = Mem0[v63:word32]
	loc29 = v63
	v63 = loc26
	v64 = 0xFF<32>
	v63 = v63 & v64
	loc30 = v63
	v63 = loc27
	branch !v63 l000F301D
	// succ:  l000F301A l000F301D
l000F301A:
	v63 = loc29
	goto l000F301F
	// succ:  l000F301F
l000F301D:
	v63 = loc30
	// succ:  l000F301F
l000F301F:
	loc31 = v63
	v63 = loc31
	v64 = 0<32>
	v65 = v63 != v64
	loc32 = v65
	v63 = arg0
	v64 = arg5
	v65 = v63 == v64
	loc33 = v65
	v63 = loc33
	v64 = loc32
	v63 = v63 & v64
	loc67 = v63
	v63 = loc67
	branch !v63 l000F308F
	// succ:  l000F303B l000F308F
l000F303B:
	v63 = arg8
	v63 = Mem0[v63:word32]
	loc34 = v63
	v63 = loc34
	loc35 = v63
	v63 = arg7
	loc36 = v63
	v63 = loc35
	v64 = loc36
	v63 = v63 - v64
	loc37 = v63
	v63 = loc37
	v64 = 0xA0<32>
	v65 = v63 < v64
	loc38 = v65
	v63 = loc38
	v65 = v63 == 0<32>
	branch !v65 l000F3065
	// succ:  l000F305E l000F3065
l000F305E:
	v63 = 0<32>
	loc14 = v63
	goto l000F321E
	// succ:  l000F321E
l000F3065:
	v63 = arg4
	v63 = Mem0[v63:word32]
	loc39 = v63
	v63 = loc34
	v64 = 4<32>
	v63 = v63 + v64
	loc40 = v63
	v63 = arg8
	v64 = loc40
	Mem0[v63:word32] = v64
	v63 = loc34
	v64 = loc39
	Mem0[v63:word32] = v64
	v63 = arg4
	v64 = 0<32>
	Mem0[v63:word32] = v64
	v63 = 0<32>
	loc14 = v63
	goto l000F321E
	// succ:  l000F321E
l000F308F:
	v63 = arg9
	v64 = 0x68<32>
	v63 = v63 + v64
	loc41 = v63
	v63 = 0<32>
	loc11 = v63
	// succ:  l000F309D
l000F309D:
	v63 = arg9
	v64 = loc11
	v68 = 2<32>
	v64 = v64 << v68
	v63 = v63 + v64
	loc12 = v63
	v63 = loc11
	v64 = 0x1A<32>
	v65 = v63 == v64
	loc42 = v65
	v63 = loc42
	branch !v63 l000F30BB
	// succ:  l000F30B4 l000F30BB
l000F30B4:
	v63 = loc41
	loc13 = v63
	goto l000F30E2
	// succ:  l000F30E2
l000F30BB:
	v63 = loc12
	v63 = Mem0[v63:word32]
	loc43 = v63
	v63 = loc43
	v64 = arg0
	v65 = v63 == v64
	loc44 = v65
	v63 = loc11
	v64 = 1<32>
	v63 = v63 + v64
	loc10 = v63
	v63 = loc44
	branch !v63 l000F30DB
	// succ:  l000F30D4 l000F30DB
l000F30D4:
	v63 = loc12
	loc13 = v63
	goto l000F30E2
	// succ:  l000F30E2
l000F30DB:
	v63 = loc10
	loc11 = v63
	// succ:  l000F30DF
l000F30DF:
	goto l000F308F
	// succ:  l000F308F
l000F30E2:
	v63 = loc13
	loc45 = v63
	v63 = arg9
	loc46 = v63
	v63 = loc45
	v64 = loc46
	v63 = v63 - v64
	loc47 = v63
	v63 = loc47
	v64 = 2<32>
	v63 = v63 >> v64
	loc48 = v63
	v63 = loc47
	v64 = 0x5C<32>
	v65 = v63 > v64
	loc49 = v65
	v63 = loc49
	branch !v63 l000F310B
	// succ:  l000F3106 l000F310B
l000F3106:
	v63 = 0xFFFFFFFF<32>
	loc14 = v63
	goto l000F321C
	// succ:  l000F321C
l000F310B:
	v63 = arg1
	v64 = 8<32>
	v63 = v63 - v64
	switch (v63) { l000F3128 l000F31DB l000F3126 l000F31DB l000F31DB l000F31DB l000F31DB l000F31DB l000F3141 }
	// succ:  l000F3126 l000F3128 l000F3141 l000F31DB l000F31DB l000F31DB l000F31DB l000F31DB l000F31DB
l000F3126:
	// succ:  l000F3128
l000F3128:
	v63 = loc48
	v64 = arg1
	v65 = v63 < v64
	loc50 = v65
	v63 = loc50
	v65 = v63 == 0<32>
	branch !v65 l000F313E
	// succ:  l000F3137 l000F313E
l000F3137:
	v63 = 0xFFFFFFFF<32>
	loc14 = v63
	goto l000F321E
	// succ:  l000F321E
l000F313E:
	goto l000F31DD
	// succ:  l000F31DD
l000F3140:
	// succ:  l000F3141
l000F3141:
	v63 = loc47
	v64 = 0x58<32>
	v65 = v63 < v64
	loc51 = v65
	v63 = loc51
	v65 = v63 == 0<32>
	branch !v65 l000F31D8
	// succ:  l000F3151 l000F31D8
l000F3151:
	v63 = loc16
	branch !v63 l000F315C
	// succ:  l000F3155 l000F315C
l000F3155:
	v63 = 0xFFFFFFFF<32>
	loc14 = v63
	goto l000F321E
	// succ:  l000F321E
l000F315C:
	v63 = loc15
	loc52 = v63
	v63 = arg2
	loc53 = v63
	v63 = loc52
	v64 = loc53
	v63 = v63 - v64
	loc54 = v63
	v63 = loc54
	v64 = 3<32>
	v65 = v63 < v64
	loc55 = v65
	v63 = loc55
	v65 = v63 == 0<32>
	branch !v65 l000F317E
	// succ:  l000F3177 l000F317E
l000F3177:
	v63 = 0xFFFFFFFF<32>
	loc14 = v63
	goto l000F321E
	// succ:  l000F321E
l000F317E:
	v63 = loc15
	v64 = 0xFFFFFFFF<32>
	v63 = v63 + v64
	loc56 = v63
	v63 = loc56
	v69 = Mem0[v63:int8]
	v63 = CONVERT(v69, int8, word32)
	loc57 = v63
	v63 = loc57
	v64 = 0x18<32>
	v63 = v63 << v64
	v64 = 0x18<32>
	v63 = v63 >> v64
	v64 = 0x30<32>
	v65 = v63 == v64
	loc58 = v65
	v63 = loc58
	v65 = v63 == 0<32>
	branch !v65 l000F31A5
	// succ:  l000F319E l000F31A5
l000F319E:
	v63 = 0xFFFFFFFF<32>
	loc14 = v63
	goto l000F321E
	// succ:  l000F321E
l000F31A5:
	v63 = arg4
	v64 = 0<32>
	Mem0[v63:word32] = v64
	v63 = 0x37AB<32>
	v64 = loc48
	v63 = v63 + v64
	loc59 = v63
	v63 = loc59
	v70 = Mem0[v63:int8]
	v63 = CONVERT(v70, int8, word32)
	loc60 = v63
	v63 = loc15
	v64 = 1<32>
	v63 = v63 + v64
	loc61 = v63
	v63 = arg3
	v64 = loc61
	Mem0[v63:word32] = v64
	v63 = loc15
	v64 = loc60
	v71 = SLICE(v64, byte, 0)
	Mem0[v63:byte] = v71
	v63 = 0<32>
	loc14 = v63
	goto l000F321E
	// succ:  l000F321E
l000F31D8:
	goto l000F31DD
	// succ:  l000F31DD
l000F31DA:
	// succ:  l000F31DB
l000F31DB:
	// succ:  l000F31DD
l000F31DD:
	v63 = 0x37AB<32>
	v64 = loc48
	v63 = v63 + v64
	loc62 = v63
	v63 = loc62
	v72 = Mem0[v63:int8]
	v63 = CONVERT(v72, int8, word32)
	loc63 = v63
	v63 = loc15
	v64 = 1<32>
	v63 = v63 + v64
	loc64 = v63
	v63 = arg3
	v64 = loc64
	Mem0[v63:word32] = v64
	v63 = loc15
	v64 = loc63
	v73 = SLICE(v64, byte, 0)
	Mem0[v63:byte] = v73
	v63 = arg4
	v63 = Mem0[v63:word32]
	loc65 = v63
	v63 = loc65
	v64 = 1<32>
	v63 = v63 + v64
	loc66 = v63
	v63 = arg4
	v64 = loc66
	Mem0[v63:word32] = v64
	v63 = 0<32>
	loc14 = v63
	// succ:  l000F321C
l000F321C:
	// succ:  l000F321E
l000F321E:
	// succ:  l000F321E
l000F321E:
	v63 = loc14
	return v63
	// succ:  fn000F2F51_exit
l000F3222:
	return v63
	// succ:  fn000F2F51_exit
fn000F2F51_exit:


// fn000F3224
// Return size: 0
word32 fn000F3224(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F3224_entry:
	// succ:  l000F3224
l000F3224:
	v195 = Mem0[0x00140030<p32>:word32]
	loc196 = v195
	v195 = Mem0[0x00140030<p32>:word32]
	v196 = 0x160<32>
	v195 = v195 + v196
	Mem0[0x00140030<p32>:word32] = v195
	v195 = Mem0[0x00140030<p32>:word32]
	v196 = Mem0[0x00140034<p32>:word32]
	v197 = v195 >= v196
	branch !v197 l000F3240
	// succ:  l000F323A l000F3240
l000F323A:
	v195 = 0x160<32>
	abortStackOverflow(v195)
	// succ:  l000F3240
l000F3240:
	v195 = loc196
	v196 = 0xD0<32>
	v195 = v195 + v196
	loc147 = v195
	v195 = loc196
	v196 = 0xC8<32>
	v195 = v195 + v196
	loc158 = v195
	v195 = loc196
	v196 = 0xC4<32>
	v195 = v195 + v196
	loc169 = v195
	v195 = loc196
	v196 = 0xB8<32>
	v195 = v195 + v196
	loc180 = v195
	v195 = loc196
	v196 = 0xAC<32>
	v195 = v195 + v196
	loc24 = v195
	v195 = loc196
	v196 = 0xA8<32>
	v195 = v195 + v196
	loc35 = v195
	v195 = loc196
	v196 = 8<32>
	v195 = v195 + v196
	loc46 = v195
	v195 = loc196
	v196 = 4<32>
	v195 = v195 + v196
	loc57 = v195
	v195 = loc196
	loc67 = v195
	v195 = loc196
	v196 = 0x151<32>
	v195 = v195 + v196
	loc78 = v195
	v195 = loc196
	v196 = 0x150<32>
	v195 = v195 + v196
	loc89 = v195
	v195 = loc180
	v196 = arg3
	v198 = loc147
	v199 = loc158
	v200 = loc169
	fn000F3B58(v195, v196, v198, v199, v200)
	v195 = loc24
	v201 = 0<64>
	Mem0[v195:word64] = v201
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0<32>
	loc6 = v195
	// succ:  l000F32C9
l000F32C9:
	v195 = loc6
	v196 = 3<32>
	v197 = v195 == v196
	loc191 = v197
	v195 = loc191
	branch !v195 l000F32DB
	// succ:  l000F32D8 l000F32DB
l000F32D8:
	goto l000F32F9
	// succ:  l000F32F9
l000F32DB:
	v195 = loc24
	v196 = loc6
	v198 = 2<32>
	v196 = v196 << v198
	v195 = v195 + v196
	loc100 = v195
	v195 = loc100
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = loc6
	v196 = 1<32>
	v195 = v195 + v196
	loc105 = v195
	v195 = loc105
	loc6 = v195
	goto l000F3240
	// succ:  l000F3240
l000F32F9:
	v195 = loc24
	v196 = 0xB<32>
	v195 = v195 + v196
	loc106 = v195
	v195 = loc106
	v202 = Mem0[v195:int8]
	v195 = CONVERT(v202, int8, word32)
	loc107 = v195
	v195 = loc107
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc108 = v197
	v195 = loc108
	branch !v195 l000F3341
	// succ:  l000F331A l000F3341
l000F331A:
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	loc109 = v195
	v195 = loc109
	v195 = Mem0[v195:word32]
	loc110 = v195
	v195 = loc110
	v196 = 0x7FFFFFFF<32>
	v195 = v195 & v196
	loc111 = v195
	v195 = loc111
	v196 = 0xFFFFFFFF<32>
	v195 = v195 + v196
	loc193 = v195
	v195 = loc193
	loc112 = v195
	goto l000F3345
	// succ:  l000F3345
l000F3341:
	v195 = 0xA<32>
	loc112 = v195
	// succ:  l000F3345
l000F3345:
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc112
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc113 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc113
	v196 = 1<32>
	v195 = v195 & v196
	loc114 = v195
	v195 = loc114
	branch !v195 l000F337D
	// succ:  l000F3368 l000F337D
l000F3368:
	v195 = ___cxa_find_matching_catch_2()
	loc176 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc177 = v195
	v195 = loc176
	loc13 = v195
	v195 = loc177
	loc15 = v195
	goto l000F3B43
	// succ:  l000F3B43
l000F337D:
	v195 = loc106
	v203 = Mem0[v195:int8]
	v195 = CONVERT(v203, int8, word32)
	loc115 = v195
	v195 = loc115
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc116 = v197
	v195 = loc24
	v195 = Mem0[v195:word32]
	loc117 = v195
	v195 = loc116
	branch !v195 l000F339F
	// succ:  l000F339C l000F339F
l000F339C:
	v195 = loc117
	goto l000F33A1
	// succ:  l000F33A1
l000F339F:
	v195 = loc24
	// succ:  l000F33A1
l000F33A1:
	loc118 = v195
	v195 = loc35
	v196 = loc118
	Mem0[v195:word32] = v196
	v195 = loc57
	v196 = loc46
	Mem0[v195:word32] = v196
	v195 = loc67
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = loc78
	v196 = 1<32>
	v204 = SLICE(v196, byte, 0)
	Mem0[v195:byte] = v204
	v195 = loc89
	v196 = 0x45<32>
	v205 = SLICE(v196, byte, 0)
	Mem0[v195:byte] = v205
	v195 = loc24
	v196 = 4<32>
	v195 = v195 + v196
	loc119 = v195
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	loc120 = v195
	v195 = arg1
	v195 = Mem0[v195:word32]
	loc17 = v195
	v195 = loc118
	loc12 = v195
	v195 = loc17
	loc19 = v195
	// succ:  l000F33E7
l000F33E7:
	v195 = loc19
	v196 = 0<32>
	v197 = v195 == v196
	loc121 = v197
	v195 = loc121
	branch !v195 l000F33FD
	// succ:  l000F33F4 l000F33FD
l000F33F4:
	v195 = 0<32>
	loc18 = v195
	v195 = 1<32>
	loc102 = v195
	goto l000F34A4
	// succ:  l000F34A4
l000F33FD:
	v195 = loc19
	v196 = 0xC<32>
	v195 = v195 + v196
	loc122 = v195
	v195 = loc122
	v195 = Mem0[v195:word32]
	loc123 = v195
	v195 = loc19
	v196 = 0x10<32>
	v195 = v195 + v196
	loc124 = v195
	v195 = loc124
	v195 = Mem0[v195:word32]
	loc125 = v195
	v195 = loc123
	v196 = loc125
	v197 = v195 == v196
	loc126 = v197
	v195 = loc126
	branch !v195 l000F3470
	// succ:  l000F3424 l000F3470
l000F3424:
	v195 = loc19
	v195 = Mem0[v195:word32]
	loc127 = v195
	v195 = loc127
	v196 = 0x24<32>
	v195 = v195 + v196
	loc128 = v195
	v195 = loc128
	v195 = Mem0[v195:word32]
	loc129 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc129
	v196 = loc19
	v195 = invoke_ii(v195, v196)
	loc130 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc131 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc131
	v196 = 1<32>
	v195 = v195 & v196
	loc132 = v195
	v195 = loc132
	branch !v195 l000F3469
	// succ:  l000F3461 l000F3469
l000F3461:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F3469:
	v195 = loc130
	loc8 = v195
	// succ:  l000F346E
l000F346E:
	goto l000F347D
	// succ:  l000F347D
l000F3470:
	v195 = loc123
	v195 = Mem0[v195:word32]
	loc133 = v195
	v195 = loc133
	loc8 = v195
	// succ:  l000F347D
l000F347D:
	v195 = loc8
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc134 = v197
	v195 = loc134
	branch !v195 l000F349B
	// succ:  l000F348B l000F349B
l000F348B:
	v195 = arg1
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0<32>
	loc18 = v195
	v195 = 1<32>
	loc102 = v195
	goto l000F34A3
	// succ:  l000F34A3
l000F349B:
	v195 = loc19
	loc18 = v195
	v195 = 0<32>
	loc102 = v195
	// succ:  l000F34A3
l000F34A3:
	// succ:  l000F34A4
l000F34A4:
	v195 = arg2
	v195 = Mem0[v195:word32]
	loc135 = v195
	v195 = loc135
	v196 = 0<32>
	v197 = v195 == v196
	loc136 = v197
	// succ:  l000F34B6
l000F34B6:
	v195 = loc136
	branch !v195 l000F34C3
	// succ:  l000F34BD l000F34C3
l000F34BD:
	v195 = 0x14<32>
	loc195 = v195
	goto l000F358F
	// succ:  l000F358F
l000F34C3:
	v195 = loc135
	v196 = 0xC<32>
	v195 = v195 + v196
	loc137 = v195
	v195 = loc137
	v195 = Mem0[v195:word32]
	loc138 = v195
	v195 = loc135
	v196 = 0x10<32>
	v195 = v195 + v196
	loc139 = v195
	v195 = loc139
	v195 = Mem0[v195:word32]
	loc140 = v195
	v195 = loc138
	v196 = loc140
	v197 = v195 == v196
	loc141 = v197
	v195 = loc141
	branch !v195 l000F3546
	// succ:  l000F34F6 l000F3546
l000F34F6:
	v195 = loc135
	v195 = Mem0[v195:word32]
	loc142 = v195
	v195 = loc142
	v196 = 0x24<32>
	v195 = v195 + v196
	loc143 = v195
	v195 = loc143
	v195 = Mem0[v195:word32]
	loc144 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc144
	v196 = loc135
	v195 = invoke_ii(v195, v196)
	loc145 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc146 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc146
	v196 = 1<32>
	v195 = v195 & v196
	loc148 = v195
	v195 = loc148
	branch !v195 l000F353F
	// succ:  l000F3537 l000F353F
l000F3537:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F353F:
	v195 = loc145
	loc10 = v195
	// succ:  l000F3544
l000F3544:
	goto l000F3554
	// succ:  l000F3554
l000F3546:
	v195 = loc138
	v195 = Mem0[v195:word32]
	loc149 = v195
	v195 = loc149
	loc10 = v195
	// succ:  l000F3554
l000F3554:
	v195 = loc10
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc150 = v197
	v195 = loc150
	branch !v195 l000F3571
	// succ:  l000F3562 l000F3571
l000F3562:
	v195 = arg2
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0x14<32>
	loc195 = v195
	goto l000F3590
	// succ:  l000F3590
l000F3571:
	v195 = loc102
	branch !v195 l000F357D
	// succ:  l000F3575 l000F357D
l000F3575:
	v195 = loc135
	loc103 = v195
	goto l000F3590
	// succ:  l000F3590
l000F357D:
	v195 = loc12
	loc16 = v195
	v195 = loc135
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F358D:
	// succ:  l000F358E
l000F358E:
	// succ:  l000F358F
l000F358F:
	// succ:  l000F3590
l000F3590:
	v195 = loc195
	v196 = 0x14<32>
	v197 = v195 == v196
	branch !v197 l000F35B8
	// succ:  l000F3599 l000F35B8
l000F3599:
	v195 = 0<32>
	loc195 = v195
	v195 = loc102
	branch !v195 l000F35B2
	// succ:  l000F35A2 l000F35B2
l000F35A2:
	v195 = loc12
	loc16 = v195
	v195 = 0<32>
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F35B2:
	v195 = 0<32>
	loc103 = v195
	// succ:  l000F35B6
l000F35B6:
	// succ:  l000F35B8
l000F35B8:
	v195 = loc35
	v195 = Mem0[v195:word32]
	loc151 = v195
	v195 = loc106
	v206 = Mem0[v195:int8]
	v195 = CONVERT(v206, int8, word32)
	loc152 = v195
	v195 = loc152
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc153 = v197
	v195 = loc119
	v195 = Mem0[v195:word32]
	loc154 = v195
	v195 = loc152
	v196 = 0xFF<32>
	v195 = v195 & v196
	loc155 = v195
	v195 = loc153
	branch !v195 l000F35F2
	// succ:  l000F35EE l000F35F2
l000F35EE:
	v195 = loc154
	goto l000F35F5
	// succ:  l000F35F5
l000F35F2:
	v195 = loc155
	// succ:  l000F35F5
l000F35F5:
	loc156 = v195
	v195 = loc12
	v196 = loc156
	v195 = v195 + v196
	loc157 = v195
	v195 = loc151
	v196 = loc157
	v197 = v195 == v196
	loc159 = v197
	v195 = loc159
	branch !v195 l000F3705
	// succ:  l000F3611 l000F3705
l000F3611:
	v195 = loc156
	v196 = 1<32>
	v195 = v195 << v196
	loc160 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc160
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc161 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc161
	v196 = 1<32>
	v195 = v195 & v196
	loc162 = v195
	v195 = loc162
	branch !v195 l000F3649
	// succ:  l000F3641 l000F3649
l000F3641:
	v195 = 0x1F<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F3649:
	v195 = loc106
	v207 = Mem0[v195:int8]
	v195 = CONVERT(v207, int8, word32)
	loc163 = v195
	v195 = loc163
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc164 = v197
	v195 = loc164
	branch !v195 l000F368A
	// succ:  l000F3665 l000F368A
l000F3665:
	v195 = loc120
	v195 = Mem0[v195:word32]
	loc165 = v195
	v195 = loc165
	v196 = 0x7FFFFFFF<32>
	v195 = v195 & v196
	loc166 = v195
	v195 = loc166
	v196 = 0xFFFFFFFF<32>
	v195 = v195 + v196
	loc194 = v195
	v195 = loc194
	loc167 = v195
	goto l000F368F
	// succ:  l000F368F
l000F368A:
	v195 = 0xA<32>
	loc167 = v195
	// succ:  l000F368F
l000F368F:
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc167
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc168 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc168
	v196 = 1<32>
	v195 = v195 & v196
	loc170 = v195
	v195 = loc170
	branch !v195 l000F36BF
	// succ:  l000F36B7 l000F36BF
l000F36B7:
	v195 = 0x1F<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F36BF:
	v195 = loc106
	v208 = Mem0[v195:int8]
	v195 = CONVERT(v208, int8, word32)
	loc171 = v195
	v195 = loc171
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc172 = v197
	v195 = loc24
	v195 = Mem0[v195:word32]
	loc173 = v195
	v195 = loc172
	branch !v195 l000F36E7
	// succ:  l000F36E3 l000F36E7
l000F36E3:
	v195 = loc173
	goto l000F36E9
	// succ:  l000F36E9
l000F36E7:
	v195 = loc24
	// succ:  l000F36E9
l000F36E9:
	loc174 = v195
	v195 = loc174
	v196 = loc156
	v195 = v195 + v196
	loc175 = v195
	v195 = loc35
	v196 = loc175
	Mem0[v195:word32] = v196
	v195 = loc174
	loc14 = v195
	goto l000F3709
	// succ:  l000F3709
l000F3705:
	v195 = loc12
	loc14 = v195
	// succ:  l000F3709
l000F3709:
	v195 = loc18
	v196 = 0xC<32>
	v195 = v195 + v196
	loc185 = v195
	v195 = loc185
	v195 = Mem0[v195:word32]
	loc186 = v195
	v195 = loc18
	v196 = 0x10<32>
	v195 = v195 + v196
	loc187 = v195
	v195 = loc187
	v195 = Mem0[v195:word32]
	loc188 = v195
	v195 = loc186
	v196 = loc188
	v197 = v195 == v196
	loc189 = v197
	v195 = loc189
	branch !v195 l000F377F
	// succ:  l000F373B l000F377F
l000F373B:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc190 = v195
	v195 = loc190
	v196 = 0x24<32>
	v195 = v195 + v196
	loc25 = v195
	v195 = loc25
	v195 = Mem0[v195:word32]
	loc26 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc26
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	loc27 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc28 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc28
	v196 = 1<32>
	v195 = v195 & v196
	loc29 = v195
	v195 = loc29
	branch !v195 l000F3779
	// succ:  l000F3771 l000F3779
l000F3771:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F3779:
	v195 = loc27
	loc11 = v195
	// succ:  l000F377D
l000F377D:
	goto l000F378B
	// succ:  l000F378B
l000F377F:
	v195 = loc186
	v195 = Mem0[v195:word32]
	loc30 = v195
	v195 = loc30
	loc11 = v195
	// succ:  l000F378B
l000F378B:
	v195 = loc158
	v195 = Mem0[v195:word32]
	loc31 = v195
	v195 = loc169
	v195 = Mem0[v195:word32]
	loc32 = v195
	v195 = loc11
	v196 = loc78
	v198 = loc89
	v199 = loc14
	v200 = loc35
	v209 = loc31
	v210 = loc32
	v211 = loc180
	v212 = loc46
	v213 = loc57
	v214 = loc67
	v215 = loc147
	v195 = fn000F3D09(v195, v196, v198, v199, v200, v209, v210, v211, v212, v213, v214, v215)
	loc33 = v195
	v195 = loc33
	v196 = 0<32>
	v197 = v195 == v196
	loc34 = v197
	v195 = loc34
	v197 = v195 == 0<32>
	branch !v197 l000F37D7
	// succ:  l000F37C7 l000F37D7
l000F37C7:
	v195 = loc14
	loc16 = v195
	v195 = loc103
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F37D7:
	v195 = loc185
	v195 = Mem0[v195:word32]
	loc36 = v195
	v195 = loc187
	v195 = Mem0[v195:word32]
	loc37 = v195
	v195 = loc36
	v196 = loc37
	v197 = v195 == v196
	loc38 = v197
	v195 = loc38
	branch !v195 l000F3839
	// succ:  l000F37F2 l000F3839
l000F37F2:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc39 = v195
	v195 = loc39
	v196 = 0x28<32>
	v195 = v195 + v196
	loc40 = v195
	v195 = loc40
	v195 = Mem0[v195:word32]
	loc41 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc41
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	v195 = Mem0[0x00140048<p32>:word32]
	loc42 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc42
	v196 = 1<32>
	v195 = v195 & v196
	loc43 = v195
	v195 = loc43
	branch !v195 l000F382D
	// succ:  l000F3825 l000F382D
l000F3825:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F3855
	// succ:  l000F3855
l000F382D:
	v195 = loc14
	loc12 = v195
	v195 = loc18
	loc19 = v195
	goto l000F33A1
	// succ:  l000F33A1
l000F3837:
	goto l000F3852
	// succ:  l000F3852
l000F3839:
	v195 = loc36
	v196 = 4<32>
	v195 = v195 + v196
	loc44 = v195
	v195 = loc185
	v196 = loc44
	Mem0[v195:word32] = v196
	v195 = loc14
	loc12 = v195
	v195 = loc18
	loc19 = v195
	goto l000F33A1
	// succ:  l000F33A1
l000F3852:
	goto l000F33A1
	// succ:  l000F33A1
l000F3855:
	v195 = loc195
	v196 = 0x1D<32>
	v197 = v195 == v196
	branch !v197 l000F3874
	// succ:  l000F385F l000F3874
l000F385F:
	v195 = ___cxa_find_matching_catch_2()
	loc178 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc179 = v195
	v195 = loc178
	loc21 = v195
	v195 = loc179
	loc22 = v195
	goto l000F3B3A
	// succ:  l000F3B3A
l000F3874:
	v195 = loc195
	v196 = 0x1F<32>
	v197 = v195 == v196
	branch !v197 l000F3891
	// succ:  l000F387C l000F3891
l000F387C:
	v195 = ___cxa_find_matching_catch_2()
	loc183 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc184 = v195
	v195 = loc183
	loc21 = v195
	v195 = loc184
	loc22 = v195
	goto l000F3B39
	// succ:  l000F3B39
l000F3891:
	v195 = loc195
	v196 = 0x27<32>
	v197 = v195 == v196
	branch !v197 l000F3B39
	// succ:  l000F3899 l000F3B39
l000F3899:
	v195 = loc180
	v196 = 0xB<32>
	v195 = v195 + v196
	loc45 = v195
	v195 = loc45
	v216 = Mem0[v195:int8]
	v195 = CONVERT(v216, int8, word32)
	loc47 = v195
	v195 = loc47
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc48 = v197
	v195 = loc180
	v196 = 4<32>
	v195 = v195 + v196
	loc49 = v195
	v195 = loc49
	v195 = Mem0[v195:word32]
	loc50 = v195
	v195 = loc47
	v196 = 0xFF<32>
	v195 = v195 & v196
	loc51 = v195
	v195 = loc48
	branch !v195 l000F38D3
	// succ:  l000F38D0 l000F38D3
l000F38D0:
	v195 = loc50
	goto l000F38D5
	// succ:  l000F38D5
l000F38D3:
	v195 = loc51
	// succ:  l000F38D5
l000F38D5:
	loc52 = v195
	v195 = loc52
	v196 = 0<32>
	v197 = v195 == v196
	loc53 = v197
	v195 = loc78
	v217 = Mem0[v195:int8]
	v195 = CONVERT(v217, int8, word32)
	loc54 = v195
	v195 = loc54
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 == v196
	loc55 = v197
	v195 = loc53
	v196 = loc55
	v195 = v195 | v196
	loc192 = v195
	v195 = loc192
	v197 = v195 == 0<32>
	branch !v197 l000F3941
	// succ:  l000F3901 l000F3941
l000F3901:
	v195 = loc57
	v195 = Mem0[v195:word32]
	loc56 = v195
	v195 = loc56
	loc58 = v195
	v195 = loc46
	loc59 = v195
	v195 = loc58
	v196 = loc59
	v195 = v195 - v196
	loc60 = v195
	v195 = loc60
	v196 = 0xA0<32>
	v197 = v195 < v196
	loc61 = v197
	v195 = loc61
	branch !v195 l000F3940
	// succ:  l000F3923 l000F3940
l000F3923:
	v195 = loc67
	v195 = Mem0[v195:word32]
	loc62 = v195
	v195 = loc56
	v196 = 4<32>
	v195 = v195 + v196
	loc63 = v195
	v195 = loc57
	v196 = loc63
	Mem0[v195:word32] = v196
	v195 = loc56
	v196 = loc62
	Mem0[v195:word32] = v196
	// succ:  l000F3940
l000F3940:
	// succ:  l000F3941
l000F3941:
	v195 = loc35
	v195 = Mem0[v195:word32]
	loc64 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x181<32>
	v196 = loc16
	v198 = loc64
	v199 = arg4
	v218 = invoke_diii(v195, v196, v198, v199)
	loc197 = v218
	v195 = Mem0[0x00140048<p32>:word32]
	loc65 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc65
	v196 = 1<32>
	v195 = v195 & v196
	loc66 = v195
	// succ:  l000F3969
l000F3969:
	v195 = loc66
	v197 = v195 == 0<32>
	branch !v197 l000F3B23
	// succ:  l000F3970 l000F3B23
l000F3970:
	v195 = arg5
	v219 = loc197
	Mem0[v195:real64] = v219
	v195 = loc57
	v195 = Mem0[v195:word32]
	loc68 = v195
	v195 = loc180
	v196 = loc46
	v198 = loc68
	v199 = arg4
	fn000EC01D(v195, v196, v198, v199)
	v195 = loc18
	v196 = 0<32>
	v197 = v195 == v196
	loc69 = v197
	v195 = loc69
	branch !v195 l000F399B
	// succ:  l000F3996 l000F399B
l000F3996:
	v195 = 1<32>
	loc104 = v195
	goto l000F3A27
	// succ:  l000F3A27
l000F399B:
	v195 = loc18
	v196 = 0xC<32>
	v195 = v195 + v196
	loc70 = v195
	v195 = loc70
	v195 = Mem0[v195:word32]
	loc71 = v195
	v195 = loc18
	v196 = 0x10<32>
	v195 = v195 + v196
	loc72 = v195
	v195 = loc72
	v195 = Mem0[v195:word32]
	loc73 = v195
	v195 = loc71
	v196 = loc73
	v197 = v195 == v196
	loc74 = v197
	v195 = loc74
	branch !v195 l000F39FF
	// succ:  l000F39C2 l000F39FF
l000F39C2:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc75 = v195
	v195 = loc75
	v196 = 0x24<32>
	v195 = v195 + v196
	loc76 = v195
	v195 = loc76
	v195 = Mem0[v195:word32]
	loc77 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc77
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	loc79 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc80 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc80
	v196 = 1<32>
	v195 = v195 & v196
	loc81 = v195
	v195 = loc81
	branch !v195 l000F39F9
	// succ:  l000F39F6 l000F39F9
l000F39F6:
	goto l000F3B23
	// succ:  l000F3B23
l000F39F9:
	v195 = loc79
	loc7 = v195
	// succ:  l000F39FD
l000F39FD:
	goto l000F3A0A
	// succ:  l000F3A0A
l000F39FF:
	v195 = loc71
	v195 = Mem0[v195:word32]
	loc82 = v195
	v195 = loc82
	loc7 = v195
	// succ:  l000F3A0A
l000F3A0A:
	v195 = loc7
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc83 = v197
	v195 = loc83
	branch !v195 l000F3A22
	// succ:  l000F3A16 l000F3A22
l000F3A16:
	v195 = arg1
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 1<32>
	loc104 = v195
	goto l000F3A26
	// succ:  l000F3A26
l000F3A22:
	v195 = 0<32>
	loc104 = v195
	// succ:  l000F3A26
l000F3A26:
	// succ:  l000F3A27
l000F3A27:
	v195 = loc20
	v196 = 0<32>
	v197 = v195 == v196
	loc84 = v197
	// succ:  l000F3A2F
l000F3A2F:
	v195 = loc84
	branch !v195 l000F3A3B
	// succ:  l000F3A35 l000F3A3B
l000F3A35:
	v195 = 0x37<32>
	loc195 = v195
	goto l000F3AD5
	// succ:  l000F3AD5
l000F3A3B:
	v195 = loc20
	v196 = 0xC<32>
	v195 = v195 + v196
	loc85 = v195
	v195 = loc85
	v195 = Mem0[v195:word32]
	loc86 = v195
	v195 = loc20
	v196 = 0x10<32>
	v195 = v195 + v196
	loc87 = v195
	v195 = loc87
	v195 = Mem0[v195:word32]
	loc88 = v195
	v195 = loc86
	v196 = loc88
	v197 = v195 == v196
	loc90 = v197
	v195 = loc90
	branch !v195 l000F3A9F
	// succ:  l000F3A62 l000F3A9F
l000F3A62:
	v195 = loc20
	v195 = Mem0[v195:word32]
	loc91 = v195
	v195 = loc91
	v196 = 0x24<32>
	v195 = v195 + v196
	loc92 = v195
	v195 = loc92
	v195 = Mem0[v195:word32]
	loc93 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc93
	v196 = loc20
	v195 = invoke_ii(v195, v196)
	loc94 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc95 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc95
	v196 = 1<32>
	v195 = v195 & v196
	loc96 = v195
	v195 = loc96
	branch !v195 l000F3A99
	// succ:  l000F3A96 l000F3A99
l000F3A96:
	goto l000F3B23
	// succ:  l000F3B23
l000F3A99:
	v195 = loc94
	loc9 = v195
	// succ:  l000F3A9D
l000F3A9D:
	goto l000F3AAA
	// succ:  l000F3AAA
l000F3A9F:
	v195 = loc86
	v195 = Mem0[v195:word32]
	loc97 = v195
	v195 = loc97
	loc9 = v195
	// succ:  l000F3AAA
l000F3AAA:
	v195 = loc9
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc98 = v197
	v195 = loc98
	branch !v195 l000F3AC5
	// succ:  l000F3AB6 l000F3AC5
l000F3AB6:
	v195 = arg2
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0x37<32>
	loc195 = v195
	goto l000F3AD6
	// succ:  l000F3AD6
l000F3AC5:
	v195 = loc104
	branch !v195 l000F3ACC
	// succ:  l000F3AC9 l000F3ACC
l000F3AC9:
	goto l000F3AD6
	// succ:  l000F3AD6
l000F3ACC:
	v195 = 0x39<32>
	loc195 = v195
	goto l000F3AD6
	// succ:  l000F3AD6
l000F3AD3:
	// succ:  l000F3AD4
l000F3AD4:
	// succ:  l000F3AD5
l000F3AD5:
	// succ:  l000F3AD6
l000F3AD6:
	v195 = loc195
	v196 = 0x37<32>
	v197 = v195 == v196
	branch !v197 l000F3AEA
	// succ:  l000F3ADF l000F3AEA
l000F3ADF:
	v195 = loc104
	branch !v195 l000F3AE9
	// succ:  l000F3AE3 l000F3AE9
l000F3AE3:
	v195 = 0x39<32>
	loc195 = v195
	// succ:  l000F3AE9
l000F3AE9:
	// succ:  l000F3AEA
l000F3AEA:
	v195 = loc195
	v196 = 0x39<32>
	v197 = v195 == v196
	branch !v197 l000F3B08
	// succ:  l000F3AF2 l000F3B08
l000F3AF2:
	v195 = arg4
	v195 = Mem0[v195:word32]
	loc99 = v195
	v195 = loc99
	v196 = 2<32>
	v195 = v195 | v196
	loc101 = v195
	v195 = arg4
	v196 = loc101
	Mem0[v195:word32] = v196
	// succ:  l000F3B08
l000F3B08:
	v195 = arg1
	v195 = Mem0[v195:word32]
	loc23 = v195
	v195 = loc24
	fn0011BAF7(v195)
	v195 = loc180
	fn0011BAF7(v195)
	v195 = loc196
	Mem0[0x00140030<p32>:word32] = v195
	v195 = loc23
	return v195
	// succ:  fn000F3224_exit
l000F3B23:
	// succ:  l000F3B23
l000F3B23:
	v195 = ___cxa_find_matching_catch_2()
	loc181 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc182 = v195
	v195 = loc181
	loc21 = v195
	v195 = loc182
	loc22 = v195
	// succ:  l000F3B39
l000F3B39:
	// succ:  l000F3B39
l000F3B39:
	// succ:  l000F3B3A
l000F3B3A:
	v195 = loc21
	loc13 = v195
	v195 = loc22
	loc15 = v195
	// succ:  l000F3B43
l000F3B43:
	v195 = loc24
	fn0011BAF7(v195)
	v195 = loc180
	fn0011BAF7(v195)
	v195 = loc13
	___resumeException(v195)
	v195 = 0<32>
	return v195
	// succ:  fn000F3224_exit
l000F3B56:
	return v195
	// succ:  fn000F3224_exit
fn000F3224_exit:


// fn000F3B58
// Return size: 0
void fn000F3B58(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F3B58_entry:
	// succ:  l000F3B58
l000F3B58:
	v41 = Mem0[0x00140030<p32>:word32]
	loc42 = v41
	v41 = Mem0[0x00140030<p32>:word32]
	v42 = 0x10<32>
	v41 = v41 + v42
	Mem0[0x00140030<p32>:word32] = v41
	v41 = Mem0[0x00140030<p32>:word32]
	v42 = Mem0[0x00140034<p32>:word32]
	v43 = v41 >= v42
	branch !v43 l000F3B71
	// succ:  l000F3B6C l000F3B71
l000F3B6C:
	v41 = 0x10<32>
	abortStackOverflow(v41)
	// succ:  l000F3B71
l000F3B71:
	v41 = loc42
	loc36 = v41
	v41 = arg1
	v41 = fn000E64CA(v41)
	loc37 = v41
	v41 = loc36
	v42 = loc37
	Mem0[v41:word32] = v42
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = 0x164<32>
	v42 = loc36
	v44 = 0x4C90<32>
	v41 = invoke_iii(v41, v42, v44)
	loc38 = v41
	v41 = Mem0[0x00140048<p32>:word32]
	loc39 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc39
	v42 = 1<32>
	v41 = v41 & v42
	loc40 = v41
	v41 = loc40
	branch !v41 l000F3BAC
	// succ:  l000F3BA7 l000F3BAC
l000F3BA7:
	v41 = 8<32>
	loc41 = v41
	goto l000F3CE4
	// succ:  l000F3CE4
l000F3BAC:
	v41 = loc38
	v41 = Mem0[v41:word32]
	loc7 = v41
	v41 = loc7
	v42 = 0x30<32>
	v41 = v41 + v42
	loc8 = v41
	v41 = loc8
	v41 = Mem0[v41:word32]
	loc9 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc9
	v42 = loc38
	v44 = 0x37AB<32>
	v45 = 0x37CB<32>
	v46 = arg2
	v41 = invoke_iiiii(v41, v42, v44, v45, v46)
	v41 = Mem0[0x00140048<p32>:word32]
	loc10 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc10
	v42 = 1<32>
	v41 = v41 & v42
	loc11 = v41
	v41 = loc11
	branch !v41 l000F3BEE
	// succ:  l000F3BE9 l000F3BEE
l000F3BE9:
	v41 = 8<32>
	loc41 = v41
	goto l000F3CE3
	// succ:  l000F3CE3
l000F3BEE:
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = 0x164<32>
	v42 = loc36
	v44 = 0x4C98<32>
	v41 = invoke_iii(v41, v42, v44)
	loc12 = v41
	v41 = Mem0[0x00140048<p32>:word32]
	loc13 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc13
	v42 = 1<32>
	v41 = v41 & v42
	loc14 = v41
	v41 = loc14
	branch !v41 l000F3C17
	// succ:  l000F3C12 l000F3C17
l000F3C12:
	v41 = 8<32>
	loc41 = v41
	goto l000F3CE2
	// succ:  l000F3CE2
l000F3C17:
	v41 = loc12
	v41 = Mem0[v41:word32]
	loc15 = v41
	v41 = loc15
	v42 = 0xC<32>
	v41 = v41 + v42
	loc16 = v41
	v41 = loc16
	v41 = Mem0[v41:word32]
	loc17 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc17
	v42 = loc12
	v41 = invoke_ii(v41, v42)
	loc18 = v41
	v41 = Mem0[0x00140048<p32>:word32]
	loc19 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc19
	v42 = 1<32>
	v41 = v41 & v42
	loc20 = v41
	v41 = loc20
	v43 = v41 == 0<32>
	branch !v43 l000F3CD2
	// succ:  l000F3C4C l000F3CD2
l000F3C4C:
	v41 = arg3
	v42 = loc18
	Mem0[v41:word32] = v42
	v41 = loc12
	v41 = Mem0[v41:word32]
	loc21 = v41
	v41 = loc21
	v42 = 0x10<32>
	v41 = v41 + v42
	loc22 = v41
	v41 = loc22
	v41 = Mem0[v41:word32]
	loc23 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc23
	v42 = loc12
	v41 = invoke_ii(v41, v42)
	loc24 = v41
	v41 = Mem0[0x00140048<p32>:word32]
	loc25 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc25
	v42 = 1<32>
	v41 = v41 & v42
	loc26 = v41
	v41 = loc26
	v43 = v41 == 0<32>
	branch !v43 l000F3CD1
	// succ:  l000F3C88 l000F3CD1
l000F3C88:
	v41 = arg4
	v42 = loc24
	Mem0[v41:word32] = v42
	v41 = loc12
	v41 = Mem0[v41:word32]
	loc27 = v41
	v41 = loc27
	v42 = 0x14<32>
	v41 = v41 + v42
	loc28 = v41
	v41 = loc28
	v41 = Mem0[v41:word32]
	loc29 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc29
	v42 = arg0
	v44 = loc12
	invoke_vii(v41, v42, v44)
	v41 = Mem0[0x00140048<p32>:word32]
	loc30 = v41
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v41 = loc30
	v42 = 1<32>
	v41 = v41 & v42
	loc31 = v41
	v41 = loc31
	v43 = v41 == 0<32>
	branch !v43 l000F3CD0
	// succ:  l000F3CC4 l000F3CD0
l000F3CC4:
	v41 = loc37
	v41 = fn0011B43F(v41)
	v41 = loc42
	Mem0[0x00140030<p32>:word32] = v41
	return
	// succ:  fn000F3B58_exit
l000F3CD0:
	// succ:  l000F3CD1
l000F3CD1:
	// succ:  l000F3CD2
l000F3CD2:
	v41 = ___cxa_find_matching_catch_2()
	loc34 = v41
	v41 = Mem0[0x00140094<p32>:word32]
	loc35 = v41
	v41 = loc34
	loc5 = v41
	v41 = loc35
	loc6 = v41
	// succ:  l000F3CE2
l000F3CE2:
	// succ:  l000F3CE3
l000F3CE3:
	// succ:  l000F3CE4
l000F3CE4:
	v41 = loc41
	v42 = 8<32>
	v43 = v41 == v42
	branch !v43 l000F3CFD
	// succ:  l000F3CEC l000F3CFD
l000F3CEC:
	v41 = ___cxa_find_matching_catch_2()
	loc32 = v41
	v41 = Mem0[0x00140094<p32>:word32]
	loc33 = v41
	v41 = loc32
	loc5 = v41
	v41 = loc33
	loc6 = v41
	// succ:  l000F3CFD
l000F3CFD:
	v41 = loc37
	v41 = fn0011B43F(v41)
	v41 = loc5
	___resumeException(v41)
	// succ:  l000F3D07
l000F3D07:
	return
	// succ:  fn000F3B58_exit
fn000F3B58_exit:


// fn000F3D09
// Return size: 0
word32 fn000F3D09(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11)
fn000F3D09_entry:
	// succ:  l000F3D09
l000F3D09:
	v99 = Mem0[0x00140030<p32>:word32]
	loc107 = v99
	v99 = arg0
	v100 = arg5
	v101 = v99 == v100
	loc18 = v101
	// succ:  l000F3D16
l000F3D16:
	v99 = loc18
	branch !v99 l000F3DF4
	// succ:  l000F3D1C l000F3DF4
l000F3D1C:
	v99 = arg1
	v102 = Mem0[v99:int8]
	v99 = CONVERT(v102, int8, word32)
	loc19 = v99
	v99 = loc19
	v100 = 0x18<32>
	v99 = v99 << v100
	v100 = 0x18<32>
	v99 = v99 >> v100
	v100 = 0<32>
	v101 = v99 == v100
	loc20 = v101
	v99 = loc20
	branch !v99 l000F3D39
	// succ:  l000F3D34 l000F3D39
l000F3D34:
	v99 = 0xFFFFFFFF<32>
	loc16 = v99
	goto l000F3DF2
	// succ:  l000F3DF2
l000F3D39:
	v99 = arg1
	v100 = 0<32>
	v103 = SLICE(v100, byte, 0)
	Mem0[v99:byte] = v103
	v99 = arg4
	v99 = Mem0[v99:word32]
	loc21 = v99
	v99 = loc21
	v100 = 1<32>
	v99 = v99 + v100
	loc22 = v99
	v99 = arg4
	v100 = loc22
	Mem0[v99:word32] = v100
	v99 = loc21
	v100 = 0x2E<32>
	v104 = SLICE(v100, byte, 0)
	Mem0[v99:byte] = v104
	v99 = arg7
	v100 = 0xB<32>
	v99 = v99 + v100
	loc23 = v99
	v99 = loc23
	v105 = Mem0[v99:int8]
	v99 = CONVERT(v105, int8, word32)
	loc24 = v99
	v99 = loc24
	v100 = 0x18<32>
	v99 = v99 << v100
	v100 = 0x18<32>
	v99 = v99 >> v100
	v100 = 0<32>
	v101 = v99 < v100
	loc25 = v101
	v99 = arg7
	v100 = 4<32>
	v99 = v99 + v100
	loc26 = v99
	v99 = loc26
	v99 = Mem0[v99:word32]
	loc27 = v99
	v99 = loc24
	v100 = 0xFF<32>
	v99 = v99 & v100
	loc28 = v99
	v99 = loc25
	branch !v99 l000F3D94
	// succ:  l000F3D91 l000F3D94
l000F3D91:
	v99 = loc27
	goto l000F3D96
	// succ:  l000F3D96
l000F3D94:
	v99 = loc28
	// succ:  l000F3D96
l000F3D96:
	loc29 = v99
	v99 = loc29
	v100 = 0<32>
	v101 = v99 == v100
	loc30 = v101
	v99 = loc30
	branch !v99 l000F3DA9
	// succ:  l000F3DA4 l000F3DA9
l000F3DA4:
	v99 = 0<32>
	loc16 = v99
	goto l000F3DF1
	// succ:  l000F3DF1
l000F3DA9:
	v99 = arg9
	v99 = Mem0[v99:word32]
	loc31 = v99
	v99 = loc31
	loc32 = v99
	v99 = arg8
	loc33 = v99
	v99 = loc32
	v100 = loc33
	v99 = v99 - v100
	loc34 = v99
	v99 = loc34
	v100 = 0xA0<32>
	v101 = v99 < v100
	loc35 = v101
	v99 = loc35
	branch !v99 l000F3DEC
	// succ:  l000F3DCB l000F3DEC
l000F3DCB:
	v99 = arg10
	v99 = Mem0[v99:word32]
	loc36 = v99
	v99 = loc31
	v100 = 4<32>
	v99 = v99 + v100
	loc37 = v99
	v99 = arg9
	v100 = loc37
	Mem0[v99:word32] = v100
	v99 = loc31
	v100 = loc36
	Mem0[v99:word32] = v100
	v99 = 0<32>
	loc16 = v99
	goto l000F3DF0
	// succ:  l000F3DF0
l000F3DEC:
	v99 = 0<32>
	loc16 = v99
	// succ:  l000F3DF0
l000F3DF0:
	// succ:  l000F3DF1
l000F3DF1:
	// succ:  l000F3DF2
l000F3DF2:
	goto l000F412A
	// succ:  l000F412A
l000F3DF4:
	v99 = arg0
	v100 = arg6
	v101 = v99 == v100
	loc38 = v101
	v99 = loc38
	branch !v99 l000F3EBC
	// succ:  l000F3DFF l000F3EBC
l000F3DFF:
	v99 = arg7
	v100 = 0xB<32>
	v99 = v99 + v100
	loc39 = v99
	v99 = loc39
	v106 = Mem0[v99:int8]
	v99 = CONVERT(v106, int8, word32)
	loc40 = v99
	v99 = loc40
	v100 = 0x18<32>
	v99 = v99 << v100
	v100 = 0x18<32>
	v99 = v99 >> v100
	v100 = 0<32>
	v101 = v99 < v100
	loc41 = v101
	v99 = arg7
	v100 = 4<32>
	v99 = v99 + v100
	loc42 = v99
	v99 = loc42
	v99 = Mem0[v99:word32]
	loc43 = v99
	v99 = loc40
	v100 = 0xFF<32>
	v99 = v99 & v100
	loc44 = v99
	v99 = loc41
	branch !v99 l000F3E37
	// succ:  l000F3E34 l000F3E37
l000F3E34:
	v99 = loc43
	goto l000F3E39
	// succ:  l000F3E39
l000F3E37:
	v99 = loc44
	// succ:  l000F3E39
l000F3E39:
	loc45 = v99
	v99 = loc45
	v100 = 0<32>
	v101 = v99 == v100
	loc46 = v101
	v99 = loc46
	v101 = v99 == 0<32>
	branch !v101 l000F3EBB
	// succ:  l000F3E48 l000F3EBB
l000F3E48:
	v99 = arg1
	v107 = Mem0[v99:int8]
	v99 = CONVERT(v107, int8, word32)
	loc47 = v99
	v99 = loc47
	v100 = 0x18<32>
	v99 = v99 << v100
	v100 = 0x18<32>
	v99 = v99 >> v100
	v100 = 0<32>
	v101 = v99 == v100
	loc48 = v101
	v99 = loc48
	branch !v99 l000F3E67
	// succ:  l000F3E60 l000F3E67
l000F3E60:
	v99 = 0xFFFFFFFF<32>
	loc16 = v99
	goto l000F412B
	// succ:  l000F412B
l000F3E67:
	v99 = arg9
	v99 = Mem0[v99:word32]
	loc49 = v99
	v99 = loc49
	loc50 = v99
	v99 = arg8
	loc51 = v99
	v99 = loc50
	v100 = loc51
	v99 = v99 - v100
	loc52 = v99
	v99 = loc52
	v100 = 0xA0<32>
	v101 = v99 < v100
	loc53 = v101
	v99 = loc53
	v101 = v99 == 0<32>
	branch !v101 l000F3E91
	// succ:  l000F3E8A l000F3E91
l000F3E8A:
	v99 = 0<32>
	loc16 = v99
	goto l000F412B
	// succ:  l000F412B
l000F3E91:
	v99 = arg10
	v99 = Mem0[v99:word32]
	loc54 = v99
	v99 = loc49
	v100 = 4<32>
	v99 = v99 + v100
	loc55 = v99
	v99 = arg9
	v100 = loc55
	Mem0[v99:word32] = v100
	v99 = loc49
	v100 = loc54
	Mem0[v99:word32] = v100
	v99 = arg10
	v100 = 0<32>
	Mem0[v99:word32] = v100
	v99 = 0<32>
	loc16 = v99
	goto l000F412B
	// succ:  l000F412B
l000F3EBB:
	// succ:  l000F3EBC
l000F3EBC:
	v99 = arg11
	v100 = 0x80<32>
	v99 = v99 + v100
	loc56 = v99
	v99 = 0<32>
	loc13 = v99
	// succ:  l000F3ECA
l000F3ECA:
	v99 = arg11
	v100 = loc13
	v108 = 2<32>
	v100 = v100 << v108
	v99 = v99 + v100
	loc14 = v99
	v99 = loc13
	v100 = 0x20<32>
	v101 = v99 == v100
	loc57 = v101
	v99 = loc57
	branch !v99 l000F3EE8
	// succ:  l000F3EE1 l000F3EE8
l000F3EE1:
	v99 = loc56
	loc15 = v99
	goto l000F3F0F
	// succ:  l000F3F0F
l000F3EE8:
	v99 = loc14
	v99 = Mem0[v99:word32]
	loc58 = v99
	v99 = loc58
	v100 = arg0
	v101 = v99 == v100
	loc59 = v101
	v99 = loc13
	v100 = 1<32>
	v99 = v99 + v100
	loc12 = v99
	v99 = loc59
	branch !v99 l000F3F08
	// succ:  l000F3F01 l000F3F08
l000F3F01:
	v99 = loc14
	loc15 = v99
	goto l000F3F0F
	// succ:  l000F3F0F
l000F3F08:
	v99 = loc12
	loc13 = v99
	// succ:  l000F3F0C
l000F3F0C:
	goto l000F3EBC
	// succ:  l000F3EBC
l000F3F0F:
	v99 = loc15
	loc60 = v99
	v99 = arg11
	loc61 = v99
	v99 = loc60
	v100 = loc61
	v99 = v99 - v100
	loc62 = v99
	v99 = loc62
	v100 = 2<32>
	v99 = v99 >> v100
	loc63 = v99
	v99 = loc62
	v100 = 0x7C<32>
	v101 = v99 > v100
	loc64 = v101
	v99 = loc64
	branch !v99 l000F3F38
	// succ:  l000F3F33 l000F3F38
l000F3F33:
	v99 = 0xFFFFFFFF<32>
	loc16 = v99
	goto l000F4129
	// succ:  l000F4129
l000F3F38:
	v99 = 0x37AB<32>
	v100 = loc63
	v99 = v99 + v100
	loc65 = v99
	v99 = loc65
	v109 = Mem0[v99:int8]
	v99 = CONVERT(v109, int8, word32)
	loc66 = v99
	// succ:  l000F3F48
l000F3F48:
	v99 = loc63
	v100 = 0x16<32>
	v99 = v99 - v100
	switch (v99) { l000F3FE1 l000F3FDF l000F3F60 l000F3F62 }
	// succ:  l000F3F60 l000F3F62 l000F3FDF l000F3FE1
l000F3F60:
	// succ:  l000F3F62
l000F3F62:
	v99 = arg4
	v99 = Mem0[v99:word32]
	loc67 = v99
	v99 = loc67
	v100 = arg3
	v101 = v99 == v100
	loc68 = v101
	v99 = loc68
	v101 = v99 == 0<32>
	branch !v101 l000F3FC1
	// succ:  l000F3F78 l000F3FC1
l000F3F78:
	v99 = loc67
	v100 = 0xFFFFFFFF<32>
	v99 = v99 + v100
	loc69 = v99
	v99 = loc69
	v110 = Mem0[v99:int8]
	v99 = CONVERT(v110, int8, word32)
	loc70 = v99
	v99 = loc70
	v100 = 0xFF<32>
	v99 = v99 & v100
	loc71 = v99
	v99 = loc71
	v100 = 0x5F<32>
	v99 = v99 & v100
	loc72 = v99
	v99 = arg2
	v111 = Mem0[v99:int8]
	v99 = CONVERT(v111, int8, word32)
	loc73 = v99
	v99 = loc73
	v100 = 0xFF<32>
	v99 = v99 & v100
	loc74 = v99
	v99 = loc74
	v100 = 0x7F<32>
	v99 = v99 & v100
	loc75 = v99
	v99 = loc72
	v100 = loc75
	v101 = v99 == v100
	loc76 = v101
	v99 = loc76
	v101 = v99 == 0<32>
	branch !v101 l000F3FC0
	// succ:  l000F3FB9 l000F3FC0
l000F3FB9:
	v99 = 0xFFFFFFFF<32>
	loc16 = v99
	goto l000F412B
	// succ:  l000F412B
l000F3FC0:
	// succ:  l000F3FC1
l000F3FC1:
	v99 = loc67
	v100 = 1<32>
	v99 = v99 + v100
	loc77 = v99
	v99 = arg4
	v100 = loc77
	Mem0[v99:word32] = v100
	v99 = loc67
	v100 = loc66
	v112 = SLICE(v100, byte, 0)
	Mem0[v99:byte] = v112
	v99 = 0<32>
	loc16 = v99
	goto l000F412B
	// succ:  l000F412B
l000F3FDE:
	// succ:  l000F3FDF
l000F3FDF:
	// succ:  l000F3FE1
l000F3FE1:
	v99 = arg2
	v100 = 0x50<32>
	v113 = SLICE(v100, byte, 0)
	Mem0[v99:byte] = v113
	goto l000F40E1
	// succ:  l000F40E1
l000F3FEE:
	// succ:  l000F3FEF
l000F3FEF:
	v99 = loc66
	v100 = 0xFF<32>
	v99 = v99 & v100
	loc78 = v99
	v99 = loc78
	v100 = 0x5F<32>
	v99 = v99 & v100
	loc79 = v99
	v99 = arg2
	v114 = Mem0[v99:int8]
	v99 = CONVERT(v114, int8, word32)
	loc80 = v99
	v99 = loc80
	v100 = 0x18<32>
	v99 = v99 << v100
	v100 = 0x18<32>
	v99 = v99 >> v100
	loc81 = v99
	v99 = loc79
	v100 = loc81
	v101 = v99 == v100
	loc82 = v101
	v99 = loc82
	branch !v99 l000F40E0
	// succ:  l000F401E l000F40E0
l000F401E:
	v99 = loc79
	v100 = 0x80<32>
	v99 = v99 | v100
	loc83 = v99
	v99 = loc83
	v100 = 0xFF<32>
	v99 = v99 & v100
	loc84 = v99
	v99 = arg2
	v100 = loc84
	v115 = SLICE(v100, byte, 0)
	Mem0[v99:byte] = v115
	v99 = arg1
	v116 = Mem0[v99:int8]
	v99 = CONVERT(v116, int8, word32)
	loc85 = v99
	v99 = loc85
	v100 = 0x18<32>
	v99 = v99 << v100
	v100 = 0x18<32>
	v99 = v99 >> v100
	v100 = 0<32>
	v101 = v99 == v100
	loc86 = v101
	v99 = loc86
	v101 = v99 == 0<32>
	branch !v101 l000F40DF
	// succ:  l000F404E l000F40DF
l000F404E:
	v99 = arg1
	v100 = 0<32>
	v117 = SLICE(v100, byte, 0)
	Mem0[v99:byte] = v117
	v99 = arg7
	v100 = 0xB<32>
	v99 = v99 + v100
	loc87 = v99
	v99 = loc87
	v118 = Mem0[v99:int8]
	v99 = CONVERT(v118, int8, word32)
	loc88 = v99
	v99 = loc88
	v100 = 0x18<32>
	v99 = v99 << v100
	v100 = 0x18<32>
	v99 = v99 >> v100
	v100 = 0<32>
	v101 = v99 < v100
	loc89 = v101
	v99 = arg7
	v100 = 4<32>
	v99 = v99 + v100
	loc90 = v99
	v99 = loc90
	v99 = Mem0[v99:word32]
	loc91 = v99
	v99 = loc88
	v100 = 0xFF<32>
	v99 = v99 & v100
	loc92 = v99
	v99 = loc89
	branch !v99 l000F408D
	// succ:  l000F408A l000F408D
l000F408A:
	v99 = loc91
	goto l000F408F
	// succ:  l000F408F
l000F408D:
	v99 = loc92
	// succ:  l000F408F
l000F408F:
	loc93 = v99
	v99 = loc93
	v100 = 0<32>
	v101 = v99 == v100
	loc94 = v101
	v99 = loc94
	v101 = v99 == 0<32>
	branch !v101 l000F40DE
	// succ:  l000F409E l000F40DE
l000F409E:
	v99 = arg9
	v99 = Mem0[v99:word32]
	loc95 = v99
	v99 = loc95
	loc96 = v99
	v99 = arg8
	loc97 = v99
	v99 = loc96
	v100 = loc97
	v99 = v99 - v100
	loc98 = v99
	v99 = loc98
	v100 = 0xA0<32>
	v101 = v99 < v100
	loc99 = v101
	v99 = loc99
	branch !v99 l000F40DD
	// succ:  l000F40C0 l000F40DD
l000F40C0:
	v99 = arg10
	v99 = Mem0[v99:word32]
	loc100 = v99
	v99 = loc95
	v100 = 4<32>
	v99 = v99 + v100
	loc101 = v99
	v99 = arg9
	v100 = loc101
	Mem0[v99:word32] = v100
	v99 = loc95
	v100 = loc100
	Mem0[v99:word32] = v100
	// succ:  l000F40DD
l000F40DD:
	// succ:  l000F40DE
l000F40DE:
	// succ:  l000F40DF
l000F40DF:
	// succ:  l000F40E0
l000F40E0:
	// succ:  l000F40E0
l000F40E0:
	// succ:  l000F40E1
l000F40E1:
	v99 = arg4
	v99 = Mem0[v99:word32]
	loc102 = v99
	v99 = loc102
	v100 = 1<32>
	v99 = v99 + v100
	loc103 = v99
	v99 = arg4
	v100 = loc103
	Mem0[v99:word32] = v100
	v99 = loc102
	v100 = loc66
	v119 = SLICE(v100, byte, 0)
	Mem0[v99:byte] = v119
	v99 = loc62
	v100 = 0x54<32>
	v101 = v99 > v100
	loc104 = v101
	v99 = loc104
	branch !v99 l000F410F
	// succ:  l000F410A l000F410F
l000F410A:
	v99 = 0<32>
	loc16 = v99
	goto l000F4128
	// succ:  l000F4128
l000F410F:
	v99 = arg10
	v99 = Mem0[v99:word32]
	loc105 = v99
	v99 = loc105
	v100 = 1<32>
	v99 = v99 + v100
	loc17 = v99
	v99 = arg10
	v100 = loc17
	Mem0[v99:word32] = v100
	v99 = 0<32>
	loc16 = v99
	// succ:  l000F4128
l000F4128:
	// succ:  l000F4129
l000F4129:
	// succ:  l000F412A
l000F412A:
	// succ:  l000F412B
l000F412B:
	v99 = loc16
	return v99
	// succ:  fn000F3D09_exit
l000F412F:
	return v99
	// succ:  fn000F3D09_exit
fn000F3D09_exit:


// fn000F4131
// Return size: 0
word32 fn000F4131(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F4131_entry:
	// succ:  l000F4131
l000F4131:
	v195 = Mem0[0x00140030<p32>:word32]
	loc196 = v195
	v195 = Mem0[0x00140030<p32>:word32]
	v196 = 0x160<32>
	v195 = v195 + v196
	Mem0[0x00140030<p32>:word32] = v195
	v195 = Mem0[0x00140030<p32>:word32]
	v196 = Mem0[0x00140034<p32>:word32]
	v197 = v195 >= v196
	branch !v197 l000F414D
	// succ:  l000F4147 l000F414D
l000F4147:
	v195 = 0x160<32>
	abortStackOverflow(v195)
	// succ:  l000F414D
l000F414D:
	v195 = loc196
	v196 = 0xD0<32>
	v195 = v195 + v196
	loc147 = v195
	v195 = loc196
	v196 = 0xC8<32>
	v195 = v195 + v196
	loc158 = v195
	v195 = loc196
	v196 = 0xC4<32>
	v195 = v195 + v196
	loc169 = v195
	v195 = loc196
	v196 = 0xB8<32>
	v195 = v195 + v196
	loc180 = v195
	v195 = loc196
	v196 = 0xAC<32>
	v195 = v195 + v196
	loc24 = v195
	v195 = loc196
	v196 = 0xA8<32>
	v195 = v195 + v196
	loc35 = v195
	v195 = loc196
	v196 = 8<32>
	v195 = v195 + v196
	loc46 = v195
	v195 = loc196
	v196 = 4<32>
	v195 = v195 + v196
	loc57 = v195
	v195 = loc196
	loc67 = v195
	v195 = loc196
	v196 = 0x151<32>
	v195 = v195 + v196
	loc78 = v195
	v195 = loc196
	v196 = 0x150<32>
	v195 = v195 + v196
	loc89 = v195
	v195 = loc180
	v196 = arg3
	v198 = loc147
	v199 = loc158
	v200 = loc169
	fn000F3B58(v195, v196, v198, v199, v200)
	v195 = loc24
	v201 = 0<64>
	Mem0[v195:word64] = v201
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0<32>
	loc6 = v195
	// succ:  l000F41D6
l000F41D6:
	v195 = loc6
	v196 = 3<32>
	v197 = v195 == v196
	loc191 = v197
	v195 = loc191
	branch !v195 l000F41E8
	// succ:  l000F41E5 l000F41E8
l000F41E5:
	goto l000F4206
	// succ:  l000F4206
l000F41E8:
	v195 = loc24
	v196 = loc6
	v198 = 2<32>
	v196 = v196 << v198
	v195 = v195 + v196
	loc100 = v195
	v195 = loc100
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = loc6
	v196 = 1<32>
	v195 = v195 + v196
	loc105 = v195
	v195 = loc105
	loc6 = v195
	goto l000F414D
	// succ:  l000F414D
l000F4206:
	v195 = loc24
	v196 = 0xB<32>
	v195 = v195 + v196
	loc106 = v195
	v195 = loc106
	v202 = Mem0[v195:int8]
	v195 = CONVERT(v202, int8, word32)
	loc107 = v195
	v195 = loc107
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc108 = v197
	v195 = loc108
	branch !v195 l000F424E
	// succ:  l000F4227 l000F424E
l000F4227:
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	loc109 = v195
	v195 = loc109
	v195 = Mem0[v195:word32]
	loc110 = v195
	v195 = loc110
	v196 = 0x7FFFFFFF<32>
	v195 = v195 & v196
	loc111 = v195
	v195 = loc111
	v196 = 0xFFFFFFFF<32>
	v195 = v195 + v196
	loc193 = v195
	v195 = loc193
	loc112 = v195
	goto l000F4252
	// succ:  l000F4252
l000F424E:
	v195 = 0xA<32>
	loc112 = v195
	// succ:  l000F4252
l000F4252:
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc112
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc113 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc113
	v196 = 1<32>
	v195 = v195 & v196
	loc114 = v195
	v195 = loc114
	branch !v195 l000F428A
	// succ:  l000F4275 l000F428A
l000F4275:
	v195 = ___cxa_find_matching_catch_2()
	loc176 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc177 = v195
	v195 = loc176
	loc13 = v195
	v195 = loc177
	loc15 = v195
	goto l000F4A50
	// succ:  l000F4A50
l000F428A:
	v195 = loc106
	v203 = Mem0[v195:int8]
	v195 = CONVERT(v203, int8, word32)
	loc115 = v195
	v195 = loc115
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc116 = v197
	v195 = loc24
	v195 = Mem0[v195:word32]
	loc117 = v195
	v195 = loc116
	branch !v195 l000F42AC
	// succ:  l000F42A9 l000F42AC
l000F42A9:
	v195 = loc117
	goto l000F42AE
	// succ:  l000F42AE
l000F42AC:
	v195 = loc24
	// succ:  l000F42AE
l000F42AE:
	loc118 = v195
	v195 = loc35
	v196 = loc118
	Mem0[v195:word32] = v196
	v195 = loc57
	v196 = loc46
	Mem0[v195:word32] = v196
	v195 = loc67
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = loc78
	v196 = 1<32>
	v204 = SLICE(v196, byte, 0)
	Mem0[v195:byte] = v204
	v195 = loc89
	v196 = 0x45<32>
	v205 = SLICE(v196, byte, 0)
	Mem0[v195:byte] = v205
	v195 = loc24
	v196 = 4<32>
	v195 = v195 + v196
	loc119 = v195
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	loc120 = v195
	v195 = arg1
	v195 = Mem0[v195:word32]
	loc17 = v195
	v195 = loc118
	loc12 = v195
	v195 = loc17
	loc19 = v195
	// succ:  l000F42F4
l000F42F4:
	v195 = loc19
	v196 = 0<32>
	v197 = v195 == v196
	loc121 = v197
	v195 = loc121
	branch !v195 l000F430A
	// succ:  l000F4301 l000F430A
l000F4301:
	v195 = 0<32>
	loc18 = v195
	v195 = 1<32>
	loc102 = v195
	goto l000F43B1
	// succ:  l000F43B1
l000F430A:
	v195 = loc19
	v196 = 0xC<32>
	v195 = v195 + v196
	loc122 = v195
	v195 = loc122
	v195 = Mem0[v195:word32]
	loc123 = v195
	v195 = loc19
	v196 = 0x10<32>
	v195 = v195 + v196
	loc124 = v195
	v195 = loc124
	v195 = Mem0[v195:word32]
	loc125 = v195
	v195 = loc123
	v196 = loc125
	v197 = v195 == v196
	loc126 = v197
	v195 = loc126
	branch !v195 l000F437D
	// succ:  l000F4331 l000F437D
l000F4331:
	v195 = loc19
	v195 = Mem0[v195:word32]
	loc127 = v195
	v195 = loc127
	v196 = 0x24<32>
	v195 = v195 + v196
	loc128 = v195
	v195 = loc128
	v195 = Mem0[v195:word32]
	loc129 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc129
	v196 = loc19
	v195 = invoke_ii(v195, v196)
	loc130 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc131 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc131
	v196 = 1<32>
	v195 = v195 & v196
	loc132 = v195
	v195 = loc132
	branch !v195 l000F4376
	// succ:  l000F436E l000F4376
l000F436E:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F4376:
	v195 = loc130
	loc8 = v195
	// succ:  l000F437B
l000F437B:
	goto l000F438A
	// succ:  l000F438A
l000F437D:
	v195 = loc123
	v195 = Mem0[v195:word32]
	loc133 = v195
	v195 = loc133
	loc8 = v195
	// succ:  l000F438A
l000F438A:
	v195 = loc8
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc134 = v197
	v195 = loc134
	branch !v195 l000F43A8
	// succ:  l000F4398 l000F43A8
l000F4398:
	v195 = arg1
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0<32>
	loc18 = v195
	v195 = 1<32>
	loc102 = v195
	goto l000F43B0
	// succ:  l000F43B0
l000F43A8:
	v195 = loc19
	loc18 = v195
	v195 = 0<32>
	loc102 = v195
	// succ:  l000F43B0
l000F43B0:
	// succ:  l000F43B1
l000F43B1:
	v195 = arg2
	v195 = Mem0[v195:word32]
	loc135 = v195
	v195 = loc135
	v196 = 0<32>
	v197 = v195 == v196
	loc136 = v197
	// succ:  l000F43C3
l000F43C3:
	v195 = loc136
	branch !v195 l000F43D0
	// succ:  l000F43CA l000F43D0
l000F43CA:
	v195 = 0x14<32>
	loc195 = v195
	goto l000F449C
	// succ:  l000F449C
l000F43D0:
	v195 = loc135
	v196 = 0xC<32>
	v195 = v195 + v196
	loc137 = v195
	v195 = loc137
	v195 = Mem0[v195:word32]
	loc138 = v195
	v195 = loc135
	v196 = 0x10<32>
	v195 = v195 + v196
	loc139 = v195
	v195 = loc139
	v195 = Mem0[v195:word32]
	loc140 = v195
	v195 = loc138
	v196 = loc140
	v197 = v195 == v196
	loc141 = v197
	v195 = loc141
	branch !v195 l000F4453
	// succ:  l000F4403 l000F4453
l000F4403:
	v195 = loc135
	v195 = Mem0[v195:word32]
	loc142 = v195
	v195 = loc142
	v196 = 0x24<32>
	v195 = v195 + v196
	loc143 = v195
	v195 = loc143
	v195 = Mem0[v195:word32]
	loc144 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc144
	v196 = loc135
	v195 = invoke_ii(v195, v196)
	loc145 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc146 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc146
	v196 = 1<32>
	v195 = v195 & v196
	loc148 = v195
	v195 = loc148
	branch !v195 l000F444C
	// succ:  l000F4444 l000F444C
l000F4444:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F444C:
	v195 = loc145
	loc10 = v195
	// succ:  l000F4451
l000F4451:
	goto l000F4461
	// succ:  l000F4461
l000F4453:
	v195 = loc138
	v195 = Mem0[v195:word32]
	loc149 = v195
	v195 = loc149
	loc10 = v195
	// succ:  l000F4461
l000F4461:
	v195 = loc10
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc150 = v197
	v195 = loc150
	branch !v195 l000F447E
	// succ:  l000F446F l000F447E
l000F446F:
	v195 = arg2
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0x14<32>
	loc195 = v195
	goto l000F449D
	// succ:  l000F449D
l000F447E:
	v195 = loc102
	branch !v195 l000F448A
	// succ:  l000F4482 l000F448A
l000F4482:
	v195 = loc135
	loc103 = v195
	goto l000F449D
	// succ:  l000F449D
l000F448A:
	v195 = loc12
	loc16 = v195
	v195 = loc135
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F449A:
	// succ:  l000F449B
l000F449B:
	// succ:  l000F449C
l000F449C:
	// succ:  l000F449D
l000F449D:
	v195 = loc195
	v196 = 0x14<32>
	v197 = v195 == v196
	branch !v197 l000F44C5
	// succ:  l000F44A6 l000F44C5
l000F44A6:
	v195 = 0<32>
	loc195 = v195
	v195 = loc102
	branch !v195 l000F44BF
	// succ:  l000F44AF l000F44BF
l000F44AF:
	v195 = loc12
	loc16 = v195
	v195 = 0<32>
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F44BF:
	v195 = 0<32>
	loc103 = v195
	// succ:  l000F44C3
l000F44C3:
	// succ:  l000F44C5
l000F44C5:
	v195 = loc35
	v195 = Mem0[v195:word32]
	loc151 = v195
	v195 = loc106
	v206 = Mem0[v195:int8]
	v195 = CONVERT(v206, int8, word32)
	loc152 = v195
	v195 = loc152
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc153 = v197
	v195 = loc119
	v195 = Mem0[v195:word32]
	loc154 = v195
	v195 = loc152
	v196 = 0xFF<32>
	v195 = v195 & v196
	loc155 = v195
	v195 = loc153
	branch !v195 l000F44FF
	// succ:  l000F44FB l000F44FF
l000F44FB:
	v195 = loc154
	goto l000F4502
	// succ:  l000F4502
l000F44FF:
	v195 = loc155
	// succ:  l000F4502
l000F4502:
	loc156 = v195
	v195 = loc12
	v196 = loc156
	v195 = v195 + v196
	loc157 = v195
	v195 = loc151
	v196 = loc157
	v197 = v195 == v196
	loc159 = v197
	v195 = loc159
	branch !v195 l000F4612
	// succ:  l000F451E l000F4612
l000F451E:
	v195 = loc156
	v196 = 1<32>
	v195 = v195 << v196
	loc160 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc160
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc161 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc161
	v196 = 1<32>
	v195 = v195 & v196
	loc162 = v195
	v195 = loc162
	branch !v195 l000F4556
	// succ:  l000F454E l000F4556
l000F454E:
	v195 = 0x1F<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F4556:
	v195 = loc106
	v207 = Mem0[v195:int8]
	v195 = CONVERT(v207, int8, word32)
	loc163 = v195
	v195 = loc163
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc164 = v197
	v195 = loc164
	branch !v195 l000F4597
	// succ:  l000F4572 l000F4597
l000F4572:
	v195 = loc120
	v195 = Mem0[v195:word32]
	loc165 = v195
	v195 = loc165
	v196 = 0x7FFFFFFF<32>
	v195 = v195 & v196
	loc166 = v195
	v195 = loc166
	v196 = 0xFFFFFFFF<32>
	v195 = v195 + v196
	loc194 = v195
	v195 = loc194
	loc167 = v195
	goto l000F459C
	// succ:  l000F459C
l000F4597:
	v195 = 0xA<32>
	loc167 = v195
	// succ:  l000F459C
l000F459C:
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc167
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc168 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc168
	v196 = 1<32>
	v195 = v195 & v196
	loc170 = v195
	v195 = loc170
	branch !v195 l000F45CC
	// succ:  l000F45C4 l000F45CC
l000F45C4:
	v195 = 0x1F<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F45CC:
	v195 = loc106
	v208 = Mem0[v195:int8]
	v195 = CONVERT(v208, int8, word32)
	loc171 = v195
	v195 = loc171
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc172 = v197
	v195 = loc24
	v195 = Mem0[v195:word32]
	loc173 = v195
	v195 = loc172
	branch !v195 l000F45F4
	// succ:  l000F45F0 l000F45F4
l000F45F0:
	v195 = loc173
	goto l000F45F6
	// succ:  l000F45F6
l000F45F4:
	v195 = loc24
	// succ:  l000F45F6
l000F45F6:
	loc174 = v195
	v195 = loc174
	v196 = loc156
	v195 = v195 + v196
	loc175 = v195
	v195 = loc35
	v196 = loc175
	Mem0[v195:word32] = v196
	v195 = loc174
	loc14 = v195
	goto l000F4616
	// succ:  l000F4616
l000F4612:
	v195 = loc12
	loc14 = v195
	// succ:  l000F4616
l000F4616:
	v195 = loc18
	v196 = 0xC<32>
	v195 = v195 + v196
	loc185 = v195
	v195 = loc185
	v195 = Mem0[v195:word32]
	loc186 = v195
	v195 = loc18
	v196 = 0x10<32>
	v195 = v195 + v196
	loc187 = v195
	v195 = loc187
	v195 = Mem0[v195:word32]
	loc188 = v195
	v195 = loc186
	v196 = loc188
	v197 = v195 == v196
	loc189 = v197
	v195 = loc189
	branch !v195 l000F468C
	// succ:  l000F4648 l000F468C
l000F4648:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc190 = v195
	v195 = loc190
	v196 = 0x24<32>
	v195 = v195 + v196
	loc25 = v195
	v195 = loc25
	v195 = Mem0[v195:word32]
	loc26 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc26
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	loc27 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc28 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc28
	v196 = 1<32>
	v195 = v195 & v196
	loc29 = v195
	v195 = loc29
	branch !v195 l000F4686
	// succ:  l000F467E l000F4686
l000F467E:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F4686:
	v195 = loc27
	loc11 = v195
	// succ:  l000F468A
l000F468A:
	goto l000F4698
	// succ:  l000F4698
l000F468C:
	v195 = loc186
	v195 = Mem0[v195:word32]
	loc30 = v195
	v195 = loc30
	loc11 = v195
	// succ:  l000F4698
l000F4698:
	v195 = loc158
	v195 = Mem0[v195:word32]
	loc31 = v195
	v195 = loc169
	v195 = Mem0[v195:word32]
	loc32 = v195
	v195 = loc11
	v196 = loc78
	v198 = loc89
	v199 = loc14
	v200 = loc35
	v209 = loc31
	v210 = loc32
	v211 = loc180
	v212 = loc46
	v213 = loc57
	v214 = loc67
	v215 = loc147
	v195 = fn000F3D09(v195, v196, v198, v199, v200, v209, v210, v211, v212, v213, v214, v215)
	loc33 = v195
	v195 = loc33
	v196 = 0<32>
	v197 = v195 == v196
	loc34 = v197
	v195 = loc34
	v197 = v195 == 0<32>
	branch !v197 l000F46E4
	// succ:  l000F46D4 l000F46E4
l000F46D4:
	v195 = loc14
	loc16 = v195
	v195 = loc103
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F46E4:
	v195 = loc185
	v195 = Mem0[v195:word32]
	loc36 = v195
	v195 = loc187
	v195 = Mem0[v195:word32]
	loc37 = v195
	v195 = loc36
	v196 = loc37
	v197 = v195 == v196
	loc38 = v197
	v195 = loc38
	branch !v195 l000F4746
	// succ:  l000F46FF l000F4746
l000F46FF:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc39 = v195
	v195 = loc39
	v196 = 0x28<32>
	v195 = v195 + v196
	loc40 = v195
	v195 = loc40
	v195 = Mem0[v195:word32]
	loc41 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc41
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	v195 = Mem0[0x00140048<p32>:word32]
	loc42 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc42
	v196 = 1<32>
	v195 = v195 & v196
	loc43 = v195
	v195 = loc43
	branch !v195 l000F473A
	// succ:  l000F4732 l000F473A
l000F4732:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F4762
	// succ:  l000F4762
l000F473A:
	v195 = loc14
	loc12 = v195
	v195 = loc18
	loc19 = v195
	goto l000F42AE
	// succ:  l000F42AE
l000F4744:
	goto l000F475F
	// succ:  l000F475F
l000F4746:
	v195 = loc36
	v196 = 4<32>
	v195 = v195 + v196
	loc44 = v195
	v195 = loc185
	v196 = loc44
	Mem0[v195:word32] = v196
	v195 = loc14
	loc12 = v195
	v195 = loc18
	loc19 = v195
	goto l000F42AE
	// succ:  l000F42AE
l000F475F:
	goto l000F42AE
	// succ:  l000F42AE
l000F4762:
	v195 = loc195
	v196 = 0x1D<32>
	v197 = v195 == v196
	branch !v197 l000F4781
	// succ:  l000F476C l000F4781
l000F476C:
	v195 = ___cxa_find_matching_catch_2()
	loc178 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc179 = v195
	v195 = loc178
	loc21 = v195
	v195 = loc179
	loc22 = v195
	goto l000F4A47
	// succ:  l000F4A47
l000F4781:
	v195 = loc195
	v196 = 0x1F<32>
	v197 = v195 == v196
	branch !v197 l000F479E
	// succ:  l000F4789 l000F479E
l000F4789:
	v195 = ___cxa_find_matching_catch_2()
	loc183 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc184 = v195
	v195 = loc183
	loc21 = v195
	v195 = loc184
	loc22 = v195
	goto l000F4A46
	// succ:  l000F4A46
l000F479E:
	v195 = loc195
	v196 = 0x27<32>
	v197 = v195 == v196
	branch !v197 l000F4A46
	// succ:  l000F47A6 l000F4A46
l000F47A6:
	v195 = loc180
	v196 = 0xB<32>
	v195 = v195 + v196
	loc45 = v195
	v195 = loc45
	v216 = Mem0[v195:int8]
	v195 = CONVERT(v216, int8, word32)
	loc47 = v195
	v195 = loc47
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc48 = v197
	v195 = loc180
	v196 = 4<32>
	v195 = v195 + v196
	loc49 = v195
	v195 = loc49
	v195 = Mem0[v195:word32]
	loc50 = v195
	v195 = loc47
	v196 = 0xFF<32>
	v195 = v195 & v196
	loc51 = v195
	v195 = loc48
	branch !v195 l000F47E0
	// succ:  l000F47DD l000F47E0
l000F47DD:
	v195 = loc50
	goto l000F47E2
	// succ:  l000F47E2
l000F47E0:
	v195 = loc51
	// succ:  l000F47E2
l000F47E2:
	loc52 = v195
	v195 = loc52
	v196 = 0<32>
	v197 = v195 == v196
	loc53 = v197
	v195 = loc78
	v217 = Mem0[v195:int8]
	v195 = CONVERT(v217, int8, word32)
	loc54 = v195
	v195 = loc54
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 == v196
	loc55 = v197
	v195 = loc53
	v196 = loc55
	v195 = v195 | v196
	loc192 = v195
	v195 = loc192
	v197 = v195 == 0<32>
	branch !v197 l000F484E
	// succ:  l000F480E l000F484E
l000F480E:
	v195 = loc57
	v195 = Mem0[v195:word32]
	loc56 = v195
	v195 = loc56
	loc58 = v195
	v195 = loc46
	loc59 = v195
	v195 = loc58
	v196 = loc59
	v195 = v195 - v196
	loc60 = v195
	v195 = loc60
	v196 = 0xA0<32>
	v197 = v195 < v196
	loc61 = v197
	v195 = loc61
	branch !v195 l000F484D
	// succ:  l000F4830 l000F484D
l000F4830:
	v195 = loc67
	v195 = Mem0[v195:word32]
	loc62 = v195
	v195 = loc56
	v196 = 4<32>
	v195 = v195 + v196
	loc63 = v195
	v195 = loc57
	v196 = loc63
	Mem0[v195:word32] = v196
	v195 = loc56
	v196 = loc62
	Mem0[v195:word32] = v196
	// succ:  l000F484D
l000F484D:
	// succ:  l000F484E
l000F484E:
	v195 = loc35
	v195 = Mem0[v195:word32]
	loc64 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x182<32>
	v196 = loc16
	v198 = loc64
	v199 = arg4
	v218 = invoke_diii(v195, v196, v198, v199)
	loc197 = v218
	v195 = Mem0[0x00140048<p32>:word32]
	loc65 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc65
	v196 = 1<32>
	v195 = v195 & v196
	loc66 = v195
	// succ:  l000F4876
l000F4876:
	v195 = loc66
	v197 = v195 == 0<32>
	branch !v197 l000F4A30
	// succ:  l000F487D l000F4A30
l000F487D:
	v195 = arg5
	v219 = loc197
	Mem0[v195:real64] = v219
	v195 = loc57
	v195 = Mem0[v195:word32]
	loc68 = v195
	v195 = loc180
	v196 = loc46
	v198 = loc68
	v199 = arg4
	fn000EC01D(v195, v196, v198, v199)
	v195 = loc18
	v196 = 0<32>
	v197 = v195 == v196
	loc69 = v197
	v195 = loc69
	branch !v195 l000F48A8
	// succ:  l000F48A3 l000F48A8
l000F48A3:
	v195 = 1<32>
	loc104 = v195
	goto l000F4934
	// succ:  l000F4934
l000F48A8:
	v195 = loc18
	v196 = 0xC<32>
	v195 = v195 + v196
	loc70 = v195
	v195 = loc70
	v195 = Mem0[v195:word32]
	loc71 = v195
	v195 = loc18
	v196 = 0x10<32>
	v195 = v195 + v196
	loc72 = v195
	v195 = loc72
	v195 = Mem0[v195:word32]
	loc73 = v195
	v195 = loc71
	v196 = loc73
	v197 = v195 == v196
	loc74 = v197
	v195 = loc74
	branch !v195 l000F490C
	// succ:  l000F48CF l000F490C
l000F48CF:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc75 = v195
	v195 = loc75
	v196 = 0x24<32>
	v195 = v195 + v196
	loc76 = v195
	v195 = loc76
	v195 = Mem0[v195:word32]
	loc77 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc77
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	loc79 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc80 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc80
	v196 = 1<32>
	v195 = v195 & v196
	loc81 = v195
	v195 = loc81
	branch !v195 l000F4906
	// succ:  l000F4903 l000F4906
l000F4903:
	goto l000F4A30
	// succ:  l000F4A30
l000F4906:
	v195 = loc79
	loc7 = v195
	// succ:  l000F490A
l000F490A:
	goto l000F4917
	// succ:  l000F4917
l000F490C:
	v195 = loc71
	v195 = Mem0[v195:word32]
	loc82 = v195
	v195 = loc82
	loc7 = v195
	// succ:  l000F4917
l000F4917:
	v195 = loc7
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc83 = v197
	v195 = loc83
	branch !v195 l000F492F
	// succ:  l000F4923 l000F492F
l000F4923:
	v195 = arg1
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 1<32>
	loc104 = v195
	goto l000F4933
	// succ:  l000F4933
l000F492F:
	v195 = 0<32>
	loc104 = v195
	// succ:  l000F4933
l000F4933:
	// succ:  l000F4934
l000F4934:
	v195 = loc20
	v196 = 0<32>
	v197 = v195 == v196
	loc84 = v197
	// succ:  l000F493C
l000F493C:
	v195 = loc84
	branch !v195 l000F4948
	// succ:  l000F4942 l000F4948
l000F4942:
	v195 = 0x37<32>
	loc195 = v195
	goto l000F49E2
	// succ:  l000F49E2
l000F4948:
	v195 = loc20
	v196 = 0xC<32>
	v195 = v195 + v196
	loc85 = v195
	v195 = loc85
	v195 = Mem0[v195:word32]
	loc86 = v195
	v195 = loc20
	v196 = 0x10<32>
	v195 = v195 + v196
	loc87 = v195
	v195 = loc87
	v195 = Mem0[v195:word32]
	loc88 = v195
	v195 = loc86
	v196 = loc88
	v197 = v195 == v196
	loc90 = v197
	v195 = loc90
	branch !v195 l000F49AC
	// succ:  l000F496F l000F49AC
l000F496F:
	v195 = loc20
	v195 = Mem0[v195:word32]
	loc91 = v195
	v195 = loc91
	v196 = 0x24<32>
	v195 = v195 + v196
	loc92 = v195
	v195 = loc92
	v195 = Mem0[v195:word32]
	loc93 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc93
	v196 = loc20
	v195 = invoke_ii(v195, v196)
	loc94 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc95 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc95
	v196 = 1<32>
	v195 = v195 & v196
	loc96 = v195
	v195 = loc96
	branch !v195 l000F49A6
	// succ:  l000F49A3 l000F49A6
l000F49A3:
	goto l000F4A30
	// succ:  l000F4A30
l000F49A6:
	v195 = loc94
	loc9 = v195
	// succ:  l000F49AA
l000F49AA:
	goto l000F49B7
	// succ:  l000F49B7
l000F49AC:
	v195 = loc86
	v195 = Mem0[v195:word32]
	loc97 = v195
	v195 = loc97
	loc9 = v195
	// succ:  l000F49B7
l000F49B7:
	v195 = loc9
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc98 = v197
	v195 = loc98
	branch !v195 l000F49D2
	// succ:  l000F49C3 l000F49D2
l000F49C3:
	v195 = arg2
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0x37<32>
	loc195 = v195
	goto l000F49E3
	// succ:  l000F49E3
l000F49D2:
	v195 = loc104
	branch !v195 l000F49D9
	// succ:  l000F49D6 l000F49D9
l000F49D6:
	goto l000F49E3
	// succ:  l000F49E3
l000F49D9:
	v195 = 0x39<32>
	loc195 = v195
	goto l000F49E3
	// succ:  l000F49E3
l000F49E0:
	// succ:  l000F49E1
l000F49E1:
	// succ:  l000F49E2
l000F49E2:
	// succ:  l000F49E3
l000F49E3:
	v195 = loc195
	v196 = 0x37<32>
	v197 = v195 == v196
	branch !v197 l000F49F7
	// succ:  l000F49EC l000F49F7
l000F49EC:
	v195 = loc104
	branch !v195 l000F49F6
	// succ:  l000F49F0 l000F49F6
l000F49F0:
	v195 = 0x39<32>
	loc195 = v195
	// succ:  l000F49F6
l000F49F6:
	// succ:  l000F49F7
l000F49F7:
	v195 = loc195
	v196 = 0x39<32>
	v197 = v195 == v196
	branch !v197 l000F4A15
	// succ:  l000F49FF l000F4A15
l000F49FF:
	v195 = arg4
	v195 = Mem0[v195:word32]
	loc99 = v195
	v195 = loc99
	v196 = 2<32>
	v195 = v195 | v196
	loc101 = v195
	v195 = arg4
	v196 = loc101
	Mem0[v195:word32] = v196
	// succ:  l000F4A15
l000F4A15:
	v195 = arg1
	v195 = Mem0[v195:word32]
	loc23 = v195
	v195 = loc24
	fn0011BAF7(v195)
	v195 = loc180
	fn0011BAF7(v195)
	v195 = loc196
	Mem0[0x00140030<p32>:word32] = v195
	v195 = loc23
	return v195
	// succ:  fn000F4131_exit
l000F4A30:
	// succ:  l000F4A30
l000F4A30:
	v195 = ___cxa_find_matching_catch_2()
	loc181 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc182 = v195
	v195 = loc181
	loc21 = v195
	v195 = loc182
	loc22 = v195
	// succ:  l000F4A46
l000F4A46:
	// succ:  l000F4A46
l000F4A46:
	// succ:  l000F4A47
l000F4A47:
	v195 = loc21
	loc13 = v195
	v195 = loc22
	loc15 = v195
	// succ:  l000F4A50
l000F4A50:
	v195 = loc24
	fn0011BAF7(v195)
	v195 = loc180
	fn0011BAF7(v195)
	v195 = loc13
	___resumeException(v195)
	v195 = 0<32>
	return v195
	// succ:  fn000F4131_exit
l000F4A63:
	return v195
	// succ:  fn000F4131_exit
fn000F4131_exit:


// fn000F4A65
// Return size: 0
word32 fn000F4A65(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F4A65_entry:
	// succ:  l000F4A65
l000F4A65:
	v195 = Mem0[0x00140030<p32>:word32]
	loc196 = v195
	v195 = Mem0[0x00140030<p32>:word32]
	v196 = 0x160<32>
	v195 = v195 + v196
	Mem0[0x00140030<p32>:word32] = v195
	v195 = Mem0[0x00140030<p32>:word32]
	v196 = Mem0[0x00140034<p32>:word32]
	v197 = v195 >= v196
	branch !v197 l000F4A81
	// succ:  l000F4A7B l000F4A81
l000F4A7B:
	v195 = 0x160<32>
	abortStackOverflow(v195)
	// succ:  l000F4A81
l000F4A81:
	v195 = loc196
	v196 = 0xD0<32>
	v195 = v195 + v196
	loc147 = v195
	v195 = loc196
	v196 = 0xC8<32>
	v195 = v195 + v196
	loc158 = v195
	v195 = loc196
	v196 = 0xC4<32>
	v195 = v195 + v196
	loc169 = v195
	v195 = loc196
	v196 = 0xB8<32>
	v195 = v195 + v196
	loc180 = v195
	v195 = loc196
	v196 = 0xAC<32>
	v195 = v195 + v196
	loc24 = v195
	v195 = loc196
	v196 = 0xA8<32>
	v195 = v195 + v196
	loc35 = v195
	v195 = loc196
	v196 = 8<32>
	v195 = v195 + v196
	loc46 = v195
	v195 = loc196
	v196 = 4<32>
	v195 = v195 + v196
	loc57 = v195
	v195 = loc196
	loc67 = v195
	v195 = loc196
	v196 = 0x151<32>
	v195 = v195 + v196
	loc78 = v195
	v195 = loc196
	v196 = 0x150<32>
	v195 = v195 + v196
	loc89 = v195
	v195 = loc180
	v196 = arg3
	v198 = loc147
	v199 = loc158
	v200 = loc169
	fn000F3B58(v195, v196, v198, v199, v200)
	v195 = loc24
	v201 = 0<64>
	Mem0[v195:word64] = v201
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0<32>
	loc6 = v195
	// succ:  l000F4B0A
l000F4B0A:
	v195 = loc6
	v196 = 3<32>
	v197 = v195 == v196
	loc191 = v197
	v195 = loc191
	branch !v195 l000F4B1C
	// succ:  l000F4B19 l000F4B1C
l000F4B19:
	goto l000F4B3A
	// succ:  l000F4B3A
l000F4B1C:
	v195 = loc24
	v196 = loc6
	v198 = 2<32>
	v196 = v196 << v198
	v195 = v195 + v196
	loc100 = v195
	v195 = loc100
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = loc6
	v196 = 1<32>
	v195 = v195 + v196
	loc105 = v195
	v195 = loc105
	loc6 = v195
	goto l000F4A81
	// succ:  l000F4A81
l000F4B3A:
	v195 = loc24
	v196 = 0xB<32>
	v195 = v195 + v196
	loc106 = v195
	v195 = loc106
	v202 = Mem0[v195:int8]
	v195 = CONVERT(v202, int8, word32)
	loc107 = v195
	v195 = loc107
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc108 = v197
	v195 = loc108
	branch !v195 l000F4B82
	// succ:  l000F4B5B l000F4B82
l000F4B5B:
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	loc109 = v195
	v195 = loc109
	v195 = Mem0[v195:word32]
	loc110 = v195
	v195 = loc110
	v196 = 0x7FFFFFFF<32>
	v195 = v195 & v196
	loc111 = v195
	v195 = loc111
	v196 = 0xFFFFFFFF<32>
	v195 = v195 + v196
	loc193 = v195
	v195 = loc193
	loc112 = v195
	goto l000F4B86
	// succ:  l000F4B86
l000F4B82:
	v195 = 0xA<32>
	loc112 = v195
	// succ:  l000F4B86
l000F4B86:
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc112
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc113 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc113
	v196 = 1<32>
	v195 = v195 & v196
	loc114 = v195
	v195 = loc114
	branch !v195 l000F4BBE
	// succ:  l000F4BA9 l000F4BBE
l000F4BA9:
	v195 = ___cxa_find_matching_catch_2()
	loc176 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc177 = v195
	v195 = loc176
	loc13 = v195
	v195 = loc177
	loc15 = v195
	goto l000F5385
	// succ:  l000F5385
l000F4BBE:
	v195 = loc106
	v203 = Mem0[v195:int8]
	v195 = CONVERT(v203, int8, word32)
	loc115 = v195
	v195 = loc115
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc116 = v197
	v195 = loc24
	v195 = Mem0[v195:word32]
	loc117 = v195
	v195 = loc116
	branch !v195 l000F4BE0
	// succ:  l000F4BDD l000F4BE0
l000F4BDD:
	v195 = loc117
	goto l000F4BE2
	// succ:  l000F4BE2
l000F4BE0:
	v195 = loc24
	// succ:  l000F4BE2
l000F4BE2:
	loc118 = v195
	v195 = loc35
	v196 = loc118
	Mem0[v195:word32] = v196
	v195 = loc57
	v196 = loc46
	Mem0[v195:word32] = v196
	v195 = loc67
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = loc78
	v196 = 1<32>
	v204 = SLICE(v196, byte, 0)
	Mem0[v195:byte] = v204
	v195 = loc89
	v196 = 0x45<32>
	v205 = SLICE(v196, byte, 0)
	Mem0[v195:byte] = v205
	v195 = loc24
	v196 = 4<32>
	v195 = v195 + v196
	loc119 = v195
	v195 = loc24
	v196 = 8<32>
	v195 = v195 + v196
	loc120 = v195
	v195 = arg1
	v195 = Mem0[v195:word32]
	loc17 = v195
	v195 = loc118
	loc12 = v195
	v195 = loc17
	loc19 = v195
	// succ:  l000F4C28
l000F4C28:
	v195 = loc19
	v196 = 0<32>
	v197 = v195 == v196
	loc121 = v197
	v195 = loc121
	branch !v195 l000F4C3E
	// succ:  l000F4C35 l000F4C3E
l000F4C35:
	v195 = 0<32>
	loc18 = v195
	v195 = 1<32>
	loc102 = v195
	goto l000F4CE5
	// succ:  l000F4CE5
l000F4C3E:
	v195 = loc19
	v196 = 0xC<32>
	v195 = v195 + v196
	loc122 = v195
	v195 = loc122
	v195 = Mem0[v195:word32]
	loc123 = v195
	v195 = loc19
	v196 = 0x10<32>
	v195 = v195 + v196
	loc124 = v195
	v195 = loc124
	v195 = Mem0[v195:word32]
	loc125 = v195
	v195 = loc123
	v196 = loc125
	v197 = v195 == v196
	loc126 = v197
	v195 = loc126
	branch !v195 l000F4CB1
	// succ:  l000F4C65 l000F4CB1
l000F4C65:
	v195 = loc19
	v195 = Mem0[v195:word32]
	loc127 = v195
	v195 = loc127
	v196 = 0x24<32>
	v195 = v195 + v196
	loc128 = v195
	v195 = loc128
	v195 = Mem0[v195:word32]
	loc129 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc129
	v196 = loc19
	v195 = invoke_ii(v195, v196)
	loc130 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc131 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc131
	v196 = 1<32>
	v195 = v195 & v196
	loc132 = v195
	v195 = loc132
	branch !v195 l000F4CAA
	// succ:  l000F4CA2 l000F4CAA
l000F4CA2:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F4CAA:
	v195 = loc130
	loc8 = v195
	// succ:  l000F4CAF
l000F4CAF:
	goto l000F4CBE
	// succ:  l000F4CBE
l000F4CB1:
	v195 = loc123
	v195 = Mem0[v195:word32]
	loc133 = v195
	v195 = loc133
	loc8 = v195
	// succ:  l000F4CBE
l000F4CBE:
	v195 = loc8
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc134 = v197
	v195 = loc134
	branch !v195 l000F4CDC
	// succ:  l000F4CCC l000F4CDC
l000F4CCC:
	v195 = arg1
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0<32>
	loc18 = v195
	v195 = 1<32>
	loc102 = v195
	goto l000F4CE4
	// succ:  l000F4CE4
l000F4CDC:
	v195 = loc19
	loc18 = v195
	v195 = 0<32>
	loc102 = v195
	// succ:  l000F4CE4
l000F4CE4:
	// succ:  l000F4CE5
l000F4CE5:
	v195 = arg2
	v195 = Mem0[v195:word32]
	loc135 = v195
	v195 = loc135
	v196 = 0<32>
	v197 = v195 == v196
	loc136 = v197
	// succ:  l000F4CF7
l000F4CF7:
	v195 = loc136
	branch !v195 l000F4D04
	// succ:  l000F4CFE l000F4D04
l000F4CFE:
	v195 = 0x14<32>
	loc195 = v195
	goto l000F4DD0
	// succ:  l000F4DD0
l000F4D04:
	v195 = loc135
	v196 = 0xC<32>
	v195 = v195 + v196
	loc137 = v195
	v195 = loc137
	v195 = Mem0[v195:word32]
	loc138 = v195
	v195 = loc135
	v196 = 0x10<32>
	v195 = v195 + v196
	loc139 = v195
	v195 = loc139
	v195 = Mem0[v195:word32]
	loc140 = v195
	v195 = loc138
	v196 = loc140
	v197 = v195 == v196
	loc141 = v197
	v195 = loc141
	branch !v195 l000F4D87
	// succ:  l000F4D37 l000F4D87
l000F4D37:
	v195 = loc135
	v195 = Mem0[v195:word32]
	loc142 = v195
	v195 = loc142
	v196 = 0x24<32>
	v195 = v195 + v196
	loc143 = v195
	v195 = loc143
	v195 = Mem0[v195:word32]
	loc144 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc144
	v196 = loc135
	v195 = invoke_ii(v195, v196)
	loc145 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc146 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc146
	v196 = 1<32>
	v195 = v195 & v196
	loc148 = v195
	v195 = loc148
	branch !v195 l000F4D80
	// succ:  l000F4D78 l000F4D80
l000F4D78:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F4D80:
	v195 = loc145
	loc10 = v195
	// succ:  l000F4D85
l000F4D85:
	goto l000F4D95
	// succ:  l000F4D95
l000F4D87:
	v195 = loc138
	v195 = Mem0[v195:word32]
	loc149 = v195
	v195 = loc149
	loc10 = v195
	// succ:  l000F4D95
l000F4D95:
	v195 = loc10
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc150 = v197
	v195 = loc150
	branch !v195 l000F4DB2
	// succ:  l000F4DA3 l000F4DB2
l000F4DA3:
	v195 = arg2
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0x14<32>
	loc195 = v195
	goto l000F4DD1
	// succ:  l000F4DD1
l000F4DB2:
	v195 = loc102
	branch !v195 l000F4DBE
	// succ:  l000F4DB6 l000F4DBE
l000F4DB6:
	v195 = loc135
	loc103 = v195
	goto l000F4DD1
	// succ:  l000F4DD1
l000F4DBE:
	v195 = loc12
	loc16 = v195
	v195 = loc135
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F4DCE:
	// succ:  l000F4DCF
l000F4DCF:
	// succ:  l000F4DD0
l000F4DD0:
	// succ:  l000F4DD1
l000F4DD1:
	v195 = loc195
	v196 = 0x14<32>
	v197 = v195 == v196
	branch !v197 l000F4DF9
	// succ:  l000F4DDA l000F4DF9
l000F4DDA:
	v195 = 0<32>
	loc195 = v195
	v195 = loc102
	branch !v195 l000F4DF3
	// succ:  l000F4DE3 l000F4DF3
l000F4DE3:
	v195 = loc12
	loc16 = v195
	v195 = 0<32>
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F4DF3:
	v195 = 0<32>
	loc103 = v195
	// succ:  l000F4DF7
l000F4DF7:
	// succ:  l000F4DF9
l000F4DF9:
	v195 = loc35
	v195 = Mem0[v195:word32]
	loc151 = v195
	v195 = loc106
	v206 = Mem0[v195:int8]
	v195 = CONVERT(v206, int8, word32)
	loc152 = v195
	v195 = loc152
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc153 = v197
	v195 = loc119
	v195 = Mem0[v195:word32]
	loc154 = v195
	v195 = loc152
	v196 = 0xFF<32>
	v195 = v195 & v196
	loc155 = v195
	v195 = loc153
	branch !v195 l000F4E33
	// succ:  l000F4E2F l000F4E33
l000F4E2F:
	v195 = loc154
	goto l000F4E36
	// succ:  l000F4E36
l000F4E33:
	v195 = loc155
	// succ:  l000F4E36
l000F4E36:
	loc156 = v195
	v195 = loc12
	v196 = loc156
	v195 = v195 + v196
	loc157 = v195
	v195 = loc151
	v196 = loc157
	v197 = v195 == v196
	loc159 = v197
	v195 = loc159
	branch !v195 l000F4F46
	// succ:  l000F4E52 l000F4F46
l000F4E52:
	v195 = loc156
	v196 = 1<32>
	v195 = v195 << v196
	loc160 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc160
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc161 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc161
	v196 = 1<32>
	v195 = v195 & v196
	loc162 = v195
	v195 = loc162
	branch !v195 l000F4E8A
	// succ:  l000F4E82 l000F4E8A
l000F4E82:
	v195 = 0x1F<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F4E8A:
	v195 = loc106
	v207 = Mem0[v195:int8]
	v195 = CONVERT(v207, int8, word32)
	loc163 = v195
	v195 = loc163
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc164 = v197
	v195 = loc164
	branch !v195 l000F4ECB
	// succ:  l000F4EA6 l000F4ECB
l000F4EA6:
	v195 = loc120
	v195 = Mem0[v195:word32]
	loc165 = v195
	v195 = loc165
	v196 = 0x7FFFFFFF<32>
	v195 = v195 & v196
	loc166 = v195
	v195 = loc166
	v196 = 0xFFFFFFFF<32>
	v195 = v195 + v196
	loc194 = v195
	v195 = loc194
	loc167 = v195
	goto l000F4ED0
	// succ:  l000F4ED0
l000F4ECB:
	v195 = 0xA<32>
	loc167 = v195
	// succ:  l000F4ED0
l000F4ED0:
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x17A<32>
	v196 = loc24
	v198 = loc167
	v199 = 0<32>
	invoke_viii(v195, v196, v198, v199)
	v195 = Mem0[0x00140048<p32>:word32]
	loc168 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc168
	v196 = 1<32>
	v195 = v195 & v196
	loc170 = v195
	v195 = loc170
	branch !v195 l000F4F00
	// succ:  l000F4EF8 l000F4F00
l000F4EF8:
	v195 = 0x1F<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F4F00:
	v195 = loc106
	v208 = Mem0[v195:int8]
	v195 = CONVERT(v208, int8, word32)
	loc171 = v195
	v195 = loc171
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc172 = v197
	v195 = loc24
	v195 = Mem0[v195:word32]
	loc173 = v195
	v195 = loc172
	branch !v195 l000F4F28
	// succ:  l000F4F24 l000F4F28
l000F4F24:
	v195 = loc173
	goto l000F4F2A
	// succ:  l000F4F2A
l000F4F28:
	v195 = loc24
	// succ:  l000F4F2A
l000F4F2A:
	loc174 = v195
	v195 = loc174
	v196 = loc156
	v195 = v195 + v196
	loc175 = v195
	v195 = loc35
	v196 = loc175
	Mem0[v195:word32] = v196
	v195 = loc174
	loc14 = v195
	goto l000F4F4A
	// succ:  l000F4F4A
l000F4F46:
	v195 = loc12
	loc14 = v195
	// succ:  l000F4F4A
l000F4F4A:
	v195 = loc18
	v196 = 0xC<32>
	v195 = v195 + v196
	loc185 = v195
	v195 = loc185
	v195 = Mem0[v195:word32]
	loc186 = v195
	v195 = loc18
	v196 = 0x10<32>
	v195 = v195 + v196
	loc187 = v195
	v195 = loc187
	v195 = Mem0[v195:word32]
	loc188 = v195
	v195 = loc186
	v196 = loc188
	v197 = v195 == v196
	loc189 = v197
	v195 = loc189
	branch !v195 l000F4FC0
	// succ:  l000F4F7C l000F4FC0
l000F4F7C:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc190 = v195
	v195 = loc190
	v196 = 0x24<32>
	v195 = v195 + v196
	loc25 = v195
	v195 = loc25
	v195 = Mem0[v195:word32]
	loc26 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc26
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	loc27 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc28 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc28
	v196 = 1<32>
	v195 = v195 & v196
	loc29 = v195
	v195 = loc29
	branch !v195 l000F4FBA
	// succ:  l000F4FB2 l000F4FBA
l000F4FB2:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F4FBA:
	v195 = loc27
	loc11 = v195
	// succ:  l000F4FBE
l000F4FBE:
	goto l000F4FCC
	// succ:  l000F4FCC
l000F4FC0:
	v195 = loc186
	v195 = Mem0[v195:word32]
	loc30 = v195
	v195 = loc30
	loc11 = v195
	// succ:  l000F4FCC
l000F4FCC:
	v195 = loc158
	v195 = Mem0[v195:word32]
	loc31 = v195
	v195 = loc169
	v195 = Mem0[v195:word32]
	loc32 = v195
	v195 = loc11
	v196 = loc78
	v198 = loc89
	v199 = loc14
	v200 = loc35
	v209 = loc31
	v210 = loc32
	v211 = loc180
	v212 = loc46
	v213 = loc57
	v214 = loc67
	v215 = loc147
	v195 = fn000F3D09(v195, v196, v198, v199, v200, v209, v210, v211, v212, v213, v214, v215)
	loc33 = v195
	v195 = loc33
	v196 = 0<32>
	v197 = v195 == v196
	loc34 = v197
	v195 = loc34
	v197 = v195 == 0<32>
	branch !v197 l000F5018
	// succ:  l000F5008 l000F5018
l000F5008:
	v195 = loc14
	loc16 = v195
	v195 = loc103
	loc20 = v195
	v195 = 0x27<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F5018:
	v195 = loc185
	v195 = Mem0[v195:word32]
	loc36 = v195
	v195 = loc187
	v195 = Mem0[v195:word32]
	loc37 = v195
	v195 = loc36
	v196 = loc37
	v197 = v195 == v196
	loc38 = v197
	v195 = loc38
	branch !v195 l000F507A
	// succ:  l000F5033 l000F507A
l000F5033:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc39 = v195
	v195 = loc39
	v196 = 0x28<32>
	v195 = v195 + v196
	loc40 = v195
	v195 = loc40
	v195 = Mem0[v195:word32]
	loc41 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc41
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	v195 = Mem0[0x00140048<p32>:word32]
	loc42 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc42
	v196 = 1<32>
	v195 = v195 & v196
	loc43 = v195
	v195 = loc43
	branch !v195 l000F506E
	// succ:  l000F5066 l000F506E
l000F5066:
	v195 = 0x1D<32>
	loc195 = v195
	goto l000F5096
	// succ:  l000F5096
l000F506E:
	v195 = loc14
	loc12 = v195
	v195 = loc18
	loc19 = v195
	goto l000F4BE2
	// succ:  l000F4BE2
l000F5078:
	goto l000F5093
	// succ:  l000F5093
l000F507A:
	v195 = loc36
	v196 = 4<32>
	v195 = v195 + v196
	loc44 = v195
	v195 = loc185
	v196 = loc44
	Mem0[v195:word32] = v196
	v195 = loc14
	loc12 = v195
	v195 = loc18
	loc19 = v195
	goto l000F4BE2
	// succ:  l000F4BE2
l000F5093:
	goto l000F4BE2
	// succ:  l000F4BE2
l000F5096:
	v195 = loc195
	v196 = 0x1D<32>
	v197 = v195 == v196
	branch !v197 l000F50B5
	// succ:  l000F50A0 l000F50B5
l000F50A0:
	v195 = ___cxa_find_matching_catch_2()
	loc178 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc179 = v195
	v195 = loc178
	loc21 = v195
	v195 = loc179
	loc22 = v195
	goto l000F537C
	// succ:  l000F537C
l000F50B5:
	v195 = loc195
	v196 = 0x1F<32>
	v197 = v195 == v196
	branch !v197 l000F50D2
	// succ:  l000F50BD l000F50D2
l000F50BD:
	v195 = ___cxa_find_matching_catch_2()
	loc183 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc184 = v195
	v195 = loc183
	loc21 = v195
	v195 = loc184
	loc22 = v195
	goto l000F537B
	// succ:  l000F537B
l000F50D2:
	v195 = loc195
	v196 = 0x27<32>
	v197 = v195 == v196
	branch !v197 l000F537B
	// succ:  l000F50DA l000F537B
l000F50DA:
	v195 = loc180
	v196 = 0xB<32>
	v195 = v195 + v196
	loc45 = v195
	v195 = loc45
	v216 = Mem0[v195:int8]
	v195 = CONVERT(v216, int8, word32)
	loc47 = v195
	v195 = loc47
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 < v196
	loc48 = v197
	v195 = loc180
	v196 = 4<32>
	v195 = v195 + v196
	loc49 = v195
	v195 = loc49
	v195 = Mem0[v195:word32]
	loc50 = v195
	v195 = loc47
	v196 = 0xFF<32>
	v195 = v195 & v196
	loc51 = v195
	v195 = loc48
	branch !v195 l000F5114
	// succ:  l000F5111 l000F5114
l000F5111:
	v195 = loc50
	goto l000F5116
	// succ:  l000F5116
l000F5114:
	v195 = loc51
	// succ:  l000F5116
l000F5116:
	loc52 = v195
	v195 = loc52
	v196 = 0<32>
	v197 = v195 == v196
	loc53 = v197
	v195 = loc78
	v217 = Mem0[v195:int8]
	v195 = CONVERT(v217, int8, word32)
	loc54 = v195
	v195 = loc54
	v196 = 0x18<32>
	v195 = v195 << v196
	v196 = 0x18<32>
	v195 = v195 >> v196
	v196 = 0<32>
	v197 = v195 == v196
	loc55 = v197
	v195 = loc53
	v196 = loc55
	v195 = v195 | v196
	loc192 = v195
	v195 = loc192
	v197 = v195 == 0<32>
	branch !v197 l000F5182
	// succ:  l000F5142 l000F5182
l000F5142:
	v195 = loc57
	v195 = Mem0[v195:word32]
	loc56 = v195
	v195 = loc56
	loc58 = v195
	v195 = loc46
	loc59 = v195
	v195 = loc58
	v196 = loc59
	v195 = v195 - v196
	loc60 = v195
	v195 = loc60
	v196 = 0xA0<32>
	v197 = v195 < v196
	loc61 = v197
	v195 = loc61
	branch !v195 l000F5181
	// succ:  l000F5164 l000F5181
l000F5164:
	v195 = loc67
	v195 = Mem0[v195:word32]
	loc62 = v195
	v195 = loc56
	v196 = 4<32>
	v195 = v195 + v196
	loc63 = v195
	v195 = loc57
	v196 = loc63
	Mem0[v195:word32] = v196
	v195 = loc56
	v196 = loc62
	Mem0[v195:word32] = v196
	// succ:  l000F5181
l000F5181:
	// succ:  l000F5182
l000F5182:
	v195 = loc35
	v195 = Mem0[v195:word32]
	loc64 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = 0x183<32>
	v196 = loc16
	v198 = loc64
	v199 = arg4
	v218 = invoke_fiii(v195, v196, v198, v199)
	v219 = CONVERT(v218, real64, real32)
	loc197 = v219
	v195 = Mem0[0x00140048<p32>:word32]
	loc65 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc65
	v196 = 1<32>
	v195 = v195 & v196
	loc66 = v195
	// succ:  l000F51AB
l000F51AB:
	v195 = loc66
	v197 = v195 == 0<32>
	branch !v197 l000F5365
	// succ:  l000F51B2 l000F5365
l000F51B2:
	v195 = arg5
	v220 = loc197
	Mem0[v195:real32] = v220
	v195 = loc57
	v195 = Mem0[v195:word32]
	loc68 = v195
	v195 = loc180
	v196 = loc46
	v198 = loc68
	v199 = arg4
	fn000EC01D(v195, v196, v198, v199)
	v195 = loc18
	v196 = 0<32>
	v197 = v195 == v196
	loc69 = v197
	v195 = loc69
	branch !v195 l000F51DD
	// succ:  l000F51D8 l000F51DD
l000F51D8:
	v195 = 1<32>
	loc104 = v195
	goto l000F5269
	// succ:  l000F5269
l000F51DD:
	v195 = loc18
	v196 = 0xC<32>
	v195 = v195 + v196
	loc70 = v195
	v195 = loc70
	v195 = Mem0[v195:word32]
	loc71 = v195
	v195 = loc18
	v196 = 0x10<32>
	v195 = v195 + v196
	loc72 = v195
	v195 = loc72
	v195 = Mem0[v195:word32]
	loc73 = v195
	v195 = loc71
	v196 = loc73
	v197 = v195 == v196
	loc74 = v197
	v195 = loc74
	branch !v195 l000F5241
	// succ:  l000F5204 l000F5241
l000F5204:
	v195 = loc18
	v195 = Mem0[v195:word32]
	loc75 = v195
	v195 = loc75
	v196 = 0x24<32>
	v195 = v195 + v196
	loc76 = v195
	v195 = loc76
	v195 = Mem0[v195:word32]
	loc77 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc77
	v196 = loc18
	v195 = invoke_ii(v195, v196)
	loc79 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc80 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc80
	v196 = 1<32>
	v195 = v195 & v196
	loc81 = v195
	v195 = loc81
	branch !v195 l000F523B
	// succ:  l000F5238 l000F523B
l000F5238:
	goto l000F5365
	// succ:  l000F5365
l000F523B:
	v195 = loc79
	loc7 = v195
	// succ:  l000F523F
l000F523F:
	goto l000F524C
	// succ:  l000F524C
l000F5241:
	v195 = loc71
	v195 = Mem0[v195:word32]
	loc82 = v195
	v195 = loc82
	loc7 = v195
	// succ:  l000F524C
l000F524C:
	v195 = loc7
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc83 = v197
	v195 = loc83
	branch !v195 l000F5264
	// succ:  l000F5258 l000F5264
l000F5258:
	v195 = arg1
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 1<32>
	loc104 = v195
	goto l000F5268
	// succ:  l000F5268
l000F5264:
	v195 = 0<32>
	loc104 = v195
	// succ:  l000F5268
l000F5268:
	// succ:  l000F5269
l000F5269:
	v195 = loc20
	v196 = 0<32>
	v197 = v195 == v196
	loc84 = v197
	// succ:  l000F5271
l000F5271:
	v195 = loc84
	branch !v195 l000F527D
	// succ:  l000F5277 l000F527D
l000F5277:
	v195 = 0x37<32>
	loc195 = v195
	goto l000F5317
	// succ:  l000F5317
l000F527D:
	v195 = loc20
	v196 = 0xC<32>
	v195 = v195 + v196
	loc85 = v195
	v195 = loc85
	v195 = Mem0[v195:word32]
	loc86 = v195
	v195 = loc20
	v196 = 0x10<32>
	v195 = v195 + v196
	loc87 = v195
	v195 = loc87
	v195 = Mem0[v195:word32]
	loc88 = v195
	v195 = loc86
	v196 = loc88
	v197 = v195 == v196
	loc90 = v197
	v195 = loc90
	branch !v195 l000F52E1
	// succ:  l000F52A4 l000F52E1
l000F52A4:
	v195 = loc20
	v195 = Mem0[v195:word32]
	loc91 = v195
	v195 = loc91
	v196 = 0x24<32>
	v195 = v195 + v196
	loc92 = v195
	v195 = loc92
	v195 = Mem0[v195:word32]
	loc93 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc93
	v196 = loc20
	v195 = invoke_ii(v195, v196)
	loc94 = v195
	v195 = Mem0[0x00140048<p32>:word32]
	loc95 = v195
	v195 = 0<32>
	Mem0[0x00140048<p32>:word32] = v195
	v195 = loc95
	v196 = 1<32>
	v195 = v195 & v196
	loc96 = v195
	v195 = loc96
	branch !v195 l000F52DB
	// succ:  l000F52D8 l000F52DB
l000F52D8:
	goto l000F5365
	// succ:  l000F5365
l000F52DB:
	v195 = loc94
	loc9 = v195
	// succ:  l000F52DF
l000F52DF:
	goto l000F52EC
	// succ:  l000F52EC
l000F52E1:
	v195 = loc86
	v195 = Mem0[v195:word32]
	loc97 = v195
	v195 = loc97
	loc9 = v195
	// succ:  l000F52EC
l000F52EC:
	v195 = loc9
	v196 = 0xFFFFFFFF<32>
	v197 = v195 == v196
	loc98 = v197
	v195 = loc98
	branch !v195 l000F5307
	// succ:  l000F52F8 l000F5307
l000F52F8:
	v195 = arg2
	v196 = 0<32>
	Mem0[v195:word32] = v196
	v195 = 0x37<32>
	loc195 = v195
	goto l000F5318
	// succ:  l000F5318
l000F5307:
	v195 = loc104
	branch !v195 l000F530E
	// succ:  l000F530B l000F530E
l000F530B:
	goto l000F5318
	// succ:  l000F5318
l000F530E:
	v195 = 0x39<32>
	loc195 = v195
	goto l000F5318
	// succ:  l000F5318
l000F5315:
	// succ:  l000F5316
l000F5316:
	// succ:  l000F5317
l000F5317:
	// succ:  l000F5318
l000F5318:
	v195 = loc195
	v196 = 0x37<32>
	v197 = v195 == v196
	branch !v197 l000F532C
	// succ:  l000F5321 l000F532C
l000F5321:
	v195 = loc104
	branch !v195 l000F532B
	// succ:  l000F5325 l000F532B
l000F5325:
	v195 = 0x39<32>
	loc195 = v195
	// succ:  l000F532B
l000F532B:
	// succ:  l000F532C
l000F532C:
	v195 = loc195
	v196 = 0x39<32>
	v197 = v195 == v196
	branch !v197 l000F534A
	// succ:  l000F5334 l000F534A
l000F5334:
	v195 = arg4
	v195 = Mem0[v195:word32]
	loc99 = v195
	v195 = loc99
	v196 = 2<32>
	v195 = v195 | v196
	loc101 = v195
	v195 = arg4
	v196 = loc101
	Mem0[v195:word32] = v196
	// succ:  l000F534A
l000F534A:
	v195 = arg1
	v195 = Mem0[v195:word32]
	loc23 = v195
	v195 = loc24
	fn0011BAF7(v195)
	v195 = loc180
	fn0011BAF7(v195)
	v195 = loc196
	Mem0[0x00140030<p32>:word32] = v195
	v195 = loc23
	return v195
	// succ:  fn000F4A65_exit
l000F5365:
	// succ:  l000F5365
l000F5365:
	v195 = ___cxa_find_matching_catch_2()
	loc181 = v195
	v195 = Mem0[0x00140094<p32>:word32]
	loc182 = v195
	v195 = loc181
	loc21 = v195
	v195 = loc182
	loc22 = v195
	// succ:  l000F537B
l000F537B:
	// succ:  l000F537B
l000F537B:
	// succ:  l000F537C
l000F537C:
	v195 = loc21
	loc13 = v195
	v195 = loc22
	loc15 = v195
	// succ:  l000F5385
l000F5385:
	v195 = loc24
	fn0011BAF7(v195)
	v195 = loc180
	fn0011BAF7(v195)
	v195 = loc13
	___resumeException(v195)
	v195 = 0<32>
	return v195
	// succ:  fn000F4A65_exit
l000F5398:
	return v195
	// succ:  fn000F4A65_exit
fn000F4A65_exit:


// fn000F539A
// Return size: 0
word32 fn000F539A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F539A_entry:
	// succ:  l000F539A
l000F539A:
	v189 = Mem0[0x00140030<p32>:word32]
	loc190 = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = 0x130<32>
	v189 = v189 + v190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = Mem0[0x00140034<p32>:word32]
	v191 = v189 >= v190
	branch !v191 l000F53B6
	// succ:  l000F53B0 l000F53B6
l000F53B0:
	v189 = 0x130<32>
	abortStackOverflow(v189)
	// succ:  l000F53B6
l000F53B6:
	v189 = loc190
	v190 = 0xC8<32>
	v189 = v189 + v190
	loc142 = v189
	v189 = loc190
	v190 = 0xC4<32>
	v189 = v189 + v190
	loc153 = v189
	v189 = loc190
	v190 = 0xB8<32>
	v189 = v189 + v190
	loc164 = v189
	v189 = loc190
	v190 = 0xAC<32>
	v189 = v189 + v190
	loc175 = v189
	v189 = loc190
	v190 = 0xA8<32>
	v189 = v189 + v190
	loc24 = v189
	v189 = loc190
	v190 = 8<32>
	v189 = v189 + v190
	loc35 = v189
	v189 = loc190
	v190 = 4<32>
	v189 = v189 + v190
	loc46 = v189
	v189 = loc190
	loc57 = v189
	v189 = arg3
	v189 = fn000EDE83(v189)
	loc67 = v189
	v189 = loc164
	v190 = arg3
	v192 = loc142
	v193 = loc153
	fn000F5C88(v189, v190, v192, v193)
	v189 = loc175
	v194 = 0<64>
	Mem0[v189:word64] = v194
	v189 = loc175
	v190 = 8<32>
	v189 = v189 + v190
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc6 = v189
	// succ:  l000F542A
l000F542A:
	v189 = loc6
	v190 = 3<32>
	v191 = v189 == v190
	loc186 = v191
	v189 = loc186
	branch !v189 l000F543C
	// succ:  l000F5439 l000F543C
l000F5439:
	goto l000F545B
	// succ:  l000F545B
l000F543C:
	v189 = loc175
	v190 = loc6
	v192 = 2<32>
	v190 = v190 << v192
	v189 = v189 + v190
	loc78 = v189
	v189 = loc78
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc6
	v190 = 1<32>
	v189 = v189 + v190
	loc89 = v189
	v189 = loc89
	loc6 = v189
	goto l000F53B6
	// succ:  l000F53B6
l000F545B:
	v189 = loc175
	v190 = 0xB<32>
	v189 = v189 + v190
	loc99 = v189
	v189 = loc99
	v195 = Mem0[v189:int8]
	v189 = CONVERT(v195, int8, word32)
	loc100 = v189
	v189 = loc100
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc101 = v191
	v189 = loc101
	branch !v189 l000F54A5
	// succ:  l000F547D l000F54A5
l000F547D:
	v189 = loc175
	v190 = 8<32>
	v189 = v189 + v190
	loc102 = v189
	v189 = loc102
	v189 = Mem0[v189:word32]
	loc103 = v189
	v189 = loc103
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc104 = v189
	v189 = loc104
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc187 = v189
	v189 = loc187
	loc105 = v189
	goto l000F54A9
	// succ:  l000F54A9
l000F54A5:
	v189 = 0xA<32>
	loc105 = v189
	// succ:  l000F54A9
l000F54A9:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc175
	v192 = loc105
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc106 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc106
	v190 = 1<32>
	v189 = v189 & v190
	loc107 = v189
	v189 = loc107
	branch !v189 l000F54E2
	// succ:  l000F54CD l000F54E2
l000F54CD:
	v189 = ___cxa_find_matching_catch_2()
	loc169 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc170 = v189
	v189 = loc169
	loc13 = v189
	v189 = loc170
	loc15 = v189
	goto l000F5C72
	// succ:  l000F5C72
l000F54E2:
	v189 = loc99
	v196 = Mem0[v189:int8]
	v189 = CONVERT(v196, int8, word32)
	loc108 = v189
	v189 = loc108
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc109 = v191
	v189 = loc175
	v189 = Mem0[v189:word32]
	loc110 = v189
	v189 = loc109
	branch !v189 l000F5505
	// succ:  l000F5502 l000F5505
l000F5502:
	v189 = loc110
	goto l000F5508
	// succ:  l000F5508
l000F5505:
	v189 = loc175
	// succ:  l000F5508
l000F5508:
	loc111 = v189
	v189 = loc24
	v190 = loc111
	Mem0[v189:word32] = v190
	v189 = loc46
	v190 = loc35
	Mem0[v189:word32] = v190
	v189 = loc57
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc175
	v190 = 4<32>
	v189 = v189 + v190
	loc112 = v189
	v189 = loc175
	v190 = 8<32>
	v189 = v189 + v190
	loc113 = v189
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc17 = v189
	v189 = loc111
	loc12 = v189
	v189 = loc17
	loc19 = v189
	// succ:  l000F5541
l000F5541:
	v189 = loc19
	v190 = 0<32>
	v191 = v189 == v190
	loc114 = v191
	v189 = loc114
	branch !v189 l000F5557
	// succ:  l000F554E l000F5557
l000F554E:
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc96 = v189
	goto l000F55F0
	// succ:  l000F55F0
l000F5557:
	v189 = loc19
	v190 = 0xC<32>
	v189 = v189 + v190
	loc115 = v189
	v189 = loc115
	v189 = Mem0[v189:word32]
	loc116 = v189
	v189 = loc19
	v190 = 0x10<32>
	v189 = v189 + v190
	loc117 = v189
	v189 = loc117
	v189 = Mem0[v189:word32]
	loc118 = v189
	v189 = loc116
	v190 = loc118
	v191 = v189 == v190
	loc119 = v191
	v189 = loc119
	branch !v189 l000F55C0
	// succ:  l000F557E l000F55C0
l000F557E:
	v189 = loc19
	v189 = Mem0[v189:word32]
	loc120 = v189
	v189 = loc120
	v190 = 0x24<32>
	v189 = v189 + v190
	loc121 = v189
	v189 = loc121
	v189 = Mem0[v189:word32]
	loc122 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc122
	v190 = loc19
	v189 = invoke_ii(v189, v190)
	loc123 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc124 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc124
	v190 = 1<32>
	v189 = v189 & v190
	loc125 = v189
	v189 = loc125
	branch !v189 l000F55BA
	// succ:  l000F55B2 l000F55BA
l000F55B2:
	v189 = 0x1D<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F55BA:
	v189 = loc123
	loc8 = v189
	// succ:  l000F55BE
l000F55BE:
	goto l000F55CB
	// succ:  l000F55CB
l000F55C0:
	v189 = loc116
	v189 = Mem0[v189:word32]
	loc126 = v189
	v189 = loc126
	loc8 = v189
	// succ:  l000F55CB
l000F55CB:
	v189 = loc8
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc127 = v191
	v189 = loc127
	branch !v189 l000F55E7
	// succ:  l000F55D7 l000F55E7
l000F55D7:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc96 = v189
	goto l000F55EF
	// succ:  l000F55EF
l000F55E7:
	v189 = loc19
	loc18 = v189
	v189 = 0<32>
	loc96 = v189
	// succ:  l000F55EF
l000F55EF:
	// succ:  l000F55F0
l000F55F0:
	v189 = arg2
	v189 = Mem0[v189:word32]
	loc128 = v189
	v189 = loc128
	v190 = 0<32>
	v191 = v189 == v190
	loc129 = v191
	// succ:  l000F5602
l000F5602:
	v189 = loc129
	branch !v189 l000F560F
	// succ:  l000F5609 l000F560F
l000F5609:
	v189 = 0x14<32>
	loc189 = v189
	goto l000F56DB
	// succ:  l000F56DB
l000F560F:
	v189 = loc128
	v190 = 0xC<32>
	v189 = v189 + v190
	loc130 = v189
	v189 = loc130
	v189 = Mem0[v189:word32]
	loc131 = v189
	v189 = loc128
	v190 = 0x10<32>
	v189 = v189 + v190
	loc132 = v189
	v189 = loc132
	v189 = Mem0[v189:word32]
	loc133 = v189
	v189 = loc131
	v190 = loc133
	v191 = v189 == v190
	loc134 = v191
	v189 = loc134
	branch !v189 l000F5692
	// succ:  l000F5642 l000F5692
l000F5642:
	v189 = loc128
	v189 = Mem0[v189:word32]
	loc135 = v189
	v189 = loc135
	v190 = 0x24<32>
	v189 = v189 + v190
	loc136 = v189
	v189 = loc136
	v189 = Mem0[v189:word32]
	loc137 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc137
	v190 = loc128
	v189 = invoke_ii(v189, v190)
	loc138 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc139 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc139
	v190 = 1<32>
	v189 = v189 & v190
	loc140 = v189
	v189 = loc140
	branch !v189 l000F568B
	// succ:  l000F5683 l000F568B
l000F5683:
	v189 = 0x1D<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F568B:
	v189 = loc138
	loc10 = v189
	// succ:  l000F5690
l000F5690:
	goto l000F56A0
	// succ:  l000F56A0
l000F5692:
	v189 = loc131
	v189 = Mem0[v189:word32]
	loc141 = v189
	v189 = loc141
	loc10 = v189
	// succ:  l000F56A0
l000F56A0:
	v189 = loc10
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc143 = v191
	v189 = loc143
	branch !v189 l000F56BD
	// succ:  l000F56AE l000F56BD
l000F56AE:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x14<32>
	loc189 = v189
	goto l000F56DC
	// succ:  l000F56DC
l000F56BD:
	v189 = loc96
	branch !v189 l000F56C9
	// succ:  l000F56C1 l000F56C9
l000F56C1:
	v189 = loc128
	loc97 = v189
	goto l000F56DC
	// succ:  l000F56DC
l000F56C9:
	v189 = loc12
	loc16 = v189
	v189 = loc128
	loc20 = v189
	v189 = 0x27<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F56D9:
	// succ:  l000F56DA
l000F56DA:
	// succ:  l000F56DB
l000F56DB:
	// succ:  l000F56DC
l000F56DC:
	v189 = loc189
	v190 = 0x14<32>
	v191 = v189 == v190
	branch !v191 l000F5704
	// succ:  l000F56E5 l000F5704
l000F56E5:
	v189 = 0<32>
	loc189 = v189
	v189 = loc96
	branch !v189 l000F56FE
	// succ:  l000F56EE l000F56FE
l000F56EE:
	v189 = loc12
	loc16 = v189
	v189 = 0<32>
	loc20 = v189
	v189 = 0x27<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F56FE:
	v189 = 0<32>
	loc97 = v189
	// succ:  l000F5702
l000F5702:
	// succ:  l000F5704
l000F5704:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc144 = v189
	v189 = loc99
	v197 = Mem0[v189:int8]
	v189 = CONVERT(v197, int8, word32)
	loc145 = v189
	v189 = loc145
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc146 = v191
	v189 = loc112
	v189 = Mem0[v189:word32]
	loc147 = v189
	v189 = loc145
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc148 = v189
	v189 = loc146
	branch !v189 l000F573E
	// succ:  l000F573A l000F573E
l000F573A:
	v189 = loc147
	goto l000F5741
	// succ:  l000F5741
l000F573E:
	v189 = loc148
	// succ:  l000F5741
l000F5741:
	loc149 = v189
	v189 = loc12
	v190 = loc149
	v189 = v189 + v190
	loc150 = v189
	v189 = loc144
	v190 = loc150
	v191 = v189 == v190
	loc151 = v191
	v189 = loc151
	branch !v189 l000F5855
	// succ:  l000F575D l000F5855
l000F575D:
	v189 = loc149
	v190 = 1<32>
	v189 = v189 << v190
	loc152 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc175
	v192 = loc152
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc154 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc154
	v190 = 1<32>
	v189 = v189 & v190
	loc155 = v189
	v189 = loc155
	branch !v189 l000F5796
	// succ:  l000F578E l000F5796
l000F578E:
	v189 = 0x1F<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F5796:
	v189 = loc99
	v198 = Mem0[v189:int8]
	v189 = CONVERT(v198, int8, word32)
	loc156 = v189
	v189 = loc156
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc157 = v191
	v189 = loc157
	branch !v189 l000F57D7
	// succ:  l000F57B2 l000F57D7
l000F57B2:
	v189 = loc113
	v189 = Mem0[v189:word32]
	loc158 = v189
	v189 = loc158
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc159 = v189
	v189 = loc159
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc188 = v189
	v189 = loc188
	loc160 = v189
	goto l000F57DC
	// succ:  l000F57DC
l000F57D7:
	v189 = 0xA<32>
	loc160 = v189
	// succ:  l000F57DC
l000F57DC:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc175
	v192 = loc160
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc161 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc161
	v190 = 1<32>
	v189 = v189 & v190
	loc162 = v189
	v189 = loc162
	branch !v189 l000F580D
	// succ:  l000F5805 l000F580D
l000F5805:
	v189 = 0x1F<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F580D:
	v189 = loc99
	v199 = Mem0[v189:int8]
	v189 = CONVERT(v199, int8, word32)
	loc163 = v189
	v189 = loc163
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc165 = v191
	v189 = loc175
	v189 = Mem0[v189:word32]
	loc166 = v189
	v189 = loc165
	branch !v189 l000F5836
	// succ:  l000F5832 l000F5836
l000F5832:
	v189 = loc166
	goto l000F5839
	// succ:  l000F5839
l000F5836:
	v189 = loc175
	// succ:  l000F5839
l000F5839:
	loc167 = v189
	v189 = loc167
	v190 = loc149
	v189 = v189 + v190
	loc168 = v189
	v189 = loc24
	v190 = loc168
	Mem0[v189:word32] = v190
	v189 = loc167
	loc14 = v189
	goto l000F5859
	// succ:  l000F5859
l000F5855:
	v189 = loc12
	loc14 = v189
	// succ:  l000F5859
l000F5859:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc178 = v189
	v189 = loc178
	v189 = Mem0[v189:word32]
	loc179 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc180 = v189
	v189 = loc180
	v189 = Mem0[v189:word32]
	loc181 = v189
	v189 = loc179
	v190 = loc181
	v191 = v189 == v190
	loc182 = v191
	v189 = loc182
	branch !v189 l000F58D3
	// succ:  l000F588B l000F58D3
l000F588B:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc183 = v189
	v189 = loc183
	v190 = 0x24<32>
	v189 = v189 + v190
	loc184 = v189
	v189 = loc184
	v189 = Mem0[v189:word32]
	loc185 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc185
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc25 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc26 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc26
	v190 = 1<32>
	v189 = v189 & v190
	loc27 = v189
	v189 = loc27
	branch !v189 l000F58CD
	// succ:  l000F58C5 l000F58CD
l000F58C5:
	v189 = 0x1D<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F58CD:
	v189 = loc25
	loc11 = v189
	// succ:  l000F58D1
l000F58D1:
	goto l000F58DF
	// succ:  l000F58DF
l000F58D3:
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc28 = v189
	v189 = loc28
	loc11 = v189
	// succ:  l000F58DF
l000F58DF:
	v189 = loc153
	v189 = Mem0[v189:word32]
	loc29 = v189
	v189 = loc11
	v190 = loc67
	v192 = loc14
	v193 = loc24
	v200 = loc57
	v201 = loc29
	v202 = loc164
	v203 = loc35
	v204 = loc46
	v205 = loc142
	v189 = fn000F2F51(v189, v190, v192, v193, v200, v201, v202, v203, v204, v205)
	loc30 = v189
	v189 = loc30
	v190 = 0<32>
	v191 = v189 == v190
	loc31 = v191
	v189 = loc31
	v191 = v189 == 0<32>
	branch !v191 l000F591F
	// succ:  l000F590F l000F591F
l000F590F:
	v189 = loc14
	loc16 = v189
	v189 = loc97
	loc20 = v189
	v189 = 0x27<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F591F:
	v189 = loc178
	v189 = Mem0[v189:word32]
	loc32 = v189
	v189 = loc180
	v189 = Mem0[v189:word32]
	loc33 = v189
	v189 = loc32
	v190 = loc33
	v191 = v189 == v190
	loc34 = v191
	v189 = loc34
	branch !v189 l000F5981
	// succ:  l000F593A l000F5981
l000F593A:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc36 = v189
	v189 = loc36
	v190 = 0x28<32>
	v189 = v189 + v190
	loc37 = v189
	v189 = loc37
	v189 = Mem0[v189:word32]
	loc38 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc38
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	v189 = Mem0[0x00140048<p32>:word32]
	loc39 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc39
	v190 = 1<32>
	v189 = v189 & v190
	loc40 = v189
	v189 = loc40
	branch !v189 l000F5975
	// succ:  l000F596D l000F5975
l000F596D:
	v189 = 0x1D<32>
	loc189 = v189
	goto l000F599D
	// succ:  l000F599D
l000F5975:
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F5508
	// succ:  l000F5508
l000F597F:
	goto l000F599A
	// succ:  l000F599A
l000F5981:
	v189 = loc32
	v190 = 4<32>
	v189 = v189 + v190
	loc41 = v189
	v189 = loc178
	v190 = loc41
	Mem0[v189:word32] = v190
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F5508
	// succ:  l000F5508
l000F599A:
	goto l000F5508
	// succ:  l000F5508
l000F599D:
	v189 = loc189
	v190 = 0x1D<32>
	v191 = v189 == v190
	branch !v191 l000F59BC
	// succ:  l000F59A7 l000F59BC
l000F59A7:
	v189 = ___cxa_find_matching_catch_2()
	loc171 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc172 = v189
	v189 = loc171
	loc21 = v189
	v189 = loc172
	loc22 = v189
	goto l000F5C69
	// succ:  l000F5C69
l000F59BC:
	v189 = loc189
	v190 = 0x1F<32>
	v191 = v189 == v190
	branch !v191 l000F59D9
	// succ:  l000F59C4 l000F59D9
l000F59C4:
	v189 = ___cxa_find_matching_catch_2()
	loc176 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc177 = v189
	v189 = loc176
	loc21 = v189
	v189 = loc177
	loc22 = v189
	goto l000F5C68
	// succ:  l000F5C68
l000F59D9:
	v189 = loc189
	v190 = 0x27<32>
	v191 = v189 == v190
	branch !v191 l000F5C68
	// succ:  l000F59E1 l000F5C68
l000F59E1:
	v189 = loc164
	v190 = 0xB<32>
	v189 = v189 + v190
	loc42 = v189
	v189 = loc42
	v206 = Mem0[v189:int8]
	v189 = CONVERT(v206, int8, word32)
	loc43 = v189
	v189 = loc43
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc44 = v191
	v189 = loc164
	v190 = 4<32>
	v189 = v189 + v190
	loc45 = v189
	v189 = loc45
	v189 = Mem0[v189:word32]
	loc47 = v189
	v189 = loc43
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc48 = v189
	v189 = loc44
	branch !v189 l000F5A1B
	// succ:  l000F5A18 l000F5A1B
l000F5A18:
	v189 = loc47
	goto l000F5A1D
	// succ:  l000F5A1D
l000F5A1B:
	v189 = loc48
	// succ:  l000F5A1D
l000F5A1D:
	loc49 = v189
	v189 = loc49
	v190 = 0<32>
	v191 = v189 == v190
	loc50 = v191
	v189 = loc50
	v191 = v189 == 0<32>
	branch !v191 l000F5A6C
	// succ:  l000F5A2C l000F5A6C
l000F5A2C:
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc51 = v189
	v189 = loc51
	loc52 = v189
	v189 = loc35
	loc53 = v189
	v189 = loc52
	v190 = loc53
	v189 = v189 - v190
	loc54 = v189
	v189 = loc54
	v190 = 0xA0<32>
	v191 = v189 < v190
	loc55 = v191
	v189 = loc55
	branch !v189 l000F5A6B
	// succ:  l000F5A4E l000F5A6B
l000F5A4E:
	v189 = loc57
	v189 = Mem0[v189:word32]
	loc56 = v189
	v189 = loc51
	v190 = 4<32>
	v189 = v189 + v190
	loc58 = v189
	v189 = loc46
	v190 = loc58
	Mem0[v189:word32] = v190
	v189 = loc51
	v190 = loc56
	Mem0[v189:word32] = v190
	// succ:  l000F5A6B
l000F5A6B:
	// succ:  l000F5A6C
l000F5A6C:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc59 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x184<32>
	v190 = loc16
	v192 = loc59
	v193 = arg4
	v200 = loc67
	v207 = fn0011F5F3(v189, v190, v192, v193, v200)
	loc191 = v207
	v189 = Mem0[0x00140048<p32>:word32]
	loc60 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc60
	v190 = 1<32>
	v189 = v189 & v190
	loc61 = v189
	// succ:  l000F5A97
l000F5A97:
	v189 = loc61
	v191 = v189 == 0<32>
	branch !v191 l000F5C52
	// succ:  l000F5A9E l000F5C52
l000F5A9E:
	v189 = arg5
	v194 = loc191
	Mem0[v189:word64] = v194
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc62 = v189
	v189 = loc164
	v190 = loc35
	v192 = loc62
	v193 = arg4
	fn000EC01D(v189, v190, v192, v193)
	v189 = loc18
	v190 = 0<32>
	v191 = v189 == v190
	loc63 = v191
	v189 = loc63
	branch !v189 l000F5AC9
	// succ:  l000F5AC4 l000F5AC9
l000F5AC4:
	v189 = 1<32>
	loc98 = v189
	goto l000F5B55
	// succ:  l000F5B55
l000F5AC9:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc64 = v189
	v189 = loc64
	v189 = Mem0[v189:word32]
	loc65 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc66 = v189
	v189 = loc66
	v189 = Mem0[v189:word32]
	loc68 = v189
	v189 = loc65
	v190 = loc68
	v191 = v189 == v190
	loc69 = v191
	v189 = loc69
	branch !v189 l000F5B2D
	// succ:  l000F5AF0 l000F5B2D
l000F5AF0:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc70 = v189
	v189 = loc70
	v190 = 0x24<32>
	v189 = v189 + v190
	loc71 = v189
	v189 = loc71
	v189 = Mem0[v189:word32]
	loc72 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc72
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc73 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc74 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc74
	v190 = 1<32>
	v189 = v189 & v190
	loc75 = v189
	v189 = loc75
	branch !v189 l000F5B27
	// succ:  l000F5B24 l000F5B27
l000F5B24:
	goto l000F5C52
	// succ:  l000F5C52
l000F5B27:
	v189 = loc73
	loc7 = v189
	// succ:  l000F5B2B
l000F5B2B:
	goto l000F5B38
	// succ:  l000F5B38
l000F5B2D:
	v189 = loc65
	v189 = Mem0[v189:word32]
	loc76 = v189
	v189 = loc76
	loc7 = v189
	// succ:  l000F5B38
l000F5B38:
	v189 = loc7
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc77 = v191
	v189 = loc77
	branch !v189 l000F5B50
	// succ:  l000F5B44 l000F5B50
l000F5B44:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 1<32>
	loc98 = v189
	goto l000F5B54
	// succ:  l000F5B54
l000F5B50:
	v189 = 0<32>
	loc98 = v189
	// succ:  l000F5B54
l000F5B54:
	// succ:  l000F5B55
l000F5B55:
	v189 = loc20
	v190 = 0<32>
	v191 = v189 == v190
	loc79 = v191
	// succ:  l000F5B5D
l000F5B5D:
	v189 = loc79
	branch !v189 l000F5B69
	// succ:  l000F5B63 l000F5B69
l000F5B63:
	v189 = 0x37<32>
	loc189 = v189
	goto l000F5C03
	// succ:  l000F5C03
l000F5B69:
	v189 = loc20
	v190 = 0xC<32>
	v189 = v189 + v190
	loc80 = v189
	v189 = loc80
	v189 = Mem0[v189:word32]
	loc81 = v189
	v189 = loc20
	v190 = 0x10<32>
	v189 = v189 + v190
	loc82 = v189
	v189 = loc82
	v189 = Mem0[v189:word32]
	loc83 = v189
	v189 = loc81
	v190 = loc83
	v191 = v189 == v190
	loc84 = v191
	v189 = loc84
	branch !v189 l000F5BCD
	// succ:  l000F5B90 l000F5BCD
l000F5B90:
	v189 = loc20
	v189 = Mem0[v189:word32]
	loc85 = v189
	v189 = loc85
	v190 = 0x24<32>
	v189 = v189 + v190
	loc86 = v189
	v189 = loc86
	v189 = Mem0[v189:word32]
	loc87 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc87
	v190 = loc20
	v189 = invoke_ii(v189, v190)
	loc88 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc90 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc90
	v190 = 1<32>
	v189 = v189 & v190
	loc91 = v189
	v189 = loc91
	branch !v189 l000F5BC7
	// succ:  l000F5BC4 l000F5BC7
l000F5BC4:
	goto l000F5C52
	// succ:  l000F5C52
l000F5BC7:
	v189 = loc88
	loc9 = v189
	// succ:  l000F5BCB
l000F5BCB:
	goto l000F5BD8
	// succ:  l000F5BD8
l000F5BCD:
	v189 = loc81
	v189 = Mem0[v189:word32]
	loc92 = v189
	v189 = loc92
	loc9 = v189
	// succ:  l000F5BD8
l000F5BD8:
	v189 = loc9
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc93 = v191
	v189 = loc93
	branch !v189 l000F5BF3
	// succ:  l000F5BE4 l000F5BF3
l000F5BE4:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x37<32>
	loc189 = v189
	goto l000F5C04
	// succ:  l000F5C04
l000F5BF3:
	v189 = loc98
	branch !v189 l000F5BFA
	// succ:  l000F5BF7 l000F5BFA
l000F5BF7:
	goto l000F5C04
	// succ:  l000F5C04
l000F5BFA:
	v189 = 0x39<32>
	loc189 = v189
	goto l000F5C04
	// succ:  l000F5C04
l000F5C01:
	// succ:  l000F5C02
l000F5C02:
	// succ:  l000F5C03
l000F5C03:
	// succ:  l000F5C04
l000F5C04:
	v189 = loc189
	v190 = 0x37<32>
	v191 = v189 == v190
	branch !v191 l000F5C18
	// succ:  l000F5C0D l000F5C18
l000F5C0D:
	v189 = loc98
	branch !v189 l000F5C17
	// succ:  l000F5C11 l000F5C17
l000F5C11:
	v189 = 0x39<32>
	loc189 = v189
	// succ:  l000F5C17
l000F5C17:
	// succ:  l000F5C18
l000F5C18:
	v189 = loc189
	v190 = 0x39<32>
	v191 = v189 == v190
	branch !v191 l000F5C36
	// succ:  l000F5C20 l000F5C36
l000F5C20:
	v189 = arg4
	v189 = Mem0[v189:word32]
	loc94 = v189
	v189 = loc94
	v190 = 2<32>
	v189 = v189 | v190
	loc95 = v189
	v189 = arg4
	v190 = loc95
	Mem0[v189:word32] = v190
	// succ:  l000F5C36
l000F5C36:
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc23 = v189
	v189 = loc175
	fn0011BAF7(v189)
	v189 = loc164
	fn0011BAF7(v189)
	v189 = loc190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = loc23
	return v189
	// succ:  fn000F539A_exit
l000F5C52:
	// succ:  l000F5C52
l000F5C52:
	v189 = ___cxa_find_matching_catch_2()
	loc173 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc174 = v189
	v189 = loc173
	loc21 = v189
	v189 = loc174
	loc22 = v189
	// succ:  l000F5C68
l000F5C68:
	// succ:  l000F5C68
l000F5C68:
	// succ:  l000F5C69
l000F5C69:
	v189 = loc21
	loc13 = v189
	v189 = loc22
	loc15 = v189
	// succ:  l000F5C72
l000F5C72:
	v189 = loc175
	fn0011BAF7(v189)
	v189 = loc164
	fn0011BAF7(v189)
	v189 = loc13
	___resumeException(v189)
	v189 = 0<32>
	return v189
	// succ:  fn000F539A_exit
l000F5C86:
	return v189
	// succ:  fn000F539A_exit
fn000F539A_exit:


// fn000F5C88
// Return size: 0
void fn000F5C88(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000F5C88_entry:
	// succ:  l000F5C88
l000F5C88:
	v35 = Mem0[0x00140030<p32>:word32]
	loc35 = v35
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = 0x10<32>
	v35 = v35 + v36
	Mem0[0x00140030<p32>:word32] = v35
	v35 = Mem0[0x00140030<p32>:word32]
	v36 = Mem0[0x00140034<p32>:word32]
	v37 = v35 >= v36
	branch !v37 l000F5CA1
	// succ:  l000F5C9C l000F5CA1
l000F5C9C:
	v35 = 0x10<32>
	abortStackOverflow(v35)
	// succ:  l000F5CA1
l000F5CA1:
	v35 = loc35
	loc28 = v35
	v35 = arg1
	v35 = fn000E64CA(v35)
	loc29 = v35
	v35 = loc28
	v36 = loc29
	Mem0[v35:word32] = v36
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = 0x164<32>
	v36 = loc28
	v38 = 0x4C90<32>
	v35 = invoke_iii(v35, v36, v38)
	loc30 = v35
	v35 = Mem0[0x00140048<p32>:word32]
	loc31 = v35
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = loc31
	v36 = 1<32>
	v35 = v35 & v36
	loc32 = v35
	v35 = loc32
	branch !v35 l000F5CDC
	// succ:  l000F5CD7 l000F5CDC
l000F5CD7:
	v35 = 7<32>
	loc34 = v35
	goto l000F5DD7
	// succ:  l000F5DD7
l000F5CDC:
	v35 = loc30
	v35 = Mem0[v35:word32]
	loc33 = v35
	v35 = loc33
	v36 = 0x30<32>
	v35 = v35 + v36
	loc6 = v35
	v35 = loc6
	v35 = Mem0[v35:word32]
	loc7 = v35
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = loc7
	v36 = loc30
	v38 = 0x37AB<32>
	v39 = 0x37C5<32>
	v40 = arg2
	v35 = invoke_iiiii(v35, v36, v38, v39, v40)
	v35 = Mem0[0x00140048<p32>:word32]
	loc8 = v35
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = loc8
	v36 = 1<32>
	v35 = v35 & v36
	loc9 = v35
	v35 = loc9
	branch !v35 l000F5D1E
	// succ:  l000F5D19 l000F5D1E
l000F5D19:
	v35 = 7<32>
	loc34 = v35
	goto l000F5DD6
	// succ:  l000F5DD6
l000F5D1E:
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = 0x164<32>
	v36 = loc28
	v38 = 0x4C98<32>
	v35 = invoke_iii(v35, v36, v38)
	loc10 = v35
	v35 = Mem0[0x00140048<p32>:word32]
	loc11 = v35
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = loc11
	v36 = 1<32>
	v35 = v35 & v36
	loc12 = v35
	v35 = loc12
	branch !v35 l000F5D47
	// succ:  l000F5D42 l000F5D47
l000F5D42:
	v35 = 7<32>
	loc34 = v35
	goto l000F5DD5
	// succ:  l000F5DD5
l000F5D47:
	v35 = loc10
	v35 = Mem0[v35:word32]
	loc13 = v35
	v35 = loc13
	v36 = 0x10<32>
	v35 = v35 + v36
	loc14 = v35
	v35 = loc14
	v35 = Mem0[v35:word32]
	loc15 = v35
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = loc15
	v36 = loc10
	v35 = invoke_ii(v35, v36)
	loc16 = v35
	v35 = Mem0[0x00140048<p32>:word32]
	loc17 = v35
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = loc17
	v36 = 1<32>
	v35 = v35 & v36
	loc18 = v35
	v35 = loc18
	v37 = v35 == 0<32>
	branch !v37 l000F5DC5
	// succ:  l000F5D7C l000F5DC5
l000F5D7C:
	v35 = arg3
	v36 = loc16
	Mem0[v35:word32] = v36
	v35 = loc10
	v35 = Mem0[v35:word32]
	loc19 = v35
	v35 = loc19
	v36 = 0x14<32>
	v35 = v35 + v36
	loc20 = v35
	v35 = loc20
	v35 = Mem0[v35:word32]
	loc21 = v35
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = loc21
	v36 = arg0
	v38 = loc10
	invoke_vii(v35, v36, v38)
	v35 = Mem0[0x00140048<p32>:word32]
	loc22 = v35
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v35 = loc22
	v36 = 1<32>
	v35 = v35 & v36
	loc23 = v35
	v35 = loc23
	v37 = v35 == 0<32>
	branch !v37 l000F5DC4
	// succ:  l000F5DB8 l000F5DC4
l000F5DB8:
	v35 = loc29
	v35 = fn0011B43F(v35)
	v35 = loc35
	Mem0[0x00140030<p32>:word32] = v35
	return
	// succ:  fn000F5C88_exit
l000F5DC4:
	// succ:  l000F5DC5
l000F5DC5:
	v35 = ___cxa_find_matching_catch_2()
	loc26 = v35
	v35 = Mem0[0x00140094<p32>:word32]
	loc27 = v35
	v35 = loc26
	loc4 = v35
	v35 = loc27
	loc5 = v35
	// succ:  l000F5DD5
l000F5DD5:
	// succ:  l000F5DD6
l000F5DD6:
	// succ:  l000F5DD7
l000F5DD7:
	v35 = loc34
	v36 = 7<32>
	v37 = v35 == v36
	branch !v37 l000F5DF0
	// succ:  l000F5DDF l000F5DF0
l000F5DDF:
	v35 = ___cxa_find_matching_catch_2()
	loc24 = v35
	v35 = Mem0[0x00140094<p32>:word32]
	loc25 = v35
	v35 = loc24
	loc4 = v35
	v35 = loc25
	loc5 = v35
	// succ:  l000F5DF0
l000F5DF0:
	v35 = loc29
	v35 = fn0011B43F(v35)
	v35 = loc4
	___resumeException(v35)
	// succ:  l000F5DFA
l000F5DFA:
	return
	// succ:  fn000F5C88_exit
fn000F5C88_exit:


// fn000F5DFC
// Return size: 0
word32 fn000F5DFC(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F5DFC_entry:
	// succ:  l000F5DFC
l000F5DFC:
	v189 = Mem0[0x00140030<p32>:word32]
	loc191 = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = 0x130<32>
	v189 = v189 + v190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = Mem0[0x00140034<p32>:word32]
	v191 = v189 >= v190
	branch !v191 l000F5E18
	// succ:  l000F5E12 l000F5E18
l000F5E12:
	v189 = 0x130<32>
	abortStackOverflow(v189)
	// succ:  l000F5E18
l000F5E18:
	v189 = loc191
	v190 = 0xC8<32>
	v189 = v189 + v190
	loc143 = v189
	v189 = loc191
	v190 = 0xC4<32>
	v189 = v189 + v190
	loc154 = v189
	v189 = loc191
	v190 = 0xB8<32>
	v189 = v189 + v190
	loc165 = v189
	v189 = loc191
	v190 = 0xAC<32>
	v189 = v189 + v190
	loc176 = v189
	v189 = loc191
	v190 = 0xA8<32>
	v189 = v189 + v190
	loc24 = v189
	v189 = loc191
	v190 = 8<32>
	v189 = v189 + v190
	loc35 = v189
	v189 = loc191
	v190 = 4<32>
	v189 = v189 + v190
	loc46 = v189
	v189 = loc191
	loc57 = v189
	v189 = arg3
	v189 = fn000EDE83(v189)
	loc68 = v189
	v189 = loc165
	v190 = arg3
	v192 = loc143
	v193 = loc154
	fn000F5C88(v189, v190, v192, v193)
	v189 = loc176
	v194 = 0<64>
	Mem0[v189:word64] = v194
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc6 = v189
	// succ:  l000F5E8C
l000F5E8C:
	v189 = loc6
	v190 = 3<32>
	v191 = v189 == v190
	loc187 = v191
	v189 = loc187
	branch !v189 l000F5E9E
	// succ:  l000F5E9B l000F5E9E
l000F5E9B:
	goto l000F5EBD
	// succ:  l000F5EBD
l000F5E9E:
	v189 = loc176
	v190 = loc6
	v192 = 2<32>
	v190 = v190 << v192
	v189 = v189 + v190
	loc79 = v189
	v189 = loc79
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc6
	v190 = 1<32>
	v189 = v189 + v190
	loc90 = v189
	v189 = loc90
	loc6 = v189
	goto l000F5E18
	// succ:  l000F5E18
l000F5EBD:
	v189 = loc176
	v190 = 0xB<32>
	v189 = v189 + v190
	loc100 = v189
	v189 = loc100
	v195 = Mem0[v189:int8]
	v189 = CONVERT(v195, int8, word32)
	loc101 = v189
	v189 = loc101
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc102 = v191
	v189 = loc102
	branch !v189 l000F5F07
	// succ:  l000F5EDF l000F5F07
l000F5EDF:
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	loc103 = v189
	v189 = loc103
	v189 = Mem0[v189:word32]
	loc104 = v189
	v189 = loc104
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc105 = v189
	v189 = loc105
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc188 = v189
	v189 = loc188
	loc106 = v189
	goto l000F5F0B
	// succ:  l000F5F0B
l000F5F07:
	v189 = 0xA<32>
	loc106 = v189
	// succ:  l000F5F0B
l000F5F0B:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc106
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc107 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc107
	v190 = 1<32>
	v189 = v189 & v190
	loc108 = v189
	v189 = loc108
	branch !v189 l000F5F44
	// succ:  l000F5F2F l000F5F44
l000F5F2F:
	v189 = ___cxa_find_matching_catch_2()
	loc170 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc171 = v189
	v189 = loc170
	loc13 = v189
	v189 = loc171
	loc15 = v189
	goto l000F66D3
	// succ:  l000F66D3
l000F5F44:
	v189 = loc100
	v196 = Mem0[v189:int8]
	v189 = CONVERT(v196, int8, word32)
	loc109 = v189
	v189 = loc109
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc110 = v191
	v189 = loc176
	v189 = Mem0[v189:word32]
	loc111 = v189
	v189 = loc110
	branch !v189 l000F5F67
	// succ:  l000F5F64 l000F5F67
l000F5F64:
	v189 = loc111
	goto l000F5F6A
	// succ:  l000F5F6A
l000F5F67:
	v189 = loc176
	// succ:  l000F5F6A
l000F5F6A:
	loc112 = v189
	v189 = loc24
	v190 = loc112
	Mem0[v189:word32] = v190
	v189 = loc46
	v190 = loc35
	Mem0[v189:word32] = v190
	v189 = loc57
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc176
	v190 = 4<32>
	v189 = v189 + v190
	loc113 = v189
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	loc114 = v189
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc17 = v189
	v189 = loc112
	loc12 = v189
	v189 = loc17
	loc19 = v189
	// succ:  l000F5FA3
l000F5FA3:
	v189 = loc19
	v190 = 0<32>
	v191 = v189 == v190
	loc115 = v191
	v189 = loc115
	branch !v189 l000F5FB9
	// succ:  l000F5FB0 l000F5FB9
l000F5FB0:
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc97 = v189
	goto l000F6054
	// succ:  l000F6054
l000F5FB9:
	v189 = loc19
	v190 = 0xC<32>
	v189 = v189 + v190
	loc116 = v189
	v189 = loc116
	v189 = Mem0[v189:word32]
	loc117 = v189
	v189 = loc19
	v190 = 0x10<32>
	v189 = v189 + v190
	loc118 = v189
	v189 = loc118
	v189 = Mem0[v189:word32]
	loc119 = v189
	v189 = loc117
	v190 = loc119
	v191 = v189 == v190
	loc120 = v191
	v189 = loc120
	branch !v189 l000F6022
	// succ:  l000F5FE0 l000F6022
l000F5FE0:
	v189 = loc19
	v189 = Mem0[v189:word32]
	loc121 = v189
	v189 = loc121
	v190 = 0x24<32>
	v189 = v189 + v190
	loc122 = v189
	v189 = loc122
	v189 = Mem0[v189:word32]
	loc123 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc123
	v190 = loc19
	v189 = invoke_ii(v189, v190)
	loc124 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc125 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc125
	v190 = 1<32>
	v189 = v189 & v190
	loc126 = v189
	v189 = loc126
	branch !v189 l000F601C
	// succ:  l000F6014 l000F601C
l000F6014:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F601C:
	v189 = loc124
	loc8 = v189
	// succ:  l000F6020
l000F6020:
	goto l000F602D
	// succ:  l000F602D
l000F6022:
	v189 = loc117
	v189 = Mem0[v189:word32]
	loc127 = v189
	v189 = loc127
	loc8 = v189
	// succ:  l000F602D
l000F602D:
	v189 = loc8
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc128 = v191
	v189 = loc128
	branch !v189 l000F604B
	// succ:  l000F603B l000F604B
l000F603B:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc97 = v189
	goto l000F6053
	// succ:  l000F6053
l000F604B:
	v189 = loc19
	loc18 = v189
	v189 = 0<32>
	loc97 = v189
	// succ:  l000F6053
l000F6053:
	// succ:  l000F6054
l000F6054:
	v189 = arg2
	v189 = Mem0[v189:word32]
	loc129 = v189
	v189 = loc129
	v190 = 0<32>
	v191 = v189 == v190
	loc130 = v191
	// succ:  l000F6066
l000F6066:
	v189 = loc130
	branch !v189 l000F6073
	// succ:  l000F606D l000F6073
l000F606D:
	v189 = 0x14<32>
	loc190 = v189
	goto l000F613F
	// succ:  l000F613F
l000F6073:
	v189 = loc129
	v190 = 0xC<32>
	v189 = v189 + v190
	loc131 = v189
	v189 = loc131
	v189 = Mem0[v189:word32]
	loc132 = v189
	v189 = loc129
	v190 = 0x10<32>
	v189 = v189 + v190
	loc133 = v189
	v189 = loc133
	v189 = Mem0[v189:word32]
	loc134 = v189
	v189 = loc132
	v190 = loc134
	v191 = v189 == v190
	loc135 = v191
	v189 = loc135
	branch !v189 l000F60F6
	// succ:  l000F60A6 l000F60F6
l000F60A6:
	v189 = loc129
	v189 = Mem0[v189:word32]
	loc136 = v189
	v189 = loc136
	v190 = 0x24<32>
	v189 = v189 + v190
	loc137 = v189
	v189 = loc137
	v189 = Mem0[v189:word32]
	loc138 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc138
	v190 = loc129
	v189 = invoke_ii(v189, v190)
	loc139 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc140 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc140
	v190 = 1<32>
	v189 = v189 & v190
	loc141 = v189
	v189 = loc141
	branch !v189 l000F60EF
	// succ:  l000F60E7 l000F60EF
l000F60E7:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F60EF:
	v189 = loc139
	loc10 = v189
	// succ:  l000F60F4
l000F60F4:
	goto l000F6104
	// succ:  l000F6104
l000F60F6:
	v189 = loc132
	v189 = Mem0[v189:word32]
	loc142 = v189
	v189 = loc142
	loc10 = v189
	// succ:  l000F6104
l000F6104:
	v189 = loc10
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc144 = v191
	v189 = loc144
	branch !v189 l000F6121
	// succ:  l000F6112 l000F6121
l000F6112:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x14<32>
	loc190 = v189
	goto l000F6140
	// succ:  l000F6140
l000F6121:
	v189 = loc97
	branch !v189 l000F612D
	// succ:  l000F6125 l000F612D
l000F6125:
	v189 = loc129
	loc98 = v189
	goto l000F6140
	// succ:  l000F6140
l000F612D:
	v189 = loc12
	loc16 = v189
	v189 = loc129
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F613D:
	// succ:  l000F613E
l000F613E:
	// succ:  l000F613F
l000F613F:
	// succ:  l000F6140
l000F6140:
	v189 = loc190
	v190 = 0x14<32>
	v191 = v189 == v190
	branch !v191 l000F6168
	// succ:  l000F6149 l000F6168
l000F6149:
	v189 = 0<32>
	loc190 = v189
	v189 = loc97
	branch !v189 l000F6162
	// succ:  l000F6152 l000F6162
l000F6152:
	v189 = loc12
	loc16 = v189
	v189 = 0<32>
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F6162:
	v189 = 0<32>
	loc98 = v189
	// succ:  l000F6166
l000F6166:
	// succ:  l000F6168
l000F6168:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc145 = v189
	v189 = loc100
	v197 = Mem0[v189:int8]
	v189 = CONVERT(v197, int8, word32)
	loc146 = v189
	v189 = loc146
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc147 = v191
	v189 = loc113
	v189 = Mem0[v189:word32]
	loc148 = v189
	v189 = loc146
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc149 = v189
	v189 = loc147
	branch !v189 l000F61A2
	// succ:  l000F619E l000F61A2
l000F619E:
	v189 = loc148
	goto l000F61A5
	// succ:  l000F61A5
l000F61A2:
	v189 = loc149
	// succ:  l000F61A5
l000F61A5:
	loc150 = v189
	v189 = loc12
	v190 = loc150
	v189 = v189 + v190
	loc151 = v189
	v189 = loc145
	v190 = loc151
	v191 = v189 == v190
	loc152 = v191
	v189 = loc152
	branch !v189 l000F62B9
	// succ:  l000F61C1 l000F62B9
l000F61C1:
	v189 = loc150
	v190 = 1<32>
	v189 = v189 << v190
	loc153 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc153
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc155 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc155
	v190 = 1<32>
	v189 = v189 & v190
	loc156 = v189
	v189 = loc156
	branch !v189 l000F61FA
	// succ:  l000F61F2 l000F61FA
l000F61F2:
	v189 = 0x1F<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F61FA:
	v189 = loc100
	v198 = Mem0[v189:int8]
	v189 = CONVERT(v198, int8, word32)
	loc157 = v189
	v189 = loc157
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc158 = v191
	v189 = loc158
	branch !v189 l000F623B
	// succ:  l000F6216 l000F623B
l000F6216:
	v189 = loc114
	v189 = Mem0[v189:word32]
	loc159 = v189
	v189 = loc159
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc160 = v189
	v189 = loc160
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc189 = v189
	v189 = loc189
	loc161 = v189
	goto l000F6240
	// succ:  l000F6240
l000F623B:
	v189 = 0xA<32>
	loc161 = v189
	// succ:  l000F6240
l000F6240:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc161
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc162 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc162
	v190 = 1<32>
	v189 = v189 & v190
	loc163 = v189
	v189 = loc163
	branch !v189 l000F6271
	// succ:  l000F6269 l000F6271
l000F6269:
	v189 = 0x1F<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F6271:
	v189 = loc100
	v199 = Mem0[v189:int8]
	v189 = CONVERT(v199, int8, word32)
	loc164 = v189
	v189 = loc164
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc166 = v191
	v189 = loc176
	v189 = Mem0[v189:word32]
	loc167 = v189
	v189 = loc166
	branch !v189 l000F629A
	// succ:  l000F6296 l000F629A
l000F6296:
	v189 = loc167
	goto l000F629D
	// succ:  l000F629D
l000F629A:
	v189 = loc176
	// succ:  l000F629D
l000F629D:
	loc168 = v189
	v189 = loc168
	v190 = loc150
	v189 = v189 + v190
	loc169 = v189
	v189 = loc24
	v190 = loc169
	Mem0[v189:word32] = v190
	v189 = loc168
	loc14 = v189
	goto l000F62BD
	// succ:  l000F62BD
l000F62B9:
	v189 = loc12
	loc14 = v189
	// succ:  l000F62BD
l000F62BD:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc179 = v189
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc180 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc181 = v189
	v189 = loc181
	v189 = Mem0[v189:word32]
	loc182 = v189
	v189 = loc180
	v190 = loc182
	v191 = v189 == v190
	loc183 = v191
	v189 = loc183
	branch !v189 l000F6337
	// succ:  l000F62EF l000F6337
l000F62EF:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc184 = v189
	v189 = loc184
	v190 = 0x24<32>
	v189 = v189 + v190
	loc185 = v189
	v189 = loc185
	v189 = Mem0[v189:word32]
	loc186 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc186
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc25 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc26 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc26
	v190 = 1<32>
	v189 = v189 & v190
	loc27 = v189
	v189 = loc27
	branch !v189 l000F6331
	// succ:  l000F6329 l000F6331
l000F6329:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F6331:
	v189 = loc25
	loc11 = v189
	// succ:  l000F6335
l000F6335:
	goto l000F6343
	// succ:  l000F6343
l000F6337:
	v189 = loc180
	v189 = Mem0[v189:word32]
	loc28 = v189
	v189 = loc28
	loc11 = v189
	// succ:  l000F6343
l000F6343:
	v189 = loc154
	v189 = Mem0[v189:word32]
	loc29 = v189
	v189 = loc11
	v190 = loc68
	v192 = loc14
	v193 = loc24
	v200 = loc57
	v201 = loc29
	v202 = loc165
	v203 = loc35
	v204 = loc46
	v205 = loc143
	v189 = fn000F2F51(v189, v190, v192, v193, v200, v201, v202, v203, v204, v205)
	loc30 = v189
	v189 = loc30
	v190 = 0<32>
	v191 = v189 == v190
	loc31 = v191
	v189 = loc31
	v191 = v189 == 0<32>
	branch !v191 l000F6383
	// succ:  l000F6373 l000F6383
l000F6373:
	v189 = loc14
	loc16 = v189
	v189 = loc98
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F6383:
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc32 = v189
	v189 = loc181
	v189 = Mem0[v189:word32]
	loc33 = v189
	v189 = loc32
	v190 = loc33
	v191 = v189 == v190
	loc34 = v191
	v189 = loc34
	branch !v189 l000F63E5
	// succ:  l000F639E l000F63E5
l000F639E:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc36 = v189
	v189 = loc36
	v190 = 0x28<32>
	v189 = v189 + v190
	loc37 = v189
	v189 = loc37
	v189 = Mem0[v189:word32]
	loc38 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc38
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	v189 = Mem0[0x00140048<p32>:word32]
	loc39 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc39
	v190 = 1<32>
	v189 = v189 & v190
	loc40 = v189
	v189 = loc40
	branch !v189 l000F63D9
	// succ:  l000F63D1 l000F63D9
l000F63D1:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F6401
	// succ:  l000F6401
l000F63D9:
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F5F6A
	// succ:  l000F5F6A
l000F63E3:
	goto l000F63FE
	// succ:  l000F63FE
l000F63E5:
	v189 = loc32
	v190 = 4<32>
	v189 = v189 + v190
	loc41 = v189
	v189 = loc179
	v190 = loc41
	Mem0[v189:word32] = v190
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F5F6A
	// succ:  l000F5F6A
l000F63FE:
	goto l000F5F6A
	// succ:  l000F5F6A
l000F6401:
	v189 = loc190
	v190 = 0x1D<32>
	v191 = v189 == v190
	branch !v191 l000F6420
	// succ:  l000F640B l000F6420
l000F640B:
	v189 = ___cxa_find_matching_catch_2()
	loc172 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc173 = v189
	v189 = loc172
	loc21 = v189
	v189 = loc173
	loc22 = v189
	goto l000F66CA
	// succ:  l000F66CA
l000F6420:
	v189 = loc190
	v190 = 0x1F<32>
	v191 = v189 == v190
	branch !v191 l000F643D
	// succ:  l000F6428 l000F643D
l000F6428:
	v189 = ___cxa_find_matching_catch_2()
	loc177 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc178 = v189
	v189 = loc177
	loc21 = v189
	v189 = loc178
	loc22 = v189
	goto l000F66C9
	// succ:  l000F66C9
l000F643D:
	v189 = loc190
	v190 = 0x27<32>
	v191 = v189 == v190
	branch !v191 l000F66C9
	// succ:  l000F6445 l000F66C9
l000F6445:
	v189 = loc165
	v190 = 0xB<32>
	v189 = v189 + v190
	loc42 = v189
	v189 = loc42
	v206 = Mem0[v189:int8]
	v189 = CONVERT(v206, int8, word32)
	loc43 = v189
	v189 = loc43
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc44 = v191
	v189 = loc165
	v190 = 4<32>
	v189 = v189 + v190
	loc45 = v189
	v189 = loc45
	v189 = Mem0[v189:word32]
	loc47 = v189
	v189 = loc43
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc48 = v189
	v189 = loc44
	branch !v189 l000F647F
	// succ:  l000F647C l000F647F
l000F647C:
	v189 = loc47
	goto l000F6481
	// succ:  l000F6481
l000F647F:
	v189 = loc48
	// succ:  l000F6481
l000F6481:
	loc49 = v189
	v189 = loc49
	v190 = 0<32>
	v191 = v189 == v190
	loc50 = v191
	v189 = loc50
	v191 = v189 == 0<32>
	branch !v191 l000F64D0
	// succ:  l000F6490 l000F64D0
l000F6490:
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc51 = v189
	v189 = loc51
	loc52 = v189
	v189 = loc35
	loc53 = v189
	v189 = loc52
	v190 = loc53
	v189 = v189 - v190
	loc54 = v189
	v189 = loc54
	v190 = 0xA0<32>
	v191 = v189 < v190
	loc55 = v191
	v189 = loc55
	branch !v189 l000F64CF
	// succ:  l000F64B2 l000F64CF
l000F64B2:
	v189 = loc57
	v189 = Mem0[v189:word32]
	loc56 = v189
	v189 = loc51
	v190 = 4<32>
	v189 = v189 + v190
	loc58 = v189
	v189 = loc46
	v190 = loc58
	Mem0[v189:word32] = v190
	v189 = loc51
	v190 = loc56
	Mem0[v189:word32] = v190
	// succ:  l000F64CF
l000F64CF:
	// succ:  l000F64D0
l000F64D0:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc59 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x185<32>
	v190 = loc16
	v192 = loc59
	v193 = arg4
	v200 = loc68
	v189 = invoke_iiiii(v189, v190, v192, v193, v200)
	loc60 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc61 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc61
	v190 = 1<32>
	v189 = v189 & v190
	loc62 = v189
	// succ:  l000F64F9
l000F64F9:
	v189 = loc62
	v191 = v189 == 0<32>
	branch !v191 l000F66B3
	// succ:  l000F6500 l000F66B3
l000F6500:
	v189 = arg5
	v190 = loc60
	Mem0[v189:word32] = v190
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc63 = v189
	v189 = loc165
	v190 = loc35
	v192 = loc63
	v193 = arg4
	fn000EC01D(v189, v190, v192, v193)
	v189 = loc18
	v190 = 0<32>
	v191 = v189 == v190
	loc64 = v191
	v189 = loc64
	branch !v189 l000F652A
	// succ:  l000F6525 l000F652A
l000F6525:
	v189 = 1<32>
	loc99 = v189
	goto l000F65B6
	// succ:  l000F65B6
l000F652A:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc65 = v189
	v189 = loc65
	v189 = Mem0[v189:word32]
	loc66 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc67 = v189
	v189 = loc67
	v189 = Mem0[v189:word32]
	loc69 = v189
	v189 = loc66
	v190 = loc69
	v191 = v189 == v190
	loc70 = v191
	v189 = loc70
	branch !v189 l000F658E
	// succ:  l000F6551 l000F658E
l000F6551:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc71 = v189
	v189 = loc71
	v190 = 0x24<32>
	v189 = v189 + v190
	loc72 = v189
	v189 = loc72
	v189 = Mem0[v189:word32]
	loc73 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc73
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc74 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc75 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc75
	v190 = 1<32>
	v189 = v189 & v190
	loc76 = v189
	v189 = loc76
	branch !v189 l000F6588
	// succ:  l000F6585 l000F6588
l000F6585:
	goto l000F66B3
	// succ:  l000F66B3
l000F6588:
	v189 = loc74
	loc7 = v189
	// succ:  l000F658C
l000F658C:
	goto l000F6599
	// succ:  l000F6599
l000F658E:
	v189 = loc66
	v189 = Mem0[v189:word32]
	loc77 = v189
	v189 = loc77
	loc7 = v189
	// succ:  l000F6599
l000F6599:
	v189 = loc7
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc78 = v191
	v189 = loc78
	branch !v189 l000F65B1
	// succ:  l000F65A5 l000F65B1
l000F65A5:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 1<32>
	loc99 = v189
	goto l000F65B5
	// succ:  l000F65B5
l000F65B1:
	v189 = 0<32>
	loc99 = v189
	// succ:  l000F65B5
l000F65B5:
	// succ:  l000F65B6
l000F65B6:
	v189 = loc20
	v190 = 0<32>
	v191 = v189 == v190
	loc80 = v191
	// succ:  l000F65BE
l000F65BE:
	v189 = loc80
	branch !v189 l000F65CA
	// succ:  l000F65C4 l000F65CA
l000F65C4:
	v189 = 0x37<32>
	loc190 = v189
	goto l000F6664
	// succ:  l000F6664
l000F65CA:
	v189 = loc20
	v190 = 0xC<32>
	v189 = v189 + v190
	loc81 = v189
	v189 = loc81
	v189 = Mem0[v189:word32]
	loc82 = v189
	v189 = loc20
	v190 = 0x10<32>
	v189 = v189 + v190
	loc83 = v189
	v189 = loc83
	v189 = Mem0[v189:word32]
	loc84 = v189
	v189 = loc82
	v190 = loc84
	v191 = v189 == v190
	loc85 = v191
	v189 = loc85
	branch !v189 l000F662E
	// succ:  l000F65F1 l000F662E
l000F65F1:
	v189 = loc20
	v189 = Mem0[v189:word32]
	loc86 = v189
	v189 = loc86
	v190 = 0x24<32>
	v189 = v189 + v190
	loc87 = v189
	v189 = loc87
	v189 = Mem0[v189:word32]
	loc88 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc88
	v190 = loc20
	v189 = invoke_ii(v189, v190)
	loc89 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc91 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc91
	v190 = 1<32>
	v189 = v189 & v190
	loc92 = v189
	v189 = loc92
	branch !v189 l000F6628
	// succ:  l000F6625 l000F6628
l000F6625:
	goto l000F66B3
	// succ:  l000F66B3
l000F6628:
	v189 = loc89
	loc9 = v189
	// succ:  l000F662C
l000F662C:
	goto l000F6639
	// succ:  l000F6639
l000F662E:
	v189 = loc82
	v189 = Mem0[v189:word32]
	loc93 = v189
	v189 = loc93
	loc9 = v189
	// succ:  l000F6639
l000F6639:
	v189 = loc9
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc94 = v191
	v189 = loc94
	branch !v189 l000F6654
	// succ:  l000F6645 l000F6654
l000F6645:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x37<32>
	loc190 = v189
	goto l000F6665
	// succ:  l000F6665
l000F6654:
	v189 = loc99
	branch !v189 l000F665B
	// succ:  l000F6658 l000F665B
l000F6658:
	goto l000F6665
	// succ:  l000F6665
l000F665B:
	v189 = 0x39<32>
	loc190 = v189
	goto l000F6665
	// succ:  l000F6665
l000F6662:
	// succ:  l000F6663
l000F6663:
	// succ:  l000F6664
l000F6664:
	// succ:  l000F6665
l000F6665:
	v189 = loc190
	v190 = 0x37<32>
	v191 = v189 == v190
	branch !v191 l000F6679
	// succ:  l000F666E l000F6679
l000F666E:
	v189 = loc99
	branch !v189 l000F6678
	// succ:  l000F6672 l000F6678
l000F6672:
	v189 = 0x39<32>
	loc190 = v189
	// succ:  l000F6678
l000F6678:
	// succ:  l000F6679
l000F6679:
	v189 = loc190
	v190 = 0x39<32>
	v191 = v189 == v190
	branch !v191 l000F6697
	// succ:  l000F6681 l000F6697
l000F6681:
	v189 = arg4
	v189 = Mem0[v189:word32]
	loc95 = v189
	v189 = loc95
	v190 = 2<32>
	v189 = v189 | v190
	loc96 = v189
	v189 = arg4
	v190 = loc96
	Mem0[v189:word32] = v190
	// succ:  l000F6697
l000F6697:
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc23 = v189
	v189 = loc176
	fn0011BAF7(v189)
	v189 = loc165
	fn0011BAF7(v189)
	v189 = loc191
	Mem0[0x00140030<p32>:word32] = v189
	v189 = loc23
	return v189
	// succ:  fn000F5DFC_exit
l000F66B3:
	// succ:  l000F66B3
l000F66B3:
	v189 = ___cxa_find_matching_catch_2()
	loc174 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc175 = v189
	v189 = loc174
	loc21 = v189
	v189 = loc175
	loc22 = v189
	// succ:  l000F66C9
l000F66C9:
	// succ:  l000F66C9
l000F66C9:
	// succ:  l000F66CA
l000F66CA:
	v189 = loc21
	loc13 = v189
	v189 = loc22
	loc15 = v189
	// succ:  l000F66D3
l000F66D3:
	v189 = loc176
	fn0011BAF7(v189)
	v189 = loc165
	fn0011BAF7(v189)
	v189 = loc13
	___resumeException(v189)
	v189 = 0<32>
	return v189
	// succ:  fn000F5DFC_exit
l000F66E7:
	return v189
	// succ:  fn000F5DFC_exit
fn000F5DFC_exit:


// fn000F66E9
// Return size: 0
word32 fn000F66E9(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F66E9_entry:
	// succ:  l000F66E9
l000F66E9:
	v189 = Mem0[0x00140030<p32>:word32]
	loc191 = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = 0x130<32>
	v189 = v189 + v190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = Mem0[0x00140034<p32>:word32]
	v191 = v189 >= v190
	branch !v191 l000F6705
	// succ:  l000F66FF l000F6705
l000F66FF:
	v189 = 0x130<32>
	abortStackOverflow(v189)
	// succ:  l000F6705
l000F6705:
	v189 = loc191
	v190 = 0xC8<32>
	v189 = v189 + v190
	loc143 = v189
	v189 = loc191
	v190 = 0xC4<32>
	v189 = v189 + v190
	loc154 = v189
	v189 = loc191
	v190 = 0xB8<32>
	v189 = v189 + v190
	loc165 = v189
	v189 = loc191
	v190 = 0xAC<32>
	v189 = v189 + v190
	loc176 = v189
	v189 = loc191
	v190 = 0xA8<32>
	v189 = v189 + v190
	loc24 = v189
	v189 = loc191
	v190 = 8<32>
	v189 = v189 + v190
	loc35 = v189
	v189 = loc191
	v190 = 4<32>
	v189 = v189 + v190
	loc46 = v189
	v189 = loc191
	loc57 = v189
	v189 = arg3
	v189 = fn000EDE83(v189)
	loc68 = v189
	v189 = loc165
	v190 = arg3
	v192 = loc143
	v193 = loc154
	fn000F5C88(v189, v190, v192, v193)
	v189 = loc176
	v194 = 0<64>
	Mem0[v189:word64] = v194
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc6 = v189
	// succ:  l000F6779
l000F6779:
	v189 = loc6
	v190 = 3<32>
	v191 = v189 == v190
	loc187 = v191
	v189 = loc187
	branch !v189 l000F678B
	// succ:  l000F6788 l000F678B
l000F6788:
	goto l000F67AA
	// succ:  l000F67AA
l000F678B:
	v189 = loc176
	v190 = loc6
	v192 = 2<32>
	v190 = v190 << v192
	v189 = v189 + v190
	loc79 = v189
	v189 = loc79
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc6
	v190 = 1<32>
	v189 = v189 + v190
	loc90 = v189
	v189 = loc90
	loc6 = v189
	goto l000F6705
	// succ:  l000F6705
l000F67AA:
	v189 = loc176
	v190 = 0xB<32>
	v189 = v189 + v190
	loc100 = v189
	v189 = loc100
	v195 = Mem0[v189:int8]
	v189 = CONVERT(v195, int8, word32)
	loc101 = v189
	v189 = loc101
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc102 = v191
	v189 = loc102
	branch !v189 l000F67F4
	// succ:  l000F67CC l000F67F4
l000F67CC:
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	loc103 = v189
	v189 = loc103
	v189 = Mem0[v189:word32]
	loc104 = v189
	v189 = loc104
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc105 = v189
	v189 = loc105
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc188 = v189
	v189 = loc188
	loc106 = v189
	goto l000F67F8
	// succ:  l000F67F8
l000F67F4:
	v189 = 0xA<32>
	loc106 = v189
	// succ:  l000F67F8
l000F67F8:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc106
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc107 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc107
	v190 = 1<32>
	v189 = v189 & v190
	loc108 = v189
	v189 = loc108
	branch !v189 l000F6831
	// succ:  l000F681C l000F6831
l000F681C:
	v189 = ___cxa_find_matching_catch_2()
	loc170 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc171 = v189
	v189 = loc170
	loc13 = v189
	v189 = loc171
	loc15 = v189
	goto l000F6FC0
	// succ:  l000F6FC0
l000F6831:
	v189 = loc100
	v196 = Mem0[v189:int8]
	v189 = CONVERT(v196, int8, word32)
	loc109 = v189
	v189 = loc109
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc110 = v191
	v189 = loc176
	v189 = Mem0[v189:word32]
	loc111 = v189
	v189 = loc110
	branch !v189 l000F6854
	// succ:  l000F6851 l000F6854
l000F6851:
	v189 = loc111
	goto l000F6857
	// succ:  l000F6857
l000F6854:
	v189 = loc176
	// succ:  l000F6857
l000F6857:
	loc112 = v189
	v189 = loc24
	v190 = loc112
	Mem0[v189:word32] = v190
	v189 = loc46
	v190 = loc35
	Mem0[v189:word32] = v190
	v189 = loc57
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc176
	v190 = 4<32>
	v189 = v189 + v190
	loc113 = v189
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	loc114 = v189
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc17 = v189
	v189 = loc112
	loc12 = v189
	v189 = loc17
	loc19 = v189
	// succ:  l000F6890
l000F6890:
	v189 = loc19
	v190 = 0<32>
	v191 = v189 == v190
	loc115 = v191
	v189 = loc115
	branch !v189 l000F68A6
	// succ:  l000F689D l000F68A6
l000F689D:
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc97 = v189
	goto l000F6941
	// succ:  l000F6941
l000F68A6:
	v189 = loc19
	v190 = 0xC<32>
	v189 = v189 + v190
	loc116 = v189
	v189 = loc116
	v189 = Mem0[v189:word32]
	loc117 = v189
	v189 = loc19
	v190 = 0x10<32>
	v189 = v189 + v190
	loc118 = v189
	v189 = loc118
	v189 = Mem0[v189:word32]
	loc119 = v189
	v189 = loc117
	v190 = loc119
	v191 = v189 == v190
	loc120 = v191
	v189 = loc120
	branch !v189 l000F690F
	// succ:  l000F68CD l000F690F
l000F68CD:
	v189 = loc19
	v189 = Mem0[v189:word32]
	loc121 = v189
	v189 = loc121
	v190 = 0x24<32>
	v189 = v189 + v190
	loc122 = v189
	v189 = loc122
	v189 = Mem0[v189:word32]
	loc123 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc123
	v190 = loc19
	v189 = invoke_ii(v189, v190)
	loc124 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc125 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc125
	v190 = 1<32>
	v189 = v189 & v190
	loc126 = v189
	v189 = loc126
	branch !v189 l000F6909
	// succ:  l000F6901 l000F6909
l000F6901:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F6909:
	v189 = loc124
	loc8 = v189
	// succ:  l000F690D
l000F690D:
	goto l000F691A
	// succ:  l000F691A
l000F690F:
	v189 = loc117
	v189 = Mem0[v189:word32]
	loc127 = v189
	v189 = loc127
	loc8 = v189
	// succ:  l000F691A
l000F691A:
	v189 = loc8
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc128 = v191
	v189 = loc128
	branch !v189 l000F6938
	// succ:  l000F6928 l000F6938
l000F6928:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc97 = v189
	goto l000F6940
	// succ:  l000F6940
l000F6938:
	v189 = loc19
	loc18 = v189
	v189 = 0<32>
	loc97 = v189
	// succ:  l000F6940
l000F6940:
	// succ:  l000F6941
l000F6941:
	v189 = arg2
	v189 = Mem0[v189:word32]
	loc129 = v189
	v189 = loc129
	v190 = 0<32>
	v191 = v189 == v190
	loc130 = v191
	// succ:  l000F6953
l000F6953:
	v189 = loc130
	branch !v189 l000F6960
	// succ:  l000F695A l000F6960
l000F695A:
	v189 = 0x14<32>
	loc190 = v189
	goto l000F6A2C
	// succ:  l000F6A2C
l000F6960:
	v189 = loc129
	v190 = 0xC<32>
	v189 = v189 + v190
	loc131 = v189
	v189 = loc131
	v189 = Mem0[v189:word32]
	loc132 = v189
	v189 = loc129
	v190 = 0x10<32>
	v189 = v189 + v190
	loc133 = v189
	v189 = loc133
	v189 = Mem0[v189:word32]
	loc134 = v189
	v189 = loc132
	v190 = loc134
	v191 = v189 == v190
	loc135 = v191
	v189 = loc135
	branch !v189 l000F69E3
	// succ:  l000F6993 l000F69E3
l000F6993:
	v189 = loc129
	v189 = Mem0[v189:word32]
	loc136 = v189
	v189 = loc136
	v190 = 0x24<32>
	v189 = v189 + v190
	loc137 = v189
	v189 = loc137
	v189 = Mem0[v189:word32]
	loc138 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc138
	v190 = loc129
	v189 = invoke_ii(v189, v190)
	loc139 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc140 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc140
	v190 = 1<32>
	v189 = v189 & v190
	loc141 = v189
	v189 = loc141
	branch !v189 l000F69DC
	// succ:  l000F69D4 l000F69DC
l000F69D4:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F69DC:
	v189 = loc139
	loc10 = v189
	// succ:  l000F69E1
l000F69E1:
	goto l000F69F1
	// succ:  l000F69F1
l000F69E3:
	v189 = loc132
	v189 = Mem0[v189:word32]
	loc142 = v189
	v189 = loc142
	loc10 = v189
	// succ:  l000F69F1
l000F69F1:
	v189 = loc10
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc144 = v191
	v189 = loc144
	branch !v189 l000F6A0E
	// succ:  l000F69FF l000F6A0E
l000F69FF:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x14<32>
	loc190 = v189
	goto l000F6A2D
	// succ:  l000F6A2D
l000F6A0E:
	v189 = loc97
	branch !v189 l000F6A1A
	// succ:  l000F6A12 l000F6A1A
l000F6A12:
	v189 = loc129
	loc98 = v189
	goto l000F6A2D
	// succ:  l000F6A2D
l000F6A1A:
	v189 = loc12
	loc16 = v189
	v189 = loc129
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F6A2A:
	// succ:  l000F6A2B
l000F6A2B:
	// succ:  l000F6A2C
l000F6A2C:
	// succ:  l000F6A2D
l000F6A2D:
	v189 = loc190
	v190 = 0x14<32>
	v191 = v189 == v190
	branch !v191 l000F6A55
	// succ:  l000F6A36 l000F6A55
l000F6A36:
	v189 = 0<32>
	loc190 = v189
	v189 = loc97
	branch !v189 l000F6A4F
	// succ:  l000F6A3F l000F6A4F
l000F6A3F:
	v189 = loc12
	loc16 = v189
	v189 = 0<32>
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F6A4F:
	v189 = 0<32>
	loc98 = v189
	// succ:  l000F6A53
l000F6A53:
	// succ:  l000F6A55
l000F6A55:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc145 = v189
	v189 = loc100
	v197 = Mem0[v189:int8]
	v189 = CONVERT(v197, int8, word32)
	loc146 = v189
	v189 = loc146
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc147 = v191
	v189 = loc113
	v189 = Mem0[v189:word32]
	loc148 = v189
	v189 = loc146
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc149 = v189
	v189 = loc147
	branch !v189 l000F6A8F
	// succ:  l000F6A8B l000F6A8F
l000F6A8B:
	v189 = loc148
	goto l000F6A92
	// succ:  l000F6A92
l000F6A8F:
	v189 = loc149
	// succ:  l000F6A92
l000F6A92:
	loc150 = v189
	v189 = loc12
	v190 = loc150
	v189 = v189 + v190
	loc151 = v189
	v189 = loc145
	v190 = loc151
	v191 = v189 == v190
	loc152 = v191
	v189 = loc152
	branch !v189 l000F6BA6
	// succ:  l000F6AAE l000F6BA6
l000F6AAE:
	v189 = loc150
	v190 = 1<32>
	v189 = v189 << v190
	loc153 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc153
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc155 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc155
	v190 = 1<32>
	v189 = v189 & v190
	loc156 = v189
	v189 = loc156
	branch !v189 l000F6AE7
	// succ:  l000F6ADF l000F6AE7
l000F6ADF:
	v189 = 0x1F<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F6AE7:
	v189 = loc100
	v198 = Mem0[v189:int8]
	v189 = CONVERT(v198, int8, word32)
	loc157 = v189
	v189 = loc157
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc158 = v191
	v189 = loc158
	branch !v189 l000F6B28
	// succ:  l000F6B03 l000F6B28
l000F6B03:
	v189 = loc114
	v189 = Mem0[v189:word32]
	loc159 = v189
	v189 = loc159
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc160 = v189
	v189 = loc160
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc189 = v189
	v189 = loc189
	loc161 = v189
	goto l000F6B2D
	// succ:  l000F6B2D
l000F6B28:
	v189 = 0xA<32>
	loc161 = v189
	// succ:  l000F6B2D
l000F6B2D:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc161
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc162 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc162
	v190 = 1<32>
	v189 = v189 & v190
	loc163 = v189
	v189 = loc163
	branch !v189 l000F6B5E
	// succ:  l000F6B56 l000F6B5E
l000F6B56:
	v189 = 0x1F<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F6B5E:
	v189 = loc100
	v199 = Mem0[v189:int8]
	v189 = CONVERT(v199, int8, word32)
	loc164 = v189
	v189 = loc164
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc166 = v191
	v189 = loc176
	v189 = Mem0[v189:word32]
	loc167 = v189
	v189 = loc166
	branch !v189 l000F6B87
	// succ:  l000F6B83 l000F6B87
l000F6B83:
	v189 = loc167
	goto l000F6B8A
	// succ:  l000F6B8A
l000F6B87:
	v189 = loc176
	// succ:  l000F6B8A
l000F6B8A:
	loc168 = v189
	v189 = loc168
	v190 = loc150
	v189 = v189 + v190
	loc169 = v189
	v189 = loc24
	v190 = loc169
	Mem0[v189:word32] = v190
	v189 = loc168
	loc14 = v189
	goto l000F6BAA
	// succ:  l000F6BAA
l000F6BA6:
	v189 = loc12
	loc14 = v189
	// succ:  l000F6BAA
l000F6BAA:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc179 = v189
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc180 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc181 = v189
	v189 = loc181
	v189 = Mem0[v189:word32]
	loc182 = v189
	v189 = loc180
	v190 = loc182
	v191 = v189 == v190
	loc183 = v191
	v189 = loc183
	branch !v189 l000F6C24
	// succ:  l000F6BDC l000F6C24
l000F6BDC:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc184 = v189
	v189 = loc184
	v190 = 0x24<32>
	v189 = v189 + v190
	loc185 = v189
	v189 = loc185
	v189 = Mem0[v189:word32]
	loc186 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc186
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc25 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc26 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc26
	v190 = 1<32>
	v189 = v189 & v190
	loc27 = v189
	v189 = loc27
	branch !v189 l000F6C1E
	// succ:  l000F6C16 l000F6C1E
l000F6C16:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F6C1E:
	v189 = loc25
	loc11 = v189
	// succ:  l000F6C22
l000F6C22:
	goto l000F6C30
	// succ:  l000F6C30
l000F6C24:
	v189 = loc180
	v189 = Mem0[v189:word32]
	loc28 = v189
	v189 = loc28
	loc11 = v189
	// succ:  l000F6C30
l000F6C30:
	v189 = loc154
	v189 = Mem0[v189:word32]
	loc29 = v189
	v189 = loc11
	v190 = loc68
	v192 = loc14
	v193 = loc24
	v200 = loc57
	v201 = loc29
	v202 = loc165
	v203 = loc35
	v204 = loc46
	v205 = loc143
	v189 = fn000F2F51(v189, v190, v192, v193, v200, v201, v202, v203, v204, v205)
	loc30 = v189
	v189 = loc30
	v190 = 0<32>
	v191 = v189 == v190
	loc31 = v191
	v189 = loc31
	v191 = v189 == 0<32>
	branch !v191 l000F6C70
	// succ:  l000F6C60 l000F6C70
l000F6C60:
	v189 = loc14
	loc16 = v189
	v189 = loc98
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F6C70:
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc32 = v189
	v189 = loc181
	v189 = Mem0[v189:word32]
	loc33 = v189
	v189 = loc32
	v190 = loc33
	v191 = v189 == v190
	loc34 = v191
	v189 = loc34
	branch !v189 l000F6CD2
	// succ:  l000F6C8B l000F6CD2
l000F6C8B:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc36 = v189
	v189 = loc36
	v190 = 0x28<32>
	v189 = v189 + v190
	loc37 = v189
	v189 = loc37
	v189 = Mem0[v189:word32]
	loc38 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc38
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	v189 = Mem0[0x00140048<p32>:word32]
	loc39 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc39
	v190 = 1<32>
	v189 = v189 & v190
	loc40 = v189
	v189 = loc40
	branch !v189 l000F6CC6
	// succ:  l000F6CBE l000F6CC6
l000F6CBE:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F6CEE
	// succ:  l000F6CEE
l000F6CC6:
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F6857
	// succ:  l000F6857
l000F6CD0:
	goto l000F6CEB
	// succ:  l000F6CEB
l000F6CD2:
	v189 = loc32
	v190 = 4<32>
	v189 = v189 + v190
	loc41 = v189
	v189 = loc179
	v190 = loc41
	Mem0[v189:word32] = v190
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F6857
	// succ:  l000F6857
l000F6CEB:
	goto l000F6857
	// succ:  l000F6857
l000F6CEE:
	v189 = loc190
	v190 = 0x1D<32>
	v191 = v189 == v190
	branch !v191 l000F6D0D
	// succ:  l000F6CF8 l000F6D0D
l000F6CF8:
	v189 = ___cxa_find_matching_catch_2()
	loc172 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc173 = v189
	v189 = loc172
	loc21 = v189
	v189 = loc173
	loc22 = v189
	goto l000F6FB7
	// succ:  l000F6FB7
l000F6D0D:
	v189 = loc190
	v190 = 0x1F<32>
	v191 = v189 == v190
	branch !v191 l000F6D2A
	// succ:  l000F6D15 l000F6D2A
l000F6D15:
	v189 = ___cxa_find_matching_catch_2()
	loc177 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc178 = v189
	v189 = loc177
	loc21 = v189
	v189 = loc178
	loc22 = v189
	goto l000F6FB6
	// succ:  l000F6FB6
l000F6D2A:
	v189 = loc190
	v190 = 0x27<32>
	v191 = v189 == v190
	branch !v191 l000F6FB6
	// succ:  l000F6D32 l000F6FB6
l000F6D32:
	v189 = loc165
	v190 = 0xB<32>
	v189 = v189 + v190
	loc42 = v189
	v189 = loc42
	v206 = Mem0[v189:int8]
	v189 = CONVERT(v206, int8, word32)
	loc43 = v189
	v189 = loc43
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc44 = v191
	v189 = loc165
	v190 = 4<32>
	v189 = v189 + v190
	loc45 = v189
	v189 = loc45
	v189 = Mem0[v189:word32]
	loc47 = v189
	v189 = loc43
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc48 = v189
	v189 = loc44
	branch !v189 l000F6D6C
	// succ:  l000F6D69 l000F6D6C
l000F6D69:
	v189 = loc47
	goto l000F6D6E
	// succ:  l000F6D6E
l000F6D6C:
	v189 = loc48
	// succ:  l000F6D6E
l000F6D6E:
	loc49 = v189
	v189 = loc49
	v190 = 0<32>
	v191 = v189 == v190
	loc50 = v191
	v189 = loc50
	v191 = v189 == 0<32>
	branch !v191 l000F6DBD
	// succ:  l000F6D7D l000F6DBD
l000F6D7D:
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc51 = v189
	v189 = loc51
	loc52 = v189
	v189 = loc35
	loc53 = v189
	v189 = loc52
	v190 = loc53
	v189 = v189 - v190
	loc54 = v189
	v189 = loc54
	v190 = 0xA0<32>
	v191 = v189 < v190
	loc55 = v191
	v189 = loc55
	branch !v189 l000F6DBC
	// succ:  l000F6D9F l000F6DBC
l000F6D9F:
	v189 = loc57
	v189 = Mem0[v189:word32]
	loc56 = v189
	v189 = loc51
	v190 = 4<32>
	v189 = v189 + v190
	loc58 = v189
	v189 = loc46
	v190 = loc58
	Mem0[v189:word32] = v190
	v189 = loc51
	v190 = loc56
	Mem0[v189:word32] = v190
	// succ:  l000F6DBC
l000F6DBC:
	// succ:  l000F6DBD
l000F6DBD:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc59 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x186<32>
	v190 = loc16
	v192 = loc59
	v193 = arg4
	v200 = loc68
	v189 = invoke_iiiii(v189, v190, v192, v193, v200)
	loc60 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc61 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc61
	v190 = 1<32>
	v189 = v189 & v190
	loc62 = v189
	// succ:  l000F6DE6
l000F6DE6:
	v189 = loc62
	v191 = v189 == 0<32>
	branch !v191 l000F6FA0
	// succ:  l000F6DED l000F6FA0
l000F6DED:
	v189 = arg5
	v190 = loc60
	Mem0[v189:word32] = v190
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc63 = v189
	v189 = loc165
	v190 = loc35
	v192 = loc63
	v193 = arg4
	fn000EC01D(v189, v190, v192, v193)
	v189 = loc18
	v190 = 0<32>
	v191 = v189 == v190
	loc64 = v191
	v189 = loc64
	branch !v189 l000F6E17
	// succ:  l000F6E12 l000F6E17
l000F6E12:
	v189 = 1<32>
	loc99 = v189
	goto l000F6EA3
	// succ:  l000F6EA3
l000F6E17:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc65 = v189
	v189 = loc65
	v189 = Mem0[v189:word32]
	loc66 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc67 = v189
	v189 = loc67
	v189 = Mem0[v189:word32]
	loc69 = v189
	v189 = loc66
	v190 = loc69
	v191 = v189 == v190
	loc70 = v191
	v189 = loc70
	branch !v189 l000F6E7B
	// succ:  l000F6E3E l000F6E7B
l000F6E3E:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc71 = v189
	v189 = loc71
	v190 = 0x24<32>
	v189 = v189 + v190
	loc72 = v189
	v189 = loc72
	v189 = Mem0[v189:word32]
	loc73 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc73
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc74 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc75 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc75
	v190 = 1<32>
	v189 = v189 & v190
	loc76 = v189
	v189 = loc76
	branch !v189 l000F6E75
	// succ:  l000F6E72 l000F6E75
l000F6E72:
	goto l000F6FA0
	// succ:  l000F6FA0
l000F6E75:
	v189 = loc74
	loc7 = v189
	// succ:  l000F6E79
l000F6E79:
	goto l000F6E86
	// succ:  l000F6E86
l000F6E7B:
	v189 = loc66
	v189 = Mem0[v189:word32]
	loc77 = v189
	v189 = loc77
	loc7 = v189
	// succ:  l000F6E86
l000F6E86:
	v189 = loc7
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc78 = v191
	v189 = loc78
	branch !v189 l000F6E9E
	// succ:  l000F6E92 l000F6E9E
l000F6E92:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 1<32>
	loc99 = v189
	goto l000F6EA2
	// succ:  l000F6EA2
l000F6E9E:
	v189 = 0<32>
	loc99 = v189
	// succ:  l000F6EA2
l000F6EA2:
	// succ:  l000F6EA3
l000F6EA3:
	v189 = loc20
	v190 = 0<32>
	v191 = v189 == v190
	loc80 = v191
	// succ:  l000F6EAB
l000F6EAB:
	v189 = loc80
	branch !v189 l000F6EB7
	// succ:  l000F6EB1 l000F6EB7
l000F6EB1:
	v189 = 0x37<32>
	loc190 = v189
	goto l000F6F51
	// succ:  l000F6F51
l000F6EB7:
	v189 = loc20
	v190 = 0xC<32>
	v189 = v189 + v190
	loc81 = v189
	v189 = loc81
	v189 = Mem0[v189:word32]
	loc82 = v189
	v189 = loc20
	v190 = 0x10<32>
	v189 = v189 + v190
	loc83 = v189
	v189 = loc83
	v189 = Mem0[v189:word32]
	loc84 = v189
	v189 = loc82
	v190 = loc84
	v191 = v189 == v190
	loc85 = v191
	v189 = loc85
	branch !v189 l000F6F1B
	// succ:  l000F6EDE l000F6F1B
l000F6EDE:
	v189 = loc20
	v189 = Mem0[v189:word32]
	loc86 = v189
	v189 = loc86
	v190 = 0x24<32>
	v189 = v189 + v190
	loc87 = v189
	v189 = loc87
	v189 = Mem0[v189:word32]
	loc88 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc88
	v190 = loc20
	v189 = invoke_ii(v189, v190)
	loc89 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc91 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc91
	v190 = 1<32>
	v189 = v189 & v190
	loc92 = v189
	v189 = loc92
	branch !v189 l000F6F15
	// succ:  l000F6F12 l000F6F15
l000F6F12:
	goto l000F6FA0
	// succ:  l000F6FA0
l000F6F15:
	v189 = loc89
	loc9 = v189
	// succ:  l000F6F19
l000F6F19:
	goto l000F6F26
	// succ:  l000F6F26
l000F6F1B:
	v189 = loc82
	v189 = Mem0[v189:word32]
	loc93 = v189
	v189 = loc93
	loc9 = v189
	// succ:  l000F6F26
l000F6F26:
	v189 = loc9
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc94 = v191
	v189 = loc94
	branch !v189 l000F6F41
	// succ:  l000F6F32 l000F6F41
l000F6F32:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x37<32>
	loc190 = v189
	goto l000F6F52
	// succ:  l000F6F52
l000F6F41:
	v189 = loc99
	branch !v189 l000F6F48
	// succ:  l000F6F45 l000F6F48
l000F6F45:
	goto l000F6F52
	// succ:  l000F6F52
l000F6F48:
	v189 = 0x39<32>
	loc190 = v189
	goto l000F6F52
	// succ:  l000F6F52
l000F6F4F:
	// succ:  l000F6F50
l000F6F50:
	// succ:  l000F6F51
l000F6F51:
	// succ:  l000F6F52
l000F6F52:
	v189 = loc190
	v190 = 0x37<32>
	v191 = v189 == v190
	branch !v191 l000F6F66
	// succ:  l000F6F5B l000F6F66
l000F6F5B:
	v189 = loc99
	branch !v189 l000F6F65
	// succ:  l000F6F5F l000F6F65
l000F6F5F:
	v189 = 0x39<32>
	loc190 = v189
	// succ:  l000F6F65
l000F6F65:
	// succ:  l000F6F66
l000F6F66:
	v189 = loc190
	v190 = 0x39<32>
	v191 = v189 == v190
	branch !v191 l000F6F84
	// succ:  l000F6F6E l000F6F84
l000F6F6E:
	v189 = arg4
	v189 = Mem0[v189:word32]
	loc95 = v189
	v189 = loc95
	v190 = 2<32>
	v189 = v189 | v190
	loc96 = v189
	v189 = arg4
	v190 = loc96
	Mem0[v189:word32] = v190
	// succ:  l000F6F84
l000F6F84:
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc23 = v189
	v189 = loc176
	fn0011BAF7(v189)
	v189 = loc165
	fn0011BAF7(v189)
	v189 = loc191
	Mem0[0x00140030<p32>:word32] = v189
	v189 = loc23
	return v189
	// succ:  fn000F66E9_exit
l000F6FA0:
	// succ:  l000F6FA0
l000F6FA0:
	v189 = ___cxa_find_matching_catch_2()
	loc174 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc175 = v189
	v189 = loc174
	loc21 = v189
	v189 = loc175
	loc22 = v189
	// succ:  l000F6FB6
l000F6FB6:
	// succ:  l000F6FB6
l000F6FB6:
	// succ:  l000F6FB7
l000F6FB7:
	v189 = loc21
	loc13 = v189
	v189 = loc22
	loc15 = v189
	// succ:  l000F6FC0
l000F6FC0:
	v189 = loc176
	fn0011BAF7(v189)
	v189 = loc165
	fn0011BAF7(v189)
	v189 = loc13
	___resumeException(v189)
	v189 = 0<32>
	return v189
	// succ:  fn000F66E9_exit
l000F6FD4:
	return v189
	// succ:  fn000F66E9_exit
fn000F66E9_exit:


// fn000F6FD6
// Return size: 0
word32 fn000F6FD6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F6FD6_entry:
	// succ:  l000F6FD6
l000F6FD6:
	v189 = Mem0[0x00140030<p32>:word32]
	loc191 = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = 0x130<32>
	v189 = v189 + v190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = Mem0[0x00140034<p32>:word32]
	v191 = v189 >= v190
	branch !v191 l000F6FF2
	// succ:  l000F6FEC l000F6FF2
l000F6FEC:
	v189 = 0x130<32>
	abortStackOverflow(v189)
	// succ:  l000F6FF2
l000F6FF2:
	v189 = loc191
	v190 = 0xC8<32>
	v189 = v189 + v190
	loc143 = v189
	v189 = loc191
	v190 = 0xC4<32>
	v189 = v189 + v190
	loc154 = v189
	v189 = loc191
	v190 = 0xB8<32>
	v189 = v189 + v190
	loc165 = v189
	v189 = loc191
	v190 = 0xAC<32>
	v189 = v189 + v190
	loc176 = v189
	v189 = loc191
	v190 = 0xA8<32>
	v189 = v189 + v190
	loc24 = v189
	v189 = loc191
	v190 = 8<32>
	v189 = v189 + v190
	loc35 = v189
	v189 = loc191
	v190 = 4<32>
	v189 = v189 + v190
	loc46 = v189
	v189 = loc191
	loc57 = v189
	v189 = arg3
	v189 = fn000EDE83(v189)
	loc68 = v189
	v189 = loc165
	v190 = arg3
	v192 = loc143
	v193 = loc154
	fn000F5C88(v189, v190, v192, v193)
	v189 = loc176
	v194 = 0<64>
	Mem0[v189:word64] = v194
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc6 = v189
	// succ:  l000F7066
l000F7066:
	v189 = loc6
	v190 = 3<32>
	v191 = v189 == v190
	loc187 = v191
	v189 = loc187
	branch !v189 l000F7078
	// succ:  l000F7075 l000F7078
l000F7075:
	goto l000F7097
	// succ:  l000F7097
l000F7078:
	v189 = loc176
	v190 = loc6
	v192 = 2<32>
	v190 = v190 << v192
	v189 = v189 + v190
	loc79 = v189
	v189 = loc79
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc6
	v190 = 1<32>
	v189 = v189 + v190
	loc90 = v189
	v189 = loc90
	loc6 = v189
	goto l000F6FF2
	// succ:  l000F6FF2
l000F7097:
	v189 = loc176
	v190 = 0xB<32>
	v189 = v189 + v190
	loc100 = v189
	v189 = loc100
	v195 = Mem0[v189:int8]
	v189 = CONVERT(v195, int8, word32)
	loc101 = v189
	v189 = loc101
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc102 = v191
	v189 = loc102
	branch !v189 l000F70E1
	// succ:  l000F70B9 l000F70E1
l000F70B9:
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	loc103 = v189
	v189 = loc103
	v189 = Mem0[v189:word32]
	loc104 = v189
	v189 = loc104
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc105 = v189
	v189 = loc105
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc188 = v189
	v189 = loc188
	loc106 = v189
	goto l000F70E5
	// succ:  l000F70E5
l000F70E1:
	v189 = 0xA<32>
	loc106 = v189
	// succ:  l000F70E5
l000F70E5:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc106
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc107 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc107
	v190 = 1<32>
	v189 = v189 & v190
	loc108 = v189
	v189 = loc108
	branch !v189 l000F711E
	// succ:  l000F7109 l000F711E
l000F7109:
	v189 = ___cxa_find_matching_catch_2()
	loc170 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc171 = v189
	v189 = loc170
	loc13 = v189
	v189 = loc171
	loc15 = v189
	goto l000F78AD
	// succ:  l000F78AD
l000F711E:
	v189 = loc100
	v196 = Mem0[v189:int8]
	v189 = CONVERT(v196, int8, word32)
	loc109 = v189
	v189 = loc109
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc110 = v191
	v189 = loc176
	v189 = Mem0[v189:word32]
	loc111 = v189
	v189 = loc110
	branch !v189 l000F7141
	// succ:  l000F713E l000F7141
l000F713E:
	v189 = loc111
	goto l000F7144
	// succ:  l000F7144
l000F7141:
	v189 = loc176
	// succ:  l000F7144
l000F7144:
	loc112 = v189
	v189 = loc24
	v190 = loc112
	Mem0[v189:word32] = v190
	v189 = loc46
	v190 = loc35
	Mem0[v189:word32] = v190
	v189 = loc57
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc176
	v190 = 4<32>
	v189 = v189 + v190
	loc113 = v189
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	loc114 = v189
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc17 = v189
	v189 = loc112
	loc12 = v189
	v189 = loc17
	loc19 = v189
	// succ:  l000F717D
l000F717D:
	v189 = loc19
	v190 = 0<32>
	v191 = v189 == v190
	loc115 = v191
	v189 = loc115
	branch !v189 l000F7193
	// succ:  l000F718A l000F7193
l000F718A:
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc97 = v189
	goto l000F722E
	// succ:  l000F722E
l000F7193:
	v189 = loc19
	v190 = 0xC<32>
	v189 = v189 + v190
	loc116 = v189
	v189 = loc116
	v189 = Mem0[v189:word32]
	loc117 = v189
	v189 = loc19
	v190 = 0x10<32>
	v189 = v189 + v190
	loc118 = v189
	v189 = loc118
	v189 = Mem0[v189:word32]
	loc119 = v189
	v189 = loc117
	v190 = loc119
	v191 = v189 == v190
	loc120 = v191
	v189 = loc120
	branch !v189 l000F71FC
	// succ:  l000F71BA l000F71FC
l000F71BA:
	v189 = loc19
	v189 = Mem0[v189:word32]
	loc121 = v189
	v189 = loc121
	v190 = 0x24<32>
	v189 = v189 + v190
	loc122 = v189
	v189 = loc122
	v189 = Mem0[v189:word32]
	loc123 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc123
	v190 = loc19
	v189 = invoke_ii(v189, v190)
	loc124 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc125 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc125
	v190 = 1<32>
	v189 = v189 & v190
	loc126 = v189
	v189 = loc126
	branch !v189 l000F71F6
	// succ:  l000F71EE l000F71F6
l000F71EE:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F71F6:
	v189 = loc124
	loc8 = v189
	// succ:  l000F71FA
l000F71FA:
	goto l000F7207
	// succ:  l000F7207
l000F71FC:
	v189 = loc117
	v189 = Mem0[v189:word32]
	loc127 = v189
	v189 = loc127
	loc8 = v189
	// succ:  l000F7207
l000F7207:
	v189 = loc8
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc128 = v191
	v189 = loc128
	branch !v189 l000F7225
	// succ:  l000F7215 l000F7225
l000F7215:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc97 = v189
	goto l000F722D
	// succ:  l000F722D
l000F7225:
	v189 = loc19
	loc18 = v189
	v189 = 0<32>
	loc97 = v189
	// succ:  l000F722D
l000F722D:
	// succ:  l000F722E
l000F722E:
	v189 = arg2
	v189 = Mem0[v189:word32]
	loc129 = v189
	v189 = loc129
	v190 = 0<32>
	v191 = v189 == v190
	loc130 = v191
	// succ:  l000F7240
l000F7240:
	v189 = loc130
	branch !v189 l000F724D
	// succ:  l000F7247 l000F724D
l000F7247:
	v189 = 0x14<32>
	loc190 = v189
	goto l000F7319
	// succ:  l000F7319
l000F724D:
	v189 = loc129
	v190 = 0xC<32>
	v189 = v189 + v190
	loc131 = v189
	v189 = loc131
	v189 = Mem0[v189:word32]
	loc132 = v189
	v189 = loc129
	v190 = 0x10<32>
	v189 = v189 + v190
	loc133 = v189
	v189 = loc133
	v189 = Mem0[v189:word32]
	loc134 = v189
	v189 = loc132
	v190 = loc134
	v191 = v189 == v190
	loc135 = v191
	v189 = loc135
	branch !v189 l000F72D0
	// succ:  l000F7280 l000F72D0
l000F7280:
	v189 = loc129
	v189 = Mem0[v189:word32]
	loc136 = v189
	v189 = loc136
	v190 = 0x24<32>
	v189 = v189 + v190
	loc137 = v189
	v189 = loc137
	v189 = Mem0[v189:word32]
	loc138 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc138
	v190 = loc129
	v189 = invoke_ii(v189, v190)
	loc139 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc140 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc140
	v190 = 1<32>
	v189 = v189 & v190
	loc141 = v189
	v189 = loc141
	branch !v189 l000F72C9
	// succ:  l000F72C1 l000F72C9
l000F72C1:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F72C9:
	v189 = loc139
	loc10 = v189
	// succ:  l000F72CE
l000F72CE:
	goto l000F72DE
	// succ:  l000F72DE
l000F72D0:
	v189 = loc132
	v189 = Mem0[v189:word32]
	loc142 = v189
	v189 = loc142
	loc10 = v189
	// succ:  l000F72DE
l000F72DE:
	v189 = loc10
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc144 = v191
	v189 = loc144
	branch !v189 l000F72FB
	// succ:  l000F72EC l000F72FB
l000F72EC:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x14<32>
	loc190 = v189
	goto l000F731A
	// succ:  l000F731A
l000F72FB:
	v189 = loc97
	branch !v189 l000F7307
	// succ:  l000F72FF l000F7307
l000F72FF:
	v189 = loc129
	loc98 = v189
	goto l000F731A
	// succ:  l000F731A
l000F7307:
	v189 = loc12
	loc16 = v189
	v189 = loc129
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F7317:
	// succ:  l000F7318
l000F7318:
	// succ:  l000F7319
l000F7319:
	// succ:  l000F731A
l000F731A:
	v189 = loc190
	v190 = 0x14<32>
	v191 = v189 == v190
	branch !v191 l000F7342
	// succ:  l000F7323 l000F7342
l000F7323:
	v189 = 0<32>
	loc190 = v189
	v189 = loc97
	branch !v189 l000F733C
	// succ:  l000F732C l000F733C
l000F732C:
	v189 = loc12
	loc16 = v189
	v189 = 0<32>
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F733C:
	v189 = 0<32>
	loc98 = v189
	// succ:  l000F7340
l000F7340:
	// succ:  l000F7342
l000F7342:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc145 = v189
	v189 = loc100
	v197 = Mem0[v189:int8]
	v189 = CONVERT(v197, int8, word32)
	loc146 = v189
	v189 = loc146
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc147 = v191
	v189 = loc113
	v189 = Mem0[v189:word32]
	loc148 = v189
	v189 = loc146
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc149 = v189
	v189 = loc147
	branch !v189 l000F737C
	// succ:  l000F7378 l000F737C
l000F7378:
	v189 = loc148
	goto l000F737F
	// succ:  l000F737F
l000F737C:
	v189 = loc149
	// succ:  l000F737F
l000F737F:
	loc150 = v189
	v189 = loc12
	v190 = loc150
	v189 = v189 + v190
	loc151 = v189
	v189 = loc145
	v190 = loc151
	v191 = v189 == v190
	loc152 = v191
	v189 = loc152
	branch !v189 l000F7493
	// succ:  l000F739B l000F7493
l000F739B:
	v189 = loc150
	v190 = 1<32>
	v189 = v189 << v190
	loc153 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc153
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc155 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc155
	v190 = 1<32>
	v189 = v189 & v190
	loc156 = v189
	v189 = loc156
	branch !v189 l000F73D4
	// succ:  l000F73CC l000F73D4
l000F73CC:
	v189 = 0x1F<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F73D4:
	v189 = loc100
	v198 = Mem0[v189:int8]
	v189 = CONVERT(v198, int8, word32)
	loc157 = v189
	v189 = loc157
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc158 = v191
	v189 = loc158
	branch !v189 l000F7415
	// succ:  l000F73F0 l000F7415
l000F73F0:
	v189 = loc114
	v189 = Mem0[v189:word32]
	loc159 = v189
	v189 = loc159
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc160 = v189
	v189 = loc160
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc189 = v189
	v189 = loc189
	loc161 = v189
	goto l000F741A
	// succ:  l000F741A
l000F7415:
	v189 = 0xA<32>
	loc161 = v189
	// succ:  l000F741A
l000F741A:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc161
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc162 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc162
	v190 = 1<32>
	v189 = v189 & v190
	loc163 = v189
	v189 = loc163
	branch !v189 l000F744B
	// succ:  l000F7443 l000F744B
l000F7443:
	v189 = 0x1F<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F744B:
	v189 = loc100
	v199 = Mem0[v189:int8]
	v189 = CONVERT(v199, int8, word32)
	loc164 = v189
	v189 = loc164
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc166 = v191
	v189 = loc176
	v189 = Mem0[v189:word32]
	loc167 = v189
	v189 = loc166
	branch !v189 l000F7474
	// succ:  l000F7470 l000F7474
l000F7470:
	v189 = loc167
	goto l000F7477
	// succ:  l000F7477
l000F7474:
	v189 = loc176
	// succ:  l000F7477
l000F7477:
	loc168 = v189
	v189 = loc168
	v190 = loc150
	v189 = v189 + v190
	loc169 = v189
	v189 = loc24
	v190 = loc169
	Mem0[v189:word32] = v190
	v189 = loc168
	loc14 = v189
	goto l000F7497
	// succ:  l000F7497
l000F7493:
	v189 = loc12
	loc14 = v189
	// succ:  l000F7497
l000F7497:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc179 = v189
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc180 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc181 = v189
	v189 = loc181
	v189 = Mem0[v189:word32]
	loc182 = v189
	v189 = loc180
	v190 = loc182
	v191 = v189 == v190
	loc183 = v191
	v189 = loc183
	branch !v189 l000F7511
	// succ:  l000F74C9 l000F7511
l000F74C9:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc184 = v189
	v189 = loc184
	v190 = 0x24<32>
	v189 = v189 + v190
	loc185 = v189
	v189 = loc185
	v189 = Mem0[v189:word32]
	loc186 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc186
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc25 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc26 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc26
	v190 = 1<32>
	v189 = v189 & v190
	loc27 = v189
	v189 = loc27
	branch !v189 l000F750B
	// succ:  l000F7503 l000F750B
l000F7503:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F750B:
	v189 = loc25
	loc11 = v189
	// succ:  l000F750F
l000F750F:
	goto l000F751D
	// succ:  l000F751D
l000F7511:
	v189 = loc180
	v189 = Mem0[v189:word32]
	loc28 = v189
	v189 = loc28
	loc11 = v189
	// succ:  l000F751D
l000F751D:
	v189 = loc154
	v189 = Mem0[v189:word32]
	loc29 = v189
	v189 = loc11
	v190 = loc68
	v192 = loc14
	v193 = loc24
	v200 = loc57
	v201 = loc29
	v202 = loc165
	v203 = loc35
	v204 = loc46
	v205 = loc143
	v189 = fn000F2F51(v189, v190, v192, v193, v200, v201, v202, v203, v204, v205)
	loc30 = v189
	v189 = loc30
	v190 = 0<32>
	v191 = v189 == v190
	loc31 = v191
	v189 = loc31
	v191 = v189 == 0<32>
	branch !v191 l000F755D
	// succ:  l000F754D l000F755D
l000F754D:
	v189 = loc14
	loc16 = v189
	v189 = loc98
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F755D:
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc32 = v189
	v189 = loc181
	v189 = Mem0[v189:word32]
	loc33 = v189
	v189 = loc32
	v190 = loc33
	v191 = v189 == v190
	loc34 = v191
	v189 = loc34
	branch !v189 l000F75BF
	// succ:  l000F7578 l000F75BF
l000F7578:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc36 = v189
	v189 = loc36
	v190 = 0x28<32>
	v189 = v189 + v190
	loc37 = v189
	v189 = loc37
	v189 = Mem0[v189:word32]
	loc38 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc38
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	v189 = Mem0[0x00140048<p32>:word32]
	loc39 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc39
	v190 = 1<32>
	v189 = v189 & v190
	loc40 = v189
	v189 = loc40
	branch !v189 l000F75B3
	// succ:  l000F75AB l000F75B3
l000F75AB:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F75DB
	// succ:  l000F75DB
l000F75B3:
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F7144
	// succ:  l000F7144
l000F75BD:
	goto l000F75D8
	// succ:  l000F75D8
l000F75BF:
	v189 = loc32
	v190 = 4<32>
	v189 = v189 + v190
	loc41 = v189
	v189 = loc179
	v190 = loc41
	Mem0[v189:word32] = v190
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F7144
	// succ:  l000F7144
l000F75D8:
	goto l000F7144
	// succ:  l000F7144
l000F75DB:
	v189 = loc190
	v190 = 0x1D<32>
	v191 = v189 == v190
	branch !v191 l000F75FA
	// succ:  l000F75E5 l000F75FA
l000F75E5:
	v189 = ___cxa_find_matching_catch_2()
	loc172 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc173 = v189
	v189 = loc172
	loc21 = v189
	v189 = loc173
	loc22 = v189
	goto l000F78A4
	// succ:  l000F78A4
l000F75FA:
	v189 = loc190
	v190 = 0x1F<32>
	v191 = v189 == v190
	branch !v191 l000F7617
	// succ:  l000F7602 l000F7617
l000F7602:
	v189 = ___cxa_find_matching_catch_2()
	loc177 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc178 = v189
	v189 = loc177
	loc21 = v189
	v189 = loc178
	loc22 = v189
	goto l000F78A3
	// succ:  l000F78A3
l000F7617:
	v189 = loc190
	v190 = 0x27<32>
	v191 = v189 == v190
	branch !v191 l000F78A3
	// succ:  l000F761F l000F78A3
l000F761F:
	v189 = loc165
	v190 = 0xB<32>
	v189 = v189 + v190
	loc42 = v189
	v189 = loc42
	v206 = Mem0[v189:int8]
	v189 = CONVERT(v206, int8, word32)
	loc43 = v189
	v189 = loc43
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc44 = v191
	v189 = loc165
	v190 = 4<32>
	v189 = v189 + v190
	loc45 = v189
	v189 = loc45
	v189 = Mem0[v189:word32]
	loc47 = v189
	v189 = loc43
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc48 = v189
	v189 = loc44
	branch !v189 l000F7659
	// succ:  l000F7656 l000F7659
l000F7656:
	v189 = loc47
	goto l000F765B
	// succ:  l000F765B
l000F7659:
	v189 = loc48
	// succ:  l000F765B
l000F765B:
	loc49 = v189
	v189 = loc49
	v190 = 0<32>
	v191 = v189 == v190
	loc50 = v191
	v189 = loc50
	v191 = v189 == 0<32>
	branch !v191 l000F76AA
	// succ:  l000F766A l000F76AA
l000F766A:
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc51 = v189
	v189 = loc51
	loc52 = v189
	v189 = loc35
	loc53 = v189
	v189 = loc52
	v190 = loc53
	v189 = v189 - v190
	loc54 = v189
	v189 = loc54
	v190 = 0xA0<32>
	v191 = v189 < v190
	loc55 = v191
	v189 = loc55
	branch !v189 l000F76A9
	// succ:  l000F768C l000F76A9
l000F768C:
	v189 = loc57
	v189 = Mem0[v189:word32]
	loc56 = v189
	v189 = loc51
	v190 = 4<32>
	v189 = v189 + v190
	loc58 = v189
	v189 = loc46
	v190 = loc58
	Mem0[v189:word32] = v190
	v189 = loc51
	v190 = loc56
	Mem0[v189:word32] = v190
	// succ:  l000F76A9
l000F76A9:
	// succ:  l000F76AA
l000F76AA:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc59 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x187<32>
	v190 = loc16
	v192 = loc59
	v193 = arg4
	v200 = loc68
	v189 = invoke_iiiii(v189, v190, v192, v193, v200)
	loc60 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc61 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc61
	v190 = 1<32>
	v189 = v189 & v190
	loc62 = v189
	// succ:  l000F76D3
l000F76D3:
	v189 = loc62
	v191 = v189 == 0<32>
	branch !v191 l000F788D
	// succ:  l000F76DA l000F788D
l000F76DA:
	v189 = arg5
	v190 = loc60
	v207 = SLICE(v190, word16, 0)
	Mem0[v189:word16] = v207
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc63 = v189
	v189 = loc165
	v190 = loc35
	v192 = loc63
	v193 = arg4
	fn000EC01D(v189, v190, v192, v193)
	v189 = loc18
	v190 = 0<32>
	v191 = v189 == v190
	loc64 = v191
	v189 = loc64
	branch !v189 l000F7704
	// succ:  l000F76FF l000F7704
l000F76FF:
	v189 = 1<32>
	loc99 = v189
	goto l000F7790
	// succ:  l000F7790
l000F7704:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc65 = v189
	v189 = loc65
	v189 = Mem0[v189:word32]
	loc66 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc67 = v189
	v189 = loc67
	v189 = Mem0[v189:word32]
	loc69 = v189
	v189 = loc66
	v190 = loc69
	v191 = v189 == v190
	loc70 = v191
	v189 = loc70
	branch !v189 l000F7768
	// succ:  l000F772B l000F7768
l000F772B:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc71 = v189
	v189 = loc71
	v190 = 0x24<32>
	v189 = v189 + v190
	loc72 = v189
	v189 = loc72
	v189 = Mem0[v189:word32]
	loc73 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc73
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc74 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc75 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc75
	v190 = 1<32>
	v189 = v189 & v190
	loc76 = v189
	v189 = loc76
	branch !v189 l000F7762
	// succ:  l000F775F l000F7762
l000F775F:
	goto l000F788D
	// succ:  l000F788D
l000F7762:
	v189 = loc74
	loc7 = v189
	// succ:  l000F7766
l000F7766:
	goto l000F7773
	// succ:  l000F7773
l000F7768:
	v189 = loc66
	v189 = Mem0[v189:word32]
	loc77 = v189
	v189 = loc77
	loc7 = v189
	// succ:  l000F7773
l000F7773:
	v189 = loc7
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc78 = v191
	v189 = loc78
	branch !v189 l000F778B
	// succ:  l000F777F l000F778B
l000F777F:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 1<32>
	loc99 = v189
	goto l000F778F
	// succ:  l000F778F
l000F778B:
	v189 = 0<32>
	loc99 = v189
	// succ:  l000F778F
l000F778F:
	// succ:  l000F7790
l000F7790:
	v189 = loc20
	v190 = 0<32>
	v191 = v189 == v190
	loc80 = v191
	// succ:  l000F7798
l000F7798:
	v189 = loc80
	branch !v189 l000F77A4
	// succ:  l000F779E l000F77A4
l000F779E:
	v189 = 0x37<32>
	loc190 = v189
	goto l000F783E
	// succ:  l000F783E
l000F77A4:
	v189 = loc20
	v190 = 0xC<32>
	v189 = v189 + v190
	loc81 = v189
	v189 = loc81
	v189 = Mem0[v189:word32]
	loc82 = v189
	v189 = loc20
	v190 = 0x10<32>
	v189 = v189 + v190
	loc83 = v189
	v189 = loc83
	v189 = Mem0[v189:word32]
	loc84 = v189
	v189 = loc82
	v190 = loc84
	v191 = v189 == v190
	loc85 = v191
	v189 = loc85
	branch !v189 l000F7808
	// succ:  l000F77CB l000F7808
l000F77CB:
	v189 = loc20
	v189 = Mem0[v189:word32]
	loc86 = v189
	v189 = loc86
	v190 = 0x24<32>
	v189 = v189 + v190
	loc87 = v189
	v189 = loc87
	v189 = Mem0[v189:word32]
	loc88 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc88
	v190 = loc20
	v189 = invoke_ii(v189, v190)
	loc89 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc91 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc91
	v190 = 1<32>
	v189 = v189 & v190
	loc92 = v189
	v189 = loc92
	branch !v189 l000F7802
	// succ:  l000F77FF l000F7802
l000F77FF:
	goto l000F788D
	// succ:  l000F788D
l000F7802:
	v189 = loc89
	loc9 = v189
	// succ:  l000F7806
l000F7806:
	goto l000F7813
	// succ:  l000F7813
l000F7808:
	v189 = loc82
	v189 = Mem0[v189:word32]
	loc93 = v189
	v189 = loc93
	loc9 = v189
	// succ:  l000F7813
l000F7813:
	v189 = loc9
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc94 = v191
	v189 = loc94
	branch !v189 l000F782E
	// succ:  l000F781F l000F782E
l000F781F:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x37<32>
	loc190 = v189
	goto l000F783F
	// succ:  l000F783F
l000F782E:
	v189 = loc99
	branch !v189 l000F7835
	// succ:  l000F7832 l000F7835
l000F7832:
	goto l000F783F
	// succ:  l000F783F
l000F7835:
	v189 = 0x39<32>
	loc190 = v189
	goto l000F783F
	// succ:  l000F783F
l000F783C:
	// succ:  l000F783D
l000F783D:
	// succ:  l000F783E
l000F783E:
	// succ:  l000F783F
l000F783F:
	v189 = loc190
	v190 = 0x37<32>
	v191 = v189 == v190
	branch !v191 l000F7853
	// succ:  l000F7848 l000F7853
l000F7848:
	v189 = loc99
	branch !v189 l000F7852
	// succ:  l000F784C l000F7852
l000F784C:
	v189 = 0x39<32>
	loc190 = v189
	// succ:  l000F7852
l000F7852:
	// succ:  l000F7853
l000F7853:
	v189 = loc190
	v190 = 0x39<32>
	v191 = v189 == v190
	branch !v191 l000F7871
	// succ:  l000F785B l000F7871
l000F785B:
	v189 = arg4
	v189 = Mem0[v189:word32]
	loc95 = v189
	v189 = loc95
	v190 = 2<32>
	v189 = v189 | v190
	loc96 = v189
	v189 = arg4
	v190 = loc96
	Mem0[v189:word32] = v190
	// succ:  l000F7871
l000F7871:
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc23 = v189
	v189 = loc176
	fn0011BAF7(v189)
	v189 = loc165
	fn0011BAF7(v189)
	v189 = loc191
	Mem0[0x00140030<p32>:word32] = v189
	v189 = loc23
	return v189
	// succ:  fn000F6FD6_exit
l000F788D:
	// succ:  l000F788D
l000F788D:
	v189 = ___cxa_find_matching_catch_2()
	loc174 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc175 = v189
	v189 = loc174
	loc21 = v189
	v189 = loc175
	loc22 = v189
	// succ:  l000F78A3
l000F78A3:
	// succ:  l000F78A3
l000F78A3:
	// succ:  l000F78A4
l000F78A4:
	v189 = loc21
	loc13 = v189
	v189 = loc22
	loc15 = v189
	// succ:  l000F78AD
l000F78AD:
	v189 = loc176
	fn0011BAF7(v189)
	v189 = loc165
	fn0011BAF7(v189)
	v189 = loc13
	___resumeException(v189)
	v189 = 0<32>
	return v189
	// succ:  fn000F6FD6_exit
l000F78C1:
	return v189
	// succ:  fn000F6FD6_exit
fn000F6FD6_exit:


// fn000F78C3
// Return size: 0
word32 fn000F78C3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F78C3_entry:
	// succ:  l000F78C3
l000F78C3:
	v189 = Mem0[0x00140030<p32>:word32]
	loc190 = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = 0x130<32>
	v189 = v189 + v190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = Mem0[0x00140034<p32>:word32]
	v191 = v189 >= v190
	branch !v191 l000F78DF
	// succ:  l000F78D9 l000F78DF
l000F78D9:
	v189 = 0x130<32>
	abortStackOverflow(v189)
	// succ:  l000F78DF
l000F78DF:
	v189 = loc190
	v190 = 0xC8<32>
	v189 = v189 + v190
	loc142 = v189
	v189 = loc190
	v190 = 0xC4<32>
	v189 = v189 + v190
	loc153 = v189
	v189 = loc190
	v190 = 0xB8<32>
	v189 = v189 + v190
	loc164 = v189
	v189 = loc190
	v190 = 0xAC<32>
	v189 = v189 + v190
	loc175 = v189
	v189 = loc190
	v190 = 0xA8<32>
	v189 = v189 + v190
	loc24 = v189
	v189 = loc190
	v190 = 8<32>
	v189 = v189 + v190
	loc35 = v189
	v189 = loc190
	v190 = 4<32>
	v189 = v189 + v190
	loc46 = v189
	v189 = loc190
	loc57 = v189
	v189 = arg3
	v189 = fn000EDE83(v189)
	loc67 = v189
	v189 = loc164
	v190 = arg3
	v192 = loc142
	v193 = loc153
	fn000F5C88(v189, v190, v192, v193)
	v189 = loc175
	v194 = 0<64>
	Mem0[v189:word64] = v194
	v189 = loc175
	v190 = 8<32>
	v189 = v189 + v190
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc6 = v189
	// succ:  l000F7953
l000F7953:
	v189 = loc6
	v190 = 3<32>
	v191 = v189 == v190
	loc186 = v191
	v189 = loc186
	branch !v189 l000F7965
	// succ:  l000F7962 l000F7965
l000F7962:
	goto l000F7984
	// succ:  l000F7984
l000F7965:
	v189 = loc175
	v190 = loc6
	v192 = 2<32>
	v190 = v190 << v192
	v189 = v189 + v190
	loc78 = v189
	v189 = loc78
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc6
	v190 = 1<32>
	v189 = v189 + v190
	loc89 = v189
	v189 = loc89
	loc6 = v189
	goto l000F78DF
	// succ:  l000F78DF
l000F7984:
	v189 = loc175
	v190 = 0xB<32>
	v189 = v189 + v190
	loc99 = v189
	v189 = loc99
	v195 = Mem0[v189:int8]
	v189 = CONVERT(v195, int8, word32)
	loc100 = v189
	v189 = loc100
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc101 = v191
	v189 = loc101
	branch !v189 l000F79CE
	// succ:  l000F79A6 l000F79CE
l000F79A6:
	v189 = loc175
	v190 = 8<32>
	v189 = v189 + v190
	loc102 = v189
	v189 = loc102
	v189 = Mem0[v189:word32]
	loc103 = v189
	v189 = loc103
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc104 = v189
	v189 = loc104
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc187 = v189
	v189 = loc187
	loc105 = v189
	goto l000F79D2
	// succ:  l000F79D2
l000F79CE:
	v189 = 0xA<32>
	loc105 = v189
	// succ:  l000F79D2
l000F79D2:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc175
	v192 = loc105
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc106 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc106
	v190 = 1<32>
	v189 = v189 & v190
	loc107 = v189
	v189 = loc107
	branch !v189 l000F7A0B
	// succ:  l000F79F6 l000F7A0B
l000F79F6:
	v189 = ___cxa_find_matching_catch_2()
	loc169 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc170 = v189
	v189 = loc169
	loc13 = v189
	v189 = loc170
	loc15 = v189
	goto l000F819B
	// succ:  l000F819B
l000F7A0B:
	v189 = loc99
	v196 = Mem0[v189:int8]
	v189 = CONVERT(v196, int8, word32)
	loc108 = v189
	v189 = loc108
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc109 = v191
	v189 = loc175
	v189 = Mem0[v189:word32]
	loc110 = v189
	v189 = loc109
	branch !v189 l000F7A2E
	// succ:  l000F7A2B l000F7A2E
l000F7A2B:
	v189 = loc110
	goto l000F7A31
	// succ:  l000F7A31
l000F7A2E:
	v189 = loc175
	// succ:  l000F7A31
l000F7A31:
	loc111 = v189
	v189 = loc24
	v190 = loc111
	Mem0[v189:word32] = v190
	v189 = loc46
	v190 = loc35
	Mem0[v189:word32] = v190
	v189 = loc57
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc175
	v190 = 4<32>
	v189 = v189 + v190
	loc112 = v189
	v189 = loc175
	v190 = 8<32>
	v189 = v189 + v190
	loc113 = v189
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc17 = v189
	v189 = loc111
	loc12 = v189
	v189 = loc17
	loc19 = v189
	// succ:  l000F7A6A
l000F7A6A:
	v189 = loc19
	v190 = 0<32>
	v191 = v189 == v190
	loc114 = v191
	v189 = loc114
	branch !v189 l000F7A80
	// succ:  l000F7A77 l000F7A80
l000F7A77:
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc96 = v189
	goto l000F7B19
	// succ:  l000F7B19
l000F7A80:
	v189 = loc19
	v190 = 0xC<32>
	v189 = v189 + v190
	loc115 = v189
	v189 = loc115
	v189 = Mem0[v189:word32]
	loc116 = v189
	v189 = loc19
	v190 = 0x10<32>
	v189 = v189 + v190
	loc117 = v189
	v189 = loc117
	v189 = Mem0[v189:word32]
	loc118 = v189
	v189 = loc116
	v190 = loc118
	v191 = v189 == v190
	loc119 = v191
	v189 = loc119
	branch !v189 l000F7AE9
	// succ:  l000F7AA7 l000F7AE9
l000F7AA7:
	v189 = loc19
	v189 = Mem0[v189:word32]
	loc120 = v189
	v189 = loc120
	v190 = 0x24<32>
	v189 = v189 + v190
	loc121 = v189
	v189 = loc121
	v189 = Mem0[v189:word32]
	loc122 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc122
	v190 = loc19
	v189 = invoke_ii(v189, v190)
	loc123 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc124 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc124
	v190 = 1<32>
	v189 = v189 & v190
	loc125 = v189
	v189 = loc125
	branch !v189 l000F7AE3
	// succ:  l000F7ADB l000F7AE3
l000F7ADB:
	v189 = 0x1D<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7AE3:
	v189 = loc123
	loc8 = v189
	// succ:  l000F7AE7
l000F7AE7:
	goto l000F7AF4
	// succ:  l000F7AF4
l000F7AE9:
	v189 = loc116
	v189 = Mem0[v189:word32]
	loc126 = v189
	v189 = loc126
	loc8 = v189
	// succ:  l000F7AF4
l000F7AF4:
	v189 = loc8
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc127 = v191
	v189 = loc127
	branch !v189 l000F7B10
	// succ:  l000F7B00 l000F7B10
l000F7B00:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc96 = v189
	goto l000F7B18
	// succ:  l000F7B18
l000F7B10:
	v189 = loc19
	loc18 = v189
	v189 = 0<32>
	loc96 = v189
	// succ:  l000F7B18
l000F7B18:
	// succ:  l000F7B19
l000F7B19:
	v189 = arg2
	v189 = Mem0[v189:word32]
	loc128 = v189
	v189 = loc128
	v190 = 0<32>
	v191 = v189 == v190
	loc129 = v191
	// succ:  l000F7B2B
l000F7B2B:
	v189 = loc129
	branch !v189 l000F7B38
	// succ:  l000F7B32 l000F7B38
l000F7B32:
	v189 = 0x14<32>
	loc189 = v189
	goto l000F7C04
	// succ:  l000F7C04
l000F7B38:
	v189 = loc128
	v190 = 0xC<32>
	v189 = v189 + v190
	loc130 = v189
	v189 = loc130
	v189 = Mem0[v189:word32]
	loc131 = v189
	v189 = loc128
	v190 = 0x10<32>
	v189 = v189 + v190
	loc132 = v189
	v189 = loc132
	v189 = Mem0[v189:word32]
	loc133 = v189
	v189 = loc131
	v190 = loc133
	v191 = v189 == v190
	loc134 = v191
	v189 = loc134
	branch !v189 l000F7BBB
	// succ:  l000F7B6B l000F7BBB
l000F7B6B:
	v189 = loc128
	v189 = Mem0[v189:word32]
	loc135 = v189
	v189 = loc135
	v190 = 0x24<32>
	v189 = v189 + v190
	loc136 = v189
	v189 = loc136
	v189 = Mem0[v189:word32]
	loc137 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc137
	v190 = loc128
	v189 = invoke_ii(v189, v190)
	loc138 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc139 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc139
	v190 = 1<32>
	v189 = v189 & v190
	loc140 = v189
	v189 = loc140
	branch !v189 l000F7BB4
	// succ:  l000F7BAC l000F7BB4
l000F7BAC:
	v189 = 0x1D<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7BB4:
	v189 = loc138
	loc10 = v189
	// succ:  l000F7BB9
l000F7BB9:
	goto l000F7BC9
	// succ:  l000F7BC9
l000F7BBB:
	v189 = loc131
	v189 = Mem0[v189:word32]
	loc141 = v189
	v189 = loc141
	loc10 = v189
	// succ:  l000F7BC9
l000F7BC9:
	v189 = loc10
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc143 = v191
	v189 = loc143
	branch !v189 l000F7BE6
	// succ:  l000F7BD7 l000F7BE6
l000F7BD7:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x14<32>
	loc189 = v189
	goto l000F7C05
	// succ:  l000F7C05
l000F7BE6:
	v189 = loc96
	branch !v189 l000F7BF2
	// succ:  l000F7BEA l000F7BF2
l000F7BEA:
	v189 = loc128
	loc97 = v189
	goto l000F7C05
	// succ:  l000F7C05
l000F7BF2:
	v189 = loc12
	loc16 = v189
	v189 = loc128
	loc20 = v189
	v189 = 0x27<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7C02:
	// succ:  l000F7C03
l000F7C03:
	// succ:  l000F7C04
l000F7C04:
	// succ:  l000F7C05
l000F7C05:
	v189 = loc189
	v190 = 0x14<32>
	v191 = v189 == v190
	branch !v191 l000F7C2D
	// succ:  l000F7C0E l000F7C2D
l000F7C0E:
	v189 = 0<32>
	loc189 = v189
	v189 = loc96
	branch !v189 l000F7C27
	// succ:  l000F7C17 l000F7C27
l000F7C17:
	v189 = loc12
	loc16 = v189
	v189 = 0<32>
	loc20 = v189
	v189 = 0x27<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7C27:
	v189 = 0<32>
	loc97 = v189
	// succ:  l000F7C2B
l000F7C2B:
	// succ:  l000F7C2D
l000F7C2D:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc144 = v189
	v189 = loc99
	v197 = Mem0[v189:int8]
	v189 = CONVERT(v197, int8, word32)
	loc145 = v189
	v189 = loc145
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc146 = v191
	v189 = loc112
	v189 = Mem0[v189:word32]
	loc147 = v189
	v189 = loc145
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc148 = v189
	v189 = loc146
	branch !v189 l000F7C67
	// succ:  l000F7C63 l000F7C67
l000F7C63:
	v189 = loc147
	goto l000F7C6A
	// succ:  l000F7C6A
l000F7C67:
	v189 = loc148
	// succ:  l000F7C6A
l000F7C6A:
	loc149 = v189
	v189 = loc12
	v190 = loc149
	v189 = v189 + v190
	loc150 = v189
	v189 = loc144
	v190 = loc150
	v191 = v189 == v190
	loc151 = v191
	v189 = loc151
	branch !v189 l000F7D7E
	// succ:  l000F7C86 l000F7D7E
l000F7C86:
	v189 = loc149
	v190 = 1<32>
	v189 = v189 << v190
	loc152 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc175
	v192 = loc152
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc154 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc154
	v190 = 1<32>
	v189 = v189 & v190
	loc155 = v189
	v189 = loc155
	branch !v189 l000F7CBF
	// succ:  l000F7CB7 l000F7CBF
l000F7CB7:
	v189 = 0x1F<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7CBF:
	v189 = loc99
	v198 = Mem0[v189:int8]
	v189 = CONVERT(v198, int8, word32)
	loc156 = v189
	v189 = loc156
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc157 = v191
	v189 = loc157
	branch !v189 l000F7D00
	// succ:  l000F7CDB l000F7D00
l000F7CDB:
	v189 = loc113
	v189 = Mem0[v189:word32]
	loc158 = v189
	v189 = loc158
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc159 = v189
	v189 = loc159
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc188 = v189
	v189 = loc188
	loc160 = v189
	goto l000F7D05
	// succ:  l000F7D05
l000F7D00:
	v189 = 0xA<32>
	loc160 = v189
	// succ:  l000F7D05
l000F7D05:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc175
	v192 = loc160
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc161 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc161
	v190 = 1<32>
	v189 = v189 & v190
	loc162 = v189
	v189 = loc162
	branch !v189 l000F7D36
	// succ:  l000F7D2E l000F7D36
l000F7D2E:
	v189 = 0x1F<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7D36:
	v189 = loc99
	v199 = Mem0[v189:int8]
	v189 = CONVERT(v199, int8, word32)
	loc163 = v189
	v189 = loc163
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc165 = v191
	v189 = loc175
	v189 = Mem0[v189:word32]
	loc166 = v189
	v189 = loc165
	branch !v189 l000F7D5F
	// succ:  l000F7D5B l000F7D5F
l000F7D5B:
	v189 = loc166
	goto l000F7D62
	// succ:  l000F7D62
l000F7D5F:
	v189 = loc175
	// succ:  l000F7D62
l000F7D62:
	loc167 = v189
	v189 = loc167
	v190 = loc149
	v189 = v189 + v190
	loc168 = v189
	v189 = loc24
	v190 = loc168
	Mem0[v189:word32] = v190
	v189 = loc167
	loc14 = v189
	goto l000F7D82
	// succ:  l000F7D82
l000F7D7E:
	v189 = loc12
	loc14 = v189
	// succ:  l000F7D82
l000F7D82:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc178 = v189
	v189 = loc178
	v189 = Mem0[v189:word32]
	loc179 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc180 = v189
	v189 = loc180
	v189 = Mem0[v189:word32]
	loc181 = v189
	v189 = loc179
	v190 = loc181
	v191 = v189 == v190
	loc182 = v191
	v189 = loc182
	branch !v189 l000F7DFC
	// succ:  l000F7DB4 l000F7DFC
l000F7DB4:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc183 = v189
	v189 = loc183
	v190 = 0x24<32>
	v189 = v189 + v190
	loc184 = v189
	v189 = loc184
	v189 = Mem0[v189:word32]
	loc185 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc185
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc25 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc26 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc26
	v190 = 1<32>
	v189 = v189 & v190
	loc27 = v189
	v189 = loc27
	branch !v189 l000F7DF6
	// succ:  l000F7DEE l000F7DF6
l000F7DEE:
	v189 = 0x1D<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7DF6:
	v189 = loc25
	loc11 = v189
	// succ:  l000F7DFA
l000F7DFA:
	goto l000F7E08
	// succ:  l000F7E08
l000F7DFC:
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc28 = v189
	v189 = loc28
	loc11 = v189
	// succ:  l000F7E08
l000F7E08:
	v189 = loc153
	v189 = Mem0[v189:word32]
	loc29 = v189
	v189 = loc11
	v190 = loc67
	v192 = loc14
	v193 = loc24
	v200 = loc57
	v201 = loc29
	v202 = loc164
	v203 = loc35
	v204 = loc46
	v205 = loc142
	v189 = fn000F2F51(v189, v190, v192, v193, v200, v201, v202, v203, v204, v205)
	loc30 = v189
	v189 = loc30
	v190 = 0<32>
	v191 = v189 == v190
	loc31 = v191
	v189 = loc31
	v191 = v189 == 0<32>
	branch !v191 l000F7E48
	// succ:  l000F7E38 l000F7E48
l000F7E38:
	v189 = loc14
	loc16 = v189
	v189 = loc97
	loc20 = v189
	v189 = 0x27<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7E48:
	v189 = loc178
	v189 = Mem0[v189:word32]
	loc32 = v189
	v189 = loc180
	v189 = Mem0[v189:word32]
	loc33 = v189
	v189 = loc32
	v190 = loc33
	v191 = v189 == v190
	loc34 = v191
	v189 = loc34
	branch !v189 l000F7EAA
	// succ:  l000F7E63 l000F7EAA
l000F7E63:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc36 = v189
	v189 = loc36
	v190 = 0x28<32>
	v189 = v189 + v190
	loc37 = v189
	v189 = loc37
	v189 = Mem0[v189:word32]
	loc38 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc38
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	v189 = Mem0[0x00140048<p32>:word32]
	loc39 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc39
	v190 = 1<32>
	v189 = v189 & v190
	loc40 = v189
	v189 = loc40
	branch !v189 l000F7E9E
	// succ:  l000F7E96 l000F7E9E
l000F7E96:
	v189 = 0x1D<32>
	loc189 = v189
	goto l000F7EC6
	// succ:  l000F7EC6
l000F7E9E:
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F7A31
	// succ:  l000F7A31
l000F7EA8:
	goto l000F7EC3
	// succ:  l000F7EC3
l000F7EAA:
	v189 = loc32
	v190 = 4<32>
	v189 = v189 + v190
	loc41 = v189
	v189 = loc178
	v190 = loc41
	Mem0[v189:word32] = v190
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F7A31
	// succ:  l000F7A31
l000F7EC3:
	goto l000F7A31
	// succ:  l000F7A31
l000F7EC6:
	v189 = loc189
	v190 = 0x1D<32>
	v191 = v189 == v190
	branch !v191 l000F7EE5
	// succ:  l000F7ED0 l000F7EE5
l000F7ED0:
	v189 = ___cxa_find_matching_catch_2()
	loc171 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc172 = v189
	v189 = loc171
	loc21 = v189
	v189 = loc172
	loc22 = v189
	goto l000F8192
	// succ:  l000F8192
l000F7EE5:
	v189 = loc189
	v190 = 0x1F<32>
	v191 = v189 == v190
	branch !v191 l000F7F02
	// succ:  l000F7EED l000F7F02
l000F7EED:
	v189 = ___cxa_find_matching_catch_2()
	loc176 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc177 = v189
	v189 = loc176
	loc21 = v189
	v189 = loc177
	loc22 = v189
	goto l000F8191
	// succ:  l000F8191
l000F7F02:
	v189 = loc189
	v190 = 0x27<32>
	v191 = v189 == v190
	branch !v191 l000F8191
	// succ:  l000F7F0A l000F8191
l000F7F0A:
	v189 = loc164
	v190 = 0xB<32>
	v189 = v189 + v190
	loc42 = v189
	v189 = loc42
	v206 = Mem0[v189:int8]
	v189 = CONVERT(v206, int8, word32)
	loc43 = v189
	v189 = loc43
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc44 = v191
	v189 = loc164
	v190 = 4<32>
	v189 = v189 + v190
	loc45 = v189
	v189 = loc45
	v189 = Mem0[v189:word32]
	loc47 = v189
	v189 = loc43
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc48 = v189
	v189 = loc44
	branch !v189 l000F7F44
	// succ:  l000F7F41 l000F7F44
l000F7F41:
	v189 = loc47
	goto l000F7F46
	// succ:  l000F7F46
l000F7F44:
	v189 = loc48
	// succ:  l000F7F46
l000F7F46:
	loc49 = v189
	v189 = loc49
	v190 = 0<32>
	v191 = v189 == v190
	loc50 = v191
	v189 = loc50
	v191 = v189 == 0<32>
	branch !v191 l000F7F95
	// succ:  l000F7F55 l000F7F95
l000F7F55:
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc51 = v189
	v189 = loc51
	loc52 = v189
	v189 = loc35
	loc53 = v189
	v189 = loc52
	v190 = loc53
	v189 = v189 - v190
	loc54 = v189
	v189 = loc54
	v190 = 0xA0<32>
	v191 = v189 < v190
	loc55 = v191
	v189 = loc55
	branch !v189 l000F7F94
	// succ:  l000F7F77 l000F7F94
l000F7F77:
	v189 = loc57
	v189 = Mem0[v189:word32]
	loc56 = v189
	v189 = loc51
	v190 = 4<32>
	v189 = v189 + v190
	loc58 = v189
	v189 = loc46
	v190 = loc58
	Mem0[v189:word32] = v190
	v189 = loc51
	v190 = loc56
	Mem0[v189:word32] = v190
	// succ:  l000F7F94
l000F7F94:
	// succ:  l000F7F95
l000F7F95:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc59 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x188<32>
	v190 = loc16
	v192 = loc59
	v193 = arg4
	v200 = loc67
	v207 = fn0011F5F3(v189, v190, v192, v193, v200)
	loc191 = v207
	v189 = Mem0[0x00140048<p32>:word32]
	loc60 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc60
	v190 = 1<32>
	v189 = v189 & v190
	loc61 = v189
	// succ:  l000F7FC0
l000F7FC0:
	v189 = loc61
	v191 = v189 == 0<32>
	branch !v191 l000F817B
	// succ:  l000F7FC7 l000F817B
l000F7FC7:
	v189 = arg5
	v194 = loc191
	Mem0[v189:word64] = v194
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc62 = v189
	v189 = loc164
	v190 = loc35
	v192 = loc62
	v193 = arg4
	fn000EC01D(v189, v190, v192, v193)
	v189 = loc18
	v190 = 0<32>
	v191 = v189 == v190
	loc63 = v191
	v189 = loc63
	branch !v189 l000F7FF2
	// succ:  l000F7FED l000F7FF2
l000F7FED:
	v189 = 1<32>
	loc98 = v189
	goto l000F807E
	// succ:  l000F807E
l000F7FF2:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc64 = v189
	v189 = loc64
	v189 = Mem0[v189:word32]
	loc65 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc66 = v189
	v189 = loc66
	v189 = Mem0[v189:word32]
	loc68 = v189
	v189 = loc65
	v190 = loc68
	v191 = v189 == v190
	loc69 = v191
	v189 = loc69
	branch !v189 l000F8056
	// succ:  l000F8019 l000F8056
l000F8019:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc70 = v189
	v189 = loc70
	v190 = 0x24<32>
	v189 = v189 + v190
	loc71 = v189
	v189 = loc71
	v189 = Mem0[v189:word32]
	loc72 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc72
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc73 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc74 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc74
	v190 = 1<32>
	v189 = v189 & v190
	loc75 = v189
	v189 = loc75
	branch !v189 l000F8050
	// succ:  l000F804D l000F8050
l000F804D:
	goto l000F817B
	// succ:  l000F817B
l000F8050:
	v189 = loc73
	loc7 = v189
	// succ:  l000F8054
l000F8054:
	goto l000F8061
	// succ:  l000F8061
l000F8056:
	v189 = loc65
	v189 = Mem0[v189:word32]
	loc76 = v189
	v189 = loc76
	loc7 = v189
	// succ:  l000F8061
l000F8061:
	v189 = loc7
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc77 = v191
	v189 = loc77
	branch !v189 l000F8079
	// succ:  l000F806D l000F8079
l000F806D:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 1<32>
	loc98 = v189
	goto l000F807D
	// succ:  l000F807D
l000F8079:
	v189 = 0<32>
	loc98 = v189
	// succ:  l000F807D
l000F807D:
	// succ:  l000F807E
l000F807E:
	v189 = loc20
	v190 = 0<32>
	v191 = v189 == v190
	loc79 = v191
	// succ:  l000F8086
l000F8086:
	v189 = loc79
	branch !v189 l000F8092
	// succ:  l000F808C l000F8092
l000F808C:
	v189 = 0x37<32>
	loc189 = v189
	goto l000F812C
	// succ:  l000F812C
l000F8092:
	v189 = loc20
	v190 = 0xC<32>
	v189 = v189 + v190
	loc80 = v189
	v189 = loc80
	v189 = Mem0[v189:word32]
	loc81 = v189
	v189 = loc20
	v190 = 0x10<32>
	v189 = v189 + v190
	loc82 = v189
	v189 = loc82
	v189 = Mem0[v189:word32]
	loc83 = v189
	v189 = loc81
	v190 = loc83
	v191 = v189 == v190
	loc84 = v191
	v189 = loc84
	branch !v189 l000F80F6
	// succ:  l000F80B9 l000F80F6
l000F80B9:
	v189 = loc20
	v189 = Mem0[v189:word32]
	loc85 = v189
	v189 = loc85
	v190 = 0x24<32>
	v189 = v189 + v190
	loc86 = v189
	v189 = loc86
	v189 = Mem0[v189:word32]
	loc87 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc87
	v190 = loc20
	v189 = invoke_ii(v189, v190)
	loc88 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc90 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc90
	v190 = 1<32>
	v189 = v189 & v190
	loc91 = v189
	v189 = loc91
	branch !v189 l000F80F0
	// succ:  l000F80ED l000F80F0
l000F80ED:
	goto l000F817B
	// succ:  l000F817B
l000F80F0:
	v189 = loc88
	loc9 = v189
	// succ:  l000F80F4
l000F80F4:
	goto l000F8101
	// succ:  l000F8101
l000F80F6:
	v189 = loc81
	v189 = Mem0[v189:word32]
	loc92 = v189
	v189 = loc92
	loc9 = v189
	// succ:  l000F8101
l000F8101:
	v189 = loc9
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc93 = v191
	v189 = loc93
	branch !v189 l000F811C
	// succ:  l000F810D l000F811C
l000F810D:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x37<32>
	loc189 = v189
	goto l000F812D
	// succ:  l000F812D
l000F811C:
	v189 = loc98
	branch !v189 l000F8123
	// succ:  l000F8120 l000F8123
l000F8120:
	goto l000F812D
	// succ:  l000F812D
l000F8123:
	v189 = 0x39<32>
	loc189 = v189
	goto l000F812D
	// succ:  l000F812D
l000F812A:
	// succ:  l000F812B
l000F812B:
	// succ:  l000F812C
l000F812C:
	// succ:  l000F812D
l000F812D:
	v189 = loc189
	v190 = 0x37<32>
	v191 = v189 == v190
	branch !v191 l000F8141
	// succ:  l000F8136 l000F8141
l000F8136:
	v189 = loc98
	branch !v189 l000F8140
	// succ:  l000F813A l000F8140
l000F813A:
	v189 = 0x39<32>
	loc189 = v189
	// succ:  l000F8140
l000F8140:
	// succ:  l000F8141
l000F8141:
	v189 = loc189
	v190 = 0x39<32>
	v191 = v189 == v190
	branch !v191 l000F815F
	// succ:  l000F8149 l000F815F
l000F8149:
	v189 = arg4
	v189 = Mem0[v189:word32]
	loc94 = v189
	v189 = loc94
	v190 = 2<32>
	v189 = v189 | v190
	loc95 = v189
	v189 = arg4
	v190 = loc95
	Mem0[v189:word32] = v190
	// succ:  l000F815F
l000F815F:
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc23 = v189
	v189 = loc175
	fn0011BAF7(v189)
	v189 = loc164
	fn0011BAF7(v189)
	v189 = loc190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = loc23
	return v189
	// succ:  fn000F78C3_exit
l000F817B:
	// succ:  l000F817B
l000F817B:
	v189 = ___cxa_find_matching_catch_2()
	loc173 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc174 = v189
	v189 = loc173
	loc21 = v189
	v189 = loc174
	loc22 = v189
	// succ:  l000F8191
l000F8191:
	// succ:  l000F8191
l000F8191:
	// succ:  l000F8192
l000F8192:
	v189 = loc21
	loc13 = v189
	v189 = loc22
	loc15 = v189
	// succ:  l000F819B
l000F819B:
	v189 = loc175
	fn0011BAF7(v189)
	v189 = loc164
	fn0011BAF7(v189)
	v189 = loc13
	___resumeException(v189)
	v189 = 0<32>
	return v189
	// succ:  fn000F78C3_exit
l000F81AF:
	return v189
	// succ:  fn000F78C3_exit
fn000F78C3_exit:


// fn000F81B1
// Return size: 0
word32 fn000F81B1(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000F81B1_entry:
	// succ:  l000F81B1
l000F81B1:
	v189 = Mem0[0x00140030<p32>:word32]
	loc191 = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = 0x130<32>
	v189 = v189 + v190
	Mem0[0x00140030<p32>:word32] = v189
	v189 = Mem0[0x00140030<p32>:word32]
	v190 = Mem0[0x00140034<p32>:word32]
	v191 = v189 >= v190
	branch !v191 l000F81CD
	// succ:  l000F81C7 l000F81CD
l000F81C7:
	v189 = 0x130<32>
	abortStackOverflow(v189)
	// succ:  l000F81CD
l000F81CD:
	v189 = loc191
	v190 = 0xC8<32>
	v189 = v189 + v190
	loc143 = v189
	v189 = loc191
	v190 = 0xC4<32>
	v189 = v189 + v190
	loc154 = v189
	v189 = loc191
	v190 = 0xB8<32>
	v189 = v189 + v190
	loc165 = v189
	v189 = loc191
	v190 = 0xAC<32>
	v189 = v189 + v190
	loc176 = v189
	v189 = loc191
	v190 = 0xA8<32>
	v189 = v189 + v190
	loc24 = v189
	v189 = loc191
	v190 = 8<32>
	v189 = v189 + v190
	loc35 = v189
	v189 = loc191
	v190 = 4<32>
	v189 = v189 + v190
	loc46 = v189
	v189 = loc191
	loc57 = v189
	v189 = arg3
	v189 = fn000EDE83(v189)
	loc68 = v189
	v189 = loc165
	v190 = arg3
	v192 = loc143
	v193 = loc154
	fn000F5C88(v189, v190, v192, v193)
	v189 = loc176
	v194 = 0<64>
	Mem0[v189:word64] = v194
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc6 = v189
	// succ:  l000F8241
l000F8241:
	v189 = loc6
	v190 = 3<32>
	v191 = v189 == v190
	loc187 = v191
	v189 = loc187
	branch !v189 l000F8253
	// succ:  l000F8250 l000F8253
l000F8250:
	goto l000F8272
	// succ:  l000F8272
l000F8253:
	v189 = loc176
	v190 = loc6
	v192 = 2<32>
	v190 = v190 << v192
	v189 = v189 + v190
	loc79 = v189
	v189 = loc79
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc6
	v190 = 1<32>
	v189 = v189 + v190
	loc90 = v189
	v189 = loc90
	loc6 = v189
	goto l000F81CD
	// succ:  l000F81CD
l000F8272:
	v189 = loc176
	v190 = 0xB<32>
	v189 = v189 + v190
	loc100 = v189
	v189 = loc100
	v195 = Mem0[v189:int8]
	v189 = CONVERT(v195, int8, word32)
	loc101 = v189
	v189 = loc101
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc102 = v191
	v189 = loc102
	branch !v189 l000F82BC
	// succ:  l000F8294 l000F82BC
l000F8294:
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	loc103 = v189
	v189 = loc103
	v189 = Mem0[v189:word32]
	loc104 = v189
	v189 = loc104
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc105 = v189
	v189 = loc105
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc188 = v189
	v189 = loc188
	loc106 = v189
	goto l000F82C0
	// succ:  l000F82C0
l000F82BC:
	v189 = 0xA<32>
	loc106 = v189
	// succ:  l000F82C0
l000F82C0:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc106
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc107 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc107
	v190 = 1<32>
	v189 = v189 & v190
	loc108 = v189
	v189 = loc108
	branch !v189 l000F82F9
	// succ:  l000F82E4 l000F82F9
l000F82E4:
	v189 = ___cxa_find_matching_catch_2()
	loc170 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc171 = v189
	v189 = loc170
	loc13 = v189
	v189 = loc171
	loc15 = v189
	goto l000F8A88
	// succ:  l000F8A88
l000F82F9:
	v189 = loc100
	v196 = Mem0[v189:int8]
	v189 = CONVERT(v196, int8, word32)
	loc109 = v189
	v189 = loc109
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc110 = v191
	v189 = loc176
	v189 = Mem0[v189:word32]
	loc111 = v189
	v189 = loc110
	branch !v189 l000F831C
	// succ:  l000F8319 l000F831C
l000F8319:
	v189 = loc111
	goto l000F831F
	// succ:  l000F831F
l000F831C:
	v189 = loc176
	// succ:  l000F831F
l000F831F:
	loc112 = v189
	v189 = loc24
	v190 = loc112
	Mem0[v189:word32] = v190
	v189 = loc46
	v190 = loc35
	Mem0[v189:word32] = v190
	v189 = loc57
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = loc176
	v190 = 4<32>
	v189 = v189 + v190
	loc113 = v189
	v189 = loc176
	v190 = 8<32>
	v189 = v189 + v190
	loc114 = v189
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc17 = v189
	v189 = loc112
	loc12 = v189
	v189 = loc17
	loc19 = v189
	// succ:  l000F8358
l000F8358:
	v189 = loc19
	v190 = 0<32>
	v191 = v189 == v190
	loc115 = v191
	v189 = loc115
	branch !v189 l000F836E
	// succ:  l000F8365 l000F836E
l000F8365:
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc97 = v189
	goto l000F8409
	// succ:  l000F8409
l000F836E:
	v189 = loc19
	v190 = 0xC<32>
	v189 = v189 + v190
	loc116 = v189
	v189 = loc116
	v189 = Mem0[v189:word32]
	loc117 = v189
	v189 = loc19
	v190 = 0x10<32>
	v189 = v189 + v190
	loc118 = v189
	v189 = loc118
	v189 = Mem0[v189:word32]
	loc119 = v189
	v189 = loc117
	v190 = loc119
	v191 = v189 == v190
	loc120 = v191
	v189 = loc120
	branch !v189 l000F83D7
	// succ:  l000F8395 l000F83D7
l000F8395:
	v189 = loc19
	v189 = Mem0[v189:word32]
	loc121 = v189
	v189 = loc121
	v190 = 0x24<32>
	v189 = v189 + v190
	loc122 = v189
	v189 = loc122
	v189 = Mem0[v189:word32]
	loc123 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc123
	v190 = loc19
	v189 = invoke_ii(v189, v190)
	loc124 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc125 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc125
	v190 = 1<32>
	v189 = v189 & v190
	loc126 = v189
	v189 = loc126
	branch !v189 l000F83D1
	// succ:  l000F83C9 l000F83D1
l000F83C9:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F83D1:
	v189 = loc124
	loc8 = v189
	// succ:  l000F83D5
l000F83D5:
	goto l000F83E2
	// succ:  l000F83E2
l000F83D7:
	v189 = loc117
	v189 = Mem0[v189:word32]
	loc127 = v189
	v189 = loc127
	loc8 = v189
	// succ:  l000F83E2
l000F83E2:
	v189 = loc8
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc128 = v191
	v189 = loc128
	branch !v189 l000F8400
	// succ:  l000F83F0 l000F8400
l000F83F0:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0<32>
	loc18 = v189
	v189 = 1<32>
	loc97 = v189
	goto l000F8408
	// succ:  l000F8408
l000F8400:
	v189 = loc19
	loc18 = v189
	v189 = 0<32>
	loc97 = v189
	// succ:  l000F8408
l000F8408:
	// succ:  l000F8409
l000F8409:
	v189 = arg2
	v189 = Mem0[v189:word32]
	loc129 = v189
	v189 = loc129
	v190 = 0<32>
	v191 = v189 == v190
	loc130 = v191
	// succ:  l000F841B
l000F841B:
	v189 = loc130
	branch !v189 l000F8428
	// succ:  l000F8422 l000F8428
l000F8422:
	v189 = 0x14<32>
	loc190 = v189
	goto l000F84F4
	// succ:  l000F84F4
l000F8428:
	v189 = loc129
	v190 = 0xC<32>
	v189 = v189 + v190
	loc131 = v189
	v189 = loc131
	v189 = Mem0[v189:word32]
	loc132 = v189
	v189 = loc129
	v190 = 0x10<32>
	v189 = v189 + v190
	loc133 = v189
	v189 = loc133
	v189 = Mem0[v189:word32]
	loc134 = v189
	v189 = loc132
	v190 = loc134
	v191 = v189 == v190
	loc135 = v191
	v189 = loc135
	branch !v189 l000F84AB
	// succ:  l000F845B l000F84AB
l000F845B:
	v189 = loc129
	v189 = Mem0[v189:word32]
	loc136 = v189
	v189 = loc136
	v190 = 0x24<32>
	v189 = v189 + v190
	loc137 = v189
	v189 = loc137
	v189 = Mem0[v189:word32]
	loc138 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc138
	v190 = loc129
	v189 = invoke_ii(v189, v190)
	loc139 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc140 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc140
	v190 = 1<32>
	v189 = v189 & v190
	loc141 = v189
	v189 = loc141
	branch !v189 l000F84A4
	// succ:  l000F849C l000F84A4
l000F849C:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F84A4:
	v189 = loc139
	loc10 = v189
	// succ:  l000F84A9
l000F84A9:
	goto l000F84B9
	// succ:  l000F84B9
l000F84AB:
	v189 = loc132
	v189 = Mem0[v189:word32]
	loc142 = v189
	v189 = loc142
	loc10 = v189
	// succ:  l000F84B9
l000F84B9:
	v189 = loc10
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc144 = v191
	v189 = loc144
	branch !v189 l000F84D6
	// succ:  l000F84C7 l000F84D6
l000F84C7:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x14<32>
	loc190 = v189
	goto l000F84F5
	// succ:  l000F84F5
l000F84D6:
	v189 = loc97
	branch !v189 l000F84E2
	// succ:  l000F84DA l000F84E2
l000F84DA:
	v189 = loc129
	loc98 = v189
	goto l000F84F5
	// succ:  l000F84F5
l000F84E2:
	v189 = loc12
	loc16 = v189
	v189 = loc129
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F84F2:
	// succ:  l000F84F3
l000F84F3:
	// succ:  l000F84F4
l000F84F4:
	// succ:  l000F84F5
l000F84F5:
	v189 = loc190
	v190 = 0x14<32>
	v191 = v189 == v190
	branch !v191 l000F851D
	// succ:  l000F84FE l000F851D
l000F84FE:
	v189 = 0<32>
	loc190 = v189
	v189 = loc97
	branch !v189 l000F8517
	// succ:  l000F8507 l000F8517
l000F8507:
	v189 = loc12
	loc16 = v189
	v189 = 0<32>
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F8517:
	v189 = 0<32>
	loc98 = v189
	// succ:  l000F851B
l000F851B:
	// succ:  l000F851D
l000F851D:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc145 = v189
	v189 = loc100
	v197 = Mem0[v189:int8]
	v189 = CONVERT(v197, int8, word32)
	loc146 = v189
	v189 = loc146
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc147 = v191
	v189 = loc113
	v189 = Mem0[v189:word32]
	loc148 = v189
	v189 = loc146
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc149 = v189
	v189 = loc147
	branch !v189 l000F8557
	// succ:  l000F8553 l000F8557
l000F8553:
	v189 = loc148
	goto l000F855A
	// succ:  l000F855A
l000F8557:
	v189 = loc149
	// succ:  l000F855A
l000F855A:
	loc150 = v189
	v189 = loc12
	v190 = loc150
	v189 = v189 + v190
	loc151 = v189
	v189 = loc145
	v190 = loc151
	v191 = v189 == v190
	loc152 = v191
	v189 = loc152
	branch !v189 l000F866E
	// succ:  l000F8576 l000F866E
l000F8576:
	v189 = loc150
	v190 = 1<32>
	v189 = v189 << v190
	loc153 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc153
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc155 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc155
	v190 = 1<32>
	v189 = v189 & v190
	loc156 = v189
	v189 = loc156
	branch !v189 l000F85AF
	// succ:  l000F85A7 l000F85AF
l000F85A7:
	v189 = 0x1F<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F85AF:
	v189 = loc100
	v198 = Mem0[v189:int8]
	v189 = CONVERT(v198, int8, word32)
	loc157 = v189
	v189 = loc157
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc158 = v191
	v189 = loc158
	branch !v189 l000F85F0
	// succ:  l000F85CB l000F85F0
l000F85CB:
	v189 = loc114
	v189 = Mem0[v189:word32]
	loc159 = v189
	v189 = loc159
	v190 = 0x7FFFFFFF<32>
	v189 = v189 & v190
	loc160 = v189
	v189 = loc160
	v190 = 0xFFFFFFFF<32>
	v189 = v189 + v190
	loc189 = v189
	v189 = loc189
	loc161 = v189
	goto l000F85F5
	// succ:  l000F85F5
l000F85F0:
	v189 = 0xA<32>
	loc161 = v189
	// succ:  l000F85F5
l000F85F5:
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x17A<32>
	v190 = loc176
	v192 = loc161
	v193 = 0<32>
	invoke_viii(v189, v190, v192, v193)
	v189 = Mem0[0x00140048<p32>:word32]
	loc162 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc162
	v190 = 1<32>
	v189 = v189 & v190
	loc163 = v189
	v189 = loc163
	branch !v189 l000F8626
	// succ:  l000F861E l000F8626
l000F861E:
	v189 = 0x1F<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F8626:
	v189 = loc100
	v199 = Mem0[v189:int8]
	v189 = CONVERT(v199, int8, word32)
	loc164 = v189
	v189 = loc164
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc166 = v191
	v189 = loc176
	v189 = Mem0[v189:word32]
	loc167 = v189
	v189 = loc166
	branch !v189 l000F864F
	// succ:  l000F864B l000F864F
l000F864B:
	v189 = loc167
	goto l000F8652
	// succ:  l000F8652
l000F864F:
	v189 = loc176
	// succ:  l000F8652
l000F8652:
	loc168 = v189
	v189 = loc168
	v190 = loc150
	v189 = v189 + v190
	loc169 = v189
	v189 = loc24
	v190 = loc169
	Mem0[v189:word32] = v190
	v189 = loc168
	loc14 = v189
	goto l000F8672
	// succ:  l000F8672
l000F866E:
	v189 = loc12
	loc14 = v189
	// succ:  l000F8672
l000F8672:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc179 = v189
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc180 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc181 = v189
	v189 = loc181
	v189 = Mem0[v189:word32]
	loc182 = v189
	v189 = loc180
	v190 = loc182
	v191 = v189 == v190
	loc183 = v191
	v189 = loc183
	branch !v189 l000F86EC
	// succ:  l000F86A4 l000F86EC
l000F86A4:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc184 = v189
	v189 = loc184
	v190 = 0x24<32>
	v189 = v189 + v190
	loc185 = v189
	v189 = loc185
	v189 = Mem0[v189:word32]
	loc186 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc186
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc25 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc26 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc26
	v190 = 1<32>
	v189 = v189 & v190
	loc27 = v189
	v189 = loc27
	branch !v189 l000F86E6
	// succ:  l000F86DE l000F86E6
l000F86DE:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F86E6:
	v189 = loc25
	loc11 = v189
	// succ:  l000F86EA
l000F86EA:
	goto l000F86F8
	// succ:  l000F86F8
l000F86EC:
	v189 = loc180
	v189 = Mem0[v189:word32]
	loc28 = v189
	v189 = loc28
	loc11 = v189
	// succ:  l000F86F8
l000F86F8:
	v189 = loc154
	v189 = Mem0[v189:word32]
	loc29 = v189
	v189 = loc11
	v190 = loc68
	v192 = loc14
	v193 = loc24
	v200 = loc57
	v201 = loc29
	v202 = loc165
	v203 = loc35
	v204 = loc46
	v205 = loc143
	v189 = fn000F2F51(v189, v190, v192, v193, v200, v201, v202, v203, v204, v205)
	loc30 = v189
	v189 = loc30
	v190 = 0<32>
	v191 = v189 == v190
	loc31 = v191
	v189 = loc31
	v191 = v189 == 0<32>
	branch !v191 l000F8738
	// succ:  l000F8728 l000F8738
l000F8728:
	v189 = loc14
	loc16 = v189
	v189 = loc98
	loc20 = v189
	v189 = 0x27<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F8738:
	v189 = loc179
	v189 = Mem0[v189:word32]
	loc32 = v189
	v189 = loc181
	v189 = Mem0[v189:word32]
	loc33 = v189
	v189 = loc32
	v190 = loc33
	v191 = v189 == v190
	loc34 = v191
	v189 = loc34
	branch !v189 l000F879A
	// succ:  l000F8753 l000F879A
l000F8753:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc36 = v189
	v189 = loc36
	v190 = 0x28<32>
	v189 = v189 + v190
	loc37 = v189
	v189 = loc37
	v189 = Mem0[v189:word32]
	loc38 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc38
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	v189 = Mem0[0x00140048<p32>:word32]
	loc39 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc39
	v190 = 1<32>
	v189 = v189 & v190
	loc40 = v189
	v189 = loc40
	branch !v189 l000F878E
	// succ:  l000F8786 l000F878E
l000F8786:
	v189 = 0x1D<32>
	loc190 = v189
	goto l000F87B6
	// succ:  l000F87B6
l000F878E:
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F831F
	// succ:  l000F831F
l000F8798:
	goto l000F87B3
	// succ:  l000F87B3
l000F879A:
	v189 = loc32
	v190 = 4<32>
	v189 = v189 + v190
	loc41 = v189
	v189 = loc179
	v190 = loc41
	Mem0[v189:word32] = v190
	v189 = loc14
	loc12 = v189
	v189 = loc18
	loc19 = v189
	goto l000F831F
	// succ:  l000F831F
l000F87B3:
	goto l000F831F
	// succ:  l000F831F
l000F87B6:
	v189 = loc190
	v190 = 0x1D<32>
	v191 = v189 == v190
	branch !v191 l000F87D5
	// succ:  l000F87C0 l000F87D5
l000F87C0:
	v189 = ___cxa_find_matching_catch_2()
	loc172 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc173 = v189
	v189 = loc172
	loc21 = v189
	v189 = loc173
	loc22 = v189
	goto l000F8A7F
	// succ:  l000F8A7F
l000F87D5:
	v189 = loc190
	v190 = 0x1F<32>
	v191 = v189 == v190
	branch !v191 l000F87F2
	// succ:  l000F87DD l000F87F2
l000F87DD:
	v189 = ___cxa_find_matching_catch_2()
	loc177 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc178 = v189
	v189 = loc177
	loc21 = v189
	v189 = loc178
	loc22 = v189
	goto l000F8A7E
	// succ:  l000F8A7E
l000F87F2:
	v189 = loc190
	v190 = 0x27<32>
	v191 = v189 == v190
	branch !v191 l000F8A7E
	// succ:  l000F87FA l000F8A7E
l000F87FA:
	v189 = loc165
	v190 = 0xB<32>
	v189 = v189 + v190
	loc42 = v189
	v189 = loc42
	v206 = Mem0[v189:int8]
	v189 = CONVERT(v206, int8, word32)
	loc43 = v189
	v189 = loc43
	v190 = 0x18<32>
	v189 = v189 << v190
	v190 = 0x18<32>
	v189 = v189 >> v190
	v190 = 0<32>
	v191 = v189 < v190
	loc44 = v191
	v189 = loc165
	v190 = 4<32>
	v189 = v189 + v190
	loc45 = v189
	v189 = loc45
	v189 = Mem0[v189:word32]
	loc47 = v189
	v189 = loc43
	v190 = 0xFF<32>
	v189 = v189 & v190
	loc48 = v189
	v189 = loc44
	branch !v189 l000F8834
	// succ:  l000F8831 l000F8834
l000F8831:
	v189 = loc47
	goto l000F8836
	// succ:  l000F8836
l000F8834:
	v189 = loc48
	// succ:  l000F8836
l000F8836:
	loc49 = v189
	v189 = loc49
	v190 = 0<32>
	v191 = v189 == v190
	loc50 = v191
	v189 = loc50
	v191 = v189 == 0<32>
	branch !v191 l000F8885
	// succ:  l000F8845 l000F8885
l000F8845:
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc51 = v189
	v189 = loc51
	loc52 = v189
	v189 = loc35
	loc53 = v189
	v189 = loc52
	v190 = loc53
	v189 = v189 - v190
	loc54 = v189
	v189 = loc54
	v190 = 0xA0<32>
	v191 = v189 < v190
	loc55 = v191
	v189 = loc55
	branch !v189 l000F8884
	// succ:  l000F8867 l000F8884
l000F8867:
	v189 = loc57
	v189 = Mem0[v189:word32]
	loc56 = v189
	v189 = loc51
	v190 = 4<32>
	v189 = v189 + v190
	loc58 = v189
	v189 = loc46
	v190 = loc58
	Mem0[v189:word32] = v190
	v189 = loc51
	v190 = loc56
	Mem0[v189:word32] = v190
	// succ:  l000F8884
l000F8884:
	// succ:  l000F8885
l000F8885:
	v189 = loc24
	v189 = Mem0[v189:word32]
	loc59 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = 0x189<32>
	v190 = loc16
	v192 = loc59
	v193 = arg4
	v200 = loc68
	v189 = invoke_iiiii(v189, v190, v192, v193, v200)
	loc60 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc61 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc61
	v190 = 1<32>
	v189 = v189 & v190
	loc62 = v189
	// succ:  l000F88AE
l000F88AE:
	v189 = loc62
	v191 = v189 == 0<32>
	branch !v191 l000F8A68
	// succ:  l000F88B5 l000F8A68
l000F88B5:
	v189 = arg5
	v190 = loc60
	Mem0[v189:word32] = v190
	v189 = loc46
	v189 = Mem0[v189:word32]
	loc63 = v189
	v189 = loc165
	v190 = loc35
	v192 = loc63
	v193 = arg4
	fn000EC01D(v189, v190, v192, v193)
	v189 = loc18
	v190 = 0<32>
	v191 = v189 == v190
	loc64 = v191
	v189 = loc64
	branch !v189 l000F88DF
	// succ:  l000F88DA l000F88DF
l000F88DA:
	v189 = 1<32>
	loc99 = v189
	goto l000F896B
	// succ:  l000F896B
l000F88DF:
	v189 = loc18
	v190 = 0xC<32>
	v189 = v189 + v190
	loc65 = v189
	v189 = loc65
	v189 = Mem0[v189:word32]
	loc66 = v189
	v189 = loc18
	v190 = 0x10<32>
	v189 = v189 + v190
	loc67 = v189
	v189 = loc67
	v189 = Mem0[v189:word32]
	loc69 = v189
	v189 = loc66
	v190 = loc69
	v191 = v189 == v190
	loc70 = v191
	v189 = loc70
	branch !v189 l000F8943
	// succ:  l000F8906 l000F8943
l000F8906:
	v189 = loc18
	v189 = Mem0[v189:word32]
	loc71 = v189
	v189 = loc71
	v190 = 0x24<32>
	v189 = v189 + v190
	loc72 = v189
	v189 = loc72
	v189 = Mem0[v189:word32]
	loc73 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc73
	v190 = loc18
	v189 = invoke_ii(v189, v190)
	loc74 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc75 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc75
	v190 = 1<32>
	v189 = v189 & v190
	loc76 = v189
	v189 = loc76
	branch !v189 l000F893D
	// succ:  l000F893A l000F893D
l000F893A:
	goto l000F8A68
	// succ:  l000F8A68
l000F893D:
	v189 = loc74
	loc7 = v189
	// succ:  l000F8941
l000F8941:
	goto l000F894E
	// succ:  l000F894E
l000F8943:
	v189 = loc66
	v189 = Mem0[v189:word32]
	loc77 = v189
	v189 = loc77
	loc7 = v189
	// succ:  l000F894E
l000F894E:
	v189 = loc7
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc78 = v191
	v189 = loc78
	branch !v189 l000F8966
	// succ:  l000F895A l000F8966
l000F895A:
	v189 = arg1
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 1<32>
	loc99 = v189
	goto l000F896A
	// succ:  l000F896A
l000F8966:
	v189 = 0<32>
	loc99 = v189
	// succ:  l000F896A
l000F896A:
	// succ:  l000F896B
l000F896B:
	v189 = loc20
	v190 = 0<32>
	v191 = v189 == v190
	loc80 = v191
	// succ:  l000F8973
l000F8973:
	v189 = loc80
	branch !v189 l000F897F
	// succ:  l000F8979 l000F897F
l000F8979:
	v189 = 0x37<32>
	loc190 = v189
	goto l000F8A19
	// succ:  l000F8A19
l000F897F:
	v189 = loc20
	v190 = 0xC<32>
	v189 = v189 + v190
	loc81 = v189
	v189 = loc81
	v189 = Mem0[v189:word32]
	loc82 = v189
	v189 = loc20
	v190 = 0x10<32>
	v189 = v189 + v190
	loc83 = v189
	v189 = loc83
	v189 = Mem0[v189:word32]
	loc84 = v189
	v189 = loc82
	v190 = loc84
	v191 = v189 == v190
	loc85 = v191
	v189 = loc85
	branch !v189 l000F89E3
	// succ:  l000F89A6 l000F89E3
l000F89A6:
	v189 = loc20
	v189 = Mem0[v189:word32]
	loc86 = v189
	v189 = loc86
	v190 = 0x24<32>
	v189 = v189 + v190
	loc87 = v189
	v189 = loc87
	v189 = Mem0[v189:word32]
	loc88 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc88
	v190 = loc20
	v189 = invoke_ii(v189, v190)
	loc89 = v189
	v189 = Mem0[0x00140048<p32>:word32]
	loc91 = v189
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v189 = loc91
	v190 = 1<32>
	v189 = v189 & v190
	loc92 = v189
	v189 = loc92
	branch !v189 l000F89DD
	// succ:  l000F89DA l000F89DD
l000F89DA:
	goto l000F8A68
	// succ:  l000F8A68
l000F89DD:
	v189 = loc89
	loc9 = v189
	// succ:  l000F89E1
l000F89E1:
	goto l000F89EE
	// succ:  l000F89EE
l000F89E3:
	v189 = loc82
	v189 = Mem0[v189:word32]
	loc93 = v189
	v189 = loc93
	loc9 = v189
	// succ:  l000F89EE
l000F89EE:
	v189 = loc9
	v190 = 0xFFFFFFFF<32>
	v191 = v189 == v190
	loc94 = v191
	v189 = loc94
	branch !v189 l000F8A09
	// succ:  l000F89FA l000F8A09
l000F89FA:
	v189 = arg2
	v190 = 0<32>
	Mem0[v189:word32] = v190
	v189 = 0x37<32>
	loc190 = v189
	goto l000F8A1A
	// succ:  l000F8A1A
l000F8A09:
	v189 = loc99
	branch !v189 l000F8A10
	// succ:  l000F8A0D l000F8A10
l000F8A0D:
	goto l000F8A1A
	// succ:  l000F8A1A
l000F8A10:
	v189 = 0x39<32>
	loc190 = v189
	goto l000F8A1A
	// succ:  l000F8A1A
l000F8A17:
	// succ:  l000F8A18
l000F8A18:
	// succ:  l000F8A19
l000F8A19:
	// succ:  l000F8A1A
l000F8A1A:
	v189 = loc190
	v190 = 0x37<32>
	v191 = v189 == v190
	branch !v191 l000F8A2E
	// succ:  l000F8A23 l000F8A2E
l000F8A23:
	v189 = loc99
	branch !v189 l000F8A2D
	// succ:  l000F8A27 l000F8A2D
l000F8A27:
	v189 = 0x39<32>
	loc190 = v189
	// succ:  l000F8A2D
l000F8A2D:
	// succ:  l000F8A2E
l000F8A2E:
	v189 = loc190
	v190 = 0x39<32>
	v191 = v189 == v190
	branch !v191 l000F8A4C
	// succ:  l000F8A36 l000F8A4C
l000F8A36:
	v189 = arg4
	v189 = Mem0[v189:word32]
	loc95 = v189
	v189 = loc95
	v190 = 2<32>
	v189 = v189 | v190
	loc96 = v189
	v189 = arg4
	v190 = loc96
	Mem0[v189:word32] = v190
	// succ:  l000F8A4C
l000F8A4C:
	v189 = arg1
	v189 = Mem0[v189:word32]
	loc23 = v189
	v189 = loc176
	fn0011BAF7(v189)
	v189 = loc165
	fn0011BAF7(v189)
	v189 = loc191
	Mem0[0x00140030<p32>:word32] = v189
	v189 = loc23
	return v189
	// succ:  fn000F81B1_exit
l000F8A68:
	// succ:  l000F8A68
l000F8A68:
	v189 = ___cxa_find_matching_catch_2()
	loc174 = v189
	v189 = Mem0[0x00140094<p32>:word32]
	loc175 = v189
	v189 = loc174
	loc21 = v189
	v189 = loc175
	loc22 = v189
	// succ:  l000F8A7E
l000F8A7E:
	// succ:  l000F8A7E
l000F8A7E:
	// succ:  l000F8A7F
l000F8A7F:
	v189 = loc21
	loc13 = v189
	v189 = loc22
	loc15 = v189
	// succ:  l000F8A88
l000F8A88:
	v189 = loc176
	fn0011BAF7(v189)
	v189 = loc165
	fn0011BAF7(v189)
	v189 = loc13
	___resumeException(v189)
	v189 = 0<32>
	return v189
	// succ:  fn000F81B1_exit
l000F8A9C:
	return v189
	// succ:  fn000F81B1_exit
fn000F81B1_exit:


// fn000F8A9E
// Return size: 0
word32 fn000F8A9E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000F8A9E_entry:
	// succ:  l000F8A9E
l000F8A9E:
	v240 = Mem0[0x00140030<p32>:word32]
	loc243 = v240
	v240 = Mem0[0x00140030<p32>:word32]
	v241 = 0x70<32>
	v240 = v240 + v241
	Mem0[0x00140030<p32>:word32] = v240
	v240 = Mem0[0x00140030<p32>:word32]
	v241 = Mem0[0x00140034<p32>:word32]
	v242 = v240 >= v241
	branch !v242 l000F8ABA
	// succ:  l000F8AB4 l000F8ABA
l000F8AB4:
	v240 = 0x70<32>
	abortStackOverflow(v240)
	// succ:  l000F8ABA
l000F8ABA:
	v240 = loc243
	loc206 = v240
	v240 = arg3
	loc217 = v240
	v240 = arg2
	loc228 = v240
	v240 = loc217
	v241 = loc228
	v240 = v240 - v241
	loc47 = v240
	v240 = loc47
	v241 = 0xC<32>
	v240 = i32s-div(v240, v241)
	v241 = 0xFFFFFFFF<32>
	v240 = v240 & v241
	loc58 = v240
	v240 = loc58
	v241 = 0x64<32>
	v242 = v240 >u v241
	loc69 = v242
	// succ:  l000F8AE6
l000F8AE6:
	v240 = loc69
	branch !v240 l000F8B44
	// succ:  l000F8AEC l000F8B44
l000F8AEC:
	v240 = loc58
	v240 = _malloc(v240)
	loc80 = v240
	v240 = loc80
	v241 = 0<32>
	v242 = v240 == v241
	loc91 = v242
	v240 = loc91
	branch !v240 l000F8B30
	// succ:  l000F8AFE l000F8B30
l000F8AFE:
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = 0x18A<32>
	invoke_v(v240)
	v240 = Mem0[0x00140048<p32>:word32]
	loc102 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc102
	v241 = 1<32>
	v240 = v240 & v241
	loc113 = v240
	v240 = loc113
	branch !v240 l000F8B2F
	// succ:  l000F8B1A l000F8B2F
l000F8B1A:
	v240 = ___cxa_find_matching_catch_2()
	loc124 = v240
	v240 = Mem0[0x00140094<p32>:word32]
	loc135 = v240
	v240 = loc124
	loc44 = v240
	v240 = loc135
	loc45 = v240
	goto l000F8B53
	// succ:  l000F8B53
l000F8B2F:
	// succ:  l000F8B30
l000F8B30:
	v240 = loc80
	loc146 = v240
	v240 = loc80
	loc22 = v240
	v240 = loc146
	loc46 = v240
	v240 = 6<32>
	loc242 = v240
	goto l000F8B52
	// succ:  l000F8B52
l000F8B44:
	v240 = loc206
	loc22 = v240
	v240 = 0<32>
	loc46 = v240
	v240 = 6<32>
	loc242 = v240
	// succ:  l000F8B52
l000F8B52:
	// succ:  l000F8B53
l000F8B53:
	v240 = loc242
	v241 = 6<32>
	v242 = v240 == v241
	branch !v242 l000F95BA
	// succ:  l000F8B5C l000F95BA
l000F8B5C:
	v240 = arg2
	loc18 = v240
	v240 = loc22
	loc19 = v240
	v240 = 0<32>
	loc20 = v240
	v240 = loc58
	loc21 = v240
	// succ:  l000F8B6E
l000F8B6E:
	v240 = loc18
	v241 = arg3
	v242 = v240 == v241
	loc156 = v242
	v240 = loc156
	branch !v240 l000F8B80
	// succ:  l000F8B7D l000F8B80
l000F8B7D:
	goto l000F8C3B
	// succ:  l000F8C3B
l000F8B80:
	v240 = loc18
	v241 = 8<32>
	v240 = v240 + v241
	loc157 = v240
	v240 = loc157
	v241 = 3<32>
	v240 = v240 + v241
	loc158 = v240
	v240 = loc158
	v243 = Mem0[v240:int8]
	v240 = CONVERT(v243, int8, word32)
	loc159 = v240
	v240 = loc159
	v241 = 0x18<32>
	v240 = v240 << v241
	v241 = 0x18<32>
	v240 = v240 >> v241
	v241 = 0<32>
	v242 = v240 < v241
	loc160 = v242
	v240 = loc160
	branch !v240 l000F8BC6
	// succ:  l000F8BAE l000F8BC6
l000F8BAE:
	v240 = loc18
	v241 = 4<32>
	v240 = v240 + v241
	loc161 = v240
	v240 = loc161
	v240 = Mem0[v240:word32]
	loc162 = v240
	v240 = loc162
	loc165 = v240
	goto l000F8BD6
	// succ:  l000F8BD6
l000F8BC6:
	v240 = loc159
	v241 = 0xFF<32>
	v240 = v240 & v241
	loc163 = v240
	v240 = loc163
	loc165 = v240
	// succ:  l000F8BD6
l000F8BD6:
	v240 = loc165
	v241 = 0<32>
	v242 = v240 == v241
	loc164 = v242
	v240 = loc164
	branch !v240 l000F8C07
	// succ:  l000F8BE5 l000F8C07
l000F8BE5:
	v240 = loc19
	v241 = 2<32>
	v244 = SLICE(v241, byte, 0)
	Mem0[v240:byte] = v244
	v240 = loc21
	v241 = 0xFFFFFFFF<32>
	v240 = v240 + v241
	loc166 = v240
	v240 = loc20
	v241 = 1<32>
	v240 = v240 + v241
	loc167 = v240
	v240 = loc167
	loc26 = v240
	v240 = loc166
	loc27 = v240
	goto l000F8C16
	// succ:  l000F8C16
l000F8C07:
	v240 = loc19
	v241 = 1<32>
	v245 = SLICE(v241, byte, 0)
	Mem0[v240:byte] = v245
	v240 = loc20
	loc26 = v240
	v240 = loc21
	loc27 = v240
	// succ:  l000F8C16
l000F8C16:
	v240 = loc18
	v241 = 0xC<32>
	v240 = v240 + v241
	loc168 = v240
	v240 = loc19
	v241 = 1<32>
	v240 = v240 + v241
	loc169 = v240
	v240 = loc168
	loc18 = v240
	v240 = loc169
	loc19 = v240
	v240 = loc26
	loc20 = v240
	v240 = loc27
	loc21 = v240
	goto l000F8B5C
	// succ:  l000F8B5C
l000F8C3B:
	v240 = 0<32>
	loc17 = v240
	v240 = loc20
	loc30 = v240
	v240 = loc21
	loc31 = v240
	// succ:  l000F8C4B
l000F8C4B:
	v240 = arg0
	v240 = Mem0[v240:word32]
	loc170 = v240
	v240 = loc170
	v241 = 0<32>
	v242 = v240 == v241
	loc171 = v242
	// succ:  l000F8C5E
l000F8C5E:
	v240 = loc171
	branch !v240 l000F8C6B
	// succ:  l000F8C65 l000F8C6B
l000F8C65:
	v240 = 1<32>
	loc200 = v240
	goto l000F8D31
	// succ:  l000F8D31
l000F8C6B:
	v240 = loc170
	v241 = 0xC<32>
	v240 = v240 + v241
	loc172 = v240
	v240 = loc172
	v240 = Mem0[v240:word32]
	loc173 = v240
	v240 = loc170
	v241 = 0x10<32>
	v240 = v240 + v241
	loc174 = v240
	v240 = loc174
	v240 = Mem0[v240:word32]
	loc175 = v240
	v240 = loc173
	v241 = loc175
	v242 = v240 == v241
	loc176 = v242
	v240 = loc176
	branch !v240 l000F8CEE
	// succ:  l000F8C9E l000F8CEE
l000F8C9E:
	v240 = loc170
	v240 = Mem0[v240:word32]
	loc177 = v240
	v240 = loc177
	v241 = 0x24<32>
	v240 = v240 + v241
	loc178 = v240
	v240 = loc178
	v240 = Mem0[v240:word32]
	loc179 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc179
	v241 = loc170
	v240 = invoke_ii(v240, v241)
	loc180 = v240
	v240 = Mem0[0x00140048<p32>:word32]
	loc181 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc181
	v241 = 1<32>
	v240 = v240 & v241
	loc182 = v240
	v240 = loc182
	branch !v240 l000F8CE7
	// succ:  l000F8CDF l000F8CE7
l000F8CDF:
	v240 = 0x2B<32>
	loc242 = v240
	goto l000F9249
	// succ:  l000F9249
l000F8CE7:
	v240 = loc180
	loc9 = v240
	// succ:  l000F8CEC
l000F8CEC:
	goto l000F8CFC
	// succ:  l000F8CFC
l000F8CEE:
	v240 = loc173
	v240 = Mem0[v240:word32]
	loc183 = v240
	v240 = loc183
	loc9 = v240
	// succ:  l000F8CFC
l000F8CFC:
	v240 = loc9
	v241 = 0xFFFFFFFF<32>
	v242 = v240 == v241
	loc184 = v242
	v240 = loc184
	branch !v240 l000F8D19
	// succ:  l000F8D0A l000F8D19
l000F8D0A:
	v240 = arg0
	v241 = 0<32>
	Mem0[v240:word32] = v241
	v240 = 1<32>
	loc200 = v240
	goto l000F8D32
	// succ:  l000F8D32
l000F8D19:
	v240 = arg0
	v240 = Mem0[v240:word32]
	loc39 = v240
	v240 = loc39
	v241 = 0<32>
	v242 = v240 == v241
	loc239 = v242
	v240 = loc239
	loc200 = v240
	goto l000F8D32
	// succ:  l000F8D32
l000F8D30:
	// succ:  l000F8D31
l000F8D31:
	// succ:  l000F8D32
l000F8D32:
	v240 = arg1
	v240 = Mem0[v240:word32]
	loc185 = v240
	v240 = loc185
	v241 = 0<32>
	v242 = v240 == v241
	loc186 = v242
	v240 = loc186
	branch !v240 l000F8D53
	// succ:  l000F8D49 l000F8D53
l000F8D49:
	v240 = 0<32>
	loc41 = v240
	v240 = 1<32>
	loc201 = v240
	goto l000F8E0E
	// succ:  l000F8E0E
l000F8D53:
	v240 = loc185
	v241 = 0xC<32>
	v240 = v240 + v241
	loc187 = v240
	v240 = loc187
	v240 = Mem0[v240:word32]
	loc188 = v240
	v240 = loc185
	v241 = 0x10<32>
	v240 = v240 + v241
	loc189 = v240
	v240 = loc189
	v240 = Mem0[v240:word32]
	loc190 = v240
	v240 = loc188
	v241 = loc190
	v242 = v240 == v241
	loc191 = v242
	v240 = loc191
	branch !v240 l000F8DD6
	// succ:  l000F8D86 l000F8DD6
l000F8D86:
	v240 = loc185
	v240 = Mem0[v240:word32]
	loc192 = v240
	v240 = loc192
	v241 = 0x24<32>
	v240 = v240 + v241
	loc193 = v240
	v240 = loc193
	v240 = Mem0[v240:word32]
	loc194 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc194
	v241 = loc185
	v240 = invoke_ii(v240, v241)
	loc195 = v240
	v240 = Mem0[0x00140048<p32>:word32]
	loc196 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc196
	v241 = 1<32>
	v240 = v240 & v241
	loc197 = v240
	v240 = loc197
	branch !v240 l000F8DCF
	// succ:  l000F8DC7 l000F8DCF
l000F8DC7:
	v240 = 0x2B<32>
	loc242 = v240
	goto l000F9249
	// succ:  l000F9249
l000F8DCF:
	v240 = loc195
	loc11 = v240
	// succ:  l000F8DD4
l000F8DD4:
	goto l000F8DE4
	// succ:  l000F8DE4
l000F8DD6:
	v240 = loc188
	v240 = Mem0[v240:word32]
	loc198 = v240
	v240 = loc198
	loc11 = v240
	// succ:  l000F8DE4
l000F8DE4:
	v240 = loc11
	v241 = 0xFFFFFFFF<32>
	v242 = v240 == v241
	loc199 = v242
	v240 = loc199
	branch !v240 l000F8E03
	// succ:  l000F8DF2 l000F8E03
l000F8DF2:
	v240 = arg1
	v241 = 0<32>
	Mem0[v240:word32] = v241
	v240 = 0<32>
	loc41 = v240
	v240 = 1<32>
	loc201 = v240
	goto l000F8E0D
	// succ:  l000F8E0D
l000F8E03:
	v240 = loc185
	loc41 = v240
	v240 = 0<32>
	loc201 = v240
	// succ:  l000F8E0D
l000F8E0D:
	// succ:  l000F8E0E
l000F8E0E:
	v240 = loc200
	v241 = loc201
	v240 = v240 ^ v241
	loc241 = v240
	v240 = loc31
	v241 = 0<32>
	v242 = v240 != v241
	loc202 = v242
	v240 = loc202
	v241 = loc241
	v240 = v240 & v241
	loc203 = v240
	v240 = arg0
	v240 = Mem0[v240:word32]
	loc204 = v240
	v240 = loc203
	v242 = v240 == 0<32>
	branch !v242 l000F8E41
	// succ:  l000F8E39 l000F8E41
l000F8E39:
	v240 = 0x1E<32>
	loc242 = v240
	goto l000F9249
	// succ:  l000F9249
l000F8E41:
	v240 = loc204
	v241 = 0xC<32>
	v240 = v240 + v241
	loc238 = v240
	v240 = loc238
	v240 = Mem0[v240:word32]
	loc48 = v240
	v240 = loc204
	v241 = 0x10<32>
	v240 = v240 + v241
	loc49 = v240
	v240 = loc49
	v240 = Mem0[v240:word32]
	loc50 = v240
	v240 = loc48
	v241 = loc50
	v242 = v240 == v241
	loc51 = v242
	v240 = loc51
	branch !v240 l000F8EB0
	// succ:  l000F8E6C l000F8EB0
l000F8E6C:
	v240 = loc204
	v240 = Mem0[v240:word32]
	loc52 = v240
	v240 = loc52
	v241 = 0x24<32>
	v240 = v240 + v241
	loc53 = v240
	v240 = loc53
	v240 = Mem0[v240:word32]
	loc54 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc54
	v241 = loc204
	v240 = invoke_ii(v240, v241)
	loc55 = v240
	v240 = Mem0[0x00140048<p32>:word32]
	loc56 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc56
	v241 = 1<32>
	v240 = v240 & v241
	loc57 = v240
	v240 = loc57
	branch !v240 l000F8EAA
	// succ:  l000F8EA2 l000F8EAA
l000F8EA2:
	v240 = 0x2B<32>
	loc242 = v240
	goto l000F9249
	// succ:  l000F9249
l000F8EAA:
	v240 = loc55
	loc8 = v240
	// succ:  l000F8EAE
l000F8EAE:
	goto l000F8EBB
	// succ:  l000F8EBB
l000F8EB0:
	v240 = loc48
	v240 = Mem0[v240:word32]
	loc59 = v240
	v240 = loc59
	loc8 = v240
	// succ:  l000F8EBB
l000F8EBB:
	v240 = arg6
	branch !v240 l000F8EC5
	// succ:  l000F8EC0 l000F8EC5
l000F8EC0:
	v240 = loc8
	loc16 = v240
	goto l000F8F08
	// succ:  l000F8F08
l000F8EC5:
	v240 = arg4
	v240 = Mem0[v240:word32]
	loc60 = v240
	v240 = loc60
	v241 = 0x1C<32>
	v240 = v240 + v241
	loc61 = v240
	v240 = loc61
	v240 = Mem0[v240:word32]
	loc62 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc62
	v241 = arg4
	v246 = loc8
	v240 = invoke_iii(v240, v241, v246)
	loc63 = v240
	v240 = Mem0[0x00140048<p32>:word32]
	loc64 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc64
	v241 = 1<32>
	v240 = v240 & v241
	loc65 = v240
	v240 = loc65
	branch !v240 l000F8F03
	// succ:  l000F8EFB l000F8F03
l000F8EFB:
	v240 = 0x31<32>
	loc242 = v240
	goto l000F9249
	// succ:  l000F9249
l000F8F03:
	v240 = loc63
	loc16 = v240
	// succ:  l000F8F07
l000F8F07:
	// succ:  l000F8F08
l000F8F08:
	v240 = loc17
	v241 = 1<32>
	v240 = v240 + v241
	loc68 = v240
	v240 = arg2
	loc14 = v240
	v240 = 0<32>
	loc15 = v240
	v240 = loc22
	loc25 = v240
	v240 = loc30
	loc33 = v240
	v240 = loc31
	loc34 = v240
	// succ:  l000F8F26
l000F8F26:
	v240 = loc14
	v241 = arg3
	v242 = v240 == v241
	loc70 = v242
	v240 = loc70
	branch !v240 l000F8F36
	// succ:  l000F8F33 l000F8F36
l000F8F33:
	goto l000F90B3
	// succ:  l000F90B3
l000F8F36:
	v240 = loc25
	v247 = Mem0[v240:int8]
	v240 = CONVERT(v247, int8, word32)
	loc71 = v240
	v240 = loc71
	v241 = 0x18<32>
	v240 = v240 << v241
	v241 = 0x18<32>
	v240 = v240 >> v241
	v241 = 1<32>
	v242 = v240 == v241
	loc72 = v242
	// succ:  l000F8F4A
l000F8F4A:
	v240 = loc72
	branch !v240 l000F9081
	// succ:  l000F8F50 l000F9081
l000F8F50:
	v240 = loc14
	v241 = 8<32>
	v240 = v240 + v241
	loc73 = v240
	v240 = loc73
	v241 = 3<32>
	v240 = v240 + v241
	loc74 = v240
	v240 = loc74
	v248 = Mem0[v240:int8]
	v240 = CONVERT(v248, int8, word32)
	loc75 = v240
	v240 = loc75
	v241 = 0x18<32>
	v240 = v240 << v241
	v241 = 0x18<32>
	v240 = v240 >> v241
	v241 = 0<32>
	v242 = v240 < v241
	loc76 = v242
	v240 = loc76
	branch !v240 l000F8F82
	// succ:  l000F8F76 l000F8F82
l000F8F76:
	v240 = loc14
	v240 = Mem0[v240:word32]
	loc77 = v240
	v240 = loc77
	loc79 = v240
	goto l000F8F86
	// succ:  l000F8F86
l000F8F82:
	v240 = loc14
	loc79 = v240
	// succ:  l000F8F86
l000F8F86:
	v240 = loc79
	v241 = loc17
	v246 = 2<32>
	v241 = v241 << v246
	v240 = v240 + v241
	loc78 = v240
	v240 = loc78
	v240 = Mem0[v240:word32]
	loc81 = v240
	v240 = arg6
	branch !v240 l000F8FA1
	// succ:  l000F8F9C l000F8FA1
l000F8F9C:
	v240 = loc81
	loc13 = v240
	goto l000F8FE4
	// succ:  l000F8FE4
l000F8FA1:
	v240 = arg4
	v240 = Mem0[v240:word32]
	loc82 = v240
	v240 = loc82
	v241 = 0x1C<32>
	v240 = v240 + v241
	loc83 = v240
	v240 = loc83
	v240 = Mem0[v240:word32]
	loc84 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc84
	v241 = arg4
	v246 = loc81
	v240 = invoke_iii(v240, v241, v246)
	loc85 = v240
	v240 = Mem0[0x00140048<p32>:word32]
	loc86 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc86
	v241 = 1<32>
	v240 = v240 & v241
	loc87 = v240
	v240 = loc87
	branch !v240 l000F8FDF
	// succ:  l000F8FD7 l000F8FDF
l000F8FD7:
	v240 = 0x3B<32>
	loc242 = v240
	goto l000F9249
	// succ:  l000F9249
l000F8FDF:
	v240 = loc85
	loc13 = v240
	// succ:  l000F8FE3
l000F8FE3:
	// succ:  l000F8FE4
l000F8FE4:
	v240 = loc16
	v241 = loc13
	v242 = v240 == v241
	loc90 = v242
	v240 = loc90
	v242 = v240 == 0<32>
	branch !v242 l000F900E
	// succ:  l000F8FF1 l000F900E
l000F8FF1:
	v240 = loc25
	v241 = 0<32>
	v249 = SLICE(v241, byte, 0)
	Mem0[v240:byte] = v249
	v240 = loc34
	v241 = 0xFFFFFFFF<32>
	v240 = v240 + v241
	loc101 = v240
	v240 = loc15
	loc28 = v240
	v240 = loc33
	loc35 = v240
	v240 = loc101
	loc36 = v240
	goto l000F908E
	// succ:  l000F908E
l000F900E:
	v240 = loc74
	v250 = Mem0[v240:int8]
	v240 = CONVERT(v250, int8, word32)
	loc92 = v240
	v240 = loc92
	v241 = 0x18<32>
	v240 = v240 << v241
	v241 = 0x18<32>
	v240 = v240 >> v241
	v241 = 0<32>
	v242 = v240 < v241
	loc93 = v242
	v240 = loc93
	branch !v240 l000F9039
	// succ:  l000F9026 l000F9039
l000F9026:
	v240 = loc14
	v241 = 4<32>
	v240 = v240 + v241
	loc94 = v240
	v240 = loc94
	v240 = Mem0[v240:word32]
	loc95 = v240
	v240 = loc95
	loc98 = v240
	goto l000F9045
	// succ:  l000F9045
l000F9039:
	v240 = loc92
	v241 = 0xFF<32>
	v240 = v240 & v241
	loc96 = v240
	v240 = loc96
	loc98 = v240
	// succ:  l000F9045
l000F9045:
	v240 = loc98
	v241 = loc68
	v242 = v240 == v241
	loc97 = v242
	v240 = loc97
	branch !v240 l000F9073
	// succ:  l000F9051 l000F9073
l000F9051:
	v240 = loc34
	v241 = 0xFFFFFFFF<32>
	v240 = v240 + v241
	loc99 = v240
	v240 = loc33
	v241 = 1<32>
	v240 = v240 + v241
	loc100 = v240
	v240 = loc25
	v241 = 2<32>
	v251 = SLICE(v241, byte, 0)
	Mem0[v240:byte] = v251
	v240 = 1<32>
	loc28 = v240
	v240 = loc100
	loc35 = v240
	v240 = loc99
	loc36 = v240
	goto l000F907F
	// succ:  l000F907F
l000F9073:
	v240 = 1<32>
	loc28 = v240
	v240 = loc33
	loc35 = v240
	v240 = loc34
	loc36 = v240
	// succ:  l000F907F
l000F907F:
	goto l000F908D
	// succ:  l000F908D
l000F9081:
	v240 = loc15
	loc28 = v240
	v240 = loc33
	loc35 = v240
	v240 = loc34
	loc36 = v240
	// succ:  l000F908D
l000F908D:
	// succ:  l000F908E
l000F908E:
	v240 = loc14
	v241 = 0xC<32>
	v240 = v240 + v241
	loc103 = v240
	v240 = loc25
	v241 = 1<32>
	v240 = v240 + v241
	loc104 = v240
	v240 = loc103
	loc14 = v240
	v240 = loc28
	loc15 = v240
	v240 = loc104
	loc25 = v240
	v240 = loc35
	loc33 = v240
	v240 = loc36
	loc34 = v240
	goto l000F8F08
	// succ:  l000F8F08
l000F90B3:
	v240 = loc15
	v242 = v240 == 0<32>
	branch !v242 l000F90C9
	// succ:  l000F90BA l000F90C9
l000F90BA:
	v240 = loc68
	loc17 = v240
	v240 = loc33
	loc30 = v240
	v240 = loc34
	loc31 = v240
	goto l000F8C3B
	// succ:  l000F8C3B
l000F90C9:
	v240 = arg0
	v240 = Mem0[v240:word32]
	loc105 = v240
	v240 = loc105
	v241 = 0xC<32>
	v240 = v240 + v241
	loc106 = v240
	v240 = loc106
	v240 = Mem0[v240:word32]
	loc107 = v240
	v240 = loc105
	v241 = 0x10<32>
	v240 = v240 + v241
	loc108 = v240
	v240 = loc108
	v240 = Mem0[v240:word32]
	loc109 = v240
	v240 = loc107
	v241 = loc109
	v242 = v240 == v241
	loc110 = v242
	v240 = loc110
	branch !v240 l000F9134
	// succ:  l000F90F7 l000F9134
l000F90F7:
	v240 = loc105
	v240 = Mem0[v240:word32]
	loc111 = v240
	v240 = loc111
	v241 = 0x28<32>
	v240 = v240 + v241
	loc112 = v240
	v240 = loc112
	v240 = Mem0[v240:word32]
	loc114 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc114
	v241 = loc105
	v240 = invoke_ii(v240, v241)
	v240 = Mem0[0x00140048<p32>:word32]
	loc115 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc115
	v241 = 1<32>
	v240 = v240 & v241
	loc116 = v240
	v240 = loc116
	branch !v240 l000F9133
	// succ:  l000F912A l000F9133
l000F912A:
	v240 = 0x49<32>
	loc242 = v240
	goto l000F9249
	// succ:  l000F9249
l000F9133:
	goto l000F9142
	// succ:  l000F9142
l000F9134:
	v240 = loc107
	v241 = 4<32>
	v240 = v240 + v241
	loc117 = v240
	v240 = loc106
	v241 = loc117
	Mem0[v240:word32] = v241
	// succ:  l000F9142
l000F9142:
	v240 = loc33
	v241 = loc34
	v240 = v240 + v241
	loc118 = v240
	v240 = loc118
	v241 = 1<32>
	v242 = v240 >u v241
	loc119 = v242
	v240 = loc119
	branch !v240 l000F9162
	// succ:  l000F9155 l000F9162
l000F9155:
	v240 = arg2
	loc7 = v240
	v240 = loc22
	loc29 = v240
	v240 = loc33
	loc37 = v240
	goto l000F9170
	// succ:  l000F9170
l000F9162:
	v240 = loc68
	loc17 = v240
	v240 = loc33
	loc30 = v240
	v240 = loc34
	loc31 = v240
	goto l000F8C3B
	// succ:  l000F8C3B
l000F9170:
	v240 = loc7
	v241 = arg3
	v242 = v240 == v241
	loc120 = v242
	v240 = loc120
	branch !v240 l000F918D
	// succ:  l000F917E l000F918D
l000F917E:
	v240 = loc68
	loc17 = v240
	v240 = loc37
	loc30 = v240
	v240 = loc34
	loc31 = v240
	goto l000F8C3B
	// succ:  l000F8C3B
l000F918D:
	v240 = loc29
	v252 = Mem0[v240:int8]
	v240 = CONVERT(v252, int8, word32)
	loc123 = v240
	v240 = loc123
	v241 = 0x18<32>
	v240 = v240 << v241
	v241 = 0x18<32>
	v240 = v240 >> v241
	v241 = 2<32>
	v242 = v240 == v241
	loc125 = v242
	v240 = loc125
	branch !v240 l000F9221
	// succ:  l000F91A5 l000F9221
l000F91A5:
	v240 = loc7
	v241 = 8<32>
	v240 = v240 + v241
	loc126 = v240
	v240 = loc126
	v241 = 3<32>
	v240 = v240 + v241
	loc127 = v240
	v240 = loc127
	v253 = Mem0[v240:int8]
	v240 = CONVERT(v253, int8, word32)
	loc128 = v240
	v240 = loc128
	v241 = 0x18<32>
	v240 = v240 << v241
	v241 = 0x18<32>
	v240 = v240 >> v241
	v241 = 0<32>
	v242 = v240 < v241
	loc129 = v242
	v240 = loc129
	branch !v240 l000F91E7
	// succ:  l000F91CF l000F91E7
l000F91CF:
	v240 = loc7
	v241 = 4<32>
	v240 = v240 + v241
	loc130 = v240
	v240 = loc130
	v240 = Mem0[v240:word32]
	loc131 = v240
	v240 = loc131
	loc134 = v240
	goto l000F91F7
	// succ:  l000F91F7
l000F91E7:
	v240 = loc128
	v241 = 0xFF<32>
	v240 = v240 & v241
	loc132 = v240
	v240 = loc132
	loc134 = v240
	// succ:  l000F91F7
l000F91F7:
	v240 = loc134
	v241 = loc68
	v242 = v240 == v241
	loc133 = v242
	v240 = loc133
	branch !v240 l000F920B
	// succ:  l000F9206 l000F920B
l000F9206:
	v240 = loc37
	loc38 = v240
	goto l000F921F
	// succ:  l000F921F
l000F920B:
	v240 = loc37
	v241 = 0xFFFFFFFF<32>
	v240 = v240 + v241
	loc136 = v240
	v240 = loc29
	v241 = 0<32>
	v254 = SLICE(v241, byte, 0)
	Mem0[v240:byte] = v254
	v240 = loc136
	loc38 = v240
	// succ:  l000F921F
l000F921F:
	goto l000F9225
	// succ:  l000F9225
l000F9221:
	v240 = loc37
	loc38 = v240
	// succ:  l000F9225
l000F9225:
	v240 = loc7
	v241 = 0xC<32>
	v240 = v240 + v241
	loc137 = v240
	v240 = loc29
	v241 = 1<32>
	v240 = v240 + v241
	loc138 = v240
	v240 = loc137
	loc7 = v240
	v240 = loc138
	loc29 = v240
	v240 = loc38
	loc37 = v240
	goto l000F9170
	// succ:  l000F9170
l000F9249:
	v240 = loc242
	v241 = 0x1E<32>
	v242 = v240 == v241
	branch !v242 l000F9522
	// succ:  l000F9253 l000F9522
l000F9253:
	v240 = loc204
	v241 = 0<32>
	v242 = v240 == v241
	loc205 = v242
	// succ:  l000F925C
l000F925C:
	v240 = loc205
	branch !v240 l000F926E
	// succ:  l000F9263 l000F926E
l000F9263:
	v240 = 1<32>
	loc155 = v240
	v240 = 0x25<32>
	loc242 = v240
	goto l000F9339
	// succ:  l000F9339
l000F926E:
	v240 = loc204
	v241 = 0xC<32>
	v240 = v240 + v241
	loc207 = v240
	v240 = loc207
	v240 = Mem0[v240:word32]
	loc208 = v240
	v240 = loc204
	v241 = 0x10<32>
	v240 = v240 + v241
	loc209 = v240
	v240 = loc209
	v240 = Mem0[v240:word32]
	loc210 = v240
	v240 = loc208
	v241 = loc210
	v242 = v240 == v241
	loc211 = v242
	v240 = loc211
	branch !v240 l000F92EC
	// succ:  l000F92A1 l000F92EC
l000F92A1:
	v240 = loc204
	v240 = Mem0[v240:word32]
	loc212 = v240
	v240 = loc212
	v241 = 0x24<32>
	v240 = v240 + v241
	loc213 = v240
	v240 = loc213
	v240 = Mem0[v240:word32]
	loc214 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc214
	v241 = loc204
	v240 = invoke_ii(v240, v241)
	loc215 = v240
	v240 = Mem0[0x00140048<p32>:word32]
	loc216 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc216
	v241 = 1<32>
	v240 = v240 & v241
	loc218 = v240
	v240 = loc218
	branch !v240 l000F92E5
	// succ:  l000F92E2 l000F92E5
l000F92E2:
	goto l000F933A
	// succ:  l000F933A
l000F92E5:
	v240 = loc215
	loc10 = v240
	// succ:  l000F92EA
l000F92EA:
	goto l000F92FA
	// succ:  l000F92FA
l000F92EC:
	v240 = loc208
	v240 = Mem0[v240:word32]
	loc219 = v240
	v240 = loc219
	loc10 = v240
	// succ:  l000F92FA
l000F92FA:
	v240 = loc10
	v241 = 0xFFFFFFFF<32>
	v242 = v240 == v241
	loc220 = v242
	v240 = loc220
	branch !v240 l000F931C
	// succ:  l000F9308 l000F931C
l000F9308:
	v240 = arg0
	v241 = 0<32>
	Mem0[v240:word32] = v241
	v240 = 1<32>
	loc155 = v240
	v240 = 0x25<32>
	loc242 = v240
	goto l000F933A
	// succ:  l000F933A
l000F931C:
	v240 = arg0
	v240 = Mem0[v240:word32]
	loc40 = v240
	v240 = loc40
	v241 = 0<32>
	v242 = v240 == v241
	loc240 = v242
	v240 = loc240
	loc155 = v240
	v240 = 0x25<32>
	loc242 = v240
	goto l000F933A
	// succ:  l000F933A
l000F9338:
	// succ:  l000F9339
l000F9339:
	// succ:  l000F933A
l000F933A:
	v240 = loc242
	v241 = 0x25<32>
	v242 = v240 == v241
	branch !v242 l000F950C
	// succ:  l000F9345 l000F950C
l000F9345:
	v240 = loc41
	v241 = 0<32>
	v242 = v240 == v241
	loc221 = v242
	// succ:  l000F934D
l000F934D:
	v240 = loc221
	branch !v240 l000F935B
	// succ:  l000F9354 l000F935B
l000F9354:
	v240 = 0x51<32>
	loc242 = v240
	goto l000F941B
	// succ:  l000F941B
l000F935B:
	v240 = loc41
	v241 = 0xC<32>
	v240 = v240 + v241
	loc222 = v240
	v240 = loc222
	v240 = Mem0[v240:word32]
	loc223 = v240
	v240 = loc41
	v241 = 0x10<32>
	v240 = v240 + v241
	loc224 = v240
	v240 = loc224
	v240 = Mem0[v240:word32]
	loc225 = v240
	v240 = loc223
	v241 = loc225
	v242 = v240 == v241
	loc226 = v242
	v240 = loc226
	branch !v240 l000F93D5
	// succ:  l000F938C l000F93D5
l000F938C:
	v240 = loc41
	v240 = Mem0[v240:word32]
	loc227 = v240
	v240 = loc227
	v241 = 0x24<32>
	v240 = v240 + v241
	loc229 = v240
	v240 = loc229
	v240 = Mem0[v240:word32]
	loc230 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc230
	v241 = loc41
	v240 = invoke_ii(v240, v241)
	loc231 = v240
	v240 = Mem0[0x00140048<p32>:word32]
	loc232 = v240
	v240 = 0<32>
	Mem0[0x00140048<p32>:word32] = v240
	v240 = loc232
	v241 = 1<32>
	v240 = v240 & v241
	loc233 = v240
	v240 = loc233
	branch !v240 l000F93CE
	// succ:  l000F93CB l000F93CE
l000F93CB:
	goto l000F950C
	// succ:  l000F950C
l000F93CE:
	v240 = loc231
	loc12 = v240
	// succ:  l000F93D3
l000F93D3:
	goto l000F93E3
	// succ:  l000F93E3
l000F93D5:
	v240 = loc223
	v240 = Mem0[v240:word32]
	loc234 = v240
	v240 = loc234
	loc12 = v240
	// succ:  l000F93E3
l000F93E3:
	v240 = loc12
	v241 = 0xFFFFFFFF<32>
	v242 = v240 == v241
	loc235 = v242
	v240 = loc235
	branch !v240 l000F9401
	// succ:  l000F93F1 l000F9401
l000F93F1:
	v240 = arg1
	v241 = 0<32>
	Mem0[v240:word32] = v241
	v240 = 0x51<32>
	loc242 = v240
	goto l000F941C
	// succ:  l000F941C
l000F9401:
	v240 = loc155
	branch !v240 l000F9411
	// succ:  l000F9406 l000F9411
l000F9406:
	v240 = arg2
	loc23 = v240
	v240 = loc22
	loc32 = v240
	goto l000F941C
	// succ:  l000F941C
l000F9411:
	v240 = 0x53<32>
	loc242 = v240
	goto l000F941C
	// succ:  l000F941C
l000F9419:
	// succ:  l000F941A
l000F941A:
	// succ:  l000F941B
l000F941B:
	// succ:  l000F941C
l000F941C:
	v240 = loc242
	v241 = 0x51<32>
	v242 = v240 == v241
	branch !v242 l000F943C
	// succ:  l000F9426 l000F943C
l000F9426:
	v240 = loc155
	branch !v240 l000F9432
	// succ:  l000F942B l000F9432
l000F942B:
	v240 = 0x53<32>
	loc242 = v240
	goto l000F943A
	// succ:  l000F943A
l000F9432:
	v240 = arg2
	loc23 = v240
	v240 = loc22
	loc32 = v240
	// succ:  l000F943A
l000F943A:
	// succ:  l000F943C
l000F943C:
	v240 = loc242
	v241 = 0x53<32>
	v242 = v240 == v241
	branch !v242 l000F9467
	// succ:  l000F9445 l000F9467
l000F9445:
	v240 = arg5
	v240 = Mem0[v240:word32]
	loc139 = v240
	v240 = loc139
	v241 = 2<32>
	v240 = v240 | v241
	loc140 = v240
	v240 = arg5
	v241 = loc140
	Mem0[v240:word32] = v241
	v240 = arg2
	loc23 = v240
	v240 = loc22
	loc32 = v240
	// succ:  l000F9467
l000F9467:
	v240 = loc23
	v241 = arg3
	v242 = v240 == v241
	loc143 = v242
	v240 = loc143
	branch !v240 l000F9481
	// succ:  l000F9478 l000F9481
l000F9478:
	v240 = 0x58<32>
	loc242 = v240
	goto l000F94C0
	// succ:  l000F94C0
l000F9481:
	v240 = loc32
	v255 = Mem0[v240:int8]
	v240 = CONVERT(v255, int8, word32)
	loc144 = v240
	v240 = loc144
	v241 = 0x18<32>
	v240 = v240 << v241
	v241 = 0x18<32>
	v240 = v240 >> v241
	v241 = 2<32>
	v242 = v240 == v241
	loc145 = v242
	v240 = loc145
	branch !v240 l000F94A4
	// succ:  l000F949D l000F94A4
l000F949D:
	v240 = loc23
	loc24 = v240
	goto l000F94C0
	// succ:  l000F94C0
l000F94A4:
	v240 = loc23
	v241 = 0xC<32>
	v240 = v240 + v241
	loc147 = v240
	v240 = loc32
	v241 = 1<32>
	v240 = v240 + v241
	loc148 = v240
	v240 = loc147
	loc23 = v240
	v240 = loc148
	loc32 = v240
	goto l000F9467
	// succ:  l000F9467
l000F94C0:
	v240 = loc242
	v241 = 0x58<32>
	v242 = v240 == v241
	branch !v242 l000F94E9
	// succ:  l000F94CB l000F94E9
l000F94CB:
	v240 = arg5
	v240 = Mem0[v240:word32]
	loc149 = v240
	v240 = loc149
	v241 = 4<32>
	v240 = v240 | v241
	loc150 = v240
	v240 = arg5
	v241 = loc150
	Mem0[v240:word32] = v241
	v240 = arg3
	loc24 = v240
	// succ:  l000F94E9
l000F94E9:
	v240 = loc46
	v241 = 0<32>
	v242 = v240 == v241
	loc151 = v242
	v240 = loc151
	v242 = v240 == 0<32>
	branch !v242 l000F9503
	// succ:  l000F94F7 l000F9503
l000F94F7:
	v240 = loc46
	loc152 = v240
	v240 = loc152
	_free(v240)
	// succ:  l000F9503
l000F9503:
	v240 = loc243
	Mem0[0x00140030<p32>:word32] = v240
	v240 = loc24
	return v240
	// succ:  fn000F8A9E_exit
l000F950C:
	// succ:  l000F950C
l000F950C:
	v240 = ___cxa_find_matching_catch_2()
	loc141 = v240
	v240 = Mem0[0x00140094<p32>:word32]
	loc142 = v240
	v240 = loc141
	loc42 = v240
	v240 = loc142
	loc43 = v240
	goto l000F958E
	// succ:  l000F958E
l000F9522:
	v240 = loc242
	v241 = 0x2B<32>
	v242 = v240 == v241
	branch !v242 l000F953F
	// succ:  l000F952A l000F953F
l000F952A:
	v240 = ___cxa_find_matching_catch_2()
	loc236 = v240
	v240 = Mem0[0x00140094<p32>:word32]
	loc237 = v240
	v240 = loc236
	loc42 = v240
	v240 = loc237
	loc43 = v240
	goto l000F958D
	// succ:  l000F958D
l000F953F:
	v240 = loc242
	v241 = 0x31<32>
	v242 = v240 == v241
	branch !v242 l000F9558
	// succ:  l000F9547 l000F9558
l000F9547:
	v240 = ___cxa_find_matching_catch_2()
	loc66 = v240
	v240 = Mem0[0x00140094<p32>:word32]
	loc67 = v240
	v240 = loc66
	loc42 = v240
	v240 = loc67
	loc43 = v240
	goto l000F958C
	// succ:  l000F958C
l000F9558:
	v240 = loc242
	v241 = 0x3B<32>
	v242 = v240 == v241
	branch !v242 l000F9571
	// succ:  l000F9560 l000F9571
l000F9560:
	v240 = ___cxa_find_matching_catch_2()
	loc88 = v240
	v240 = Mem0[0x00140094<p32>:word32]
	loc89 = v240
	v240 = loc88
	loc42 = v240
	v240 = loc89
	loc43 = v240
	goto l000F958B
	// succ:  l000F958B
l000F9571:
	v240 = loc242
	v241 = 0x49<32>
	v242 = v240 == v241
	branch !v242 l000F958B
	// succ:  l000F957A l000F958B
l000F957A:
	v240 = ___cxa_find_matching_catch_2()
	loc121 = v240
	v240 = Mem0[0x00140094<p32>:word32]
	loc122 = v240
	v240 = loc121
	loc42 = v240
	v240 = loc122
	loc43 = v240
	// succ:  l000F958B
l000F958B:
	// succ:  l000F958B
l000F958B:
	// succ:  l000F958C
l000F958C:
	// succ:  l000F958D
l000F958D:
	// succ:  l000F958E
l000F958E:
	v240 = loc46
	v241 = 0<32>
	v242 = v240 == v241
	loc153 = v242
	v240 = loc153
	branch !v240 l000F95A5
	// succ:  l000F959C l000F95A5
l000F959C:
	v240 = loc42
	loc44 = v240
	v240 = loc43
	loc45 = v240
	goto l000F95B8
	// succ:  l000F95B8
l000F95A5:
	v240 = loc46
	loc154 = v240
	v240 = loc154
	_free(v240)
	v240 = loc42
	loc44 = v240
	v240 = loc43
	loc45 = v240
	// succ:  l000F95B8
l000F95B8:
	// succ:  l000F95BA
l000F95BA:
	v240 = loc44
	___resumeException(v240)
	v240 = 0<32>
	return v240
	// succ:  fn000F8A9E_exit
l000F95C1:
	return v240
	// succ:  fn000F8A9E_exit
fn000F8A9E_exit:


// fn000F95C3
// Return size: 0
void fn000F95C3(word32 arg0)
fn000F95C3_entry:
	// succ:  l000F95C3
l000F95C3:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	return
	// succ:  fn000F95C3_exit
l000F95CA:
	return
	// succ:  fn000F95C3_exit
fn000F95C3_exit:


// fn000F95CC
// Return size: 0
void fn000F95CC(word32 arg0)
fn000F95CC_entry:
	// succ:  l000F95CC
l000F95CC:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000F95CC_exit
l000F95D8:
	return
	// succ:  fn000F95CC_exit
fn000F95CC_exit:


// fn000F95DA
// Return size: 0
word32 fn000F95DA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F95DA_entry:
	// succ:  l000F95DA
l000F95DA:
	v72 = Mem0[0x00140030<p32>:word32]
	loc73 = v72
	v72 = Mem0[0x00140030<p32>:word32]
	v73 = 0x20<32>
	v72 = v72 + v73
	Mem0[0x00140030<p32>:word32] = v72
	v72 = Mem0[0x00140030<p32>:word32]
	v73 = Mem0[0x00140034<p32>:word32]
	v74 = v72 >= v73
	branch !v74 l000F95F3
	// succ:  l000F95EE l000F95F3
l000F95EE:
	v72 = 0x20<32>
	abortStackOverflow(v72)
	// succ:  l000F95F3
l000F95F3:
	v72 = loc73
	v73 = 0x14<32>
	v72 = v72 + v73
	loc7 = v72
	v72 = loc73
	v73 = 0x10<32>
	v72 = v72 + v73
	loc54 = v72
	v72 = loc73
	v73 = 0xC<32>
	v72 = v72 + v73
	loc65 = v72
	v72 = loc73
	loc69 = v72
	v72 = arg2
	v73 = 4<32>
	v72 = v72 + v73
	loc70 = v72
	v72 = loc70
	v72 = Mem0[v72:word32]
	loc71 = v72
	v72 = loc71
	v73 = 1<32>
	v72 = v72 & v73
	loc14 = v72
	v72 = loc14
	v73 = 0<32>
	v74 = v72 == v73
	loc15 = v74
	// succ:  l000F9628
l000F9628:
	v72 = loc15
	v72 = v72
	// succ:  l000F962E
l000F962E:
	v72 = arg0
	v72 = Mem0[v72:word32]
	loc16 = v72
	v72 = loc16
	v73 = 0x18<32>
	v72 = v72 + v73
	loc17 = v72
	v72 = loc17
	v72 = Mem0[v72:word32]
	loc18 = v72
	v72 = arg1
	v72 = Mem0[v72:word32]
	loc19 = v72
	v72 = loc54
	v73 = loc19
	Mem0[v72:word32] = v73
	v72 = arg4
	v73 = 1<32>
	v72 = v72 & v73
	loc20 = v72
	v72 = loc7
	v73 = loc54
	v73 = Mem0[v73:word32]
	Mem0[v72:word32] = v73
	v72 = arg0
	v73 = loc7
	v75 = arg2
	v76 = arg3
	v77 = loc20
	v78 = loc18
	v79 = 0x1FF<32>
	v78 = v78 & v79
	v79 = 0x1D20<32>
	v78 = v78 + v79
fn000F95DA_exit:


// fn000F98EA
// Return size: 0
word32 fn000F98EA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F98EA_entry:
	// succ:  l000F98EA
l000F98EA:
	v32 = Mem0[0x00140030<p32>:word32]
	loc33 = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x50<32>
	v32 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000F9905
	// succ:  l000F98FF l000F9905
l000F98FF:
	v32 = 0x50<32>
	abortStackOverflow(v32)
	// succ:  l000F9905
l000F9905:
	v32 = loc33
	v33 = 0x14<32>
	v32 = v32 + v33
	loc5 = v32
	v32 = loc33
	loc31 = v32
	v32 = loc33
	v33 = 0x3C<32>
	v32 = v32 + v33
	loc26 = v32
	v32 = loc33
	v33 = 0x2F<32>
	v32 = v32 + v33
	loc27 = v32
	v32 = loc33
	v33 = 0x18<32>
	v32 = v32 + v33
	loc28 = v32
	v32 = loc33
	v33 = 0x10<32>
	v32 = v32 + v33
	loc29 = v32
	v32 = loc33
	v33 = 0xC<32>
	v32 = v32 + v33
	loc30 = v32
	v32 = loc33
	v33 = 8<32>
	v32 = v32 + v33
	loc6 = v32
	v32 = loc33
	v33 = 4<32>
	v32 = v32 + v33
	loc7 = v32
	v32 = loc26
	v33 = 0x38A9<32>
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc26
	v33 = 4<32>
	v32 = v32 + v33
	v33 = 0x38A9<32>
	v35 = 4<32>
	v33 = v33 + v35
	v36 = Mem0[v33:int16]
	v33 = CONVERT(v36, int16, word32)
	v37 = SLICE(v33, word16, 0)
	Mem0[v32:word16] = v37
	v32 = loc26
	v33 = 1<32>
	v32 = v32 + v33
	loc8 = v32
	v32 = arg2
	v33 = 4<32>
	v32 = v32 + v33
	loc9 = v32
	v32 = loc9
	v32 = Mem0[v32:word32]
	loc10 = v32
	v32 = loc8
	v33 = 0x38AF<32>
	v35 = 1<32>
	v38 = loc10
	fn000FB8CE(v32, v33, v35, v38)
	v32 = fn000EAD0D()
	loc11 = v32
	v32 = loc31
	v33 = arg4
	Mem0[v32:word32] = v33
	v32 = loc27
	v33 = 0xD<32>
	v35 = loc11
	v38 = loc26
	v39 = loc31
	v32 = fn000FA95B(v32, v33, v35, v38, v39)
	loc12 = v32
	v32 = loc27
	v33 = loc12
	v32 = v32 + v33
	loc13 = v32
	v32 = loc27
	v33 = loc13
	v35 = arg2
	v32 = fn000FA9D7(v32, v33, v35)
	loc14 = v32
	v32 = arg2
	v32 = fn000E64CA(v32)
	loc15 = v32
	v32 = loc6
	v33 = loc15
	Mem0[v32:word32] = v33
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = 0x18C<32>
	v33 = loc27
	v35 = loc14
	v38 = loc13
	v39 = loc28
	v40 = loc29
	v41 = loc30
	v42 = loc6
	invoke_viiiiiii(v32, v33, v35, v38, v39, v40, v41, v42)
	v32 = Mem0[0x00140048<p32>:word32]
	loc16 = v32
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = loc16
	v33 = 1<32>
	v32 = v32 & v33
	loc17 = v32
	v32 = loc17
	branch !v32 l000F9A00
	// succ:  l000F99E6 l000F9A00
l000F99E6:
	v32 = ___cxa_find_matching_catch_2()
	loc23 = v32
	v32 = Mem0[0x00140094<p32>:word32]
	loc24 = v32
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc25 = v32
	v32 = loc25
	v32 = fn0011B43F(v32)
	v32 = loc23
	___resumeException(v32)
	goto l000F9A4A
	// succ:  l000F9A4A
l000F9A00:
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc18 = v32
	v32 = loc18
	v32 = fn0011B43F(v32)
	v32 = arg1
	v32 = Mem0[v32:word32]
	loc19 = v32
	v32 = loc7
	v33 = loc19
	Mem0[v32:word32] = v33
	v32 = loc29
	v32 = Mem0[v32:word32]
	loc20 = v32
	v32 = loc30
	v32 = Mem0[v32:word32]
	loc21 = v32
	v32 = loc5
	v33 = loc7
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc5
	v33 = loc28
	v35 = loc20
	v38 = loc21
	v39 = arg2
	v40 = arg3
	v32 = fn000D0874(v32, v33, v35, v38, v39, v40)
	loc22 = v32
	v32 = loc33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = loc22
	return v32
	// succ:  fn000F98EA_exit
l000F9A4A:
	v32 = 0<32>
	return v32
	// succ:  fn000F98EA_exit
l000F9A4E:
	return v32
	// succ:  fn000F98EA_exit
fn000F98EA_exit:


// fn000F9A50
// Return size: 0
word32 fn000F9A50(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn000F9A50_entry:
	// succ:  l000F9A50
l000F9A50:
	v32 = Mem0[0x00140030<p32>:word32]
	loc33 = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x70<32>
	v32 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000F9A6B
	// succ:  l000F9A65 l000F9A6B
l000F9A65:
	v32 = 0x70<32>
	abortStackOverflow(v32)
	// succ:  l000F9A6B
l000F9A6B:
	v32 = loc33
	v33 = 0x20<32>
	v32 = v32 + v33
	loc5 = v32
	v32 = loc33
	v33 = 8<32>
	v32 = v32 + v33
	loc31 = v32
	v32 = loc33
	loc26 = v32
	v32 = loc33
	v33 = 0x4F<32>
	v32 = v32 + v33
	loc27 = v32
	v32 = loc33
	v33 = 0x24<32>
	v32 = v32 + v33
	loc28 = v32
	v32 = loc33
	v33 = 0x1C<32>
	v32 = v32 + v33
	loc29 = v32
	v32 = loc33
	v33 = 0x18<32>
	v32 = v32 + v33
	loc30 = v32
	v32 = loc33
	v33 = 0x14<32>
	v32 = v32 + v33
	loc6 = v32
	v32 = loc33
	v33 = 0x10<32>
	v32 = v32 + v33
	loc7 = v32
	v32 = loc26
	v35 = 0x25<64>
	Mem0[v32:word64] = v35
	v32 = loc26
	v33 = 1<32>
	v32 = v32 + v33
	loc8 = v32
	v32 = arg2
	v33 = 4<32>
	v32 = v32 + v33
	loc9 = v32
	v32 = loc9
	v32 = Mem0[v32:word32]
	loc10 = v32
	v32 = loc8
	v33 = 0x38A6<32>
	v36 = 1<32>
	v37 = loc10
	fn000FB8CE(v32, v33, v36, v37)
	v32 = fn000EAD0D()
	loc11 = v32
	v32 = loc31
	v35 = arg4
	Mem0[v32:word64] = v35
	v32 = loc27
	v33 = 0x17<32>
	v36 = loc11
	v37 = loc26
	v38 = loc31
	v32 = fn000FA95B(v32, v33, v36, v37, v38)
	loc12 = v32
	v32 = loc27
	v33 = loc12
	v32 = v32 + v33
	loc13 = v32
	v32 = loc27
	v33 = loc13
	v36 = arg2
	v32 = fn000FA9D7(v32, v33, v36)
	loc14 = v32
	v32 = arg2
	v32 = fn000E64CA(v32)
	loc15 = v32
	v32 = loc6
	v33 = loc15
	Mem0[v32:word32] = v33
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = 0x18C<32>
	v33 = loc27
	v36 = loc14
	v37 = loc13
	v38 = loc28
	v39 = loc29
	v40 = loc30
	v41 = loc6
	invoke_viiiiiii(v32, v33, v36, v37, v38, v39, v40, v41)
	v32 = Mem0[0x00140048<p32>:word32]
	loc16 = v32
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = loc16
	v33 = 1<32>
	v32 = v32 & v33
	loc17 = v32
	v32 = loc17
	branch !v32 l000F9B50
	// succ:  l000F9B36 l000F9B50
l000F9B36:
	v32 = ___cxa_find_matching_catch_2()
	loc23 = v32
	v32 = Mem0[0x00140094<p32>:word32]
	loc24 = v32
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc25 = v32
	v32 = loc25
	v32 = fn0011B43F(v32)
	v32 = loc23
	___resumeException(v32)
	goto l000F9B9A
	// succ:  l000F9B9A
l000F9B50:
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc18 = v32
	v32 = loc18
	v32 = fn0011B43F(v32)
	v32 = arg1
	v32 = Mem0[v32:word32]
	loc19 = v32
	v32 = loc7
	v33 = loc19
	Mem0[v32:word32] = v33
	v32 = loc29
	v32 = Mem0[v32:word32]
	loc20 = v32
	v32 = loc30
	v32 = Mem0[v32:word32]
	loc21 = v32
	v32 = loc5
	v33 = loc7
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc5
	v33 = loc28
	v36 = loc20
	v37 = loc21
	v38 = arg2
	v39 = arg3
	v32 = fn000D0874(v32, v33, v36, v37, v38, v39)
	loc22 = v32
	v32 = loc33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = loc22
	return v32
	// succ:  fn000F9A50_exit
l000F9B9A:
	v32 = 0<32>
	return v32
	// succ:  fn000F9A50_exit
l000F9B9E:
	return v32
	// succ:  fn000F9A50_exit
fn000F9A50_exit:


// fn000F9BA0
// Return size: 0
word32 fn000F9BA0(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000F9BA0_entry:
	// succ:  l000F9BA0
l000F9BA0:
	v32 = Mem0[0x00140030<p32>:word32]
	loc33 = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x50<32>
	v32 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000F9BBB
	// succ:  l000F9BB5 l000F9BBB
l000F9BB5:
	v32 = 0x50<32>
	abortStackOverflow(v32)
	// succ:  l000F9BBB
l000F9BBB:
	v32 = loc33
	v33 = 0x14<32>
	v32 = v32 + v33
	loc5 = v32
	v32 = loc33
	loc31 = v32
	v32 = loc33
	v33 = 0x3C<32>
	v32 = v32 + v33
	loc26 = v32
	v32 = loc33
	v33 = 0x30<32>
	v32 = v32 + v33
	loc27 = v32
	v32 = loc33
	v33 = 0x18<32>
	v32 = v32 + v33
	loc28 = v32
	v32 = loc33
	v33 = 0x10<32>
	v32 = v32 + v33
	loc29 = v32
	v32 = loc33
	v33 = 0xC<32>
	v32 = v32 + v33
	loc30 = v32
	v32 = loc33
	v33 = 8<32>
	v32 = v32 + v33
	loc6 = v32
	v32 = loc33
	v33 = 4<32>
	v32 = v32 + v33
	loc7 = v32
	v32 = loc26
	v33 = 0x38A9<32>
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc26
	v33 = 4<32>
	v32 = v32 + v33
	v33 = 0x38A9<32>
	v35 = 4<32>
	v33 = v33 + v35
	v36 = Mem0[v33:int16]
	v33 = CONVERT(v36, int16, word32)
	v37 = SLICE(v33, word16, 0)
	Mem0[v32:word16] = v37
	v32 = loc26
	v33 = 1<32>
	v32 = v32 + v33
	loc8 = v32
	v32 = arg2
	v33 = 4<32>
	v32 = v32 + v33
	loc9 = v32
	v32 = loc9
	v32 = Mem0[v32:word32]
	loc10 = v32
	v32 = loc8
	v33 = 0x38AF<32>
	v35 = 0<32>
	v38 = loc10
	fn000FB8CE(v32, v33, v35, v38)
	v32 = fn000EAD0D()
	loc11 = v32
	v32 = loc31
	v33 = arg4
	Mem0[v32:word32] = v33
	v32 = loc27
	v33 = 0xC<32>
	v35 = loc11
	v38 = loc26
	v39 = loc31
	v32 = fn000FA95B(v32, v33, v35, v38, v39)
	loc12 = v32
	v32 = loc27
	v33 = loc12
	v32 = v32 + v33
	loc13 = v32
	v32 = loc27
	v33 = loc13
	v35 = arg2
	v32 = fn000FA9D7(v32, v33, v35)
	loc14 = v32
	v32 = arg2
	v32 = fn000E64CA(v32)
	loc15 = v32
	v32 = loc6
	v33 = loc15
	Mem0[v32:word32] = v33
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = 0x18C<32>
	v33 = loc27
	v35 = loc14
	v38 = loc13
	v39 = loc28
	v40 = loc29
	v41 = loc30
	v42 = loc6
	invoke_viiiiiii(v32, v33, v35, v38, v39, v40, v41, v42)
	v32 = Mem0[0x00140048<p32>:word32]
	loc16 = v32
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = loc16
	v33 = 1<32>
	v32 = v32 & v33
	loc17 = v32
	v32 = loc17
	branch !v32 l000F9CB6
	// succ:  l000F9C9C l000F9CB6
l000F9C9C:
	v32 = ___cxa_find_matching_catch_2()
	loc23 = v32
	v32 = Mem0[0x00140094<p32>:word32]
	loc24 = v32
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc25 = v32
	v32 = loc25
	v32 = fn0011B43F(v32)
	v32 = loc23
	___resumeException(v32)
	goto l000F9D00
	// succ:  l000F9D00
l000F9CB6:
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc18 = v32
	v32 = loc18
	v32 = fn0011B43F(v32)
	v32 = arg1
	v32 = Mem0[v32:word32]
	loc19 = v32
	v32 = loc7
	v33 = loc19
	Mem0[v32:word32] = v33
	v32 = loc29
	v32 = Mem0[v32:word32]
	loc20 = v32
	v32 = loc30
	v32 = Mem0[v32:word32]
	loc21 = v32
	v32 = loc5
	v33 = loc7
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc5
	v33 = loc28
	v35 = loc20
	v38 = loc21
	v39 = arg2
	v40 = arg3
	v32 = fn000D0874(v32, v33, v35, v38, v39, v40)
	loc22 = v32
	v32 = loc33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = loc22
	return v32
	// succ:  fn000F9BA0_exit
l000F9D00:
	v32 = 0<32>
	return v32
	// succ:  fn000F9BA0_exit
l000F9D04:
	return v32
	// succ:  fn000F9BA0_exit
fn000F9BA0_exit:


// fn000F9D06
// Return size: 0
word32 fn000F9D06(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn000F9D06_entry:
	// succ:  l000F9D06
l000F9D06:
	v32 = Mem0[0x00140030<p32>:word32]
	loc33 = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x70<32>
	v32 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000F9D21
	// succ:  l000F9D1B l000F9D21
l000F9D1B:
	v32 = 0x70<32>
	abortStackOverflow(v32)
	// succ:  l000F9D21
l000F9D21:
	v32 = loc33
	v33 = 0x20<32>
	v32 = v32 + v33
	loc5 = v32
	v32 = loc33
	v33 = 8<32>
	v32 = v32 + v33
	loc31 = v32
	v32 = loc33
	loc26 = v32
	v32 = loc33
	v33 = 0x4F<32>
	v32 = v32 + v33
	loc27 = v32
	v32 = loc33
	v33 = 0x24<32>
	v32 = v32 + v33
	loc28 = v32
	v32 = loc33
	v33 = 0x1C<32>
	v32 = v32 + v33
	loc29 = v32
	v32 = loc33
	v33 = 0x18<32>
	v32 = v32 + v33
	loc30 = v32
	v32 = loc33
	v33 = 0x14<32>
	v32 = v32 + v33
	loc6 = v32
	v32 = loc33
	v33 = 0x10<32>
	v32 = v32 + v33
	loc7 = v32
	v32 = loc26
	v35 = 0x25<64>
	Mem0[v32:word64] = v35
	v32 = loc26
	v33 = 1<32>
	v32 = v32 + v33
	loc8 = v32
	v32 = arg2
	v33 = 4<32>
	v32 = v32 + v33
	loc9 = v32
	v32 = loc9
	v32 = Mem0[v32:word32]
	loc10 = v32
	v32 = loc8
	v33 = 0x38A6<32>
	v36 = 0<32>
	v37 = loc10
	fn000FB8CE(v32, v33, v36, v37)
	v32 = fn000EAD0D()
	loc11 = v32
	v32 = loc31
	v35 = arg4
	Mem0[v32:word64] = v35
	v32 = loc27
	v33 = 0x17<32>
	v36 = loc11
	v37 = loc26
	v38 = loc31
	v32 = fn000FA95B(v32, v33, v36, v37, v38)
	loc12 = v32
	v32 = loc27
	v33 = loc12
	v32 = v32 + v33
	loc13 = v32
	v32 = loc27
	v33 = loc13
	v36 = arg2
	v32 = fn000FA9D7(v32, v33, v36)
	loc14 = v32
	v32 = arg2
	v32 = fn000E64CA(v32)
	loc15 = v32
	v32 = loc6
	v33 = loc15
	Mem0[v32:word32] = v33
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = 0x18C<32>
	v33 = loc27
	v36 = loc14
	v37 = loc13
	v38 = loc28
	v39 = loc29
	v40 = loc30
	v41 = loc6
	invoke_viiiiiii(v32, v33, v36, v37, v38, v39, v40, v41)
	v32 = Mem0[0x00140048<p32>:word32]
	loc16 = v32
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = loc16
	v33 = 1<32>
	v32 = v32 & v33
	loc17 = v32
	v32 = loc17
	branch !v32 l000F9E06
	// succ:  l000F9DEC l000F9E06
l000F9DEC:
	v32 = ___cxa_find_matching_catch_2()
	loc23 = v32
	v32 = Mem0[0x00140094<p32>:word32]
	loc24 = v32
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc25 = v32
	v32 = loc25
	v32 = fn0011B43F(v32)
	v32 = loc23
	___resumeException(v32)
	goto l000F9E50
	// succ:  l000F9E50
l000F9E06:
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc18 = v32
	v32 = loc18
	v32 = fn0011B43F(v32)
	v32 = arg1
	v32 = Mem0[v32:word32]
	loc19 = v32
	v32 = loc7
	v33 = loc19
	Mem0[v32:word32] = v33
	v32 = loc29
	v32 = Mem0[v32:word32]
	loc20 = v32
	v32 = loc30
	v32 = Mem0[v32:word32]
	loc21 = v32
	v32 = loc5
	v33 = loc7
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc5
	v33 = loc28
	v36 = loc20
	v37 = loc21
	v38 = arg2
	v39 = arg3
	v32 = fn000D0874(v32, v33, v36, v37, v38, v39)
	loc22 = v32
	v32 = loc33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = loc22
	return v32
	// succ:  fn000F9D06_exit
l000F9E50:
	v32 = 0<32>
	return v32
	// succ:  fn000F9D06_exit
l000F9E54:
	return v32
	// succ:  fn000F9D06_exit
fn000F9D06_exit:


// fn000F9E56
// Return size: 0
word32 fn000F9E56(word32 arg0, word32 arg1, word32 arg2, word32 arg3, real64 arg4)
fn000F9E56_entry:
	// succ:  l000F9E56
l000F9E56:
	v110 = Mem0[0x00140030<p32>:word32]
	loc111 = v110
	v110 = Mem0[0x00140030<p32>:word32]
	v111 = 0xB0<32>
	v110 = v110 + v111
	Mem0[0x00140030<p32>:word32] = v110
	v110 = Mem0[0x00140030<p32>:word32]
	v111 = Mem0[0x00140034<p32>:word32]
	v112 = v110 >= v111
	branch !v112 l000F9E71
	// succ:  l000F9E6B l000F9E71
l000F9E6B:
	v110 = 0xB0<32>
	abortStackOverflow(v110)
	// succ:  l000F9E71
l000F9E71:
	v110 = loc111
	v111 = 0x4C<32>
	v110 = v110 + v111
	loc17 = v110
	v110 = loc111
	v111 = 0x30<32>
	v110 = v110 + v111
	loc107 = v110
	v110 = loc111
	v111 = 0x20<32>
	v110 = v110 + v111
	loc106 = v110
	v110 = loc111
	v111 = 0x18<32>
	v110 = v110 + v111
	loc105 = v110
	v110 = loc111
	v111 = 8<32>
	v110 = v110 + v111
	loc104 = v110
	v110 = loc111
	loc65 = v110
	v110 = loc111
	v111 = 0x8A<32>
	v110 = v110 + v111
	loc76 = v110
	v110 = loc111
	v111 = 0x48<32>
	v110 = v110 + v111
	loc87 = v110
	v110 = loc111
	v111 = 0x50<32>
	v110 = v110 + v111
	loc98 = v110
	v110 = loc111
	v111 = 0x44<32>
	v110 = v110 + v111
	loc103 = v110
	v110 = loc111
	v111 = 0x40<32>
	v110 = v110 + v111
	loc25 = v110
	v110 = loc111
	v111 = 0x3C<32>
	v110 = v110 + v111
	loc26 = v110
	v110 = loc111
	v111 = 0x38<32>
	v110 = v110 + v111
	loc27 = v110
	v110 = loc65
	v113 = 0x25<64>
	Mem0[v110:word64] = v113
	v110 = loc65
	v111 = 1<32>
	v110 = v110 + v111
	loc28 = v110
	v110 = arg2
	v111 = 4<32>
	v110 = v110 + v111
	loc29 = v110
	v110 = loc29
	v110 = Mem0[v110:word32]
	loc30 = v110
	v110 = loc28
	v111 = 0x5C11<32>
	v114 = loc30
	v110 = fn000FAB19(v110, v111, v114)
	loc31 = v110
	v110 = loc87
	v111 = loc76
	Mem0[v110:word32] = v111
	v110 = fn000EAD0D()
	loc32 = v110
	v110 = loc31
	branch !v110 l000F9F3F
	// succ:  l000F9F08 l000F9F3F
l000F9F08:
	v110 = arg2
	v111 = 8<32>
	v110 = v110 + v111
	loc33 = v110
	v110 = loc33
	v110 = Mem0[v110:word32]
	loc34 = v110
	v110 = loc104
	v111 = loc34
	Mem0[v110:word32] = v111
	v110 = loc104
	v111 = 8<32>
	v110 = v110 + v111
	loc108 = v110
	v110 = loc108
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = loc76
	v111 = 0x1E<32>
	v114 = loc32
	v116 = loc65
	v117 = loc104
	v110 = fn000FA95B(v110, v111, v114, v116, v117)
	loc35 = v110
	v110 = loc35
	loc5 = v110
	goto l000F9F59
	// succ:  l000F9F59
l000F9F3F:
	v110 = loc105
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = loc76
	v111 = 0x1E<32>
	v114 = loc32
	v116 = loc65
	v117 = loc105
	v110 = fn000FA95B(v110, v111, v114, v116, v117)
	loc36 = v110
	v110 = loc36
	loc5 = v110
	// succ:  l000F9F59
l000F9F59:
	v110 = loc5
	v111 = 0x1D<32>
	v112 = v110 > v111
	loc37 = v112
	// succ:  l000F9F61
l000F9F61:
	v110 = loc37
	branch !v110 l000FA0B5
	// succ:  l000F9F67 l000FA0B5
l000F9F67:
	v110 = loc31
	branch !v110 l000F9FDF
	// succ:  l000F9F6B l000F9FDF
l000F9F6B:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x17B<32>
	v110 = invoke_i(v110)
	loc38 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc39 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc39
	v111 = 1<32>
	v110 = v110 & v111
	loc40 = v110
	v110 = loc40
	v112 = v110 == 0<32>
	branch !v112 l000F9FDE
	// succ:  l000F9F8A l000F9FDE
l000F9F8A:
	v110 = arg2
	v111 = 8<32>
	v110 = v110 + v111
	loc41 = v110
	v110 = loc41
	v110 = Mem0[v110:word32]
	loc42 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc106
	v111 = loc42
	Mem0[v110:word32] = v111
	v110 = loc106
	v111 = 8<32>
	v110 = v110 + v111
	loc109 = v110
	v110 = loc109
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = 0x18D<32>
	v111 = loc87
	v114 = loc38
	v116 = loc65
	v117 = loc106
	v110 = invoke_iiiii(v110, v111, v114, v116, v117)
	loc43 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc44 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc44
	v111 = 1<32>
	v110 = v110 & v111
	loc45 = v110
	v110 = loc45
	v112 = v110 == 0<32>
	branch !v112 l000F9FDD
	// succ:  l000F9FD4 l000F9FDD
l000F9FD4:
	v110 = loc43
	loc9 = v110
	v110 = 0xC<32>
	loc110 = v110
	// succ:  l000F9FDD
l000F9FDD:
	// succ:  l000F9FDE
l000F9FDE:
	goto l000FA036
	// succ:  l000FA036
l000F9FDF:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x17B<32>
	v110 = invoke_i(v110)
	loc48 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc49 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc49
	v111 = 1<32>
	v110 = v110 & v111
	loc50 = v110
	v110 = loc50
	v112 = v110 == 0<32>
	branch !v112 l000FA036
	// succ:  l000F9FFE l000FA036
l000F9FFE:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc107
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = 0x18D<32>
	v111 = loc87
	v114 = loc48
	v116 = loc65
	v117 = loc107
	v110 = invoke_iiiii(v110, v111, v114, v116, v117)
	loc51 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc52 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc52
	v111 = 1<32>
	v110 = v110 & v111
	loc53 = v110
	v110 = loc53
	v112 = v110 == 0<32>
	branch !v112 l000FA035
	// succ:  l000FA02C l000FA035
l000FA02C:
	v110 = loc51
	loc9 = v110
	v110 = 0xC<32>
	loc110 = v110
	// succ:  l000FA035
l000FA035:
	// succ:  l000FA036
l000FA036:
	// succ:  l000FA036
l000FA036:
	v110 = loc110
	v111 = 0xC<32>
	v112 = v110 == v111
	branch !v112 l000FA0A4
	// succ:  l000FA03E l000FA0A4
l000FA03E:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc54 = v110
	v110 = loc54
	v111 = 0<32>
	v112 = v110 == v111
	loc55 = v112
	v110 = loc55
	v112 = v110 == 0<32>
	branch !v112 l000FA068
	// succ:  l000FA051 l000FA068
l000FA051:
	v110 = loc54
	loc56 = v110
	v110 = loc9
	loc12 = v110
	v110 = loc54
	loc22 = v110
	v110 = loc56
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	goto l000FA0CD
	// succ:  l000FA0CD
l000FA068:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18A<32>
	invoke_v(v110)
	v110 = Mem0[0x00140048<p32>:word32]
	loc57 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc57
	v111 = 1<32>
	v110 = v110 & v111
	loc58 = v110
	v110 = loc58
	v112 = v110 == 0<32>
	branch !v112 l000FA0A3
	// succ:  l000FA085 l000FA0A3
l000FA085:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc18 = v110
	v110 = loc18
	loc59 = v110
	v110 = loc9
	loc12 = v110
	v110 = loc59
	loc22 = v110
	v110 = loc18
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	goto l000FA0CD
	// succ:  l000FA0CD
l000FA0A3:
	// succ:  l000FA0A4
l000FA0A4:
	v110 = ___cxa_find_matching_catch_2()
	loc46 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc47 = v110
	v110 = loc47
	loc15 = v110
	v110 = loc46
	loc16 = v110
	goto l000FA0CC
	// succ:  l000FA0CC
l000FA0B5:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc19 = v110
	v110 = loc5
	loc12 = v110
	v110 = loc19
	loc22 = v110
	v110 = 0<32>
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	// succ:  l000FA0CC
l000FA0CC:
	// succ:  l000FA0CD
l000FA0CD:
	v110 = loc110
	v111 = 0x10<32>
	v112 = v110 == v111
	branch !v112 l000FA317
	// succ:  l000FA0D5 l000FA317
l000FA0D5:
	v110 = loc22
	v111 = loc12
	v110 = v110 + v111
	loc60 = v110
	v110 = loc22
	v111 = loc60
	v114 = arg2
	v110 = fn000FA9D7(v110, v111, v114)
	loc61 = v110
	v110 = loc22
	v111 = loc76
	v112 = v110 == v111
	loc62 = v112
	// succ:  l000FA0EE
l000FA0EE:
	v110 = loc62
	branch !v110 l000FA105
	// succ:  l000FA0F4 l000FA105
l000FA0F4:
	v110 = loc98
	loc6 = v110
	v110 = 0<32>
	loc23 = v110
	v110 = loc76
	loc75 = v110
	v110 = 0x16<32>
	loc110 = v110
	goto l000FA178
	// succ:  l000FA178
l000FA105:
	v110 = loc12
	v111 = 1<32>
	v110 = v110 << v111
	loc63 = v110
	v110 = loc63
	v110 = _malloc(v110)
	loc64 = v110
	v110 = loc64
	v111 = 0<32>
	v112 = v110 == v111
	loc66 = v112
	// succ:  l000FA11A
l000FA11A:
	v110 = loc66
	branch !v110 l000FA15E
	// succ:  l000FA120 l000FA15E
l000FA120:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18A<32>
	invoke_v(v110)
	v110 = Mem0[0x00140048<p32>:word32]
	loc67 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc67
	v111 = 1<32>
	v110 = v110 & v111
	loc68 = v110
	v110 = loc68
	branch !v110 l000FA14F
	// succ:  l000FA13C l000FA14F
l000FA13C:
	v110 = ___cxa_find_matching_catch_2()
	loc69 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc70 = v110
	v110 = loc69
	loc13 = v110
	v110 = loc70
	loc14 = v110
	goto l000FA179
	// succ:  l000FA179
l000FA14F:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc21 = v110
	v110 = loc21
	loc20 = v110
	goto l000FA163
	// succ:  l000FA163
l000FA15C:
	goto l000FA162
	// succ:  l000FA162
l000FA15E:
	v110 = loc22
	loc20 = v110
	// succ:  l000FA162
l000FA162:
	// succ:  l000FA163
l000FA163:
	v110 = loc64
	loc71 = v110
	v110 = loc64
	loc6 = v110
	v110 = loc71
	loc23 = v110
	v110 = loc20
	loc75 = v110
	v110 = 0x16<32>
	loc110 = v110
	// succ:  l000FA178
l000FA178:
	// succ:  l000FA179
l000FA179:
	v110 = loc110
	v111 = 0x16<32>
	v112 = v110 == v111
	branch !v112 l000FA2F0
	// succ:  l000FA181 l000FA2F0
l000FA181:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x167<32>
	v111 = arg2
	v110 = invoke_ii(v110, v111)
	loc72 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc73 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc73
	v111 = 1<32>
	v110 = v110 & v111
	loc74 = v110
	// succ:  l000FA19D
l000FA19D:
	v110 = loc74
	branch !v110 l000FA1B8
	// succ:  l000FA1A3 l000FA1B8
l000FA1A3:
	v110 = ___cxa_find_matching_catch_2()
	loc91 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc92 = v110
	v110 = loc91
	loc7 = v110
	v110 = loc92
	loc8 = v110
	v110 = 0x20<32>
	loc110 = v110
	goto l000FA2B7
	// succ:  l000FA2B7
l000FA1B8:
	v110 = loc26
	v111 = loc72
	Mem0[v110:word32] = v111
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18E<32>
	v111 = loc75
	v114 = loc61
	v116 = loc60
	v117 = loc6
	v118 = loc103
	v119 = loc25
	v120 = loc26
	invoke_viiiiiii(v110, v111, v114, v116, v117, v118, v119, v120)
	v110 = Mem0[0x00140048<p32>:word32]
	loc77 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc77
	v111 = 1<32>
	v110 = v110 & v111
	loc78 = v110
	v110 = loc78
	branch !v110 l000FA20D
	// succ:  l000FA1E9 l000FA20D
l000FA1E9:
	v110 = ___cxa_find_matching_catch_2()
	loc93 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc94 = v110
	v110 = loc26
	v110 = Mem0[v110:word32]
	loc95 = v110
	v110 = loc95
	v110 = fn0011B43F(v110)
	v110 = loc93
	loc7 = v110
	v110 = loc94
	loc8 = v110
	v110 = 0x20<32>
	loc110 = v110
	goto l000FA2B8
	// succ:  l000FA2B8
l000FA20D:
	v110 = loc26
	v110 = Mem0[v110:word32]
	loc79 = v110
	v110 = loc79
	v110 = fn0011B43F(v110)
	v110 = arg1
	v110 = Mem0[v110:word32]
	loc80 = v110
	v110 = loc27
	v111 = loc80
	Mem0[v110:word32] = v111
	v110 = loc103
	v110 = Mem0[v110:word32]
	loc81 = v110
	v110 = loc25
	v110 = Mem0[v110:word32]
	loc82 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc17
	v111 = loc27
	v111 = Mem0[v111:word32]
	Mem0[v110:word32] = v111
	v110 = 0x168<32>
	v111 = loc17
	v114 = loc6
	v116 = loc81
	v117 = loc82
	v118 = arg2
	v119 = arg3
	v110 = invoke_iiiiiii(v110, v111, v114, v116, v117, v118, v119)
	loc83 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc84 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc84
	v111 = 1<32>
	v110 = v110 & v111
	loc85 = v110
	v110 = loc85
	branch !v110 l000FA27D
	// succ:  l000FA26A l000FA27D
l000FA26A:
	v110 = ___cxa_find_matching_catch_2()
	loc96 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc97 = v110
	v110 = loc96
	loc10 = v110
	v110 = loc97
	loc11 = v110
	goto l000FA2B8
	// succ:  l000FA2B8
l000FA27D:
	v110 = arg1
	v111 = loc83
	Mem0[v110:word32] = v111
	v110 = loc23
	v111 = 0<32>
	v112 = v110 == v111
	loc86 = v112
	v110 = loc86
	v112 = v110 == 0<32>
	branch !v112 l000FA29A
	// succ:  l000FA290 l000FA29A
l000FA290:
	v110 = loc23
	loc88 = v110
	v110 = loc88
	_free(v110)
	// succ:  l000FA29A
l000FA29A:
	v110 = loc24
	v111 = 0<32>
	v112 = v110 == v111
	loc89 = v112
	v110 = loc89
	v112 = v110 == 0<32>
	branch !v112 l000FA2B0
	// succ:  l000FA2A6 l000FA2B0
l000FA2A6:
	v110 = loc24
	loc90 = v110
	v110 = loc90
	_free(v110)
	// succ:  l000FA2B0
l000FA2B0:
	v110 = loc111
	Mem0[0x00140030<p32>:word32] = v110
	v110 = loc83
	return v110
	// succ:  fn000F9E56_exit
l000FA2B7:
	// succ:  l000FA2B8
l000FA2B8:
	v110 = loc110
	v111 = 0x20<32>
	v112 = v110 == v111
	branch !v112 l000FA2C9
	// succ:  l000FA2C0 l000FA2C9
l000FA2C0:
	v110 = loc7
	loc10 = v110
	v110 = loc8
	loc11 = v110
	// succ:  l000FA2C9
l000FA2C9:
	v110 = loc23
	v111 = 0<32>
	v112 = v110 == v111
	loc99 = v112
	v110 = loc99
	branch !v110 l000FA2DD
	// succ:  l000FA2D4 l000FA2DD
l000FA2D4:
	v110 = loc10
	loc13 = v110
	v110 = loc11
	loc14 = v110
	goto l000FA2EE
	// succ:  l000FA2EE
l000FA2DD:
	v110 = loc23
	loc100 = v110
	v110 = loc100
	_free(v110)
	v110 = loc10
	loc13 = v110
	v110 = loc11
	loc14 = v110
	// succ:  l000FA2EE
l000FA2EE:
	// succ:  l000FA2F0
l000FA2F0:
	v110 = loc24
	v111 = 0<32>
	v112 = v110 == v111
	loc101 = v112
	v110 = loc101
	branch !v110 l000FA304
	// succ:  l000FA2FB l000FA304
l000FA2FB:
	v110 = loc14
	loc15 = v110
	v110 = loc13
	loc16 = v110
	goto l000FA315
	// succ:  l000FA315
l000FA304:
	v110 = loc24
	loc102 = v110
	v110 = loc102
	_free(v110)
	v110 = loc14
	loc15 = v110
	v110 = loc13
	loc16 = v110
	// succ:  l000FA315
l000FA315:
	// succ:  l000FA317
l000FA317:
	v110 = loc16
	___resumeException(v110)
	v110 = 0<32>
	return v110
	// succ:  fn000F9E56_exit
l000FA31E:
	return v110
	// succ:  fn000F9E56_exit
fn000F9E56_exit:


// fn000FA320
// Return size: 0
word32 fn000FA320(word32 arg0, word32 arg1, word32 arg2, word32 arg3, real64 arg4)
fn000FA320_entry:
	// succ:  l000FA320
l000FA320:
	v110 = Mem0[0x00140030<p32>:word32]
	loc111 = v110
	v110 = Mem0[0x00140030<p32>:word32]
	v111 = 0xB0<32>
	v110 = v110 + v111
	Mem0[0x00140030<p32>:word32] = v110
	v110 = Mem0[0x00140030<p32>:word32]
	v111 = Mem0[0x00140034<p32>:word32]
	v112 = v110 >= v111
	branch !v112 l000FA33B
	// succ:  l000FA335 l000FA33B
l000FA335:
	v110 = 0xB0<32>
	abortStackOverflow(v110)
	// succ:  l000FA33B
l000FA33B:
	v110 = loc111
	v111 = 0x4C<32>
	v110 = v110 + v111
	loc17 = v110
	v110 = loc111
	v111 = 0x30<32>
	v110 = v110 + v111
	loc107 = v110
	v110 = loc111
	v111 = 0x20<32>
	v110 = v110 + v111
	loc106 = v110
	v110 = loc111
	v111 = 0x18<32>
	v110 = v110 + v111
	loc105 = v110
	v110 = loc111
	v111 = 8<32>
	v110 = v110 + v111
	loc104 = v110
	v110 = loc111
	loc65 = v110
	v110 = loc111
	v111 = 0x8A<32>
	v110 = v110 + v111
	loc76 = v110
	v110 = loc111
	v111 = 0x48<32>
	v110 = v110 + v111
	loc87 = v110
	v110 = loc111
	v111 = 0x50<32>
	v110 = v110 + v111
	loc98 = v110
	v110 = loc111
	v111 = 0x44<32>
	v110 = v110 + v111
	loc103 = v110
	v110 = loc111
	v111 = 0x40<32>
	v110 = v110 + v111
	loc25 = v110
	v110 = loc111
	v111 = 0x3C<32>
	v110 = v110 + v111
	loc26 = v110
	v110 = loc111
	v111 = 0x38<32>
	v110 = v110 + v111
	loc27 = v110
	v110 = loc65
	v113 = 0x25<64>
	Mem0[v110:word64] = v113
	v110 = loc65
	v111 = 1<32>
	v110 = v110 + v111
	loc28 = v110
	v110 = arg2
	v111 = 4<32>
	v110 = v110 + v111
	loc29 = v110
	v110 = loc29
	v110 = Mem0[v110:word32]
	loc30 = v110
	v110 = loc28
	v111 = 0x38A4<32>
	v114 = loc30
	v110 = fn000FAB19(v110, v111, v114)
	loc31 = v110
	v110 = loc87
	v111 = loc76
	Mem0[v110:word32] = v111
	v110 = fn000EAD0D()
	loc32 = v110
	v110 = loc31
	branch !v110 l000FA409
	// succ:  l000FA3D2 l000FA409
l000FA3D2:
	v110 = arg2
	v111 = 8<32>
	v110 = v110 + v111
	loc33 = v110
	v110 = loc33
	v110 = Mem0[v110:word32]
	loc34 = v110
	v110 = loc104
	v111 = loc34
	Mem0[v110:word32] = v111
	v110 = loc104
	v111 = 8<32>
	v110 = v110 + v111
	loc108 = v110
	v110 = loc108
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = loc76
	v111 = 0x1E<32>
	v114 = loc32
	v116 = loc65
	v117 = loc104
	v110 = fn000FA95B(v110, v111, v114, v116, v117)
	loc35 = v110
	v110 = loc35
	loc5 = v110
	goto l000FA423
	// succ:  l000FA423
l000FA409:
	v110 = loc105
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = loc76
	v111 = 0x1E<32>
	v114 = loc32
	v116 = loc65
	v117 = loc105
	v110 = fn000FA95B(v110, v111, v114, v116, v117)
	loc36 = v110
	v110 = loc36
	loc5 = v110
	// succ:  l000FA423
l000FA423:
	v110 = loc5
	v111 = 0x1D<32>
	v112 = v110 > v111
	loc37 = v112
	// succ:  l000FA42B
l000FA42B:
	v110 = loc37
	branch !v110 l000FA57F
	// succ:  l000FA431 l000FA57F
l000FA431:
	v110 = loc31
	branch !v110 l000FA4A9
	// succ:  l000FA435 l000FA4A9
l000FA435:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x17B<32>
	v110 = invoke_i(v110)
	loc38 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc39 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc39
	v111 = 1<32>
	v110 = v110 & v111
	loc40 = v110
	v110 = loc40
	v112 = v110 == 0<32>
	branch !v112 l000FA4A8
	// succ:  l000FA454 l000FA4A8
l000FA454:
	v110 = arg2
	v111 = 8<32>
	v110 = v110 + v111
	loc41 = v110
	v110 = loc41
	v110 = Mem0[v110:word32]
	loc42 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc106
	v111 = loc42
	Mem0[v110:word32] = v111
	v110 = loc106
	v111 = 8<32>
	v110 = v110 + v111
	loc109 = v110
	v110 = loc109
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = 0x18D<32>
	v111 = loc87
	v114 = loc38
	v116 = loc65
	v117 = loc106
	v110 = invoke_iiiii(v110, v111, v114, v116, v117)
	loc43 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc44 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc44
	v111 = 1<32>
	v110 = v110 & v111
	loc45 = v110
	v110 = loc45
	v112 = v110 == 0<32>
	branch !v112 l000FA4A7
	// succ:  l000FA49E l000FA4A7
l000FA49E:
	v110 = loc43
	loc9 = v110
	v110 = 0xC<32>
	loc110 = v110
	// succ:  l000FA4A7
l000FA4A7:
	// succ:  l000FA4A8
l000FA4A8:
	goto l000FA500
	// succ:  l000FA500
l000FA4A9:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x17B<32>
	v110 = invoke_i(v110)
	loc48 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc49 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc49
	v111 = 1<32>
	v110 = v110 & v111
	loc50 = v110
	v110 = loc50
	v112 = v110 == 0<32>
	branch !v112 l000FA500
	// succ:  l000FA4C8 l000FA500
l000FA4C8:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc107
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = 0x18D<32>
	v111 = loc87
	v114 = loc48
	v116 = loc65
	v117 = loc107
	v110 = invoke_iiiii(v110, v111, v114, v116, v117)
	loc51 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc52 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc52
	v111 = 1<32>
	v110 = v110 & v111
	loc53 = v110
	v110 = loc53
	v112 = v110 == 0<32>
	branch !v112 l000FA4FF
	// succ:  l000FA4F6 l000FA4FF
l000FA4F6:
	v110 = loc51
	loc9 = v110
	v110 = 0xC<32>
	loc110 = v110
	// succ:  l000FA4FF
l000FA4FF:
	// succ:  l000FA500
l000FA500:
	// succ:  l000FA500
l000FA500:
	v110 = loc110
	v111 = 0xC<32>
	v112 = v110 == v111
	branch !v112 l000FA56E
	// succ:  l000FA508 l000FA56E
l000FA508:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc54 = v110
	v110 = loc54
	v111 = 0<32>
	v112 = v110 == v111
	loc55 = v112
	v110 = loc55
	v112 = v110 == 0<32>
	branch !v112 l000FA532
	// succ:  l000FA51B l000FA532
l000FA51B:
	v110 = loc54
	loc56 = v110
	v110 = loc9
	loc12 = v110
	v110 = loc54
	loc22 = v110
	v110 = loc56
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	goto l000FA597
	// succ:  l000FA597
l000FA532:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18A<32>
	invoke_v(v110)
	v110 = Mem0[0x00140048<p32>:word32]
	loc57 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc57
	v111 = 1<32>
	v110 = v110 & v111
	loc58 = v110
	v110 = loc58
	v112 = v110 == 0<32>
	branch !v112 l000FA56D
	// succ:  l000FA54F l000FA56D
l000FA54F:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc18 = v110
	v110 = loc18
	loc59 = v110
	v110 = loc9
	loc12 = v110
	v110 = loc59
	loc22 = v110
	v110 = loc18
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	goto l000FA597
	// succ:  l000FA597
l000FA56D:
	// succ:  l000FA56E
l000FA56E:
	v110 = ___cxa_find_matching_catch_2()
	loc46 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc47 = v110
	v110 = loc47
	loc15 = v110
	v110 = loc46
	loc16 = v110
	goto l000FA596
	// succ:  l000FA596
l000FA57F:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc19 = v110
	v110 = loc5
	loc12 = v110
	v110 = loc19
	loc22 = v110
	v110 = 0<32>
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	// succ:  l000FA596
l000FA596:
	// succ:  l000FA597
l000FA597:
	v110 = loc110
	v111 = 0x10<32>
	v112 = v110 == v111
	branch !v112 l000FA7E1
	// succ:  l000FA59F l000FA7E1
l000FA59F:
	v110 = loc22
	v111 = loc12
	v110 = v110 + v111
	loc60 = v110
	v110 = loc22
	v111 = loc60
	v114 = arg2
	v110 = fn000FA9D7(v110, v111, v114)
	loc61 = v110
	v110 = loc22
	v111 = loc76
	v112 = v110 == v111
	loc62 = v112
	// succ:  l000FA5B8
l000FA5B8:
	v110 = loc62
	branch !v110 l000FA5CF
	// succ:  l000FA5BE l000FA5CF
l000FA5BE:
	v110 = loc98
	loc6 = v110
	v110 = 0<32>
	loc23 = v110
	v110 = loc76
	loc75 = v110
	v110 = 0x16<32>
	loc110 = v110
	goto l000FA642
	// succ:  l000FA642
l000FA5CF:
	v110 = loc12
	v111 = 1<32>
	v110 = v110 << v111
	loc63 = v110
	v110 = loc63
	v110 = _malloc(v110)
	loc64 = v110
	v110 = loc64
	v111 = 0<32>
	v112 = v110 == v111
	loc66 = v112
	// succ:  l000FA5E4
l000FA5E4:
	v110 = loc66
	branch !v110 l000FA628
	// succ:  l000FA5EA l000FA628
l000FA5EA:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18A<32>
	invoke_v(v110)
	v110 = Mem0[0x00140048<p32>:word32]
	loc67 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc67
	v111 = 1<32>
	v110 = v110 & v111
	loc68 = v110
	v110 = loc68
	branch !v110 l000FA619
	// succ:  l000FA606 l000FA619
l000FA606:
	v110 = ___cxa_find_matching_catch_2()
	loc69 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc70 = v110
	v110 = loc69
	loc13 = v110
	v110 = loc70
	loc14 = v110
	goto l000FA643
	// succ:  l000FA643
l000FA619:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc21 = v110
	v110 = loc21
	loc20 = v110
	goto l000FA62D
	// succ:  l000FA62D
l000FA626:
	goto l000FA62C
	// succ:  l000FA62C
l000FA628:
	v110 = loc22
	loc20 = v110
	// succ:  l000FA62C
l000FA62C:
	// succ:  l000FA62D
l000FA62D:
	v110 = loc64
	loc71 = v110
	v110 = loc64
	loc6 = v110
	v110 = loc71
	loc23 = v110
	v110 = loc20
	loc75 = v110
	v110 = 0x16<32>
	loc110 = v110
	// succ:  l000FA642
l000FA642:
	// succ:  l000FA643
l000FA643:
	v110 = loc110
	v111 = 0x16<32>
	v112 = v110 == v111
	branch !v112 l000FA7BA
	// succ:  l000FA64B l000FA7BA
l000FA64B:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x167<32>
	v111 = arg2
	v110 = invoke_ii(v110, v111)
	loc72 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc73 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc73
	v111 = 1<32>
	v110 = v110 & v111
	loc74 = v110
	// succ:  l000FA667
l000FA667:
	v110 = loc74
	branch !v110 l000FA682
	// succ:  l000FA66D l000FA682
l000FA66D:
	v110 = ___cxa_find_matching_catch_2()
	loc91 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc92 = v110
	v110 = loc91
	loc7 = v110
	v110 = loc92
	loc8 = v110
	v110 = 0x20<32>
	loc110 = v110
	goto l000FA781
	// succ:  l000FA781
l000FA682:
	v110 = loc26
	v111 = loc72
	Mem0[v110:word32] = v111
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18E<32>
	v111 = loc75
	v114 = loc61
	v116 = loc60
	v117 = loc6
	v118 = loc103
	v119 = loc25
	v120 = loc26
	invoke_viiiiiii(v110, v111, v114, v116, v117, v118, v119, v120)
	v110 = Mem0[0x00140048<p32>:word32]
	loc77 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc77
	v111 = 1<32>
	v110 = v110 & v111
	loc78 = v110
	v110 = loc78
	branch !v110 l000FA6D7
	// succ:  l000FA6B3 l000FA6D7
l000FA6B3:
	v110 = ___cxa_find_matching_catch_2()
	loc93 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc94 = v110
	v110 = loc26
	v110 = Mem0[v110:word32]
	loc95 = v110
	v110 = loc95
	v110 = fn0011B43F(v110)
	v110 = loc93
	loc7 = v110
	v110 = loc94
	loc8 = v110
	v110 = 0x20<32>
	loc110 = v110
	goto l000FA782
	// succ:  l000FA782
l000FA6D7:
	v110 = loc26
	v110 = Mem0[v110:word32]
	loc79 = v110
	v110 = loc79
	v110 = fn0011B43F(v110)
	v110 = arg1
	v110 = Mem0[v110:word32]
	loc80 = v110
	v110 = loc27
	v111 = loc80
	Mem0[v110:word32] = v111
	v110 = loc103
	v110 = Mem0[v110:word32]
	loc81 = v110
	v110 = loc25
	v110 = Mem0[v110:word32]
	loc82 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc17
	v111 = loc27
	v111 = Mem0[v111:word32]
	Mem0[v110:word32] = v111
	v110 = 0x168<32>
	v111 = loc17
	v114 = loc6
	v116 = loc81
	v117 = loc82
	v118 = arg2
	v119 = arg3
	v110 = invoke_iiiiiii(v110, v111, v114, v116, v117, v118, v119)
	loc83 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc84 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc84
	v111 = 1<32>
	v110 = v110 & v111
	loc85 = v110
	v110 = loc85
	branch !v110 l000FA747
	// succ:  l000FA734 l000FA747
l000FA734:
	v110 = ___cxa_find_matching_catch_2()
	loc96 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc97 = v110
	v110 = loc96
	loc10 = v110
	v110 = loc97
	loc11 = v110
	goto l000FA782
	// succ:  l000FA782
l000FA747:
	v110 = arg1
	v111 = loc83
	Mem0[v110:word32] = v111
	v110 = loc23
	v111 = 0<32>
	v112 = v110 == v111
	loc86 = v112
	v110 = loc86
	v112 = v110 == 0<32>
	branch !v112 l000FA764
	// succ:  l000FA75A l000FA764
l000FA75A:
	v110 = loc23
	loc88 = v110
	v110 = loc88
	_free(v110)
	// succ:  l000FA764
l000FA764:
	v110 = loc24
	v111 = 0<32>
	v112 = v110 == v111
	loc89 = v112
	v110 = loc89
	v112 = v110 == 0<32>
	branch !v112 l000FA77A
	// succ:  l000FA770 l000FA77A
l000FA770:
	v110 = loc24
	loc90 = v110
	v110 = loc90
	_free(v110)
	// succ:  l000FA77A
l000FA77A:
	v110 = loc111
	Mem0[0x00140030<p32>:word32] = v110
	v110 = loc83
	return v110
	// succ:  fn000FA320_exit
l000FA781:
	// succ:  l000FA782
l000FA782:
	v110 = loc110
	v111 = 0x20<32>
	v112 = v110 == v111
	branch !v112 l000FA793
	// succ:  l000FA78A l000FA793
l000FA78A:
	v110 = loc7
	loc10 = v110
	v110 = loc8
	loc11 = v110
	// succ:  l000FA793
l000FA793:
	v110 = loc23
	v111 = 0<32>
	v112 = v110 == v111
	loc99 = v112
	v110 = loc99
	branch !v110 l000FA7A7
	// succ:  l000FA79E l000FA7A7
l000FA79E:
	v110 = loc10
	loc13 = v110
	v110 = loc11
	loc14 = v110
	goto l000FA7B8
	// succ:  l000FA7B8
l000FA7A7:
	v110 = loc23
	loc100 = v110
	v110 = loc100
	_free(v110)
	v110 = loc10
	loc13 = v110
	v110 = loc11
	loc14 = v110
	// succ:  l000FA7B8
l000FA7B8:
	// succ:  l000FA7BA
l000FA7BA:
	v110 = loc24
	v111 = 0<32>
	v112 = v110 == v111
	loc101 = v112
	v110 = loc101
	branch !v110 l000FA7CE
	// succ:  l000FA7C5 l000FA7CE
l000FA7C5:
	v110 = loc14
	loc15 = v110
	v110 = loc13
	loc16 = v110
	goto l000FA7DF
	// succ:  l000FA7DF
l000FA7CE:
	v110 = loc24
	loc102 = v110
	v110 = loc102
	_free(v110)
	v110 = loc14
	loc15 = v110
	v110 = loc13
	loc16 = v110
	// succ:  l000FA7DF
l000FA7DF:
	// succ:  l000FA7E1
l000FA7E1:
	v110 = loc16
	___resumeException(v110)
	v110 = 0<32>
	return v110
	// succ:  fn000FA320_exit
l000FA7E8:
	return v110
	// succ:  fn000FA320_exit
fn000FA320_exit:


// fn000FA7EA
// Return size: 0
word32 fn000FA7EA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FA7EA_entry:
	// succ:  l000FA7EA
l000FA7EA:
	v34 = Mem0[0x00140030<p32>:word32]
	loc35 = v34
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = 0x60<32>
	v34 = v34 + v35
	Mem0[0x00140030<p32>:word32] = v34
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = Mem0[0x00140034<p32>:word32]
	v36 = v34 >= v35
	branch !v36 l000FA805
	// succ:  l000FA7FF l000FA805
l000FA7FF:
	v34 = 0x60<32>
	abortStackOverflow(v34)
	// succ:  l000FA805
l000FA805:
	v34 = loc35
	v35 = 0xC<32>
	v34 = v34 + v35
	loc6 = v34
	v34 = loc35
	loc33 = v34
	v34 = loc35
	v35 = 0x4C<32>
	v34 = v34 + v35
	loc28 = v34
	v34 = loc35
	v35 = 0x38<32>
	v34 = v34 + v35
	loc29 = v34
	v34 = loc35
	v35 = 0x10<32>
	v34 = v34 + v35
	loc30 = v34
	v34 = loc35
	v35 = 8<32>
	v34 = v34 + v35
	loc31 = v34
	v34 = loc35
	v35 = 4<32>
	v34 = v34 + v35
	loc32 = v34
	v34 = loc28
	v35 = 0x389E<32>
	v35 = Mem0[v35:word32]
	Mem0[v34:word32] = v35
	v34 = loc28
	v35 = 4<32>
	v34 = v34 + v35
	v35 = 0x389E<32>
	v37 = 4<32>
	v35 = v35 + v37
	v38 = Mem0[v35:int16]
	v35 = CONVERT(v38, int16, word32)
	v39 = SLICE(v35, word16, 0)
	Mem0[v34:word16] = v39
	v34 = fn000EAD0D()
	loc7 = v34
	v34 = loc33
	v35 = arg4
	Mem0[v34:word32] = v35
	v34 = loc29
	v35 = 0x14<32>
	v37 = loc7
	v40 = loc28
	v41 = loc33
	v34 = fn000FA95B(v34, v35, v37, v40, v41)
	loc8 = v34
	v34 = loc29
	v35 = loc8
	v34 = v34 + v35
	loc9 = v34
	v34 = loc29
	v35 = loc9
	v37 = arg2
	v34 = fn000FA9D7(v34, v35, v37)
	loc10 = v34
	v34 = arg2
	v34 = fn000E64CA(v34)
	loc11 = v34
	v34 = loc31
	v35 = loc11
	Mem0[v34:word32] = v35
	v34 = 0<32>
	Mem0[0x00140048<p32>:word32] = v34
	v34 = 0x164<32>
	v35 = loc31
	v37 = 0x4C70<32>
	v34 = invoke_iii(v34, v35, v37)
	loc12 = v34
	v34 = Mem0[0x00140048<p32>:word32]
	loc13 = v34
	v34 = 0<32>
	Mem0[0x00140048<p32>:word32] = v34
	v34 = loc13
	v35 = 1<32>
	v34 = v34 & v35
	loc14 = v34
	v34 = loc14
	branch !v34 l000FA8C4
	// succ:  l000FA8B1 l000FA8C4
l000FA8B1:
	v34 = ___cxa_find_matching_catch_2()
	loc26 = v34
	v34 = Mem0[0x00140094<p32>:word32]
	loc27 = v34
	v34 = loc11
	v34 = fn0011B43F(v34)
	v34 = loc26
	___resumeException(v34)
l000FA8C4:
	v34 = loc11
	v34 = fn0011B43F(v34)
	v34 = loc12
	v34 = Mem0[v34:word32]
	loc15 = v34
	v34 = loc15
	v35 = 0x20<32>
	v34 = v34 + v35
	loc16 = v34
	v34 = loc16
	v34 = Mem0[v34:word32]
	loc17 = v34
	v34 = loc12
	v35 = loc29
	v37 = loc9
	v40 = loc30
	v41 = loc17
	v42 = 0x1FF<32>
	v41 = v41 & v42
	v42 = 0x2520<32>
	v41 = v41 + v42
fn000FA7EA_exit:


// fn000FA95B
// Return size: 0
word32 fn000FA95B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FA95B_entry:
	// succ:  l000FA95B
l000FA95B:
	v13 = Mem0[0x00140030<p32>:word32]
	loc14 = v13
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = 0x10<32>
	v13 = v13 + v14
	Mem0[0x00140030<p32>:word32] = v13
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = Mem0[0x00140034<p32>:word32]
	v15 = v13 >= v14
	branch !v15 l000FA974
	// succ:  l000FA96F l000FA974
l000FA96F:
	v13 = 0x10<32>
	abortStackOverflow(v13)
	// succ:  l000FA974
l000FA974:
	v13 = loc14
	loc7 = v13
	v13 = loc7
	v14 = arg4
	Mem0[v13:word32] = v14
	v13 = arg2
	v13 = fn000DB419(v13)
	loc8 = v13
	v13 = arg0
	v14 = arg1
	v16 = arg3
	v17 = loc7
	v13 = fn000D29A3(v13, v14, v16, v17)
	loc9 = v13
	v13 = loc8
	v14 = 0<32>
	v15 = v13 == v14
	loc10 = v15
	v13 = loc10
	v15 = v13 == 0<32>
	branch !v15 l000FA9CE
	// succ:  l000FA99F l000FA9CE
l000FA99F:
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = 0x17E<32>
	v14 = loc8
	v13 = invoke_ii(v13, v14)
	v13 = Mem0[0x00140048<p32>:word32]
	loc11 = v13
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = loc11
	v14 = 1<32>
	v13 = v13 & v14
	loc12 = v13
	v13 = loc12
	branch !v13 l000FA9CD
	// succ:  l000FA9BE l000FA9CD
l000FA9BE:
	v13 = 0<32>
	v13 = ___cxa_find_matching_catch_3(v13)
	loc5 = v13
	v13 = Mem0[0x00140094<p32>:word32]
	loc6 = v13
	v13 = loc5
	fn000D0E65(v13)
	// succ:  l000FA9CD
l000FA9CD:
	// succ:  l000FA9CE
l000FA9CE:
	v13 = loc14
	Mem0[0x00140030<p32>:word32] = v13
	v13 = loc9
	return v13
	// succ:  fn000FA95B_exit
l000FA9D5:
	return v13
	// succ:  fn000FA95B_exit
fn000FA95B_exit:


// fn000FA9D7
// Return size: 0
word32 fn000FA9D7(word32 arg0, word32 arg1, word32 arg2)
fn000FA9D7_entry:
	// succ:  l000FA9D7
l000FA9D7:
	v21 = Mem0[0x00140030<p32>:word32]
	loc20 = v21
	v21 = arg2
	v22 = 4<32>
	v21 = v21 + v22
	loc10 = v21
	v21 = loc10
	v21 = Mem0[v21:word32]
	loc11 = v21
	v21 = loc11
	v22 = 0xB0<32>
	v21 = v21 & v22
	loc12 = v21
	v21 = loc12
	v22 = 0xFF<32>
	v21 = v21 & v22
	loc18 = v21
	// succ:  l000FA9FB
l000FA9FB:
	v21 = loc18
	v22 = 0x18<32>
	v21 = v21 << v22
	v22 = 0x18<32>
	v21 = v21 >> v22
	v22 = 0x10<32>
	v21 = v21 - v22
	switch (v21) { l000FAA24 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAAF7 }
	// succ:  l000FAA24 l000FAAF7 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01 l000FAB01
l000FAA24:
	v21 = arg0
	v23 = Mem0[v21:int8]
	v21 = CONVERT(v23, int8, word32)
	loc13 = v21
	// succ:  l000FAA2E
l000FAA2E:
	v21 = loc13
	v22 = 0x18<32>
	v21 = v21 << v22
	v22 = 0x18<32>
	v21 = v21 >> v22
	v22 = 0x2B<32>
	v21 = v21 - v22
	switch (v21) { l000FAA47 l000FAA5C l000FAA49 }
	// succ:  l000FAA47 l000FAA49 l000FAA5C
l000FAA47:
	// succ:  l000FAA49
l000FAA49:
	v21 = arg0
	v22 = 1<32>
	v21 = v21 + v22
	loc14 = v21
	v21 = loc14
	loc3 = v21
	goto l000FAB07
	// succ:  l000FAB07
l000FAA5B:
	// succ:  l000FAA5C
l000FAA5C:
	// succ:  l000FAA5E
l000FAA5E:
	v21 = arg1
	loc15 = v21
	v21 = arg0
	loc16 = v21
	v21 = loc15
	v22 = loc16
	v21 = v21 - v22
	loc4 = v21
	v21 = loc4
	v22 = 1<32>
	v24 = v21 > v22
	loc5 = v24
	v21 = loc13
	v22 = 0x18<32>
	v21 = v21 << v22
	v22 = 0x18<32>
	v21 = v21 >> v22
	v22 = 0x30<32>
	v24 = v21 == v22
	loc6 = v24
	v21 = loc5
	v22 = loc6
	v21 = v21 & v22
	loc17 = v21
	v21 = loc17
	branch !v21 l000FAAEF
	// succ:  l000FAA8D l000FAAEF
l000FAA8D:
	v21 = arg0
	v22 = 1<32>
	v21 = v21 + v22
	loc7 = v21
	v21 = loc7
	v25 = Mem0[v21:int8]
	v21 = CONVERT(v25, int8, word32)
	loc8 = v21
	// succ:  l000FAA9B
l000FAA9B:
	v21 = loc8
	v22 = 0x18<32>
	v21 = v21 << v22
	v22 = 0x18<32>
	v21 = v21 >> v22
	v22 = 0x58<32>
	v21 = v21 - v22
	switch (v21) { l000FAAD3 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD5 }
	// succ:  l000FAAD3 l000FAAD5 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8 l000FAAD8
l000FAAD3:
	// succ:  l000FAAD5
l000FAAD5:
	goto l000FAAE2
	// succ:  l000FAAE2
l000FAAD8:
	v21 = 7<32>
	loc19 = v21
	goto l000FAB07
	// succ:  l000FAB07
l000FAAE1:
	// succ:  l000FAAE2
l000FAAE2:
	v21 = arg0
	v22 = 2<32>
	v21 = v21 + v22
	loc9 = v21
	v21 = loc9
	loc3 = v21
	goto l000FAAF3
	// succ:  l000FAAF3
l000FAAEF:
	v21 = 7<32>
	loc19 = v21
	// succ:  l000FAAF3
l000FAAF3:
	goto l000FAB06
	// succ:  l000FAB06
l000FAAF6:
	// succ:  l000FAAF7
l000FAAF7:
	v21 = arg1
	loc3 = v21
	goto l000FAB06
	// succ:  l000FAB06
l000FAB00:
	// succ:  l000FAB01
l000FAB01:
	v21 = 7<32>
	loc19 = v21
	// succ:  l000FAB06
l000FAB06:
	// succ:  l000FAB07
l000FAB07:
	v21 = loc19
	v22 = 7<32>
	v24 = v21 == v22
	branch !v24 l000FAB14
	// succ:  l000FAB0F l000FAB14
l000FAB0F:
	v21 = arg0
	loc3 = v21
	// succ:  l000FAB14
l000FAB14:
	v21 = loc3
	return v21
	// succ:  fn000FA9D7_exit
l000FAB17:
	return v21
	// succ:  fn000FA9D7_exit
fn000FA9D7_exit:


// fn000FAB19
// Return size: 0
word32 fn000FAB19(word32 arg0, word32 arg1, word32 arg2)
fn000FAB19_entry:
	// succ:  l000FAB19
l000FAB19:
	v34 = Mem0[0x00140030<p32>:word32]
	loc33 = v34
	v34 = arg2
	v35 = 0x800<32>
	v34 = v34 & v35
	loc23 = v34
	v34 = loc23
	v35 = 0<32>
	v36 = v34 == v35
	loc24 = v36
	v34 = loc24
	branch !v34 l000FAB37
	// succ:  l000FAB32 l000FAB37
l000FAB32:
	v34 = arg0
	loc3 = v34
	goto l000FAB49
	// succ:  l000FAB49
l000FAB37:
	v34 = arg0
	v35 = 1<32>
	v34 = v34 + v35
	loc25 = v34
	v34 = arg0
	v35 = 0x2B<32>
	v37 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v37
	v34 = loc25
	loc3 = v34
	// succ:  l000FAB49
l000FAB49:
	v34 = arg2
	v35 = 0x400<32>
	v34 = v34 & v35
	loc26 = v34
	v34 = loc26
	v35 = 0<32>
	v36 = v34 == v35
	loc27 = v36
	v34 = loc27
	branch !v34 l000FAB62
	// succ:  l000FAB5D l000FAB62
l000FAB5D:
	v34 = loc3
	loc6 = v34
	goto l000FAB74
	// succ:  l000FAB74
l000FAB62:
	v34 = loc3
	v35 = 1<32>
	v34 = v34 + v35
	loc28 = v34
	v34 = loc3
	v35 = 0x23<32>
	v38 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v38
	v34 = loc28
	loc6 = v34
	// succ:  l000FAB74
l000FAB74:
	v34 = arg2
	v35 = 0x104<32>
	v34 = v34 & v35
	loc29 = v34
	v34 = arg2
	v35 = 0xE<32>
	v34 = v34 >>u v35
	loc9 = v34
	v34 = loc29
	v35 = 0x104<32>
	v36 = v34 == v35
	loc10 = v36
	v34 = loc10
	branch !v34 l000FAB99
	// succ:  l000FAB90 l000FAB99
l000FAB90:
	v34 = 0<32>
	loc5 = v34
	v34 = loc6
	loc8 = v34
	goto l000FABBD
	// succ:  l000FABBD
l000FAB99:
	v34 = loc6
	v35 = 1<32>
	v34 = v34 + v35
	loc11 = v34
	v34 = loc6
	v35 = 0x2E<32>
	v39 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v39
	v34 = loc6
	v35 = 2<32>
	v34 = v34 + v35
	loc12 = v34
	v34 = loc11
	v35 = 0x2A<32>
	v40 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v40
	v34 = 1<32>
	loc5 = v34
	v34 = loc12
	loc8 = v34
	// succ:  l000FABBD
l000FABBD:
	v34 = arg1
	loc4 = v34
	v34 = loc8
	loc7 = v34
	// succ:  l000FABC8
l000FABC8:
	v34 = loc4
	v41 = Mem0[v34:int8]
	v34 = CONVERT(v41, int8, word32)
	loc13 = v34
	v34 = loc13
	v35 = 0x18<32>
	v34 = v34 << v35
	v35 = 0x18<32>
	v34 = v34 >> v35
	v35 = 0<32>
	v36 = v34 == v35
	loc14 = v36
	v34 = loc14
	branch !v34 l000FABE5
	// succ:  l000FABE2 l000FABE5
l000FABE2:
	goto l000FAC04
	// succ:  l000FAC04
l000FABE5:
	v34 = loc4
	v35 = 1<32>
	v34 = v34 + v35
	loc15 = v34
	v34 = loc7
	v35 = 1<32>
	v34 = v34 + v35
	loc16 = v34
	v34 = loc7
	v35 = loc13
	v42 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v42
	v34 = loc15
	loc4 = v34
	v34 = loc16
	loc7 = v34
	goto l000FABBD
	// succ:  l000FABBD
l000FAC04:
	v34 = loc29
	v35 = 0xFFFF<32>
	v34 = v34 & v35
	loc30 = v34
	v34 = loc30
	v35 = 0x1FF<32>
	v34 = v34 & v35
	loc31 = v34
	// succ:  l000FAC17
l000FAC17:
	v34 = loc31
	v35 = 0x10<32>
	v34 = v34 << v35
	v35 = 0x10<32>
	v34 = v34 >> v35
	v35 = 4<32>
	v34 = v34 - v35
	switch (v34) { l000FAD2D l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD5B }
	// succ:  l000FAD2D l000FAD5B l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89 l000FAD89
l000FAD2D:
	v34 = loc9
	v35 = 1<32>
	v34 = v34 & v35
	loc17 = v34
	v34 = loc17
	v35 = 0<32>
	v36 = v34 == v35
	loc18 = v36
	v34 = loc18
	branch !v34 l000FAD4D
	// succ:  l000FAD42 l000FAD4D
l000FAD42:
	v34 = loc7
	v35 = 0x66<32>
	v43 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v43
	goto l000FADD6
	// succ:  l000FADD6
l000FAD4D:
	v34 = loc7
	v35 = 0x46<32>
	v44 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v44
	goto l000FADD6
	// succ:  l000FADD6
l000FAD57:
	goto l000FADD5
	// succ:  l000FADD5
l000FAD5A:
	// succ:  l000FAD5B
l000FAD5B:
	v34 = loc9
	v35 = 1<32>
	v34 = v34 & v35
	loc19 = v34
	v34 = loc19
	v35 = 0<32>
	v36 = v34 == v35
	loc20 = v36
	v34 = loc20
	branch !v34 l000FAD7B
	// succ:  l000FAD70 l000FAD7B
l000FAD70:
	v34 = loc7
	v35 = 0x65<32>
	v45 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v45
	goto l000FADD6
	// succ:  l000FADD6
l000FAD7B:
	v34 = loc7
	v35 = 0x45<32>
	v46 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v46
	goto l000FADD6
	// succ:  l000FADD6
l000FAD85:
	goto l000FADD5
	// succ:  l000FADD5
l000FAD88:
	// succ:  l000FAD89
l000FAD89:
	v34 = loc9
	v35 = 1<32>
	v34 = v34 & v35
	loc21 = v34
	v34 = loc21
	v35 = 0<32>
	v36 = v34 != v35
	loc22 = v36
	v34 = loc10
	branch !v34 l000FADB9
	// succ:  l000FAD9E l000FADB9
l000FAD9E:
	v34 = loc22
	branch !v34 l000FADAD
	// succ:  l000FADA2 l000FADAD
l000FADA2:
	v34 = loc7
	v35 = 0x41<32>
	v47 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v47
	goto l000FADD6
	// succ:  l000FADD6
l000FADAD:
	v34 = loc7
	v35 = 0x61<32>
	v48 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v48
	goto l000FADD6
	// succ:  l000FADD6
l000FADB7:
	goto l000FADD3
	// succ:  l000FADD3
l000FADB9:
	v34 = loc22
	branch !v34 l000FADC8
	// succ:  l000FADBD l000FADC8
l000FADBD:
	v34 = loc7
	v35 = 0x47<32>
	v49 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v49
	goto l000FADD6
	// succ:  l000FADD6
l000FADC8:
	v34 = loc7
	v35 = 0x67<32>
	v50 = SLICE(v35, byte, 0)
	Mem0[v34:byte] = v50
	goto l000FADD6
	// succ:  l000FADD6
l000FADD2:
	// succ:  l000FADD3
l000FADD3:
	// succ:  l000FADD4
l000FADD4:
	// succ:  l000FADD5
l000FADD5:
	// succ:  l000FADD6
l000FADD6:
	v34 = loc5
	return v34
	// succ:  fn000FAB19_exit
l000FADDA:
	return v34
	// succ:  fn000FAB19_exit
fn000FAB19_exit:


// fn000FADDC
// Return size: 0
word32 fn000FADDC(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000FADDC_entry:
	// succ:  l000FADDC
l000FADDC:
	v22 = Mem0[0x00140030<p32>:word32]
	loc22 = v22
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = 0x10<32>
	v22 = v22 + v23
	Mem0[0x00140030<p32>:word32] = v22
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = Mem0[0x00140034<p32>:word32]
	v24 = v22 >= v23
	branch !v24 l000FADF5
	// succ:  l000FADF0 l000FADF5
l000FADF0:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l000FADF5
l000FADF5:
	v22 = loc22
	loc14 = v22
	v22 = loc14
	v23 = arg3
	Mem0[v22:word32] = v23
	v22 = arg1
	v22 = fn000DB419(v22)
	loc15 = v22
	v22 = 0<32>
	Mem0[0x00140048<p32>:word32] = v22
	v22 = 0x18F<32>
	v23 = arg0
	v25 = arg2
	v26 = loc14
	v22 = invoke_iiii(v22, v23, v25, v26)
	loc16 = v22
	v22 = Mem0[0x00140048<p32>:word32]
	loc17 = v22
	v22 = 0<32>
	Mem0[0x00140048<p32>:word32] = v22
	v22 = loc17
	v23 = 1<32>
	v22 = v22 & v23
	loc18 = v22
	v22 = loc18
	branch !v22 l000FAE73
	// succ:  l000FAE2B l000FAE73
l000FAE2B:
	v22 = ___cxa_find_matching_catch_2()
	loc7 = v22
	v22 = Mem0[0x00140094<p32>:word32]
	loc8 = v22
	v22 = loc15
	v23 = 0<32>
	v24 = v22 == v23
	loc9 = v24
	v22 = loc9
	v24 = v22 == 0<32>
	branch !v24 l000FAE6E
	// succ:  l000FAE3F l000FAE6E
l000FAE3F:
	v22 = 0<32>
	Mem0[0x00140048<p32>:word32] = v22
	v22 = 0x17E<32>
	v23 = loc15
	v22 = invoke_ii(v22, v23)
	v22 = Mem0[0x00140048<p32>:word32]
	loc10 = v22
	v22 = 0<32>
	Mem0[0x00140048<p32>:word32] = v22
	v22 = loc10
	v23 = 1<32>
	v22 = v22 & v23
	loc11 = v22
	v22 = loc11
	branch !v22 l000FAE6D
	// succ:  l000FAE5E l000FAE6D
l000FAE5E:
	v22 = 0<32>
	v22 = ___cxa_find_matching_catch_3(v22)
	loc12 = v22
	v22 = Mem0[0x00140094<p32>:word32]
	loc13 = v22
	v22 = loc12
	fn000D0E65(v22)
	// succ:  l000FAE6D
l000FAE6D:
	// succ:  l000FAE6E
l000FAE6E:
	v22 = loc7
	___resumeException(v22)
	goto l000FAEB5
	// succ:  l000FAEB5
l000FAE73:
	v22 = loc15
	v23 = 0<32>
	v24 = v22 == v23
	loc19 = v24
	v22 = loc19
	v24 = v22 == 0<32>
	branch !v24 l000FAEAE
	// succ:  l000FAE7F l000FAEAE
l000FAE7F:
	v22 = 0<32>
	Mem0[0x00140048<p32>:word32] = v22
	v22 = 0x17E<32>
	v23 = loc15
	v22 = invoke_ii(v22, v23)
	v22 = Mem0[0x00140048<p32>:word32]
	loc20 = v22
	v22 = 0<32>
	Mem0[0x00140048<p32>:word32] = v22
	v22 = loc20
	v23 = 1<32>
	v22 = v22 & v23
	loc4 = v22
	v22 = loc4
	branch !v22 l000FAEAD
	// succ:  l000FAE9E l000FAEAD
l000FAE9E:
	v22 = 0<32>
	v22 = ___cxa_find_matching_catch_3(v22)
	loc5 = v22
	v22 = Mem0[0x00140094<p32>:word32]
	loc6 = v22
	v22 = loc5
	fn000D0E65(v22)
	// succ:  l000FAEAD
l000FAEAD:
	// succ:  l000FAEAE
l000FAEAE:
	v22 = loc22
	Mem0[0x00140030<p32>:word32] = v22
	v22 = loc16
	return v22
	// succ:  fn000FADDC_exit
l000FAEB5:
	v22 = 0<32>
	return v22
	// succ:  fn000FADDC_exit
l000FAEB9:
	return v22
	// succ:  fn000FADDC_exit
fn000FADDC_exit:


// fn000FAEBB
// Return size: 0
void fn000FAEBB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FAEBB_entry:
	// succ:  l000FAEBB
l000FAEBB:
	v212 = Mem0[0x00140030<p32>:word32]
	loc215 = v212
	v212 = Mem0[0x00140030<p32>:word32]
	v213 = 0x10<32>
	v212 = v212 + v213
	Mem0[0x00140030<p32>:word32] = v212
	v212 = Mem0[0x00140030<p32>:word32]
	v213 = Mem0[0x00140034<p32>:word32]
	v214 = v212 >= v213
	branch !v214 l000FAED5
	// succ:  l000FAED0 l000FAED5
l000FAED0:
	v212 = 0x10<32>
	abortStackOverflow(v212)
	// succ:  l000FAED5
l000FAED5:
	v212 = loc215
	loc179 = v212
	v212 = arg6
	v213 = 0x4C70<32>
	v212 = fn000EA9F7(v212, v213)
	loc190 = v212
	v212 = arg6
	v213 = 0x4C80<32>
	v212 = fn000EA9F7(v212, v213)
	loc201 = v212
	v212 = loc201
	v212 = Mem0[v212:word32]
	loc27 = v212
	v212 = loc27
	v213 = 0x14<32>
	v212 = v212 + v213
	loc38 = v212
	v212 = loc38
	v212 = Mem0[v212:word32]
	loc49 = v212
	v212 = loc179
	v213 = loc201
	v215 = loc49
	v216 = 0x1FF<32>
	v215 = v215 & v216
	v216 = 0x700<32>
	v215 = v215 + v216
fn000FAEBB_exit:


// fn000FB8CE
// Return size: 0
void fn000FB8CE(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
fn000FB8CE_entry:
	// succ:  l000FB8CE
l000FB8CE:
	v23 = Mem0[0x00140030<p32>:word32]
	loc23 = v23
	v23 = arg3
	v24 = 0x800<32>
	v23 = v23 & v24
	loc14 = v23
	v23 = loc14
	v24 = 0<32>
	v25 = v23 == v24
	loc15 = v25
	v23 = loc15
	branch !v23 l000FB8EC
	// succ:  l000FB8E7 l000FB8EC
l000FB8E7:
	v23 = arg0
	loc4 = v23
	goto l000FB8FE
	// succ:  l000FB8FE
l000FB8EC:
	v23 = arg0
	v24 = 1<32>
	v23 = v23 + v24
	loc16 = v23
	v23 = arg0
	v24 = 0x2B<32>
	v26 = SLICE(v24, byte, 0)
	Mem0[v23:byte] = v26
	v23 = loc16
	loc4 = v23
	// succ:  l000FB8FE
l000FB8FE:
	v23 = arg3
	v24 = 0x200<32>
	v23 = v23 & v24
	loc17 = v23
	v23 = loc17
	v24 = 0<32>
	v25 = v23 == v24
	loc18 = v25
	v23 = loc18
	branch !v23 l000FB91B
	// succ:  l000FB912 l000FB91B
l000FB912:
	v23 = arg1
	loc5 = v23
	v23 = loc4
	loc6 = v23
	goto l000FB931
	// succ:  l000FB931
l000FB91B:
	v23 = loc4
	v24 = 1<32>
	v23 = v23 + v24
	loc19 = v23
	v23 = loc4
	v24 = 0x23<32>
	v27 = SLICE(v24, byte, 0)
	Mem0[v23:byte] = v27
	v23 = arg1
	loc5 = v23
	v23 = loc19
	loc6 = v23
	// succ:  l000FB931
l000FB931:
	v23 = loc5
	v28 = Mem0[v23:int8]
	v23 = CONVERT(v28, int8, word32)
	loc7 = v23
	v23 = loc7
	v24 = 0x18<32>
	v23 = v23 << v24
	v24 = 0x18<32>
	v23 = v23 >> v24
	v24 = 0<32>
	v25 = v23 == v24
	loc8 = v25
	v23 = loc8
	branch !v23 l000FB951
	// succ:  l000FB94E l000FB951
l000FB94E:
	goto l000FB970
	// succ:  l000FB970
l000FB951:
	v23 = loc5
	v24 = 1<32>
	v23 = v23 + v24
	loc9 = v23
	v23 = loc6
	v24 = 1<32>
	v23 = v23 + v24
	loc10 = v23
	v23 = loc6
	v24 = loc7
	v29 = SLICE(v24, byte, 0)
	Mem0[v23:byte] = v29
	v23 = loc9
	loc5 = v23
	v23 = loc10
	loc6 = v23
	goto l000FB931
	// succ:  l000FB931
l000FB970:
	v23 = arg3
	v24 = 0x4A<32>
	v23 = v23 & v24
	loc11 = v23
	v23 = loc11
	v24 = 0xFF<32>
	v23 = v23 & v24
	loc20 = v23
	v23 = loc20
	v24 = 0x7F<32>
	v23 = v23 & v24
	loc21 = v23
	// succ:  l000FB98A
l000FB98A:
	v23 = loc21
	v24 = 0x18<32>
	v23 = v23 << v24
	v24 = 0x18<32>
	v23 = v23 >> v24
	v24 = 8<32>
	v23 = v23 - v24
	switch (v23) { l000FB9E9 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FB9DB }
	// succ:  l000FB9DB l000FB9E9 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19 l000FBA19
l000FB9DB:
	v23 = loc6
	v24 = 0x6F<32>
	v30 = SLICE(v24, byte, 0)
	Mem0[v23:byte] = v30
	goto l000FBA34
	// succ:  l000FBA34
l000FB9E8:
	// succ:  l000FB9E9
l000FB9E9:
	v23 = arg3
	v24 = 0x4000<32>
	v23 = v23 & v24
	loc12 = v23
	v23 = loc12
	v24 = 0<32>
	v25 = v23 == v24
	loc13 = v25
	v23 = loc13
	branch !v23 l000FBA0B
	// succ:  l000FBA00 l000FBA0B
l000FBA00:
	v23 = loc6
	v24 = 0x78<32>
	v31 = SLICE(v24, byte, 0)
	Mem0[v23:byte] = v31
	goto l000FBA35
	// succ:  l000FBA35
l000FBA0B:
	v23 = loc6
	v24 = 0x58<32>
	v32 = SLICE(v24, byte, 0)
	Mem0[v23:byte] = v32
	goto l000FBA35
	// succ:  l000FBA35
l000FBA15:
	goto l000FBA34
	// succ:  l000FBA34
l000FBA18:
	// succ:  l000FBA19
l000FBA19:
	v23 = arg2
	branch !v23 l000FBA29
	// succ:  l000FBA1E l000FBA29
l000FBA1E:
	v23 = loc6
	v24 = 0x64<32>
	v33 = SLICE(v24, byte, 0)
	Mem0[v23:byte] = v33
	goto l000FBA35
	// succ:  l000FBA35
l000FBA29:
	v23 = loc6
	v24 = 0x75<32>
	v34 = SLICE(v24, byte, 0)
	Mem0[v23:byte] = v34
	goto l000FBA35
	// succ:  l000FBA35
l000FBA33:
	// succ:  l000FBA34
l000FBA34:
	// succ:  l000FBA35
l000FBA35:
	return
	// succ:  fn000FB8CE_exit
l000FBA37:
	return
	// succ:  fn000FB8CE_exit
fn000FB8CE_exit:


// fn000FBA39
// Return size: 0
void fn000FBA39(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FBA39_entry:
	// succ:  l000FBA39
l000FBA39:
	v147 = Mem0[0x00140030<p32>:word32]
	loc150 = v147
	v147 = Mem0[0x00140030<p32>:word32]
	v148 = 0x10<32>
	v147 = v147 + v148
	Mem0[0x00140030<p32>:word32] = v147
	v147 = Mem0[0x00140030<p32>:word32]
	v148 = Mem0[0x00140034<p32>:word32]
	v149 = v147 >= v148
	branch !v149 l000FBA53
	// succ:  l000FBA4E l000FBA53
l000FBA4E:
	v147 = 0x10<32>
	abortStackOverflow(v147)
	// succ:  l000FBA53
l000FBA53:
	v147 = loc150
	loc114 = v147
	v147 = arg6
	v148 = 0x4C70<32>
	v147 = fn000EA9F7(v147, v148)
	loc125 = v147
	v147 = arg6
	v148 = 0x4C80<32>
	v147 = fn000EA9F7(v147, v148)
	loc136 = v147
	v147 = loc136
	v147 = Mem0[v147:word32]
	loc23 = v147
	v147 = loc23
	v148 = 0x14<32>
	v147 = v147 + v148
	loc34 = v147
	v147 = loc34
	v147 = Mem0[v147:word32]
	loc45 = v147
	v147 = loc114
	v148 = loc136
	v150 = loc45
	v151 = 0x1FF<32>
	v150 = v150 & v151
	v151 = 0x700<32>
	v150 = v150 + v151
fn000FBA39_exit:


// fn000FC0C8
// Return size: 0
void fn000FC0C8(word32 arg0)
fn000FC0C8_entry:
	// succ:  l000FC0C8
l000FC0C8:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	return
	// succ:  fn000FC0C8_exit
l000FC0CF:
	return
	// succ:  fn000FC0C8_exit
fn000FC0C8_exit:


// fn000FC0D1
// Return size: 0
void fn000FC0D1(word32 arg0)
fn000FC0D1_entry:
	// succ:  l000FC0D1
l000FC0D1:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000FC0D1_exit
l000FC0DD:
	return
	// succ:  fn000FC0D1_exit
fn000FC0D1_exit:


// fn000FC0DF
// Return size: 0
word32 fn000FC0DF(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FC0DF_entry:
	// succ:  l000FC0DF
l000FC0DF:
	v73 = Mem0[0x00140030<p32>:word32]
	loc74 = v73
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = 0x20<32>
	v73 = v73 + v74
	Mem0[0x00140030<p32>:word32] = v73
	v73 = Mem0[0x00140030<p32>:word32]
	v74 = Mem0[0x00140034<p32>:word32]
	v75 = v73 >= v74
	branch !v75 l000FC0F8
	// succ:  l000FC0F3 l000FC0F8
l000FC0F3:
	v73 = 0x20<32>
	abortStackOverflow(v73)
	// succ:  l000FC0F8
l000FC0F8:
	v73 = loc74
	v74 = 0x14<32>
	v73 = v73 + v74
	loc8 = v73
	v73 = loc74
	v74 = 0x10<32>
	v73 = v73 + v74
	loc55 = v73
	v73 = loc74
	v74 = 0xC<32>
	v73 = v73 + v74
	loc66 = v73
	v73 = loc74
	loc70 = v73
	v73 = arg2
	v74 = 4<32>
	v73 = v73 + v74
	loc71 = v73
	v73 = loc71
	v73 = Mem0[v73:word32]
	loc72 = v73
	v73 = loc72
	v74 = 1<32>
	v73 = v73 & v74
	loc15 = v73
	v73 = loc15
	v74 = 0<32>
	v75 = v73 == v74
	loc16 = v75
	// succ:  l000FC12D
l000FC12D:
	v73 = loc16
	v73 = v73
	// succ:  l000FC133
l000FC133:
	v73 = arg0
	v73 = Mem0[v73:word32]
	loc17 = v73
	v73 = loc17
	v74 = 0x18<32>
	v73 = v73 + v74
	loc18 = v73
	v73 = loc18
	v73 = Mem0[v73:word32]
	loc19 = v73
	v73 = arg1
	v73 = Mem0[v73:word32]
	loc20 = v73
	v73 = loc55
	v74 = loc20
	Mem0[v73:word32] = v74
	v73 = arg4
	v74 = 1<32>
	v73 = v73 & v74
	loc21 = v73
	v73 = loc8
	v74 = loc55
	v74 = Mem0[v74:word32]
	Mem0[v73:word32] = v74
	v73 = arg0
	v74 = loc8
	v76 = arg2
	v77 = arg3
	v78 = loc21
	v79 = loc19
	v80 = 0x1FF<32>
	v79 = v79 & v80
	v80 = 0x1D20<32>
	v79 = v79 + v80
fn000FC0DF_exit:


// fn000FC3DF
// Return size: 0
word32 fn000FC3DF(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FC3DF_entry:
	// succ:  l000FC3DF
l000FC3DF:
	v32 = Mem0[0x00140030<p32>:word32]
	loc33 = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x90<32>
	v32 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000FC3FA
	// succ:  l000FC3F4 l000FC3FA
l000FC3F4:
	v32 = 0x90<32>
	abortStackOverflow(v32)
	// succ:  l000FC3FA
l000FC3FA:
	v32 = loc33
	v33 = 0x70<32>
	v32 = v32 + v33
	loc5 = v32
	v32 = loc33
	loc31 = v32
	v32 = loc33
	v33 = 0x82<32>
	v32 = v32 + v33
	loc26 = v32
	v32 = loc33
	v33 = 0x74<32>
	v32 = v32 + v33
	loc27 = v32
	v32 = loc33
	v33 = 0x14<32>
	v32 = v32 + v33
	loc28 = v32
	v32 = loc33
	v33 = 0x10<32>
	v32 = v32 + v33
	loc29 = v32
	v32 = loc33
	v33 = 0xC<32>
	v32 = v32 + v33
	loc30 = v32
	v32 = loc33
	v33 = 8<32>
	v32 = v32 + v33
	loc6 = v32
	v32 = loc33
	v33 = 4<32>
	v32 = v32 + v33
	loc7 = v32
	v32 = loc26
	v33 = 0x38A9<32>
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc26
	v33 = 4<32>
	v32 = v32 + v33
	v33 = 0x38A9<32>
	v35 = 4<32>
	v33 = v33 + v35
	v36 = Mem0[v33:int16]
	v33 = CONVERT(v36, int16, word32)
	v37 = SLICE(v33, word16, 0)
	Mem0[v32:word16] = v37
	v32 = loc26
	v33 = 1<32>
	v32 = v32 + v33
	loc8 = v32
	v32 = arg2
	v33 = 4<32>
	v32 = v32 + v33
	loc9 = v32
	v32 = loc9
	v32 = Mem0[v32:word32]
	loc10 = v32
	v32 = loc8
	v33 = 0x38AF<32>
	v35 = 1<32>
	v38 = loc10
	fn000FB8CE(v32, v33, v35, v38)
	v32 = fn000EAD0D()
	loc11 = v32
	v32 = loc31
	v33 = arg4
	Mem0[v32:word32] = v33
	v32 = loc27
	v33 = 0xD<32>
	v35 = loc11
	v38 = loc26
	v39 = loc31
	v32 = fn000FA95B(v32, v33, v35, v38, v39)
	loc12 = v32
	v32 = loc27
	v33 = loc12
	v32 = v32 + v33
	loc13 = v32
	v32 = loc27
	v33 = loc13
	v35 = arg2
	v32 = fn000FA9D7(v32, v33, v35)
	loc14 = v32
	v32 = arg2
	v32 = fn000E64CA(v32)
	loc15 = v32
	v32 = loc6
	v33 = loc15
	Mem0[v32:word32] = v33
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = 0x192<32>
	v33 = loc27
	v35 = loc14
	v38 = loc13
	v39 = loc28
	v40 = loc29
	v41 = loc30
	v42 = loc6
	invoke_viiiiiii(v32, v33, v35, v38, v39, v40, v41, v42)
	v32 = Mem0[0x00140048<p32>:word32]
	loc16 = v32
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = loc16
	v33 = 1<32>
	v32 = v32 & v33
	loc17 = v32
	v32 = loc17
	branch !v32 l000FC4F8
	// succ:  l000FC4DE l000FC4F8
l000FC4DE:
	v32 = ___cxa_find_matching_catch_2()
	loc23 = v32
	v32 = Mem0[0x00140094<p32>:word32]
	loc24 = v32
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc25 = v32
	v32 = loc25
	v32 = fn0011B43F(v32)
	v32 = loc23
	___resumeException(v32)
	goto l000FC543
	// succ:  l000FC543
l000FC4F8:
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc18 = v32
	v32 = loc18
	v32 = fn0011B43F(v32)
	v32 = arg1
	v32 = Mem0[v32:word32]
	loc19 = v32
	v32 = loc7
	v33 = loc19
	Mem0[v32:word32] = v33
	v32 = loc29
	v32 = Mem0[v32:word32]
	loc20 = v32
	v32 = loc30
	v32 = Mem0[v32:word32]
	loc21 = v32
	v32 = loc5
	v33 = loc7
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc5
	v33 = loc28
	v35 = loc20
	v38 = loc21
	v39 = arg2
	v40 = arg3
	v32 = fn000FD465(v32, v33, v35, v38, v39, v40)
	loc22 = v32
	v32 = loc33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = loc22
	return v32
	// succ:  fn000FC3DF_exit
l000FC543:
	v32 = 0<32>
	return v32
	// succ:  fn000FC3DF_exit
l000FC547:
	return v32
	// succ:  fn000FC3DF_exit
fn000FC3DF_exit:


// fn000FC549
// Return size: 0
word32 fn000FC549(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn000FC549_entry:
	// succ:  l000FC549
l000FC549:
	v32 = Mem0[0x00140030<p32>:word32]
	loc33 = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0xF0<32>
	v32 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000FC564
	// succ:  l000FC55E l000FC564
l000FC55E:
	v32 = 0xF0<32>
	abortStackOverflow(v32)
	// succ:  l000FC564
l000FC564:
	v32 = loc33
	v33 = 0xCC<32>
	v32 = v32 + v33
	loc5 = v32
	v32 = loc33
	v33 = 8<32>
	v32 = v32 + v33
	loc31 = v32
	v32 = loc33
	loc26 = v32
	v32 = loc33
	v33 = 0xD0<32>
	v32 = v32 + v33
	loc27 = v32
	v32 = loc33
	v33 = 0x20<32>
	v32 = v32 + v33
	loc28 = v32
	v32 = loc33
	v33 = 0x1C<32>
	v32 = v32 + v33
	loc29 = v32
	v32 = loc33
	v33 = 0x18<32>
	v32 = v32 + v33
	loc30 = v32
	v32 = loc33
	v33 = 0x14<32>
	v32 = v32 + v33
	loc6 = v32
	v32 = loc33
	v33 = 0x10<32>
	v32 = v32 + v33
	loc7 = v32
	v32 = loc26
	v35 = 0x25<64>
	Mem0[v32:word64] = v35
	v32 = loc26
	v33 = 1<32>
	v32 = v32 + v33
	loc8 = v32
	v32 = arg2
	v33 = 4<32>
	v32 = v32 + v33
	loc9 = v32
	v32 = loc9
	v32 = Mem0[v32:word32]
	loc10 = v32
	v32 = loc8
	v33 = 0x38A6<32>
	v36 = 1<32>
	v37 = loc10
	fn000FB8CE(v32, v33, v36, v37)
	v32 = fn000EAD0D()
	loc11 = v32
	v32 = loc31
	v35 = arg4
	Mem0[v32:word64] = v35
	v32 = loc27
	v33 = 0x17<32>
	v36 = loc11
	v37 = loc26
	v38 = loc31
	v32 = fn000FA95B(v32, v33, v36, v37, v38)
	loc12 = v32
	v32 = loc27
	v33 = loc12
	v32 = v32 + v33
	loc13 = v32
	v32 = loc27
	v33 = loc13
	v36 = arg2
	v32 = fn000FA9D7(v32, v33, v36)
	loc14 = v32
	v32 = arg2
	v32 = fn000E64CA(v32)
	loc15 = v32
	v32 = loc6
	v33 = loc15
	Mem0[v32:word32] = v33
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = 0x192<32>
	v33 = loc27
	v36 = loc14
	v37 = loc13
	v38 = loc28
	v39 = loc29
	v40 = loc30
	v41 = loc6
	invoke_viiiiiii(v32, v33, v36, v37, v38, v39, v40, v41)
	v32 = Mem0[0x00140048<p32>:word32]
	loc16 = v32
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = loc16
	v33 = 1<32>
	v32 = v32 & v33
	loc17 = v32
	v32 = loc17
	branch !v32 l000FC64A
	// succ:  l000FC630 l000FC64A
l000FC630:
	v32 = ___cxa_find_matching_catch_2()
	loc23 = v32
	v32 = Mem0[0x00140094<p32>:word32]
	loc24 = v32
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc25 = v32
	v32 = loc25
	v32 = fn0011B43F(v32)
	v32 = loc23
	___resumeException(v32)
	goto l000FC695
	// succ:  l000FC695
l000FC64A:
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc18 = v32
	v32 = loc18
	v32 = fn0011B43F(v32)
	v32 = arg1
	v32 = Mem0[v32:word32]
	loc19 = v32
	v32 = loc7
	v33 = loc19
	Mem0[v32:word32] = v33
	v32 = loc29
	v32 = Mem0[v32:word32]
	loc20 = v32
	v32 = loc30
	v32 = Mem0[v32:word32]
	loc21 = v32
	v32 = loc5
	v33 = loc7
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc5
	v33 = loc28
	v36 = loc20
	v37 = loc21
	v38 = arg2
	v39 = arg3
	v32 = fn000FD465(v32, v33, v36, v37, v38, v39)
	loc22 = v32
	v32 = loc33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = loc22
	return v32
	// succ:  fn000FC549_exit
l000FC695:
	v32 = 0<32>
	return v32
	// succ:  fn000FC549_exit
l000FC699:
	return v32
	// succ:  fn000FC549_exit
fn000FC549_exit:


// fn000FC69B
// Return size: 0
word32 fn000FC69B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FC69B_entry:
	// succ:  l000FC69B
l000FC69B:
	v32 = Mem0[0x00140030<p32>:word32]
	loc33 = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0x80<32>
	v32 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000FC6B6
	// succ:  l000FC6B0 l000FC6B6
l000FC6B0:
	v32 = 0x80<32>
	abortStackOverflow(v32)
	// succ:  l000FC6B6
l000FC6B6:
	v32 = loc33
	v33 = 0x68<32>
	v32 = v32 + v33
	loc5 = v32
	v32 = loc33
	loc31 = v32
	v32 = loc33
	v33 = 0x78<32>
	v32 = v32 + v33
	loc26 = v32
	v32 = loc33
	v33 = 0x6C<32>
	v32 = v32 + v33
	loc27 = v32
	v32 = loc33
	v33 = 0x14<32>
	v32 = v32 + v33
	loc28 = v32
	v32 = loc33
	v33 = 0x10<32>
	v32 = v32 + v33
	loc29 = v32
	v32 = loc33
	v33 = 0xC<32>
	v32 = v32 + v33
	loc30 = v32
	v32 = loc33
	v33 = 8<32>
	v32 = v32 + v33
	loc6 = v32
	v32 = loc33
	v33 = 4<32>
	v32 = v32 + v33
	loc7 = v32
	v32 = loc26
	v33 = 0x38A9<32>
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc26
	v33 = 4<32>
	v32 = v32 + v33
	v33 = 0x38A9<32>
	v35 = 4<32>
	v33 = v33 + v35
	v36 = Mem0[v33:int16]
	v33 = CONVERT(v36, int16, word32)
	v37 = SLICE(v33, word16, 0)
	Mem0[v32:word16] = v37
	v32 = loc26
	v33 = 1<32>
	v32 = v32 + v33
	loc8 = v32
	v32 = arg2
	v33 = 4<32>
	v32 = v32 + v33
	loc9 = v32
	v32 = loc9
	v32 = Mem0[v32:word32]
	loc10 = v32
	v32 = loc8
	v33 = 0x38AF<32>
	v35 = 0<32>
	v38 = loc10
	fn000FB8CE(v32, v33, v35, v38)
	v32 = fn000EAD0D()
	loc11 = v32
	v32 = loc31
	v33 = arg4
	Mem0[v32:word32] = v33
	v32 = loc27
	v33 = 0xC<32>
	v35 = loc11
	v38 = loc26
	v39 = loc31
	v32 = fn000FA95B(v32, v33, v35, v38, v39)
	loc12 = v32
	v32 = loc27
	v33 = loc12
	v32 = v32 + v33
	loc13 = v32
	v32 = loc27
	v33 = loc13
	v35 = arg2
	v32 = fn000FA9D7(v32, v33, v35)
	loc14 = v32
	v32 = arg2
	v32 = fn000E64CA(v32)
	loc15 = v32
	v32 = loc6
	v33 = loc15
	Mem0[v32:word32] = v33
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = 0x192<32>
	v33 = loc27
	v35 = loc14
	v38 = loc13
	v39 = loc28
	v40 = loc29
	v41 = loc30
	v42 = loc6
	invoke_viiiiiii(v32, v33, v35, v38, v39, v40, v41, v42)
	v32 = Mem0[0x00140048<p32>:word32]
	loc16 = v32
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = loc16
	v33 = 1<32>
	v32 = v32 & v33
	loc17 = v32
	v32 = loc17
	branch !v32 l000FC7B4
	// succ:  l000FC79A l000FC7B4
l000FC79A:
	v32 = ___cxa_find_matching_catch_2()
	loc23 = v32
	v32 = Mem0[0x00140094<p32>:word32]
	loc24 = v32
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc25 = v32
	v32 = loc25
	v32 = fn0011B43F(v32)
	v32 = loc23
	___resumeException(v32)
	goto l000FC7FF
	// succ:  l000FC7FF
l000FC7B4:
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc18 = v32
	v32 = loc18
	v32 = fn0011B43F(v32)
	v32 = arg1
	v32 = Mem0[v32:word32]
	loc19 = v32
	v32 = loc7
	v33 = loc19
	Mem0[v32:word32] = v33
	v32 = loc29
	v32 = Mem0[v32:word32]
	loc20 = v32
	v32 = loc30
	v32 = Mem0[v32:word32]
	loc21 = v32
	v32 = loc5
	v33 = loc7
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc5
	v33 = loc28
	v35 = loc20
	v38 = loc21
	v39 = arg2
	v40 = arg3
	v32 = fn000FD465(v32, v33, v35, v38, v39, v40)
	loc22 = v32
	v32 = loc33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = loc22
	return v32
	// succ:  fn000FC69B_exit
l000FC7FF:
	v32 = 0<32>
	return v32
	// succ:  fn000FC69B_exit
l000FC803:
	return v32
	// succ:  fn000FC69B_exit
fn000FC69B_exit:


// fn000FC805
// Return size: 0
word32 fn000FC805(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
fn000FC805_entry:
	// succ:  l000FC805
l000FC805:
	v32 = Mem0[0x00140030<p32>:word32]
	loc33 = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = 0xF0<32>
	v32 = v32 + v33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = Mem0[0x00140030<p32>:word32]
	v33 = Mem0[0x00140034<p32>:word32]
	v34 = v32 >= v33
	branch !v34 l000FC820
	// succ:  l000FC81A l000FC820
l000FC81A:
	v32 = 0xF0<32>
	abortStackOverflow(v32)
	// succ:  l000FC820
l000FC820:
	v32 = loc33
	v33 = 0xCC<32>
	v32 = v32 + v33
	loc5 = v32
	v32 = loc33
	v33 = 8<32>
	v32 = v32 + v33
	loc31 = v32
	v32 = loc33
	loc26 = v32
	v32 = loc33
	v33 = 0xD0<32>
	v32 = v32 + v33
	loc27 = v32
	v32 = loc33
	v33 = 0x20<32>
	v32 = v32 + v33
	loc28 = v32
	v32 = loc33
	v33 = 0x1C<32>
	v32 = v32 + v33
	loc29 = v32
	v32 = loc33
	v33 = 0x18<32>
	v32 = v32 + v33
	loc30 = v32
	v32 = loc33
	v33 = 0x14<32>
	v32 = v32 + v33
	loc6 = v32
	v32 = loc33
	v33 = 0x10<32>
	v32 = v32 + v33
	loc7 = v32
	v32 = loc26
	v35 = 0x25<64>
	Mem0[v32:word64] = v35
	v32 = loc26
	v33 = 1<32>
	v32 = v32 + v33
	loc8 = v32
	v32 = arg2
	v33 = 4<32>
	v32 = v32 + v33
	loc9 = v32
	v32 = loc9
	v32 = Mem0[v32:word32]
	loc10 = v32
	v32 = loc8
	v33 = 0x38A6<32>
	v36 = 0<32>
	v37 = loc10
	fn000FB8CE(v32, v33, v36, v37)
	v32 = fn000EAD0D()
	loc11 = v32
	v32 = loc31
	v35 = arg4
	Mem0[v32:word64] = v35
	v32 = loc27
	v33 = 0x17<32>
	v36 = loc11
	v37 = loc26
	v38 = loc31
	v32 = fn000FA95B(v32, v33, v36, v37, v38)
	loc12 = v32
	v32 = loc27
	v33 = loc12
	v32 = v32 + v33
	loc13 = v32
	v32 = loc27
	v33 = loc13
	v36 = arg2
	v32 = fn000FA9D7(v32, v33, v36)
	loc14 = v32
	v32 = arg2
	v32 = fn000E64CA(v32)
	loc15 = v32
	v32 = loc6
	v33 = loc15
	Mem0[v32:word32] = v33
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = 0x192<32>
	v33 = loc27
	v36 = loc14
	v37 = loc13
	v38 = loc28
	v39 = loc29
	v40 = loc30
	v41 = loc6
	invoke_viiiiiii(v32, v33, v36, v37, v38, v39, v40, v41)
	v32 = Mem0[0x00140048<p32>:word32]
	loc16 = v32
	v32 = 0<32>
	Mem0[0x00140048<p32>:word32] = v32
	v32 = loc16
	v33 = 1<32>
	v32 = v32 & v33
	loc17 = v32
	v32 = loc17
	branch !v32 l000FC906
	// succ:  l000FC8EC l000FC906
l000FC8EC:
	v32 = ___cxa_find_matching_catch_2()
	loc23 = v32
	v32 = Mem0[0x00140094<p32>:word32]
	loc24 = v32
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc25 = v32
	v32 = loc25
	v32 = fn0011B43F(v32)
	v32 = loc23
	___resumeException(v32)
	goto l000FC951
	// succ:  l000FC951
l000FC906:
	v32 = loc6
	v32 = Mem0[v32:word32]
	loc18 = v32
	v32 = loc18
	v32 = fn0011B43F(v32)
	v32 = arg1
	v32 = Mem0[v32:word32]
	loc19 = v32
	v32 = loc7
	v33 = loc19
	Mem0[v32:word32] = v33
	v32 = loc29
	v32 = Mem0[v32:word32]
	loc20 = v32
	v32 = loc30
	v32 = Mem0[v32:word32]
	loc21 = v32
	v32 = loc5
	v33 = loc7
	v33 = Mem0[v33:word32]
	Mem0[v32:word32] = v33
	v32 = loc5
	v33 = loc28
	v36 = loc20
	v37 = loc21
	v38 = arg2
	v39 = arg3
	v32 = fn000FD465(v32, v33, v36, v37, v38, v39)
	loc22 = v32
	v32 = loc33
	Mem0[0x00140030<p32>:word32] = v32
	v32 = loc22
	return v32
	// succ:  fn000FC805_exit
l000FC951:
	v32 = 0<32>
	return v32
	// succ:  fn000FC805_exit
l000FC955:
	return v32
	// succ:  fn000FC805_exit
fn000FC805_exit:


// fn000FC957
// Return size: 0
word32 fn000FC957(word32 arg0, word32 arg1, word32 arg2, word32 arg3, real64 arg4)
fn000FC957_entry:
	// succ:  l000FC957
l000FC957:
	v110 = Mem0[0x00140030<p32>:word32]
	loc111 = v110
	v110 = Mem0[0x00140030<p32>:word32]
	v111 = 0x160<32>
	v110 = v110 + v111
	Mem0[0x00140030<p32>:word32] = v110
	v110 = Mem0[0x00140030<p32>:word32]
	v111 = Mem0[0x00140034<p32>:word32]
	v112 = v110 >= v111
	branch !v112 l000FC972
	// succ:  l000FC96C l000FC972
l000FC96C:
	v110 = 0x160<32>
	abortStackOverflow(v110)
	// succ:  l000FC972
l000FC972:
	v110 = loc111
	v111 = 0x130<32>
	v110 = v110 + v111
	loc17 = v110
	v110 = loc111
	v111 = 0x30<32>
	v110 = v110 + v111
	loc107 = v110
	v110 = loc111
	v111 = 0x20<32>
	v110 = v110 + v111
	loc106 = v110
	v110 = loc111
	v111 = 0x18<32>
	v110 = v110 + v111
	loc105 = v110
	v110 = loc111
	v111 = 8<32>
	v110 = v110 + v111
	loc104 = v110
	v110 = loc111
	loc65 = v110
	v110 = loc111
	v111 = 0x134<32>
	v110 = v110 + v111
	loc76 = v110
	v110 = loc111
	v111 = 0x12C<32>
	v110 = v110 + v111
	loc87 = v110
	v110 = loc111
	v111 = 0x48<32>
	v110 = v110 + v111
	loc98 = v110
	v110 = loc111
	v111 = 0x44<32>
	v110 = v110 + v111
	loc103 = v110
	v110 = loc111
	v111 = 0x40<32>
	v110 = v110 + v111
	loc25 = v110
	v110 = loc111
	v111 = 0x3C<32>
	v110 = v110 + v111
	loc26 = v110
	v110 = loc111
	v111 = 0x38<32>
	v110 = v110 + v111
	loc27 = v110
	v110 = loc65
	v113 = 0x25<64>
	Mem0[v110:word64] = v113
	v110 = loc65
	v111 = 1<32>
	v110 = v110 + v111
	loc28 = v110
	v110 = arg2
	v111 = 4<32>
	v110 = v110 + v111
	loc29 = v110
	v110 = loc29
	v110 = Mem0[v110:word32]
	loc30 = v110
	v110 = loc28
	v111 = 0x5C11<32>
	v114 = loc30
	v110 = fn000FAB19(v110, v111, v114)
	loc31 = v110
	v110 = loc87
	v111 = loc76
	Mem0[v110:word32] = v111
	v110 = fn000EAD0D()
	loc32 = v110
	v110 = loc31
	branch !v110 l000FCA40
	// succ:  l000FCA09 l000FCA40
l000FCA09:
	v110 = arg2
	v111 = 8<32>
	v110 = v110 + v111
	loc33 = v110
	v110 = loc33
	v110 = Mem0[v110:word32]
	loc34 = v110
	v110 = loc104
	v111 = loc34
	Mem0[v110:word32] = v111
	v110 = loc104
	v111 = 8<32>
	v110 = v110 + v111
	loc108 = v110
	v110 = loc108
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = loc76
	v111 = 0x1E<32>
	v114 = loc32
	v116 = loc65
	v117 = loc104
	v110 = fn000FA95B(v110, v111, v114, v116, v117)
	loc35 = v110
	v110 = loc35
	loc5 = v110
	goto l000FCA5A
	// succ:  l000FCA5A
l000FCA40:
	v110 = loc105
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = loc76
	v111 = 0x1E<32>
	v114 = loc32
	v116 = loc65
	v117 = loc105
	v110 = fn000FA95B(v110, v111, v114, v116, v117)
	loc36 = v110
	v110 = loc36
	loc5 = v110
	// succ:  l000FCA5A
l000FCA5A:
	v110 = loc5
	v111 = 0x1D<32>
	v112 = v110 > v111
	loc37 = v112
	// succ:  l000FCA62
l000FCA62:
	v110 = loc37
	branch !v110 l000FCBB6
	// succ:  l000FCA68 l000FCBB6
l000FCA68:
	v110 = loc31
	branch !v110 l000FCAE0
	// succ:  l000FCA6C l000FCAE0
l000FCA6C:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x17B<32>
	v110 = invoke_i(v110)
	loc38 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc39 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc39
	v111 = 1<32>
	v110 = v110 & v111
	loc40 = v110
	v110 = loc40
	v112 = v110 == 0<32>
	branch !v112 l000FCADF
	// succ:  l000FCA8B l000FCADF
l000FCA8B:
	v110 = arg2
	v111 = 8<32>
	v110 = v110 + v111
	loc41 = v110
	v110 = loc41
	v110 = Mem0[v110:word32]
	loc42 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc106
	v111 = loc42
	Mem0[v110:word32] = v111
	v110 = loc106
	v111 = 8<32>
	v110 = v110 + v111
	loc109 = v110
	v110 = loc109
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = 0x18D<32>
	v111 = loc87
	v114 = loc38
	v116 = loc65
	v117 = loc106
	v110 = invoke_iiiii(v110, v111, v114, v116, v117)
	loc43 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc44 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc44
	v111 = 1<32>
	v110 = v110 & v111
	loc45 = v110
	v110 = loc45
	v112 = v110 == 0<32>
	branch !v112 l000FCADE
	// succ:  l000FCAD5 l000FCADE
l000FCAD5:
	v110 = loc43
	loc9 = v110
	v110 = 0xC<32>
	loc110 = v110
	// succ:  l000FCADE
l000FCADE:
	// succ:  l000FCADF
l000FCADF:
	goto l000FCB37
	// succ:  l000FCB37
l000FCAE0:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x17B<32>
	v110 = invoke_i(v110)
	loc48 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc49 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc49
	v111 = 1<32>
	v110 = v110 & v111
	loc50 = v110
	v110 = loc50
	v112 = v110 == 0<32>
	branch !v112 l000FCB37
	// succ:  l000FCAFF l000FCB37
l000FCAFF:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc107
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = 0x18D<32>
	v111 = loc87
	v114 = loc48
	v116 = loc65
	v117 = loc107
	v110 = invoke_iiiii(v110, v111, v114, v116, v117)
	loc51 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc52 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc52
	v111 = 1<32>
	v110 = v110 & v111
	loc53 = v110
	v110 = loc53
	v112 = v110 == 0<32>
	branch !v112 l000FCB36
	// succ:  l000FCB2D l000FCB36
l000FCB2D:
	v110 = loc51
	loc9 = v110
	v110 = 0xC<32>
	loc110 = v110
	// succ:  l000FCB36
l000FCB36:
	// succ:  l000FCB37
l000FCB37:
	// succ:  l000FCB37
l000FCB37:
	v110 = loc110
	v111 = 0xC<32>
	v112 = v110 == v111
	branch !v112 l000FCBA5
	// succ:  l000FCB3F l000FCBA5
l000FCB3F:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc54 = v110
	v110 = loc54
	v111 = 0<32>
	v112 = v110 == v111
	loc55 = v112
	v110 = loc55
	v112 = v110 == 0<32>
	branch !v112 l000FCB69
	// succ:  l000FCB52 l000FCB69
l000FCB52:
	v110 = loc54
	loc56 = v110
	v110 = loc9
	loc12 = v110
	v110 = loc54
	loc22 = v110
	v110 = loc56
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	goto l000FCBCE
	// succ:  l000FCBCE
l000FCB69:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18A<32>
	invoke_v(v110)
	v110 = Mem0[0x00140048<p32>:word32]
	loc57 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc57
	v111 = 1<32>
	v110 = v110 & v111
	loc58 = v110
	v110 = loc58
	v112 = v110 == 0<32>
	branch !v112 l000FCBA4
	// succ:  l000FCB86 l000FCBA4
l000FCB86:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc18 = v110
	v110 = loc18
	loc59 = v110
	v110 = loc9
	loc12 = v110
	v110 = loc59
	loc22 = v110
	v110 = loc18
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	goto l000FCBCE
	// succ:  l000FCBCE
l000FCBA4:
	// succ:  l000FCBA5
l000FCBA5:
	v110 = ___cxa_find_matching_catch_2()
	loc46 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc47 = v110
	v110 = loc47
	loc15 = v110
	v110 = loc46
	loc16 = v110
	goto l000FCBCD
	// succ:  l000FCBCD
l000FCBB6:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc19 = v110
	v110 = loc5
	loc12 = v110
	v110 = loc19
	loc22 = v110
	v110 = 0<32>
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	// succ:  l000FCBCD
l000FCBCD:
	// succ:  l000FCBCE
l000FCBCE:
	v110 = loc110
	v111 = 0x10<32>
	v112 = v110 == v111
	branch !v112 l000FCE18
	// succ:  l000FCBD6 l000FCE18
l000FCBD6:
	v110 = loc22
	v111 = loc12
	v110 = v110 + v111
	loc60 = v110
	v110 = loc22
	v111 = loc60
	v114 = arg2
	v110 = fn000FA9D7(v110, v111, v114)
	loc61 = v110
	v110 = loc22
	v111 = loc76
	v112 = v110 == v111
	loc62 = v112
	// succ:  l000FCBEF
l000FCBEF:
	v110 = loc62
	branch !v110 l000FCC06
	// succ:  l000FCBF5 l000FCC06
l000FCBF5:
	v110 = loc98
	loc6 = v110
	v110 = 0<32>
	loc23 = v110
	v110 = loc76
	loc75 = v110
	v110 = 0x16<32>
	loc110 = v110
	goto l000FCC79
	// succ:  l000FCC79
l000FCC06:
	v110 = loc12
	v111 = 3<32>
	v110 = v110 << v111
	loc63 = v110
	v110 = loc63
	v110 = _malloc(v110)
	loc64 = v110
	v110 = loc64
	v111 = 0<32>
	v112 = v110 == v111
	loc66 = v112
	// succ:  l000FCC1B
l000FCC1B:
	v110 = loc66
	branch !v110 l000FCC5F
	// succ:  l000FCC21 l000FCC5F
l000FCC21:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18A<32>
	invoke_v(v110)
	v110 = Mem0[0x00140048<p32>:word32]
	loc67 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc67
	v111 = 1<32>
	v110 = v110 & v111
	loc68 = v110
	v110 = loc68
	branch !v110 l000FCC50
	// succ:  l000FCC3D l000FCC50
l000FCC3D:
	v110 = ___cxa_find_matching_catch_2()
	loc69 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc70 = v110
	v110 = loc69
	loc13 = v110
	v110 = loc70
	loc14 = v110
	goto l000FCC7A
	// succ:  l000FCC7A
l000FCC50:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc21 = v110
	v110 = loc21
	loc20 = v110
	goto l000FCC64
	// succ:  l000FCC64
l000FCC5D:
	goto l000FCC63
	// succ:  l000FCC63
l000FCC5F:
	v110 = loc22
	loc20 = v110
	// succ:  l000FCC63
l000FCC63:
	// succ:  l000FCC64
l000FCC64:
	v110 = loc64
	loc71 = v110
	v110 = loc64
	loc6 = v110
	v110 = loc71
	loc23 = v110
	v110 = loc20
	loc75 = v110
	v110 = 0x16<32>
	loc110 = v110
	// succ:  l000FCC79
l000FCC79:
	// succ:  l000FCC7A
l000FCC7A:
	v110 = loc110
	v111 = 0x16<32>
	v112 = v110 == v111
	branch !v112 l000FCDF1
	// succ:  l000FCC82 l000FCDF1
l000FCC82:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x167<32>
	v111 = arg2
	v110 = invoke_ii(v110, v111)
	loc72 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc73 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc73
	v111 = 1<32>
	v110 = v110 & v111
	loc74 = v110
	// succ:  l000FCC9E
l000FCC9E:
	v110 = loc74
	branch !v110 l000FCCB9
	// succ:  l000FCCA4 l000FCCB9
l000FCCA4:
	v110 = ___cxa_find_matching_catch_2()
	loc91 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc92 = v110
	v110 = loc91
	loc7 = v110
	v110 = loc92
	loc8 = v110
	v110 = 0x20<32>
	loc110 = v110
	goto l000FCDB8
	// succ:  l000FCDB8
l000FCCB9:
	v110 = loc26
	v111 = loc72
	Mem0[v110:word32] = v111
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x193<32>
	v111 = loc75
	v114 = loc61
	v116 = loc60
	v117 = loc6
	v118 = loc103
	v119 = loc25
	v120 = loc26
	invoke_viiiiiii(v110, v111, v114, v116, v117, v118, v119, v120)
	v110 = Mem0[0x00140048<p32>:word32]
	loc77 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc77
	v111 = 1<32>
	v110 = v110 & v111
	loc78 = v110
	v110 = loc78
	branch !v110 l000FCD0E
	// succ:  l000FCCEA l000FCD0E
l000FCCEA:
	v110 = ___cxa_find_matching_catch_2()
	loc93 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc94 = v110
	v110 = loc26
	v110 = Mem0[v110:word32]
	loc95 = v110
	v110 = loc95
	v110 = fn0011B43F(v110)
	v110 = loc93
	loc7 = v110
	v110 = loc94
	loc8 = v110
	v110 = 0x20<32>
	loc110 = v110
	goto l000FCDB9
	// succ:  l000FCDB9
l000FCD0E:
	v110 = loc26
	v110 = Mem0[v110:word32]
	loc79 = v110
	v110 = loc79
	v110 = fn0011B43F(v110)
	v110 = arg1
	v110 = Mem0[v110:word32]
	loc80 = v110
	v110 = loc27
	v111 = loc80
	Mem0[v110:word32] = v111
	v110 = loc103
	v110 = Mem0[v110:word32]
	loc81 = v110
	v110 = loc25
	v110 = Mem0[v110:word32]
	loc82 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc17
	v111 = loc27
	v111 = Mem0[v111:word32]
	Mem0[v110:word32] = v111
	v110 = 0x194<32>
	v111 = loc17
	v114 = loc6
	v116 = loc81
	v117 = loc82
	v118 = arg2
	v119 = arg3
	v110 = invoke_iiiiiii(v110, v111, v114, v116, v117, v118, v119)
	loc83 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc84 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc84
	v111 = 1<32>
	v110 = v110 & v111
	loc85 = v110
	v110 = loc85
	branch !v110 l000FCD7E
	// succ:  l000FCD6B l000FCD7E
l000FCD6B:
	v110 = ___cxa_find_matching_catch_2()
	loc96 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc97 = v110
	v110 = loc96
	loc10 = v110
	v110 = loc97
	loc11 = v110
	goto l000FCDB9
	// succ:  l000FCDB9
l000FCD7E:
	v110 = arg1
	v111 = loc83
	Mem0[v110:word32] = v111
	v110 = loc23
	v111 = 0<32>
	v112 = v110 == v111
	loc86 = v112
	v110 = loc86
	v112 = v110 == 0<32>
	branch !v112 l000FCD9B
	// succ:  l000FCD91 l000FCD9B
l000FCD91:
	v110 = loc23
	loc88 = v110
	v110 = loc88
	_free(v110)
	// succ:  l000FCD9B
l000FCD9B:
	v110 = loc24
	v111 = 0<32>
	v112 = v110 == v111
	loc89 = v112
	v110 = loc89
	v112 = v110 == 0<32>
	branch !v112 l000FCDB1
	// succ:  l000FCDA7 l000FCDB1
l000FCDA7:
	v110 = loc24
	loc90 = v110
	v110 = loc90
	_free(v110)
	// succ:  l000FCDB1
l000FCDB1:
	v110 = loc111
	Mem0[0x00140030<p32>:word32] = v110
	v110 = loc83
	return v110
	// succ:  fn000FC957_exit
l000FCDB8:
	// succ:  l000FCDB9
l000FCDB9:
	v110 = loc110
	v111 = 0x20<32>
	v112 = v110 == v111
	branch !v112 l000FCDCA
	// succ:  l000FCDC1 l000FCDCA
l000FCDC1:
	v110 = loc7
	loc10 = v110
	v110 = loc8
	loc11 = v110
	// succ:  l000FCDCA
l000FCDCA:
	v110 = loc23
	v111 = 0<32>
	v112 = v110 == v111
	loc99 = v112
	v110 = loc99
	branch !v110 l000FCDDE
	// succ:  l000FCDD5 l000FCDDE
l000FCDD5:
	v110 = loc10
	loc13 = v110
	v110 = loc11
	loc14 = v110
	goto l000FCDEF
	// succ:  l000FCDEF
l000FCDDE:
	v110 = loc23
	loc100 = v110
	v110 = loc100
	_free(v110)
	v110 = loc10
	loc13 = v110
	v110 = loc11
	loc14 = v110
	// succ:  l000FCDEF
l000FCDEF:
	// succ:  l000FCDF1
l000FCDF1:
	v110 = loc24
	v111 = 0<32>
	v112 = v110 == v111
	loc101 = v112
	v110 = loc101
	branch !v110 l000FCE05
	// succ:  l000FCDFC l000FCE05
l000FCDFC:
	v110 = loc14
	loc15 = v110
	v110 = loc13
	loc16 = v110
	goto l000FCE16
	// succ:  l000FCE16
l000FCE05:
	v110 = loc24
	loc102 = v110
	v110 = loc102
	_free(v110)
	v110 = loc14
	loc15 = v110
	v110 = loc13
	loc16 = v110
	// succ:  l000FCE16
l000FCE16:
	// succ:  l000FCE18
l000FCE18:
	v110 = loc16
	___resumeException(v110)
	v110 = 0<32>
	return v110
	// succ:  fn000FC957_exit
l000FCE1F:
	return v110
	// succ:  fn000FC957_exit
fn000FC957_exit:


// fn000FCE21
// Return size: 0
word32 fn000FCE21(word32 arg0, word32 arg1, word32 arg2, word32 arg3, real64 arg4)
fn000FCE21_entry:
	// succ:  l000FCE21
l000FCE21:
	v110 = Mem0[0x00140030<p32>:word32]
	loc111 = v110
	v110 = Mem0[0x00140030<p32>:word32]
	v111 = 0x160<32>
	v110 = v110 + v111
	Mem0[0x00140030<p32>:word32] = v110
	v110 = Mem0[0x00140030<p32>:word32]
	v111 = Mem0[0x00140034<p32>:word32]
	v112 = v110 >= v111
	branch !v112 l000FCE3C
	// succ:  l000FCE36 l000FCE3C
l000FCE36:
	v110 = 0x160<32>
	abortStackOverflow(v110)
	// succ:  l000FCE3C
l000FCE3C:
	v110 = loc111
	v111 = 0x130<32>
	v110 = v110 + v111
	loc17 = v110
	v110 = loc111
	v111 = 0x30<32>
	v110 = v110 + v111
	loc107 = v110
	v110 = loc111
	v111 = 0x20<32>
	v110 = v110 + v111
	loc106 = v110
	v110 = loc111
	v111 = 0x18<32>
	v110 = v110 + v111
	loc105 = v110
	v110 = loc111
	v111 = 8<32>
	v110 = v110 + v111
	loc104 = v110
	v110 = loc111
	loc65 = v110
	v110 = loc111
	v111 = 0x134<32>
	v110 = v110 + v111
	loc76 = v110
	v110 = loc111
	v111 = 0x12C<32>
	v110 = v110 + v111
	loc87 = v110
	v110 = loc111
	v111 = 0x48<32>
	v110 = v110 + v111
	loc98 = v110
	v110 = loc111
	v111 = 0x44<32>
	v110 = v110 + v111
	loc103 = v110
	v110 = loc111
	v111 = 0x40<32>
	v110 = v110 + v111
	loc25 = v110
	v110 = loc111
	v111 = 0x3C<32>
	v110 = v110 + v111
	loc26 = v110
	v110 = loc111
	v111 = 0x38<32>
	v110 = v110 + v111
	loc27 = v110
	v110 = loc65
	v113 = 0x25<64>
	Mem0[v110:word64] = v113
	v110 = loc65
	v111 = 1<32>
	v110 = v110 + v111
	loc28 = v110
	v110 = arg2
	v111 = 4<32>
	v110 = v110 + v111
	loc29 = v110
	v110 = loc29
	v110 = Mem0[v110:word32]
	loc30 = v110
	v110 = loc28
	v111 = 0x38A4<32>
	v114 = loc30
	v110 = fn000FAB19(v110, v111, v114)
	loc31 = v110
	v110 = loc87
	v111 = loc76
	Mem0[v110:word32] = v111
	v110 = fn000EAD0D()
	loc32 = v110
	v110 = loc31
	branch !v110 l000FCF0A
	// succ:  l000FCED3 l000FCF0A
l000FCED3:
	v110 = arg2
	v111 = 8<32>
	v110 = v110 + v111
	loc33 = v110
	v110 = loc33
	v110 = Mem0[v110:word32]
	loc34 = v110
	v110 = loc104
	v111 = loc34
	Mem0[v110:word32] = v111
	v110 = loc104
	v111 = 8<32>
	v110 = v110 + v111
	loc108 = v110
	v110 = loc108
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = loc76
	v111 = 0x1E<32>
	v114 = loc32
	v116 = loc65
	v117 = loc104
	v110 = fn000FA95B(v110, v111, v114, v116, v117)
	loc35 = v110
	v110 = loc35
	loc5 = v110
	goto l000FCF24
	// succ:  l000FCF24
l000FCF0A:
	v110 = loc105
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = loc76
	v111 = 0x1E<32>
	v114 = loc32
	v116 = loc65
	v117 = loc105
	v110 = fn000FA95B(v110, v111, v114, v116, v117)
	loc36 = v110
	v110 = loc36
	loc5 = v110
	// succ:  l000FCF24
l000FCF24:
	v110 = loc5
	v111 = 0x1D<32>
	v112 = v110 > v111
	loc37 = v112
	// succ:  l000FCF2C
l000FCF2C:
	v110 = loc37
	branch !v110 l000FD080
	// succ:  l000FCF32 l000FD080
l000FCF32:
	v110 = loc31
	branch !v110 l000FCFAA
	// succ:  l000FCF36 l000FCFAA
l000FCF36:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x17B<32>
	v110 = invoke_i(v110)
	loc38 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc39 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc39
	v111 = 1<32>
	v110 = v110 & v111
	loc40 = v110
	v110 = loc40
	v112 = v110 == 0<32>
	branch !v112 l000FCFA9
	// succ:  l000FCF55 l000FCFA9
l000FCF55:
	v110 = arg2
	v111 = 8<32>
	v110 = v110 + v111
	loc41 = v110
	v110 = loc41
	v110 = Mem0[v110:word32]
	loc42 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc106
	v111 = loc42
	Mem0[v110:word32] = v111
	v110 = loc106
	v111 = 8<32>
	v110 = v110 + v111
	loc109 = v110
	v110 = loc109
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = 0x18D<32>
	v111 = loc87
	v114 = loc38
	v116 = loc65
	v117 = loc106
	v110 = invoke_iiiii(v110, v111, v114, v116, v117)
	loc43 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc44 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc44
	v111 = 1<32>
	v110 = v110 & v111
	loc45 = v110
	v110 = loc45
	v112 = v110 == 0<32>
	branch !v112 l000FCFA8
	// succ:  l000FCF9F l000FCFA8
l000FCF9F:
	v110 = loc43
	loc9 = v110
	v110 = 0xC<32>
	loc110 = v110
	// succ:  l000FCFA8
l000FCFA8:
	// succ:  l000FCFA9
l000FCFA9:
	goto l000FD001
	// succ:  l000FD001
l000FCFAA:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x17B<32>
	v110 = invoke_i(v110)
	loc48 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc49 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc49
	v111 = 1<32>
	v110 = v110 & v111
	loc50 = v110
	v110 = loc50
	v112 = v110 == 0<32>
	branch !v112 l000FD001
	// succ:  l000FCFC9 l000FD001
l000FCFC9:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc107
	v115 = arg4
	Mem0[v110:real64] = v115
	v110 = 0x18D<32>
	v111 = loc87
	v114 = loc48
	v116 = loc65
	v117 = loc107
	v110 = invoke_iiiii(v110, v111, v114, v116, v117)
	loc51 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc52 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc52
	v111 = 1<32>
	v110 = v110 & v111
	loc53 = v110
	v110 = loc53
	v112 = v110 == 0<32>
	branch !v112 l000FD000
	// succ:  l000FCFF7 l000FD000
l000FCFF7:
	v110 = loc51
	loc9 = v110
	v110 = 0xC<32>
	loc110 = v110
	// succ:  l000FD000
l000FD000:
	// succ:  l000FD001
l000FD001:
	// succ:  l000FD001
l000FD001:
	v110 = loc110
	v111 = 0xC<32>
	v112 = v110 == v111
	branch !v112 l000FD06F
	// succ:  l000FD009 l000FD06F
l000FD009:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc54 = v110
	v110 = loc54
	v111 = 0<32>
	v112 = v110 == v111
	loc55 = v112
	v110 = loc55
	v112 = v110 == 0<32>
	branch !v112 l000FD033
	// succ:  l000FD01C l000FD033
l000FD01C:
	v110 = loc54
	loc56 = v110
	v110 = loc9
	loc12 = v110
	v110 = loc54
	loc22 = v110
	v110 = loc56
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	goto l000FD098
	// succ:  l000FD098
l000FD033:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18A<32>
	invoke_v(v110)
	v110 = Mem0[0x00140048<p32>:word32]
	loc57 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc57
	v111 = 1<32>
	v110 = v110 & v111
	loc58 = v110
	v110 = loc58
	v112 = v110 == 0<32>
	branch !v112 l000FD06E
	// succ:  l000FD050 l000FD06E
l000FD050:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc18 = v110
	v110 = loc18
	loc59 = v110
	v110 = loc9
	loc12 = v110
	v110 = loc59
	loc22 = v110
	v110 = loc18
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	goto l000FD098
	// succ:  l000FD098
l000FD06E:
	// succ:  l000FD06F
l000FD06F:
	v110 = ___cxa_find_matching_catch_2()
	loc46 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc47 = v110
	v110 = loc47
	loc15 = v110
	v110 = loc46
	loc16 = v110
	goto l000FD097
	// succ:  l000FD097
l000FD080:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc19 = v110
	v110 = loc5
	loc12 = v110
	v110 = loc19
	loc22 = v110
	v110 = 0<32>
	loc24 = v110
	v110 = 0x10<32>
	loc110 = v110
	// succ:  l000FD097
l000FD097:
	// succ:  l000FD098
l000FD098:
	v110 = loc110
	v111 = 0x10<32>
	v112 = v110 == v111
	branch !v112 l000FD2E2
	// succ:  l000FD0A0 l000FD2E2
l000FD0A0:
	v110 = loc22
	v111 = loc12
	v110 = v110 + v111
	loc60 = v110
	v110 = loc22
	v111 = loc60
	v114 = arg2
	v110 = fn000FA9D7(v110, v111, v114)
	loc61 = v110
	v110 = loc22
	v111 = loc76
	v112 = v110 == v111
	loc62 = v112
	// succ:  l000FD0B9
l000FD0B9:
	v110 = loc62
	branch !v110 l000FD0D0
	// succ:  l000FD0BF l000FD0D0
l000FD0BF:
	v110 = loc98
	loc6 = v110
	v110 = 0<32>
	loc23 = v110
	v110 = loc76
	loc75 = v110
	v110 = 0x16<32>
	loc110 = v110
	goto l000FD143
	// succ:  l000FD143
l000FD0D0:
	v110 = loc12
	v111 = 3<32>
	v110 = v110 << v111
	loc63 = v110
	v110 = loc63
	v110 = _malloc(v110)
	loc64 = v110
	v110 = loc64
	v111 = 0<32>
	v112 = v110 == v111
	loc66 = v112
	// succ:  l000FD0E5
l000FD0E5:
	v110 = loc66
	branch !v110 l000FD129
	// succ:  l000FD0EB l000FD129
l000FD0EB:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x18A<32>
	invoke_v(v110)
	v110 = Mem0[0x00140048<p32>:word32]
	loc67 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc67
	v111 = 1<32>
	v110 = v110 & v111
	loc68 = v110
	v110 = loc68
	branch !v110 l000FD11A
	// succ:  l000FD107 l000FD11A
l000FD107:
	v110 = ___cxa_find_matching_catch_2()
	loc69 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc70 = v110
	v110 = loc69
	loc13 = v110
	v110 = loc70
	loc14 = v110
	goto l000FD144
	// succ:  l000FD144
l000FD11A:
	v110 = loc87
	v110 = Mem0[v110:word32]
	loc21 = v110
	v110 = loc21
	loc20 = v110
	goto l000FD12E
	// succ:  l000FD12E
l000FD127:
	goto l000FD12D
	// succ:  l000FD12D
l000FD129:
	v110 = loc22
	loc20 = v110
	// succ:  l000FD12D
l000FD12D:
	// succ:  l000FD12E
l000FD12E:
	v110 = loc64
	loc71 = v110
	v110 = loc64
	loc6 = v110
	v110 = loc71
	loc23 = v110
	v110 = loc20
	loc75 = v110
	v110 = 0x16<32>
	loc110 = v110
	// succ:  l000FD143
l000FD143:
	// succ:  l000FD144
l000FD144:
	v110 = loc110
	v111 = 0x16<32>
	v112 = v110 == v111
	branch !v112 l000FD2BB
	// succ:  l000FD14C l000FD2BB
l000FD14C:
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x167<32>
	v111 = arg2
	v110 = invoke_ii(v110, v111)
	loc72 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc73 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc73
	v111 = 1<32>
	v110 = v110 & v111
	loc74 = v110
	// succ:  l000FD168
l000FD168:
	v110 = loc74
	branch !v110 l000FD183
	// succ:  l000FD16E l000FD183
l000FD16E:
	v110 = ___cxa_find_matching_catch_2()
	loc91 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc92 = v110
	v110 = loc91
	loc7 = v110
	v110 = loc92
	loc8 = v110
	v110 = 0x20<32>
	loc110 = v110
	goto l000FD282
	// succ:  l000FD282
l000FD183:
	v110 = loc26
	v111 = loc72
	Mem0[v110:word32] = v111
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = 0x193<32>
	v111 = loc75
	v114 = loc61
	v116 = loc60
	v117 = loc6
	v118 = loc103
	v119 = loc25
	v120 = loc26
	invoke_viiiiiii(v110, v111, v114, v116, v117, v118, v119, v120)
	v110 = Mem0[0x00140048<p32>:word32]
	loc77 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc77
	v111 = 1<32>
	v110 = v110 & v111
	loc78 = v110
	v110 = loc78
	branch !v110 l000FD1D8
	// succ:  l000FD1B4 l000FD1D8
l000FD1B4:
	v110 = ___cxa_find_matching_catch_2()
	loc93 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc94 = v110
	v110 = loc26
	v110 = Mem0[v110:word32]
	loc95 = v110
	v110 = loc95
	v110 = fn0011B43F(v110)
	v110 = loc93
	loc7 = v110
	v110 = loc94
	loc8 = v110
	v110 = 0x20<32>
	loc110 = v110
	goto l000FD283
	// succ:  l000FD283
l000FD1D8:
	v110 = loc26
	v110 = Mem0[v110:word32]
	loc79 = v110
	v110 = loc79
	v110 = fn0011B43F(v110)
	v110 = arg1
	v110 = Mem0[v110:word32]
	loc80 = v110
	v110 = loc27
	v111 = loc80
	Mem0[v110:word32] = v111
	v110 = loc103
	v110 = Mem0[v110:word32]
	loc81 = v110
	v110 = loc25
	v110 = Mem0[v110:word32]
	loc82 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc17
	v111 = loc27
	v111 = Mem0[v111:word32]
	Mem0[v110:word32] = v111
	v110 = 0x194<32>
	v111 = loc17
	v114 = loc6
	v116 = loc81
	v117 = loc82
	v118 = arg2
	v119 = arg3
	v110 = invoke_iiiiiii(v110, v111, v114, v116, v117, v118, v119)
	loc83 = v110
	v110 = Mem0[0x00140048<p32>:word32]
	loc84 = v110
	v110 = 0<32>
	Mem0[0x00140048<p32>:word32] = v110
	v110 = loc84
	v111 = 1<32>
	v110 = v110 & v111
	loc85 = v110
	v110 = loc85
	branch !v110 l000FD248
	// succ:  l000FD235 l000FD248
l000FD235:
	v110 = ___cxa_find_matching_catch_2()
	loc96 = v110
	v110 = Mem0[0x00140094<p32>:word32]
	loc97 = v110
	v110 = loc96
	loc10 = v110
	v110 = loc97
	loc11 = v110
	goto l000FD283
	// succ:  l000FD283
l000FD248:
	v110 = arg1
	v111 = loc83
	Mem0[v110:word32] = v111
	v110 = loc23
	v111 = 0<32>
	v112 = v110 == v111
	loc86 = v112
	v110 = loc86
	v112 = v110 == 0<32>
	branch !v112 l000FD265
	// succ:  l000FD25B l000FD265
l000FD25B:
	v110 = loc23
	loc88 = v110
	v110 = loc88
	_free(v110)
	// succ:  l000FD265
l000FD265:
	v110 = loc24
	v111 = 0<32>
	v112 = v110 == v111
	loc89 = v112
	v110 = loc89
	v112 = v110 == 0<32>
	branch !v112 l000FD27B
	// succ:  l000FD271 l000FD27B
l000FD271:
	v110 = loc24
	loc90 = v110
	v110 = loc90
	_free(v110)
	// succ:  l000FD27B
l000FD27B:
	v110 = loc111
	Mem0[0x00140030<p32>:word32] = v110
	v110 = loc83
	return v110
	// succ:  fn000FCE21_exit
l000FD282:
	// succ:  l000FD283
l000FD283:
	v110 = loc110
	v111 = 0x20<32>
	v112 = v110 == v111
	branch !v112 l000FD294
	// succ:  l000FD28B l000FD294
l000FD28B:
	v110 = loc7
	loc10 = v110
	v110 = loc8
	loc11 = v110
	// succ:  l000FD294
l000FD294:
	v110 = loc23
	v111 = 0<32>
	v112 = v110 == v111
	loc99 = v112
	v110 = loc99
	branch !v110 l000FD2A8
	// succ:  l000FD29F l000FD2A8
l000FD29F:
	v110 = loc10
	loc13 = v110
	v110 = loc11
	loc14 = v110
	goto l000FD2B9
	// succ:  l000FD2B9
l000FD2A8:
	v110 = loc23
	loc100 = v110
	v110 = loc100
	_free(v110)
	v110 = loc10
	loc13 = v110
	v110 = loc11
	loc14 = v110
	// succ:  l000FD2B9
l000FD2B9:
	// succ:  l000FD2BB
l000FD2BB:
	v110 = loc24
	v111 = 0<32>
	v112 = v110 == v111
	loc101 = v112
	v110 = loc101
	branch !v110 l000FD2CF
	// succ:  l000FD2C6 l000FD2CF
l000FD2C6:
	v110 = loc14
	loc15 = v110
	v110 = loc13
	loc16 = v110
	goto l000FD2E0
	// succ:  l000FD2E0
l000FD2CF:
	v110 = loc24
	loc102 = v110
	v110 = loc102
	_free(v110)
	v110 = loc14
	loc15 = v110
	v110 = loc13
	loc16 = v110
	// succ:  l000FD2E0
l000FD2E0:
	// succ:  l000FD2E2
l000FD2E2:
	v110 = loc16
	___resumeException(v110)
	v110 = 0<32>
	return v110
	// succ:  fn000FCE21_exit
l000FD2E9:
	return v110
	// succ:  fn000FCE21_exit
fn000FCE21_exit:


// fn000FD2EB
// Return size: 0
word32 fn000FD2EB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn000FD2EB_entry:
	// succ:  l000FD2EB
l000FD2EB:
	v34 = Mem0[0x00140030<p32>:word32]
	loc35 = v34
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = 0xC0<32>
	v34 = v34 + v35
	Mem0[0x00140030<p32>:word32] = v34
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = Mem0[0x00140034<p32>:word32]
	v36 = v34 >= v35
	branch !v36 l000FD306
	// succ:  l000FD300 l000FD306
l000FD300:
	v34 = 0xC0<32>
	abortStackOverflow(v34)
	// succ:  l000FD306
l000FD306:
	v34 = loc35
	v35 = 0xA0<32>
	v34 = v34 + v35
	loc6 = v34
	v34 = loc35
	loc33 = v34
	v34 = loc35
	v35 = 0xB8<32>
	v34 = v34 + v35
	loc28 = v34
	v34 = loc35
	v35 = 0xA4<32>
	v34 = v34 + v35
	loc29 = v34
	v34 = loc35
	v35 = 0xC<32>
	v34 = v34 + v35
	loc30 = v34
	v34 = loc35
	v35 = 8<32>
	v34 = v34 + v35
	loc31 = v34
	v34 = loc35
	v35 = 4<32>
	v34 = v34 + v35
	loc32 = v34
	v34 = loc28
	v35 = 0x389E<32>
	v35 = Mem0[v35:word32]
	Mem0[v34:word32] = v35
	v34 = loc28
	v35 = 4<32>
	v34 = v34 + v35
	v35 = 0x389E<32>
	v37 = 4<32>
	v35 = v35 + v37
	v38 = Mem0[v35:int16]
	v35 = CONVERT(v38, int16, word32)
	v39 = SLICE(v35, word16, 0)
	Mem0[v34:word16] = v39
	v34 = fn000EAD0D()
	loc7 = v34
	v34 = loc33
	v35 = arg4
	Mem0[v34:word32] = v35
	v34 = loc29
	v35 = 0x14<32>
	v37 = loc7
	v40 = loc28
	v41 = loc33
	v34 = fn000FA95B(v34, v35, v37, v40, v41)
	loc8 = v34
	v34 = loc29
	v35 = loc8
	v34 = v34 + v35
	loc9 = v34
	v34 = loc29
	v35 = loc9
	v37 = arg2
	v34 = fn000FA9D7(v34, v35, v37)
	loc10 = v34
	v34 = arg2
	v34 = fn000E64CA(v34)
	loc11 = v34
	v34 = loc31
	v35 = loc11
	Mem0[v34:word32] = v35
	v34 = 0<32>
	Mem0[0x00140048<p32>:word32] = v34
	v34 = 0x164<32>
	v35 = loc31
	v37 = 0x4C90<32>
	v34 = invoke_iii(v34, v35, v37)
	loc12 = v34
	v34 = Mem0[0x00140048<p32>:word32]
	loc13 = v34
	v34 = 0<32>
	Mem0[0x00140048<p32>:word32] = v34
	v34 = loc13
	v35 = 1<32>
	v34 = v34 & v35
	loc14 = v34
	v34 = loc14
	branch !v34 l000FD3C7
	// succ:  l000FD3B4 l000FD3C7
l000FD3B4:
	v34 = ___cxa_find_matching_catch_2()
	loc26 = v34
	v34 = Mem0[0x00140094<p32>:word32]
	loc27 = v34
	v34 = loc11
	v34 = fn0011B43F(v34)
	v34 = loc26
	___resumeException(v34)
l000FD3C7:
	v34 = loc11
	v34 = fn0011B43F(v34)
	v34 = loc12
	v34 = Mem0[v34:word32]
	loc15 = v34
	v34 = loc15
	v35 = 0x30<32>
	v34 = v34 + v35
	loc16 = v34
	v34 = loc16
	v34 = Mem0[v34:word32]
	loc17 = v34
	v34 = loc12
	v35 = loc29
	v37 = loc9
	v40 = loc30
	v41 = loc17
	v42 = 0x1FF<32>
	v41 = v41 & v42
	v42 = 0x2520<32>
	v41 = v41 + v42
fn000FD2EB_exit:


// fn000FD465
// Return size: 0
word32 fn000FD465(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FD465_entry:
	// succ:  l000FD465
l000FD465:
	v51 = Mem0[0x00140030<p32>:word32]
	loc53 = v51
	v51 = Mem0[0x00140030<p32>:word32]
	v52 = 0x10<32>
	v51 = v51 + v52
	Mem0[0x00140030<p32>:word32] = v51
	v51 = Mem0[0x00140030<p32>:word32]
	v52 = Mem0[0x00140034<p32>:word32]
	v53 = v51 >= v52
	branch !v53 l000FD47E
	// succ:  l000FD479 l000FD47E
l000FD479:
	v51 = 0x10<32>
	abortStackOverflow(v51)
	// succ:  l000FD47E
l000FD47E:
	v51 = loc53
	loc48 = v51
	v51 = arg0
	v51 = Mem0[v51:word32]
	loc49 = v51
	v51 = loc49
	v52 = 0<32>
	v53 = v51 == v52
	loc50 = v53
	// succ:  l000FD490
l000FD490:
	v51 = loc50
	branch !v51 l000FD49B
	// succ:  l000FD496 l000FD49B
l000FD496:
	v51 = 0<32>
	loc7 = v51
l000FD49B:
	v51 = arg3
	loc51 = v51
	v51 = arg1
	loc8 = v51
	v51 = loc51
	v52 = loc8
	v51 = v51 - v52
	loc9 = v51
	v51 = loc9
	v52 = 2<32>
	v51 = v51 >> v52
	loc10 = v51
	v51 = arg4
	v52 = 0xC<32>
	v51 = v51 + v52
	loc11 = v51
	v51 = loc11
	v51 = Mem0[v51:word32]
	loc12 = v51
	v51 = loc12
	v52 = loc10
	v53 = v51 > v52
	loc13 = v53
	v51 = loc12
	v52 = loc10
	v51 = v51 - v52
	loc14 = v51
	v51 = loc13
	branch !v51 l000FD4D4
	// succ:  l000FD4D1 l000FD4D4
l000FD4D1:
	v51 = loc14
	goto l000FD4D6
	// succ:  l000FD4D6
l000FD4D4:
	v51 = 0<32>
	// succ:  l000FD4D6
l000FD4D6:
	loc6 = v51
	v51 = arg2
	loc15 = v51
	v51 = loc15
	v52 = loc8
	v51 = v51 - v52
	loc16 = v51
	v51 = loc16
	v52 = 2<32>
	v51 = v51 >> v52
	loc17 = v51
	v51 = loc16
	v52 = 0<32>
	v53 = v51 > v52
	loc18 = v53
	v51 = loc18
	v51 = v51
	// succ:  l000FD4F6
l000FD4F6:
	v51 = loc49
	v51 = Mem0[v51:word32]
	loc19 = v51
	v51 = loc19
	v52 = 0x30<32>
	v51 = v51 + v52
	loc20 = v51
	v51 = loc20
	v51 = Mem0[v51:word32]
	loc21 = v51
	v51 = loc49
	v52 = arg1
	v54 = loc17
	v55 = loc21
	v56 = 0x1FF<32>
	v55 = v55 & v56
	v56 = 0xF20<32>
	v55 = v55 + v56
fn000FD465_exit:


// fn000FD67D
// Return size: 0
void fn000FD67D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FD67D_entry:
	// succ:  l000FD67D
l000FD67D:
	v212 = Mem0[0x00140030<p32>:word32]
	loc215 = v212
	v212 = Mem0[0x00140030<p32>:word32]
	v213 = 0x10<32>
	v212 = v212 + v213
	Mem0[0x00140030<p32>:word32] = v212
	v212 = Mem0[0x00140030<p32>:word32]
	v213 = Mem0[0x00140034<p32>:word32]
	v214 = v212 >= v213
	branch !v214 l000FD697
	// succ:  l000FD692 l000FD697
l000FD692:
	v212 = 0x10<32>
	abortStackOverflow(v212)
	// succ:  l000FD697
l000FD697:
	v212 = loc215
	loc179 = v212
	v212 = arg6
	v213 = 0x4C90<32>
	v212 = fn000EA9F7(v212, v213)
	loc190 = v212
	v212 = arg6
	v213 = 0x4C98<32>
	v212 = fn000EA9F7(v212, v213)
	loc201 = v212
	v212 = loc201
	v212 = Mem0[v212:word32]
	loc27 = v212
	v212 = loc27
	v213 = 0x14<32>
	v212 = v212 + v213
	loc38 = v212
	v212 = loc38
	v212 = Mem0[v212:word32]
	loc49 = v212
	v212 = loc179
	v213 = loc201
	v215 = loc49
	v216 = 0x1FF<32>
	v215 = v215 & v216
	v216 = 0x700<32>
	v215 = v215 + v216
fn000FD67D_exit:


// fn000FE09E
// Return size: 0
void fn000FE09E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn000FE09E_entry:
	// succ:  l000FE09E
l000FE09E:
	v144 = Mem0[0x00140030<p32>:word32]
	loc147 = v144
	v144 = Mem0[0x00140030<p32>:word32]
	v145 = 0x10<32>
	v144 = v144 + v145
	Mem0[0x00140030<p32>:word32] = v144
	v144 = Mem0[0x00140030<p32>:word32]
	v145 = Mem0[0x00140034<p32>:word32]
	v146 = v144 >= v145
	branch !v146 l000FE0B8
	// succ:  l000FE0B3 l000FE0B8
l000FE0B3:
	v144 = 0x10<32>
	abortStackOverflow(v144)
	// succ:  l000FE0B8
l000FE0B8:
	v144 = loc147
	loc111 = v144
	v144 = arg6
	v145 = 0x4C90<32>
	v144 = fn000EA9F7(v144, v145)
	loc122 = v144
	v144 = arg6
	v145 = 0x4C98<32>
	v144 = fn000EA9F7(v144, v145)
	loc133 = v144
	v144 = loc133
	v144 = Mem0[v144:word32]
	loc22 = v144
	v144 = loc22
	v145 = 0x14<32>
	v144 = v144 + v145
	loc33 = v144
	v144 = loc33
	v144 = Mem0[v144:word32]
	loc44 = v144
	v144 = loc111
	v145 = loc133
	v147 = loc44
	v148 = 0x1FF<32>
	v147 = v147 & v148
	v148 = 0x700<32>
	v147 = v147 + v148
fn000FE09E_exit:


// fn000FE711
// Return size: 0
void fn000FE711(word32 arg0)
fn000FE711_entry:
	// succ:  l000FE711
l000FE711:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	return
	// succ:  fn000FE711_exit
l000FE718:
	return
	// succ:  fn000FE711_exit
fn000FE711_exit:


// fn000FE71A
// Return size: 0
void fn000FE71A(word32 arg0)
fn000FE71A_entry:
	// succ:  l000FE71A
l000FE71A:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	v5 = arg0
	fn0011B709(v5)
	return
	// succ:  fn000FE71A_exit
l000FE726:
	return
	// succ:  fn000FE71A_exit
fn000FE71A_exit:


// fn000FE728
// Return size: 0
word32 fn000FE728(word32 arg0)
fn000FE728_entry:
	// succ:  l000FE728
l000FE728:
	v5 = Mem0[0x00140030<p32>:word32]
	loc2 = v5
	v5 = 2<32>
	return v5
	// succ:  fn000FE728_exit
l000FE731:
	return v5
	// succ:  fn000FE728_exit
fn000FE728_exit:


// fn000FE733
// Return size: 0
word32 fn000FE733(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE733_entry:
	// succ:  l000FE733
l000FE733:
	v12 = Mem0[0x00140030<p32>:word32]
	loc14 = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v12 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v12
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = Mem0[0x00140034<p32>:word32]
	v14 = v12 >= v13
	branch !v14 l000FE74C
	// succ:  l000FE747 l000FE74C
l000FE747:
	v12 = 0x10<32>
	abortStackOverflow(v12)
	// succ:  l000FE74C
l000FE74C:
	v12 = loc14
	v13 = 0xC<32>
	v12 = v12 + v13
	loc7 = v12
	v12 = loc14
	v13 = 8<32>
	v12 = v12 + v13
	loc6 = v12
	v12 = loc14
	v13 = 4<32>
	v12 = v12 + v13
	loc9 = v12
	v12 = loc14
	loc10 = v12
	v12 = arg1
	v12 = Mem0[v12:word32]
	loc11 = v12
	v12 = loc9
	v13 = loc11
	Mem0[v12:word32] = v13
	v12 = arg2
	v12 = Mem0[v12:word32]
	loc12 = v12
	v12 = loc10
	v13 = loc12
	Mem0[v12:word32] = v13
	v12 = loc6
	v13 = loc9
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = loc7
	v13 = loc10
	v13 = Mem0[v13:word32]
	Mem0[v12:word32] = v13
	v12 = arg0
	v13 = loc6
	v15 = loc7
	v16 = arg3
	v17 = arg4
	v18 = arg5
	v19 = 0x3AB6<32>
	v20 = 0x3ABE<32>
	v12 = fn001003A9(v12, v13, v15, v16, v17, v18, v19, v20)
	loc8 = v12
	v12 = loc14
	Mem0[0x00140030<p32>:word32] = v12
	v12 = loc8
	return v12
	// succ:  fn000FE733_exit
l000FE7B5:
	return v12
	// succ:  fn000FE733_exit
fn000FE733_exit:


// fn000FE7B7
// Return size: 0
word32 fn000FE7B7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE7B7_entry:
	// succ:  l000FE7B7
l000FE7B7:
	v27 = Mem0[0x00140030<p32>:word32]
	loc29 = v27
	v27 = Mem0[0x00140030<p32>:word32]
	v28 = 0x10<32>
	v27 = v27 + v28
	Mem0[0x00140030<p32>:word32] = v27
	v27 = Mem0[0x00140030<p32>:word32]
	v28 = Mem0[0x00140034<p32>:word32]
	v29 = v27 >= v28
	branch !v29 l000FE7D0
	// succ:  l000FE7CB l000FE7D0
l000FE7CB:
	v27 = 0x10<32>
	abortStackOverflow(v27)
	// succ:  l000FE7D0
l000FE7D0:
	v27 = loc29
	v28 = 0xC<32>
	v27 = v27 + v28
	loc7 = v27
	v27 = loc29
	v28 = 8<32>
	v27 = v27 + v28
	loc6 = v27
	v27 = loc29
	v28 = 4<32>
	v27 = v27 + v28
	loc24 = v27
	v27 = loc29
	loc25 = v27
	v27 = arg0
	v28 = 8<32>
	v27 = v27 + v28
	loc26 = v27
	v27 = loc26
	v27 = Mem0[v27:word32]
	loc27 = v27
	v27 = loc27
	v28 = 0x14<32>
	v27 = v27 + v28
	loc8 = v27
	v27 = loc8
	v27 = Mem0[v27:word32]
	loc9 = v27
	v27 = loc26
	v28 = loc9
	v30 = 0x1FF<32>
	v28 = v28 & v30
	v30 = 0xB00<32>
	v28 = v28 + v30
fn000FE7B7_exit:


// fn000FE8BB
// Return size: 0
word32 fn000FE8BB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE8BB_entry:
	// succ:  l000FE8BB
l000FE8BB:
	v17 = Mem0[0x00140030<p32>:word32]
	loc19 = v17
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v17 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v17
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = Mem0[0x00140034<p32>:word32]
	v19 = v17 >= v18
	branch !v19 l000FE8D4
	// succ:  l000FE8CF l000FE8D4
l000FE8CF:
	v17 = 0x10<32>
	abortStackOverflow(v17)
	// succ:  l000FE8D4
l000FE8D4:
	v17 = loc19
	v18 = 8<32>
	v17 = v17 + v18
	loc6 = v17
	v17 = loc19
	v18 = 4<32>
	v17 = v17 + v18
	loc14 = v17
	v17 = loc19
	loc15 = v17
	v17 = arg3
	v17 = fn000E64CA(v17)
	loc16 = v17
	v17 = loc14
	v18 = loc16
	Mem0[v17:word32] = v18
	v17 = 0<32>
	Mem0[0x00140048<p32>:word32] = v17
	v17 = 0x164<32>
	v18 = loc14
	v20 = 0x4C70<32>
	v17 = invoke_iii(v17, v18, v20)
	loc17 = v17
	v17 = Mem0[0x00140048<p32>:word32]
	loc8 = v17
	v17 = 0<32>
	Mem0[0x00140048<p32>:word32] = v17
	v17 = loc8
	v18 = 1<32>
	v17 = v17 & v18
	loc9 = v17
	v17 = loc9
	branch !v17 l000FE92B
	// succ:  l000FE918 l000FE92B
l000FE918:
	v17 = ___cxa_find_matching_catch_2()
	loc12 = v17
	v17 = Mem0[0x00140094<p32>:word32]
	loc13 = v17
	v17 = loc16
	v17 = fn0011B43F(v17)
	v17 = loc12
	___resumeException(v17)
	goto l000FE96D
	// succ:  l000FE96D
l000FE92B:
	v17 = loc16
	v17 = fn0011B43F(v17)
	v17 = arg5
	v18 = 0x18<32>
	v17 = v17 + v18
	loc10 = v17
	v17 = arg2
	v17 = Mem0[v17:word32]
	loc11 = v17
	v17 = loc15
	v18 = loc11
	Mem0[v17:word32] = v18
	v17 = loc6
	v18 = loc15
	v18 = Mem0[v18:word32]
	Mem0[v17:word32] = v18
	v17 = arg0
	v18 = loc10
	v20 = arg1
	v21 = loc6
	v22 = arg4
	v23 = loc17
	fn00100228(v17, v18, v20, v21, v22, v23)
	v17 = arg1
	v17 = Mem0[v17:word32]
	loc7 = v17
	v17 = loc19
	Mem0[0x00140030<p32>:word32] = v17
	v17 = loc7
	return v17
	// succ:  fn000FE8BB_exit
l000FE96D:
	v17 = 0<32>
	return v17
	// succ:  fn000FE8BB_exit
l000FE971:
	return v17
	// succ:  fn000FE8BB_exit
fn000FE8BB_exit:


// fn000FE973
// Return size: 0
word32 fn000FE973(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FE973_entry:
	// succ:  l000FE973
l000FE973:
	v17 = Mem0[0x00140030<p32>:word32]
	loc19 = v17
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v17 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v17
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = Mem0[0x00140034<p32>:word32]
	v19 = v17 >= v18
	branch !v19 l000FE98C
	// succ:  l000FE987 l000FE98C
l000FE987:
	v17 = 0x10<32>
	abortStackOverflow(v17)
	// succ:  l000FE98C
l000FE98C:
	v17 = loc19
	v18 = 8<32>
	v17 = v17 + v18
	loc6 = v17
	v17 = loc19
	v18 = 4<32>
	v17 = v17 + v18
	loc14 = v17
	v17 = loc19
	loc15 = v17
	v17 = arg3
	v17 = fn000E64CA(v17)
	loc16 = v17
	v17 = loc14
	v18 = loc16
	Mem0[v17:word32] = v18
	v17 = 0<32>
	Mem0[0x00140048<p32>:word32] = v17
	v17 = 0x164<32>
	v18 = loc14
	v20 = 0x4C70<32>
	v17 = invoke_iii(v17, v18, v20)
	loc17 = v17
	v17 = Mem0[0x00140048<p32>:word32]
	loc8 = v17
	v17 = 0<32>
	Mem0[0x00140048<p32>:word32] = v17
	v17 = loc8
	v18 = 1<32>
	v17 = v17 & v18
	loc9 = v17
	v17 = loc9
	branch !v17 l000FE9E3
	// succ:  l000FE9D0 l000FE9E3
l000FE9D0:
	v17 = ___cxa_find_matching_catch_2()
	loc12 = v17
	v17 = Mem0[0x00140094<p32>:word32]
	loc13 = v17
	v17 = loc16
	v17 = fn0011B43F(v17)
	v17 = loc12
	___resumeException(v17)
	goto l000FEA25
	// succ:  l000FEA25
l000FE9E3:
	v17 = loc16
	v17 = fn0011B43F(v17)
	v17 = arg5
	v18 = 0x10<32>
	v17 = v17 + v18
	loc10 = v17
	v17 = arg2
	v17 = Mem0[v17:word32]
	loc11 = v17
	v17 = loc15
	v18 = loc11
	Mem0[v17:word32] = v18
	v17 = loc6
	v18 = loc15
	v18 = Mem0[v18:word32]
	Mem0[v17:word32] = v18
	v17 = arg0
	v18 = loc10
	v20 = arg1
	v21 = loc6
	v22 = arg4
	v23 = loc17
	fn001002E5(v17, v18, v20, v21, v22, v23)
	v17 = arg1
	v17 = Mem0[v17:word32]
	loc7 = v17
	v17 = loc19
	Mem0[0x00140030<p32>:word32] = v17
	v17 = loc7
	return v17
	// succ:  fn000FE973_exit
l000FEA25:
	v17 = 0<32>
	return v17
	// succ:  fn000FE973_exit
l000FEA29:
	return v17
	// succ:  fn000FE973_exit
fn000FE973_exit:


// fn000FEA2B
// Return size: 0
word32 fn000FEA2B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn000FEA2B_entry:
	// succ:  l000FEA2B
l000FEA2B:
	v17 = Mem0[0x00140030<p32>:word32]
	loc19 = v17
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v17 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v17
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = Mem0[0x00140034<p32>:word32]
	v19 = v17 >= v18
	branch !v19 l000FEA44
	// succ:  l000FEA3F l000FEA44
l000FEA3F:
	v17 = 0x10<32>
	abortStackOverflow(v17)
	// succ:  l000FEA44
l000FEA44:
	v17 = loc19
	v18 = 8<32>
	v17 = v17 + v18
	loc6 = v17
	v17 = loc19
	v18 = 4<32>
	v17 = v17 + v18
	loc14 = v17
	v17 = loc19
	loc15 = v17
	v17 = arg3
	v17 = fn000E64CA(v17)
	loc16 = v17
	v17 = loc14
	v18 = loc16
	Mem0[v17:word32] = v18
	v17 = 0<32>
	Mem0[0x00140048<p32>:word32] = v17
	v17 = 0x164<32>
	v18 = loc14
	v20 = 0x4C70<32>
	v17 = invoke_iii(v17, v18, v20)
	loc17 = v17
	v17 = Mem0[0x00140048<p32>:word32]
	loc8 = v17
	v17 = 0<32>
	Mem0[0x00140048<p32>:word32] = v17
	v17 = loc8
	v18 = 1<32>
	v17 = v17 & v18
	loc9 = v17
	v17 = loc9
	branch !v17 l000FEA9B
	// succ:  l000FEA88 l000FEA9B
l000FEA88:
	v17 = ___cxa_find_matching_catch_2()
	loc12 = v17
	v17 = Mem0[0x00140094<p32>:word32]
	loc13 = v17
	v17 = loc16
	v17 = fn0011B43F(v17)
	v17 = loc12
	___resumeException(v17)
	goto l000FEADD
	// succ:  l000FEADD
l000FEA9B:
	v17 = loc16
	v17 = fn0011B43F(v17)
	v17 = arg5
	v18 = 0x14<32>
	v17 = v17 + v18
	loc10 = v17
	v17 = arg2
	v17 = Mem0[v17:word32]
	loc11 = v17
	v17 = loc15
	v18 = loc11
	Mem0[v17:word32] = v18
	v17 = loc6
	v18 = loc15
	v18 = Mem0[v18:word32]
	Mem0[v17:word32] = v18
	v17 = arg0
	v18 = loc10
	v20 = arg1
	v21 = loc6
	v22 = arg4
	v23 = loc17
	fn0010195D(v17, v18, v20, v21, v22, v23)
	v17 = arg1
	v17 = Mem0[v17:word32]
	loc7 = v17
	v17 = loc19
	Mem0[0x00140030<p32>:word32] = v17
	v17 = loc7
	return v17
	// succ:  fn000FEA2B_exit
l000FEADD:
	v17 = 0<32>
	return v17
	// succ:  fn000FEA2B_exit
l000FEAE1:
	return v17
	// succ:  fn000FEA2B_exit
fn000FEA2B_exit:


// fn000FEAE3
// Return size: 0
word32 fn000FEAE3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn000FEAE3_entry:
	// succ:  l000FEAE3
l000FEAE3:
	v163 = Mem0[0x00140030<p32>:word32]
	loc167 = v163
	v163 = Mem0[0x00140030<p32>:word32]
	v164 = 0x100<32>
	v163 = v163 + v164
	Mem0[0x00140030<p32>:word32] = v163
	v163 = Mem0[0x00140030<p32>:word32]
	v164 = Mem0[0x00140034<p32>:word32]
	v165 = v163 >= v164
	branch !v165 l000FEAFF
	// succ:  l000FEAF9 l000FEAFF
l000FEAF9:
	v163 = 0x100<32>
	abortStackOverflow(v163)
	// succ:  l000FEAFF
l000FEAFF:
	v163 = loc167
	v164 = 0xF8<32>
	v163 = v163 + v164
	loc32 = v163
	v163 = loc167
	v164 = 0xF4<32>
	v163 = v163 + v164
	loc30 = v163
	v163 = loc167
	v164 = 0xF0<32>
	v163 = v163 + v164
	loc29 = v163
	v163 = loc167
	v164 = 0xEC<32>
	v163 = v163 + v164
	loc28 = v163
	v163 = loc167
	v164 = 0xE8<32>
	v163 = v163 + v164
	loc27 = v163
	v163 = loc167
	v164 = 0xE4<32>
	v163 = v163 + v164
	loc26 = v163
	v163 = loc167
	v164 = 0xE0<32>
	v163 = v163 + v164
	loc25 = v163
	v163 = loc167
	v164 = 0xDC<32>
	v163 = v163 + v164
	loc24 = v163
	v163 = loc167
	v164 = 0xD8<32>
	v163 = v163 + v164
	loc23 = v163
	v163 = loc167
	v164 = 0xD4<32>
	v163 = v163 + v164
	loc22 = v163
	v163 = loc167
	v164 = 0xD0<32>
	v163 = v163 + v164
	loc21 = v163
	v163 = loc167
	v164 = 0xCC<32>
	v163 = v163 + v164
	loc19 = v163
	v163 = loc167
	v164 = 0xC8<32>
	v163 = v163 + v164
	loc18 = v163
	v163 = loc167
	v164 = 0xC4<32>
	v163 = v163 + v164
	loc17 = v163
	v163 = loc167
	v164 = 0xC0<32>
	v163 = v163 + v164
	loc16 = v163
	v163 = loc167
	v164 = 0xBC<32>
	v163 = v163 + v164
	loc15 = v163
	v163 = loc167
	v164 = 0xB8<32>
	v163 = v163 + v164
	loc14 = v163
	v163 = loc167
	v164 = 0xB4<32>
	v163 = v163 + v164
	loc13 = v163
	v163 = loc167
	v164 = 0xB0<32>
	v163 = v163 + v164
	loc12 = v163
	v163 = loc167
	v164 = 0xAC<32>
	v163 = v163 + v164
	loc11 = v163
	v163 = loc167
	v164 = 0xA8<32>
	v163 = v163 + v164
	loc10 = v163
	v163 = loc167
	v164 = 0xA4<32>
	v163 = v163 + v164
	loc38 = v163
	v163 = loc167
	v164 = 0xA0<32>
	v163 = v163 + v164
	loc37 = v163
	v163 = loc167
	v164 = 0x9C<32>
	v163 = v163 + v164
	loc36 = v163
	v163 = loc167
	v164 = 0x98<32>
	v163 = v163 + v164
	loc35 = v163
	v163 = loc167
	v164 = 0x94<32>
	v163 = v163 + v164
	loc34 = v163
	v163 = loc167
	v164 = 0x90<32>
	v163 = v163 + v164
	loc33 = v163
	v163 = loc167
	v164 = 0x8C<32>
	v163 = v163 + v164
	loc31 = v163
	v163 = loc167
	v164 = 0x88<32>
	v163 = v163 + v164
	loc20 = v163
	v163 = loc167
	v164 = 0x84<32>
	v163 = v163 + v164
	loc9 = v163
	v163 = loc167
	v164 = 0x80<32>
	v163 = v163 + v164
	loc8 = v163
	v163 = loc167
	v164 = 0x7C<32>
	v163 = v163 + v164
	loc144 = v163
	v163 = loc167
	v164 = 0x78<32>
	v163 = v163 + v164
	loc155 = v163
	v163 = loc167
	v164 = 0x74<32>
	v163 = v163 + v164
	loc41 = v163
	v163 = loc167
	v164 = 0x70<32>
	v163 = v163 + v164
	loc52 = v163
	v163 = loc167
	v164 = 0x6C<32>
	v163 = v163 + v164
	loc63 = v163
	v163 = loc167
	v164 = 0x68<32>
	v163 = v163 + v164
	loc74 = v163
	v163 = loc167
	v164 = 0x64<32>
	v163 = v163 + v164
	loc78 = v163
	v163 = loc167
	v164 = 0x60<32>
	v163 = v163 + v164
	loc79 = v163
	v163 = loc167
	v164 = 0x5C<32>
	v163 = v163 + v164
	loc80 = v163
	v163 = loc167
	v164 = 0x58<32>
	v163 = v163 + v164
	loc81 = v163
	v163 = loc167
	v164 = 0x54<32>
	v163 = v163 + v164
	loc82 = v163
	v163 = loc167
	v164 = 0x50<32>
	v163 = v163 + v164
	loc83 = v163
	v163 = loc167
	v164 = 0x4C<32>
	v163 = v163 + v164
	loc84 = v163
	v163 = loc167
	v164 = 0x48<32>
	v163 = v163 + v164
	loc85 = v163
	v163 = loc167
	v164 = 0x44<32>
	v163 = v163 + v164
	loc86 = v163
	v163 = loc167
	v164 = 0x40<32>
	v163 = v163 + v164
	loc87 = v163
	v163 = loc167
	v164 = 0x3C<32>
	v163 = v163 + v164
	loc88 = v163
	v163 = loc167
	v164 = 0x38<32>
	v163 = v163 + v164
	loc89 = v163
	v163 = loc167
	v164 = 0x34<32>
	v163 = v163 + v164
	loc90 = v163
	v163 = loc167
	v164 = 0x30<32>
	v163 = v163 + v164
	loc91 = v163
	v163 = loc167
	v164 = 0x2C<32>
	v163 = v163 + v164
	loc92 = v163
	v163 = loc167
	v164 = 0x28<32>
	v163 = v163 + v164
	loc93 = v163
	v163 = loc167
	v164 = 0x24<32>
	v163 = v163 + v164
	loc94 = v163
	v163 = loc167
	v164 = 0x20<32>
	v163 = v163 + v164
	loc95 = v163
	v163 = loc167
	v164 = 0x1C<32>
	v163 = v163 + v164
	loc96 = v163
	v163 = loc167
	v164 = 0x18<32>
	v163 = v163 + v164
	loc97 = v163
	v163 = loc167
	v164 = 0x14<32>
	v163 = v163 + v164
	loc98 = v163
	v163 = loc167
	v164 = 0x10<32>
	v163 = v163 + v164
	loc99 = v163
	v163 = loc167
	v164 = 0xC<32>
	v163 = v163 + v164
	loc100 = v163
	v163 = loc167
	v164 = 8<32>
	v163 = v163 + v164
	loc101 = v163
	v163 = loc167
	v164 = 4<32>
	v163 = v163 + v164
	loc102 = v163
	v163 = loc167
	loc103 = v163
	v163 = arg4
	v164 = 0<32>
	Mem0[v163:word32] = v164
	v163 = arg3
	v163 = fn000E64CA(v163)
	loc104 = v163
	v163 = loc144
	v164 = loc104
	Mem0[v163:word32] = v164
	v163 = 0<32>
	Mem0[0x00140048<p32>:word32] = v163
	v163 = 0x164<32>
	v164 = loc144
	v166 = 0x4C70<32>
	v163 = invoke_iii(v163, v164, v166)
	loc105 = v163
	v163 = Mem0[0x00140048<p32>:word32]
	loc106 = v163
	v163 = 0<32>
	Mem0[0x00140048<p32>:word32] = v163
	v163 = loc106
	v164 = 1<32>
	v163 = v163 & v164
	loc107 = v163
	v163 = loc107
	branch !v163 l000FED73
	// succ:  l000FED60 l000FED73
l000FED60:
	v163 = ___cxa_find_matching_catch_2()
	loc109 = v163
	v163 = Mem0[0x00140094<p32>:word32]
	loc110 = v163
	v163 = loc104
	v163 = fn0011B43F(v163)
	v163 = loc109
	___resumeException(v163)
	// succ:  l000FED73
l000FED73:
	v163 = loc104
	v163 = fn0011B43F(v163)
	v163 = arg6
	v164 = 0x18<32>
	v163 = v163 << v164
	v164 = 0x18<32>
	v163 = v163 >> v164
	loc108 = v163
	// succ:  l000FED83
l000FED83:
	v163 = loc108
	v164 = 0x25<32>
	v163 = v163 - v164
	switch (v163) { <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> l000FEE1E l000FEE5D <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> l000FEE20 l000FEE5F l000FEE98 <null> <null> <null> <null> l000FEE5B <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> <null> }
	// succ:  l000FEE1E l000FEE20 l000FEE5B l000FEE5D l000FEE5F l000FEE98
l000FEE1E:
	// succ:  l000FEE20
l000FEE20:
	v163 = arg5
	v164 = 0x18<32>
	v163 = v163 + v164
	loc111 = v163
	v163 = arg2
	v163 = Mem0[v163:word32]
	loc112 = v163
	v163 = loc155
	v164 = loc112
	Mem0[v163:word32] = v164
	v163 = loc8
	v164 = loc155
	v164 = Mem0[v164:word32]
	Mem0[v163:word32] = v164
	v163 = arg0
	v164 = loc111
	v166 = arg1
	v167 = loc8
	v168 = arg4
	v169 = loc105
	fn00100228(v163, v164, v166, v167, v168, v169)
	v163 = 0x1C<32>
	loc166 = v163
l000FEE5A:
	// succ:  l000FEE5B
l000FEE5B:
	// succ:  l000FEE5D
l000FEE5D:
	// succ:  l000FEE5F
l000FEE5F:
	v163 = arg5
	v164 = 0x10<32>
	v163 = v163 + v164
	loc113 = v163
	v163 = arg2
	v163 = Mem0[v163:word32]
	loc114 = v163
	v163 = loc41
	v164 = loc114
	Mem0[v163:word32] = v164
	v163 = loc9
	v164 = loc41
	v164 = Mem0[v164:word32]
	Mem0[v163:word32] = v164
	v163 = arg0
	v164 = loc113
	v166 = arg1
	v167 = loc9
	v168 = arg4
	v169 = loc105
	fn001002E5(v163, v164, v166, v167, v168, v169)
	v163 = 0x1C<32>
	loc166 = v163
l000FEE97:
	// succ:  l000FEE98
l000FEE98:
	v163 = arg0
	v164 = 8<32>
	v163 = v163 + v164
	loc115 = v163
	v163 = loc115
	v163 = Mem0[v163:word32]
	loc116 = v163
	v163 = loc116
	v164 = 0xC<32>
	v163 = v163 + v164
	loc117 = v163
	v163 = loc117
	v163 = Mem0[v163:word32]
	loc118 = v163
	v163 = loc115
	v164 = loc118
	v166 = 0x1FF<32>
	v164 = v164 & v166
	v166 = 0xB00<32>
	v164 = v164 + v166
fn000FEAE3_exit:


// fn000FF5D5
// Return size: 0
word32 fn000FF5D5(word32 arg0)
fn000FF5D5_entry:
	// succ:  l000FF5D5
l000FF5D5:
	v51 = Mem0[0x00140030<p32>:word32]
	loc48 = v51
	v51 = 0x43D8<32>
	v52 = Mem0[v51:int8]
	v51 = CONVERT(v52, int8, word32)
	loc2 = v51
	v51 = loc2
	v53 = 0x18<32>
	v51 = v51 << v53
	v53 = 0x18<32>
	v51 = v51 >> v53
	v53 = 0<32>
	v54 = v51 == v53
	loc13 = v54
	// succ:  l000FF5F1
l000FF5F1:
	v51 = loc13
	branch !v51 l000FF8F5
	// succ:  l000FF5F7 l000FF8F5
l000FF5F7:
	v51 = 0x43D8<32>
	v51 = fn0011EE46(v51)
	loc24 = v51
	v51 = loc24
	v53 = 0<32>
	v54 = v51 == v53
	loc35 = v54
	v51 = loc35
	v54 = v51 == 0<32>
	branch !v54 l000FF8F4
	// succ:  l000FF60C l000FF8F4
l000FF60C:
	v51 = 0x43E0<32>
	v55 = Mem0[v51:int8]
	v51 = CONVERT(v55, int8, word32)
	loc41 = v51
	v51 = loc41
	v53 = 0x18<32>
	v51 = v51 << v53
	v53 = 0x18<32>
	v51 = v51 >> v53
	v53 = 0<32>
	v54 = v51 == v53
	loc42 = v54
	v51 = loc42
	branch !v51 l000FF6B8
	// succ:  l000FF626 l000FF6B8
l000FF626:
	v51 = 0x43E0<32>
	v51 = fn0011EE46(v51)
	loc43 = v51
	v51 = loc43
	v53 = 0<32>
	v54 = v51 == v53
	loc44 = v54
	v51 = loc44
	v54 = v51 == 0<32>
	branch !v54 l000FF6B7
	// succ:  l000FF63B l000FF6B7
l000FF63B:
	v51 = 0x4F30<32>
	loc45 = v51
	// succ:  l000FF643
l000FF643:
	v51 = loc45
	v56 = 0<64>
	Mem0[v51:word64] = v56
	v51 = loc45
	v53 = 8<32>
	v51 = v51 + v53
	v53 = 0<32>
	Mem0[v51:word32] = v53
	v51 = 0<32>
	loc1 = v51
	// succ:  l000FF65C
l000FF65C:
	v51 = loc1
	v53 = 3<32>
	v54 = v51 == v53
	loc46 = v54
	v51 = loc46
	branch !v51 l000FF66C
	// succ:  l000FF669 l000FF66C
l000FF669:
	goto l000FF68A
	// succ:  l000FF68A
l000FF66C:
	v51 = loc45
	v53 = loc1
	v57 = 2<32>
	v53 = v53 << v57
	v51 = v51 + v53
	loc3 = v51
	v51 = loc3
	v53 = 0<32>
	Mem0[v51:word32] = v53
	v51 = loc1
	v53 = 1<32>
	v51 = v51 + v53
	loc4 = v51
	v51 = loc4
	loc1 = v51
	goto l000FF643
	// succ:  l000FF643
l000FF68A:
	v51 = loc45
	v53 = 0xC<32>
	v51 = v51 + v53
	loc5 = v51
	v51 = loc5
	v53 = 0x4FD8<32>
	v54 = v51 == v53
	loc6 = v54
	v51 = loc6
	branch !v51 l000FF6A3
	// succ:  l000FF6A0 l000FF6A3
l000FF6A0:
	goto l000FF6AA
	// succ:  l000FF6AA
l000FF6A3:
	v51 = loc5
	loc45 = v51
	// succ:  l000FF6A7
l000FF6A7:
	goto l000FF63B
	// succ:  l000FF63B
l000FF6AA:
	v51 = 0x195<32>
	v53 = 0<32>
	v57 = Mem0[0x00140044<p32>:word32]
	v51 = ___cxa_atexit(v51, v53, v57)
	// succ:  l000FF6B7
l000FF6B7:
	// succ:  l000FF6B8
l000FF6B8:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F30<32>
	v57 = 0x3A39<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc7 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc7
	v53 = 1<32>
	v51 = v51 & v53
	loc8 = v51
	v51 = loc8
	v54 = v51 == 0<32>
	branch !v54 l000FF8E7
	// succ:  l000FF6DE l000FF8E7
l000FF6DE:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F3C<32>
	v57 = 0x3A40<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc9 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc9
	v53 = 1<32>
	v51 = v51 & v53
	loc10 = v51
	v51 = loc10
	v54 = v51 == 0<32>
	branch !v54 l000FF8E6
	// succ:  l000FF704 l000FF8E6
l000FF704:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F48<32>
	v57 = 0x3A47<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc11 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc11
	v53 = 1<32>
	v51 = v51 & v53
	loc12 = v51
	v51 = loc12
	v54 = v51 == 0<32>
	branch !v54 l000FF8E5
	// succ:  l000FF72A l000FF8E5
l000FF72A:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F54<32>
	v57 = 0x3A4F<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc14 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc14
	v53 = 1<32>
	v51 = v51 & v53
	loc15 = v51
	v51 = loc15
	v54 = v51 == 0<32>
	branch !v54 l000FF8E4
	// succ:  l000FF750 l000FF8E4
l000FF750:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F60<32>
	v57 = 0x3A59<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc16 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc16
	v53 = 1<32>
	v51 = v51 & v53
	loc17 = v51
	v51 = loc17
	v54 = v51 == 0<32>
	branch !v54 l000FF8E3
	// succ:  l000FF776 l000FF8E3
l000FF776:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F6C<32>
	v57 = 0x3A62<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc18 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc18
	v53 = 1<32>
	v51 = v51 & v53
	loc19 = v51
	v51 = loc19
	v54 = v51 == 0<32>
	branch !v54 l000FF8E2
	// succ:  l000FF79C l000FF8E2
l000FF79C:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F78<32>
	v57 = 0x3A69<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc20 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc20
	v53 = 1<32>
	v51 = v51 & v53
	loc21 = v51
	v51 = loc21
	v54 = v51 == 0<32>
	branch !v54 l000FF8E1
	// succ:  l000FF7C2 l000FF8E1
l000FF7C2:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F84<32>
	v57 = 0x3A72<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc22 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc22
	v53 = 1<32>
	v51 = v51 & v53
	loc23 = v51
	v51 = loc23
	v54 = v51 == 0<32>
	branch !v54 l000FF8E0
	// succ:  l000FF7E8 l000FF8E0
l000FF7E8:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F90<32>
	v57 = 0x3A76<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc25 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc25
	v53 = 1<32>
	v51 = v51 & v53
	loc26 = v51
	v51 = loc26
	v54 = v51 == 0<32>
	branch !v54 l000FF8DF
	// succ:  l000FF80E l000FF8DF
l000FF80E:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4F9C<32>
	v57 = 0x3A7A<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc27 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc27
	v53 = 1<32>
	v51 = v51 & v53
	loc28 = v51
	v51 = loc28
	v54 = v51 == 0<32>
	branch !v54 l000FF8DE
	// succ:  l000FF834 l000FF8DE
l000FF834:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4FA8<32>
	v57 = 0x3A7E<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc29 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc29
	v53 = 1<32>
	v51 = v51 & v53
	loc30 = v51
	v51 = loc30
	v54 = v51 == 0<32>
	branch !v54 l000FF8DD
	// succ:  l000FF85A l000FF8DD
l000FF85A:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4FB4<32>
	v57 = 0x3A82<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc31 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc31
	v53 = 1<32>
	v51 = v51 & v53
	loc32 = v51
	v51 = loc32
	v54 = v51 == 0<32>
	branch !v54 l000FF8DC
	// succ:  l000FF880 l000FF8DC
l000FF880:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4FC0<32>
	v57 = 0x3A86<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc33 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc33
	v53 = 1<32>
	v51 = v51 & v53
	loc34 = v51
	v51 = loc34
	v54 = v51 == 0<32>
	branch !v54 l000FF8DB
	// succ:  l000FF8A6 l000FF8DB
l000FF8A6:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = 0x196<32>
	v53 = 0x4FCC<32>
	v57 = 0x3A8A<32>
	v51 = invoke_iii(v51, v53, v57)
	v51 = Mem0[0x00140048<p32>:word32]
	loc36 = v51
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v51 = loc36
	v53 = 1<32>
	v51 = v51 & v53
	loc37 = v51
	v51 = loc37
	v54 = v51 == 0<32>
	branch !v54 l000FF8DA
	// succ:  l000FF8CC l000FF8DA
l000FF8CC:
	v51 = 0x4FD8<32>
	v53 = 0x4F30<32>
	Mem0[v51:word32] = v53
	goto l000FF8F5
	// succ:  l000FF8F5
l000FF8DA:
	// succ:  l000FF8DB
l000FF8DB:
	// succ:  l000FF8DC
l000FF8DC:
	// succ:  l000FF8DD
l000FF8DD:
	// succ:  l000FF8DE
l000FF8DE:
	// succ:  l000FF8DF
l000FF8DF:
	// succ:  l000FF8E0
l000FF8E0:
	// succ:  l000FF8E1
l000FF8E1:
	// succ:  l000FF8E2
l000FF8E2:
	// succ:  l000FF8E3
l000FF8E3:
	// succ:  l000FF8E4
l000FF8E4:
	// succ:  l000FF8E5
l000FF8E5:
	// succ:  l000FF8E6
l000FF8E6:
	// succ:  l000FF8E7
l000FF8E7:
	v51 = ___cxa_find_matching_catch_2()
	loc39 = v51
	v51 = Mem0[0x00140094<p32>:word32]
	loc40 = v51
	v51 = loc39
	___resumeException(v51)
	// succ:  l000FF8F4
l000FF8F4:
	// succ:  l000FF8F5
l000FF8F5:
	// succ:  l000FF8F5
l000FF8F5:
	v51 = 0x4FD8<32>
	v51 = Mem0[v51:word32]
	loc38 = v51
	v51 = loc38
	return v51
	// succ:  fn000FF5D5_exit
l000FF902:
	return v51
	// succ:  fn000FF5D5_exit
fn000FF5D5_exit:


// fn000FF904
// Return size: 0
word32 fn000FF904(word32 arg0)
fn000FF904_entry:
	// succ:  l000FF904
l000FF904:
	v71 = Mem0[0x00140030<p32>:word32]
	loc68 = v71
	v71 = 0x43C8<32>
	v72 = Mem0[v71:int8]
	v71 = CONVERT(v72, int8, word32)
	loc2 = v71
	v71 = loc2
	v73 = 0x18<32>
	v71 = v71 << v73
	v73 = 0x18<32>
	v71 = v71 >> v73
	v73 = 0<32>
	v74 = v71 == v73
	loc13 = v74
	// succ:  l000FF920
l000FF920:
	v71 = loc13
	branch !v71 l000FFDB6
	// succ:  l000FF926 l000FFDB6
l000FF926:
	v71 = 0x43C8<32>
	v71 = fn0011EE46(v71)
	loc24 = v71
	v71 = loc24
	v73 = 0<32>
	v74 = v71 == v73
	loc35 = v74
	v71 = loc35
	v74 = v71 == 0<32>
	branch !v74 l000FFDB5
	// succ:  l000FF93B l000FFDB5
l000FF93B:
	v71 = 0x43D0<32>
	v75 = Mem0[v71:int8]
	v71 = CONVERT(v75, int8, word32)
	loc46 = v71
	v71 = loc46
	v73 = 0x18<32>
	v71 = v71 << v73
	v73 = 0x18<32>
	v71 = v71 >> v73
	v73 = 0<32>
	v74 = v71 == v73
	loc57 = v74
	v71 = loc57
	branch !v71 l000FF9E7
	// succ:  l000FF955 l000FF9E7
l000FF955:
	v71 = 0x43D0<32>
	v71 = fn0011EE46(v71)
	loc63 = v71
	v71 = loc63
	v73 = 0<32>
	v74 = v71 == v73
	loc64 = v74
	v71 = loc64
	v74 = v71 == 0<32>
	branch !v74 l000FF9E6
	// succ:  l000FF96A l000FF9E6
l000FF96A:
	v71 = 0x4E0C<32>
	loc65 = v71
	// succ:  l000FF972
l000FF972:
	v71 = loc65
	v76 = 0<64>
	Mem0[v71:word64] = v76
	v71 = loc65
	v73 = 8<32>
	v71 = v71 + v73
	v73 = 0<32>
	Mem0[v71:word32] = v73
	v71 = 0<32>
	loc1 = v71
	// succ:  l000FF98B
l000FF98B:
	v71 = loc1
	v73 = 3<32>
	v74 = v71 == v73
	loc66 = v74
	v71 = loc66
	branch !v71 l000FF99B
	// succ:  l000FF998 l000FF99B
l000FF998:
	goto l000FF9B9
	// succ:  l000FF9B9
l000FF99B:
	v71 = loc65
	v73 = loc1
	v77 = 2<32>
	v73 = v73 << v77
	v71 = v71 + v73
	loc3 = v71
	v71 = loc3
	v73 = 0<32>
	Mem0[v71:word32] = v73
	v71 = loc1
	v73 = 1<32>
	v71 = v71 + v73
	loc4 = v71
	v71 = loc4
	loc1 = v71
	goto l000FF972
	// succ:  l000FF972
l000FF9B9:
	v71 = loc65
	v73 = 0xC<32>
	v71 = v71 + v73
	loc5 = v71
	v71 = loc5
	v73 = 0x4F2C<32>
	v74 = v71 == v73
	loc6 = v74
	v71 = loc6
	branch !v71 l000FF9D2
	// succ:  l000FF9CF l000FF9D2
l000FF9CF:
	goto l000FF9D9
	// succ:  l000FF9D9
l000FF9D2:
	v71 = loc5
	loc65 = v71
	// succ:  l000FF9D6
l000FF9D6:
	goto l000FF96A
	// succ:  l000FF96A
l000FF9D9:
	v71 = 0x197<32>
	v73 = 0<32>
	v77 = Mem0[0x00140044<p32>:word32]
	v71 = ___cxa_atexit(v71, v73, v77)
	// succ:  l000FF9E6
l000FF9E6:
	// succ:  l000FF9E7
l000FF9E7:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E0C<32>
	v77 = 0x39B7<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc7 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc7
	v73 = 1<32>
	v71 = v71 & v73
	loc8 = v71
	// succ:  l000FFA08
l000FFA08:
	v71 = loc8
	v74 = v71 == 0<32>
	branch !v74 l000FFDA7
	// succ:  l000FFA0F l000FFDA7
l000FFA0F:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E18<32>
	v77 = 0x39BF<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc9 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc9
	v73 = 1<32>
	v71 = v71 & v73
	loc10 = v71
	v71 = loc10
	v74 = v71 == 0<32>
	branch !v74 l000FFDA6
	// succ:  l000FFA35 l000FFDA6
l000FFA35:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E24<32>
	v77 = 0x39C8<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc11 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc11
	v73 = 1<32>
	v71 = v71 & v73
	loc12 = v71
	v71 = loc12
	v74 = v71 == 0<32>
	branch !v74 l000FFDA5
	// succ:  l000FFA5B l000FFDA5
l000FFA5B:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E30<32>
	v77 = 0x39CE<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc14 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc14
	v73 = 1<32>
	v71 = v71 & v73
	loc15 = v71
	v71 = loc15
	v74 = v71 == 0<32>
	branch !v74 l000FFDA4
	// succ:  l000FFA81 l000FFDA4
l000FFA81:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E3C<32>
	v77 = 0x39D4<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc16 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc16
	v73 = 1<32>
	v71 = v71 & v73
	loc17 = v71
	v71 = loc17
	v74 = v71 == 0<32>
	branch !v74 l000FFDA3
	// succ:  l000FFAA7 l000FFDA3
l000FFAA7:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E48<32>
	v77 = 0x39D8<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc18 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc18
	v73 = 1<32>
	v71 = v71 & v73
	loc19 = v71
	v71 = loc19
	v74 = v71 == 0<32>
	branch !v74 l000FFDA2
	// succ:  l000FFACD l000FFDA2
l000FFACD:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E54<32>
	v77 = 0x39DD<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc20 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc20
	v73 = 1<32>
	v71 = v71 & v73
	loc21 = v71
	v71 = loc21
	v74 = v71 == 0<32>
	branch !v74 l000FFDA1
	// succ:  l000FFAF3 l000FFDA1
l000FFAF3:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E60<32>
	v77 = 0x39E2<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc22 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc22
	v73 = 1<32>
	v71 = v71 & v73
	loc23 = v71
	v71 = loc23
	v74 = v71 == 0<32>
	branch !v74 l000FFDA0
	// succ:  l000FFB19 l000FFDA0
l000FFB19:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E6C<32>
	v77 = 0x39E9<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc25 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc25
	v73 = 1<32>
	v71 = v71 & v73
	loc26 = v71
	v71 = loc26
	v74 = v71 == 0<32>
	branch !v74 l000FFD9F
	// succ:  l000FFB3F l000FFD9F
l000FFB3F:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E78<32>
	v77 = 0x39F3<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc27 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc27
	v73 = 1<32>
	v71 = v71 & v73
	loc28 = v71
	v71 = loc28
	v74 = v71 == 0<32>
	branch !v74 l000FFD9E
	// succ:  l000FFB65 l000FFD9E
l000FFB65:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E84<32>
	v77 = 0x39FB<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc29 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc29
	v73 = 1<32>
	v71 = v71 & v73
	loc30 = v71
	v71 = loc30
	v74 = v71 == 0<32>
	branch !v74 l000FFD9D
	// succ:  l000FFB8B l000FFD9D
l000FFB8B:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E90<32>
	v77 = 0x3A04<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc31 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc31
	v73 = 1<32>
	v71 = v71 & v73
	loc32 = v71
	v71 = loc32
	v74 = v71 == 0<32>
	branch !v74 l000FFD9C
	// succ:  l000FFBB1 l000FFD9C
l000FFBB1:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4E9C<32>
	v77 = 0x3A0D<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc33 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc33
	v73 = 1<32>
	v71 = v71 & v73
	loc34 = v71
	v71 = loc34
	v74 = v71 == 0<32>
	branch !v74 l000FFD9B
	// succ:  l000FFBD7 l000FFD9B
l000FFBD7:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4EA8<32>
	v77 = 0x3A11<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc36 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc36
	v73 = 1<32>
	v71 = v71 & v73
	loc37 = v71
	v71 = loc37
	v74 = v71 == 0<32>
	branch !v74 l000FFD9A
	// succ:  l000FFBFD l000FFD9A
l000FFBFD:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4EB4<32>
	v77 = 0x3A15<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc38 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc38
	v73 = 1<32>
	v71 = v71 & v73
	loc39 = v71
	v71 = loc39
	v74 = v71 == 0<32>
	branch !v74 l000FFD99
	// succ:  l000FFC23 l000FFD99
l000FFC23:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4EC0<32>
	v77 = 0x3A19<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc40 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc40
	v73 = 1<32>
	v71 = v71 & v73
	loc41 = v71
	v71 = loc41
	branch !v71 l000FFC4B
	// succ:  l000FFC48 l000FFC4B
l000FFC48:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFC4B:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4ECC<32>
	v77 = 0x39D4<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc42 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc42
	v73 = 1<32>
	v71 = v71 & v73
	loc43 = v71
	v71 = loc43
	branch !v71 l000FFC73
	// succ:  l000FFC70 l000FFC73
l000FFC70:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFC73:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4ED8<32>
	v77 = 0x3A1D<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc44 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc44
	v73 = 1<32>
	v71 = v71 & v73
	loc45 = v71
	v71 = loc45
	branch !v71 l000FFC9B
	// succ:  l000FFC98 l000FFC9B
l000FFC98:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFC9B:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4EE4<32>
	v77 = 0x3A21<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc47 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc47
	v73 = 1<32>
	v71 = v71 & v73
	loc48 = v71
	v71 = loc48
	branch !v71 l000FFCC3
	// succ:  l000FFCC0 l000FFCC3
l000FFCC0:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFCC3:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4EF0<32>
	v77 = 0x3A25<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc49 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc49
	v73 = 1<32>
	v71 = v71 & v73
	loc50 = v71
	v71 = loc50
	branch !v71 l000FFCEB
	// succ:  l000FFCE8 l000FFCEB
l000FFCE8:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFCEB:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4EFC<32>
	v77 = 0x3A29<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc51 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc51
	v73 = 1<32>
	v71 = v71 & v73
	loc52 = v71
	v71 = loc52
	branch !v71 l000FFD13
	// succ:  l000FFD10 l000FFD13
l000FFD10:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFD13:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4F08<32>
	v77 = 0x3A2D<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc53 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc53
	v73 = 1<32>
	v71 = v71 & v73
	loc54 = v71
	v71 = loc54
	branch !v71 l000FFD3B
	// succ:  l000FFD38 l000FFD3B
l000FFD38:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFD3B:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4F14<32>
	v77 = 0x3A31<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc55 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc55
	v73 = 1<32>
	v71 = v71 & v73
	loc56 = v71
	v71 = loc56
	branch !v71 l000FFD63
	// succ:  l000FFD60 l000FFD63
l000FFD60:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFD63:
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = 0x196<32>
	v73 = 0x4F20<32>
	v77 = 0x3A35<32>
	v71 = invoke_iii(v71, v73, v77)
	v71 = Mem0[0x00140048<p32>:word32]
	loc58 = v71
	v71 = 0<32>
	Mem0[0x00140048<p32>:word32] = v71
	v71 = loc58
	v73 = 1<32>
	v71 = v71 & v73
	loc59 = v71
	v71 = loc59
	branch !v71 l000FFD8B
	// succ:  l000FFD88 l000FFD8B
l000FFD88:
	goto l000FFDA7
	// succ:  l000FFDA7
l000FFD8B:
	v71 = 0x4F2C<32>
	v73 = 0x4E0C<32>
	Mem0[v71:word32] = v73
	goto l000FFDB6
	// succ:  l000FFDB6
l000FFD99:
	// succ:  l000FFD9A
l000FFD9A:
	// succ:  l000FFD9B
l000FFD9B:
	// succ:  l000FFD9C
l000FFD9C:
	// succ:  l000FFD9D
l000FFD9D:
	// succ:  l000FFD9E
l000FFD9E:
	// succ:  l000FFD9F
l000FFD9F:
	// succ:  l000FFDA0
l000FFDA0:
	// succ:  l000FFDA1
l000FFDA1:
	// succ:  l000FFDA2
l000FFDA2:
	// succ:  l000FFDA3
l000FFDA3:
	// succ:  l000FFDA4
l000FFDA4:
	// succ:  l000FFDA5
l000FFDA5:
	// succ:  l000FFDA6
l000FFDA6:
	// succ:  l000FFDA7
l000FFDA7:
	// succ:  l000FFDA7
l000FFDA7:
	v71 = ___cxa_find_matching_catch_2()
	loc61 = v71
	v71 = Mem0[0x00140094<p32>:word32]
	loc62 = v71
	v71 = loc61
	___resumeException(v71)
	// succ:  l000FFDB5
l000FFDB5:
	// succ:  l000FFDB6
l000FFDB6:
	// succ:  l000FFDB6
l000FFDB6:
	v71 = 0x4F2C<32>
	v71 = Mem0[v71:word32]
	loc60 = v71
	v71 = loc60
	return v71
	// succ:  fn000FF904_exit
l000FFDC3:
	return v71
	// succ:  fn000FF904_exit
fn000FF904_exit:


// fn000FFDC5
// Return size: 0
word32 fn000FFDC5(word32 arg0)
fn000FFDC5_entry:
	// succ:  l000FFDC5
l000FFDC5:
	v27 = Mem0[0x00140030<p32>:word32]
	loc24 = v27
	v27 = 0x43B8<32>
	v28 = Mem0[v27:int8]
	v27 = CONVERT(v28, int8, word32)
	loc2 = v27
	v27 = loc2
	v29 = 0x18<32>
	v27 = v27 << v29
	v29 = 0x18<32>
	v27 = v27 >> v29
	v29 = 0<32>
	v30 = v27 == v29
	loc13 = v30
	// succ:  l000FFDE1
l000FFDE1:
	v27 = loc13
	branch !v27 l000FFF11
	// succ:  l000FFDE7 l000FFF11
l000FFDE7:
	v27 = 0x43B8<32>
	v27 = fn0011EE46(v27)
	loc15 = v27
	v27 = loc15
	v29 = 0<32>
	v30 = v27 == v29
	loc16 = v30
	v27 = loc16
	v30 = v27 == 0<32>
	branch !v30 l000FFF10
	// succ:  l000FFDFC l000FFF10
l000FFDFC:
	v27 = 0x43C0<32>
	v31 = Mem0[v27:int8]
	v27 = CONVERT(v31, int8, word32)
	loc17 = v27
	v27 = loc17
	v29 = 0x18<32>
	v27 = v27 << v29
	v29 = 0x18<32>
	v27 = v27 >> v29
	v29 = 0<32>
	v30 = v27 == v29
	loc18 = v30
	v27 = loc18
	branch !v27 l000FFEA8
	// succ:  l000FFE16 l000FFEA8
l000FFE16:
	v27 = 0x43C0<32>
	v27 = fn0011EE46(v27)
	loc19 = v27
	v27 = loc19
	v29 = 0<32>
	v30 = v27 == v29
	loc20 = v30
	v27 = loc20
	v30 = v27 == 0<32>
	branch !v30 l000FFEA7
	// succ:  l000FFE2B l000FFEA7
l000FFE2B:
	v27 = 0x4CE8<32>
	loc21 = v27
	// succ:  l000FFE33
l000FFE33:
	v27 = loc21
	v32 = 0<64>
	Mem0[v27:word64] = v32
	v27 = loc21
	v29 = 8<32>
	v27 = v27 + v29
	v29 = 0<32>
	Mem0[v27:word32] = v29
	v27 = 0<32>
	loc1 = v27
	// succ:  l000FFE4C
l000FFE4C:
	v27 = loc1
	v29 = 3<32>
	v30 = v27 == v29
	loc22 = v30
	v27 = loc22
	branch !v27 l000FFE5C
	// succ:  l000FFE59 l000FFE5C
l000FFE59:
	goto l000FFE7A
	// succ:  l000FFE7A
l000FFE5C:
	v27 = loc21
	v29 = loc1
	v33 = 2<32>
	v29 = v29 << v33
	v27 = v27 + v29
	loc3 = v27
	v27 = loc3
	v29 = 0<32>
	Mem0[v27:word32] = v29
	v27 = loc1
	v29 = 1<32>
	v27 = v27 + v29
	loc4 = v27
	v27 = loc4
	loc1 = v27
	goto l000FFE33
	// succ:  l000FFE33
l000FFE7A:
	v27 = loc21
	v29 = 0xC<32>
	v27 = v27 + v29
	loc5 = v27
	v27 = loc5
	v29 = 0x4E08<32>
	v30 = v27 == v29
	loc6 = v30
	v27 = loc6
	branch !v27 l000FFE93
	// succ:  l000FFE90 l000FFE93
l000FFE90:
	goto l000FFE9A
	// succ:  l000FFE9A
l000FFE93:
	v27 = loc5
	loc21 = v27
	// succ:  l000FFE97
l000FFE97:
	goto l000FFE2B
	// succ:  l000FFE2B
l000FFE9A:
	v27 = 0x198<32>
	v29 = 0<32>
	v33 = Mem0[0x00140044<p32>:word32]
	v27 = ___cxa_atexit(v27, v29, v33)
	// succ:  l000FFEA7
l000FFEA7:
	// succ:  l000FFEA8
l000FFEA8:
	v27 = 0<32>
	Mem0[0x00140048<p32>:word32] = v27
	v27 = 0x196<32>
	v29 = 0x4CE8<32>
	v33 = 0x39B1<32>
	v27 = invoke_iii(v27, v29, v33)
	v27 = Mem0[0x00140048<p32>:word32]
	loc7 = v27
	v27 = 0<32>
	Mem0[0x00140048<p32>:word32] = v27
	v27 = loc7
	v29 = 1<32>
	v27 = v27 & v29
	loc8 = v27
	v27 = loc8
	v30 = v27 == 0<32>
	branch !v30 l000FFF03
	// succ:  l000FFECE l000FFF03
l000FFECE:
	v27 = 0<32>
	Mem0[0x00140048<p32>:word32] = v27
	v27 = 0x196<32>
	v29 = 0x4CF4<32>
	v33 = 0x39B4<32>
	v27 = invoke_iii(v27, v29, v33)
	v27 = Mem0[0x00140048<p32>:word32]
	loc9 = v27
	v27 = 0<32>
	Mem0[0x00140048<p32>:word32] = v27
	v27 = loc9
	v29 = 1<32>
	v27 = v27 & v29
	loc10 = v27
	v27 = loc10
	v30 = v27 == 0<32>
	branch !v30 l000FFF02
	// succ:  l000FFEF4 l000FFF02
l000FFEF4:
	v27 = 0x4E08<32>
	v29 = 0x4CE8<32>
	Mem0[v27:word32] = v29
	goto l000FFF11
	// succ:  l000FFF11
l000FFF02:
	// succ:  l000FFF03
l000FFF03:
	v27 = ___cxa_find_matching_catch_2()
	loc12 = v27
	v27 = Mem0[0x00140094<p32>:word32]
	loc14 = v27
	v27 = loc12
	___resumeException(v27)
	// succ:  l000FFF10
l000FFF10:
	// succ:  l000FFF11
l000FFF11:
	// succ:  l000FFF11
l000FFF11:
	v27 = 0x4E08<32>
	v27 = Mem0[v27:word32]
	loc11 = v27
	v27 = loc11
	return v27
	// succ:  fn000FFDC5_exit
l000FFF1E:
	return v27
	// succ:  fn000FFDC5_exit
fn000FFDC5_exit:


// fn000FFF20
// Return size: 0
word32 fn000FFF20(word32 arg0)
fn000FFF20_entry:
	// succ:  l000FFF20
l000FFF20:
	v13 = Mem0[0x00140030<p32>:word32]
	loc10 = v13
	v13 = 0x43B0<32>
	v14 = Mem0[v13:int8]
	v13 = CONVERT(v14, int8, word32)
	loc1 = v13
	v13 = loc1
	v15 = 0x18<32>
	v13 = v13 << v15
	v15 = 0x18<32>
	v13 = v13 >> v15
	v15 = 0<32>
	v16 = v13 == v15
	loc2 = v16
	// succ:  l000FFF3C
l000FFF3C:
	v13 = loc2
	branch !v13 l000FFFB0
	// succ:  l000FFF42 l000FFFB0
l000FFF42:
	v13 = 0x43B0<32>
	v13 = fn0011EE46(v13)
	loc3 = v13
	v13 = loc3
	v15 = 0<32>
	v16 = v13 == v15
	loc4 = v16
	v13 = loc4
	v16 = v13 == 0<32>
	branch !v16 l000FFFAF
	// succ:  l000FFF57 l000FFFAF
l000FFF57:
	v13 = 0x4CDC<32>
	v17 = 0<64>
	Mem0[v13:word64] = v17
	v13 = 0x4CDC<32>
	v15 = 8<32>
	v13 = v13 + v15
	v15 = 0<32>
	Mem0[v13:word32] = v15
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = 0x199<32>
	v15 = 0x4CDC<32>
	v18 = 0x399C<32>
	v19 = 0x14<32>
	invoke_viii(v13, v15, v18, v19)
	v13 = Mem0[0x00140048<p32>:word32]
	loc5 = v13
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = loc5
	v15 = 1<32>
	v13 = v13 & v15
	loc6 = v13
	v13 = loc6
	branch !v13 l000FFF9F
	// succ:  l000FFF92 l000FFF9F
l000FFF92:
	v13 = ___cxa_find_matching_catch_2()
	loc7 = v13
	v13 = Mem0[0x00140094<p32>:word32]
	loc8 = v13
	v13 = loc7
	___resumeException(v13)
	goto l000FFFAD
	// succ:  l000FFFAD
l000FFF9F:
	v13 = 0x16D<32>
	v15 = 0x4CDC<32>
	v18 = Mem0[0x00140044<p32>:word32]
	v13 = ___cxa_atexit(v13, v15, v18)
	goto l000FFFB0
	// succ:  l000FFFB0
l000FFFAD:
	// succ:  l000FFFAF
l000FFFAF:
	// succ:  l000FFFB0
l000FFFB0:
	// succ:  l000FFFB0
l000FFFB0:
	v13 = 0x4CDC<32>
	return v13
	// succ:  fn000FFF20_exit
l000FFFB6:
	return v13
	// succ:  fn000FFF20_exit
fn000FFF20_exit:


// fn000FFFB8
// Return size: 0
word32 fn000FFFB8(word32 arg0)
fn000FFFB8_entry:
	// succ:  l000FFFB8
l000FFFB8:
	v13 = Mem0[0x00140030<p32>:word32]
	loc10 = v13
	v13 = 0x43A8<32>
	v14 = Mem0[v13:int8]
	v13 = CONVERT(v14, int8, word32)
	loc1 = v13
	v13 = loc1
	v15 = 0x18<32>
	v13 = v13 << v15
	v15 = 0x18<32>
	v13 = v13 >> v15
	v15 = 0<32>
	v16 = v13 == v15
	loc2 = v16
	// succ:  l000FFFD4
l000FFFD4:
	v13 = loc2
	branch !v13 l00100048
	// succ:  l000FFFDA l00100048
l000FFFDA:
	v13 = 0x43A8<32>
	v13 = fn0011EE46(v13)
	loc3 = v13
	v13 = loc3
	v15 = 0<32>
	v16 = v13 == v15
	loc4 = v16
	v13 = loc4
	v16 = v13 == 0<32>
	branch !v16 l00100047
	// succ:  l000FFFEF l00100047
l000FFFEF:
	v13 = 0x4CD0<32>
	v17 = 0<64>
	Mem0[v13:word64] = v17
	v13 = 0x4CD0<32>
	v15 = 8<32>
	v13 = v13 + v15
	v15 = 0<32>
	Mem0[v13:word32] = v15
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = 0x199<32>
	v15 = 0x4CD0<32>
	v18 = 0x3990<32>
	v19 = 0xB<32>
	invoke_viii(v13, v15, v18, v19)
	v13 = Mem0[0x00140048<p32>:word32]
	loc5 = v13
	v13 = 0<32>
	Mem0[0x00140048<p32>:word32] = v13
	v13 = loc5
	v15 = 1<32>
	v13 = v13 & v15
	loc6 = v13
	v13 = loc6
	branch !v13 l00100037
	// succ:  l0010002A l00100037
l0010002A:
	v13 = ___cxa_find_matching_catch_2()
	loc7 = v13
	v13 = Mem0[0x00140094<p32>:word32]
	loc8 = v13
	v13 = loc7
	___resumeException(v13)
	goto l00100045
	// succ:  l00100045
l00100037:
	v13 = 0x16D<32>
	v15 = 0x4CD0<32>
	v18 = Mem0[0x00140044<p32>:word32]
	v13 = ___cxa_atexit(v13, v15, v18)
	goto l00100048
	// succ:  l00100048
l00100045:
	// succ:  l00100047
l00100047:
	// succ:  l00100048
l00100048:
	// succ:  l00100048
l00100048:
	v13 = 0x4CD0<32>
	return v13
	// succ:  fn000FFFB8_exit
l0010004E:
	return v13
	// succ:  fn000FFFB8_exit
fn000FFFB8_exit:


