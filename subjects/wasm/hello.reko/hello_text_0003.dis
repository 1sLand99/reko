// fn00100050
// Return size: 0
word32 fn00100050(word32 arg0)
fn00100050_entry:
	// succ:  l00100050
l00100050:
	v12 = Mem0[0x00140030<p32>:word32]
	loc10 = v12
	v13 = 0x43A0<32>
	v14 = Mem0[v13:int8]
	v15 = CONVERT(v14, int8, word32)
	loc1 = v15
	v16 = loc1
	v17 = 0x18<32>
	v18 = v16 << v17
	v19 = 0x18<32>
	v20 = v18 >> v19
	v21 = 0<32>
	v22 = v20 == v21
	loc2 = v22
	// succ:  l0010006C
l0010006C:
	v23 = loc2
	v23 = v23
	// succ:  l00100072 l00100072
l00100072:
	v24 = 0x43A0<32>
	v25 = fn0011EE46(v24)
	loc3 = v25
	v26 = loc3
	v27 = 0<32>
	v28 = v26 == v27
	loc4 = v28
	v29 = loc4
	v30 = v29 == 0<32>
	v30 = v30
	// succ:  l00100087 l00100087
l00100087:
	v31 = 0x4CC4<32>
	v32 = 0<64>
	Mem0[v31:word64] = v32
	v33 = 0x4CC4<32>
	v34 = 8<32>
	v35 = v33 + v34
	v36 = 0<32>
	Mem0[v35:word32] = v36
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v38 = 0x199<32>
	v39 = 0x4CC4<32>
	v40 = 0x3987<32>
	v41 = 8<32>
	invoke_viii(v38, v39, v40, v41)
	v42 = Mem0[0x00140048<p32>:word32]
	loc5 = v42
	v43 = 0<32>
	Mem0[0x00140048<p32>:word32] = v43
	v44 = loc5
	v45 = 1<32>
	v46 = v44 & v45
	loc6 = v46
	v47 = loc6
	branch !v47 l001000CF
	// succ:  l001000C2 l001000CF
l001000C2:
	v48 = ___cxa_find_matching_catch_2()
	loc7 = v48
	v49 = Mem0[0x00140094<p32>:word32]
	loc8 = v49
	v50 = loc7
	___resumeException(v50)
l001000CF:
	v51 = 0x16D<32>
	v52 = 0x4CC4<32>
	v53 = Mem0[0x00140044<p32>:word32]
	v54 = ___cxa_atexit(v51, v52, v53)
fn00100050_exit:


// fn001000E8
// Return size: 0
word32 fn001000E8(word32 arg0)
fn001000E8_entry:
	// succ:  l001000E8
l001000E8:
	v12 = Mem0[0x00140030<p32>:word32]
	loc10 = v12
	v13 = 0x4398<32>
	v14 = Mem0[v13:int8]
	v15 = CONVERT(v14, int8, word32)
	loc1 = v15
	v16 = loc1
	v17 = 0x18<32>
	v18 = v16 << v17
	v19 = 0x18<32>
	v20 = v18 >> v19
	v21 = 0<32>
	v22 = v20 == v21
	loc2 = v22
	// succ:  l00100104
l00100104:
	v23 = loc2
	v23 = v23
	// succ:  l0010010A l0010010A
l0010010A:
	v24 = 0x4398<32>
	v25 = fn0011EE46(v24)
	loc3 = v25
	v26 = loc3
	v27 = 0<32>
	v28 = v26 == v27
	loc4 = v28
	v29 = loc4
	v30 = v29 == 0<32>
	v30 = v30
	// succ:  l0010011F l0010011F
l0010011F:
	v31 = 0x4CB8<32>
	v32 = 0<64>
	Mem0[v31:word64] = v32
	v33 = 0x4CB8<32>
	v34 = 8<32>
	v35 = v33 + v34
	v36 = 0<32>
	Mem0[v35:word32] = v36
	v37 = 0<32>
	Mem0[0x00140048<p32>:word32] = v37
	v38 = 0x199<32>
	v39 = 0x4CB8<32>
	v40 = 0x397E<32>
	v41 = 8<32>
	invoke_viii(v38, v39, v40, v41)
	v42 = Mem0[0x00140048<p32>:word32]
	loc5 = v42
	v43 = 0<32>
	Mem0[0x00140048<p32>:word32] = v43
	v44 = loc5
	v45 = 1<32>
	v46 = v44 & v45
	loc6 = v46
	v47 = loc6
	branch !v47 l00100167
	// succ:  l0010015A l00100167
l0010015A:
	v48 = ___cxa_find_matching_catch_2()
	loc7 = v48
	v49 = Mem0[0x00140094<p32>:word32]
	loc8 = v49
	v50 = loc7
	___resumeException(v50)
l00100167:
	v51 = 0x16D<32>
	v52 = 0x4CB8<32>
	v53 = Mem0[0x00140044<p32>:word32]
	v54 = ___cxa_atexit(v51, v52, v53)
fn001000E8_exit:


// fn00100228
// Return size: 0
void fn00100228(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00100228_entry:
	// succ:  l00100228
l00100228:
	v19 = Mem0[0x00140030<p32>:word32]
	loc22 = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = 0x10<32>
	v22 = v20 + v21
	Mem0[0x00140030<p32>:word32] = v22
	v23 = Mem0[0x00140030<p32>:word32]
	v24 = Mem0[0x00140034<p32>:word32]
	v25 = v23 >= v24
	branch !v25 l00100241
	// succ:  l0010023C l00100241
l0010023C:
	v26 = 0x10<32>
	abortStackOverflow(v26)
	// succ:  l00100241
l00100241:
	v27 = loc22
	v28 = 4<32>
	v29 = v27 + v28
	loc6 = v29
	v30 = loc22
	loc17 = v30
	v31 = arg0
	v32 = 8<32>
	v33 = v31 + v32
	loc18 = v33
	v34 = loc18
	v35 = Mem0[v34:word32]
	loc19 = v35
	v36 = loc19
	v37 = Mem0[v36:word32]
	loc20 = v37
	v38 = loc18
	v39 = loc20
	v40 = 0x1FF<32>
	v41 = v39 & v40
	v42 = 0xB00<32>
	v43 = v41 + v42
fn00100228_exit:


// fn001002E5
// Return size: 0
void fn001002E5(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001002E5_entry:
	// succ:  l001002E5
l001002E5:
	v20 = Mem0[0x00140030<p32>:word32]
	loc23 = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = 0x10<32>
	v23 = v21 + v22
	Mem0[0x00140030<p32>:word32] = v23
	v24 = Mem0[0x00140030<p32>:word32]
	v25 = Mem0[0x00140034<p32>:word32]
	v26 = v24 >= v25
	branch !v26 l001002FE
	// succ:  l001002F9 l001002FE
l001002F9:
	v27 = 0x10<32>
	abortStackOverflow(v27)
	// succ:  l001002FE
l001002FE:
	v28 = loc23
	v29 = 4<32>
	v30 = v28 + v29
	loc6 = v30
	v31 = loc23
	loc18 = v31
	v32 = arg0
	v33 = 8<32>
	v34 = v32 + v33
	loc19 = v34
	v35 = loc19
	v36 = Mem0[v35:word32]
	loc20 = v36
	v37 = loc20
	v38 = 4<32>
	v39 = v37 + v38
	loc21 = v39
	v40 = loc21
	v41 = Mem0[v40:word32]
	loc7 = v41
	v42 = loc19
	v43 = loc7
	v44 = 0x1FF<32>
	v45 = v43 & v44
	v46 = 0xB00<32>
	v47 = v45 + v46
fn001002E5_exit:


// fn001003A9
// Return size: 0
word32 fn001003A9(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn001003A9_entry:
	// succ:  l001003A9
l001003A9:
	v222 = Mem0[0x00140030<p32>:word32]
	loc227 = v222
	v223 = Mem0[0x00140030<p32>:word32]
	v224 = 0x20<32>
	v225 = v223 + v224
	Mem0[0x00140030<p32>:word32] = v225
	v226 = Mem0[0x00140030<p32>:word32]
	v227 = Mem0[0x00140034<p32>:word32]
	v228 = v226 >= v227
	branch !v228 l001003C3
	// succ:  l001003BE l001003C3
l001003BE:
	v229 = 0x20<32>
	abortStackOverflow(v229)
	// succ:  l001003C3
l001003C3:
	v230 = loc227
	v231 = 0x10<32>
	v232 = v230 + v231
	loc18 = v232
	v233 = loc227
	v234 = 0xC<32>
	v235 = v233 + v234
	loc17 = v235
	v236 = loc227
	v237 = 8<32>
	v238 = v236 + v237
	loc198 = v238
	v239 = loc227
	v240 = 4<32>
	v241 = v239 + v240
	loc209 = v241
	v242 = loc227
	loc27 = v242
	v243 = arg3
	v244 = fn000E64CA(v243)
	loc38 = v244
	v245 = loc198
	v246 = loc38
	Mem0[v245:word32] = v246
	v247 = 0<32>
	Mem0[0x00140048<p32>:word32] = v247
	v248 = 0x164<32>
	v249 = loc198
	v250 = 0x4C70<32>
	v251 = invoke_iii(v248, v249, v250)
	loc49 = v251
	v252 = Mem0[0x00140048<p32>:word32]
	loc60 = v252
	v253 = 0<32>
	Mem0[0x00140048<p32>:word32] = v253
	v254 = loc60
	v255 = 1<32>
	v256 = v254 & v255
	loc71 = v256
	v257 = loc71
	v257 = v257
	// succ:  l0010041E l0010041E
l0010041E:
	v258 = ___cxa_find_matching_catch_2()
	loc165 = v258
	v259 = Mem0[0x00140094<p32>:word32]
	loc166 = v259
	v260 = loc38
	v261 = fn0011B43F(v260)
fn001003A9_exit:


// fn00100F28
// Return size: 0
void fn00100F28(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00100F28_entry:
	// succ:  l00100F28
l00100F28:
	v15 = Mem0[0x00140030<p32>:word32]
	loc18 = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = 0x10<32>
	v18 = v16 + v17
	Mem0[0x00140030<p32>:word32] = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = Mem0[0x00140034<p32>:word32]
	v21 = v19 >= v20
	branch !v21 l00100F41
	// succ:  l00100F3C l00100F41
l00100F3C:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l00100F41
l00100F41:
	v23 = loc18
	v24 = 4<32>
	v25 = v23 + v24
	loc6 = v25
	v26 = loc18
	loc13 = v26
	v27 = arg3
	v28 = Mem0[v27:word32]
	loc14 = v28
	v29 = loc13
	v30 = loc14
	Mem0[v29:word32] = v30
	v31 = loc6
	v32 = loc13
	v33 = Mem0[v32:word32]
	Mem0[v31:word32] = v33
	v34 = arg2
	v35 = loc6
	v36 = arg4
	v37 = arg5
	v38 = 2<32>
	v39 = fn00101E90(v34, v35, v36, v37, v38)
	loc15 = v39
	v40 = arg4
	v41 = Mem0[v40:word32]
	loc16 = v41
	v42 = loc16
	v43 = 4<32>
	v44 = v42 & v43
	loc8 = v44
	v45 = loc8
	v46 = 0<32>
	v47 = v45 == v46
	loc9 = v47
	v48 = loc15
	v49 = 0xFFFFFFFF<32>
	v50 = v48 + v49
	loc7 = v50
	v51 = loc7
	v52 = 0x1F<32>
	v53 = v51 <u v52
	loc10 = v53
	v54 = loc10
	v55 = loc9
	v56 = v54 & v55
	loc11 = v56
	v57 = loc11
	branch !v57 l00100FA9
	// succ:  l00100FA1 l00100FA9
l00100FA1:
	v58 = arg1
	v59 = loc15
	Mem0[v58:word32] = v59
	goto l00100FB7
	// succ:  l00100FB7
l00100FA9:
	v60 = loc16
	v61 = 4<32>
	v62 = v60 | v61
	loc12 = v62
	v63 = arg4
	v64 = loc12
	Mem0[v63:word32] = v64
	// succ:  l00100FB7
l00100FB7:
	v65 = loc18
	Mem0[0x00140030<p32>:word32] = v65
fn00100F28_exit:


// fn00100FBF
// Return size: 0
void fn00100FBF(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00100FBF_entry:
	// succ:  l00100FBF
l00100FBF:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l00100FD8
	// succ:  l00100FD3 l00100FD8
l00100FD3:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l00100FD8
l00100FD8:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 2<32>
	v38 = fn00101E90(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 0x18<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l00101039
	// succ:  l00101031 l00101039
l00101031:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l00101047
	// succ:  l00101047
l00101039:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l00101047
l00101047:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn00100FBF_exit:


// fn0010104F
// Return size: 0
void fn0010104F(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0010104F_entry:
	// succ:  l0010104F
l0010104F:
	v15 = Mem0[0x00140030<p32>:word32]
	loc18 = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = 0x10<32>
	v18 = v16 + v17
	Mem0[0x00140030<p32>:word32] = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = Mem0[0x00140034<p32>:word32]
	v21 = v19 >= v20
	branch !v21 l00101068
	// succ:  l00101063 l00101068
l00101063:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l00101068
l00101068:
	v23 = loc18
	v24 = 4<32>
	v25 = v23 + v24
	loc6 = v25
	v26 = loc18
	loc13 = v26
	v27 = arg3
	v28 = Mem0[v27:word32]
	loc14 = v28
	v29 = loc13
	v30 = loc14
	Mem0[v29:word32] = v30
	v31 = loc6
	v32 = loc13
	v33 = Mem0[v32:word32]
	Mem0[v31:word32] = v33
	v34 = arg2
	v35 = loc6
	v36 = arg4
	v37 = arg5
	v38 = 2<32>
	v39 = fn00101E90(v34, v35, v36, v37, v38)
	loc15 = v39
	v40 = arg4
	v41 = Mem0[v40:word32]
	loc16 = v41
	v42 = loc16
	v43 = 4<32>
	v44 = v42 & v43
	loc8 = v44
	v45 = loc8
	v46 = 0<32>
	v47 = v45 == v46
	loc9 = v47
	v48 = loc15
	v49 = 0xFFFFFFFF<32>
	v50 = v48 + v49
	loc7 = v50
	v51 = loc7
	v52 = 0xC<32>
	v53 = v51 <u v52
	loc10 = v53
	v54 = loc10
	v55 = loc9
	v56 = v54 & v55
	loc11 = v56
	v57 = loc11
	branch !v57 l001010D0
	// succ:  l001010C8 l001010D0
l001010C8:
	v58 = arg1
	v59 = loc15
	Mem0[v58:word32] = v59
	goto l001010DE
	// succ:  l001010DE
l001010D0:
	v60 = loc16
	v61 = 4<32>
	v62 = v60 | v61
	loc12 = v62
	v63 = arg4
	v64 = loc12
	Mem0[v63:word32] = v64
	// succ:  l001010DE
l001010DE:
	v65 = loc18
	Mem0[0x00140030<p32>:word32] = v65
fn0010104F_exit:


// fn001010E6
// Return size: 0
void fn001010E6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001010E6_entry:
	// succ:  l001010E6
l001010E6:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l001010FF
	// succ:  l001010FA l001010FF
l001010FA:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l001010FF
l001010FF:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 3<32>
	v38 = fn00101E90(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 0x16E<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l00101161
	// succ:  l00101159 l00101161
l00101159:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l0010116F
	// succ:  l0010116F
l00101161:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l0010116F
l0010116F:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn001010E6_exit:


// fn00101177
// Return size: 0
void fn00101177(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00101177_entry:
	// succ:  l00101177
l00101177:
	v15 = Mem0[0x00140030<p32>:word32]
	loc18 = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = 0x10<32>
	v18 = v16 + v17
	Mem0[0x00140030<p32>:word32] = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = Mem0[0x00140034<p32>:word32]
	v21 = v19 >= v20
	branch !v21 l00101190
	// succ:  l0010118B l00101190
l0010118B:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l00101190
l00101190:
	v23 = loc18
	v24 = 4<32>
	v25 = v23 + v24
	loc6 = v25
	v26 = loc18
	loc12 = v26
	v27 = arg3
	v28 = Mem0[v27:word32]
	loc13 = v28
	v29 = loc12
	v30 = loc13
	Mem0[v29:word32] = v30
	v31 = loc6
	v32 = loc12
	v33 = Mem0[v32:word32]
	Mem0[v31:word32] = v33
	v34 = arg2
	v35 = loc6
	v36 = arg4
	v37 = arg5
	v38 = 2<32>
	v39 = fn00101E90(v34, v35, v36, v37, v38)
	loc14 = v39
	v40 = arg4
	v41 = Mem0[v40:word32]
	loc15 = v41
	v42 = loc15
	v43 = 4<32>
	v44 = v42 & v43
	loc7 = v44
	v45 = loc7
	v46 = 0<32>
	v47 = v45 == v46
	loc8 = v47
	v48 = loc14
	v49 = 0xD<32>
	v50 = v48 < v49
	loc9 = v50
	v51 = loc9
	v52 = loc8
	v53 = v51 & v52
	loc16 = v53
	v54 = loc16
	branch !v54 l001011F8
	// succ:  l001011E9 l001011F8
l001011E9:
	v55 = loc14
	v56 = 0xFFFFFFFF<32>
	v57 = v55 + v56
	loc10 = v57
	v58 = arg1
	v59 = loc10
	Mem0[v58:word32] = v59
	goto l00101206
	// succ:  l00101206
l001011F8:
	v60 = loc15
	v61 = 4<32>
	v62 = v60 | v61
	loc11 = v62
	v63 = arg4
	v64 = loc11
	Mem0[v63:word32] = v64
	// succ:  l00101206
l00101206:
	v65 = loc18
	Mem0[0x00140030<p32>:word32] = v65
fn00101177_exit:


// fn0010120E
// Return size: 0
void fn0010120E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0010120E_entry:
	// succ:  l0010120E
l0010120E:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l00101227
	// succ:  l00101222 l00101227
l00101222:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l00101227
l00101227:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 2<32>
	v38 = fn00101E90(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 0x3C<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l00101288
	// succ:  l00101280 l00101288
l00101280:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l00101296
	// succ:  l00101296
l00101288:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l00101296
l00101296:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn0010120E_exit:


// fn0010129E
// Return size: 0
void fn0010129E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn0010129E_entry:
	// succ:  l0010129E
l0010129E:
	v94 = Mem0[0x00140030<p32>:word32]
	loc96 = v94
	v95 = arg4
	v96 = 8<32>
	v97 = v95 + v96
	loc49 = v97
	// succ:  l001012AD
l001012AD:
	v98 = arg1
	v99 = Mem0[v98:word32]
	loc60 = v99
	v100 = loc60
	v101 = 0<32>
	v102 = v100 == v101
	loc71 = v102
	// succ:  l001012BD
l001012BD:
	v103 = loc71
	branch !v103 l001012C8
	// succ:  l001012C3 l001012C8
l001012C3:
	v104 = 0<32>
	loc18 = v104
l001012C8:
	v105 = loc60
	v106 = 0xC<32>
	v107 = v105 + v106
	loc82 = v107
	v108 = loc82
	v109 = Mem0[v108:word32]
	loc92 = v109
	v110 = loc60
	v111 = 0x10<32>
	v112 = v110 + v111
	loc9 = v112
	v113 = loc9
	v114 = Mem0[v113:word32]
	loc10 = v114
	v115 = loc92
	v116 = loc10
	v117 = v115 == v116
	loc11 = v117
	v118 = loc11
	v118 = v118
	// succ:  l001012EF l001012EF
l001012EF:
	v119 = loc60
	v120 = Mem0[v119:word32]
	loc12 = v120
	v121 = loc12
	v122 = 0x24<32>
	v123 = v121 + v122
	loc13 = v123
	v124 = loc13
	v125 = Mem0[v124:word32]
	loc14 = v125
	v126 = loc60
	v127 = loc14
	v128 = 0x1FF<32>
	v129 = v127 & v128
	v130 = 0xB00<32>
	v131 = v129 + v130
fn0010129E_exit:


// fn001016A1
// Return size: 0
void fn001016A1(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001016A1_entry:
	// succ:  l001016A1
l001016A1:
	v44 = Mem0[0x00140030<p32>:word32]
	loc47 = v44
	v45 = Mem0[0x00140030<p32>:word32]
	v46 = 0x10<32>
	v47 = v45 + v46
	Mem0[0x00140030<p32>:word32] = v47
	v48 = Mem0[0x00140030<p32>:word32]
	v49 = Mem0[0x00140034<p32>:word32]
	v50 = v48 >= v49
	branch !v50 l001016BA
	// succ:  l001016B5 l001016BA
l001016B5:
	v51 = 0x10<32>
	abortStackOverflow(v51)
	// succ:  l001016BA
l001016BA:
	v52 = loc47
	v53 = 4<32>
	v54 = v52 + v53
	loc6 = v54
	v55 = loc47
	loc40 = v55
	v56 = arg0
	v57 = 8<32>
	v58 = v56 + v57
	loc41 = v58
	v59 = loc41
	v60 = Mem0[v59:word32]
	loc42 = v60
	v61 = loc42
	v62 = 8<32>
	v63 = v61 + v62
	loc43 = v63
	v64 = loc43
	v65 = Mem0[v64:word32]
	loc7 = v65
	v66 = loc41
	v67 = loc7
	v68 = 0x1FF<32>
	v69 = v67 & v68
	v70 = 0xB00<32>
	v71 = v69 + v70
fn001016A1_exit:


// fn0010183D
// Return size: 0
void fn0010183D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0010183D_entry:
	// succ:  l0010183D
l0010183D:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l00101856
	// succ:  l00101851 l00101856
l00101851:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l00101856
l00101856:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 2<32>
	v38 = fn00101E90(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 0x3D<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l001018B7
	// succ:  l001018AF l001018B7
l001018AF:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l001018C5
	// succ:  l001018C5
l001018B7:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l001018C5
l001018C5:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn0010183D_exit:


// fn001018CD
// Return size: 0
void fn001018CD(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001018CD_entry:
	// succ:  l001018CD
l001018CD:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l001018E6
	// succ:  l001018E1 l001018E6
l001018E1:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l001018E6
l001018E6:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 1<32>
	v38 = fn00101E90(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 7<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l00101947
	// succ:  l0010193F l00101947
l0010193F:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l00101955
	// succ:  l00101955
l00101947:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l00101955
l00101955:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn001018CD_exit:


// fn0010195D
// Return size: 0
void fn0010195D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0010195D_entry:
	// succ:  l0010195D
l0010195D:
	v18 = Mem0[0x00140030<p32>:word32]
	loc21 = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = 0x10<32>
	v21 = v19 + v20
	Mem0[0x00140030<p32>:word32] = v21
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = Mem0[0x00140034<p32>:word32]
	v24 = v22 >= v23
	branch !v24 l00101976
	// succ:  l00101971 l00101976
l00101971:
	v25 = 0x10<32>
	abortStackOverflow(v25)
	// succ:  l00101976
l00101976:
	v26 = loc21
	v27 = 4<32>
	v28 = v26 + v27
	loc8 = v28
	v29 = loc21
	loc16 = v29
	v30 = arg3
	v31 = Mem0[v30:word32]
	loc17 = v31
	v32 = loc16
	v33 = loc17
	Mem0[v32:word32] = v33
	v34 = loc8
	v35 = loc16
	v36 = Mem0[v35:word32]
	Mem0[v34:word32] = v36
	v37 = arg2
	v38 = loc8
	v39 = arg4
	v40 = arg5
	v41 = 4<32>
	v42 = fn00101E90(v37, v38, v39, v40, v41)
	loc18 = v42
	v43 = arg4
	v44 = Mem0[v43:word32]
	loc19 = v44
	v45 = loc19
	v46 = 4<32>
	v47 = v45 & v46
	loc9 = v47
	v48 = loc9
	v49 = 0<32>
	v50 = v48 == v49
	loc10 = v50
	v51 = loc10
	branch !v51 l00101A0B
	// succ:  l001019C1 l00101A0B
l001019C1:
	v52 = loc18
	v53 = 0x45<32>
	v54 = v52 < v53
	loc11 = v54
	v55 = loc11
	branch !v55 l001019DA
	// succ:  l001019CD l001019DA
l001019CD:
	v56 = loc18
	v57 = 0x7D0<32>
	v58 = v56 + v57
	loc12 = v58
	v59 = loc12
	loc7 = v59
	goto l001019FA
	// succ:  l001019FA
l001019DA:
	v60 = loc18
	v61 = 0x64<32>
	v62 = v60 < v61
	loc13 = v62
	v63 = loc18
	v64 = 0x76C<32>
	v65 = v63 + v64
	loc14 = v65
	v66 = loc13
	branch !v66 l001019F1
	// succ:  l001019EE l001019F1
l001019EE:
	v67 = loc14
	goto l001019F3
	// succ:  l001019F3
l001019F1:
	v68 = loc18
	// succ:  l001019F3
l001019F3:
	loc6 = v68
	v69 = loc6
	loc7 = v69
	// succ:  l001019FA
l001019FA:
	v70 = loc7
	v71 = 0xFFFFF894<32>
	v72 = v70 + v71
	loc15 = v72
	v73 = arg1
	v74 = loc15
	Mem0[v73:word32] = v74
	// succ:  l00101A0B
l00101A0B:
	v75 = loc21
	Mem0[0x00140030<p32>:word32] = v75
fn0010195D_exit:


// fn00101A12
// Return size: 0
void fn00101A12(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00101A12_entry:
	// succ:  l00101A12
l00101A12:
	v12 = Mem0[0x00140030<p32>:word32]
	loc15 = v12
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = 0x10<32>
	v15 = v13 + v14
	Mem0[0x00140030<p32>:word32] = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = Mem0[0x00140034<p32>:word32]
	v18 = v16 >= v17
	branch !v18 l00101A2B
	// succ:  l00101A26 l00101A2B
l00101A26:
	v19 = 0x10<32>
	abortStackOverflow(v19)
	// succ:  l00101A2B
l00101A2B:
	v20 = loc15
	v21 = 4<32>
	v22 = v20 + v21
	loc6 = v22
	v23 = loc15
	loc10 = v23
	v24 = arg3
	v25 = Mem0[v24:word32]
	loc11 = v25
	v26 = loc10
	v27 = loc11
	Mem0[v26:word32] = v27
	v28 = loc6
	v29 = loc10
	v30 = Mem0[v29:word32]
	Mem0[v28:word32] = v30
	v31 = arg2
	v32 = loc6
	v33 = arg4
	v34 = arg5
	v35 = 4<32>
	v36 = fn00101E90(v31, v32, v33, v34, v35)
	loc12 = v36
	v37 = arg4
	v38 = Mem0[v37:word32]
	loc13 = v38
	v39 = loc13
	v40 = 4<32>
	v41 = v39 & v40
	loc7 = v41
	v42 = loc7
	v43 = 0<32>
	v44 = v42 == v43
	loc8 = v44
	v45 = loc8
	branch !v45 l00101A86
	// succ:  l00101A76 l00101A86
l00101A76:
	v46 = loc12
	v47 = 0xFFFFF894<32>
	v48 = v46 + v47
	loc9 = v48
	v49 = arg1
	v50 = loc9
	Mem0[v49:word32] = v50
	// succ:  l00101A86
l00101A86:
	v51 = loc15
	Mem0[0x00140030<p32>:word32] = v51
fn00101A12_exit:


// fn00101A8D
// Return size: 0
void fn00101A8D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00101A8D_entry:
	// succ:  l00101A8D
l00101A8D:
	v94 = Mem0[0x00140030<p32>:word32]
	loc96 = v94
	v95 = arg1
	v96 = Mem0[v95:word32]
	loc50 = v96
	v97 = loc50
	v98 = 0<32>
	v99 = v97 == v98
	loc61 = v99
	// succ:  l00101AA1
l00101AA1:
	v100 = loc61
	branch !v100 l00101AAC
	// succ:  l00101AA7 l00101AAC
l00101AA7:
	v101 = 0<32>
	loc18 = v101
l00101AAC:
	v102 = loc50
	v103 = 0xC<32>
	v104 = v102 + v103
	loc72 = v104
	v105 = loc72
	v106 = Mem0[v105:word32]
	loc83 = v106
	v107 = loc50
	v108 = 0x10<32>
	v109 = v107 + v108
	loc94 = v109
	v110 = loc94
	v111 = Mem0[v110:word32]
	loc10 = v111
	v112 = loc83
	v113 = loc10
	v114 = v112 == v113
	loc11 = v114
	v115 = loc11
	v115 = v115
	// succ:  l00101AD3 l00101AD3
l00101AD3:
	v116 = loc50
	v117 = Mem0[v116:word32]
	loc12 = v117
	v118 = loc12
	v119 = 0x24<32>
	v120 = v118 + v119
	loc13 = v120
	v121 = loc13
	v122 = Mem0[v121:word32]
	loc14 = v122
	v123 = loc50
	v124 = loc14
	v125 = 0x1FF<32>
	v126 = v124 & v125
	v127 = 0xB00<32>
	v128 = v126 + v127
fn00101A8D_exit:


// fn00101E90
// Return size: 0
word32 fn00101E90(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00101E90_entry:
	// succ:  l00101E90
l00101E90:
	v179 = Mem0[0x00140030<p32>:word32]
	loc181 = v179
	v180 = arg0
	v181 = Mem0[v180:word32]
	loc120 = v181
	v182 = loc120
	v183 = 0<32>
	v184 = v182 == v183
	loc131 = v184
	// succ:  l00101EA6
l00101EA6:
	v185 = loc131
	branch !v185 l00101EB2
	// succ:  l00101EAD l00101EB2
l00101EAD:
	v186 = 0<32>
	loc88 = v186
l00101EB2:
	v187 = loc120
	v188 = 0xC<32>
	v189 = v187 + v188
	loc142 = v189
	v190 = loc142
	v191 = Mem0[v190:word32]
	loc153 = v191
	v192 = loc120
	v193 = 0x10<32>
	v194 = v192 + v193
	loc164 = v194
	v195 = loc164
	v196 = Mem0[v195:word32]
	loc17 = v196
	v197 = loc153
	v198 = loc17
	v199 = v197 == v198
	loc28 = v199
	v200 = loc28
	v200 = v200
	// succ:  l00101EDF l00101EDF
l00101EDF:
	v201 = loc120
	v202 = Mem0[v201:word32]
	loc39 = v202
	v203 = loc39
	v204 = 0x24<32>
	v205 = v203 + v204
	loc50 = v205
	v206 = loc50
	v207 = Mem0[v206:word32]
	loc61 = v207
	v208 = loc120
	v209 = loc61
	v210 = 0x1FF<32>
	v211 = v209 & v210
	v212 = 0xB00<32>
	v213 = v211 + v212
fn00101E90_exit:


// fn0010268E
// Return size: 0
void fn0010268E(word32 arg0)
fn0010268E_entry:
	// succ:  l0010268E
l0010268E:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn0010268E_exit:


// fn00102697
// Return size: 0
void fn00102697(word32 arg0)
fn00102697_entry:
	// succ:  l00102697
l00102697:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn00102697_exit:


// fn001026A5
// Return size: 0
word32 fn001026A5(word32 arg0)
fn001026A5_entry:
	// succ:  l001026A5
l001026A5:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 2<32>
fn001026A5_exit:


// fn001026B0
// Return size: 0
word32 fn001026B0(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001026B0_entry:
	// succ:  l001026B0
l001026B0:
	v11 = Mem0[0x00140030<p32>:word32]
	loc14 = v11
	v12 = Mem0[0x00140030<p32>:word32]
	v13 = 0x10<32>
	v14 = v12 + v13
	Mem0[0x00140030<p32>:word32] = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = Mem0[0x00140034<p32>:word32]
	v17 = v15 >= v16
	branch !v17 l001026C9
	// succ:  l001026C4 l001026C9
l001026C4:
	v18 = 0x10<32>
	abortStackOverflow(v18)
	// succ:  l001026C9
l001026C9:
	v19 = loc14
	v20 = 0xC<32>
	v21 = v19 + v20
	loc7 = v21
	v22 = loc14
	v23 = 8<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc14
	v26 = 4<32>
	v27 = v25 + v26
	loc9 = v27
	v28 = loc14
	loc10 = v28
	v29 = arg1
	v30 = Mem0[v29:word32]
	loc11 = v30
	v31 = loc9
	v32 = loc11
	Mem0[v31:word32] = v32
	v33 = arg2
	v34 = Mem0[v33:word32]
	loc12 = v34
	v35 = loc10
	v36 = loc12
	Mem0[v35:word32] = v36
	v37 = loc6
	v38 = loc9
	v39 = Mem0[v38:word32]
	Mem0[v37:word32] = v39
	v40 = loc7
	v41 = loc10
	v42 = Mem0[v41:word32]
	Mem0[v40:word32] = v42
	v43 = arg0
	v44 = loc6
	v45 = loc7
	v46 = arg3
	v47 = arg4
	v48 = arg5
	v49 = 0x2230<32>
	v50 = 0x2250<32>
	v51 = fn001043BA(v43, v44, v45, v46, v47, v48, v49, v50)
	loc8 = v51
	v52 = loc14
	Mem0[0x00140030<p32>:word32] = v52
	v53 = loc8
fn001026B0_exit:


// fn00102734
// Return size: 0
word32 fn00102734(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00102734_entry:
	// succ:  l00102734
l00102734:
	v27 = Mem0[0x00140030<p32>:word32]
	loc30 = v27
	v28 = Mem0[0x00140030<p32>:word32]
	v29 = 0x10<32>
	v30 = v28 + v29
	Mem0[0x00140030<p32>:word32] = v30
	v31 = Mem0[0x00140030<p32>:word32]
	v32 = Mem0[0x00140034<p32>:word32]
	v33 = v31 >= v32
	branch !v33 l0010274D
	// succ:  l00102748 l0010274D
l00102748:
	v34 = 0x10<32>
	abortStackOverflow(v34)
	// succ:  l0010274D
l0010274D:
	v35 = loc30
	v36 = 0xC<32>
	v37 = v35 + v36
	loc7 = v37
	v38 = loc30
	v39 = 8<32>
	v40 = v38 + v39
	loc6 = v40
	v41 = loc30
	v42 = 4<32>
	v43 = v41 + v42
	loc25 = v43
	v44 = loc30
	loc26 = v44
	v45 = arg0
	v46 = 8<32>
	v47 = v45 + v46
	loc27 = v47
	v48 = loc27
	v49 = Mem0[v48:word32]
	loc28 = v49
	v50 = loc28
	v51 = 0x14<32>
	v52 = v50 + v51
	loc8 = v52
	v53 = loc8
	v54 = Mem0[v53:word32]
	loc9 = v54
	v55 = loc27
	v56 = loc9
	v57 = 0x1FF<32>
	v58 = v56 & v57
	v59 = 0xB00<32>
	v60 = v58 + v59
fn00102734_exit:


// fn00102842
// Return size: 0
word32 fn00102842(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00102842_entry:
	// succ:  l00102842
l00102842:
	v16 = Mem0[0x00140030<p32>:word32]
	loc19 = v16
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v19 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l0010285B
	// succ:  l00102856 l0010285B
l00102856:
	v23 = 0x10<32>
	abortStackOverflow(v23)
	// succ:  l0010285B
l0010285B:
	v24 = loc19
	v25 = 8<32>
	v26 = v24 + v25
	loc6 = v26
	v27 = loc19
	v28 = 4<32>
	v29 = v27 + v28
	loc14 = v29
	v30 = loc19
	loc15 = v30
	v31 = arg3
	v32 = fn000E64CA(v31)
	loc16 = v32
	v33 = loc14
	v34 = loc16
	Mem0[v33:word32] = v34
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v36 = 0x164<32>
	v37 = loc14
	v38 = 0x4C90<32>
	v39 = invoke_iii(v36, v37, v38)
	loc17 = v39
	v40 = Mem0[0x00140048<p32>:word32]
	loc8 = v40
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v42 = loc8
	v43 = 1<32>
	v44 = v42 & v43
	loc9 = v44
	v45 = loc9
	v45 = v45
	// succ:  l0010289F l0010289F
l0010289F:
	v46 = ___cxa_find_matching_catch_2()
	loc12 = v46
	v47 = Mem0[0x00140094<p32>:word32]
	loc13 = v47
	v48 = loc16
	v49 = fn0011B43F(v48)
fn00102842_exit:


// fn001028FA
// Return size: 0
word32 fn001028FA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001028FA_entry:
	// succ:  l001028FA
l001028FA:
	v16 = Mem0[0x00140030<p32>:word32]
	loc19 = v16
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v19 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l00102913
	// succ:  l0010290E l00102913
l0010290E:
	v23 = 0x10<32>
	abortStackOverflow(v23)
	// succ:  l00102913
l00102913:
	v24 = loc19
	v25 = 8<32>
	v26 = v24 + v25
	loc6 = v26
	v27 = loc19
	v28 = 4<32>
	v29 = v27 + v28
	loc14 = v29
	v30 = loc19
	loc15 = v30
	v31 = arg3
	v32 = fn000E64CA(v31)
	loc16 = v32
	v33 = loc14
	v34 = loc16
	Mem0[v33:word32] = v34
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v36 = 0x164<32>
	v37 = loc14
	v38 = 0x4C90<32>
	v39 = invoke_iii(v36, v37, v38)
	loc17 = v39
	v40 = Mem0[0x00140048<p32>:word32]
	loc8 = v40
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v42 = loc8
	v43 = 1<32>
	v44 = v42 & v43
	loc9 = v44
	v45 = loc9
	v45 = v45
	// succ:  l00102957 l00102957
l00102957:
	v46 = ___cxa_find_matching_catch_2()
	loc12 = v46
	v47 = Mem0[0x00140094<p32>:word32]
	loc13 = v47
	v48 = loc16
	v49 = fn0011B43F(v48)
fn001028FA_exit:


// fn001029B2
// Return size: 0
word32 fn001029B2(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001029B2_entry:
	// succ:  l001029B2
l001029B2:
	v16 = Mem0[0x00140030<p32>:word32]
	loc19 = v16
	v17 = Mem0[0x00140030<p32>:word32]
	v18 = 0x10<32>
	v19 = v17 + v18
	Mem0[0x00140030<p32>:word32] = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = Mem0[0x00140034<p32>:word32]
	v22 = v20 >= v21
	branch !v22 l001029CB
	// succ:  l001029C6 l001029CB
l001029C6:
	v23 = 0x10<32>
	abortStackOverflow(v23)
	// succ:  l001029CB
l001029CB:
	v24 = loc19
	v25 = 8<32>
	v26 = v24 + v25
	loc6 = v26
	v27 = loc19
	v28 = 4<32>
	v29 = v27 + v28
	loc14 = v29
	v30 = loc19
	loc15 = v30
	v31 = arg3
	v32 = fn000E64CA(v31)
	loc16 = v32
	v33 = loc14
	v34 = loc16
	Mem0[v33:word32] = v34
	v35 = 0<32>
	Mem0[0x00140048<p32>:word32] = v35
	v36 = 0x164<32>
	v37 = loc14
	v38 = 0x4C90<32>
	v39 = invoke_iii(v36, v37, v38)
	loc17 = v39
	v40 = Mem0[0x00140048<p32>:word32]
	loc8 = v40
	v41 = 0<32>
	Mem0[0x00140048<p32>:word32] = v41
	v42 = loc8
	v43 = 1<32>
	v44 = v42 & v43
	loc9 = v44
	v45 = loc9
	v45 = v45
	// succ:  l00102A0F l00102A0F
l00102A0F:
	v46 = ___cxa_find_matching_catch_2()
	loc12 = v46
	v47 = Mem0[0x00140094<p32>:word32]
	loc13 = v47
	v48 = loc16
	v49 = fn0011B43F(v48)
fn001029B2_exit:


// fn00102A6A
// Return size: 0
word32 fn00102A6A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn00102A6A_entry:
	// succ:  l00102A6A
l00102A6A:
	v164 = Mem0[0x00140030<p32>:word32]
	loc169 = v164
	v165 = Mem0[0x00140030<p32>:word32]
	v166 = 0x100<32>
	v167 = v165 + v166
	Mem0[0x00140030<p32>:word32] = v167
	v168 = Mem0[0x00140030<p32>:word32]
	v169 = Mem0[0x00140034<p32>:word32]
	v170 = v168 >= v169
	branch !v170 l00102A86
	// succ:  l00102A80 l00102A86
l00102A80:
	v171 = 0x100<32>
	abortStackOverflow(v171)
	// succ:  l00102A86
l00102A86:
	v172 = loc169
	v173 = 0xF8<32>
	v174 = v172 + v173
	loc32 = v174
	v175 = loc169
	v176 = 0xF4<32>
	v177 = v175 + v176
	loc30 = v177
	v178 = loc169
	v179 = 0xF0<32>
	v180 = v178 + v179
	loc29 = v180
	v181 = loc169
	v182 = 0xEC<32>
	v183 = v181 + v182
	loc28 = v183
	v184 = loc169
	v185 = 0xE8<32>
	v186 = v184 + v185
	loc27 = v186
	v187 = loc169
	v188 = 0xE4<32>
	v189 = v187 + v188
	loc26 = v189
	v190 = loc169
	v191 = 0xE0<32>
	v192 = v190 + v191
	loc25 = v192
	v193 = loc169
	v194 = 0xDC<32>
	v195 = v193 + v194
	loc24 = v195
	v196 = loc169
	v197 = 0xD8<32>
	v198 = v196 + v197
	loc23 = v198
	v199 = loc169
	v200 = 0xD4<32>
	v201 = v199 + v200
	loc22 = v201
	v202 = loc169
	v203 = 0xD0<32>
	v204 = v202 + v203
	loc21 = v204
	v205 = loc169
	v206 = 0xCC<32>
	v207 = v205 + v206
	loc19 = v207
	v208 = loc169
	v209 = 0xC8<32>
	v210 = v208 + v209
	loc18 = v210
	v211 = loc169
	v212 = 0xC4<32>
	v213 = v211 + v212
	loc17 = v213
	v214 = loc169
	v215 = 0xC0<32>
	v216 = v214 + v215
	loc16 = v216
	v217 = loc169
	v218 = 0xBC<32>
	v219 = v217 + v218
	loc15 = v219
	v220 = loc169
	v221 = 0xB8<32>
	v222 = v220 + v221
	loc14 = v222
	v223 = loc169
	v224 = 0xB4<32>
	v225 = v223 + v224
	loc13 = v225
	v226 = loc169
	v227 = 0xB0<32>
	v228 = v226 + v227
	loc12 = v228
	v229 = loc169
	v230 = 0xAC<32>
	v231 = v229 + v230
	loc11 = v231
	v232 = loc169
	v233 = 0xA8<32>
	v234 = v232 + v233
	loc10 = v234
	v235 = loc169
	v236 = 0xA4<32>
	v237 = v235 + v236
	loc38 = v237
	v238 = loc169
	v239 = 0xA0<32>
	v240 = v238 + v239
	loc37 = v240
	v241 = loc169
	v242 = 0x9C<32>
	v243 = v241 + v242
	loc36 = v243
	v244 = loc169
	v245 = 0x98<32>
	v246 = v244 + v245
	loc35 = v246
	v247 = loc169
	v248 = 0x94<32>
	v249 = v247 + v248
	loc34 = v249
	v250 = loc169
	v251 = 0x90<32>
	v252 = v250 + v251
	loc33 = v252
	v253 = loc169
	v254 = 0x8C<32>
	v255 = v253 + v254
	loc31 = v255
	v256 = loc169
	v257 = 0x88<32>
	v258 = v256 + v257
	loc20 = v258
	v259 = loc169
	v260 = 0x84<32>
	v261 = v259 + v260
	loc9 = v261
	v262 = loc169
	v263 = 0x80<32>
	v264 = v262 + v263
	loc8 = v264
	v265 = loc169
	v266 = 0x7C<32>
	v267 = v265 + v266
	loc146 = v267
	v268 = loc169
	v269 = 0x78<32>
	v270 = v268 + v269
	loc157 = v270
	v271 = loc169
	v272 = 0x74<32>
	v273 = v271 + v272
	loc41 = v273
	v274 = loc169
	v275 = 0x70<32>
	v276 = v274 + v275
	loc52 = v276
	v277 = loc169
	v278 = 0x6C<32>
	v279 = v277 + v278
	loc63 = v279
	v280 = loc169
	v281 = 0x68<32>
	v282 = v280 + v281
	loc74 = v282
	v283 = loc169
	v284 = 0x64<32>
	v285 = v283 + v284
	loc80 = v285
	v286 = loc169
	v287 = 0x60<32>
	v288 = v286 + v287
	loc81 = v288
	v289 = loc169
	v290 = 0x5C<32>
	v291 = v289 + v290
	loc82 = v291
	v292 = loc169
	v293 = 0x58<32>
	v294 = v292 + v293
	loc83 = v294
	v295 = loc169
	v296 = 0x54<32>
	v297 = v295 + v296
	loc84 = v297
	v298 = loc169
	v299 = 0x50<32>
	v300 = v298 + v299
	loc85 = v300
	v301 = loc169
	v302 = 0x4C<32>
	v303 = v301 + v302
	loc86 = v303
	v304 = loc169
	v305 = 0x48<32>
	v306 = v304 + v305
	loc87 = v306
	v307 = loc169
	v308 = 0x44<32>
	v309 = v307 + v308
	loc88 = v309
	v310 = loc169
	v311 = 0x40<32>
	v312 = v310 + v311
	loc89 = v312
	v313 = loc169
	v314 = 0x3C<32>
	v315 = v313 + v314
	loc90 = v315
	v316 = loc169
	v317 = 0x38<32>
	v318 = v316 + v317
	loc91 = v318
	v319 = loc169
	v320 = 0x34<32>
	v321 = v319 + v320
	loc92 = v321
	v322 = loc169
	v323 = 0x30<32>
	v324 = v322 + v323
	loc93 = v324
	v325 = loc169
	v326 = 0x2C<32>
	v327 = v325 + v326
	loc94 = v327
	v328 = loc169
	v329 = 0x28<32>
	v330 = v328 + v329
	loc95 = v330
	v331 = loc169
	v332 = 0x24<32>
	v333 = v331 + v332
	loc96 = v333
	v334 = loc169
	v335 = 0x20<32>
	v336 = v334 + v335
	loc97 = v336
	v337 = loc169
	v338 = 0x1C<32>
	v339 = v337 + v338
	loc98 = v339
	v340 = loc169
	v341 = 0x18<32>
	v342 = v340 + v341
	loc99 = v342
	v343 = loc169
	v344 = 0x14<32>
	v345 = v343 + v344
	loc100 = v345
	v346 = loc169
	v347 = 0x10<32>
	v348 = v346 + v347
	loc101 = v348
	v349 = loc169
	v350 = 0xC<32>
	v351 = v349 + v350
	loc102 = v351
	v352 = loc169
	v353 = 8<32>
	v354 = v352 + v353
	loc103 = v354
	v355 = loc169
	v356 = 4<32>
	v357 = v355 + v356
	loc104 = v357
	v358 = loc169
	loc105 = v358
	v359 = arg4
	v360 = 0<32>
	Mem0[v359:word32] = v360
	v361 = arg3
	v362 = fn000E64CA(v361)
	loc106 = v362
	v363 = loc146
	v364 = loc106
	Mem0[v363:word32] = v364
	v365 = 0<32>
	Mem0[0x00140048<p32>:word32] = v365
	v366 = 0x164<32>
	v367 = loc146
	v368 = 0x4C90<32>
	v369 = invoke_iii(v366, v367, v368)
	loc107 = v369
	v370 = Mem0[0x00140048<p32>:word32]
	loc108 = v370
	v371 = 0<32>
	Mem0[0x00140048<p32>:word32] = v371
	v372 = loc108
	v373 = 1<32>
	v374 = v372 & v373
	loc109 = v374
	v375 = loc109
	v375 = v375
	// succ:  l00102CE7 l00102CE7
l00102CE7:
	v376 = ___cxa_find_matching_catch_2()
	loc111 = v376
	v377 = Mem0[0x00140094<p32>:word32]
	loc112 = v377
	v378 = loc106
	v379 = fn0011B43F(v378)
fn00102A6A_exit:


// fn00103EA9
// Return size: 0
word32 fn00103EA9(word32 arg0)
fn00103EA9_entry:
	// succ:  l00103EA9
l00103EA9:
	v15 = Mem0[0x00140030<p32>:word32]
	loc13 = v15
	v16 = 0x4400<32>
	v17 = Mem0[v16:int8]
	v18 = CONVERT(v17, int8, word32)
	loc1 = v18
	v19 = loc1
	v20 = 0x18<32>
	v21 = v19 << v20
	v22 = 0x18<32>
	v23 = v21 >> v22
	v24 = 0<32>
	v25 = v23 == v24
	loc4 = v25
	// succ:  l00103EC5
l00103EC5:
	v26 = loc4
	v26 = v26
	// succ:  l00103ECB l00103ECB
l00103ECB:
	v27 = 0x4400<32>
	v28 = fn0011EE46(v27)
	loc5 = v28
	v29 = loc5
	v30 = 0<32>
	v31 = v29 == v30
	loc6 = v31
	v32 = loc6
	v33 = v32 == 0<32>
	v33 = v33
	// succ:  l00103EE0 l00103EE0
l00103EE0:
	v34 = 0x5008<32>
	v35 = 0<64>
	Mem0[v34:word64] = v35
	v36 = 0x5008<32>
	v37 = 8<32>
	v38 = v36 + v37
	v39 = 0<32>
	Mem0[v38:word32] = v39
	v40 = 0<32>
	Mem0[0x00140048<p32>:word32] = v40
	v41 = 0x19E<32>
	v42 = 0x1DC8<32>
	v43 = invoke_ii(v41, v42)
	loc7 = v43
	v44 = Mem0[0x00140048<p32>:word32]
	loc8 = v44
	v45 = 0<32>
	Mem0[0x00140048<p32>:word32] = v45
	v46 = loc8
	v47 = 1<32>
	v48 = v46 & v47
	loc9 = v48
	v49 = loc9
	v50 = v49 == 0<32>
	v50 = v50
	// succ:  l00103F17 l00103F17
l00103F17:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v52 = 0x19F<32>
	v53 = 0x5008<32>
	v54 = 0x1DC8<32>
	v55 = loc7
	invoke_viii(v52, v53, v54, v55)
	v56 = Mem0[0x00140048<p32>:word32]
	loc10 = v56
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v58 = loc10
	v59 = 1<32>
	v60 = v58 & v59
	loc11 = v60
	v61 = loc11
	v62 = v61 == 0<32>
	v62 = v62
	// succ:  l00103F3D l00103F3D
l00103F3D:
	v63 = 0x1A0<32>
	v64 = 0x5008<32>
	v65 = Mem0[0x00140044<p32>:word32]
	v66 = ___cxa_atexit(v63, v64, v65)
fn00103EA9_exit:


// fn00103F63
// Return size: 0
word32 fn00103F63(word32 arg0)
fn00103F63_entry:
	// succ:  l00103F63
l00103F63:
	v15 = Mem0[0x00140030<p32>:word32]
	loc13 = v15
	v16 = 0x43F8<32>
	v17 = Mem0[v16:int8]
	v18 = CONVERT(v17, int8, word32)
	loc1 = v18
	v19 = loc1
	v20 = 0x18<32>
	v21 = v19 << v20
	v22 = 0x18<32>
	v23 = v21 >> v22
	v24 = 0<32>
	v25 = v23 == v24
	loc4 = v25
	// succ:  l00103F7F
l00103F7F:
	v26 = loc4
	v26 = v26
	// succ:  l00103F85 l00103F85
l00103F85:
	v27 = 0x43F8<32>
	v28 = fn0011EE46(v27)
	loc5 = v28
	v29 = loc5
	v30 = 0<32>
	v31 = v29 == v30
	loc6 = v31
	v32 = loc6
	v33 = v32 == 0<32>
	v33 = v33
	// succ:  l00103F9A l00103F9A
l00103F9A:
	v34 = 0x4FFC<32>
	v35 = 0<64>
	Mem0[v34:word64] = v35
	v36 = 0x4FFC<32>
	v37 = 8<32>
	v38 = v36 + v37
	v39 = 0<32>
	Mem0[v38:word32] = v39
	v40 = 0<32>
	Mem0[0x00140048<p32>:word32] = v40
	v41 = 0x19E<32>
	v42 = 0x1D98<32>
	v43 = invoke_ii(v41, v42)
	loc7 = v43
	v44 = Mem0[0x00140048<p32>:word32]
	loc8 = v44
	v45 = 0<32>
	Mem0[0x00140048<p32>:word32] = v45
	v46 = loc8
	v47 = 1<32>
	v48 = v46 & v47
	loc9 = v48
	v49 = loc9
	v50 = v49 == 0<32>
	v50 = v50
	// succ:  l00103FD1 l00103FD1
l00103FD1:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v52 = 0x19F<32>
	v53 = 0x4FFC<32>
	v54 = 0x1D98<32>
	v55 = loc7
	invoke_viii(v52, v53, v54, v55)
	v56 = Mem0[0x00140048<p32>:word32]
	loc10 = v56
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v58 = loc10
	v59 = 1<32>
	v60 = v58 & v59
	loc11 = v60
	v61 = loc11
	v62 = v61 == 0<32>
	v62 = v62
	// succ:  l00103FF7 l00103FF7
l00103FF7:
	v63 = 0x1A0<32>
	v64 = 0x4FFC<32>
	v65 = Mem0[0x00140044<p32>:word32]
	v66 = ___cxa_atexit(v63, v64, v65)
fn00103F63_exit:


// fn0010401D
// Return size: 0
word32 fn0010401D(word32 arg0)
fn0010401D_entry:
	// succ:  l0010401D
l0010401D:
	v15 = Mem0[0x00140030<p32>:word32]
	loc13 = v15
	v16 = 0x43F0<32>
	v17 = Mem0[v16:int8]
	v18 = CONVERT(v17, int8, word32)
	loc1 = v18
	v19 = loc1
	v20 = 0x18<32>
	v21 = v19 << v20
	v22 = 0x18<32>
	v23 = v21 >> v22
	v24 = 0<32>
	v25 = v23 == v24
	loc4 = v25
	// succ:  l00104039
l00104039:
	v26 = loc4
	v26 = v26
	// succ:  l0010403F l0010403F
l0010403F:
	v27 = 0x43F0<32>
	v28 = fn0011EE46(v27)
	loc5 = v28
	v29 = loc5
	v30 = 0<32>
	v31 = v29 == v30
	loc6 = v31
	v32 = loc6
	v33 = v32 == 0<32>
	v33 = v33
	// succ:  l00104054 l00104054
l00104054:
	v34 = 0x4FF0<32>
	v35 = 0<64>
	Mem0[v34:word64] = v35
	v36 = 0x4FF0<32>
	v37 = 8<32>
	v38 = v36 + v37
	v39 = 0<32>
	Mem0[v38:word32] = v39
	v40 = 0<32>
	Mem0[0x00140048<p32>:word32] = v40
	v41 = 0x19E<32>
	v42 = 0x1D74<32>
	v43 = invoke_ii(v41, v42)
	loc7 = v43
	v44 = Mem0[0x00140048<p32>:word32]
	loc8 = v44
	v45 = 0<32>
	Mem0[0x00140048<p32>:word32] = v45
	v46 = loc8
	v47 = 1<32>
	v48 = v46 & v47
	loc9 = v48
	v49 = loc9
	v50 = v49 == 0<32>
	v50 = v50
	// succ:  l0010408B l0010408B
l0010408B:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v52 = 0x19F<32>
	v53 = 0x4FF0<32>
	v54 = 0x1D74<32>
	v55 = loc7
	invoke_viii(v52, v53, v54, v55)
	v56 = Mem0[0x00140048<p32>:word32]
	loc10 = v56
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v58 = loc10
	v59 = 1<32>
	v60 = v58 & v59
	loc11 = v60
	v61 = loc11
	v62 = v61 == 0<32>
	v62 = v62
	// succ:  l001040B1 l001040B1
l001040B1:
	v63 = 0x1A0<32>
	v64 = 0x4FF0<32>
	v65 = Mem0[0x00140044<p32>:word32]
	v66 = ___cxa_atexit(v63, v64, v65)
fn0010401D_exit:


// fn001040D7
// Return size: 0
word32 fn001040D7(word32 arg0)
fn001040D7_entry:
	// succ:  l001040D7
l001040D7:
	v15 = Mem0[0x00140030<p32>:word32]
	loc13 = v15
	v16 = 0x43E8<32>
	v17 = Mem0[v16:int8]
	v18 = CONVERT(v17, int8, word32)
	loc1 = v18
	v19 = loc1
	v20 = 0x18<32>
	v21 = v19 << v20
	v22 = 0x18<32>
	v23 = v21 >> v22
	v24 = 0<32>
	v25 = v23 == v24
	loc4 = v25
	// succ:  l001040F3
l001040F3:
	v26 = loc4
	v26 = v26
	// succ:  l001040F9 l001040F9
l001040F9:
	v27 = 0x43E8<32>
	v28 = fn0011EE46(v27)
	loc5 = v28
	v29 = loc5
	v30 = 0<32>
	v31 = v29 == v30
	loc6 = v31
	v32 = loc6
	v33 = v32 == 0<32>
	v33 = v33
	// succ:  l0010410E l0010410E
l0010410E:
	v34 = 0x4FE4<32>
	v35 = 0<64>
	Mem0[v34:word64] = v35
	v36 = 0x4FE4<32>
	v37 = 8<32>
	v38 = v36 + v37
	v39 = 0<32>
	Mem0[v38:word32] = v39
	v40 = 0<32>
	Mem0[0x00140048<p32>:word32] = v40
	v41 = 0x19E<32>
	v42 = 0x1D50<32>
	v43 = invoke_ii(v41, v42)
	loc7 = v43
	v44 = Mem0[0x00140048<p32>:word32]
	loc8 = v44
	v45 = 0<32>
	Mem0[0x00140048<p32>:word32] = v45
	v46 = loc8
	v47 = 1<32>
	v48 = v46 & v47
	loc9 = v48
	v49 = loc9
	v50 = v49 == 0<32>
	v50 = v50
	// succ:  l00104145 l00104145
l00104145:
	v51 = 0<32>
	Mem0[0x00140048<p32>:word32] = v51
	v52 = 0x19F<32>
	v53 = 0x4FE4<32>
	v54 = 0x1D50<32>
	v55 = loc7
	invoke_viii(v52, v53, v54, v55)
	v56 = Mem0[0x00140048<p32>:word32]
	loc10 = v56
	v57 = 0<32>
	Mem0[0x00140048<p32>:word32] = v57
	v58 = loc10
	v59 = 1<32>
	v60 = v58 & v59
	loc11 = v60
	v61 = loc11
	v62 = v61 == 0<32>
	v62 = v62
	// succ:  l0010416B l0010416B
l0010416B:
	v63 = 0x1A0<32>
	v64 = 0x4FE4<32>
	v65 = Mem0[0x00140044<p32>:word32]
	v66 = ___cxa_atexit(v63, v64, v65)
fn001040D7_exit:


// fn00104239
// Return size: 0
void fn00104239(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00104239_entry:
	// succ:  l00104239
l00104239:
	v19 = Mem0[0x00140030<p32>:word32]
	loc22 = v19
	v20 = Mem0[0x00140030<p32>:word32]
	v21 = 0x10<32>
	v22 = v20 + v21
	Mem0[0x00140030<p32>:word32] = v22
	v23 = Mem0[0x00140030<p32>:word32]
	v24 = Mem0[0x00140034<p32>:word32]
	v25 = v23 >= v24
	branch !v25 l00104252
	// succ:  l0010424D l00104252
l0010424D:
	v26 = 0x10<32>
	abortStackOverflow(v26)
	// succ:  l00104252
l00104252:
	v27 = loc22
	v28 = 4<32>
	v29 = v27 + v28
	loc6 = v29
	v30 = loc22
	loc17 = v30
	v31 = arg0
	v32 = 8<32>
	v33 = v31 + v32
	loc18 = v33
	v34 = loc18
	v35 = Mem0[v34:word32]
	loc19 = v35
	v36 = loc19
	v37 = Mem0[v36:word32]
	loc20 = v37
	v38 = loc18
	v39 = loc20
	v40 = 0x1FF<32>
	v41 = v39 & v40
	v42 = 0xB00<32>
	v43 = v41 + v42
fn00104239_exit:


// fn001042F6
// Return size: 0
void fn001042F6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001042F6_entry:
	// succ:  l001042F6
l001042F6:
	v20 = Mem0[0x00140030<p32>:word32]
	loc23 = v20
	v21 = Mem0[0x00140030<p32>:word32]
	v22 = 0x10<32>
	v23 = v21 + v22
	Mem0[0x00140030<p32>:word32] = v23
	v24 = Mem0[0x00140030<p32>:word32]
	v25 = Mem0[0x00140034<p32>:word32]
	v26 = v24 >= v25
	branch !v26 l0010430F
	// succ:  l0010430A l0010430F
l0010430A:
	v27 = 0x10<32>
	abortStackOverflow(v27)
	// succ:  l0010430F
l0010430F:
	v28 = loc23
	v29 = 4<32>
	v30 = v28 + v29
	loc6 = v30
	v31 = loc23
	loc18 = v31
	v32 = arg0
	v33 = 8<32>
	v34 = v32 + v33
	loc19 = v34
	v35 = loc19
	v36 = Mem0[v35:word32]
	loc20 = v36
	v37 = loc20
	v38 = 4<32>
	v39 = v37 + v38
	loc21 = v39
	v40 = loc21
	v41 = Mem0[v40:word32]
	loc7 = v41
	v42 = loc19
	v43 = loc7
	v44 = 0x1FF<32>
	v45 = v43 & v44
	v46 = 0xB00<32>
	v47 = v45 + v46
fn001042F6_exit:


// fn001043BA
// Return size: 0
word32 fn001043BA(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
fn001043BA_entry:
	// succ:  l001043BA
l001043BA:
	v220 = Mem0[0x00140030<p32>:word32]
	loc225 = v220
	v221 = Mem0[0x00140030<p32>:word32]
	v222 = 0x20<32>
	v223 = v221 + v222
	Mem0[0x00140030<p32>:word32] = v223
	v224 = Mem0[0x00140030<p32>:word32]
	v225 = Mem0[0x00140034<p32>:word32]
	v226 = v224 >= v225
	branch !v226 l001043D4
	// succ:  l001043CF l001043D4
l001043CF:
	v227 = 0x20<32>
	abortStackOverflow(v227)
	// succ:  l001043D4
l001043D4:
	v228 = loc225
	v229 = 0x10<32>
	v230 = v228 + v229
	loc24 = v230
	v231 = loc225
	v232 = 0xC<32>
	v233 = v231 + v232
	loc23 = v233
	v234 = loc225
	v235 = 8<32>
	v236 = v234 + v235
	loc199 = v236
	v237 = loc225
	v238 = 4<32>
	v239 = v237 + v238
	loc210 = v239
	v240 = loc225
	loc34 = v240
	v241 = arg3
	v242 = fn000E64CA(v241)
	loc45 = v242
	v243 = loc199
	v244 = loc45
	Mem0[v243:word32] = v244
	v245 = 0<32>
	Mem0[0x00140048<p32>:word32] = v245
	v246 = 0x164<32>
	v247 = loc199
	v248 = 0x4C90<32>
	v249 = invoke_iii(v246, v247, v248)
	loc56 = v249
	v250 = Mem0[0x00140048<p32>:word32]
	loc67 = v250
	v251 = 0<32>
	Mem0[0x00140048<p32>:word32] = v251
	v252 = loc67
	v253 = 1<32>
	v254 = v252 & v253
	loc78 = v254
	v255 = loc78
	v255 = v255
	// succ:  l0010442F l0010442F
l0010442F:
	v256 = ___cxa_find_matching_catch_2()
	loc165 = v256
	v257 = Mem0[0x00140094<p32>:word32]
	loc166 = v257
	v258 = loc45
	v259 = fn0011B43F(v258)
fn001043BA_exit:


// fn00104EDE
// Return size: 0
void fn00104EDE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00104EDE_entry:
	// succ:  l00104EDE
l00104EDE:
	v15 = Mem0[0x00140030<p32>:word32]
	loc18 = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = 0x10<32>
	v18 = v16 + v17
	Mem0[0x00140030<p32>:word32] = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = Mem0[0x00140034<p32>:word32]
	v21 = v19 >= v20
	branch !v21 l00104EF7
	// succ:  l00104EF2 l00104EF7
l00104EF2:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l00104EF7
l00104EF7:
	v23 = loc18
	v24 = 4<32>
	v25 = v23 + v24
	loc6 = v25
	v26 = loc18
	loc13 = v26
	v27 = arg3
	v28 = Mem0[v27:word32]
	loc14 = v28
	v29 = loc13
	v30 = loc14
	Mem0[v29:word32] = v30
	v31 = loc6
	v32 = loc13
	v33 = Mem0[v32:word32]
	Mem0[v31:word32] = v33
	v34 = arg2
	v35 = loc6
	v36 = arg4
	v37 = arg5
	v38 = 2<32>
	v39 = fn00105E65(v34, v35, v36, v37, v38)
	loc15 = v39
	v40 = arg4
	v41 = Mem0[v40:word32]
	loc16 = v41
	v42 = loc16
	v43 = 4<32>
	v44 = v42 & v43
	loc8 = v44
	v45 = loc8
	v46 = 0<32>
	v47 = v45 == v46
	loc9 = v47
	v48 = loc15
	v49 = 0xFFFFFFFF<32>
	v50 = v48 + v49
	loc7 = v50
	v51 = loc7
	v52 = 0x1F<32>
	v53 = v51 <u v52
	loc10 = v53
	v54 = loc10
	v55 = loc9
	v56 = v54 & v55
	loc11 = v56
	v57 = loc11
	branch !v57 l00104F5F
	// succ:  l00104F57 l00104F5F
l00104F57:
	v58 = arg1
	v59 = loc15
	Mem0[v58:word32] = v59
	goto l00104F6D
	// succ:  l00104F6D
l00104F5F:
	v60 = loc16
	v61 = 4<32>
	v62 = v60 | v61
	loc12 = v62
	v63 = arg4
	v64 = loc12
	Mem0[v63:word32] = v64
	// succ:  l00104F6D
l00104F6D:
	v65 = loc18
	Mem0[0x00140030<p32>:word32] = v65
fn00104EDE_exit:


// fn00104F75
// Return size: 0
void fn00104F75(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00104F75_entry:
	// succ:  l00104F75
l00104F75:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l00104F8E
	// succ:  l00104F89 l00104F8E
l00104F89:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l00104F8E
l00104F8E:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 2<32>
	v38 = fn00105E65(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 0x18<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l00104FEF
	// succ:  l00104FE7 l00104FEF
l00104FE7:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l00104FFD
	// succ:  l00104FFD
l00104FEF:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l00104FFD
l00104FFD:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn00104F75_exit:


// fn00105005
// Return size: 0
void fn00105005(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00105005_entry:
	// succ:  l00105005
l00105005:
	v15 = Mem0[0x00140030<p32>:word32]
	loc18 = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = 0x10<32>
	v18 = v16 + v17
	Mem0[0x00140030<p32>:word32] = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = Mem0[0x00140034<p32>:word32]
	v21 = v19 >= v20
	branch !v21 l0010501E
	// succ:  l00105019 l0010501E
l00105019:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l0010501E
l0010501E:
	v23 = loc18
	v24 = 4<32>
	v25 = v23 + v24
	loc6 = v25
	v26 = loc18
	loc13 = v26
	v27 = arg3
	v28 = Mem0[v27:word32]
	loc14 = v28
	v29 = loc13
	v30 = loc14
	Mem0[v29:word32] = v30
	v31 = loc6
	v32 = loc13
	v33 = Mem0[v32:word32]
	Mem0[v31:word32] = v33
	v34 = arg2
	v35 = loc6
	v36 = arg4
	v37 = arg5
	v38 = 2<32>
	v39 = fn00105E65(v34, v35, v36, v37, v38)
	loc15 = v39
	v40 = arg4
	v41 = Mem0[v40:word32]
	loc16 = v41
	v42 = loc16
	v43 = 4<32>
	v44 = v42 & v43
	loc8 = v44
	v45 = loc8
	v46 = 0<32>
	v47 = v45 == v46
	loc9 = v47
	v48 = loc15
	v49 = 0xFFFFFFFF<32>
	v50 = v48 + v49
	loc7 = v50
	v51 = loc7
	v52 = 0xC<32>
	v53 = v51 <u v52
	loc10 = v53
	v54 = loc10
	v55 = loc9
	v56 = v54 & v55
	loc11 = v56
	v57 = loc11
	branch !v57 l00105086
	// succ:  l0010507E l00105086
l0010507E:
	v58 = arg1
	v59 = loc15
	Mem0[v58:word32] = v59
	goto l00105094
	// succ:  l00105094
l00105086:
	v60 = loc16
	v61 = 4<32>
	v62 = v60 | v61
	loc12 = v62
	v63 = arg4
	v64 = loc12
	Mem0[v63:word32] = v64
	// succ:  l00105094
l00105094:
	v65 = loc18
	Mem0[0x00140030<p32>:word32] = v65
fn00105005_exit:


// fn0010509C
// Return size: 0
void fn0010509C(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0010509C_entry:
	// succ:  l0010509C
l0010509C:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l001050B5
	// succ:  l001050B0 l001050B5
l001050B0:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l001050B5
l001050B5:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 3<32>
	v38 = fn00105E65(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 0x16E<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l00105117
	// succ:  l0010510F l00105117
l0010510F:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l00105125
	// succ:  l00105125
l00105117:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l00105125
l00105125:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn0010509C_exit:


// fn0010512D
// Return size: 0
void fn0010512D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn0010512D_entry:
	// succ:  l0010512D
l0010512D:
	v15 = Mem0[0x00140030<p32>:word32]
	loc18 = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = 0x10<32>
	v18 = v16 + v17
	Mem0[0x00140030<p32>:word32] = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = Mem0[0x00140034<p32>:word32]
	v21 = v19 >= v20
	branch !v21 l00105146
	// succ:  l00105141 l00105146
l00105141:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l00105146
l00105146:
	v23 = loc18
	v24 = 4<32>
	v25 = v23 + v24
	loc6 = v25
	v26 = loc18
	loc12 = v26
	v27 = arg3
	v28 = Mem0[v27:word32]
	loc13 = v28
	v29 = loc12
	v30 = loc13
	Mem0[v29:word32] = v30
	v31 = loc6
	v32 = loc12
	v33 = Mem0[v32:word32]
	Mem0[v31:word32] = v33
	v34 = arg2
	v35 = loc6
	v36 = arg4
	v37 = arg5
	v38 = 2<32>
	v39 = fn00105E65(v34, v35, v36, v37, v38)
	loc14 = v39
	v40 = arg4
	v41 = Mem0[v40:word32]
	loc15 = v41
	v42 = loc15
	v43 = 4<32>
	v44 = v42 & v43
	loc7 = v44
	v45 = loc7
	v46 = 0<32>
	v47 = v45 == v46
	loc8 = v47
	v48 = loc14
	v49 = 0xD<32>
	v50 = v48 < v49
	loc9 = v50
	v51 = loc9
	v52 = loc8
	v53 = v51 & v52
	loc16 = v53
	v54 = loc16
	branch !v54 l001051AE
	// succ:  l0010519F l001051AE
l0010519F:
	v55 = loc14
	v56 = 0xFFFFFFFF<32>
	v57 = v55 + v56
	loc10 = v57
	v58 = arg1
	v59 = loc10
	Mem0[v58:word32] = v59
	goto l001051BC
	// succ:  l001051BC
l001051AE:
	v60 = loc15
	v61 = 4<32>
	v62 = v60 | v61
	loc11 = v62
	v63 = arg4
	v64 = loc11
	Mem0[v63:word32] = v64
	// succ:  l001051BC
l001051BC:
	v65 = loc18
	Mem0[0x00140030<p32>:word32] = v65
fn0010512D_exit:


// fn001051C4
// Return size: 0
void fn001051C4(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001051C4_entry:
	// succ:  l001051C4
l001051C4:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l001051DD
	// succ:  l001051D8 l001051DD
l001051D8:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l001051DD
l001051DD:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 2<32>
	v38 = fn00105E65(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 0x3C<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l0010523E
	// succ:  l00105236 l0010523E
l00105236:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l0010524C
	// succ:  l0010524C
l0010523E:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l0010524C
l0010524C:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn001051C4_exit:


// fn00105254
// Return size: 0
void fn00105254(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00105254_entry:
	// succ:  l00105254
l00105254:
	v95 = Mem0[0x00140030<p32>:word32]
	loc97 = v95
	// succ:  l0010525C
l0010525C:
	v96 = arg1
	v97 = Mem0[v96:word32]
	loc53 = v97
	v98 = loc53
	v99 = 0<32>
	v100 = v98 == v99
	loc64 = v100
	// succ:  l0010526C
l0010526C:
	v101 = loc64
	branch !v101 l00105277
	// succ:  l00105272 l00105277
l00105272:
	v102 = 1<32>
	loc90 = v102
l00105277:
	v103 = loc53
	v104 = 0xC<32>
	v105 = v103 + v104
	loc75 = v105
	v106 = loc75
	v107 = Mem0[v106:word32]
	loc86 = v107
	v108 = loc53
	v109 = 0x10<32>
	v110 = v108 + v109
	loc93 = v110
	v111 = loc93
	v112 = Mem0[v111:word32]
	loc13 = v112
	v113 = loc86
	v114 = loc13
	v115 = v113 == v114
	loc14 = v115
	v116 = loc14
	v116 = v116
	// succ:  l0010529E l0010529E
l0010529E:
	v117 = loc53
	v118 = Mem0[v117:word32]
	loc15 = v118
	v119 = loc15
	v120 = 0x24<32>
	v121 = v119 + v120
	loc16 = v121
	v122 = loc16
	v123 = Mem0[v122:word32]
	loc17 = v123
	v124 = loc53
	v125 = loc17
	v126 = 0x1FF<32>
	v127 = v125 & v126
	v128 = 0xB00<32>
	v129 = v127 + v128
fn00105254_exit:


// fn00105640
// Return size: 0
void fn00105640(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00105640_entry:
	// succ:  l00105640
l00105640:
	v45 = Mem0[0x00140030<p32>:word32]
	loc48 = v45
	v46 = Mem0[0x00140030<p32>:word32]
	v47 = 0x10<32>
	v48 = v46 + v47
	Mem0[0x00140030<p32>:word32] = v48
	v49 = Mem0[0x00140030<p32>:word32]
	v50 = Mem0[0x00140034<p32>:word32]
	v51 = v49 >= v50
	branch !v51 l00105659
	// succ:  l00105654 l00105659
l00105654:
	v52 = 0x10<32>
	abortStackOverflow(v52)
	// succ:  l00105659
l00105659:
	v53 = loc48
	v54 = 4<32>
	v55 = v53 + v54
	loc6 = v55
	v56 = loc48
	loc41 = v56
	v57 = arg0
	v58 = 8<32>
	v59 = v57 + v58
	loc42 = v59
	v60 = loc42
	v61 = Mem0[v60:word32]
	loc43 = v61
	v62 = loc43
	v63 = 8<32>
	v64 = v62 + v63
	loc44 = v64
	v65 = loc44
	v66 = Mem0[v65:word32]
	loc7 = v66
	v67 = loc42
	v68 = loc7
	v69 = 0x1FF<32>
	v70 = v68 & v69
	v71 = 0xB00<32>
	v72 = v70 + v71
fn00105640_exit:


// fn001057E3
// Return size: 0
void fn001057E3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001057E3_entry:
	// succ:  l001057E3
l001057E3:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l001057FC
	// succ:  l001057F7 l001057FC
l001057F7:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l001057FC
l001057FC:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 2<32>
	v38 = fn00105E65(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 0x3D<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l0010585D
	// succ:  l00105855 l0010585D
l00105855:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l0010586B
	// succ:  l0010586B
l0010585D:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l0010586B
l0010586B:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn001057E3_exit:


// fn00105873
// Return size: 0
void fn00105873(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00105873_entry:
	// succ:  l00105873
l00105873:
	v14 = Mem0[0x00140030<p32>:word32]
	loc17 = v14
	v15 = Mem0[0x00140030<p32>:word32]
	v16 = 0x10<32>
	v17 = v15 + v16
	Mem0[0x00140030<p32>:word32] = v17
	v18 = Mem0[0x00140030<p32>:word32]
	v19 = Mem0[0x00140034<p32>:word32]
	v20 = v18 >= v19
	branch !v20 l0010588C
	// succ:  l00105887 l0010588C
l00105887:
	v21 = 0x10<32>
	abortStackOverflow(v21)
	// succ:  l0010588C
l0010588C:
	v22 = loc17
	v23 = 4<32>
	v24 = v22 + v23
	loc6 = v24
	v25 = loc17
	loc11 = v25
	v26 = arg3
	v27 = Mem0[v26:word32]
	loc12 = v27
	v28 = loc11
	v29 = loc12
	Mem0[v28:word32] = v29
	v30 = loc6
	v31 = loc11
	v32 = Mem0[v31:word32]
	Mem0[v30:word32] = v32
	v33 = arg2
	v34 = loc6
	v35 = arg4
	v36 = arg5
	v37 = 1<32>
	v38 = fn00105E65(v33, v34, v35, v36, v37)
	loc13 = v38
	v39 = arg4
	v40 = Mem0[v39:word32]
	loc14 = v40
	v41 = loc14
	v42 = 4<32>
	v43 = v41 & v42
	loc7 = v43
	v44 = loc7
	v45 = 0<32>
	v46 = v44 == v45
	loc8 = v46
	v47 = loc13
	v48 = 7<32>
	v49 = v47 < v48
	loc9 = v49
	v50 = loc9
	v51 = loc8
	v52 = v50 & v51
	loc15 = v52
	v53 = loc15
	branch !v53 l001058ED
	// succ:  l001058E5 l001058ED
l001058E5:
	v54 = arg1
	v55 = loc13
	Mem0[v54:word32] = v55
	goto l001058FB
	// succ:  l001058FB
l001058ED:
	v56 = loc14
	v57 = 4<32>
	v58 = v56 | v57
	loc10 = v58
	v59 = arg4
	v60 = loc10
	Mem0[v59:word32] = v60
	// succ:  l001058FB
l001058FB:
	v61 = loc17
	Mem0[0x00140030<p32>:word32] = v61
fn00105873_exit:


// fn00105903
// Return size: 0
void fn00105903(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00105903_entry:
	// succ:  l00105903
l00105903:
	v18 = Mem0[0x00140030<p32>:word32]
	loc21 = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = 0x10<32>
	v21 = v19 + v20
	Mem0[0x00140030<p32>:word32] = v21
	v22 = Mem0[0x00140030<p32>:word32]
	v23 = Mem0[0x00140034<p32>:word32]
	v24 = v22 >= v23
	branch !v24 l0010591C
	// succ:  l00105917 l0010591C
l00105917:
	v25 = 0x10<32>
	abortStackOverflow(v25)
	// succ:  l0010591C
l0010591C:
	v26 = loc21
	v27 = 4<32>
	v28 = v26 + v27
	loc8 = v28
	v29 = loc21
	loc16 = v29
	v30 = arg3
	v31 = Mem0[v30:word32]
	loc17 = v31
	v32 = loc16
	v33 = loc17
	Mem0[v32:word32] = v33
	v34 = loc8
	v35 = loc16
	v36 = Mem0[v35:word32]
	Mem0[v34:word32] = v36
	v37 = arg2
	v38 = loc8
	v39 = arg4
	v40 = arg5
	v41 = 4<32>
	v42 = fn00105E65(v37, v38, v39, v40, v41)
	loc18 = v42
	v43 = arg4
	v44 = Mem0[v43:word32]
	loc19 = v44
	v45 = loc19
	v46 = 4<32>
	v47 = v45 & v46
	loc9 = v47
	v48 = loc9
	v49 = 0<32>
	v50 = v48 == v49
	loc10 = v50
	v51 = loc10
	branch !v51 l001059B1
	// succ:  l00105967 l001059B1
l00105967:
	v52 = loc18
	v53 = 0x45<32>
	v54 = v52 < v53
	loc11 = v54
	v55 = loc11
	branch !v55 l00105980
	// succ:  l00105973 l00105980
l00105973:
	v56 = loc18
	v57 = 0x7D0<32>
	v58 = v56 + v57
	loc12 = v58
	v59 = loc12
	loc7 = v59
	goto l001059A0
	// succ:  l001059A0
l00105980:
	v60 = loc18
	v61 = 0x64<32>
	v62 = v60 < v61
	loc13 = v62
	v63 = loc18
	v64 = 0x76C<32>
	v65 = v63 + v64
	loc14 = v65
	v66 = loc13
	branch !v66 l00105997
	// succ:  l00105994 l00105997
l00105994:
	v67 = loc14
	goto l00105999
	// succ:  l00105999
l00105997:
	v68 = loc18
	// succ:  l00105999
l00105999:
	loc6 = v68
	v69 = loc6
	loc7 = v69
	// succ:  l001059A0
l001059A0:
	v70 = loc7
	v71 = 0xFFFFF894<32>
	v72 = v70 + v71
	loc15 = v72
	v73 = arg1
	v74 = loc15
	Mem0[v73:word32] = v74
	// succ:  l001059B1
l001059B1:
	v75 = loc21
	Mem0[0x00140030<p32>:word32] = v75
fn00105903_exit:


// fn001059B8
// Return size: 0
void fn001059B8(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001059B8_entry:
	// succ:  l001059B8
l001059B8:
	v12 = Mem0[0x00140030<p32>:word32]
	loc15 = v12
	v13 = Mem0[0x00140030<p32>:word32]
	v14 = 0x10<32>
	v15 = v13 + v14
	Mem0[0x00140030<p32>:word32] = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = Mem0[0x00140034<p32>:word32]
	v18 = v16 >= v17
	branch !v18 l001059D1
	// succ:  l001059CC l001059D1
l001059CC:
	v19 = 0x10<32>
	abortStackOverflow(v19)
	// succ:  l001059D1
l001059D1:
	v20 = loc15
	v21 = 4<32>
	v22 = v20 + v21
	loc6 = v22
	v23 = loc15
	loc10 = v23
	v24 = arg3
	v25 = Mem0[v24:word32]
	loc11 = v25
	v26 = loc10
	v27 = loc11
	Mem0[v26:word32] = v27
	v28 = loc6
	v29 = loc10
	v30 = Mem0[v29:word32]
	Mem0[v28:word32] = v30
	v31 = arg2
	v32 = loc6
	v33 = arg4
	v34 = arg5
	v35 = 4<32>
	v36 = fn00105E65(v31, v32, v33, v34, v35)
	loc12 = v36
	v37 = arg4
	v38 = Mem0[v37:word32]
	loc13 = v38
	v39 = loc13
	v40 = 4<32>
	v41 = v39 & v40
	loc7 = v41
	v42 = loc7
	v43 = 0<32>
	v44 = v42 == v43
	loc8 = v44
	v45 = loc8
	branch !v45 l00105A2C
	// succ:  l00105A1C l00105A2C
l00105A1C:
	v46 = loc12
	v47 = 0xFFFFF894<32>
	v48 = v46 + v47
	loc9 = v48
	v49 = arg1
	v50 = loc9
	Mem0[v49:word32] = v50
	// succ:  l00105A2C
l00105A2C:
	v51 = loc15
	Mem0[0x00140030<p32>:word32] = v51
fn001059B8_exit:


// fn00105A33
// Return size: 0
void fn00105A33(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00105A33_entry:
	// succ:  l00105A33
l00105A33:
	v100 = Mem0[0x00140030<p32>:word32]
	loc102 = v100
	v101 = arg1
	v102 = Mem0[v101:word32]
	loc54 = v102
	v103 = loc54
	v104 = 0<32>
	v105 = v103 == v104
	loc65 = v105
	// succ:  l00105A47
l00105A47:
	v106 = loc65
	branch !v106 l00105A52
	// succ:  l00105A4D l00105A52
l00105A4D:
	v107 = 1<32>
	loc96 = v107
l00105A52:
	v108 = loc54
	v109 = 0xC<32>
	v110 = v108 + v109
	loc76 = v110
	v111 = loc76
	v112 = Mem0[v111:word32]
	loc87 = v112
	v113 = loc54
	v114 = 0x10<32>
	v115 = v113 + v114
	loc98 = v115
	v116 = loc98
	v117 = Mem0[v116:word32]
	loc14 = v117
	v118 = loc87
	v119 = loc14
	v120 = v118 == v119
	loc15 = v120
	v121 = loc15
	v121 = v121
	// succ:  l00105A79 l00105A79
l00105A79:
	v122 = loc54
	v123 = Mem0[v122:word32]
	loc16 = v123
	v124 = loc16
	v125 = 0x24<32>
	v126 = v124 + v125
	loc17 = v126
	v127 = loc17
	v128 = Mem0[v127:word32]
	loc18 = v128
	v129 = loc54
	v130 = loc18
	v131 = 0x1FF<32>
	v132 = v130 & v131
	v133 = 0xB00<32>
	v134 = v132 + v133
fn00105A33_exit:


// fn00105E65
// Return size: 0
word32 fn00105E65(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
fn00105E65_entry:
	// succ:  l00105E65
l00105E65:
	v179 = Mem0[0x00140030<p32>:word32]
	loc181 = v179
	v180 = arg0
	v181 = Mem0[v180:word32]
	loc120 = v181
	v182 = loc120
	v183 = 0<32>
	v184 = v182 == v183
	loc131 = v184
	// succ:  l00105E7B
l00105E7B:
	v185 = loc131
	branch !v185 l00105E87
	// succ:  l00105E82 l00105E87
l00105E82:
	v186 = 1<32>
	loc82 = v186
l00105E87:
	v187 = loc120
	v188 = 0xC<32>
	v189 = v187 + v188
	loc142 = v189
	v190 = loc142
	v191 = Mem0[v190:word32]
	loc153 = v191
	v192 = loc120
	v193 = 0x10<32>
	v194 = v192 + v193
	loc164 = v194
	v195 = loc164
	v196 = Mem0[v195:word32]
	loc23 = v196
	v197 = loc153
	v198 = loc23
	v199 = v197 == v198
	loc34 = v199
	v200 = loc34
	v200 = v200
	// succ:  l00105EB4 l00105EB4
l00105EB4:
	v201 = loc120
	v202 = Mem0[v201:word32]
	loc45 = v202
	v203 = loc45
	v204 = 0x24<32>
	v205 = v203 + v204
	loc56 = v205
	v206 = loc56
	v207 = Mem0[v206:word32]
	loc67 = v207
	v208 = loc120
	v209 = loc67
	v210 = 0x1FF<32>
	v211 = v209 & v210
	v212 = 0xB00<32>
	v213 = v211 + v212
fn00105E65_exit:


// fn00106657
// Return size: 0
void fn00106657(word32 arg0)
fn00106657_entry:
	// succ:  l00106657
l00106657:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 8<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn00106868(v9)
fn00106657_exit:


// fn0010666C
// Return size: 0
void fn0010666C(word32 arg0)
fn0010666C_entry:
	// succ:  l0010666C
l0010666C:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 8<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn00106868(v9)
	v10 = arg0
	fn0011B709(v10)
fn0010666C_exit:


// fn00106686
// Return size: 0
word32 fn00106686(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn00106686_entry:
	// succ:  l00106686
l00106686:
	v30 = Mem0[0x00140030<p32>:word32]
	loc34 = v30
	v31 = Mem0[0x00140030<p32>:word32]
	v32 = 0x70<32>
	v33 = v31 + v32
	Mem0[0x00140030<p32>:word32] = v33
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = Mem0[0x00140034<p32>:word32]
	v36 = v34 >= v35
	branch !v36 l001066A1
	// succ:  l0010669B l001066A1
l0010669B:
	v37 = 0x70<32>
	abortStackOverflow(v37)
	// succ:  l001066A1
l001066A1:
	v38 = loc34
	v39 = 4<32>
	v40 = v38 + v39
	loc30 = v40
	v41 = loc34
	loc31 = v41
	v42 = loc30
	v43 = 0x64<32>
	v44 = v42 + v43
	loc32 = v44
	v45 = loc31
	v46 = loc32
	Mem0[v45:word32] = v46
	v47 = arg0
	v48 = 8<32>
	v49 = v47 + v48
	loc11 = v49
	v50 = loc11
	v51 = loc30
	v52 = loc31
	v53 = arg4
	v54 = arg5
	v55 = arg6
	fn001067BD(v50, v51, v52, v53, v54, v55)
	v56 = loc31
	v57 = Mem0[v56:word32]
	loc12 = v57
	v58 = arg1
	v59 = Mem0[v58:word32]
	loc13 = v59
	v60 = loc30
	loc8 = v60
	v61 = loc13
	loc9 = v61
	// succ:  l001066E9
l001066E9:
	v62 = loc8
	v63 = loc12
	v64 = v62 == v63
	loc14 = v64
	v65 = loc14
	branch !v65 l001066F9
	// succ:  l001066F6 l001066F9
l001066F6:
l001066F9:
	v66 = loc8
	v67 = Mem0[v66:int8]
	v68 = CONVERT(v67, int8, word32)
	loc15 = v68
	v69 = loc9
	v70 = 0<32>
	v71 = v69 == v70
	loc16 = v71
	// succ:  l00106707
l00106707:
	v72 = loc16
	branch !v72 l00106712
	// succ:  l0010670D l00106712
l0010670D:
	v73 = 0<32>
	loc10 = v73
l00106712:
	v74 = loc9
	v75 = 0x18<32>
	v76 = v74 + v75
	loc17 = v76
	v77 = loc17
	v78 = Mem0[v77:word32]
	loc18 = v78
	v79 = loc9
	v80 = 0x1C<32>
	v81 = v79 + v80
	loc19 = v81
	v82 = loc19
	v83 = Mem0[v82:word32]
	loc20 = v83
	v84 = loc18
	v85 = loc20
	v86 = v84 == v85
	loc21 = v86
	v87 = loc21
	v87 = v87
	// succ:  l00106739 l00106739
l00106739:
	v88 = loc9
	v89 = Mem0[v88:word32]
	loc23 = v89
	v90 = loc23
	v91 = 0x34<32>
	v92 = v90 + v91
	loc24 = v92
	v93 = loc24
	v94 = Mem0[v93:word32]
	loc25 = v94
	v95 = loc15
	v96 = 0xFF<32>
	v97 = v95 & v96
	loc26 = v97
	v98 = loc9
	v99 = loc26
	v100 = loc25
	v101 = 0x1FF<32>
	v102 = v100 & v101
	v103 = 0x1B20<32>
	v104 = v102 + v103
fn00106686_exit:


// fn001067BD
// Return size: 0
void fn001067BD(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn001067BD_entry:
	// succ:  l001067BD
l001067BD:
	v15 = Mem0[0x00140030<p32>:word32]
	loc18 = v15
	v16 = Mem0[0x00140030<p32>:word32]
	v17 = 0x10<32>
	v18 = v16 + v17
	Mem0[0x00140030<p32>:word32] = v18
	v19 = Mem0[0x00140030<p32>:word32]
	v20 = Mem0[0x00140034<p32>:word32]
	v21 = v19 >= v20
	branch !v21 l001067D6
	// succ:  l001067D1 l001067D6
l001067D1:
	v22 = 0x10<32>
	abortStackOverflow(v22)
	// succ:  l001067D6
l001067D6:
	v23 = loc18
	loc13 = v23
	v24 = loc13
	v25 = 0x25<32>
	v26 = SLICE(v25, byte, 0)
	Mem0[v24:byte] = v26
	v27 = loc13
	v28 = 1<32>
	v29 = v27 + v28
	loc14 = v29
	v30 = loc14
	v31 = arg4
	v32 = SLICE(v31, byte, 0)
	Mem0[v30:byte] = v32
	v33 = loc13
	v34 = 2<32>
	v35 = v33 + v34
	loc15 = v35
	v36 = loc15
	v37 = arg5
	v38 = SLICE(v37, byte, 0)
	Mem0[v36:byte] = v38
	v39 = loc13
	v40 = 3<32>
	v41 = v39 + v40
	loc16 = v41
	v42 = loc16
	v43 = 0<32>
	v44 = SLICE(v43, byte, 0)
	Mem0[v42:byte] = v44
	v45 = arg5
	v46 = 0x18<32>
	v47 = v45 << v46
	v48 = 0x18<32>
	v49 = v47 >> v48
	v50 = 0<32>
	v51 = v49 == v50
	loc6 = v51
	v52 = loc6
	v53 = v52 == 0<32>
	branch !v53 l0010682C
	// succ:  l0010681D l0010682C
l0010681D:
	v54 = loc14
	v55 = arg5
	v56 = SLICE(v55, byte, 0)
	Mem0[v54:byte] = v56
	v57 = loc15
	v58 = arg4
	v59 = SLICE(v58, byte, 0)
	Mem0[v57:byte] = v59
	// succ:  l0010682C
l0010682C:
	v60 = arg2
	v61 = Mem0[v60:word32]
	loc7 = v61
	v62 = arg1
	loc8 = v62
	v63 = loc7
	v64 = loc8
	v65 = v63 - v64
	loc9 = v65
	v66 = arg0
	v67 = Mem0[v66:word32]
	loc10 = v67
	v68 = arg1
	v69 = loc9
	v70 = loc13
	v71 = arg3
	v72 = loc10
	v73 = _strftime_l(v68, v69, v70, v71, v72)
	loc11 = v73
	v74 = arg1
	v75 = loc11
	v76 = v74 + v75
	loc12 = v76
	v77 = arg2
	v78 = loc12
	Mem0[v77:word32] = v78
	v79 = loc18
	Mem0[0x00140030<p32>:word32] = v79
fn001067BD_exit:


// fn00106868
// Return size: 0
void fn00106868(word32 arg0)
fn00106868_entry:
	// succ:  l00106868
l00106868:
	v14 = Mem0[0x00140030<p32>:word32]
	loc12 = v14
	v15 = arg0
	v16 = Mem0[v15:word32]
	loc1 = v16
	v17 = 0<32>
	Mem0[0x00140048<p32>:word32] = v17
	v18 = 0x17B<32>
	v19 = invoke_i(v18)
	loc3 = v19
	v20 = Mem0[0x00140048<p32>:word32]
	loc4 = v20
	v21 = 0<32>
	Mem0[0x00140048<p32>:word32] = v21
	v22 = loc4
	v23 = 1<32>
	v24 = v22 & v23
	loc5 = v24
	// succ:  l0010688F
l0010688F:
	v25 = loc5
	v26 = v25 == 0<32>
	v26 = v26
	// succ:  l00106896 l00106896
l00106896:
	v27 = loc1
	v28 = loc3
	v29 = v27 == v28
	loc6 = v29
	v30 = loc6
	v31 = v30 == 0<32>
	branch !v31 l001068CB
	// succ:  l001068A2 l001068CB
l001068A2:
	v32 = arg0
	v33 = Mem0[v32:word32]
	loc7 = v33
	v34 = 0<32>
	Mem0[0x00140048<p32>:word32] = v34
	v35 = 0x1A1<32>
	v36 = loc7
	invoke_vi(v35, v36)
	v37 = Mem0[0x00140048<p32>:word32]
	loc8 = v37
	v38 = 0<32>
	Mem0[0x00140048<p32>:word32] = v38
	v39 = loc8
	v40 = 1<32>
	v41 = v39 & v40
	loc9 = v41
	v42 = loc9
	branch !v42 l001068CA
	// succ:  l001068C7 l001068CA
l001068C7:
l001068CA:
	// succ:  l001068CB
l001068CB:
fn00106868_exit:


// fn001068DE
// Return size: 0
void fn001068DE(word32 arg0)
fn001068DE_entry:
	// succ:  l001068DE
l001068DE:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 8<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn00106868(v9)
fn001068DE_exit:


// fn001068F3
// Return size: 0
void fn001068F3(word32 arg0)
fn001068F3_entry:
	// succ:  l001068F3
l001068F3:
	v5 = Mem0[0x00140030<p32>:word32]
	loc3 = v5
	v6 = arg0
	v7 = 8<32>
	v8 = v6 + v7
	loc1 = v8
	v9 = loc1
	fn00106868(v9)
	v10 = arg0
	fn0011B709(v10)
fn001068F3_exit:


// fn0010690D
// Return size: 0
word32 fn0010690D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn0010690D_entry:
	// succ:  l0010690D
l0010690D:
	v30 = Mem0[0x00140030<p32>:word32]
	loc34 = v30
	v31 = Mem0[0x00140030<p32>:word32]
	v32 = 0x1A0<32>
	v33 = v31 + v32
	Mem0[0x00140030<p32>:word32] = v33
	v34 = Mem0[0x00140030<p32>:word32]
	v35 = Mem0[0x00140034<p32>:word32]
	v36 = v34 >= v35
	branch !v36 l00106928
	// succ:  l00106922 l00106928
l00106922:
	v37 = 0x1A0<32>
	abortStackOverflow(v37)
	// succ:  l00106928
l00106928:
	v38 = loc34
	v39 = 8<32>
	v40 = v38 + v39
	loc30 = v40
	v41 = loc34
	loc31 = v41
	v42 = loc30
	v43 = 0x190<32>
	v44 = v42 + v43
	loc32 = v44
	v45 = loc31
	v46 = loc32
	Mem0[v45:word32] = v46
	v47 = arg0
	v48 = 8<32>
	v49 = v47 + v48
	loc12 = v49
	v50 = loc12
	v51 = loc30
	v52 = loc31
	v53 = arg4
	v54 = arg5
	v55 = arg6
	fn00106A39(v50, v51, v52, v53, v54, v55)
	v56 = loc31
	v57 = Mem0[v56:word32]
	loc13 = v57
	v58 = arg1
	v59 = Mem0[v58:word32]
	loc14 = v59
	v60 = loc30
	loc8 = v60
	v61 = loc14
	loc10 = v61
	// succ:  l00106970
l00106970:
	v62 = loc8
	v63 = loc13
	v64 = v62 == v63
	loc15 = v64
	v65 = loc15
	branch !v65 l00106980
	// succ:  l0010697D l00106980
l0010697D:
l00106980:
	v66 = loc8
	v67 = Mem0[v66:word32]
	loc16 = v67
	v68 = loc10
	v69 = 0<32>
	v70 = v68 == v69
	loc17 = v70
	v71 = loc17
	branch !v71 l00106997
	// succ:  l00106992 l00106997
l00106992:
	v72 = 0<32>
	loc11 = v72
l00106997:
	v73 = loc10
	v74 = 0x18<32>
	v75 = v73 + v74
	loc18 = v75
	v76 = loc18
	v77 = Mem0[v76:word32]
	loc19 = v77
	v78 = loc10
	v79 = 0x1C<32>
	v80 = v78 + v79
	loc20 = v80
	v81 = loc20
	v82 = Mem0[v81:word32]
	loc21 = v82
	v83 = loc19
	v84 = loc21
	v85 = v83 == v84
	loc22 = v85
	v86 = loc22
	v86 = v86
	// succ:  l001069BE l001069BE
l001069BE:
	v87 = loc10
	v88 = Mem0[v87:word32]
	loc23 = v88
	v89 = loc23
	v90 = 0x34<32>
	v91 = v89 + v90
	loc24 = v91
	v92 = loc24
	v93 = Mem0[v92:word32]
	loc25 = v93
	v94 = loc10
	v95 = loc16
	v96 = loc25
	v97 = 0x1FF<32>
	v98 = v96 & v97
	v99 = 0x1B20<32>
	v100 = v98 + v99
fn0010690D_exit:


// fn00106A39
// Return size: 0
void fn00106A39(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
fn00106A39_entry:
	// succ:  l00106A39
l00106A39:
	v32 = Mem0[0x00140030<p32>:word32]
	loc35 = v32
	v33 = Mem0[0x00140030<p32>:word32]
	v34 = 0x80<32>
	v35 = v33 + v34
	Mem0[0x00140030<p32>:word32] = v35
	v36 = Mem0[0x00140030<p32>:word32]
	v37 = Mem0[0x00140034<p32>:word32]
	v38 = v36 >= v37
	branch !v38 l00106A54
	// succ:  l00106A4E l00106A54
l00106A4E:
	v39 = 0x80<32>
	abortStackOverflow(v39)
	// succ:  l00106A54
l00106A54:
	v40 = loc35
	v41 = 0x10<32>
	v42 = v40 + v41
	loc30 = v42
	v43 = loc35
	v44 = 0xC<32>
	v45 = v43 + v44
	loc31 = v45
	v46 = loc35
	loc32 = v46
	v47 = loc35
	v48 = 8<32>
	v49 = v47 + v48
	loc33 = v49
	v50 = loc30
	v51 = 0x64<32>
	v52 = v50 + v51
	loc6 = v52
	v53 = loc31
	v54 = loc6
	Mem0[v53:word32] = v54
	v55 = arg0
	v56 = loc30
	v57 = loc31
	v58 = arg3
	v59 = arg4
	v60 = arg5
	fn001067BD(v55, v56, v57, v58, v59, v60)
	v61 = loc32
	v62 = 0<64>
	Mem0[v61:word64] = v62
	v63 = loc33
	v64 = loc30
	Mem0[v63:word32] = v64
	v65 = arg2
	v66 = Mem0[v65:word32]
	loc7 = v66
	v67 = arg1
	loc8 = v67
	v68 = loc7
	v69 = loc8
	v70 = v68 - v69
	loc9 = v70
	v71 = loc9
	v72 = 2<32>
	v73 = v71 >> v72
	loc10 = v73
	v74 = arg0
	v75 = Mem0[v74:word32]
	loc11 = v75
	v76 = loc11
	v77 = fn000DB419(v76)
	loc12 = v77
	v78 = 0<32>
	Mem0[0x00140048<p32>:word32] = v78
	v79 = 0x1A2<32>
	v80 = arg1
	v81 = loc33
	v82 = loc10
	v83 = loc32
	v84 = invoke_iiiii(v79, v80, v81, v82, v83)
	loc13 = v84
	v85 = Mem0[0x00140048<p32>:word32]
	loc14 = v85
	v86 = 0<32>
	Mem0[0x00140048<p32>:word32] = v86
	v87 = loc14
	v88 = 1<32>
	v89 = v87 & v88
	loc15 = v89
	v90 = loc15
	v90 = v90
	// succ:  l00106AE6 l00106AE6
l00106AE6:
	v91 = ___cxa_find_matching_catch_2()
	loc21 = v91
	v92 = Mem0[0x00140094<p32>:word32]
	loc22 = v92
	v93 = loc12
	v94 = 0<32>
	v95 = v93 == v94
	loc23 = v95
	v96 = loc23
	v97 = v96 == 0<32>
	v97 = v97
	// succ:  l00106AFA l00106AFA
l00106AFA:
	v98 = 0<32>
	Mem0[0x00140048<p32>:word32] = v98
	v99 = 0x17E<32>
	v100 = loc12
	v101 = invoke_ii(v99, v100)
fn00106A39_exit:


// fn00106B95
// Return size: 0
void fn00106B95(word32 arg0)
fn00106B95_entry:
	// succ:  l00106B95
l00106B95:
	v9 = Mem0[0x00140030<p32>:word32]
	loc7 = v9
	v10 = 8<32>
	v11 = ___cxa_allocate_exception(v10)
	loc1 = v11
	v12 = 0<32>
	Mem0[0x00140048<p32>:word32] = v12
	v13 = 0x1A3<32>
	v14 = loc1
	v15 = arg0
	invoke_vii(v13, v14, v15)
	v16 = Mem0[0x00140048<p32>:word32]
	loc2 = v16
	v17 = 0<32>
	Mem0[0x00140048<p32>:word32] = v17
	v18 = loc2
	v19 = 1<32>
	v20 = v18 & v19
	loc3 = v20
	v21 = loc3
	branch !v21 l00106BD2
	// succ:  l00106BC1 l00106BD2
l00106BC1:
	v22 = ___cxa_find_matching_catch_2()
	loc4 = v22
	v23 = Mem0[0x00140094<p32>:word32]
	loc5 = v23
	v24 = loc1
	___cxa_free_exception(v24)
	v25 = loc4
	___resumeException(v25)
	goto l00106BDC
	// succ:  l00106BDC
l00106BD2:
	v26 = loc1
	v27 = 0x9E8<32>
	v28 = 0x159<32>
	___cxa_throw(v26, v27, v28)
	// succ:  l00106BDC
l00106BDC:
	// succ:  l00106BDD
l00106BDD:
	return
	// succ:  fn00106B95_exit
fn00106B95_exit:


// fn00106BDF
// Return size: 0
void fn00106BDF(word32 arg0)
fn00106BDF_entry:
	// succ:  l00106BDF
l00106BDF:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn00106BDF_exit:


// fn00106BE8
// Return size: 0
void fn00106BE8(word32 arg0)
fn00106BE8_entry:
	// succ:  l00106BE8
l00106BE8:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn00106BE8_exit:


// fn00106BF6
// Return size: 0
word32 fn00106BF6(word32 arg0)
fn00106BF6_entry:
	// succ:  l00106BF6
l00106BF6:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0x7F<32>
fn00106BF6_exit:


// fn00106C02
// Return size: 0
word32 fn00106C02(word32 arg0)
fn00106C02_entry:
	// succ:  l00106C02
l00106C02:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0x7F<32>
fn00106C02_exit:


// fn00106C0E
// Return size: 0
void fn00106C0E(word32 arg0, word32 arg1)
fn00106C0E_entry:
	// succ:  l00106C0E
l00106C0E:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106C2B
l00106C2B:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106C3B
	// succ:  l00106C38 l00106C3B
l00106C38:
	goto l00106C59
	// succ:  l00106C59
l00106C3B:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106C0E
	// succ:  l00106C0E
l00106C59:
fn00106C0E_exit:


// fn00106C5E
// Return size: 0
void fn00106C5E(word32 arg0, word32 arg1)
fn00106C5E_entry:
	// succ:  l00106C5E
l00106C5E:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106C7B
l00106C7B:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106C8B
	// succ:  l00106C88 l00106C8B
l00106C88:
	goto l00106CA9
	// succ:  l00106CA9
l00106C8B:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106C5E
	// succ:  l00106C5E
l00106CA9:
fn00106C5E_exit:


// fn00106CAE
// Return size: 0
void fn00106CAE(word32 arg0, word32 arg1)
fn00106CAE_entry:
	// succ:  l00106CAE
l00106CAE:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106CCB
l00106CCB:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106CDB
	// succ:  l00106CD8 l00106CDB
l00106CD8:
	goto l00106CF9
	// succ:  l00106CF9
l00106CDB:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106CAE
	// succ:  l00106CAE
l00106CF9:
fn00106CAE_exit:


// fn00106CFE
// Return size: 0
void fn00106CFE(word32 arg0, word32 arg1)
fn00106CFE_entry:
	// succ:  l00106CFE
l00106CFE:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0<64>
	Mem0[v5:word64] = v6
	v7 = arg0
	v8 = 8<32>
	v9 = v7 + v8
	v10 = 0<32>
	Mem0[v9:word32] = v10
	v11 = arg0
	v12 = 1<32>
	v13 = 0x2D<32>
	fn0011BA32(v11, v12, v13)
fn00106CFE_exit:


// fn00106D21
// Return size: 0
word32 fn00106D21(word32 arg0)
fn00106D21_entry:
	// succ:  l00106D21
l00106D21:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0<32>
fn00106D21_exit:


// fn00106D2C
// Return size: 0
void fn00106D2C(word32 arg0, word32 arg1)
fn00106D2C_entry:
	// succ:  l00106D2C
l00106D2C:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0x4000302<32>
	Mem0[v5:word32] = v6
fn00106D2C_exit:


// fn00106D3F
// Return size: 0
void fn00106D3F(word32 arg0, word32 arg1)
fn00106D3F_entry:
	// succ:  l00106D3F
l00106D3F:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0x4000302<32>
	Mem0[v5:word32] = v6
fn00106D3F_exit:


// fn00106D52
// Return size: 0
void fn00106D52(word32 arg0)
fn00106D52_entry:
	// succ:  l00106D52
l00106D52:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn00106D52_exit:


// fn00106D5B
// Return size: 0
void fn00106D5B(word32 arg0)
fn00106D5B_entry:
	// succ:  l00106D5B
l00106D5B:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn00106D5B_exit:


// fn00106D69
// Return size: 0
word32 fn00106D69(word32 arg0)
fn00106D69_entry:
	// succ:  l00106D69
l00106D69:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0x7F<32>
fn00106D69_exit:


// fn00106D75
// Return size: 0
word32 fn00106D75(word32 arg0)
fn00106D75_entry:
	// succ:  l00106D75
l00106D75:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0x7F<32>
fn00106D75_exit:


// fn00106D81
// Return size: 0
void fn00106D81(word32 arg0, word32 arg1)
fn00106D81_entry:
	// succ:  l00106D81
l00106D81:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106D9E
l00106D9E:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106DAE
	// succ:  l00106DAB l00106DAE
l00106DAB:
	goto l00106DCC
	// succ:  l00106DCC
l00106DAE:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106D81
	// succ:  l00106D81
l00106DCC:
fn00106D81_exit:


// fn00106DD1
// Return size: 0
void fn00106DD1(word32 arg0, word32 arg1)
fn00106DD1_entry:
	// succ:  l00106DD1
l00106DD1:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106DEE
l00106DEE:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106DFE
	// succ:  l00106DFB l00106DFE
l00106DFB:
	goto l00106E1C
	// succ:  l00106E1C
l00106DFE:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106DD1
	// succ:  l00106DD1
l00106E1C:
fn00106DD1_exit:


// fn00106E21
// Return size: 0
void fn00106E21(word32 arg0, word32 arg1)
fn00106E21_entry:
	// succ:  l00106E21
l00106E21:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106E3E
l00106E3E:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106E4E
	// succ:  l00106E4B l00106E4E
l00106E4B:
	goto l00106E6C
	// succ:  l00106E6C
l00106E4E:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106E21
	// succ:  l00106E21
l00106E6C:
fn00106E21_exit:


// fn00106E71
// Return size: 0
void fn00106E71(word32 arg0, word32 arg1)
fn00106E71_entry:
	// succ:  l00106E71
l00106E71:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0<64>
	Mem0[v5:word64] = v6
	v7 = arg0
	v8 = 8<32>
	v9 = v7 + v8
	v10 = 0<32>
	Mem0[v9:word32] = v10
	v11 = arg0
	v12 = 1<32>
	v13 = 0x2D<32>
	fn0011BA32(v11, v12, v13)
fn00106E71_exit:


// fn00106E94
// Return size: 0
word32 fn00106E94(word32 arg0)
fn00106E94_entry:
	// succ:  l00106E94
l00106E94:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0<32>
fn00106E94_exit:


// fn00106E9F
// Return size: 0
void fn00106E9F(word32 arg0, word32 arg1)
fn00106E9F_entry:
	// succ:  l00106E9F
l00106E9F:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0x4000302<32>
	Mem0[v5:word32] = v6
fn00106E9F_exit:


// fn00106EB2
// Return size: 0
void fn00106EB2(word32 arg0, word32 arg1)
fn00106EB2_entry:
	// succ:  l00106EB2
l00106EB2:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0x4000302<32>
	Mem0[v5:word32] = v6
fn00106EB2_exit:


// fn00106EC5
// Return size: 0
void fn00106EC5(word32 arg0)
fn00106EC5_entry:
	// succ:  l00106EC5
l00106EC5:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn00106EC5_exit:


// fn00106ECE
// Return size: 0
void fn00106ECE(word32 arg0)
fn00106ECE_entry:
	// succ:  l00106ECE
l00106ECE:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn00106ECE_exit:


// fn00106EDC
// Return size: 0
word32 fn00106EDC(word32 arg0)
fn00106EDC_entry:
	// succ:  l00106EDC
l00106EDC:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0x7FFFFFFF<32>
fn00106EDC_exit:


// fn00106EEB
// Return size: 0
word32 fn00106EEB(word32 arg0)
fn00106EEB_entry:
	// succ:  l00106EEB
l00106EEB:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0x7FFFFFFF<32>
fn00106EEB_exit:


// fn00106EFA
// Return size: 0
void fn00106EFA(word32 arg0, word32 arg1)
fn00106EFA_entry:
	// succ:  l00106EFA
l00106EFA:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106F17
l00106F17:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106F27
	// succ:  l00106F24 l00106F27
l00106F24:
	goto l00106F45
	// succ:  l00106F45
l00106F27:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106EFA
	// succ:  l00106EFA
l00106F45:
fn00106EFA_exit:


// fn00106F4A
// Return size: 0
void fn00106F4A(word32 arg0, word32 arg1)
fn00106F4A_entry:
	// succ:  l00106F4A
l00106F4A:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106F67
l00106F67:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106F77
	// succ:  l00106F74 l00106F77
l00106F74:
	goto l00106F95
	// succ:  l00106F95
l00106F77:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106F4A
	// succ:  l00106F4A
l00106F95:
fn00106F4A_exit:


// fn00106F9A
// Return size: 0
void fn00106F9A(word32 arg0, word32 arg1)
fn00106F9A_entry:
	// succ:  l00106F9A
l00106F9A:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00106FB7
l00106FB7:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00106FC7
	// succ:  l00106FC4 l00106FC7
l00106FC4:
	goto l00106FE5
	// succ:  l00106FE5
l00106FC7:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00106F9A
	// succ:  l00106F9A
l00106FE5:
fn00106F9A_exit:


// fn00106FEA
// Return size: 0
void fn00106FEA(word32 arg0, word32 arg1)
fn00106FEA_entry:
	// succ:  l00106FEA
l00106FEA:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0<64>
	Mem0[v5:word64] = v6
	v7 = arg0
	v8 = 8<32>
	v9 = v7 + v8
	v10 = 0<32>
	Mem0[v9:word32] = v10
	v11 = arg0
	v12 = 1<32>
	v13 = 0x2D<32>
	fn0011C6AF(v11, v12, v13)
fn00106FEA_exit:


// fn0010700D
// Return size: 0
word32 fn0010700D(word32 arg0)
fn0010700D_entry:
	// succ:  l0010700D
l0010700D:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0<32>
fn0010700D_exit:


// fn00107018
// Return size: 0
void fn00107018(word32 arg0, word32 arg1)
fn00107018_entry:
	// succ:  l00107018
l00107018:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0x4000302<32>
	Mem0[v5:word32] = v6
fn00107018_exit:


// fn0010702B
// Return size: 0
void fn0010702B(word32 arg0, word32 arg1)
fn0010702B_entry:
	// succ:  l0010702B
l0010702B:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0x4000302<32>
	Mem0[v5:word32] = v6
fn0010702B_exit:


// fn0010703E
// Return size: 0
void fn0010703E(word32 arg0)
fn0010703E_entry:
	// succ:  l0010703E
l0010703E:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn0010703E_exit:


// fn00107047
// Return size: 0
void fn00107047(word32 arg0)
fn00107047_entry:
	// succ:  l00107047
l00107047:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn00107047_exit:


// fn00107055
// Return size: 0
word32 fn00107055(word32 arg0)
fn00107055_entry:
	// succ:  l00107055
l00107055:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0x7FFFFFFF<32>
fn00107055_exit:


// fn00107064
// Return size: 0
word32 fn00107064(word32 arg0)
fn00107064_entry:
	// succ:  l00107064
l00107064:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0x7FFFFFFF<32>
fn00107064_exit:


// fn00107073
// Return size: 0
void fn00107073(word32 arg0, word32 arg1)
fn00107073_entry:
	// succ:  l00107073
l00107073:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00107090
l00107090:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l001070A0
	// succ:  l0010709D l001070A0
l0010709D:
	goto l001070BE
	// succ:  l001070BE
l001070A0:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00107073
	// succ:  l00107073
l001070BE:
fn00107073_exit:


// fn001070C3
// Return size: 0
void fn001070C3(word32 arg0, word32 arg1)
fn001070C3_entry:
	// succ:  l001070C3
l001070C3:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l001070E0
l001070E0:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l001070F0
	// succ:  l001070ED l001070F0
l001070ED:
	goto l0010710E
	// succ:  l0010710E
l001070F0:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l001070C3
	// succ:  l001070C3
l0010710E:
fn001070C3_exit:


// fn00107113
// Return size: 0
void fn00107113(word32 arg0, word32 arg1)
fn00107113_entry:
	// succ:  l00107113
l00107113:
	v8 = Mem0[0x00140030<p32>:word32]
	loc7 = v8
	v9 = arg0
	v10 = 0<64>
	Mem0[v9:word64] = v10
	v11 = arg0
	v12 = 8<32>
	v13 = v11 + v12
	v14 = 0<32>
	Mem0[v13:word32] = v14
	v15 = 0<32>
	loc2 = v15
	// succ:  l00107130
l00107130:
	v16 = loc2
	v17 = 3<32>
	v18 = v16 == v17
	loc5 = v18
	v19 = loc5
	branch !v19 l00107140
	// succ:  l0010713D l00107140
l0010713D:
	goto l0010715E
	// succ:  l0010715E
l00107140:
	v20 = arg0
	v21 = loc2
	v22 = 2<32>
	v23 = v21 << v22
	v24 = v20 + v23
	loc3 = v24
	v25 = loc3
	v26 = 0<32>
	Mem0[v25:word32] = v26
	v27 = loc2
	v28 = 1<32>
	v29 = v27 + v28
	loc4 = v29
	v30 = loc4
	loc2 = v30
	goto l00107113
	// succ:  l00107113
l0010715E:
fn00107113_exit:


// fn00107163
// Return size: 0
void fn00107163(word32 arg0, word32 arg1)
fn00107163_entry:
	// succ:  l00107163
l00107163:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0<64>
	Mem0[v5:word64] = v6
	v7 = arg0
	v8 = 8<32>
	v9 = v7 + v8
	v10 = 0<32>
	Mem0[v9:word32] = v10
	v11 = arg0
	v12 = 1<32>
	v13 = 0x2D<32>
	fn0011C6AF(v11, v12, v13)
fn00107163_exit:


// fn00107186
// Return size: 0
word32 fn00107186(word32 arg0)
fn00107186_entry:
	// succ:  l00107186
l00107186:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = 0<32>
fn00107186_exit:


// fn00107191
// Return size: 0
void fn00107191(word32 arg0, word32 arg1)
fn00107191_entry:
	// succ:  l00107191
l00107191:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0x4000302<32>
	Mem0[v5:word32] = v6
fn00107191_exit:


// fn001071A4
// Return size: 0
void fn001071A4(word32 arg0, word32 arg1)
fn001071A4_entry:
	// succ:  l001071A4
l001071A4:
	v4 = Mem0[0x00140030<p32>:word32]
	loc3 = v4
	v5 = arg0
	v6 = 0x4000302<32>
	Mem0[v5:word32] = v6
fn001071A4_exit:


// fn001071B7
// Return size: 0
void fn001071B7(word32 arg0)
fn001071B7_entry:
	// succ:  l001071B7
l001071B7:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn001071B7_exit:


// fn001071C0
// Return size: 0
void fn001071C0(word32 arg0)
fn001071C0_entry:
	// succ:  l001071C0
l001071C0:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn001071C0_exit:


// fn001071CE
// Return size: 0
word32 fn001071CE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn001071CE_entry:
	// succ:  l001071CE
l001071CE:
	v151 = Mem0[0x00140030<p32>:word32]
	loc155 = v151
	v152 = Mem0[0x00140030<p32>:word32]
	v153 = 0xF0<32>
	v154 = v152 + v153
	Mem0[0x00140030<p32>:word32] = v154
	v155 = Mem0[0x00140030<p32>:word32]
	v156 = Mem0[0x00140034<p32>:word32]
	v157 = v155 >= v156
	branch !v157 l001071EA
	// succ:  l001071E4 l001071EA
l001071E4:
	v158 = 0xF0<32>
	abortStackOverflow(v158)
	// succ:  l001071EA
l001071EA:
	v159 = loc155
	v160 = 0x18<32>
	v161 = v159 + v160
	loc23 = v161
	v162 = loc155
	loc153 = v162
	v163 = loc155
	v164 = 0x8C<32>
	v165 = v163 + v164
	loc120 = v165
	v166 = loc155
	v167 = 0x10<32>
	v168 = v166 + v167
	loc131 = v168
	v169 = loc155
	v170 = 0xC<32>
	v171 = v169 + v170
	loc142 = v171
	v172 = loc155
	v173 = 8<32>
	v174 = v172 + v173
	loc30 = v174
	v175 = loc155
	v176 = 0x8A<32>
	v177 = v175 + v176
	loc41 = v177
	v178 = loc155
	v179 = 4<32>
	v180 = v178 + v179
	loc52 = v180
	v181 = loc155
	v182 = 0x80<32>
	v183 = v181 + v182
	loc63 = v183
	v184 = loc155
	v185 = 0x1C<32>
	v186 = v184 + v185
	loc64 = v186
	v187 = loc120
	loc65 = v187
	v188 = loc131
	v189 = loc65
	Mem0[v188:word32] = v189
	v190 = loc131
	v191 = 4<32>
	v192 = v190 + v191
	loc66 = v192
	v193 = loc66
	v194 = 0x1A4<32>
	Mem0[v193:word32] = v194
	v195 = loc120
	v196 = 0x64<32>
	v197 = v195 + v196
	loc67 = v197
	v198 = 0<32>
	Mem0[0x00140048<p32>:word32] = v198
	v199 = 0x167<32>
	v200 = arg4
	v201 = invoke_ii(v199, v200)
	loc68 = v201
	v202 = Mem0[0x00140048<p32>:word32]
	loc69 = v202
	v203 = 0<32>
	Mem0[0x00140048<p32>:word32] = v203
	v204 = loc69
	v205 = 1<32>
	v206 = v204 & v205
	loc70 = v206
	v207 = loc70
	branch !v207 l001072A8
	// succ:  l00107281 l001072A8
l00107281:
	v208 = ___cxa_find_matching_catch_2()
	loc95 = v208
	v209 = Mem0[0x00140094<p32>:word32]
	loc96 = v209
	v210 = loc131
	v211 = 0<32>
	Mem0[v210:word32] = v211
	v212 = loc96
	loc19 = v212
	v213 = loc95
	loc21 = v213
	v214 = 0x1A4<32>
	loc57 = v214
	v215 = loc120
	loc58 = v215
	v216 = 0x34<32>
	loc154 = v216
l001072A8:
	v217 = loc30
	v218 = loc68
	Mem0[v217:word32] = v218
	v219 = 0<32>
	Mem0[0x00140048<p32>:word32] = v219
	v220 = 0x164<32>
	v221 = loc30
	v222 = 0x4C70<32>
	v223 = invoke_iii(v220, v221, v222)
	loc71 = v223
	v224 = Mem0[0x00140048<p32>:word32]
	loc72 = v224
	v225 = 0<32>
	Mem0[0x00140048<p32>:word32] = v225
	v226 = loc72
	v227 = 1<32>
	v228 = v226 & v227
	loc73 = v228
	v229 = loc73
	branch !v229 l001072E4
	// succ:  l001072D3 l001072E4
l001072D3:
	v230 = ___cxa_find_matching_catch_2()
	loc97 = v230
	v231 = Mem0[0x00140094<p32>:word32]
	loc98 = v231
	v232 = loc97
	loc17 = v232
	v233 = loc98
	loc18 = v233
l001072E4:
	v234 = loc41
	v235 = 0<32>
	v236 = SLICE(v235, byte, 0)
	Mem0[v234:byte] = v236
	v237 = arg2
	v238 = Mem0[v237:word32]
	loc74 = v238
	v239 = loc52
	v240 = loc74
	Mem0[v239:word32] = v240
	v241 = arg4
	v242 = 4<32>
	v243 = v241 + v242
	loc75 = v243
	v244 = loc75
	v245 = Mem0[v244:word32]
	loc76 = v245
	v246 = 0<32>
	Mem0[0x00140048<p32>:word32] = v246
	v247 = loc23
	v248 = loc52
	v249 = Mem0[v248:word32]
	Mem0[v247:word32] = v249
	v250 = 0x1A5<32>
	v251 = arg1
	v252 = loc23
	v253 = arg3
	v254 = loc30
	v255 = loc76
	v256 = arg5
	v257 = loc41
	v258 = loc71
	v259 = loc131
	v260 = loc142
	v261 = loc67
	v262 = invoke_iiiiiiiiiiii(v250, v251, v252, v253, v254, v255, v256, v257, v258, v259, v260, v261)
	loc77 = v262
	v263 = Mem0[0x00140048<p32>:word32]
	loc78 = v263
	v264 = 0<32>
	Mem0[0x00140048<p32>:word32] = v264
	v265 = loc78
	v266 = 1<32>
	v267 = v265 & v266
	loc79 = v267
	// succ:  l00107343
l00107343:
	v268 = loc79
	branch !v268 l0010734F
	// succ:  l00107349 l0010734F
l00107349:
	v269 = 0xB<32>
	loc154 = v269
l0010734F:
	v270 = loc77
	v270 = v270
	// succ:  l00107355 l00107355
l00107355:
	v271 = loc71
	v272 = Mem0[v271:word32]
	loc80 = v272
	v273 = loc80
	v274 = 0x20<32>
	v275 = v273 + v274
	loc81 = v275
	v276 = loc81
	v277 = Mem0[v276:word32]
	loc82 = v277
	v278 = 0<32>
	Mem0[0x00140048<p32>:word32] = v278
	v279 = loc82
	v280 = loc71
	v281 = 0x3CD8<32>
	v282 = 0x3CE2<32>
	v283 = loc63
	v284 = invoke_iiiii(v279, v280, v281, v282, v283)
fn001071CE_exit:


// fn001078B8
// Return size: 0
word32 fn001078B8(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn001078B8_entry:
	// succ:  l001078B8
l001078B8:
	v125 = Mem0[0x00140030<p32>:word32]
	loc129 = v125
	v126 = Mem0[0x00140030<p32>:word32]
	v127 = 0x90<32>
	v128 = v126 + v127
	Mem0[0x00140030<p32>:word32] = v128
	v129 = Mem0[0x00140030<p32>:word32]
	v130 = Mem0[0x00140034<p32>:word32]
	v131 = v129 >= v130
	branch !v131 l001078D4
	// succ:  l001078CE l001078D4
l001078CE:
	v132 = 0x90<32>
	abortStackOverflow(v132)
	// succ:  l001078D4
l001078D4:
	v133 = loc129
	v134 = 0x18<32>
	v135 = v133 + v134
	loc14 = v135
	v136 = loc129
	v137 = 0x20<32>
	v138 = v136 + v137
	loc95 = v138
	v139 = loc129
	v140 = 0x10<32>
	v141 = v139 + v140
	loc106 = v141
	v142 = loc129
	v143 = 8<32>
	v144 = v142 + v143
	loc117 = v144
	v145 = loc129
	v146 = 4<32>
	v147 = v145 + v146
	loc20 = v147
	v148 = loc129
	v149 = 0x1C<32>
	v150 = v148 + v149
	loc31 = v150
	v151 = loc129
	loc37 = v151
	v152 = loc95
	loc38 = v152
	v153 = loc106
	v154 = loc38
	Mem0[v153:word32] = v154
	v155 = loc106
	v156 = 4<32>
	v157 = v155 + v156
	loc39 = v157
	v158 = loc39
	v159 = 0x1A4<32>
	Mem0[v158:word32] = v159
	v160 = loc95
	v161 = 0x64<32>
	v162 = v160 + v161
	loc40 = v162
	v163 = 0<32>
	Mem0[0x00140048<p32>:word32] = v163
	v164 = 0x167<32>
	v165 = arg4
	v166 = invoke_ii(v164, v165)
	loc41 = v166
	v167 = Mem0[0x00140048<p32>:word32]
	loc42 = v167
	v168 = 0<32>
	Mem0[0x00140048<p32>:word32] = v168
	v169 = loc42
	v170 = 1<32>
	v171 = v169 & v170
	loc43 = v171
	v172 = loc43
	branch !v172 l0010796C
	// succ:  l0010794B l0010796C
l0010794B:
	v173 = ___cxa_find_matching_catch_2()
	loc69 = v173
	v174 = Mem0[0x00140094<p32>:word32]
	loc70 = v174
	v175 = loc106
	v176 = 0<32>
	Mem0[v175:word32] = v176
	v177 = loc70
	loc10 = v177
	v178 = loc69
	loc12 = v178
	v179 = loc95
	loc32 = v179
	v180 = 0x29<32>
	loc128 = v180
l0010796C:
	v181 = loc20
	v182 = loc41
	Mem0[v181:word32] = v182
	v183 = 0<32>
	Mem0[0x00140048<p32>:word32] = v183
	v184 = 0x164<32>
	v185 = loc20
	v186 = 0x4C70<32>
	v187 = invoke_iii(v184, v185, v186)
	loc44 = v187
	v188 = Mem0[0x00140048<p32>:word32]
	loc45 = v188
	v189 = 0<32>
	Mem0[0x00140048<p32>:word32] = v189
	v190 = loc45
	v191 = 1<32>
	v192 = v190 & v191
	loc46 = v192
	v193 = loc46
	branch !v193 l001079A8
	// succ:  l00107997 l001079A8
l00107997:
	v194 = ___cxa_find_matching_catch_2()
	loc71 = v194
	v195 = Mem0[0x00140094<p32>:word32]
	loc72 = v195
	v196 = loc71
	loc8 = v196
	v197 = loc72
	loc9 = v197
l001079A8:
	v198 = loc31
	v199 = 0<32>
	v200 = SLICE(v199, byte, 0)
	Mem0[v198:byte] = v200
	v201 = arg2
	v202 = Mem0[v201:word32]
	loc47 = v202
	v203 = loc37
	v204 = loc47
	Mem0[v203:word32] = v204
	v205 = arg4
	v206 = 4<32>
	v207 = v205 + v206
	loc48 = v207
	v208 = loc48
	v209 = Mem0[v208:word32]
	loc49 = v209
	v210 = loc47
	loc50 = v210
	v211 = 0<32>
	Mem0[0x00140048<p32>:word32] = v211
	v212 = loc14
	v213 = loc37
	v214 = Mem0[v213:word32]
	Mem0[v212:word32] = v214
	v215 = 0x1A5<32>
	v216 = arg1
	v217 = loc14
	v218 = arg3
	v219 = loc20
	v220 = loc49
	v221 = arg5
	v222 = loc31
	v223 = loc44
	v224 = loc106
	v225 = loc117
	v226 = loc40
	v227 = invoke_iiiiiiiiiiii(v215, v216, v217, v218, v219, v220, v221, v222, v223, v224, v225, v226)
	loc51 = v227
	v228 = Mem0[0x00140048<p32>:word32]
	loc52 = v228
	v229 = 0<32>
	Mem0[0x00140048<p32>:word32] = v229
	v230 = loc52
	v231 = 1<32>
	v232 = v230 & v231
	loc53 = v232
	// succ:  l00107A09
l00107A09:
	v233 = loc53
	branch !v233 l00107A15
	// succ:  l00107A0F l00107A15
l00107A0F:
	v234 = 0xD<32>
	loc128 = v234
l00107A15:
	v235 = loc51
	v235 = v235
	// succ:  l00107A19 l00107A19
l00107A19:
	v236 = arg6
	v237 = 0xB<32>
	v238 = v236 + v237
	loc54 = v238
	v239 = loc54
	v240 = Mem0[v239:int8]
	v241 = CONVERT(v240, int8, word32)
	loc55 = v241
	v242 = loc55
	v243 = 0x18<32>
	v244 = v242 << v243
	v245 = 0x18<32>
	v246 = v244 >> v245
	v247 = 0<32>
	v248 = v246 < v247
	loc56 = v248
	v249 = loc56
	branch !v249 l00107A55
	// succ:  l00107A38 l00107A55
l00107A38:
	v250 = arg6
	v251 = Mem0[v250:word32]
	loc57 = v251
	v252 = loc57
	v253 = 0<32>
	v254 = SLICE(v253, byte, 0)
	Mem0[v252:byte] = v254
	v255 = arg6
	v256 = 4<32>
	v257 = v255 + v256
	loc58 = v257
	v258 = loc58
	v259 = 0<32>
	Mem0[v258:word32] = v259
	goto l00107A63
	// succ:  l00107A63
l00107A55:
	v260 = arg6
	v261 = 0<32>
	v262 = SLICE(v261, byte, 0)
	Mem0[v260:byte] = v262
	v263 = loc54
	v264 = 0<32>
	v265 = SLICE(v264, byte, 0)
	Mem0[v263:byte] = v265
	// succ:  l00107A63
l00107A63:
	v266 = loc31
	v267 = Mem0[v266:int8]
	v268 = CONVERT(v267, int8, word32)
	loc59 = v268
	v269 = loc59
	v270 = 0x18<32>
	v271 = v269 << v270
	v272 = 0x18<32>
	v273 = v271 >> v272
	v274 = 0<32>
	v275 = v273 == v274
	loc60 = v275
	v276 = loc60
	v277 = v276 == 0<32>
	branch !v277 l00107AE4
	// succ:  l00107A7D l00107AE4
l00107A7D:
	v278 = loc44
	v279 = Mem0[v278:word32]
	loc61 = v279
	v280 = loc61
	v281 = 0x1C<32>
	v282 = v280 + v281
	loc62 = v282
	v283 = loc62
	v284 = Mem0[v283:word32]
	loc63 = v284
	v285 = 0<32>
	Mem0[0x00140048<p32>:word32] = v285
	v286 = loc63
	v287 = loc44
	v288 = 0x2D<32>
	v289 = invoke_iii(v286, v287, v288)
	loc64 = v289
	v290 = Mem0[0x00140048<p32>:word32]
	loc65 = v290
	v291 = 0<32>
	Mem0[0x00140048<p32>:word32] = v291
	v292 = loc65
	v293 = 1<32>
	v294 = v292 & v293
	loc66 = v294
	v295 = loc66
	branch !v295 l00107ABB
	// succ:  l00107AB3 l00107ABB
l00107AB3:
	v296 = 0xD<32>
	loc128 = v296
l00107ABB:
	v297 = 0<32>
	Mem0[0x00140048<p32>:word32] = v297
	v298 = 0x1A7<32>
	v299 = arg6
	v300 = loc64
	invoke_vii(v298, v299, v300)
	v301 = Mem0[0x00140048<p32>:word32]
	loc67 = v301
	v302 = 0<32>
	Mem0[0x00140048<p32>:word32] = v302
	v303 = loc67
	v304 = 1<32>
	v305 = v303 & v304
	loc68 = v305
	v306 = loc68
	branch !v306 l00107AE3
	// succ:  l00107ADB l00107AE3
l00107ADB:
	v307 = 0xD<32>
	loc128 = v307
l00107AE3:
	// succ:  l00107AE4
l00107AE4:
	v308 = loc44
	v309 = Mem0[v308:word32]
	loc75 = v309
	v310 = loc75
	v311 = 0x1C<32>
	v312 = v310 + v311
	loc76 = v312
	v313 = loc76
	v314 = Mem0[v313:word32]
	loc77 = v314
	v315 = 0<32>
	Mem0[0x00140048<p32>:word32] = v315
	v316 = loc77
	v317 = loc44
	v318 = 0x30<32>
	v319 = invoke_iii(v316, v317, v318)
	loc78 = v319
	v320 = Mem0[0x00140048<p32>:word32]
	loc79 = v320
	v321 = 0<32>
	Mem0[0x00140048<p32>:word32] = v321
	v322 = loc79
	v323 = 1<32>
	v324 = v322 & v323
	loc80 = v324
	v325 = loc80
	branch !v325 l00107B22
	// succ:  l00107B1A l00107B22
l00107B1A:
	v326 = 0xD<32>
	loc128 = v326
l00107B22:
	v327 = loc106
	v328 = Mem0[v327:word32]
	loc81 = v328
	v329 = loc117
	v330 = Mem0[v329:word32]
	loc82 = v330
	v331 = loc82
	v332 = 0xFFFFFFFF<32>
	v333 = v331 + v332
	loc83 = v333
	v334 = loc81
	loc7 = v334
	// succ:  l00107B3D
l00107B3D:
	v335 = loc7
	v336 = loc83
	v337 = v335 <u v336
	loc84 = v337
	v338 = loc84
	v339 = v338 == 0<32>
	branch !v339 l00107B4E
	// succ:  l00107B4B l00107B4E
l00107B4B:
	goto l00107B7D
	// succ:  l00107B7D
l00107B4E:
	v340 = loc7
	v341 = Mem0[v340:int8]
	v342 = CONVERT(v341, int8, word32)
	loc85 = v342
	v343 = loc85
	v344 = 0x18<32>
	v345 = v343 << v344
	v346 = 0x18<32>
	v347 = v345 >> v346
	v348 = loc78
	v349 = 0x18<32>
	v350 = v348 << v349
	v351 = 0x18<32>
	v352 = v350 >> v351
	v353 = v347 == v352
	loc86 = v353
	v354 = loc86
	v355 = v354 == 0<32>
	branch !v355 l00107B70
	// succ:  l00107B6D l00107B70
l00107B6D:
	goto l00107B7D
	// succ:  l00107B7D
l00107B70:
	v356 = loc7
	v357 = 1<32>
	v358 = v356 + v357
	loc87 = v358
	v359 = loc87
	loc7 = v359
	goto l00107B22
	// succ:  l00107B22
l00107B7D:
	v360 = 0<32>
	Mem0[0x00140048<p32>:word32] = v360
	v361 = 0x1A8<32>
	v362 = arg6
	v363 = loc7
	v364 = loc82
	v365 = invoke_iiii(v361, v362, v363, v364)
fn001078B8_exit:


// fn00107E59
// Return size: 0
void fn00107E59(word32 arg0)
fn00107E59_entry:
	// succ:  l00107E59
l00107E59:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn00107E59_exit:


// fn0010B494
// Return size: 0
void fn0010B494(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
fn0010B494_entry:
	// succ:  l0010B494
l0010B494:
	v177 = Mem0[0x00140030<p32>:word32]
	loc184 = v177
	v178 = Mem0[0x00140030<p32>:word32]
	v179 = 0x70<32>
	v180 = v178 + v179
	Mem0[0x00140030<p32>:word32] = v180
	v181 = Mem0[0x00140030<p32>:word32]
	v182 = Mem0[0x00140034<p32>:word32]
	v183 = v181 >= v182
	branch !v183 l0010B4B0
	// succ:  l0010B4AA l0010B4B0
l0010B4AA:
	v184 = 0x70<32>
	abortStackOverflow(v184)
	// succ:  l0010B4B0
l0010B4B0:
	v185 = loc184
	v186 = 0x64<32>
	v187 = v185 + v186
	loc18 = v187
	v188 = loc184
	v189 = 0x58<32>
	v190 = v188 + v189
	loc29 = v190
	v191 = loc184
	v192 = 0x4C<32>
	v193 = v191 + v192
	loc40 = v193
	v194 = loc184
	v195 = 0x40<32>
	v196 = v194 + v195
	loc51 = v196
	v197 = loc184
	v198 = 0x34<32>
	v199 = v197 + v198
	loc62 = v199
	v200 = loc184
	v201 = 0x30<32>
	v202 = v200 + v201
	loc73 = v202
	v203 = loc184
	v204 = 0x24<32>
	v205 = v203 + v204
	loc84 = v205
	v206 = loc184
	v207 = 0x18<32>
	v208 = v206 + v207
	loc91 = v208
	v209 = loc184
	v210 = 0xC<32>
	v211 = v209 + v210
	loc92 = v211
	v212 = loc184
	loc93 = v212
	v213 = arg0
	v213 = v213
	// succ:  l0010B505 l0010B505
l0010B505:
	v214 = arg1
	v215 = 0x5328<32>
	v216 = fn000EA9F7(v214, v215)
	loc94 = v216
	v217 = loc94
	v218 = Mem0[v217:word32]
	loc95 = v218
	v219 = loc95
	v220 = 0x2C<32>
	v221 = v219 + v220
	loc96 = v221
	v222 = loc96
	v223 = Mem0[v222:word32]
	loc97 = v223
	v224 = loc18
	v225 = loc94
	v226 = loc97
	v227 = 0x1FF<32>
	v228 = v226 & v227
	v229 = 0x700<32>
	v230 = v228 + v229
fn0010B494_exit:


// fn0010BEC2
// Return size: 0
void fn0010BEC2(word32 arg0, word32 arg1, word32 arg2)
fn0010BEC2_entry:
	// succ:  l0010BEC2
l0010BEC2:
	v35 = Mem0[0x00140030<p32>:word32]
	loc35 = v35
	v36 = arg0
	v37 = 4<32>
	v38 = v36 + v37
	loc27 = v38
	v39 = loc27
	v40 = Mem0[v39:word32]
	loc28 = v40
	v41 = loc28
	v42 = 0x1A4<32>
	v43 = v41 != v42
	loc29 = v43
	v44 = arg2
	v45 = Mem0[v44:word32]
	loc30 = v45
	v46 = arg0
	v47 = Mem0[v46:word32]
	loc31 = v47
	v48 = loc30
	v49 = loc31
	v50 = v48 - v49
	loc32 = v50
	v51 = loc32
	v52 = 0x7FFFFFFF<32>
	v53 = v51 <u v52
	loc33 = v53
	v54 = loc32
	v55 = 1<32>
	v56 = v54 << v55
	loc7 = v56
	v57 = loc33
	branch !v57 l0010BF0C
	// succ:  l0010BF09 l0010BF0C
l0010BF09:
	v58 = loc7
	goto l0010BF0E
	// succ:  l0010BF0E
l0010BF0C:
	v59 = 0xFFFFFFFF<32>
	// succ:  l0010BF0E
l0010BF0E:
	loc4 = v59
	v60 = loc4
	v61 = 0<32>
	v62 = v60 == v61
	loc8 = v62
	v63 = loc8
	branch !v63 l0010BF1F
	// succ:  l0010BF1C l0010BF1F
l0010BF1C:
	v64 = 1<32>
	goto l0010BF21
	// succ:  l0010BF21
l0010BF1F:
	v65 = loc4
	// succ:  l0010BF21
l0010BF21:
	loc3 = v65
	v66 = arg1
	v67 = Mem0[v66:word32]
	loc9 = v67
	v68 = loc31
	loc10 = v68
	v69 = loc9
	v70 = loc31
	v71 = v69 - v70
	loc11 = v71
	v72 = loc29
	branch !v72 l0010BF3D
	// succ:  l0010BF3A l0010BF3D
l0010BF3A:
	v73 = loc10
	goto l0010BF3F
	// succ:  l0010BF3F
l0010BF3D:
	v74 = 0<32>
	// succ:  l0010BF3F
l0010BF3F:
	loc12 = v74
	v75 = loc12
	v76 = loc3
	v77 = fn000E3E00(v75, v76)
	loc13 = v77
	v78 = loc13
	v79 = 0<32>
	v80 = v78 == v79
	loc14 = v80
	v81 = loc14
	branch !v81 l0010BF5A
	// succ:  l0010BF56 l0010BF5A
l0010BF56:
	fn0011B725()
	// succ:  l0010BF5A
l0010BF5A:
	v82 = loc29
	branch !v82 l0010BF70
	// succ:  l0010BF60 l0010BF70
l0010BF60:
	v83 = loc13
	loc15 = v83
	v84 = arg0
	v85 = loc15
	Mem0[v84:word32] = v85
	v86 = loc13
	loc24 = v86
	goto l0010BFD4
	// succ:  l0010BFD4
l0010BF70:
	v87 = arg0
	v88 = Mem0[v87:word32]
	loc5 = v88
	v89 = loc13
	loc16 = v89
	v90 = arg0
	v91 = loc16
	Mem0[v90:word32] = v91
	v92 = loc5
	v93 = 0<32>
	v94 = v92 == v93
	loc17 = v94
	v95 = loc17
	branch !v95 l0010BF92
	// succ:  l0010BF8D l0010BF92
l0010BF8D:
	v96 = loc13
	loc24 = v96
	goto l0010BFD3
	// succ:  l0010BFD3
l0010BF92:
	v97 = loc27
	v98 = Mem0[v97:word32]
	loc18 = v98
	v99 = 0<32>
	Mem0[0x00140048<p32>:word32] = v99
	v100 = loc18
	v101 = loc5
	invoke_vi(v100, v101)
	v102 = Mem0[0x00140048<p32>:word32]
	loc19 = v102
	v103 = 0<32>
	Mem0[0x00140048<p32>:word32] = v103
	v104 = loc19
	v105 = 1<32>
	v106 = v104 & v105
	loc20 = v106
	v107 = loc20
	branch !v107 l0010BFC5
	// succ:  l0010BFB6 l0010BFC5
l0010BFB6:
	v108 = 0<32>
	v109 = ___cxa_find_matching_catch_3(v108)
	loc21 = v109
	v110 = Mem0[0x00140094<p32>:word32]
	loc22 = v110
	v111 = loc21
	fn000D0E65(v111)
	goto l0010BFD2
	// succ:  l0010BFD2
l0010BFC5:
	v112 = arg0
	v113 = Mem0[v112:word32]
	loc6 = v113
	v114 = loc6
	loc24 = v114
	goto l0010BFD5
	// succ:  l0010BFD5
l0010BFD2:
	// succ:  l0010BFD3
l0010BFD3:
	// succ:  l0010BFD4
l0010BFD4:
	// succ:  l0010BFD5
l0010BFD5:
	v115 = loc27
	v116 = 0x1AD<32>
	Mem0[v115:word32] = v116
	v117 = loc24
	v118 = loc11
	v119 = v117 + v118
	loc23 = v119
	v120 = arg1
	v121 = loc23
	Mem0[v120:word32] = v121
	v122 = arg0
	v123 = Mem0[v122:word32]
	loc25 = v123
	v124 = loc25
	v125 = loc3
	v126 = v124 + v125
	loc26 = v126
	v127 = arg2
	v128 = loc26
	Mem0[v127:word32] = v128
fn0010BEC2_exit:


// fn0010C004
// Return size: 0
void fn0010C004(word32 arg0, word32 arg1, word32 arg2)
fn0010C004_entry:
	// succ:  l0010C004
l0010C004:
	v37 = Mem0[0x00140030<p32>:word32]
	loc37 = v37
	v38 = arg0
	v39 = 4<32>
	v40 = v38 + v39
	loc27 = v40
	v41 = loc27
	v42 = Mem0[v41:word32]
	loc29 = v42
	v43 = loc29
	v44 = 0x1A4<32>
	v45 = v43 != v44
	loc30 = v45
	v46 = arg2
	v47 = Mem0[v46:word32]
	loc31 = v47
	v48 = arg0
	v49 = Mem0[v48:word32]
	loc32 = v49
	v50 = loc31
	v51 = loc32
	v52 = v50 - v51
	loc33 = v52
	v53 = loc33
	v54 = 0x7FFFFFFF<32>
	v55 = v53 <u v54
	loc34 = v55
	v56 = loc33
	v57 = 1<32>
	v58 = v56 << v57
	loc7 = v58
	v59 = loc34
	branch !v59 l0010C04E
	// succ:  l0010C04B l0010C04E
l0010C04B:
	v60 = loc7
	goto l0010C050
	// succ:  l0010C050
l0010C04E:
	v61 = 0xFFFFFFFF<32>
	// succ:  l0010C050
l0010C050:
	loc4 = v61
	v62 = loc4
	v63 = 0<32>
	v64 = v62 == v63
	loc8 = v64
	v65 = loc8
	branch !v65 l0010C061
	// succ:  l0010C05E l0010C061
l0010C05E:
	v66 = 4<32>
	goto l0010C063
	// succ:  l0010C063
l0010C061:
	v67 = loc4
	// succ:  l0010C063
l0010C063:
	loc3 = v67
	v68 = arg1
	v69 = Mem0[v68:word32]
	loc9 = v69
	v70 = loc9
	v71 = loc32
	v72 = v70 - v71
	loc10 = v72
	v73 = loc10
	v74 = 2<32>
	v75 = v73 >> v74
	loc11 = v75
	v76 = loc32
	loc35 = v76
	v77 = loc30
	branch !v77 l0010C086
	// succ:  l0010C083 l0010C086
l0010C083:
	v78 = loc35
	goto l0010C088
	// succ:  l0010C088
l0010C086:
	v79 = 0<32>
	// succ:  l0010C088
l0010C088:
	loc12 = v79
	v80 = loc12
	v81 = loc3
	v82 = fn000E3E00(v80, v81)
	loc13 = v82
	v83 = loc13
	v84 = 0<32>
	v85 = v83 == v84
	loc14 = v85
	v86 = loc14
	branch !v86 l0010C0A3
	// succ:  l0010C09F l0010C0A3
l0010C09F:
	fn0011B725()
	// succ:  l0010C0A3
l0010C0A3:
	v87 = loc30
	branch !v87 l0010C0B9
	// succ:  l0010C0A9 l0010C0B9
l0010C0A9:
	v88 = loc13
	loc15 = v88
	v89 = arg0
	v90 = loc15
	Mem0[v89:word32] = v90
	v91 = loc13
	loc25 = v91
	goto l0010C11D
	// succ:  l0010C11D
l0010C0B9:
	v92 = arg0
	v93 = Mem0[v92:word32]
	loc5 = v93
	v94 = loc13
	loc16 = v94
	v95 = arg0
	v96 = loc16
	Mem0[v95:word32] = v96
	v97 = loc5
	v98 = 0<32>
	v99 = v97 == v98
	loc17 = v99
	v100 = loc17
	branch !v100 l0010C0DB
	// succ:  l0010C0D6 l0010C0DB
l0010C0D6:
	v101 = loc13
	loc25 = v101
	goto l0010C11C
	// succ:  l0010C11C
l0010C0DB:
	v102 = loc27
	v103 = Mem0[v102:word32]
	loc18 = v103
	v104 = 0<32>
	Mem0[0x00140048<p32>:word32] = v104
	v105 = loc18
	v106 = loc5
	invoke_vi(v105, v106)
	v107 = Mem0[0x00140048<p32>:word32]
	loc19 = v107
	v108 = 0<32>
	Mem0[0x00140048<p32>:word32] = v108
	v109 = loc19
	v110 = 1<32>
	v111 = v109 & v110
	loc20 = v111
	v112 = loc20
	branch !v112 l0010C10E
	// succ:  l0010C0FF l0010C10E
l0010C0FF:
	v113 = 0<32>
	v114 = ___cxa_find_matching_catch_3(v113)
	loc21 = v114
	v115 = Mem0[0x00140094<p32>:word32]
	loc22 = v115
	v116 = loc21
	fn000D0E65(v116)
	goto l0010C11B
	// succ:  l0010C11B
l0010C10E:
	v117 = arg0
	v118 = Mem0[v117:word32]
	loc6 = v118
	v119 = loc6
	loc25 = v119
	goto l0010C11E
	// succ:  l0010C11E
l0010C11B:
	// succ:  l0010C11C
l0010C11C:
	// succ:  l0010C11D
l0010C11D:
	// succ:  l0010C11E
l0010C11E:
	v120 = loc27
	v121 = 0x1AD<32>
	Mem0[v120:word32] = v121
	v122 = loc3
	v123 = 2<32>
	v124 = v122 >>u v123
	loc23 = v124
	v125 = loc25
	v126 = loc11
	v127 = 2<32>
	v128 = v126 << v127
	v129 = v125 + v128
	loc24 = v129
	v130 = arg1
	v131 = loc24
	Mem0[v130:word32] = v131
	v132 = arg0
	v133 = Mem0[v132:word32]
	loc26 = v133
	v134 = loc26
	v135 = loc23
	v136 = 2<32>
	v137 = v135 << v136
	v138 = v134 + v137
	loc28 = v138
	v139 = arg2
	v140 = loc28
	Mem0[v139:word32] = v140
fn0010C004_exit:


// fn0010C15A
// Return size: 0
void fn0010C15A(word32 arg0)
fn0010C15A_entry:
	// succ:  l0010C15A
l0010C15A:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
fn0010C15A_exit:


// fn0010C163
// Return size: 0
void fn0010C163(word32 arg0)
fn0010C163_entry:
	// succ:  l0010C163
l0010C163:
	v4 = Mem0[0x00140030<p32>:word32]
	loc2 = v4
	v5 = arg0
	fn0011B709(v5)
fn0010C163_exit:


// fn0010C171
// Return size: 0
word32 fn0010C171(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn0010C171_entry:
	// succ:  l0010C171
l0010C171:
	v157 = Mem0[0x00140030<p32>:word32]
	loc161 = v157
	v158 = Mem0[0x00140030<p32>:word32]
	v159 = 0x250<32>
	v160 = v158 + v159
	Mem0[0x00140030<p32>:word32] = v160
	v161 = Mem0[0x00140030<p32>:word32]
	v162 = Mem0[0x00140034<p32>:word32]
	v163 = v161 >= v162
	branch !v163 l0010C18D
	// succ:  l0010C187 l0010C18D
l0010C187:
	v164 = 0x250<32>
	abortStackOverflow(v164)
	// succ:  l0010C18D
l0010C18D:
	v165 = loc161
	v166 = 0x1D8<32>
	v167 = v165 + v166
	loc25 = v167
	v168 = loc161
	loc159 = v168
	v169 = loc161
	v170 = 0x48<32>
	v171 = v169 + v170
	loc125 = v171
	v172 = loc161
	v173 = 0x40<32>
	v174 = v172 + v173
	loc136 = v174
	v175 = loc161
	v176 = 0x38<32>
	v177 = v175 + v176
	loc147 = v177
	v178 = loc161
	v179 = 0x34<32>
	v180 = v178 + v179
	loc32 = v180
	v181 = loc161
	v182 = 0x240<32>
	v183 = v181 + v182
	loc43 = v183
	v184 = loc161
	v185 = 0x30<32>
	v186 = v184 + v185
	loc54 = v186
	v187 = loc161
	v188 = 8<32>
	v189 = v187 + v188
	loc65 = v189
	v190 = loc161
	v191 = 0x1DC<32>
	v192 = v190 + v191
	loc69 = v192
	v193 = loc125
	loc70 = v193
	v194 = loc136
	v195 = loc70
	Mem0[v194:word32] = v195
	v196 = loc136
	v197 = 4<32>
	v198 = v196 + v197
	loc71 = v198
	v199 = loc71
	v200 = 0x1A4<32>
	Mem0[v199:word32] = v200
	v201 = loc125
	v202 = 0x190<32>
	v203 = v201 + v202
	loc72 = v203
	v204 = 0<32>
	Mem0[0x00140048<p32>:word32] = v204
	v205 = 0x167<32>
	v206 = arg4
	v207 = invoke_ii(v205, v206)
	loc73 = v207
	v208 = Mem0[0x00140048<p32>:word32]
	loc74 = v208
	v209 = 0<32>
	Mem0[0x00140048<p32>:word32] = v209
	v210 = loc74
	v211 = 1<32>
	v212 = v210 & v211
	loc75 = v212
	v213 = loc75
	branch !v213 l0010C24D
	// succ:  l0010C226 l0010C24D
l0010C226:
	v214 = ___cxa_find_matching_catch_2()
	loc101 = v214
	v215 = Mem0[0x00140094<p32>:word32]
	loc102 = v215
	v216 = loc136
	v217 = 0<32>
	Mem0[v216:word32] = v217
	v218 = loc102
	loc21 = v218
	v219 = loc101
	loc23 = v219
	v220 = 0x1A4<32>
	loc61 = v220
	v221 = loc125
	loc62 = v221
	v222 = 0x36<32>
	loc160 = v222
l0010C24D:
	v223 = loc32
	v224 = loc73
	Mem0[v223:word32] = v224
	v225 = 0<32>
	Mem0[0x00140048<p32>:word32] = v225
	v226 = 0x164<32>
	v227 = loc32
	v228 = 0x4C90<32>
	v229 = invoke_iii(v226, v227, v228)
	loc76 = v229
	v230 = Mem0[0x00140048<p32>:word32]
	loc77 = v230
	v231 = 0<32>
	Mem0[0x00140048<p32>:word32] = v231
	v232 = loc77
	v233 = 1<32>
	v234 = v232 & v233
	loc78 = v234
	v235 = loc78
	branch !v235 l0010C289
	// succ:  l0010C278 l0010C289
l0010C278:
	v236 = ___cxa_find_matching_catch_2()
	loc103 = v236
	v237 = Mem0[0x00140094<p32>:word32]
	loc104 = v237
	v238 = loc103
	loc19 = v238
	v239 = loc104
	loc20 = v239
l0010C289:
	v240 = loc43
	v241 = 0<32>
	v242 = SLICE(v241, byte, 0)
	Mem0[v240:byte] = v242
	v243 = arg2
	v244 = Mem0[v243:word32]
	loc79 = v244
	v245 = loc54
	v246 = loc79
	Mem0[v245:word32] = v246
	v247 = arg4
	v248 = 4<32>
	v249 = v247 + v248
	loc80 = v249
	v250 = loc80
	v251 = Mem0[v250:word32]
	loc81 = v251
	v252 = 0<32>
	Mem0[0x00140048<p32>:word32] = v252
	v253 = loc25
	v254 = loc54
	v255 = Mem0[v254:word32]
	Mem0[v253:word32] = v255
	v256 = 0x1AE<32>
	v257 = arg1
	v258 = loc25
	v259 = arg3
	v260 = loc32
	v261 = loc81
	v262 = arg5
	v263 = loc43
	v264 = loc76
	v265 = loc136
	v266 = loc147
	v267 = loc72
	v268 = invoke_iiiiiiiiiiii(v256, v257, v258, v259, v260, v261, v262, v263, v264, v265, v266, v267)
	loc82 = v268
	v269 = Mem0[0x00140048<p32>:word32]
	loc83 = v269
	v270 = 0<32>
	Mem0[0x00140048<p32>:word32] = v270
	v271 = loc83
	v272 = 1<32>
	v273 = v271 & v272
	loc84 = v273
	// succ:  l0010C2E8
l0010C2E8:
	v274 = loc84
	branch !v274 l0010C2F4
	// succ:  l0010C2EE l0010C2F4
l0010C2EE:
	v275 = 0xB<32>
	loc160 = v275
l0010C2F4:
	v276 = loc82
	v276 = v276
	// succ:  l0010C2FA l0010C2FA
l0010C2FA:
	v277 = loc76
	v278 = Mem0[v277:word32]
	loc85 = v278
	v279 = loc85
	v280 = 0x30<32>
	v281 = v279 + v280
	loc86 = v281
	v282 = loc86
	v283 = Mem0[v282:word32]
	loc87 = v283
	v284 = 0<32>
	Mem0[0x00140048<p32>:word32] = v284
	v285 = loc87
	v286 = loc76
	v287 = 0x3D56<32>
	v288 = 0x3D60<32>
	v289 = loc65
	v290 = invoke_iiiii(v285, v286, v287, v288, v289)
fn0010C171_exit:


// fn0010C889
// Return size: 0
word32 fn0010C889(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
fn0010C889_entry:
	// succ:  l0010C889
l0010C889:
	v130 = Mem0[0x00140030<p32>:word32]
	loc134 = v130
	v131 = Mem0[0x00140030<p32>:word32]
	v132 = 0x1B0<32>
	v133 = v131 + v132
	Mem0[0x00140030<p32>:word32] = v133
	v134 = Mem0[0x00140030<p32>:word32]
	v135 = Mem0[0x00140034<p32>:word32]
	v136 = v134 >= v135
	branch !v136 l0010C8A5
	// succ:  l0010C89F l0010C8A5
l0010C89F:
	v137 = 0x1B0<32>
	abortStackOverflow(v137)
	// succ:  l0010C8A5
l0010C8A5:
	v138 = loc134
	v139 = 0x1A8<32>
	v140 = v138 + v139
	loc16 = v140
	v141 = loc134
	v142 = 0x18<32>
	v143 = v141 + v142
	loc99 = v143
	v144 = loc134
	v145 = 0x10<32>
	v146 = v144 + v145
	loc110 = v146
	v147 = loc134
	v148 = 8<32>
	v149 = v147 + v148
	loc121 = v149
	v150 = loc134
	v151 = 4<32>
	v152 = v150 + v151
	loc22 = v152
	v153 = loc134
	v154 = 0x1AC<32>
	v155 = v153 + v154
	loc33 = v155
	v156 = loc134
	loc41 = v156
	v157 = loc99
	loc42 = v157
	v158 = loc110
	v159 = loc42
	Mem0[v158:word32] = v159
	v160 = loc110
	v161 = 4<32>
	v162 = v160 + v161
	loc43 = v162
	v163 = loc43
	v164 = 0x1A4<32>
	Mem0[v163:word32] = v164
	v165 = loc99
	v166 = 0x190<32>
	v167 = v165 + v166
	loc44 = v167
	v168 = 0<32>
	Mem0[0x00140048<p32>:word32] = v168
	v169 = 0x167<32>
	v170 = arg4
	v171 = invoke_ii(v169, v170)
	loc45 = v171
	v172 = Mem0[0x00140048<p32>:word32]
	loc46 = v172
	v173 = 0<32>
	Mem0[0x00140048<p32>:word32] = v173
	v174 = loc46
	v175 = 1<32>
	v176 = v174 & v175
	loc47 = v176
	v177 = loc47
	branch !v177 l0010C93F
	// succ:  l0010C91E l0010C93F
l0010C91E:
	v178 = ___cxa_find_matching_catch_2()
	loc74 = v178
	v179 = Mem0[0x00140094<p32>:word32]
	loc75 = v179
	v180 = loc110
	v181 = 0<32>
	Mem0[v180:word32] = v181
	v182 = loc75
	loc12 = v182
	v183 = loc74
	loc14 = v183
	v184 = loc99
	loc35 = v184
	v185 = 0x2B<32>
	loc133 = v185
l0010C93F:
	v186 = loc22
	v187 = loc45
	Mem0[v186:word32] = v187
	v188 = 0<32>
	Mem0[0x00140048<p32>:word32] = v188
	v189 = 0x164<32>
	v190 = loc22
	v191 = 0x4C90<32>
	v192 = invoke_iii(v189, v190, v191)
	loc48 = v192
	v193 = Mem0[0x00140048<p32>:word32]
	loc49 = v193
	v194 = 0<32>
	Mem0[0x00140048<p32>:word32] = v194
	v195 = loc49
	v196 = 1<32>
	v197 = v195 & v196
	loc50 = v197
	v198 = loc50
	branch !v198 l0010C97B
	// succ:  l0010C96A l0010C97B
l0010C96A:
	v199 = ___cxa_find_matching_catch_2()
	loc76 = v199
	v200 = Mem0[0x00140094<p32>:word32]
	loc77 = v200
	v201 = loc76
	loc10 = v201
	v202 = loc77
	loc11 = v202
l0010C97B:
	v203 = loc33
	v204 = 0<32>
	v205 = SLICE(v204, byte, 0)
	Mem0[v203:byte] = v205
	v206 = arg2
	v207 = Mem0[v206:word32]
	loc51 = v207
	v208 = loc41
	v209 = loc51
	Mem0[v208:word32] = v209
	v210 = arg4
	v211 = 4<32>
	v212 = v210 + v211
	loc52 = v212
	v213 = loc52
	v214 = Mem0[v213:word32]
	loc53 = v214
	v215 = loc51
	loc54 = v215
	v216 = 0<32>
	Mem0[0x00140048<p32>:word32] = v216
	v217 = loc16
	v218 = loc41
	v219 = Mem0[v218:word32]
	Mem0[v217:word32] = v219
	v220 = 0x1AE<32>
	v221 = arg1
	v222 = loc16
	v223 = arg3
	v224 = loc22
	v225 = loc53
	v226 = arg5
	v227 = loc33
	v228 = loc48
	v229 = loc110
	v230 = loc121
	v231 = loc44
	v232 = invoke_iiiiiiiiiiii(v220, v221, v222, v223, v224, v225, v226, v227, v228, v229, v230, v231)
	loc55 = v232
	v233 = Mem0[0x00140048<p32>:word32]
	loc56 = v233
	v234 = 0<32>
	Mem0[0x00140048<p32>:word32] = v234
	v235 = loc56
	v236 = 1<32>
	v237 = v235 & v236
	loc57 = v237
	// succ:  l0010C9DC
l0010C9DC:
	v238 = loc57
	branch !v238 l0010C9E8
	// succ:  l0010C9E2 l0010C9E8
l0010C9E2:
	v239 = 0xD<32>
	loc133 = v239
l0010C9E8:
	v240 = loc55
	v240 = v240
	// succ:  l0010C9EC l0010C9EC
l0010C9EC:
	v241 = arg6
	v242 = 8<32>
	v243 = v241 + v242
	loc58 = v243
	v244 = loc58
	v245 = 3<32>
	v246 = v244 + v245
	loc59 = v246
	v247 = loc59
	v248 = Mem0[v247:int8]
	v249 = CONVERT(v248, int8, word32)
	loc60 = v249
	v250 = loc60
	v251 = 0x18<32>
	v252 = v250 << v251
	v253 = 0x18<32>
	v254 = v252 >> v253
	v255 = 0<32>
	v256 = v254 < v255
	loc61 = v256
	v257 = loc61
	branch !v257 l0010CA2F
	// succ:  l0010CA12 l0010CA2F
l0010CA12:
	v258 = arg6
	v259 = Mem0[v258:word32]
	loc62 = v259
	v260 = loc62
	v261 = 0<32>
	Mem0[v260:word32] = v261
	v262 = arg6
	v263 = 4<32>
	v264 = v262 + v263
	loc63 = v264
	v265 = loc63
	v266 = 0<32>
	Mem0[v265:word32] = v266
	goto l0010CA3D
	// succ:  l0010CA3D
l0010CA2F:
	v267 = arg6
	v268 = 0<32>
	Mem0[v267:word32] = v268
	v269 = loc59
	v270 = 0<32>
	v271 = SLICE(v270, byte, 0)
	Mem0[v269:byte] = v271
	// succ:  l0010CA3D
l0010CA3D:
	v272 = loc33
	v273 = Mem0[v272:int8]
	v274 = CONVERT(v273, int8, word32)
	loc64 = v274
	v275 = loc64
	v276 = 0x18<32>
	v277 = v275 << v276
	v278 = 0x18<32>
	v279 = v277 >> v278
	v280 = 0<32>
	v281 = v279 == v280
	loc65 = v281
	v282 = loc65
	v283 = v282 == 0<32>
	branch !v283 l0010CABE
	// succ:  l0010CA57 l0010CABE
l0010CA57:
	v284 = loc48
	v285 = Mem0[v284:word32]
	loc66 = v285
	v286 = loc66
	v287 = 0x2C<32>
	v288 = v286 + v287
	loc67 = v288
	v289 = loc67
	v290 = Mem0[v289:word32]
	loc68 = v290
	v291 = 0<32>
	Mem0[0x00140048<p32>:word32] = v291
	v292 = loc68
	v293 = loc48
	v294 = 0x2D<32>
	v295 = invoke_iii(v292, v293, v294)
	loc69 = v295
	v296 = Mem0[0x00140048<p32>:word32]
	loc70 = v296
	v297 = 0<32>
	Mem0[0x00140048<p32>:word32] = v297
	v298 = loc70
	v299 = 1<32>
	v300 = v298 & v299
	loc71 = v300
	v301 = loc71
	branch !v301 l0010CA95
	// succ:  l0010CA8D l0010CA95
l0010CA8D:
	v302 = 0xD<32>
	loc133 = v302
l0010CA95:
	v303 = 0<32>
	Mem0[0x00140048<p32>:word32] = v303
	v304 = 0x1AF<32>
	v305 = arg6
	v306 = loc69
	invoke_vii(v304, v305, v306)
	v307 = Mem0[0x00140048<p32>:word32]
	loc72 = v307
	v308 = 0<32>
	Mem0[0x00140048<p32>:word32] = v308
	v309 = loc72
	v310 = 1<32>
	v311 = v309 & v310
	loc73 = v311
	v312 = loc73
	branch !v312 l0010CABD
	// succ:  l0010CAB5 l0010CABD
l0010CAB5:
	v313 = 0xD<32>
	loc133 = v313
l0010CABD:
	// succ:  l0010CABE
l0010CABE:
	v314 = loc48
	v315 = Mem0[v314:word32]
	loc80 = v315
	v316 = loc80
	v317 = 0x2C<32>
	v318 = v316 + v317
	loc81 = v318
	v319 = loc81
	v320 = Mem0[v319:word32]
	loc82 = v320
	v321 = 0<32>
	Mem0[0x00140048<p32>:word32] = v321
	v322 = loc82
	v323 = loc48
	v324 = 0x30<32>
	v325 = invoke_iii(v322, v323, v324)
	loc83 = v325
	v326 = Mem0[0x00140048<p32>:word32]
	loc84 = v326
	v327 = 0<32>
	Mem0[0x00140048<p32>:word32] = v327
	v328 = loc84
	v329 = 1<32>
	v330 = v328 & v329
	loc85 = v330
	v331 = loc85
	branch !v331 l0010CAFC
	// succ:  l0010CAF4 l0010CAFC
l0010CAF4:
	v332 = 0xD<32>
	loc133 = v332
l0010CAFC:
	v333 = loc110
	v334 = Mem0[v333:word32]
	loc86 = v334
	v335 = loc121
	v336 = Mem0[v335:word32]
	loc87 = v336
	v337 = loc87
	v338 = 0xFFFFFFFC<32>
	v339 = v337 + v338
	loc88 = v339
	v340 = loc86
	loc7 = v340
	// succ:  l0010CB17
l0010CB17:
	v341 = loc7
	v342 = loc88
	v343 = v341 <u v342
	loc89 = v343
	v344 = loc89
	v345 = v344 == 0<32>
	branch !v345 l0010CB28
	// succ:  l0010CB25 l0010CB28
l0010CB25:
	goto l0010CB4B
	// succ:  l0010CB4B
l0010CB28:
	v346 = loc7
	v347 = Mem0[v346:word32]
	loc90 = v347
	v348 = loc90
	v349 = loc83
	v350 = v348 == v349
	loc91 = v350
	v351 = loc91
	v352 = v351 == 0<32>
	branch !v352 l0010CB3E
	// succ:  l0010CB3B l0010CB3E
l0010CB3B:
	goto l0010CB4B
	// succ:  l0010CB4B
l0010CB3E:
	v353 = loc7
	v354 = 4<32>
	v355 = v353 + v354
	loc92 = v355
	v356 = loc92
	loc7 = v356
	goto l0010CAFC
	// succ:  l0010CAFC
l0010CB4B:
	v357 = 0<32>
	Mem0[0x00140048<p32>:word32] = v357
	v358 = 0x1B0<32>
	v359 = arg6
	v360 = loc7
	v361 = loc87
	v362 = invoke_iiii(v358, v359, v360, v361)
fn0010C889_exit:


