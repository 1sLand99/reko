// fn0218
// Return size: 0
void fn0218()
fn0218_entry:
	// succ:  l0218
l0218:
	sp = fp
	r1 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r0 = Mem0[0x1DAA:word16]
	NZ = cond(r0)
	V = false
	branch Test(EQ,Z) l0222
	// succ:  l0220 l0222
l0220:
	call r0 (retsize: 2; FPU: 2;)
	// succ:  l0222
l0222:
	sp = Mem0[0x0022:word16]
	NZ = cond(sp)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v15)
	V = false
	r0 = 0x0592
	NZ = cond(r0)
	V = false
	FnSubfn(r0)
	r5 = Mem0[0x0028:word16]
	NZ = cond(r5)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v18)
	V = false
	v19 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	v20 = v19
	v20 = v20 & v20
	NZ = cond(v20)
	C = false
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x1000
	NZ = cond(v22)
	V = false
	r0 = sp
	NZ = cond(r0)
	V = false
	sp = sp - 0x0010
	NZVC = cond(sp)
	Mem0[sp + 0x0012:word16] = sp
	NZ = cond(v24)
	V = false
	FnSubfn(r0)
	r4 = Mem0[sp + 0x0002:word16]
	NZ = cond(r4)
	V = false
	v27 = Mem0[0x1DAA:word16]
	v27 = v27 & v27
	NZ = cond(v27)
	C = false
	V = false
	branch Test(NE,Z) l028E
	// succ:  l0252 l028E
l0252:
	r0 = 0x03B8
	NZ = cond(r0)
	V = false
	FnSubfn(r0)
	r0 = r0 & 0x1000
	NZ = cond(r0)
	V = false
	branch Test(EQ,Z) l0264
	// succ:  l025E l0264
l025E:
	Mem0[0x001E:word16] = 0xF000
	NZ = cond(v28)
	V = false
	// succ:  l0264
l0264:
	r0 = r0 & 0x0200
	NZ = cond(r0)
	V = false
	branch Test(NE,Z) l028E
	// succ:  l026A l028E
l026A:
	Mem0[0x0026:word16] = 0x0200
	NZ = cond(v89)
	V = false
	v91 = Mem0[0x53EA:word16]
	v91 = v91 & v91
	NZ = cond(v91)
	C = false
	V = false
	branch Test(EQ,Z) l028E
	// succ:  l0276 l028E
l0276:
	v93 = Mem0[sp:word16]
	v93 = v93 & v93
	NZ = cond(v93)
	C = false
	V = false
	branch Test(EQ,Z) l0282
	// succ:  l027A l0282
l027A:
	r0 = 0x0380
	NZ = cond(r0)
	V = false
	PRINT(r0)
	goto l028E
	// succ:  l028E
l0282:
	r0 = 0x03BC
	NZ = cond(r0)
	V = false
	FnSubfn(r0)
	r4 = r0
	NZ = cond(r4)
	V = false
	Mem0[0x0026:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l028E
l028E:
	r4 = r4 - 0x0002
	v30 = Mem0[r4:word16]
	v30 = v30 & v30
	NZ = cond(v30)
	C = false
	V = false
	r0 = r4
	NZ = cond(r0)
	V = false
	SETTOP(r0)
	r4 = Mem0[0x0028:word16]
	NZ = cond(r4)
	V = false
	v32 = r5 - r4
	NZVC = cond(v32)
	branch Test(ULE,ZC) l0372
	// succ:  l029C l0372
l029C:
	r4 = r4 - 0x00B2
	NZVC = cond(r4)
	Mem0[0x5426:word16] = r4
	NZ = cond(v34)
	V = false
	r3 = r4
	NZ = cond(r3)
	V = false
	r4 = r4 - Mem0[0x53E8:word16]
	NZVC = cond(r4)
	r4 = r4 & ~0x0001
	NZ = cond(r4)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v37)
	V = false
	r2 = Mem0[0x53EC:word16]
	NZ = cond(r2)
	V = false
	branch Test(EQ,Z) l0372
	// succ:  l02B6 l0372
l02B6:
	r4 = r4 - r2
	NZVC = cond(r4)
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v40)
	V = false
	r4 = r4 & ~0x0001
	NZ = cond(r4)
	V = false
	// succ:  l02BE
l02BE:
	r4 = r4 - 0x0020
	NZVC = cond(r4)
	r2 = r2 - 0x0001
	NZV = cond(r2)
	branch Test(NE,Z) l02BE
	// succ:  l02C6 l02BE
l02C6:
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v42)
	V = false
	r4 = r4 - 0x0038
	NZVC = cond(r4)
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v43)
	V = false
	v44 = r5 - r4
	NZVC = cond(v44)
	branch Test(ULE,ZC) l0372
	// succ:  l02D2 l0372
l02D2:
	r2 = r3
	NZ = cond(r2)
	V = false
	r2 = r2 + 0x00B2
	NZVC = cond(r2)
	// succ:  l02D8
l02D8:
	r2 = r2 - 0x0002
	Mem0[r2:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v46 = r4 - r2
	NZVC = cond(v46)
	branch Test(UGT,ZC) l02D8
	// succ:  l02DE l02D8
l02DE:
	Mem0[r3 + 0x0074:byte] = r1
	NZ = cond(v47)
	V = false
	Mem0[r3 + 0x0075:byte] = r1
	NZ = cond(v48)
	V = false
	v49 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0008:word16] = v49
	NZ = cond(v50)
	V = false
	v51 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0006:word16] = v51
	NZ = cond(v52)
	V = false
	v53 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0004:word16] = v53
	NZ = cond(v54)
	V = false
	v55 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0002:word16] = v55
	NZ = cond(v56)
	V = false
	Mem0[r3 + 0x0076:word16] = Mem0[sp + 0x0002:word16]
	NZ = cond(v58)
	V = false
	Mem0[r3 + 0x0078:word16] = Mem0[sp + 0x0004:word16]
	NZ = cond(v60)
	V = false
	Mem0[r3 + 0x000A:word16] = r4
	NZ = cond(v61)
	V = false
	Mem0[r3 + 0x000C:word16] = r5
	NZ = cond(v62)
	V = false
	v63 = r5 - r4
	NZVC = cond(v63)
	branch Test(ULE,ZC) l0372
	// succ:  l030E l0372
l030E:
	v65 = Mem0[0x1DAA:word16]
	v65 = v65 & v65
	NZ = cond(v65)
	C = false
	V = false
	branch Test(EQ,Z) l0332
	// succ:  l0314 l0332
l0314:
	r0 = 0x03B8
	NZ = cond(r0)
	V = false
	FnSubfn(r0)
	r0 = r0 & 0x0200
	NZ = cond(r0)
	V = false
	branch Test(NE,Z) l0332
	// succ:  l0320 l0332
l0320:
	v68 = Mem0[0x53EA:word16] - Mem0[sp:word16]
	NZVC = cond(v68)
	branch Test(ULT,C) l0332
	// succ:  l0326 l0332
l0326:
	r2 = Mem0[0x0022:word16]
	NZ = cond(r2)
	V = false
	r2 = r2 + 0x1000
	NZVC = cond(r2)
	v70 = r2 - r4
	NZVC = cond(v70)
	branch Test(ULE,ZC) l0372
	// succ:  l0332 l0372
l0332:
	sp = sp + 0x0014
	NZVC = cond(sp)
	Mem0[r3 + 0x0010:word16] = 0x8000
	NZ = cond(v71)
	V = false
	Mem0[r3 + 0x0050:word16] = r3
	NZ = cond(v72)
	V = false
	v73 = Mem0[r3 + 0x0050:word16] + 0x0022
	Mem0[r3 + 0x0050:word16] = v73
	NZVC = cond(v73)
	v74 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x006A:word16] = v74
	NZ = cond(v75)
	V = false
	v76 = Mem0[sp:word16]
	sp = sp + 0x0002
	r4 = v76
	NZ = cond(r4)
	V = false
	Mem0[r3 + 0x0068:word16] = r4
	NZ = cond(v77)
	V = false
	v78 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	r0 = v78
	NZ = cond(r0)
	V = false
	v79 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	Mem0[r3 + 0x007C:word16] = v79
	NZ = cond(v80)
	V = false
	Mem0[r3 + 0x007A:word16] = Mem0[r0:word16]
	NZ = cond(v82)
	V = false
	Mem0[0x0020:word16] = 0x0202
	NZ = cond(v83)
	V = false
	v84 = Mem0[0x0024:word16] | 0x2000
	Mem0[0x0024:word16] = v84
	NZ = cond(v84)
	V = false
	call fn1CFA (retsize: 2; FPU: 2;)
	v87 = Mem0[r3 + 0x0075:byte]
	v87 = v87 & v87
	NZ = cond(v87)
	C = false
	V = false
	branch Test(EQ,Z) l03B2
	// succ:  l0370 l03B2
l0370:
	v88 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	call v88 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0218_exit
l0372:
	r0 = 0x0397
	NZ = cond(r0)
	V = false
	PRINT(r0)
	v94 = Mem0[0x002B:word16] | 0x0008
	Mem0[0x002B:word16] = v94
	NZ = cond(v94)
	V = false
	EXIT(r0)
l03B2:
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x1396
	NZ = cond(v96)
	V = false
	call r4 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0218_exit
fn0218_exit:


// fn0468
// Return size: 2
void fn0468()
fn0468_entry:
	// succ:  l0468
l0468:
	sp = fp
	v4 = Mem0[r3:byte]
	r3 = r3 + 0x0001
	r0 = (int16) v4
	NZ = cond(r0)
	V = false
	branch Test(EQ,Z) l04F8
	// succ:  l046C l04F8
l046C:
	C = TTYOUT(r0)
	branch Test(ULT,C) l046C
	// succ:  l0470 l046C
l0470:
	goto 0x0468
	goto l0468
	// succ:  l0468
l04F8:
	return
	// succ:  fn0468_exit
fn0468_exit:


// fn0472
// Return size: 0
void fn0472()
fn0472_entry:
	// succ:  l0472
l0472:
	sp = fp
	r3 = 0x05E4
	NZ = cond(r3)
	V = false
	call fn0468 (retsize: 2; FPU: 2;)
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r3 + 0x007A:word16]
	NZ = cond(v10)
	V = false
	r0 = Mem0[r3 + 0x007C:word16]
	NZ = cond(r0)
	V = false
	r3 = Mem0[r3 + 0x000E:word16]
	NZ = cond(r3)
	V = false
	branch Test(EQ,Z) l0490
	// succ:  l048C l0490
l048C:
	v15 = Mem0[r3:word16]
	r3 = r3 + 0x0002
	v16 = v15
	Mem0[sp:word16] = v16
	NZ = cond(v16)
	V = false
	r0 = Mem0[r3:word16]
	NZ = cond(r0)
	V = false
	// succ:  l0490
l0490:
	call fn0528 (retsize: 2; FPU: 2;)
	v19 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v19
	NZ = cond(r0)
	V = false
	call fn0528 (retsize: 2; FPU: 2;)
	r3 = 0x05EF
	NZ = cond(r3)
	V = false
	call fn0468 (retsize: 2; FPU: 2;)
	v22 = Mem0[0x5426:ptr16]
	v22 = Mem0[v22:word16]
	r0 = v22
	NZ = cond(r0)
	V = false
	branch Test(NE,Z) l04B2
	// succ:  l04A8 l04B2
l04A8:
	r0 = (int16) 0x3F
	NZ = cond(r0)
	V = false
	// succ:  l04AC
l04AC:
	C = TTYOUT(r0)
	branch Test(ULT,C) l04AC
	// succ:  l04B0 l04AC
l04B0:
	goto 0x04B6
	goto l04B6
	// succ:  l04B6
l04B2:
	call fn04FA (retsize: 2; FPU: 2;)
	// succ:  l04B6
l04B6:
	v26 = 0x003D - r1
	NZVC = cond(v26)
	branch Test(EQ,Z) l04C2
	// succ:  l04BC l04C2
l04BC:
	v28 = 0x003F - r1
	NZVC = cond(v28)
	branch Test(NE,Z) l04F2
	// succ:  l04C2 l04F2
l04C2:
	r3 = 0x0601
	NZ = cond(r3)
	V = false
	call fn0468 (retsize: 2; FPU: 2;)
	r1 = Mem0[sp + 0x0010:word16]
	NZ = cond(r1)
	V = false
	C = true
	r0 = (int16) 0x18
	NZ = cond(r0)
	V = false
	// succ:  l04D4
l04D4:
	r1 = __rol(r1, r1)
	NZVC = cond(r1)
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	// succ:  l04D8
l04D8:
	C = TTYOUT(r0)
	branch Test(ULT,C) l04D8
	// succ:  l04DC l04D8
l04DC:
	r0 = (int16) 0x86
	NZ = cond(r0)
	V = false
	// succ:  l04E0
l04E0:
	r1 = r1 << 1
	NZVC = cond(r1)
	branch Test(EQ,Z) l04EA
	// succ:  l04E4 l04EA
l04E4:
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	branch Test(ULT,C) l04E0
	// succ:  l04E8 l04E0
l04E8:
	goto 0x04D4
	goto l04D4
	// succ:  l04D4
l04EA:
	r0 = (int16) 0x29
	NZ = cond(r0)
	V = false
	// succ:  l04EE
l04EE:
	C = TTYOUT(r0)
	branch Test(ULT,C) l04EE
	// succ:  l04F2 l04EE
l04F2:
	r0 = 0x05E1
	NZ = cond(r0)
	V = false
	PRINT(r0)
	// succ:  l04F8_in_fn0472
l04F8_in_fn0472:
	return
	// succ:  fn0472_exit
fn0472_exit:


// fn04FA
// Return size: 2
void fn04FA()
fn04FA_entry:
	// succ:  l04FA
l04FA:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v4)
	V = false
	r0 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l04FE
l04FE:
	r0 = r0 + 0x0001
	NZV = cond(r0)
	v11 = Mem0[sp:word16] - 0x000A
	Mem0[sp:word16] = v11
	NZVC = cond(v11)
	branch Test(GE,NV) l04FE
	// succ:  l0506 l04FE
l0506:
	v14 = Mem0[sp:word16] + 0x003A
	Mem0[sp:word16] = v14
	NZVC = cond(v14)
	r0 = r0 - 0x0001
	NZV = cond(r0)
	branch Test(EQ,Z) l0512
	// succ:  l050E l0512
l050E:
	call fn04FA (retsize: 2; FPU: 2;)
	// succ:  l0512
l0512:
	v17 = Mem0[sp:byte]
	sp = sp + 0x0001
	r0 = (int16) v17
	NZ = cond(r0)
	V = false
	// succ:  l0514
l0514:
	C = TTYOUT(r0)
	branch Test(ULT,C) l0514
	// succ:  l0518 l0514
l0518:
	return
	// succ:  fn04FA_exit
fn04FA_exit:


// fn051A
// Return size: 0
void fn051A()
fn051A_entry:
	goto l051A
	// succ:  l051A
l04F8_in_fn051A:
	return
	// succ:  fn051A_exit
l051A:
	sp = fp
	r3 = r0
	NZ = cond(r3)
	V = false
	r0 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l051E
l051E:
	v11 = r3 - r2
	NZVC = cond(v11)
	branch Test(UGT,ZC) l04F8_in_fn051A
	// succ:  l0522 l04F8_in_fn051A
l0522:
	r3 = r3 - r2
	NZVC = cond(r3)
	r0 = r0 + 0x0001
	NZV = cond(r0)
	goto l051E
	// succ:  l051E
fn051A_exit:


// fn0528
// Return size: 0
void fn0528()
fn0528_entry:
	goto l0528
	// succ:  l0528
l04F8_in_fn0528:
	return
	// succ:  fn0528_exit
l0528:
	sp = fp
	r2 = 0x0028
	NZ = cond(r2)
	V = false
	call fn051A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v9)
	V = false
	call fn051A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v11)
	V = false
	r3 = 0x0003
	NZ = cond(r3)
	V = false
	// succ:  l053C
l053C:
	r0 = (int16) Mem0[r0 + 0x05AF:byte]
	NZ = cond(r0)
	V = false
	// succ:  l0540
l0540:
	C = TTYOUT(r0)
	branch Test(ULT,C) l0540
	// succ:  l0544 l0540
l0544:
	r3 = r3 - 0x0001
	NZV = cond(r3)
	branch Test(EQ,Z) l04F8_in_fn0528
	// succ:  l0548 l04F8_in_fn0528
l0548:
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v17
	NZ = cond(r0)
	V = false
	goto l053C
	// succ:  l053C
fn0528_exit:


// fn054C
// Return size: 2
void fn054C()
fn054C_entry:
	// succ:  l054C
l054C:
	sp = fp
	Mem0[r3 + 0x00A0:byte] = r0
	NZ = cond(v5)
	V = false
	Mem0[r3 + 0x00A1:byte] = Mem0[r3 + 0x00A2:byte]
	NZ = cond(v9)
	V = false
	r2 = r0
	NZ = cond(r2)
	V = false
	r0 = r0 >> 1
	NZVC = cond(r0)
	r0 = r0 >> 1
	NZVC = cond(r0)
	r0 = r0 >> 1
	NZVC = cond(r0)
	r0 = r0 & ~0x0001
	NZ = cond(r0)
	V = false
	r0 = r0 + r3
	NZVC = cond(r0)
	r2 = r2 & ~0xFFF0
	NZ = cond(r2)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	C = true
	// succ:  l056C
l056C:
	v17 = __rol(Mem0[sp:word16], Mem0[sp:word16])
	Mem0[sp:word16] = v17
	NZVC = cond(v17)
	r2 = r2 - 0x0001
	NZV = cond(r2)
	branch Test(GT,N) l056C
	// succ:  l0572 l056C
l0572:
	v19 = Mem0[sp:word16]
	sp = sp + 0x0002
	v20 = Mem0[r0 + 0x0096:word16] | v19
	Mem0[r0 + 0x0096:word16] = v20
	NZ = cond(v20)
	V = false
	return
	// succ:  fn054C_exit
fn054C_exit:


// fn0670
// Return size: 0
void fn0670()
fn0670_entry:
	// succ:  l0670
l0670:
	sp = fp
	r4 = Mem0[0x5424:word16]
	NZ = cond(r4)
	V = false
	r4 = r4 + 0x002A
	NZVC = cond(r4)
	v9 = Mem0[sp:word16]
	sp = sp + 0x0002
	v10 = v9
	Mem0[r4:word16] = v10
	NZ = cond(v10)
	V = false
	v11 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v11
	NZ = cond(r0)
	V = false
	v13 = Mem0[sp:word16]
	sp = sp + 0x0002
	r1 = v13
	NZ = cond(r1)
	V = false
	v15 = Mem0[sp:word16]
	sp = sp + 0x0002
	r2 = v15
	NZ = cond(r2)
	V = false
	r3 = Mem0[sp:word16]
	NZ = cond(r3)
	V = false
	branch Test(NE,Z) l068E
	// succ:  l0684 l068E
l0684:
	r3 = r1
	NZ = cond(r3)
	V = false
	r1 = r0
	NZ = cond(r1)
	V = false
	r0 = r2
	NZ = cond(r0)
	V = false
	r2 = r1
	NZ = cond(r2)
	V = false
	r1 = Mem0[sp:word16]
	NZ = cond(r1)
	V = false
	// succ:  l068E
l068E:
	v21 = r4
	Mem0[sp:word16] = v21
	NZ = cond(v21)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v23)
	V = false
	r1 = r1 << 1
	NZVC = cond(r1)
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	r5 = __rol(r5, r5)
	NZVC = cond(r5)
	r4 = r0
	NZ = cond(r4)
	V = false
	branch Test(EQ,Z) l06B2
	// succ:  l069C l06B2
l069C:
	r2 = r2 << 1
	NZVC = cond(r2)
	branch Test(EQ,Z) l06B2
	// succ:  l06A0 l06B2
l06A0:
	r5 = r5 + C
	NZVC = cond(r5)
	r4 = DPB(r4, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r4 = r4 + r2
	NZVC = cond(r4)
	branch Test(UGE,C) l06AE
	// succ:  l06A8 l06AE
l06A8:
	branch Test(GT,N) l06BE
	// succ:  l06AA l06BE
l06AA:
	__syscall(0x898A)
	goto l06B2
	// succ:  l06B2
l06AE:
	branch Test(LT,N) l06B8
	// succ:  l06B0 l06B8
l06B0:
	__syscall(0x898B)
	// succ:  l06B2
l06B2:
	r2 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r3 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	goto l0738
	// succ:  l0738
l06B8:
	r4 = r4 & 0x7F00
	NZ = cond(r4)
	V = false
	branch Test(EQ,Z) l06B0
	// succ:  l06BE l06B0
l06BE:
	r4 = DPB(r4, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r4 = r4 + 0x7F01
	NZVC = cond(r4)
	r5 = __ror(r5, r5)
	NZVC = cond(r5)
	r4 = __ror(r4, r4)
	NZVC = cond(r4)
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v26)
	V = false
	r2 = __ror(r2, r2)
	NZVC = cond(r2)
	r3 = __swab(r3)
	NZ = cond(r3)
	C = false
	V = false
	r2 = __swab(r2)
	NZ = cond(r2)
	C = false
	V = false
	r2 = DPB(r2, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r2 = r2 | r3
	NZ = cond(r2)
	V = false
	r3 = DPB(r3, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r2 = __ror(r2, r2)
	NZVC = cond(r2)
	r3 = __ror(r3, r3)
	NZVC = cond(r3)
	r1 = __swab(r1)
	NZ = cond(r1)
	C = false
	V = false
	r0 = __swab(r0)
	NZ = cond(r0)
	C = false
	V = false
	r0 = DPB(r0, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r0 = r0 | r1
	NZ = cond(r0)
	V = false
	r1 = DPB(r1, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r4 = r2
	NZ = cond(r4)
	V = false
	r5 = r3
	NZ = cond(r5)
	V = false
	// succ:  l06E8
l06E8:
	r4 = r4 >> 1
	NZVC = cond(r4)
	r5 = __ror(r5, r5)
	NZVC = cond(r5)
	r1 = r1 << 1
	NZVC = cond(r1)
	branch Test(EQ,Z) l06FC
	// succ:  l06F0 l06FC
l06F0:
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	branch Test(UGE,C) l06E8
	// succ:  l06F4 l06E8
l06F4:
	r3 = r3 + r5
	NZVC = cond(r3)
	r2 = r2 + C
	NZVC = cond(r2)
	r2 = r2 + r4
	NZVC = cond(r2)
	goto l06E8
	// succ:  l06E8
l06FC:
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	branch Test(UGE,C) l0706
	// succ:  l0700 l0706
l0700:
	r3 = r3 + r5
	NZVC = cond(r3)
	r2 = r2 + C
	NZVC = cond(r2)
	r2 = r2 + r4
	NZVC = cond(r2)
	// succ:  l0706
l0706:
	r4 = r4 >> 1
	NZVC = cond(r4)
	r5 = __ror(r5, r5)
	NZVC = cond(r5)
	r0 = r0 << 1
	NZVC = cond(r0)
	branch Test(ULT,C) l0700
	// succ:  l070E l0700
l070E:
	branch Test(NE,Z) l0706
	// succ:  l0710 l0706
l0710:
	v32 = Mem0[sp:word16]
	sp = sp + 0x0002
	r4 = v32
	NZ = cond(r4)
	V = false
	v33 = r2
	v33 = v33 & v33
	NZ = cond(v33)
	C = false
	V = false
	branch Test(LT,N) l0724
	// succ:  l0716 l0724
l0716:
	r3 = __rol(r3, r3)
	NZVC = cond(r3)
	r2 = __rol(r2, r2)
	NZVC = cond(r2)
	r4 = r4 & 0x7F80
	NZ = cond(r4)
	V = false
	branch Test(EQ,Z) l06B0
	// succ:  l0720 l06B0
l0720:
	r4 = r4 - 0x0080
	NZVC = cond(r4)
	// succ:  l0724
l0724:
	r3 = __rol(r3, r3)
	NZVC = cond(r3)
	r1 = __rol(r1, r1)
	NZVC = cond(r1)
	r3 = DPB(r3, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r3 = r3 | r2
	NZ = cond(r3)
	V = false
	r3 = __swab(r3)
	NZ = cond(r3)
	C = false
	V = false
	r2 = DPB(r2, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r2 = __swab(r2)
	NZ = cond(r2)
	C = false
	V = false
	r2 = r2 + r4
	NZVC = cond(r2)
	r3 = r3 + r1
	NZVC = cond(r3)
	r2 = r2 + C
	NZVC = cond(r2)
	// succ:  l0738
l0738:
	v27 = Mem0[sp:word16]
	sp = sp + 0x0002
	r5 = v27
	NZ = cond(r5)
	V = false
	v28 = Mem0[sp:word16]
	sp = sp + 0x0002
	r4 = v28
	NZ = cond(r4)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v29)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r2
	NZ = cond(v30)
	V = false
	v31 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	call v31 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0670_exit
fn0670_exit:


// fn07BA
// Return size: 2
void fn07BA()
fn07BA_entry:
	// succ:  l07BA
l07BA:
	sp = fp
	r3 = r3 << 1
	NZVC = cond(r3)
	r4 = __rol(r4, r4)
	NZVC = cond(r4)
	branch Test(ULT,C) l07C6
	// succ:  l07C0 l07C6
l07C0:
	v8 = r4 - r5
	NZVC = cond(v8)
	branch Test(UGT,ZC) l07CE
	// succ:  l07C4 l07CE
l07C4:
	branch Test(EQ,Z) l07D4
	// succ:  l07C6 l07D4
l07C6:
	r3 = r3 - r1
	NZVC = cond(r3)
	r4 = r4 - C
	NZVC = cond(r4)
	r4 = r4 - r5
	NZVC = cond(r4)
	C = true
	// succ:  l07CE
l07CE:
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	branch Test(UGE,C) l07BA
	// succ:  l07D2 l07BA
l07D2:
	return
	// succ:  fn07BA_exit
l07D4:
	v12 = r3 - r1
	NZVC = cond(v12)
	branch Test(UGT,ZC) l07CE
	// succ:  l07D8 l07CE
l07D8:
	branch Test(ULT,C) l07C6
	// succ:  l07DA l07C6
l07DA:
	C = true
	// succ:  l07DC
l07DC:
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	branch Test(UGE,C) l07DC
	// succ:  l07E0 l07DC
l07E0:
	v14 = Mem0[sp:word16]
	sp = sp + 0x0002
	v15 = 0x07F6 - v14
	NZVC = cond(v15)
	branch Test(EQ,Z) l07FE
	// succ:  l07E6 l07FE
l07E6:
	r2 = r2 + r0
	NZVC = cond(r2)
	r0 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l07FE
l07FE:
	v19 = Mem0[sp:word16]
	sp = sp + 0x0002
	r5 = v19
	NZ = cond(r5)
	V = false
	r4 = Mem0[sp:word16]
	NZ = cond(r4)
	V = false
	v22 = r0
	Mem0[sp:word16] = v22
	NZ = cond(v22)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r2
	NZ = cond(v23)
	V = false
	v24 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	call v24 (retsize: 4; FPU: 2;)
	return
	// succ:  fn07BA_exit
fn07BA_exit:


// fn0818
// Return size: 0
void fn0818()
fn0818_entry:
	// succ:  l0818
l0818:
	sp = fp
	r0 = r5
	NZ = cond(r0)
	V = false
	r0 = r0 + Mem0[r5:word16]
	NZVC = cond(r0)
	r0 = r0 + Mem0[r5:word16]
	NZVC = cond(r0)
	v10 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	v11 = v10
	v11 = v11 & v11
	NZ = cond(v11)
	C = false
	V = false
	call fn11A6 (retsize: 2; FPU: 2;)
	sp = sp - 0x004E
	NZVC = cond(sp)
	r0 = 0x53F0
	NZ = cond(r0)
	V = false
	v15 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	call v15 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0818_exit
fn0818_exit:


// fn0A64
// Return size: 0
void fn0A64()
fn0A64_entry:
	// succ:  l0A64
l0A64:
	sp = fp
	r0 = r5
	NZ = cond(r0)
	V = false
	r0 = r0 + Mem0[r5:word16]
	NZVC = cond(r0)
	r0 = r0 + Mem0[r5:word16]
	NZVC = cond(r0)
	v10 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	v11 = v10
	v11 = v11 & v11
	NZ = cond(v11)
	C = false
	V = false
	call fn11A6 (retsize: 2; FPU: 2;)
	r0 = 0x5414
	NZ = cond(r0)
	V = false
	v15 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	call v15 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0A64_exit
fn0A64_exit:


// fn0AAE
// Return size: 2
void fn0AAE()
fn0AAE_entry:
	// succ:  l0AAE
l0AAE:
	sp = fp
	r4 = Mem0[r5 + 0x0002:word16]
	NZ = cond(r4)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r4 + 0x0002:word16]
	NZ = cond(v9)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r4:word16]
	NZ = cond(v11)
	V = false
	v12 = Mem0[sp:word16]
	sp = sp + 0x0002
	r4 = v12
	NZ = cond(r4)
	V = false
	call fn1040 (retsize: 2; FPU: 2;)
	r0 = r0 - 0x0001
	NZV = cond(r0)
	v16 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v16
	NZ = cond(r0)
	V = false
	return
	// succ:  fn0AAE_exit
fn0AAE_exit:


// fn0AC4
// Return size: 0
void fn0AC4()
fn0AC4_entry:
	// succ:  l0AC4
l0AC4:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0101
	NZ = cond(v3)
	V = false
	// succ:  l0AC8_thunk_fn0AE6
l0AC8_thunk_fn0AE6:
	call fn0AE6 (retsize: 0;)
	return
	// succ:  fn0AC4_exit
fn0AC4_exit:


// fn0AE2
// Return size: 0
void fn0AE2()
fn0AE2_entry:
	// succ:  l0AE2
l0AE2:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0202
	NZ = cond(v3)
	V = false
	// succ:  l0AE2_thunk_fn0AE6
l0AE2_thunk_fn0AE6:
	call fn0AE6 (retsize: 0;)
	return
	// succ:  fn0AE2_exit
fn0AE2_exit:


// fn0AE6
// Return size: 0
void fn0AE6()
fn0AE6_entry:
	// succ:  l0AE6
l0AE6:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v4)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v14 = Mem0[sp + 0x0004:byte]
	Mem0[sp:byte] = v14
	NZ = cond(v14)
	V = false
	v16 = 0x0001 - Mem0[sp:word16]
	NZVC = cond(v16)
	branch Test(EQ,Z) l0AF6_thunk_fn0B02
	goto l0AF6_thunk_fn0AF8
	// succ:  l0AF6_thunk_fn0AF8 l0AF6_thunk_fn0B02
l0AE6:
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v18)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v19 = Mem0[sp + 0x0004:byte]
	Mem0[sp:byte] = v19
	NZ = cond(v19)
	V = false
	v20 = 0x0001 - Mem0[sp:word16]
	NZVC = cond(v20)
	branch Test(EQ,Z) l0B02
	goto l0AF6_thunk_fn0AF8
	// succ:  l0AF6_thunk_fn0AF8 l0AF6_thunk_fn0B02
l0AF6_thunk_fn0AF8:
	call fn0AF8 (retsize: 0;)
	return
	// succ:  fn0AE6_exit
l0AF6_thunk_fn0AF8:
	call fn0AF8 (retsize: 0;)
	return
	// succ:  fn0AE6_exit
l0AF6_thunk_fn0B02:
	call fn0B02 (retsize: 0;)
	return
	// succ:  fn0AE6_exit
l0AF6_thunk_fn0B02:
	call fn0B02 (retsize: 0;)
	return
	// succ:  fn0AE6_exit
fn0AE6_exit:


// fn0AF8
// Return size: 0
void fn0AF8()
fn0AF8_entry:
	// succ:  l0AF8
l0AF8:
	sp = v3
	v4 = 0x0008 - Mem0[sp:word16]
	NZVC = cond(v4)
	branch Test(EQ,Z) l0B02
	goto l0AFE
	// succ:  l0AFE l0AFC_thunk_fn0B02
l0AFC_thunk_fn0B02:
	call fn0B02 (retsize: 0;)
	return
	// succ:  fn0AF8_exit
l0AFE:
	v7 = Mem0[sp:word16] + 0x0003
	Mem0[sp:word16] = v7
	NZVC = cond(v7)
	// succ:  l0AFE_thunk_fn0B02
l0AFE_thunk_fn0B02:
	call fn0B02 (retsize: 0;)
	return
	// succ:  fn0AF8_exit
fn0AF8_exit:


// fn0B02
// Return size: 0
void fn0B02()
fn0B02_entry:
	// succ:  l0B02
l0B02:
	sp = v3
	v4 = Mem0[sp + 0x0005:word16] - Mem0[sp + 0x0004:word16]
	NZVC = cond(v4)
	v7 = Mem0[sp:word16] + C
	Mem0[sp:word16] = v7
	NZVC = cond(v7)
	v8 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x00A4:word16] = v8
	NZ = cond(v10)
	V = false
	v13 = Mem0[r3 + 0x0074:byte]
	v13 = v13 & v13
	NZ = cond(v13)
	C = false
	V = false
	branch Test(EQ,Z) l0B22
	// succ:  l0B14 l0B22
l0B14:
	v15 = Mem0[sp:word16]
	sp = sp + 0x0002
	v16 = v15
	v16 = v16 & v16
	NZ = cond(v16)
	C = false
	V = false
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0052:word16] = v17
	NZ = cond(v18)
	V = false
	v19 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0044:word16] = v19
	NZ = cond(v20)
	V = false
	v21 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v21 (retsize: 2; FPU: 2;)
	v23 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	call v23 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0B02_exit
l0B22:
	Mem0[r3 + 0x0052:word16] = Mem0[sp + 0x0002:word16]
	NZ = cond(v24)
	V = false
	Mem0[r3 + 0x0044:word16] = Mem0[sp + 0x0006:word16]
	NZ = cond(v25)
	V = false
	v26 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v26
	NZ = cond(r3)
	V = false
	v27 = Mem0[sp:word16]
	sp = sp + 0x0002
	v28 = v27
	v28 = v28 & v28
	NZ = cond(v28)
	C = false
	V = false
	Mem0[sp + 0x0002:word16] = Mem0[sp + 0x0004:word16]
	NZ = cond(v29)
	V = false
	v30 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[sp + 0x0002:word16] = v30
	NZ = cond(v31)
	V = false
	v32 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v32 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0B02_exit
fn0B02_exit:


// fn0B3E
// Return size: 0
void fn0B3E()
fn0B3E_entry:
	// succ:  l0B3E
l0B3E:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0202
	NZ = cond(v3)
	V = false
	// succ:  l0B3E_thunk_fn0B60
l0B3E_thunk_fn0B60:
	call fn0B60 (retsize: 0;)
	return
	// succ:  fn0B3E_exit
fn0B3E_exit:


// fn0B44
// Return size: 0
void fn0B44()
fn0B44_entry:
	// succ:  l0B44
l0B44:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0101
	NZ = cond(v3)
	V = false
	// succ:  l0B48_thunk_fn0B60
l0B48_thunk_fn0B60:
	call fn0B60 (retsize: 0;)
	return
	// succ:  fn0B44_exit
fn0B44_exit:


// fn0B60
// Return size: 0
void fn0B60()
fn0B60_entry:
	// succ:  l0B60
l0B60:
	sp = v3
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v5)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v11 = Mem0[sp + 0x0004:byte]
	Mem0[sp:byte] = v11
	NZ = cond(v11)
	V = false
	v12 = 0x0001 - Mem0[sp:word16]
	NZVC = cond(v12)
	branch Test(EQ,Z) l0B7C
	// succ:  l0B72 l0B7C
l0B72:
	v14 = 0x0008 - Mem0[sp:word16]
	NZVC = cond(v14)
	branch Test(EQ,Z) l0B7C
	// succ:  l0B78 l0B7C
l0B78:
	v15 = Mem0[sp:word16] + 0x0003
	Mem0[sp:word16] = v15
	NZVC = cond(v15)
	// succ:  l0B7C
l0B7C:
	v16 = Mem0[sp + 0x0005:word16] - Mem0[sp + 0x0004:word16]
	NZVC = cond(v16)
	v17 = Mem0[sp:word16] + C
	Mem0[sp:word16] = v17
	NZVC = cond(v17)
	v18 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x00A4:word16] = v18
	NZ = cond(v19)
	V = false
	v20 = Mem0[r3 + 0x0074:byte]
	v20 = v20 & v20
	NZ = cond(v20)
	C = false
	V = false
	branch Test(EQ,Z) l0BA4
	// succ:  l0B8E l0BA4
l0B8E:
	v21 = Mem0[sp:word16]
	sp = sp + 0x0002
	v22 = v21
	v22 = v22 & v22
	NZ = cond(v22)
	C = false
	V = false
	v23 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0052:word16] = v23
	NZ = cond(v24)
	V = false
	v25 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0044:word16] = v25
	NZ = cond(v26)
	V = false
	v27 = Mem0[Mem0[sp:ptr16]:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x005A:word16] = v27
	NZ = cond(v28)
	V = false
	Mem0[r3 + 0x007E:word16] = 0x0BEC
	NZ = cond(v29)
	V = false
	goto l0BC6
	// succ:  l0BC6
l0BA4:
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v43)
	V = false
	r0 = sp
	NZ = cond(r0)
	V = false
	v44 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	v45 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	v46 = v45 - v44
	NZVC = cond(v46)
	v47 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	Mem0[r3 + 0x0052:word16] = v47
	NZ = cond(v48)
	V = false
	v49 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	Mem0[r3 + 0x007E:word16] = v49
	NZ = cond(v50)
	V = false
	v51 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	Mem0[r3 + 0x0044:word16] = v51
	NZ = cond(v52)
	V = false
	v53 = Mem0[Mem0[r0:ptr16]:word16]
	r0 = r0 + 0x0002
	Mem0[r3 + 0x005A:word16] = v53
	NZ = cond(v54)
	V = false
	v55 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v55
	NZ = cond(r0)
	V = false
	v56 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[sp + 0x0006:word16] = v56
	NZ = cond(v57)
	V = false
	sp = sp + 0x0006
	NZVC = cond(sp)
	// succ:  l0BC4
l0BC4:
	v42 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v42
	NZ = cond(r3)
	V = false
	// succ:  l0BC6
l0BC6:
	v30 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v30 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v31)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v33)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	r0 = (int16) Mem0[r3 + 0x0053:byte]
	NZ = cond(r0)
	V = false
	v34 = Mem0[r3 + 0x0044:word16] + r0
	Mem0[r3 + 0x0044:word16] = v34
	NZVC = cond(v34)
	v35 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v35
	NZ = cond(r0)
	V = false
	Mem0[r3 + 0x005A:word16] = Mem0[r3 + 0x005A:word16] - 0x0001
	NZV = cond(v36)
	branch Test(NE,Z) l0BC4
	// succ:  l0BE0 l0BC4
l0BE0:
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[sp:word16]
	NZ = cond(v38)
	V = false
	Mem0[sp + 0x0002:word16] = Mem0[r3 + 0x007E:word16]
	NZ = cond(v39)
	V = false
	v40 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v40
	NZ = cond(r3)
	V = false
	v41 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v41 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0B60_exit
fn0B60_exit:


// fn0C4A
// Return size: 2
void fn0C4A()
fn0C4A_entry:
	goto l0C4A
	// succ:  l0C4A
l0C44:
	C = true
	r1 = r1 & ~r1
	NZ = cond(r1)
	V = false
	v18 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v18 (retsize: 2; FPU: 2;)
	// succ:  l0C4A
l0C4A:
	sp = fp
	r0 = r0 - 0x0001
	NZV = cond(r0)
	branch Test(GT,N) l0C64
	// succ:  l0C4E l0C64
l0C4E:
	v6 = Mem0[sp:word16]
	sp = sp + 0x0002
	v7 = v6
	v7 = v7 & v7
	NZ = cond(v7)
	C = false
	V = false
	v11 = Mem0[sp:word16] << 1
	Mem0[sp:word16] = v11
	sp = sp + 0x0002
	NZVC = cond(v11)
	branch Test(UGE,C) l0C62
	// succ:  l0C54 l0C62
l0C54:
	C = false
	branch Test(GT,N) l0C5A
	// succ:  l0C58 l0C5A
l0C58:
	r1 = -r1
	NZV = cond(r1)
	// succ:  l0C5A
l0C5A:
	r1 = __ror(r1, r1)
	NZVC = cond(r1)
	r1 = __rol(r1, r1)
	NZVC = cond(r1)
	branch Test(OV,V) l0C44
	// succ:  l0C60 l0C44
l0C60:
	C = false
	// succ:  l0C62
l0C62:
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v17 (retsize: 2; FPU: 2;)
	// succ:  l0C64
l0C64:
	v15 = Mem0[r3:byte]
	r3 = r3 + 0x0001
	r2 = (int16) v15
	NZ = cond(r2)
	V = false
	r2 = r2 & ~0xFF80
	NZ = cond(r2)
	V = false
	r2 = r2 - 0x0020
	NZVC = cond(r2)
	return
	// succ:  fn0C4A_exit
fn0C4A_exit:


// fn0CF4
// Return size: 0
void fn0CF4()
fn0CF4_entry:
	// succ:  l0CF4
l0CF4:
	sp = fp
	v5 = Mem0[r5:word16] - 0x0001
	NZVC = cond(v5)
	branch Test(EQ,Z) l0CFE
	// succ:  l0CFA l0CFE
l0CFA:
	__syscall(0x8990)
	// succ:  l0CFA_thunk_fn0D50
l0CFA_thunk_fn0D50:
	call fn0D50 (retsize: 0;)
	return
	// succ:  fn0CF4_exit
l0CFE:
	v8 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	v10 = r0 - v8
	NZVC = cond(v10)
	r0 = Mem0[r5:word16]
	NZ = cond(r0)
	V = false
	sp = sp - 0x0002
	v15 = Mem0[sp:word16]
	v15 = v15 & v15
	NZ = cond(v15)
	C = false
	V = false
	v17 = sp
	Mem0[sp:word16] = v17
	NZ = cond(v17)
	V = false
	sp = sp - 0x0002
	v19 = Mem0[sp:word16]
	v19 = v19 & v19
	NZ = cond(v19)
	C = false
	V = false
	v20 = sp
	Mem0[sp:word16] = v20
	NZ = cond(v20)
	V = false
	sp = sp - 0x0002
	v22 = Mem0[sp:word16]
	v22 = v22 & v22
	NZ = cond(v22)
	C = false
	V = false
	v23 = sp
	Mem0[sp:word16] = v23
	NZ = cond(v23)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0003
	NZ = cond(v24)
	V = false
	r5 = sp
	NZ = cond(r5)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v25)
	V = false
	call fn15CC (retsize: 2; FPU: 2;)
	v28 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v28
	NZ = cond(r0)
	V = false
	v29 = Mem0[sp:word16]
	sp = sp + 0x0002
	v30 = v29
	v30 = v30 & v30
	NZ = cond(v30)
	C = false
	V = false
	r1 = Mem0[sp:word16]
	NZ = cond(r1)
	V = false
	r1 = r1 << 1
	NZVC = cond(r1)
	v33 = Mem0[sp:word16]
	sp = sp + 0x0002
	r1 = r1 + v33
	NZVC = cond(r1)
	v34 = Mem0[sp:word16]
	sp = sp + 0x0002
	r2 = v34
	NZ = cond(r2)
	V = false
	call fn0D3E (retsize: 2; FPU: 2;)
	v37 = 0x2D
	Mem0[r0:byte] = v37
	r0 = r0 + 0x0001
	NZ = cond(v37)
	V = false
	r1 = r1 + 0x0D4F
	NZVC = cond(r1)
	v38 = Mem0[r1:byte]
	r1 = r1 + 0x0001
	v39 = v38
	Mem0[r0:byte] = v39
	r0 = r0 + 0x0001
	NZ = cond(v39)
	V = false
	v40 = Mem0[r1:byte]
	r1 = r1 + 0x0001
	v41 = v40
	Mem0[r0:byte] = v41
	r0 = r0 + 0x0001
	NZ = cond(v41)
	V = false
	v42 = Mem0[r1:byte]
	r1 = r1 + 0x0001
	v43 = v42
	Mem0[r0:byte] = v43
	r0 = r0 + 0x0001
	NZ = cond(v43)
	V = false
	v44 = 0x2D
	Mem0[r0:byte] = v44
	r0 = r0 + 0x0001
	NZ = cond(v44)
	V = false
	v45 = Mem0[sp:word16]
	sp = sp + 0x0002
	r2 = v45
	NZ = cond(r2)
	V = false
	// succ:  l0D3C_thunk_fn0D3E
l0D3C_thunk_fn0D3E:
	call fn0D3E (retsize: 0;)
	return
	// succ:  fn0CF4_exit
fn0CF4_exit:


// fn0D3E
// Return size: 0
void fn0D3E()
fn0D3E_entry:
	// succ:  l0D3E
l0D3E:
	sp = fp
	r2 = __swab(r2)
	NZ = cond(r2)
	C = false
	V = false
	// succ:  l0D40
l0D40:
	r2 = r2 + 0xF601
	NZVC = cond(r2)
	branch Test(GT,N) l0D40
	// succ:  l0D46 l0D40
l0D46:
	r2 = r2 + 0x3A2F
	NZVC = cond(r2)
	v10 = r2
	Mem0[r0:byte] = v10
	r0 = r0 + 0x0001
	NZ = cond(v10)
	V = false
	r2 = __swab(r2)
	NZ = cond(r2)
	C = false
	V = false
	v11 = r2
	Mem0[r0:byte] = v11
	r0 = r0 + 0x0001
	NZ = cond(v11)
	V = false
	// succ:  l0D4E_thunk_fn0D50
l0D4E_thunk_fn0D50:
	call fn0D50 (retsize: 0;)
	return
	// succ:  fn0D3E_exit
fn0D3E_exit:


// fn0D50
// Return size: 0
void fn0D50()
fn0D50_entry:
	// succ:  l0D50
l0D50:
	sp = v3
fn0D50_exit:


// fn0D7A
// Return size: 2
void fn0D7A()
fn0D7A_entry:
	// succ:  l0D7A
l0D7A:
	sp = fp
	call fn123C (retsize: 2; FPU: 2;)
	call fn145E (retsize: 2; FPU: 2;)
	branch Test(NE,Z) l0D88
	// succ:  l0D84 l0D88
l0D84:
	v8 = Mem0[r0:word16] | 0x8200
	Mem0[r0:word16] = v8
	NZ = cond(v8)
	V = false
	// succ:  l0D88
l0D88:
	v12 = Mem0[r0:word16]
	v12 = v12 & v12
	NZ = cond(v12)
	C = false
	V = false
	branch Test(LT,N) l0D9A
	// succ:  l0D8C l0D9A
l0D8C:
	v16 = Mem0[r0 + 0x0016:word16]
	v16 = v16 & v16
	NZ = cond(v16)
	C = false
	V = false
	branch Test(EQ,Z) l0D96
	// succ:  l0D92 l0D96
l0D92:
	Mem0[r0 + 0x0016:word16] = Mem0[r0 + 0x0016:word16] - 0x0001
	NZV = cond(v18)
	// succ:  l0D96
l0D96:
	v26 = Mem0[r0:word16] | 0x8000
	Mem0[r0:word16] = v26
	NZ = cond(v26)
	V = false
	// succ:  l0D9A
l0D9A:
	v20 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v20 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x1A9E
	NZ = cond(v21)
	V = false
	Mem0[r3 + 0x0060:word16] = 0x0DAE
	NZ = cond(v23)
	V = false
	v24 = Mem0[r0:word16] & 0x0200
	Mem0[r0:word16] = v24
	NZ = cond(v24)
	V = false
	branch Test(NE,Z) l0DB2
	// succ:  l0DAC l0DB2
l0DAC:
	__syscall(0x89A0)
	call fn12CA (retsize: 2; FPU: 2;)
	// succ:  l0DB2
l0DB2:
	Mem0[r3 + 0x001C:word16] = Mem0[r3 + 0x001A:word16]
	NZ = cond(v28)
	V = false
	Mem0[r3 + 0x0018:word16] = r3
	NZ = cond(v29)
	V = false
	v30 = Mem0[r3 + 0x0018:word16] - 0x0003
	Mem0[r3 + 0x0018:word16] = v30
	NZVC = cond(v30)
	return
	// succ:  fn0D7A_exit
fn0D7A_exit:


// fn0DC8
// Return size: 0
void fn0DC8()
fn0DC8_entry:
	// succ:  l0DC8
l0DC8:
	sp = fp
	call fn123C (retsize: 2; FPU: 2;)
	call fn145E (retsize: 2; FPU: 2;)
	branch Test(NE,Z) l0DD6
	// succ:  l0DD2 l0DD6
l0DD2:
	v8 = Mem0[r0:word16] | 0x0200
	Mem0[r0:word16] = v8
	NZ = cond(v8)
	V = false
	// succ:  l0DD6
l0DD6:
	v12 = Mem0[r0:word16]
	v12 = v12 & v12
	NZ = cond(v12)
	C = false
	V = false
	branch Test(GT,N) l0DE4
	// succ:  l0DDA l0DE4
l0DDA:
	v15 = Mem0[r0:word16] & ~0x8000
	Mem0[r0:word16] = v15
	NZ = cond(v15)
	V = false
	v17 = Mem0[r0:byte]
	v17 = v17 & v17
	NZ = cond(v17)
	C = false
	V = false
	branch Test(LT,N) l0DE4
	// succ:  l0DE2 l0DE4
l0DE2:
	__syscall(0x8999)
	// succ:  l0DE4
l0DE4:
	v18 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v18 (retsize: 2; FPU: 2;)
	Mem0[r3 + 0x0060:word16] = 0x17AE
	NZ = cond(v20)
	V = false
	v21 = Mem0[r0:word16] & 0x0200
	Mem0[r0:word16] = v21
	NZ = cond(v21)
	V = false
	branch Test(NE,Z) l0DF4
	// succ:  l0DF2 l0DF4
l0DF2:
	__syscall(0x89A0)
	// succ:  l0DF4
l0DF4:
	goto 0x1A9E
	// succ:  l1A9E
l1A9E:
	Mem0[r3 + 0x0056:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l1A9E_thunk_fn1AA2
l1A9E_thunk_fn1AA2:
	call fn1AA2 (retsize: 0;)
	return
	// succ:  fn0DC8_exit
fn0DC8_exit:


// fn0E0E
// Return size: 0
void fn0E0E()
fn0E0E_entry:
	// succ:  l0E0E
l0E0E:
	sp = fp
	r4 = Mem0[0x5424:word16]
	NZ = cond(r4)
	V = false
	r4 = r4 + 0x002A
	NZVC = cond(r4)
	v9 = Mem0[sp:word16]
	sp = sp + 0x0002
	v10 = v9
	Mem0[r4:word16] = v10
	NZ = cond(v10)
	V = false
	v11 = Mem0[sp:word16]
	sp = sp + 0x0002
	r2 = v11
	NZ = cond(r2)
	V = false
	v13 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v13
	NZ = cond(r3)
	V = false
	v15 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v15
	NZ = cond(r0)
	V = false
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	r1 = v17
	NZ = cond(r1)
	V = false
	// succ:  l0E6E
l0E6E:
	v19 = r2 - r0
	NZVC = cond(v19)
	branch Test(NE,Z) l0E76
	// succ:  l0E72 l0E76
l0E72:
	v21 = r3 - r1
	NZVC = cond(v21)
	branch Test(EQ,Z) l0E7C
	// succ:  l0E76 l0E7C
l0E76:
	r0 = r0 | r2
	NZ = cond(r0)
	V = false
	branch Test(UGE,C) l0E7C
	// succ:  l0E7A l0E7C
l0E7A:
	r0 = -r0
	NZV = cond(r0)
	// succ:  l0E7C
l0E7C:
	v24 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	call v24 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0E0E_exit
fn0E0E_exit:


// fn0EA8
// Return size: 2
void fn0EA8()
fn0EA8_entry:
	// succ:  l0EA8
l0EA8:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v4)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	Mem0[r3 + 0x0044:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v14 = Mem0[r3 + 0x0074:byte]
	v14 = v14 & v14
	NZ = cond(v14)
	C = false
	V = false
	branch Test(NE,Z) l0EC2
	// succ:  l0EB8 l0EC2
l0EB8:
	Mem0[r3 + 0x007E:word16] = Mem0[sp + 0x0002:word16]
	NZ = cond(v16)
	V = false
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v17
	NZ = cond(r3)
	V = false
	v18 = Mem0[sp:word16]
	sp = sp + 0x0002
	v19 = v18
	v19 = v19 & v19
	NZ = cond(v19)
	C = false
	V = false
	// succ:  l0EC2
l0EC2:
	v20 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v20 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0EF4
	NZ = cond(v21)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v22)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	v25 = Mem0[r3 + 0x0074:byte]
	v25 = v25 & v25
	NZ = cond(v25)
	C = false
	V = false
	branch Test(NE,Z) l0EDA
	// succ:  l0ED4 l0EDA
l0ED4:
	Mem0[sp + 0x0002:word16] = Mem0[r3 + 0x007E:word16]
	NZ = cond(v27)
	V = false
	// succ:  l0EDA
l0EDA:
	Mem0[r3 + 0x0072:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0070:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0014:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x000C:word16] = Mem0[r3 + 0x0058:word16]
	NZ = cond(v32)
	V = false
	Mem0[r3 + 0x00A2:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	v34 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v34
	NZ = cond(r3)
	V = false
	return
	// succ:  fn0EA8_exit
fn0EA8_exit:


// fn0EF8
// Return size: 2
void fn0EF8()
fn0EF8_entry:
	// succ:  l0EF8
l0EF8:
	sp = fp
	r1 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v8 = Mem0[sp:word16]
	sp = sp + 0x0002
	v10 = r0 - v8
	NZVC = cond(v10)
	v13 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	r0 = v13
	NZ = cond(r0)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	sp = sp - 0x0001
	Mem0[sp:byte] = Mem0[r3 + 0x0074:byte]
	NZ = cond(v19)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r3 + 0x000E:word16]
	NZ = cond(v21)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r3:word16]
	NZ = cond(v23)
	V = false
	v24 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	sp = sp - 0x0002
	Mem0[sp:word16] = v24
	NZ = cond(v25)
	V = false
	v26 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	sp = sp - 0x0002
	Mem0[sp:word16] = v26
	NZ = cond(v27)
	V = false
	v28 = 0x0000
	Mem0[r3:word16] = v28
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x000E:word16] = sp
	NZ = cond(v29)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r1
	NZ = cond(v30)
	V = false
	v32 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	r1 = v32
	NZ = cond(r1)
	V = false
	branch Test(EQ,Z) l0F2C
	// succ:  l0F1C l0F2C
l0F1C:
	v33 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	r2 = v33
	NZ = cond(r2)
	V = false
	branch Test(EQ,Z) l0F2C
	// succ:  l0F20 l0F2C
l0F20:
	r0 = Mem0[r0:word16]
	NZ = cond(r0)
	V = false
	// succ:  l0F22
l0F22:
	v36 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	v37 = v36
	Mem0[r0:word16] = v37
	r0 = r0 + 0x0002
	NZ = cond(v37)
	V = false
	r1 = r1 - 0x0001
	NZV = cond(r1)
	branch Test(EQ,Z) l0F2C
	// succ:  l0F28 l0F2C
l0F28:
	r2 = r2 - 0x0001
	NZV = cond(r2)
	branch Test(NE,Z) l0F22
	// succ:  l0F2C l0F22
l0F2C:
	v39 = Mem0[sp:byte]
	sp = sp + 0x0001
	Mem0[r3 + 0x0074:byte] = v39
	NZ = cond(v40)
	V = false
	branch Test(EQ,Z) l0F34
	// succ:  l0F32 l0F34
l0F32:
	v41 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	call v41 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0EF8_exit
l0F34:
	call r4 (retsize: 2; FPU: 2;)
	v43 = Mem0[sp:word16]
	sp = sp + 0x0002
	v44 = Mem0[sp:word16]
	sp = sp + 0x0002
	v45 = v44 - v43
	NZVC = cond(v45)
	r4 = Mem0[0x5424:word16]
	NZ = cond(r4)
	V = false
	v47 = Mem0[sp:word16]
	sp = sp + 0x0002
	v48 = v47
	Mem0[r4:word16] = v48
	NZ = cond(v48)
	V = false
	v49 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r4 + 0x000E:word16] = v49
	NZ = cond(v50)
	V = false
	v51 = Mem0[sp:byte]
	sp = sp + 0x0001
	Mem0[r4 + 0x0074:byte] = v51
	NZ = cond(v52)
	V = false
	return
	// succ:  fn0EF8_exit
fn0EF8_exit:


// fn0F48
// Return size: 2
void fn0F48()
fn0F48_entry:
	// succ:  l0F48
l0F48:
	sp = fp
	v5 = 0x0002 - Mem0[r5:word16]
	NZVC = cond(v5)
	branch Test(NE,Z) l0F98
	// succ:  l0F4E l0F98
l0F4E:
	v8 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	v9 = v8
	v9 = v9 & v9
	NZ = cond(v9)
	C = false
	V = false
	v13 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	r2 = v13
	NZ = cond(r2)
	V = false
	v15 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	r3 = v15
	NZ = cond(r3)
	V = false
	r0 = Mem0[r2:word16]
	NZ = cond(r0)
	V = false
	r1 = Mem0[r3:word16]
	NZ = cond(r1)
	V = false
	branch Test(EQ,Z) l0F90
	// succ:  l0F5A l0F90
l0F5A:
	r1 = r1 << 1
	NZVC = cond(r1)
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	r0 = r0 + Mem0[r2:word16]
	NZVC = cond(r0)
	r1 = r1 + Mem0[r3:word16]
	NZVC = cond(r1)
	r0 = r0 + C
	NZVC = cond(r0)
	r0 = r0 + Mem0[r3:word16]
	NZVC = cond(r0)
	branch Test(GT,N) l0F6C
	// succ:  l0F68 l0F6C
l0F68:
	r0 = r0 + 0x8000
	NZVC = cond(r0)
	// succ:  l0F6C
l0F6C:
	v25 = r0
	Mem0[r2:word16] = v25
	NZ = cond(v25)
	V = false
	v26 = r1
	Mem0[r3:word16] = v26
	NZ = cond(v26)
	V = false
	r2 = 0x0081
	NZ = cond(r2)
	V = false
	// succ:  l0F74
l0F74:
	r1 = r1 << 1
	NZVC = cond(r1)
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	branch Test(ULT,C) l0F7E
	// succ:  l0F7A l0F7E
l0F7A:
	r2 = r2 - 0x0001
	NZV = cond(r2)
	goto l0F74
	// succ:  l0F74
l0F7E:
	r1 = DPB(r1, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r1 = r1 | r0
	NZ = cond(r1)
	V = false
	r1 = __swab(r1)
	NZ = cond(r1)
	C = false
	V = false
	r0 = DPB(r0, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r0 = r0 | r2
	NZ = cond(r0)
	V = false
	r0 = __swab(r0)
	NZ = cond(r0)
	C = false
	V = false
	r0 = __ror(r0, r0)
	NZVC = cond(r0)
	r1 = __ror(r1, r1)
	NZVC = cond(r1)
	goto l0F9A
	// succ:  l0F9A
l0F90:
	r1 = 0x0003
	NZ = cond(r1)
	V = false
	r0 = r0 + 0x0001
	NZV = cond(r0)
	goto l0F6C
	// succ:  l0F6C
l0F98:
	__syscall(0x8990)
	// succ:  l0F9A
l0F9A:
	return
	// succ:  fn0F48_exit
fn0F48_exit:


// fn0F9C
// Return size: 0
void fn0F9C()
fn0F9C_entry:
	// succ:  l0F9C
l0F9C:
	sp = fp
	goto 0x13AA
	// succ:  l13AA
l13AA:
	v5 = Mem0[0x002B:word16] | 0x0001
	Mem0[0x002B:word16] = v5
	NZ = cond(v5)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	Mem0[r3 + 0x0066:word16] = Mem0[r3 + 0x0066:word16] + 0x0001
	NZV = cond(v11)
	r4 = Mem0[r3 + 0x0004:word16]
	NZ = cond(r4)
	V = false
	// succ:  l13BC
l13BC:
	v16 = Mem0[r3 + 0x0002:word16] - r4
	NZVC = cond(v16)
	branch Test(UGE,C) l13DC
	// succ:  l13C2 l13DC
l13C2:
	v19 = Mem0[r4:byte]
	r4 = r4 + 0x0001
	r2 = (int16) v19
	NZ = cond(r2)
	V = false
	branch Test(EQ,Z) l13BC
	// succ:  l13C6 l13BC
l13C6:
	v23 = 0x0002 - Mem0[r3 + 0x0066:word16]
	NZVC = cond(v23)
	branch Test(NE,Z) l13D6
	// succ:  l13CE l13D6
l13CE:
	r4 = r4 - 0x0001
	Mem0[r4:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0066:word16] = Mem0[r3 + 0x0066:word16] - 0x0001
	NZV = cond(v27)
	goto l13BC
	// succ:  l13BC
l13D6:
	call Mem0[0x1DAA:word16] (retsize: 2; FPU: 2;)
	goto l13BC
	// succ:  l13BC
l13DC:
	r0 = Mem0[r3 + 0x006E:word16]
	NZ = cond(r0)
	V = false
	branch Test(EQ,Z) l13E4
	// succ:  l13E2 l13E4
l13E2:
	call r0 (retsize: 4; FPU: 2;)
	return
	// succ:  fn0F9C_exit
l13E4:
	v31 = Mem0[0x0024:word16] & 0x0800
	Mem0[0x0024:word16] = v31
	NZ = cond(v31)
	V = false
	branch Test(NE,Z) l13EE
	// succ:  l13EC l13EE
l13EC:
	r0 = r0 + 0x0001
	NZV = cond(r0)
	// succ:  l13EE
l13EE:
	EXIT(r0)
fn0F9C_exit:


// fn0FA4
// Return size: 0
void fn0FA4()
fn0FA4_entry:
	// succ:  l0FA4
l0FA4:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x1020
	NZ = cond(v3)
	V = false
	// succ:  l0FA8_thunk_fn0FB2
l0FA8_thunk_fn0FB2:
	call fn0FB2 (retsize: 0;)
	return
	// succ:  fn0FA4_exit
fn0FA4_exit:


// fn0FAE
// Return size: 0
void fn0FAE()
fn0FAE_entry:
	// succ:  l0FAE
l0FAE:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x101E
	NZ = cond(v3)
	V = false
	// succ:  l0FAE_thunk_fn0FB2
l0FAE_thunk_fn0FB2:
	call fn0FB2 (retsize: 0;)
	return
	// succ:  fn0FAE_exit
fn0FAE_exit:


// fn0FB2
// Return size: 0
void fn0FB2()
fn0FB2_entry:
	// succ:  l0FB2
l0FB2:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v4)
	V = false
	r3 = sp
	NZ = cond(r3)
	V = false
	r3 = r3 + 0x000C
	NZVC = cond(r3)
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v8)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	v11 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0064:word16] = v11
	NZ = cond(v12)
	V = false
	v14 = Mem0[r3 + 0x0014:word16]
	v14 = v14 & v14
	NZ = cond(v14)
	C = false
	V = false
	branch Test(EQ,Z) l0FC8_thunk_fn0FCC
	goto l0FC8_thunk_fn0FCA
	// succ:  l0FC8_thunk_fn0FCA l0FC8_thunk_fn0FCC
l0FB2:
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v17)
	V = false
	r3 = sp
	NZ = cond(r3)
	V = false
	r3 = r3 + 0x000C
	NZVC = cond(r3)
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v18)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	v19 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0064:word16] = v19
	NZ = cond(v20)
	V = false
	v21 = Mem0[r3 + 0x0014:word16]
	v21 = v21 & v21
	NZ = cond(v21)
	C = false
	V = false
	branch Test(EQ,Z) l0FCC
	goto l0FC8_thunk_fn0FCA
	// succ:  l0FC8_thunk_fn0FCA l0FC8_thunk_fn0FCC
l0FC8_thunk_fn0FCA:
	call fn0FCA (retsize: 0;)
	return
	// succ:  fn0FB2_exit
l0FC8_thunk_fn0FCA:
	call fn0FCA (retsize: 0;)
	return
	// succ:  fn0FB2_exit
l0FC8_thunk_fn0FCC:
	call fn0FCC (retsize: 0;)
	return
	// succ:  fn0FB2_exit
l0FC8_thunk_fn0FCC:
	call fn0FCC (retsize: 0;)
	return
	// succ:  fn0FB2_exit
fn0FB2_exit:


// fn0FCA
// Return size: 0
void fn0FCA()
fn0FCA_entry:
	// succ:  l0FCA
l0FCA:
	sp = v3
	__syscall(0x899A)
	// succ:  l0FCA_thunk_fn0FCC
l0FCA_thunk_fn0FCC:
	call fn0FCC (retsize: 0;)
	return
	// succ:  fn0FCA_exit
fn0FCA_exit:


// fn0FCC
// Return size: 0
void fn0FCC()
fn0FCC_entry:
	// succ:  l0FCC
l0FCC:
	sp = v3
	Mem0[r3 + 0x0014:word16] = Mem0[sp + 0x0002:word16]
	NZ = cond(v5)
	V = false
	Mem0[r3 + 0x001C:word16] = Mem0[sp + 0x0006:word16]
	NZ = cond(v8)
	V = false
	v9 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v9
	NZ = cond(r3)
	V = false
	v10 = Mem0[sp:word16]
	sp = sp + 0x0002
	v11 = v10
	v11 = v11 & v11
	NZ = cond(v11)
	C = false
	V = false
	v13 = Mem0[sp:word16]
	sp = sp + 0x0002
	v14 = v13
	Mem0[sp:word16] = v14
	NZ = cond(v14)
	V = false
	call fn123C (retsize: 2; FPU: 2;)
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	Mem0[r3 + 0x001A:word16] = Mem0[r3 + 0x001C:word16]
	NZ = cond(v15)
	V = false
	Mem0[r3 + 0x0018:word16] = Mem0[r3 + 0x001C:word16]
	NZ = cond(v16)
	V = false
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0012:word16] = v17
	NZ = cond(v18)
	V = false
	v19 = Mem0[Mem0[sp:ptr16]:word16]
	sp = sp + 0x0002
	v20 = Mem0[r3 + 0x0018:word16] + v19
	Mem0[r3 + 0x0018:word16] = v20
	NZVC = cond(v20)
	Mem0[r3 + 0x0056:word16] = r3
	NZ = cond(v22)
	V = false
	Mem0[r3 + 0x0060:word16] = 0x1014
	NZ = cond(v23)
	V = false
	Mem0[r3 + 0x0062:word16] = 0x0001
	NZ = cond(v24)
	V = false
	Mem0[r3 + 0x0058:word16] = Mem0[r3 + 0x000C:word16]
	NZ = cond(v25)
	V = false
	// succ:  l100A_thunk_fn1AA2
l100A_thunk_fn1AA2:
	call fn1AA2 (retsize: 0;)
	return
	// succ:  fn0FCC_exit
fn0FCC_exit:


// fn1040
// Return size: 0
void fn1040()
fn1040_entry:
	// succ:  l1040
l1040:
	sp = fp
	v3 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v3
	NZ = cond(r0)
	V = false
	v7 = Mem0[sp:word16]
	sp = sp + 0x0002
	r1 = v7
	NZ = cond(r1)
	V = false
	r3 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r0 = r0 << 1
	NZVC = cond(r0)
	r3 = __ror(r3, r3)
	NZVC = cond(r3)
	C = true
	r0 = __ror(r0, r0)
	NZVC = cond(r0)
	r2 = r0
	NZ = cond(r2)
	V = false
	r2 = DPB(r2, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r0 = r0 & ~r2
	NZ = cond(r0)
	V = false
	r2 = __swab(r2)
	NZ = cond(r2)
	C = false
	V = false
	branch Test(GT,N) l1060
	// succ:  l1058 l1060
l1058:
	v15 = r2 - 0x0091
	NZVC = cond(v15)
	branch Test(UGT,ZC) l106A
	// succ:  l105E l106A
l105E:
	__syscall(0x8981)
	// succ:  l1060
l1060:
	r0 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	goto l107E
	// succ:  l107E
l1064:
	r1 = r1 << 1
	NZVC = cond(r1)
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	r2 = r2 - 0x0001
	NZV = cond(r2)
	// succ:  l106A
l106A:
	v21 = r2 - 0x0088
	NZVC = cond(v21)
	branch Test(LT,NV) l1064
	// succ:  l1070 l1064
l1070:
	branch Test(EQ,Z) l1078
	// succ:  l1072 l1078
l1072:
	r2 = r2 + 0x0001
	NZV = cond(r2)
	r0 = r0 >> 1
	NZVC = cond(r0)
	branch Test(NE,Z) l106A
	// succ:  l1078 l106A
l1078:
	v24 = r3
	v24 = v24 & v24
	NZ = cond(v24)
	C = false
	V = false
	branch Test(GT,N) l107E
	// succ:  l107C l107E
l107C:
	r0 = -r0
	NZV = cond(r0)
	// succ:  l107E
l107E:
	v17 = r0
	v17 = v17 & v17
	NZ = cond(v17)
	C = false
	V = false
	branch Test(EQ,Z) l1086
	// succ:  l1082 l1086
l1082:
	r3 = r3 + r0
	NZVC = cond(r3)
	branch Test(LT,N) l105E
	// succ:  l1086 l105E
l1086:
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v18)
	V = false
	v20 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	call v20 (retsize: 4; FPU: 2;)
	return
	// succ:  fn1040_exit
fn1040_exit:


// fn11A6
// Return size: 2
void fn11A6()
fn11A6_entry:
	// succ:  l11A6
l11A6:
	sp = fp
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	Mem0[r3 + 0x0064:word16] = r0
	NZ = cond(v9)
	V = false
	Mem0[r3 + 0x0058:word16] = Mem0[r3 + 0x000C:word16]
	NZ = cond(v11)
	V = false
	r0 = 0x541C
	NZ = cond(r0)
	V = false
	r1 = 0x542C
	NZ = cond(r1)
	V = false
	r2 = 0x5426
	NZ = cond(r2)
	V = false
	sp = sp - 0x0002
	v16 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	v17 = v16 - Mem0[sp:word16]
	NZVC = cond(v17)
	// succ:  l11C2
l11C2:
	r2 = r2 - 0x0002
	r3 = Mem0[r2:word16]
	NZ = cond(r3)
	V = false
	branch Test(EQ,Z) l11E4
	// succ:  l11C6 l11E4
l11C6:
	v21 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	r4 = v21
	NZ = cond(r4)
	V = false
	v23 = Mem0[Mem0[r5:ptr16]:word16]
	r5 = r5 + 0x0002
	r1 = r1 - 0x0002
	Mem0[r1:word16] = v23
	NZ = cond(v24)
	V = false
	v26 = Mem0[r1:word16]
	Mem0[sp:word16] = v26
	NZ = cond(v26)
	V = false
	// succ:  l11CC
l11CC:
	branch Test(EQ,Z) l11C2
	// succ:  l11CE l11C2
l11CE:
	C = false
	v29 = __ror(Mem0[sp:word16], Mem0[sp:word16])
	Mem0[sp:word16] = v29
	NZVC = cond(v29)
	branch Test(UGE,C) l11DC
	// succ:  l11D4 l11DC
l11D4:
	r4 = r4 & 0x0001
	NZ = cond(r4)
	V = false
	branch Test(EQ,Z) l11DC
	// succ:  l11DA l11DC
l11DA:
	v30 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	v31 = v30
	Mem0[r3:word16] = v31
	NZ = cond(v31)
	V = false
	// succ:  l11DC
l11DC:
	v35 = Mem0[r3:word16]
	r3 = r3 + 0x0002
	v36 = v35
	v36 = v36 & v36
	NZ = cond(v36)
	C = false
	V = false
	r4 = __ror(r4, r4)
	NZVC = cond(r4)
	v38 = Mem0[sp:word16]
	v38 = v38 & v38
	NZ = cond(v38)
	C = false
	V = false
	goto l11CC
	// succ:  l11CC
l11E4:
	v32 = Mem0[sp:word16]
	sp = sp + 0x0002
	v33 = v32
	v33 = v33 & v33
	NZ = cond(v33)
	C = false
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	return
	// succ:  fn11A6_exit
fn11A6_exit:


// fn123C
// Return size: 0
void fn123C()
fn123C_entry:
	// succ:  l123C
l123C:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r2
	NZ = cond(v4)
	V = false
	r2 = sp
	NZ = cond(r2)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r1
	NZ = cond(v8)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v10)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x125A
	NZ = cond(v11)
	V = false
	v12 = Mem0[r2:word16]
	r2 = r2 + 0x0002
	v13 = Mem0[r2:word16]
	r2 = r2 + 0x0002
	v14 = v13 - v12
	NZVC = cond(v14)
	v16 = Mem0[r2:word16]
	r2 = r2 + 0x0002
	r0 = v16
	NZ = cond(r0)
	V = false
	v17 = Mem0[r2:word16]
	r2 = r2 + 0x0002
	v18 = v17
	v18 = v18 & v18
	NZ = cond(v18)
	C = false
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r2:word16]
	NZ = cond(v21)
	V = false
	v22 = r0
	Mem0[r2:word16] = v22
	NZ = cond(v22)
	V = false
	r2 = r2 - 0x0002
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r2:word16]
	NZ = cond(v24)
	V = false
	v26 = r5
	Mem0[r2:word16] = v26
	NZ = cond(v26)
	V = false
	r2 = r2 - 0x0002
	Mem0[r2:word16] = r4
	NZ = cond(v28)
	V = false
	call r3 (retsize: 4; FPU: 2;)
	return
	// succ:  fn123C_exit
fn123C_exit:


// fn12AC
// Return size: 2
void fn12AC()
fn12AC_entry:
	// succ:  l12AC
l12AC:
	sp = fp
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	Mem0[r3 + 0x00A2:byte] = r2
	NZ = cond(v9)
	V = false
	v11 = Mem0[r3 + 0x0014:word16]
	v11 = v11 & v11
	NZ = cond(v11)
	C = false
	V = false
	branch Test(EQ,Z) l12BC
	// succ:  l12BA l12BC
l12BA:
	__syscall(0x899A)
	// succ:  l12BC
l12BC:
	call fn1420 (retsize: 2; FPU: 2;)
	Mem0[r3 + 0x0014:word16] = r0
	NZ = cond(v16)
	V = false
	v17 = Mem0[r0:word16] & 0x0800
	Mem0[r0:word16] = v17
	NZ = cond(v17)
	V = false
	return
	// succ:  fn12AC_exit
fn12AC_exit:


// fn12CA
// Return size: 2
void fn12CA()
fn12CA_entry:
	// succ:  l12CA
l12CA:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v4)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v8)
	V = false
	r4 = Mem0[r3 + 0x0014:word16]
	NZ = cond(r4)
	V = false
	r1 = Mem0[r3 + 0x001A:word16]
	NZ = cond(r1)
	V = false
	v14 = Mem0[r4:byte]
	v14 = v14 & v14
	NZ = cond(v14)
	C = false
	V = false
	branch Test(GT,N) l12E8
	// succ:  l12DA l12E8
l12DA:
	r0 = 0x138E
	NZ = cond(r0)
	V = false
	PRINT(r0)
	r2 = Mem0[r3 + 0x0054:word16]
	NZ = cond(r2)
	V = false
	Mem0[r3 + 0x0054:word16] = sp
	NZ = cond(v20)
	V = false
	// succ:  l12E8
l12E8:
	r0 = 0x000A
	NZ = cond(r0)
	V = false
	v21 = Mem0[r4:word16] & 0x0020
	Mem0[r4:word16] = v21
	NZ = cond(v21)
	V = false
	branch Test(EQ,Z) l131E
	// succ:  l12F2 l131E
l12F2:
	v23 = Mem0[r1:byte]
	r1 = r1 + 0x0001
	r5 = (int16) v23
	NZ = cond(r5)
	V = false
	v24 = r5 - 0x0031
	NZVC = cond(v24)
	branch Test(NE,Z) l12FE
	// succ:  l12FA l12FE
l12FA:
	v26 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	v27 = v26
	v27 = v27 & v27
	NZ = cond(v27)
	C = false
	V = false
	goto l1326
	// succ:  l1326
l12FE:
	v33 = r5 - 0x002B
	NZVC = cond(v33)
	branch Test(EQ,Z) l132A
	// succ:  l1304 l132A
l1304:
	v34 = r5 - 0x0024
	NZVC = cond(v34)
	branch Test(NE,Z) l1314
	// succ:  l130A l1314
l130A:
	Mem0[r3 + 0x001C:word16] = Mem0[r3 + 0x001C:word16] - 0x0001
	NZV = cond(v36)
	Mem0[r3 + 0x0054:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	goto l131E
	// succ:  l131E
l1314:
	v46 = r5 - 0x0030
	NZVC = cond(v46)
	branch Test(NE,Z) l131E
	// succ:  l131A l131E
l131A:
	call fn1366 (retsize: 2; FPU: 2;)
	// succ:  l131E
l131E:
	v29 = Mem0[r4:byte]
	v29 = v29 & v29
	NZ = cond(v29)
	C = false
	V = false
	branch Test(GT,N) l1326
	// succ:  l1322 l1326
l1322:
	v30 = r2
	v30 = v30 & v30
	NZ = cond(v30)
	C = false
	V = false
	branch Test(EQ,Z) l132A
	// succ:  l1326 l132A
l1326:
	call fn1366 (retsize: 2; FPU: 2;)
	// succ:  l132A
l132A:
	v40 = Mem0[r4:byte]
	v40 = v40 & v40
	NZ = cond(v40)
	C = false
	V = false
	branch Test(GT,N) l134C
	// succ:  l132E l134C
l132E:
	v42 = Mem0[r3 + 0x001C:word16] - r1
	NZVC = cond(v42)
	branch Test(UGE,C) l1346
	// succ:  l1334 l1346
l1334:
	r5 = (int16) Mem0[Mem0[r3 + 0x001C:ptr16]:byte]
	NZ = cond(r5)
	V = false
	Mem0[Mem0[r3 + 0x001C:byte]:ptr16] = 0x80
	NZ = cond(v44)
	V = false
	r0 = r1
	NZ = cond(r0)
	V = false
	PRINT(r0)
	Mem0[Mem0[r3 + 0x001C:byte]:ptr16] = r5
	NZ = cond(v45)
	V = false
	// succ:  l1346
l1346:
	v48 = Mem0[sp:word16]
	sp = sp + 0x0002
	r4 = v48
	NZ = cond(r4)
	V = false
	v49 = Mem0[sp:word16]
	sp = sp + 0x0002
	r5 = v49
	NZ = cond(r5)
	V = false
	return
	// succ:  fn12CA_exit
l134C:
	v51 = Mem0[r3 + 0x001C:word16] - r1
	NZVC = cond(v51)
	branch Test(UGE,C) l1346
	// succ:  l1352 l1346
l1352:
	v52 = Mem0[r1:byte]
	r1 = r1 + 0x0001
	r0 = (int16) v52
	NZ = cond(r0)
	V = false
	call fn1370 (retsize: 2; FPU: 2;)
	sp = sp + 0x0002
	goto l134C
	// succ:  l134C
fn12CA_exit:


// fn1366
// Return size: 2
void fn1366()
fn1366_entry:
	// succ:  l1366
l1366:
	sp = fp
	v5 = Mem0[r4:byte]
	v5 = v5 & v5
	NZ = cond(v5)
	C = false
	V = false
	branch Test(GT,N) l1370
	goto l136A
	// succ:  l136A l1368_thunk_fn1370
l1368_thunk_fn1370:
	call fn1370 (retsize: 0;)
	return
	// succ:  fn1366_exit
l136A:
	C = TTYOUT(r0)
	branch Test(ULT,C) l136A
	// succ:  l136C_thunk_fn1370 l136A
l136C_thunk_fn1370:
	call fn1370 (retsize: 0;)
	return
	// succ:  fn1366_exit
fn1366_exit:


// fn1370
// Return size: 0
void fn1370()
fn1370_entry:
	goto l1370
	// succ:  l1370
l136E:
	return
	// succ:  fn1370_exit
l1370:
	sp = fp
	r2 = Mem0[r4 + 0x000E:word16]
	NZ = cond(r2)
	V = false
	r2 = r2 + Mem0[r4 + 0x0002:word16]
	NZVC = cond(r2)
	v9 = r0
	Mem0[r2:byte] = v9
	NZ = cond(v9)
	V = false
	Mem0[r4 + 0x000E:word16] = Mem0[r4 + 0x000E:word16] + 0x0001
	NZV = cond(v10)
	v12 = Mem0[r4 + 0x000E:word16] & 0x01FF
	Mem0[r4 + 0x000E:word16] = v12
	NZ = cond(v12)
	V = false
	branch Test(NE,Z) l136E
	// succ:  l1386 l136E
l1386:
	Mem0[r4 + 0x000E:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l1386_thunk_fn1836
l1386_thunk_fn1836:
	call fn1836 (retsize: 0;)
	return
	// succ:  fn1370_exit
fn1370_exit:


// fn13FE
// Return size: 2
void fn13FE()
fn13FE_entry:
	// succ:  l13FE
l13FE:
	sp = fp
	__syscall(0x88A0)
	__syscall(0x88A1)
	__syscall(0x88A2)
	__syscall(0x88A3)
	__syscall(0x88A4)
	__syscall(0x88A5)
	__syscall(0x88A6)
	__syscall(0x88A7)
	__syscall(0x88A8)
	__syscall(0x88A9)
	__syscall(0x88AA)
	__syscall(0x88AB)
	__syscall(0x88AC)
	__syscall(0x88AD)
	__syscall(0x88AE)
	__syscall(0x88AF)
	return
	// succ:  fn13FE_exit
fn13FE_exit:


// fn1420
// Return size: 2
void fn1420()
fn1420_entry:
	// succ:  l1420
l1420:
	sp = fp
	v4 = r2
	v4 = v4 & v4
	NZ = cond(v4)
	C = false
	V = false
	branch Test(LE,NZV) l142A
	// succ:  l1424 l142A
l1424:
	v9 = r2 - 0x0063
	NZVC = cond(v9)
	branch Test(GE,NV) l142C
	// succ:  l142A l142C
l142A:
	__syscall(0x8994)
	// succ:  l142C
l142C:
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r3 + 0x0004:word16]
	NZ = cond(v14)
	V = false
	r1 = Mem0[sp:word16]
	NZ = cond(r1)
	V = false
	// succ:  l1432
l1432:
	v17 = Mem0[r1:word16]
	r1 = r1 + 0x0002
	v18 = v17 - r2
	NZVC = cond(v18)
	branch Test(EQ,Z) l144A
	// succ:  l1436 l144A
l1436:
	v21 = Mem0[r3 + 0x0002:word16] - r1
	NZVC = cond(v21)
	branch Test(ULT,C) l1432
	// succ:  l143C l1432
l143C:
	r1 = Mem0[sp:word16]
	NZ = cond(r1)
	V = false
	// succ:  l143E
l143E:
	v23 = Mem0[r1:byte]
	r1 = r1 + 0x0001
	v24 = v23
	v24 = v24 & v24
	NZ = cond(v24)
	C = false
	V = false
	branch Test(EQ,Z) l144A
	// succ:  l1442 l144A
l1442:
	v26 = Mem0[r3 + 0x0002:word16] - r1
	NZVC = cond(v26)
	branch Test(ULT,C) l143E
	// succ:  l1448 l143E
l1448:
	__syscall(0x8995)
	// succ:  l144A
l144A:
	r1 = r1 - 0x0001
	Mem0[r1:byte] = r2
	NZ = cond(v27)
	V = false
	r0 = Mem0[r3 + 0x0006:word16]
	NZ = cond(r0)
	V = false
	v30 = Mem0[sp:word16]
	sp = sp + 0x0002
	r1 = r1 - v30
	NZVC = cond(r1)
	branch Test(EQ,Z) l145C
	// succ:  l1454 l145C
l1454:
	r0 = r0 + 0x0020
	NZVC = cond(r0)
	r1 = r1 - 0x0001
	NZV = cond(r1)
	branch Test(NE,Z) l1454
	// succ:  l145C l1454
l145C:
	return
	// succ:  fn1420_exit
fn1420_exit:


// fn145E
// Return size: 2
void fn145E()
fn145E_entry:
	// succ:  l145E
l145E:
	sp = fp
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	r0 = sp
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x0016
	NZVC = cond(r0)
	Mem0[r3 + 0x0064:word16] = r0
	NZ = cond(v10)
	V = false
	Mem0[r3 + 0x00A2:byte] = r2
	NZ = cond(v12)
	V = false
	v14 = Mem0[r3 + 0x0014:word16]
	v14 = v14 & v14
	NZ = cond(v14)
	C = false
	V = false
	branch Test(EQ,Z) l1478
	// succ:  l1476 l1478
l1476:
	__syscall(0x899A)
	// succ:  l1478
l1478:
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v17
	NZ = cond(r0)
	V = false
	v18 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0012:word16] = v18
	NZ = cond(v19)
	V = false
	v20 = Mem0[Mem0[sp:ptr16]:word16]
	sp = sp + 0x0002
	r2 = v20
	NZ = cond(r2)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v21)
	V = false
	call fn1420 (retsize: 2; FPU: 2;)
	Mem0[r3 + 0x0014:word16] = r0
	NZ = cond(v23)
	V = false
	v24 = Mem0[r0:word16] & 0x0800
	Mem0[r0:word16] = v24
	NZ = cond(v24)
	V = false
	v25 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v25 (retsize: 2; FPU: 2;)
	v26 = Mem0[r0:word16] & 0x0800
	Mem0[r0:word16] = v26
	NZ = cond(v26)
	V = false
	branch Test(NE,Z) l149A
	// succ:  l1496 l149A
l1496:
	call fn45F6 (retsize: 2; FPU: 2;)
	// succ:  l149A
l149A:
	Mem0[r3 + 0x001A:word16] = Mem0[r3 + 0x0002:word16]
	NZ = cond(v29)
	V = false
	Mem0[r3 + 0x0058:word16] = Mem0[r3 + 0x000C:word16]
	NZ = cond(v31)
	V = false
	return
	// succ:  fn145E_exit
fn145E_exit:


// fn14A8
// Return size: 2
void fn14A8()
fn14A8_entry:
	// succ:  l14A8
l14A8:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v4)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v8)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r2
	NZ = cond(v10)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	Mem0[r3 + 0x00A2:byte] = r2
	NZ = cond(v14)
	V = false
	call fn1420 (retsize: 2; FPU: 2;)
	Mem0[r3 + 0x0014:word16] = r0
	NZ = cond(v17)
	V = false
	v18 = Mem0[r0:word16] & 0x0800
	Mem0[r0:word16] = v18
	NZ = cond(v18)
	V = false
	branch Test(EQ,Z) l15A0
	// succ:  l14C4 l15A0
l14C4:
	v21 = Mem0[r0:byte]
	v21 = v21 & v21
	NZ = cond(v21)
	C = false
	V = false
	branch Test(LT,N) l15C4
	// succ:  l14C8 l15C4
l14C8:
	call fn1D30 (retsize: 2; FPU: 2;)
	v25 = Mem0[r4:word16] & 0x0200
	Mem0[r4:word16] = v25
	NZ = cond(v25)
	V = false
	branch Test(EQ,Z) l1526
	// succ:  l14D2 l1526
l14D2:
	Mem0[r4 + 0x0016:word16] = Mem0[r4 + 0x0018:word16]
	NZ = cond(v27)
	V = false
	branch Test(EQ,Z) l1526
	// succ:  l14DA l1526
l14DA:
	r2 = Mem0[r4 + 0x0002:word16]
	NZ = cond(r2)
	V = false
	r5 = 0x0100
	NZ = cond(r5)
	V = false
	// succ:  l14E2
l14E2:
	v29 = 0x0000
	Mem0[r2:word16] = v29
	r2 = r2 + 0x0002
	C = false
	V = false
	N = false
	Z = true
	r5 = r5 - 0x0001
	NZV = cond(r5)
	branch Test(NE,Z) l14E2
	// succ:  l14E8 l14E2
l14E8:
	v31 = Mem0[r4:word16] & 0x0100
	Mem0[r4:word16] = v31
	NZ = cond(v31)
	V = false
	branch Test(NE,Z) l14FC
	// succ:  l14EE l14FC
l14EE:
	v34 = Mem0[r4 + 0x001A:word16] - Mem0[r4 + 0x0016:word16]
	NZVC = cond(v34)
	branch Test(UGT,ZC) l1526
	// succ:  l14F6 l1526
l14F6:
	call fn1836 (retsize: 2; FPU: 2;)
	sp = sp + 0x0002
	goto l14EE
	// succ:  l14EE
l14FC:
	Mem0[r3 + 0x0070:word16] = 0x1520
	NZ = cond(v48)
	V = false
	v50 = Mem0[r3 + 0x0074:byte]
	v50 = v50 & v50
	NZ = cond(v50)
	C = false
	V = false
	branch Test(EQ,Z) l150E
	// succ:  l1508 l150E
l1508:
	Mem0[r3 + 0x0072:word16] = 0x151E
	NZ = cond(v51)
	V = false
	// succ:  l150E
l150E:
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v52)
	V = false
	sp = sp - 0x0001
	Mem0[sp:byte] = Mem0[r3 + 0x00A2:byte]
	NZ = cond(v54)
	V = false
	Mem0[r3 + 0x0064:word16] = sp
	NZ = cond(v55)
	V = false
	// succ:  l1518
l1518:
	call fn1836 (retsize: 2; FPU: 2;)
	sp = sp + 0x0002
	goto l1518
	// succ:  l1518
l1526:
	call fn13FE (retsize: 2; FPU: 2;)
	r5 = Mem0[r4 + 0x0004:word16]
	NZ = cond(r5)
	V = false
	r5 = r5 << 1
	NZVC = cond(r5)
	r2 = Mem0[r4 + 0x0002:word16]
	NZ = cond(r2)
	V = false
	v60 = Mem0[r4:word16] & 0x0001
	Mem0[r4:word16] = v60
	NZ = cond(v60)
	V = false
	branch Test(EQ,Z) l153E
	// succ:  l153A l153E
l153A:
	r2 = r2 - 0x0200
	NZVC = cond(r2)
	// succ:  l153E
l153E:
	sp = sp - 0x0002
	Mem0[sp:word16] = r2
	NZ = cond(v73)
	V = false
	r0 = r2
	NZ = cond(r0)
	V = false
	r0 = r0 + r5
	NZVC = cond(r0)
	// succ:  l1544
l1544:
	v74 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	v75 = v74
	Mem0[r2:word16] = v75
	r2 = r2 + 0x0002
	NZ = cond(v75)
	V = false
	v77 = Mem0[r3 + 0x000C:word16] - r0
	NZVC = cond(v77)
	branch Test(ULT,C) l1544
	// succ:  l154C l1544
l154C:
	v78 = Mem0[r3 + 0x000C:word16] - r5
	Mem0[r3 + 0x000C:word16] = v78
	NZVC = cond(v78)
	r0 = 0x0600
	NZ = cond(r0)
	V = false
	v79 = Mem0[r4:word16] & 0x0004
	Mem0[r4:word16] = v79
	NZ = cond(v79)
	V = false
	branch Test(EQ,Z) l155E
	// succ:  l155A l155E
l155A:
	r0 = 0x0300
	NZ = cond(r0)
	V = false
	// succ:  l155E
l155E:
	r1 = (int16) Mem0[r4 + 0x0011:byte]
	NZ = cond(r1)
	V = false
	r0 = r0 | r1
	NZ = cond(r0)
	V = false
	__syscall(0x88FC)
	r0 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	C = true
	// succ:  l156A
l156A:
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	r1 = r1 - 0x0001
	NZV = cond(r1)
	branch Test(GT,N) l156A
	// succ:  l1570 l156A
l1570:
	v85 = Mem0[r3 + 0x0010:word16] & ~r0
	Mem0[r3 + 0x0010:word16] = v85
	NZ = cond(v85)
	V = false
	// succ:  l1574
l1574:
	Mem0[r3 + 0x0072:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0070:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r4 = Mem0[r3 + 0x0004:word16]
	NZ = cond(r4)
	V = false
	// succ:  l1580
l1580:
	v66 = Mem0[r3 + 0x0002:word16] - r4
	NZVC = cond(v66)
	branch Test(UGE,C) l159A
	// succ:  l1586 l159A
l1586:
	v67 = Mem0[r4:byte]
	r4 = r4 + 0x0001
	r2 = (int16) v67
	NZ = cond(r2)
	V = false
	branch Test(EQ,Z) l1580
	// succ:  l158A l1580
l158A:
	call fn1420 (retsize: 2; FPU: 2;)
	v71 = Mem0[r0 + 0x0002:word16] - Mem0[sp:word16]
	NZVC = cond(v71)
	branch Test(UGE,C) l1580
	// succ:  l1594 l1580
l1594:
	v72 = Mem0[r0 + 0x0002:word16] - r5
	Mem0[r0 + 0x0002:word16] = v72
	NZVC = cond(v72)
	goto l1580
	// succ:  l1580
l159A:
	v80 = Mem0[sp:word16]
	sp = sp + 0x0002
	v81 = v80
	v81 = v81 & v81
	NZ = cond(v81)
	C = false
	V = false
	r0 = Mem0[r3 + 0x0014:word16]
	NZ = cond(r0)
	V = false
	// succ:  l15A0
l15A0:
	r4 = 0x0010
	NZ = cond(r4)
	V = false
	// succ:  l15A4
l15A4:
	v38 = 0x0000
	Mem0[r0:word16] = v38
	r0 = r0 + 0x0002
	C = false
	V = false
	N = false
	Z = true
	r4 = r4 - 0x0001
	NZV = cond(r4)
	branch Test(NE,Z) l15A4
	// succ:  l15AA l15A4
l15AA:
	r0 = Mem0[r3 + 0x0004:word16]
	NZ = cond(r0)
	V = false
	v40 = Mem0[sp:word16]
	sp = sp + 0x0002
	r2 = v40
	NZ = cond(r2)
	V = false
	// succ:  l15B0
l15B0:
	v41 = Mem0[r0:word16]
	r0 = r0 + 0x0002
	v42 = r2 - v41
	NZVC = cond(v42)
	branch Test(NE,Z) l15B0
	// succ:  l15B4 l15B0
l15B4:
	r0 = r0 - 0x0001
	Mem0[r0:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0014:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x00A2:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	v46 = Mem0[sp:word16]
	sp = sp + 0x0002
	r4 = v46
	NZ = cond(r4)
	V = false
	v47 = Mem0[sp:word16]
	sp = sp + 0x0002
	r5 = v47
	NZ = cond(r5)
	V = false
	return
	// succ:  fn14A8_exit
l15C4:
	r4 = r0
	NZ = cond(r4)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0xFFFF
	NZ = cond(v61)
	V = false
	goto l1574
	// succ:  l1574
fn14A8_exit:


// fn15CC
// Return size: 2
void fn15CC()
fn15CC_entry:
	// succ:  l15CC
l15CC:
	sp = fp
	v5 = Mem0[r5:word16] - 0x0003
	NZVC = cond(v5)
	branch Test(EQ,Z) l15D6
	// succ:  l15D2 l15D6
l15D2:
	__syscall(0x8990)
	goto l1614
	// succ:  l1614
l15D6:
	sp = sp - 0x0002
	sp = sp - 0x0002
	v10 = Mem0[sp:word16] - Mem0[sp:word16]
	NZVC = cond(v10)
	r0 = sp
	NZ = cond(r0)
	V = false
	v14 = 0x1100
	Mem0[r0:word16] = v14
	NZ = cond(v14)
	V = false
	Mem0[r0 + 0x0002:word16] = sp
	NZ = cond(v15)
	V = false
	FnSubfn(r0)
	v16 = Mem0[sp:word16]
	sp = sp + 0x0002
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	v18 = v17 - v16
	NZVC = cond(v18)
	r0 = 0x0A00
	NZ = cond(r0)
	V = false
	__syscall(0x88FC)
	r3 = 0xFFE0
	NZ = cond(r3)
	V = false
	r2 = r0
	NZ = cond(r2)
	V = false
	branch Test(EQ,Z) l15FA
	// succ:  l15F4 l15FA
l15F4:
	r2 = r2 & ~r3
	NZ = cond(r2)
	V = false
	r2 = r2 + 0x0048
	NZVC = cond(r2)
	// succ:  l15FA
l15FA:
	r0 = r0 >> 1
	NZVC = cond(r0)
	r0 = r0 >> 1
	NZVC = cond(r0)
	r1 = (int16) r0
	NZ = cond(r1)
	V = false
	r1 = r1 >> 1
	NZVC = cond(r1)
	r1 = r1 >> 1
	NZVC = cond(r1)
	r1 = r1 >> 1
	NZVC = cond(r1)
	r1 = r1 & ~r3
	NZ = cond(r1)
	V = false
	r0 = __swab(r0)
	NZ = cond(r0)
	C = false
	V = false
	r0 = r0 & ~r3
	NZ = cond(r0)
	V = false
	v23 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	v24 = r0 - v23
	NZVC = cond(v24)
	v25 = r0
	Mem0[Mem0[r5:word16]:ptr16] = v25
	r5 = r5 + 0x0002
	NZ = cond(v25)
	V = false
	v26 = r1
	Mem0[Mem0[r5:word16]:ptr16] = v26
	r5 = r5 + 0x0002
	NZ = cond(v26)
	V = false
	v27 = r2
	Mem0[Mem0[r5:word16]:ptr16] = v27
	r5 = r5 + 0x0002
	NZ = cond(v27)
	V = false
	// succ:  l1614
l1614:
	return
	// succ:  fn15CC_exit
fn15CC_exit:


// fn16DA
// Return size: 2
void fn16DA()
fn16DA_entry:
	// succ:  l16DA
l16DA:
	sp = fp
	Mem0[r4 + 0x000E:word16] = r2
	NZ = cond(v5)
	V = false
	v11 = Mem0[r3 + 0x005E:word16] - Mem0[r4 + 0x0016:word16]
	NZVC = cond(v11)
	branch Test(EQ,Z) l1718
	// succ:  l16E6 l1718
l16E6:
	v14 = Mem0[r4:word16] & 0x0002
	Mem0[r4:word16] = v14
	NZ = cond(v14)
	V = false
	branch Test(EQ,Z) l16F8
	// succ:  l16EC l16F8
l16EC:
	call fn1836 (retsize: 2; FPU: 2;)
	sp = sp + 0x0002
	Mem0[r4 + 0x0018:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v20 = Mem0[r4:word16] & ~0x0002
	Mem0[r4:word16] = v20
	NZ = cond(v20)
	V = false
	// succ:  l16F8
l16F8:
	Mem0[r4 + 0x0016:word16] = Mem0[r3 + 0x005E:word16]
	NZ = cond(v25)
	V = false
	v27 = Mem0[r4:word16]
	v27 = v27 & v27
	NZ = cond(v27)
	C = false
	V = false
	branch Test(GT,N) l1710
	// succ:  l1702 l1710
l1702:
	v29 = Mem0[r3 + 0x005C:word16] - 0x0200
	NZVC = cond(v29)
	branch Test(GT,NZV) l1710
	// succ:  l170A l1710
l170A:
	v31 = Mem0[r4 + 0x000E:word16]
	v31 = v31 & v31
	NZ = cond(v31)
	C = false
	V = false
	branch Test(EQ,Z) l1718
	// succ:  l1710 l1718
l1710:
	call fn18BE (retsize: 2; FPU: 2;)
	Mem0[r4 + 0x0016:word16] = Mem0[r4 + 0x0016:word16] - 0x0001
	NZV = cond(v34)
	// succ:  l1718
l1718:
	Mem0[r3 + 0x005E:word16] = Mem0[r3 + 0x005E:word16] + 0x0001
	NZV = cond(v22)
	return
	// succ:  fn16DA_exit
fn16DA_exit:


// fn171E
// Return size: 2
void fn171E()
fn171E_entry:
	// succ:  l171E
l171E:
	sp = fp
	r2 = Mem0[Mem0[r3 + 0x0012:ptr16]:word16]
	NZ = cond(r2)
	V = false
	Mem0[Mem0[r0 + 0x0012:word16]:ptr16] = r2
	NZ = cond(v9)
	V = false
	Mem0[Mem0[r0 + 0x0012:word16]:ptr16] = Mem0[Mem0[r0 + 0x0012:ptr16]:word16] + 0x0001
	NZV = cond(v11)
	r2 = r2 - 0x0001
	NZV = cond(r2)
	// succ:  l172A_thunk_fn172C
l172A_thunk_fn172C:
	call fn172C (retsize: 2;)
	return
	// succ:  fn171E_exit
fn171E_exit:


// fn172C
// Return size: 2
void fn172C()
fn172C_entry:
	// succ:  l172C
l172C:
	sp = fp
	r3 = Mem0[r0 + 0x0014:word16]
	NZ = cond(r3)
	V = false
	r1 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v13)
	V = false
	r4 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r5 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l1738
l1738:
	r3 = r3 >> 1
	NZVC = cond(r3)
	branch Test(ULT,C) l1766
	// succ:  l173C l1766
l173C:
	branch Test(NE,Z) l176C
	// succ:  l173E l176C
l173E:
	r2 = r1
	NZ = cond(r2)
	V = false
	r1 = DPB(r1, 0x00, 0)
	C = false
	V = false
	N = false
	Z = true
	r2 = r2 & ~r1
	NZ = cond(r2)
	V = false
	r1 = __swab(r1)
	NZ = cond(r1)
	C = false
	V = false
	r4 = __swab(r4)
	NZ = cond(r4)
	C = false
	V = false
	branch Test(EQ,Z) l174C
	// succ:  l174A l174C
l174A:
	__syscall(0x89A8)
	// succ:  l174C
l174C:
	r1 = r1 | r4
	NZ = cond(r1)
	V = false
	v17 = Mem0[sp:word16]
	sp = sp + 0x0002
	r5 = v17
	NZ = cond(r5)
	V = false
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	Mem0[r3 + 0x005E:word16] = r1
	NZ = cond(v20)
	V = false
	Mem0[r3 + 0x005C:word16] = Mem0[r0 + 0x0014:word16]
	NZ = cond(v22)
	V = false
	r2 = r2 << 1
	NZVC = cond(r2)
	v23 = Mem0[r3 + 0x005C:word16] << 1
	Mem0[r3 + 0x005C:word16] = v23
	NZVC = cond(v23)
	return
	// succ:  fn172C_exit
l1766:
	r1 = r1 + r2
	NZVC = cond(r1)
	r4 = r4 + C
	NZVC = cond(r4)
	r4 = r4 + r5
	NZVC = cond(r4)
	// succ:  l176C
l176C:
	r2 = r2 << 1
	NZVC = cond(r2)
	r5 = __rol(r5, r5)
	NZVC = cond(r5)
	goto l1738
	// succ:  l1738
fn172C_exit:


// fn1836
// Return size: 0
void fn1836()
fn1836_entry:
	// succ:  l1836
l1836:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v4)
	V = false
	Mem0[r4 + 0x0018:word16] = Mem0[r4 + 0x0016:word16]
	NZ = cond(v8)
	V = false
	Mem0[r4 + 0x0018:word16] = Mem0[r4 + 0x0018:word16] + 0x0001
	NZV = cond(v9)
	v11 = Mem0[r4 + 0x001A:word16] - Mem0[r4 + 0x0016:word16]
	NZVC = cond(v11)
	branch Test(ULT,C) l1850
	// succ:  l184A l1850
l184A:
	Mem0[r4 + 0x001A:word16] = Mem0[r4 + 0x0016:word16]
	NZ = cond(v14)
	V = false
	// succ:  l1850
l1850:
	v15 = Mem0[r4:word16] & 0x0040
	Mem0[r4:word16] = v15
	NZ = cond(v15)
	V = false
	branch Test(EQ,Z) l1860
	// succ:  l1856 l1860
l1856:
	v17 = Mem0[r4:word16] & ~0x8000
	Mem0[r4:word16] = v17
	NZ = cond(v17)
	V = false
	Mem0[r4 + 0x0018:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	__syscall(0x89A3)
	// succ:  l1860
l1860:
	call fn1900 (retsize: 2; FPU: 2;)
	sp = sp + 0xFFFE
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x099E
	NZ = cond(v19)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x8890
	NZ = cond(v20)
	V = false
	v21 = Mem0[sp:word16] | Mem0[r4 + 0x0011:word16]
	Mem0[sp:word16] = v21
	NZ = cond(v21)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x1888
	NZ = cond(v22)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0001
	NZ = cond(v23)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0100
	NZ = cond(v24)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r4 + 0x0002:word16]
	NZ = cond(v25)
	V = false
	r0 = Mem0[r4 + 0x0016:word16]
	NZ = cond(r0)
	V = false
	call Mem0[sp + 0x0008:word16] (retsize: 4; FPU: 2;)
	return
	// succ:  fn1836_exit
fn1836_exit:


// fn18BE
// Return size: 0
void fn18BE()
fn18BE_entry:
	// succ:  l18BE
l18BE:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v4)
	V = false
	v9 = Mem0[r4 + 0x0018:word16]
	v9 = v9 & v9
	NZ = cond(v9)
	C = false
	V = false
	branch Test(EQ,Z) l18CE
	// succ:  l18C6 l18CE
l18C6:
	v14 = Mem0[r4 + 0x0018:word16] - Mem0[r4 + 0x0016:word16]
	NZVC = cond(v14)
	branch Test(UGE,C) l18CC_thunk_fn1932
	goto l18CE
	// succ:  l18CE l18CC_thunk_fn1932
l18CC_thunk_fn1932:
	call fn1932 (retsize: 0;)
	return
	// succ:  fn18BE_exit
l18CE:
	call fn1900 (retsize: 2; FPU: 2;)
	sp = sp + 0xFFFE
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x099E
	NZ = cond(v18)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x8880
	NZ = cond(v19)
	V = false
	v21 = Mem0[sp:word16] | Mem0[r4 + 0x0011:word16]
	Mem0[sp:word16] = v21
	NZ = cond(v21)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x18F4
	NZ = cond(v22)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0100
	NZ = cond(v25)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r4 + 0x0002:word16]
	NZ = cond(v27)
	V = false
	r0 = Mem0[r4 + 0x0016:word16]
	NZ = cond(r0)
	V = false
	call Mem0[sp + 0x0008:word16] (retsize: 4; FPU: 2;)
	return
	// succ:  fn18BE_exit
fn18BE_exit:


// fn18F6
// Return size: 2
void fn18F6()
fn18F6_entry:
	// succ:  l18F6
l18F6:
	sp = fp
	Mem0[r4 + 0x0016:word16] = Mem0[r4 + 0x0016:word16] + 0x0001
	NZV = cond(v5)
	r2 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v12 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v12
	NZ = cond(r0)
	V = false
	goto l18FC_thunk_fn18FE
	// succ:  l18FC_thunk_fn18FE
l18F6:
l18FC_thunk_fn18FE:
	call fn18FE (retsize: 2;)
	return
	// succ:  fn18F6_exit
fn18F6_exit:


// fn18FE
// Return size: 2
void fn18FE()
fn18FE_entry:
	// succ:  l18FE
l18FE:
	sp = fp
	return
	// succ:  fn18FE_exit
l18FE:
fn18FE_exit:


// fn1900
// Return size: 2
void fn1900()
fn1900_entry:
	// succ:  l1900
l1900:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x099E
	NZ = cond(v3)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x88A0
	NZ = cond(v6)
	V = false
	v9 = Mem0[sp:word16] | Mem0[r4 + 0x0011:word16]
	Mem0[sp:word16] = v9
	NZ = cond(v9)
	V = false
	call sp (retsize: 2; FPU: 2;)
	branch Test(UGE,C) l190E_thunk_fn18FE
	goto l1910
	// succ:  l1910 l190E_thunk_fn18FE
l190E_thunk_fn18FE:
	call fn18FE (retsize: 2;)
	return
	// succ:  fn1900_exit
l1910:
	v12 = Mem0[r4:word16] & ~0x8002
	Mem0[r4:word16] = v12
	NZ = cond(v12)
	V = false
	v13 = Mem0[r4:word16] & 0x4000
	Mem0[r4:word16] = v13
	NZ = cond(v13)
	V = false
	branch Test(EQ,Z) l1920
	// succ:  l191A l1920
l191A:
	Mem0[r4 + 0x0016:word16] = 0xFFFF
	NZ = cond(v15)
	V = false
	// succ:  l1920
l1920:
	v17 = Mem0[0x002A:byte]
	v17 = v17 & v17
	NZ = cond(v17)
	C = false
	V = false
	branch Test(EQ,Z) l1932
	goto l1926
	// succ:  l1926 l1924_thunk_fn1932
l1924_thunk_fn1932:
	call fn1932 (retsize: 0;)
	return
	// succ:  fn1900_exit
l1926:
	Mem0[r3 + 0x0070:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r4 = Mem0[r3 + 0x0072:word16]
	NZ = cond(r4)
	V = false
	branch Test(NE,Z) l194A
	goto l1930
	// succ:  l1930 l192E_thunk_fn1932
l192E_thunk_fn1932:
	call fn1932 (retsize: 0;)
	return
	// succ:  fn1900_exit
l1930:
	__syscall(0x8997)
	// succ:  l1930_thunk_fn1932
l1930_thunk_fn1932:
	call fn1932 (retsize: 0;)
	return
	// succ:  fn1900_exit
fn1900_exit:


// fn1932
// Return size: 0
void fn1932()
fn1932_entry:
	goto l1932
	// succ:  l1932
l0E92:
	sp = Mem0[r3 + 0x0064:word16]
	NZ = cond(sp)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0EF4
	NZ = cond(v13)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r3
	NZ = cond(v14)
	V = false
	v15 = Mem0[r3 + 0x0074:byte]
	v15 = v15 & v15
	NZ = cond(v15)
	C = false
	V = false
	branch Test(NE,Z) l0EDA_in_fn1900
	// succ:  l0EA2 l0EDA_in_fn1900
l0EA2:
	Mem0[sp + 0x0002:word16] = r4
	NZ = cond(v16)
	V = false
	// succ:  l0EDA_in_fn1900
l0EDA_in_fn1900:
	Mem0[r3 + 0x0072:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0070:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0014:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x000C:word16] = Mem0[r3 + 0x0058:word16]
	NZ = cond(v17)
	V = false
	Mem0[r3 + 0x00A2:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	v18 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v19
	NZ = cond(r3)
	V = false
	return
	// succ:  fn1932_exit
l0EDA_in_fn1900:
	Mem0[r3 + 0x0072:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0070:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x0014:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[r3 + 0x000C:word16] = Mem0[r3 + 0x0058:word16]
	NZ = cond(v20)
	V = false
	Mem0[r3 + 0x00A2:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	v21 = Mem0[sp:word16]
	sp = sp + 0x0002
	r3 = v22
	NZ = cond(r3)
	V = false
	return
	// succ:  fn1932_exit
l1932:
	sp = v3
	v5 = Mem0[r4 + 0x001C:word16] & 0x0008
	Mem0[r4 + 0x001C:word16] = v5
	NZ = cond(v5)
	V = false
	branch Test(NE,Z) l1938_thunk_fn18F6
	goto l193A
	// succ:  l193A l1938_thunk_fn18F6
l1938_thunk_fn18F6:
	call fn18F6 (retsize: 2;)
	return
	// succ:  fn1932_exit
l193A:
	v9 = Mem0[r4:word16] | 0x1000
	Mem0[r4:word16] = v9
	NZ = cond(v9)
	V = false
	Mem0[r3 + 0x0072:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r4 = Mem0[r3 + 0x0070:word16]
	NZ = cond(r4)
	V = false
	branch Test(NE,Z) l194A
	// succ:  l1948 l194A
l1948:
	__syscall(0x8998)
	// succ:  l194A
l194A:
	goto 0x0E92
	goto l0E92
	// succ:  l0E92
fn1932_exit:


// fn194E
// Return size: 2
void fn194E()
fn194E_entry:
	// succ:  l194E
l194E:
	sp = fp
	r1 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r1 = r1 | Mem0[Mem0[r3 + 0x0012:ptr16]:word16]
	NZ = cond(r1)
	V = false
	Mem0[r3 + 0x0012:word16] = Mem0[r3 + 0x0012:word16] + 0x0001
	NZV = cond(v12)
	return
	// succ:  fn194E_exit
fn194E_exit:


// fn195A
// Return size: 2
void fn195A()
fn195A_entry:
	// succ:  l195A
l195A:
	sp = fp
	call fn196A (retsize: 2; FPU: 2;)
	r0 = (int16) Mem0[r0:byte]
	NZ = cond(r0)
	V = false
	return
	// succ:  fn195A_exit
fn195A_exit:


// fn1962
// Return size: 2
void fn1962()
fn1962_entry:
	// succ:  l1962
l1962:
	sp = fp
	r0 = (int16) 0x20
	NZ = cond(r0)
	V = false
	Mem0[Mem0[r3 + 0x001C:byte]:ptr16] = r0
	NZ = cond(v7)
	V = false
	r0 = Mem0[r3 + 0x001C:word16]
	NZ = cond(r0)
	V = false
	v10 = Mem0[r3 + 0x0018:word16] - r0
	NZVC = cond(v10)
	branch Test(UGE,C) l1978
	// succ:  l1972_thunk_fn1974 l1972_thunk_fn1974
l1972_thunk_fn1974:
	call fn1974 (retsize: 0;)
	return
	// succ:  fn1962_exit
l1972_thunk_fn1974:
	call fn1974 (retsize: 0;)
	return
	// succ:  fn1962_exit
fn1962_exit:


// fn1966
// Return size: 0
void fn1966()
fn1966_entry:
	// succ:  l1966
l1966:
	sp = fp
	Mem0[Mem0[r3 + 0x001C:byte]:ptr16] = r0
	NZ = cond(v5)
	V = false
	r0 = Mem0[r3 + 0x001C:word16]
	NZ = cond(r0)
	V = false
	v10 = Mem0[r3 + 0x0018:word16] - r0
	NZVC = cond(v10)
	branch Test(UGE,C) l1978_in_fn1966
	// succ:  l1972_thunk_fn1974 l1978_in_fn1966
l1972_thunk_fn1974:
	call fn1974 (retsize: 0;)
	return
	// succ:  fn1966_exit
l1978_in_fn1966:
	return
	// succ:  fn1966_exit
fn1966_exit:


// fn196A
// Return size: 0
void fn196A()
fn196A_entry:
	// succ:  l196A
l196A:
	sp = fp
	r0 = Mem0[r3 + 0x001C:word16]
	NZ = cond(r0)
	V = false
	v9 = Mem0[r3 + 0x0018:word16] - r0
	NZVC = cond(v9)
	branch Test(UGE,C) l1978_in_fn196A
	// succ:  l1972_thunk_fn1974 l1978_in_fn196A
l1972_thunk_fn1974:
	call fn1974 (retsize: 0;)
	return
	// succ:  fn196A_exit
l1978_in_fn196A:
	return
	// succ:  fn196A_exit
fn196A_exit:


// fn1974
// Return size: 0
void fn1974()
fn1974_entry:
	// succ:  l1974
l1974:
	sp = v3
	Mem0[r3 + 0x001C:word16] = Mem0[r3 + 0x001C:word16] + 0x0001
	NZV = cond(v5)
	// succ:  l1978
l1978:
	return
	// succ:  fn1974_exit
fn1974_exit:


// fn197A
// Return size: 2
void fn197A()
fn197A_entry:
	// succ:  l197A
l197A:
	sp = fp
	v6 = Mem0[r3 + 0x0046:word16] - Mem0[r3 + 0x001C:word16]
	NZVC = cond(v6)
	branch Test(UGE,C) l1988
	// succ:  l1982 l1988
l1982:
	Mem0[r3 + 0x001C:word16] = Mem0[r3 + 0x0046:word16]
	NZ = cond(v10)
	V = false
	// succ:  l1988
l1988:
	Mem0[r3 + 0x0046:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v17 = Mem0[r3 + 0x0056:word16]
	v17 = v17 & v17
	NZ = cond(v17)
	C = false
	V = false
	branch Test(NE,Z) l199E
	// succ:  l1992 l199E
l1992:
	r0 = (int16) 0x0D
	NZ = cond(r0)
	V = false
	call fn1966 (retsize: 2; FPU: 2;)
	call Mem0[r3 + 0x0060:ptr16] (retsize: 4; FPU: 2;)
	return
	// succ:  fn197A_exit
l199E:
	call Mem0[r3 + 0x0060:ptr16] (retsize: 2; FPU: 2;)
	Mem0[r3 + 0x0056:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v25 = Mem0[Mem0[r3 + 0x0014:ptr16]:byte]
	v25 = v25 & v25
	NZ = cond(v25)
	C = false
	V = false
	branch Test(GT,N) l19B0
	// succ:  l19AC l19B0
l19AC:
	Mem0[r3 + 0x0054:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l19B0
l19B0:
	return
	// succ:  fn197A_exit
fn197A_exit:


// fn1AA2
// Return size: 0
void fn1AA2()
fn1AA2_entry:
	// succ:  l1AA2
l1AA2:
	sp = v3
	Mem0[r3 + 0x001E:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v9 = Mem0[sp:word16]
	sp = sp + 0x0002
	call v9 (retsize: 2; FPU: 2;)
	r3 = Mem0[0x5424:word16]
	NZ = cond(r3)
	V = false
	Mem0[r3 + 0x0046:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v11 = Mem0[Mem0[r3 + 0x0014:ptr16]:word16]
	v11 = v11 & v11
	NZ = cond(v11)
	C = false
	V = false
	branch Test(LT,N) l1ABA
	// succ:  l1AB6 l1ABA
l1AB6:
	call Mem0[r3 + 0x0060:ptr16] (retsize: 2; FPU: 2;)
	// succ:  l1ABA
l1ABA:
	Mem0[r3 + 0x0020:word16] = Mem0[r3 + 0x0050:word16]
	NZ = cond(v12)
	V = false
	Mem0[r3 + 0x0042:word16] = Mem0[r3 + 0x0012:word16]
	NZ = cond(v13)
	V = false
	Mem0[r3 + 0x005C:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r2 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	call fn194E (retsize: 2; FPU: 2;)
	r0 = (int16) r1
	NZ = cond(r0)
	V = false
	branch Test(LT,N) l1AD8
	// succ:  l1AD4 l1AD8
l1AD4:
	r1 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	goto l1AE0
	// succ:  l1AE0
l1AD8:
	call fn194E (retsize: 2; FPU: 2;)
	r0 = r0 & ~0xFF80
	NZ = cond(r0)
	V = false
	// succ:  l1AE0
l1AE0:
	call Mem0[r0 + 0x1CC2:ptr16] (retsize: 4; FPU: 2;)
	return
	// succ:  fn1AA2_exit
fn1AA2_exit:


// fn1CFA
// Return size: 2
void fn1CFA()
fn1CFA_entry:
	// succ:  l1CFA
l1CFA:
	sp = fp
	return
	// succ:  fn1CFA_exit
fn1CFA_exit:


// fn1CFC
// Return size: 2
void fn1CFC()
fn1CFC_entry:
	// succ:  l1CFC
l1CFC:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v4)
	V = false
	r0 = sp
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x000A
	NZVC = cond(r0)
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r0:word16]
	NZ = cond(v9)
	V = false
	r0 = r0 - 0x0002
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r0:word16]
	NZ = cond(v11)
	V = false
	r0 = r0 - 0x0002
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r0:word16]
	NZ = cond(v13)
	V = false
	r0 = r0 - 0x0002
	v15 = Mem0[r0:word16]
	v15 = v15 & v15
	NZ = cond(v15)
	C = false
	V = false
	r0 = r0 - 0x0002
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r0:word16]
	NZ = cond(v18)
	V = false
	v19 = 0x1D26
	Mem0[r0:word16] = v19
	r0 = r0 + 0x0002
	NZ = cond(v19)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r0:word16]
	NZ = cond(v21)
	V = false
	v23 = r3
	Mem0[r0:word16] = v23
	r0 = r0 + 0x0002
	NZ = cond(v23)
	V = false
	v25 = r2
	Mem0[r0:word16] = v25
	r0 = r0 + 0x0002
	NZ = cond(v25)
	V = false
	v27 = r1
	Mem0[r0:word16] = v27
	r0 = r0 + 0x0002
	NZ = cond(v27)
	V = false
	v29 = Mem0[r0 + 0xFFF6:word16]
	Mem0[r0:word16] = v29
	r0 = r0 + 0x0002
	NZ = cond(v29)
	V = false
	Mem0[r0 + 0xFFF4:word16] = Mem0[r0:word16]
	NZ = cond(v31)
	V = false
	v32 = Mem0[sp:word16]
	sp = sp + 0x0002
	v33 = v32
	Mem0[r0:word16] = v33
	NZ = cond(v33)
	V = false
	return
	// succ:  fn1CFC_exit
fn1CFC_exit:


// fn1D30
// Return size: 2
void fn1D30()
fn1D30_entry:
	// succ:  l1D30
l1D30:
	sp = fp
	r4 = r0
	NZ = cond(r4)
	V = false
	v7 = Mem0[r0:word16] & 0x4000
	Mem0[r0:word16] = v7
	NZ = cond(v7)
	V = false
	branch Test(EQ,Z) l1D44
	// succ:  l1D38 l1D44
l1D38:
	v9 = Mem0[r0:word16] & 0x0002
	Mem0[r0:word16] = v9
	NZ = cond(v9)
	V = false
	branch Test(EQ,Z) l1D84
	// succ:  l1D3E l1D84
l1D3E:
	v10 = Mem0[r0:word16] & ~0x0002
	Mem0[r0:word16] = v10
	NZ = cond(v10)
	V = false
	goto l1D80
	// succ:  l1D80
l1D44:
	v12 = Mem0[r4:word16]
	v12 = v12 & v12
	NZ = cond(v12)
	C = false
	V = false
	branch Test(GT,N) l1D84
	// succ:  l1D48 l1D84
l1D48:
	v15 = Mem0[r4:word16] & 0x0200
	Mem0[r4:word16] = v15
	NZ = cond(v15)
	V = false
	branch Test(EQ,Z) l1D74
	// succ:  l1D4E l1D74
l1D4E:
	r2 = Mem0[r4 + 0x000E:word16]
	NZ = cond(r2)
	V = false
	r1 = r2
	NZ = cond(r1)
	V = false
	r2 = r2 + Mem0[r4 + 0x0002:word16]
	NZVC = cond(r2)
	v21 = Mem0[r0:word16] & 0x2000
	Mem0[r0:word16] = v21
	NZ = cond(v21)
	V = false
	branch Test(EQ,Z) l1D62
	// succ:  l1D5E l1D62
l1D5E:
	v22 = 0x00
	Mem0[r2:byte] = v22
	r2 = r2 + 0x0001
	C = false
	V = false
	N = false
	Z = true
	goto l1D66
	// succ:  l1D66
l1D62:
	v25 = 0x0A
	Mem0[r2:byte] = v25
	r2 = r2 + 0x0001
	NZ = cond(v25)
	V = false
	// succ:  l1D66
l1D66:
	r1 = r1 - 0x01FF
	NZVC = cond(r1)
	branch Test(EQ,Z) l1D80
	// succ:  l1D6C l1D80
l1D6C:
	v26 = 0x00
	Mem0[r2:byte] = v26
	r2 = r2 + 0x0001
	C = false
	V = false
	N = false
	Z = true
	r1 = r1 + 0x0001
	NZV = cond(r1)
	branch Test(LT,N) l1D6C
	// succ:  l1D72 l1D6C
l1D72:
	goto 0x1D80
	goto l1D80
	// succ:  l1D80
l1D74:
	r2 = 0x01FE
	NZ = cond(r2)
	V = false
	r2 = r2 + Mem0[r4 + 0x0002:word16]
	NZVC = cond(r2)
	v29 = Mem0[r2:word16] | 0x8000
	Mem0[r2:word16] = v29
	NZ = cond(v29)
	V = false
	// succ:  l1D80
l1D80:
	call fn1836 (retsize: 2; FPU: 2;)
	sp = sp + 0x0002
	// succ:  l1D84
l1D84:
	return
	// succ:  fn1D30_exit
fn1D30_exit:


// fn1DAE
// Return size: 0
void fn1DAE()
fn1DAE_entry:
	// succ:  l1DAE
l1DAE:
	sp = fp
	call fn0218 (retsize: 2; FPU: 2;)
	v6 = Mem0[Mem0[sp + 0x000E:ptr16]:word16] & ~Mem0[0x15FF:word16]
	Mem0[Mem0[sp + 0x000E:ptr16]:word16] = v6
	NZ = cond(v6)
	V = false
	v10 = Mem0[Mem0[r1:ptr16]:word16]
	r1 = r1 + 0x0002
	r4 = r4 - 0x0002
	v12 = Mem0[Mem0[r4:ptr16]:word16] & v10
	Mem0[Mem0[r4:ptr16]:word16] = v12
	NZ = cond(v12)
	V = false
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn4180 (retsize: 2; FPU: 2;)
	v15 = Mem0[0x5426:ptr16]
	v15 = Mem0[v15:word16]
	v16 = Mem0[0x5426:ptr16]
	Mem0[v16:word16] = v15 + 0x0001
	NZV = cond(v16)
	Mem0[0x5876:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v22 = Mem0[0x5426:ptr16]
	v22 = Mem0[v22:word16]
	v23 = Mem0[0x5426:ptr16]
	Mem0[v23:word16] = v22 + 0x0001
	NZV = cond(v23)
	Mem0[0x54C8:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[0x54CA:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v26 = Mem0[0x5426:ptr16]
	v26 = Mem0[v26:word16]
	v27 = Mem0[0x5426:ptr16]
	Mem0[v27:word16] = v26 + 0x0001
	NZV = cond(v27)
	Mem0[0x54CC:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v29 = Mem0[0x5426:ptr16]
	v29 = Mem0[v29:word16]
	v30 = Mem0[0x5426:ptr16]
	Mem0[v30:word16] = v29 + 0x0001
	NZV = cond(v30)
	Mem0[0x54CE:word16] = 0x0001
	NZ = cond(v31)
	V = false
	v32 = Mem0[0x5426:ptr16]
	v32 = Mem0[v32:word16]
	v33 = Mem0[0x5426:ptr16]
	Mem0[v33:word16] = v32 + 0x0001
	NZV = cond(v33)
	r5 = 0x48BC
	NZ = cond(r5)
	V = false
	call fn0818 (retsize: 2; FPU: 2;)
	v35 = Mem0[0x5426:ptr16]
	v35 = Mem0[v35:word16]
	v36 = Mem0[0x5426:ptr16]
	Mem0[v36:word16] = v35 + 0x0001
	NZV = cond(v36)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x48A4
	NZ = cond(v37)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4810
	NZ = cond(v38)
	V = false
	call fn0DC8 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5878
	NZ = cond(v40)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v43 = Mem0[0x5426:ptr16]
	v43 = Mem0[v43:word16]
	v44 = Mem0[0x5426:ptr16]
	Mem0[v44:word16] = v43 + 0x0001
	NZV = cond(v44)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x48A4
	NZ = cond(v45)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4813
	NZ = cond(v46)
	V = false
	call fn0DC8 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x489E
	NZ = cond(v48)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x587A
	NZ = cond(v49)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v52 = Mem0[0x5426:ptr16]
	Mem0[v52:word16] = 0x0018
	NZ = cond(v52)
	V = false
	r5 = 0x48C8
	NZ = cond(r5)
	V = false
	call fn0A64 (retsize: 2; FPU: 2;)
	v54 = Mem0[0x5426:ptr16]
	v54 = Mem0[v54:word16]
	v55 = Mem0[0x5426:ptr16]
	Mem0[v55:word16] = v54 + 0x0001
	NZV = cond(v55)
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn2B90 (retsize: 2; FPU: 2;)
	v57 = Mem0[0x5426:ptr16]
	v57 = Mem0[v57:word16]
	v58 = Mem0[0x5426:ptr16]
	Mem0[v58:word16] = v57 + 0x0001
	NZV = cond(v58)
	Mem0[0x54D0:word16] = 0x0013
	NZ = cond(v59)
	V = false
	// succ:  l1E54
l1E54:
	v60 = Mem0[0x5426:ptr16]
	Mem0[v60:word16] = 0x001B
	NZ = cond(v60)
	V = false
	Mem0[0x54D0:word16] = Mem0[0x54CE:word16] - 0x0001
	NZV = cond(v62)
	v63 = Mem0[0x5426:ptr16]
	v63 = Mem0[v63:word16]
	v64 = Mem0[0x5426:ptr16]
	Mem0[v64:word16] = v63 + 0x0001
	NZV = cond(v64)
	v66 = 0x000C - Mem0[0x54CE:word16]
	NZVC = cond(v66)
	branch Test(GE,NV) l1E74
	// succ:  l1E6A l1E74
l1E6A:
	v69 = Mem0[0x5426:ptr16]
	v69 = Mem0[v69:word16]
	v70 = Mem0[0x5426:ptr16]
	Mem0[v70:word16] = v69 + 0x0001
	NZV = cond(v70)
	Mem0[0x54D0:word16] = 0x0012
	NZ = cond(v71)
	V = false
	// succ:  l1E74
l1E74:
	v72 = Mem0[0x5426:ptr16]
	Mem0[v72:word16] = 0x001E
	NZ = cond(v72)
	V = false
	Mem0[0x54C6:word16] = 0x0032
	NZ = cond(v73)
	V = false
	v74 = Mem0[0x5426:ptr16]
	v74 = Mem0[v74:word16]
	v75 = Mem0[0x5426:ptr16]
	Mem0[v75:word16] = v74 + 0x0001
	NZV = cond(v75)
	Mem0[0x54D2:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v77 = Mem0[0x5426:ptr16]
	v77 = Mem0[v77:word16]
	v78 = Mem0[0x5426:ptr16]
	Mem0[v78:word16] = v77 + 0x0001
	NZV = cond(v78)
	Mem0[0x54D4:word16] = 0xFFFF
	NZ = cond(v79)
	V = false
	v80 = Mem0[0x5426:ptr16]
	v80 = Mem0[v80:word16]
	v81 = Mem0[0x5426:ptr16]
	Mem0[v81:word16] = v80 + 0x0001
	NZV = cond(v81)
	Mem0[0x54D6:word16] = 0xFFFF
	NZ = cond(v82)
	V = false
	v83 = Mem0[0x5426:ptr16]
	v83 = Mem0[v83:word16]
	v84 = Mem0[0x5426:ptr16]
	Mem0[v84:word16] = v83 + 0x0001
	NZV = cond(v84)
	Mem0[0x54D8:word16] = 0x0001
	NZ = cond(v85)
	V = false
	// succ:  l1EA6
l1EA6:
	v86 = Mem0[0x5426:ptr16]
	Mem0[v86:word16] = 0x0023
	NZ = cond(v86)
	V = false
	Mem0[0x54DA:word16] = 0x0001
	NZ = cond(v87)
	V = false
	r5 = 0x487E
	NZ = cond(r5)
	V = false
	// succ:  l1EB6
l1EB6:
	v88 = Mem0[0x5426:ptr16]
	Mem0[v88:word16] = 0x0024
	NZ = cond(v88)
	V = false
	r1 = Mem0[0x54D6:word16]
	NZ = cond(r1)
	V = false
	v90 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	r1 = r1 + v90
	NZVC = cond(r1)
	r1 = r1 << 1
	NZVC = cond(r1)
	Mem0[r1 + 0x58C2:word16] = 0x0001
	NZ = cond(v91)
	V = false
	v92 = Mem0[0x5426:ptr16]
	v92 = Mem0[v92:word16]
	v93 = Mem0[0x5426:ptr16]
	Mem0[v93:word16] = v92 + 0x0001
	NZV = cond(v93)
	v95 = 0x0004 - Mem0[0x54D8:word16]
	NZVC = cond(v95)
	branch Test(GT,NZV) l1EEA
	// succ:  l1ED6 l1EEA
l1ED6:
	v96 = Mem0[0x5426:ptr16]
	Mem0[v96:word16] = 0x0027
	NZ = cond(v96)
	V = false
	Mem0[r1 + 0x5A3E:word16] = 0x000A
	NZ = cond(v97)
	V = false
	v98 = Mem0[0x5426:ptr16]
	v98 = Mem0[v98:word16]
	v99 = Mem0[0x5426:ptr16]
	Mem0[v99:word16] = v98 + 0x0001
	NZV = cond(v99)
	Mem0[r1 + 0x5A66:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l1EEA
l1EEA:
	v101 = Mem0[0x5426:ptr16]
	Mem0[v101:word16] = 0x0029
	NZ = cond(v101)
	V = false
	Mem0[0x54DA:word16] = Mem0[0x54D8:word16] + 0x0001
	NZV = cond(v103)
	v105 = 0x000A - Mem0[0x54D8:word16]
	NZVC = cond(v105)
	branch Test(LE,NZV) l1EB6
	// succ:  l1EFC l1EB6
l1EFC:
	Mem0[0x54D8:word16] = Mem0[0x54D6:word16] + 0x0001
	NZV = cond(v107)
	v109 = 0x0005 - Mem0[0x54D6:word16]
	NZVC = cond(v109)
	branch Test(LE,NZV) l1EA6
	// succ:  l1F08 l1EA6
l1F08:
	v110 = Mem0[0x5426:ptr16]
	v110 = Mem0[v110:word16]
	v111 = Mem0[0x5426:ptr16]
	Mem0[v111:word16] = v110 + 0x0001
	NZV = cond(v111)
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn4030 (retsize: 2; FPU: 2;)
	v113 = Mem0[0x5426:ptr16]
	v113 = Mem0[v113:word16]
	v114 = Mem0[0x5426:ptr16]
	Mem0[v114:word16] = v113 + 0x0001
	NZV = cond(v114)
	Mem0[0x54D8:word16] = 0x0001
	NZ = cond(v115)
	V = false
	r4 = 0x0050
	NZ = cond(r4)
	V = false
	r5 = 0x5464
	NZ = cond(r5)
	V = false
	// succ:  l1F26
l1F26:
	v116 = Mem0[0x5426:ptr16]
	Mem0[v116:word16] = 0x002C
	NZ = cond(v116)
	V = false
	v117 = 0x3D
	Mem0[r5:byte] = v117
	r5 = r5 + 0x0001
	NZ = cond(v117)
	V = false
	v118 = Mem0[0x5426:ptr16]
	Mem0[v118:word16] = 0x002D
	NZ = cond(v118)
	V = false
	r4 = r4 - 0x0001
	NZV = cond(r4)
	branch Test(GT,NZV) l1F26
	// succ:  l1F3A l1F26
l1F3A:
	v119 = Mem0[0x5426:ptr16]
	v119 = Mem0[v119:word16]
	v120 = Mem0[0x5426:ptr16]
	Mem0[v120:word16] = v119 + 0x0001
	NZV = cond(v120)
	r5 = 0x48D0
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v122 = Mem0[0x5426:ptr16]
	v122 = Mem0[v122:word16]
	v123 = Mem0[0x5426:ptr16]
	Mem0[v123:word16] = v122 + 0x0001
	NZV = cond(v123)
	r5 = 0x48DA
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v125 = Mem0[0x5426:ptr16]
	v125 = Mem0[v125:word16]
	v126 = Mem0[0x5426:ptr16]
	Mem0[v126:word16] = v125 + 0x0001
	NZV = cond(v126)
	r5 = 0x48E4
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v128 = Mem0[0x5426:ptr16]
	v128 = Mem0[v128:word16]
	v129 = Mem0[0x5426:ptr16]
	Mem0[v129:word16] = v128 + 0x0001
	NZV = cond(v129)
	r5 = 0x48EE
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v131 = Mem0[0x5426:ptr16]
	v131 = Mem0[v131:word16]
	v132 = Mem0[0x5426:ptr16]
	Mem0[v132:word16] = v131 + 0x0001
	NZV = cond(v132)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4898
	NZ = cond(v133)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4876
	NZ = cond(v134)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x54DC
	NZ = cond(v135)
	V = false
	call fn0FA4 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5878
	NZ = cond(v137)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v140 = Mem0[0x5426:ptr16]
	v140 = Mem0[v140:word16]
	v141 = Mem0[0x5426:ptr16]
	Mem0[v141:word16] = v140 + 0x0001
	NZV = cond(v141)
	r5 = 0x48F8
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v143 = Mem0[0x5426:ptr16]
	v143 = Mem0[v143:word16]
	v144 = Mem0[0x5426:ptr16]
	Mem0[v144:word16] = v143 + 0x0001
	NZV = cond(v144)
	r5 = 0x4902
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v146 = Mem0[0x5426:ptr16]
	v146 = Mem0[v146:word16]
	v147 = Mem0[0x5426:ptr16]
	Mem0[v147:word16] = v146 + 0x0001
	NZV = cond(v147)
	Mem0[0x54E0:word16] = 0x0002
	NZ = cond(v148)
	V = false
	v149 = Mem0[0x5426:ptr16]
	v149 = Mem0[v149:word16]
	v150 = Mem0[0x5426:ptr16]
	Mem0[v150:word16] = v149 + 0x0001
	NZV = cond(v150)
	Mem0[0x54E2:word16] = 0x0005
	NZ = cond(v151)
	V = false
	v152 = Mem0[0x5426:ptr16]
	v152 = Mem0[v152:word16]
	v153 = Mem0[0x5426:ptr16]
	Mem0[v153:word16] = v152 + 0x0001
	NZV = cond(v153)
	Mem0[0x54E4:word16] = Mem0[0x54CE:word16]
	NZ = cond(v155)
	V = false
	v156 = Mem0[0x5426:ptr16]
	Mem0[v156:word16] = 0x0038
	NZ = cond(v156)
	V = false
	v157 = Mem0[0x5426:ptr16]
	v157 = Mem0[v157:word16]
	v158 = Mem0[0x5426:ptr16]
	Mem0[v158:word16] = v157 + 0x0001
	NZV = cond(v158)
	Mem0[0x58BA:word16] = 0x0004
	NZ = cond(v159)
	V = false
	v160 = Mem0[0x5426:ptr16]
	v160 = Mem0[v160:word16]
	v161 = Mem0[0x5426:ptr16]
	Mem0[v161:word16] = v160 + 0x0001
	NZV = cond(v161)
	Mem0[0x58BC:word16] = 0xFFFF
	NZ = cond(v162)
	V = false
	v163 = Mem0[0x5426:ptr16]
	v163 = Mem0[v163:word16]
	v164 = Mem0[0x5426:ptr16]
	Mem0[v164:word16] = v163 + 0x0001
	NZV = cond(v164)
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn2EC4 (retsize: 2; FPU: 2;)
	// succ:  l1FE6
l1FE6:
	v166 = Mem0[0x5426:ptr16]
	Mem0[v166:word16] = 0x003C
	NZ = cond(v166)
	V = false
	Mem0[0x54C4:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v168 = Mem0[0x5426:ptr16]
	v168 = Mem0[v168:word16]
	v169 = Mem0[0x5426:ptr16]
	Mem0[v169:word16] = v168 + 0x0001
	NZV = cond(v169)
	Mem0[0x54E6:word16] = 0x0050
	NZ = cond(v170)
	V = false
	v171 = Mem0[0x5426:ptr16]
	v171 = Mem0[v171:word16]
	v172 = Mem0[0x5426:ptr16]
	Mem0[v172:word16] = v171 + 0x0001
	NZV = cond(v172)
	Mem0[0x54E8:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v174 = Mem0[0x5426:ptr16]
	v174 = Mem0[v174:word16]
	v175 = Mem0[0x5426:ptr16]
	Mem0[v175:word16] = v174 + 0x0001
	NZV = cond(v175)
	Mem0[0x54EA:word16] = 0x0018
	NZ = cond(v176)
	V = false
	v177 = Mem0[0x5426:ptr16]
	v177 = Mem0[v177:word16]
	v178 = Mem0[0x5426:ptr16]
	Mem0[v178:word16] = v177 + 0x0001
	NZV = cond(v178)
	Mem0[0x54D8:word16] = 0x0001
	NZ = cond(v179)
	V = false
	r4 = 0x000A
	NZ = cond(r4)
	V = false
	r5 = 0x5450
	NZ = cond(r5)
	V = false
	// succ:  l201E
l201E:
	v180 = Mem0[0x5426:ptr16]
	Mem0[v180:word16] = 0x0041
	NZ = cond(v180)
	V = false
	v181 = 0x0000
	Mem0[r5:word16] = v181
	r5 = r5 + 0x0002
	C = false
	V = false
	N = false
	Z = true
	v182 = Mem0[0x5426:ptr16]
	Mem0[v182:word16] = 0x0042
	NZ = cond(v182)
	V = false
	r4 = r4 - 0x0001
	NZV = cond(r4)
	branch Test(GT,NZV) l201E
	// succ:  l2030 l201E
l2030:
	v183 = Mem0[0x5426:ptr16]
	v183 = Mem0[v183:word16]
	v184 = Mem0[0x5426:ptr16]
	Mem0[v184:word16] = v183 + 0x0001
	NZV = cond(v184)
	Mem0[0x54DA:word16] = 0x0001
	NZ = cond(v185)
	V = false
	Mem0[0x54F6:word16] = 0x0002
	NZ = cond(v186)
	V = false
	// succ:  l2040
l2040:
	v187 = Mem0[0x5426:ptr16]
	Mem0[v187:word16] = 0x0044
	NZ = cond(v187)
	V = false
	Mem0[0x54D8:word16] = 0x0001
	NZ = cond(v188)
	V = false
	Mem0[0x54FC:word16] = 0x000A
	NZ = cond(v189)
	V = false
	Mem0[0x54BA:word16] = 0x487E
	NZ = cond(v190)
	V = false
	Mem0[0x54F4:word16] = 0x0006
	NZ = cond(v191)
	V = false
	Mem0[0x54BC:word16] = 0x5450
	NZ = cond(v192)
	V = false
	// succ:  l2064
l2064:
	v193 = Mem0[0x5426:ptr16]
	Mem0[v193:word16] = 0x0045
	NZ = cond(v193)
	V = false
	r0 = Mem0[0x54D8:word16]
	NZ = cond(r0)
	V = false
	v196 = Mem0[0x54BA:ptr16]
	v196 = Mem0[v196:word16]
	r0 = r0 + v196
	NZVC = cond(r0)
	r0 = r0 << 1
	NZVC = cond(r0)
	v198 = Mem0[r0 + 0x58C2:word16]
	v198 = v198 & v198
	NZ = cond(v198)
	C = false
	V = false
	branch Test(NE,Z) l207E
	// succ:  l207A l207E
l207A:
	goto 0x22EA
	goto l22EA
	// succ:  l22EA
l207E:
	v207 = Mem0[0x5426:ptr16]
	Mem0[v207:word16] = 0x0047
	NZ = cond(v207)
	V = false
	Mem0[0x54C4:word16] = Mem0[0x54C2:word16] + 0x0001
	NZV = cond(v209)
	v210 = Mem0[0x5426:ptr16]
	v210 = Mem0[v210:word16]
	v211 = Mem0[0x5426:ptr16]
	Mem0[v211:word16] = v210 + 0x0001
	NZV = cond(v211)
	Mem0[0x54EC:word16] = Mem0[0x54E0:word16]
	NZ = cond(v213)
	V = false
	v215 = Mem0[pc + 0x3454:word16] + Mem0[0x54F2:word16]
	Mem0[pc + 0x3454:word16] = v215
	NZVC = cond(v215)
	v216 = Mem0[0x5426:ptr16]
	v216 = Mem0[v216:word16]
	v217 = Mem0[0x5426:ptr16]
	Mem0[v217:word16] = v216 + 0x0001
	NZV = cond(v217)
	r0 = Mem0[0x54E2:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 - Mem0[0x54F4:word16]
	NZVC = cond(r0)
	Mem0[0x54EE:word16] = r0
	NZ = cond(v220)
	V = false
	v221 = Mem0[0x5426:ptr16]
	v221 = Mem0[v221:word16]
	v222 = Mem0[0x5426:ptr16]
	Mem0[v222:word16] = v221 + 0x0001
	NZV = cond(v222)
	v224 = Mem0[0x54E8:word16] - r0
	NZVC = cond(v224)
	branch Test(GE,NV) l20BA
	// succ:  l20B2 l20BA
l20B2:
	v225 = Mem0[0x5426:ptr16]
	v225 = Mem0[v225:word16]
	v226 = Mem0[0x5426:ptr16]
	Mem0[v226:word16] = v225 + 0x0001
	NZV = cond(v226)
	Mem0[0x54EA:word16] = r0
	NZ = cond(v227)
	V = false
	// succ:  l20BA
l20BA:
	v234 = Mem0[0x5426:ptr16]
	Mem0[v234:word16] = 0x004C
	NZ = cond(v234)
	V = false
	r1 = Mem0[0x54D8:word16]
	NZ = cond(r1)
	V = false
	v236 = Mem0[0x54BA:ptr16]
	v236 = Mem0[v236:word16]
	r1 = r1 + v236
	NZVC = cond(r1)
	r1 = r1 << 1
	NZVC = cond(r1)
	r0 = Mem0[0x54EA:word16]
	NZ = cond(r0)
	V = false
	Mem0[r1 + 0x5926:word16] = r0
	NZ = cond(v238)
	V = false
	v239 = Mem0[0x5426:ptr16]
	v239 = Mem0[v239:word16]
	v240 = Mem0[0x5426:ptr16]
	Mem0[v240:word16] = v239 + 0x0001
	NZV = cond(v240)
	Mem0[r1 + 0x598A:word16] = Mem0[0x54EC:word16]
	NZ = cond(v242)
	V = false
	v243 = Mem0[0x5426:ptr16]
	v243 = Mem0[v243:word16]
	v244 = Mem0[0x5426:ptr16]
	Mem0[v244:word16] = v243 + 0x0001
	NZV = cond(v244)
	v246 = Mem0[0x54E6:word16] - r0
	NZVC = cond(v246)
	branch Test(LE,NZV) l20EE
	// succ:  l20E6 l20EE
l20E6:
	v247 = Mem0[0x5426:ptr16]
	v247 = Mem0[v247:word16]
	v248 = Mem0[0x5426:ptr16]
	Mem0[v248:word16] = v247 + 0x0001
	NZV = cond(v248)
	Mem0[0x54E8:word16] = r0
	NZ = cond(v249)
	V = false
	// succ:  l20EE
l20EE:
	v272 = Mem0[0x5426:ptr16]
	Mem0[v272:word16] = 0x0050
	NZ = cond(v272)
	V = false
	r0 = Mem0[0x54EA:word16]
	NZ = cond(r0)
	V = false
	v275 = Mem0[0x54E4:word16] - r0
	NZVC = cond(v275)
	branch Test(GE,NV) l2106
	// succ:  l20FE l2106
l20FE:
	v276 = Mem0[0x5426:ptr16]
	v276 = Mem0[v276:word16]
	v277 = Mem0[0x5426:ptr16]
	Mem0[v277:word16] = v276 + 0x0001
	NZV = cond(v277)
	Mem0[0x54E6:word16] = r0
	NZ = cond(v278)
	V = false
	// succ:  l2106
l2106:
	v279 = Mem0[0x5426:ptr16]
	Mem0[v279:word16] = 0x0052
	NZ = cond(v279)
	V = false
	r0 = Mem0[0x54D8:word16]
	NZ = cond(r0)
	V = false
	v281 = Mem0[0x54BC:ptr16]
	v281 = Mem0[v281:word16]
	v282 = v281 - r0
	NZVC = cond(v282)
	branch Test(LE,NZV) l211E
	// succ:  l2116 l211E
l2116:
	v283 = Mem0[0x5426:ptr16]
	v283 = Mem0[v283:word16]
	v284 = Mem0[0x5426:ptr16]
	Mem0[v284:word16] = v283 + 0x0001
	NZV = cond(v284)
	v285 = Mem0[0x54BC:ptr16]
	Mem0[v285:word16] = r0
	NZ = cond(v285)
	V = false
	// succ:  l211E
l211E:
	v286 = Mem0[0x5426:ptr16]
	Mem0[v286:word16] = 0x0054
	NZ = cond(v286)
	V = false
	v288 = 0x0003 - Mem0[0x54D8:word16]
	NZVC = cond(v288)
	branch Test(EQ,Z) l2138
	// succ:  l212C l2138
l212C:
	v289 = Mem0[0x5426:ptr16]
	v289 = Mem0[v289:word16]
	v290 = Mem0[0x5426:ptr16]
	Mem0[v290:word16] = v289 + 0x0001
	NZV = cond(v290)
	r5 = 0x490C
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	// succ:  l2138
l2138:
	v310 = Mem0[0x5426:ptr16]
	Mem0[v310:word16] = 0x0056
	NZ = cond(v310)
	V = false
	v312 = Mem0[0x54CC:word16]
	v312 = v312 & v312
	NZ = cond(v312)
	C = false
	V = false
	branch Test(GT,NZV) l219A
	// succ:  l2144 l219A
l2144:
	v313 = Mem0[0x5426:ptr16]
	Mem0[v313:word16] = 0x0058
	NZ = cond(v313)
	V = false
	v315 = 0x0002 - Mem0[0x54D8:word16]
	NZVC = cond(v315)
	branch Test(GT,NZV) l215E
	// succ:  l2152 l215E
l2152:
	v316 = Mem0[0x5426:ptr16]
	v316 = Mem0[v316:word16]
	v317 = Mem0[0x5426:ptr16]
	Mem0[v317:word16] = v316 + 0x0001
	NZV = cond(v317)
	r5 = 0x4910
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l215E
l215E:
	v341 = Mem0[0x5426:ptr16]
	Mem0[v341:word16] = 0x005A
	NZ = cond(v341)
	V = false
	v343 = 0x0003 - Mem0[0x54D8:word16]
	NZVC = cond(v343)
	branch Test(NE,Z) l2178
	// succ:  l216C l2178
l216C:
	v344 = Mem0[0x5426:ptr16]
	v344 = Mem0[v344:word16]
	v345 = Mem0[0x5426:ptr16]
	Mem0[v345:word16] = v344 + 0x0001
	NZV = cond(v345)
	r5 = 0x491A
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l2178
l2178:
	v352 = Mem0[0x5426:ptr16]
	Mem0[v352:word16] = 0x005C
	NZ = cond(v352)
	V = false
	v354 = 0x0004 - Mem0[0x54D8:word16]
	NZVC = cond(v354)
	branch Test(LT,NV) l2192
	// succ:  l2186 l2192
l2186:
	v355 = Mem0[0x5426:ptr16]
	v355 = Mem0[v355:word16]
	v356 = Mem0[0x5426:ptr16]
	Mem0[v356:word16] = v355 + 0x0001
	NZV = cond(v356)
	r5 = 0x4924
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l2192
l2192:
	v370 = Mem0[0x5426:ptr16]
	Mem0[v370:word16] = 0x005E
	NZ = cond(v370)
	V = false
	goto l21E8
	// succ:  l21E8
l219A:
	v358 = Mem0[0x5426:ptr16]
	Mem0[v358:word16] = 0x005F
	NZ = cond(v358)
	V = false
	v360 = 0x0002 - Mem0[0x54D8:word16]
	NZVC = cond(v360)
	branch Test(GT,NZV) l21B4
	// succ:  l21A8 l21B4
l21A8:
	v361 = Mem0[0x5426:ptr16]
	v361 = Mem0[v361:word16]
	v362 = Mem0[0x5426:ptr16]
	Mem0[v362:word16] = v361 + 0x0001
	NZV = cond(v362)
	r5 = 0x492E
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l21B4
l21B4:
	v364 = Mem0[0x5426:ptr16]
	Mem0[v364:word16] = 0x0061
	NZ = cond(v364)
	V = false
	v366 = 0x0003 - Mem0[0x54D8:word16]
	NZVC = cond(v366)
	branch Test(NE,Z) l21CE
	// succ:  l21C2 l21CE
l21C2:
	v367 = Mem0[0x5426:ptr16]
	v367 = Mem0[v367:word16]
	v368 = Mem0[0x5426:ptr16]
	Mem0[v368:word16] = v367 + 0x0001
	NZV = cond(v368)
	r5 = 0x4938
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l21CE
l21CE:
	v371 = Mem0[0x5426:ptr16]
	Mem0[v371:word16] = 0x0063
	NZ = cond(v371)
	V = false
	v373 = 0x0004 - Mem0[0x54D8:word16]
	NZVC = cond(v373)
	branch Test(LT,NV) l21E8
	// succ:  l21DC l21E8
l21DC:
	v374 = Mem0[0x5426:ptr16]
	v374 = Mem0[v374:word16]
	v375 = Mem0[0x5426:ptr16]
	Mem0[v375:word16] = v374 + 0x0001
	NZV = cond(v375)
	r5 = 0x4942
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l21E8
l21E8:
	v377 = Mem0[0x5426:ptr16]
	Mem0[v377:word16] = 0x0065
	NZ = cond(v377)
	V = false
	v379 = Mem0[0x54C6:word16]
	v379 = v379 & v379
	NZ = cond(v379)
	C = false
	V = false
	branch Test(EQ,Z) l220C
	// succ:  l21F4 l220C
l21F4:
	v380 = Mem0[0x5426:ptr16]
	Mem0[v380:word16] = 0x0067
	NZ = cond(v380)
	V = false
	Mem0[0x54F0:word16] = Mem0[0x54EC:word16]
	NZ = cond(v382)
	V = false
	Mem0[0x54F0:word16] = Mem0[0x54EE:word16] + 0x0001
	NZV = cond(v384)
	r5 = 0x494C
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l220C
l220C:
	v386 = Mem0[0x5426:ptr16]
	Mem0[v386:word16] = 0x0068
	NZ = cond(v386)
	V = false
	r5 = 0x4956
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	v388 = Mem0[0x5426:ptr16]
	v388 = Mem0[v388:word16]
	v389 = Mem0[0x5426:ptr16]
	Mem0[v389:word16] = v388 + 0x0001
	NZV = cond(v389)
	v391 = Mem0[0x54D0:word16]
	v391 = v391 & v391
	NZ = cond(v391)
	C = false
	V = false
	branch Test(EQ,Z) l22B4
	// succ:  l2224 l22B4
l2224:
	v392 = Mem0[0x5426:ptr16]
	Mem0[v392:word16] = 0x006B
	NZ = cond(v392)
	V = false
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn2EC4 (retsize: 2; FPU: 2;)
	v394 = Mem0[0x5426:ptr16]
	v394 = Mem0[v394:word16]
	v395 = Mem0[0x5426:ptr16]
	Mem0[v395:word16] = v394 + 0x0001
	NZV = cond(v395)
	r5 = 0x495A
	NZ = cond(r5)
	V = false
	call fn3220 (retsize: 2; FPU: 2;)
	v397 = Mem0[0x5426:ptr16]
	v397 = Mem0[v397:word16]
	v398 = Mem0[0x5426:ptr16]
	Mem0[v398:word16] = v397 + 0x0001
	NZV = cond(v398)
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn3B3C (retsize: 2; FPU: 2;)
	v400 = Mem0[0x5426:ptr16]
	v400 = Mem0[v400:word16]
	v401 = Mem0[0x5426:ptr16]
	Mem0[v401:word16] = v400 + 0x0001
	NZV = cond(v401)
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn2EC4 (retsize: 2; FPU: 2;)
	v403 = Mem0[0x5426:ptr16]
	v403 = Mem0[v403:word16]
	v404 = Mem0[0x5426:ptr16]
	Mem0[v404:word16] = v403 + 0x0001
	NZV = cond(v404)
	r5 = 0x495A
	NZ = cond(r5)
	V = false
	call fn3220 (retsize: 2; FPU: 2;)
	v406 = Mem0[0x5426:ptr16]
	v406 = Mem0[v406:word16]
	v407 = Mem0[0x5426:ptr16]
	Mem0[v407:word16] = v406 + 0x0001
	NZV = cond(v407)
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn3B3C (retsize: 2; FPU: 2;)
	v409 = Mem0[0x5426:ptr16]
	v409 = Mem0[v409:word16]
	v410 = Mem0[0x5426:ptr16]
	Mem0[v410:word16] = v409 + 0x0001
	NZV = cond(v410)
	v412 = 0x0001 - Mem0[0x54EC:word16]
	NZVC = cond(v412)
	branch Test(EQ,Z) l229A
	// succ:  l227A l229A
l227A:
	v413 = Mem0[0x5426:ptr16]
	Mem0[v413:word16] = 0x0073
	NZ = cond(v413)
	V = false
	r5 = 0x495E
	NZ = cond(r5)
	V = false
	call fn34AC (retsize: 2; FPU: 2;)
	v415 = Mem0[0x5426:ptr16]
	v415 = Mem0[v415:word16]
	v416 = Mem0[0x5426:ptr16]
	Mem0[v416:word16] = v415 + 0x0001
	NZV = cond(v416)
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn3E12 (retsize: 2; FPU: 2;)
	v418 = Mem0[0x5426:ptr16]
	v418 = Mem0[v418:word16]
	v419 = Mem0[0x5426:ptr16]
	Mem0[v419:word16] = v418 + 0x0001
	NZV = cond(v419)
	goto l22B4
	// succ:  l22B4
l229A:
	v420 = Mem0[0x5426:ptr16]
	Mem0[v420:word16] = 0x0076
	NZ = cond(v420)
	V = false
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn395C (retsize: 2; FPU: 2;)
	v422 = Mem0[0x5426:ptr16]
	v422 = Mem0[v422:word16]
	v423 = Mem0[0x5426:ptr16]
	Mem0[v423:word16] = v422 + 0x0001
	NZV = cond(v423)
	r5 = 0x4956
	NZ = cond(r5)
	V = false
	call fn243A (retsize: 2; FPU: 2;)
	// succ:  l22B4
l22B4:
	v425 = Mem0[0x5426:ptr16]
	Mem0[v425:word16] = 0x0078
	NZ = cond(v425)
	V = false
	v426 = Mem0[0x5426:ptr16]
	v426 = Mem0[v426:word16]
	v427 = Mem0[0x5426:ptr16]
	Mem0[v427:word16] = v426 + 0x0001
	NZV = cond(v427)
	v430 = Mem0[0x54C8:word16] - Mem0[0x54D2:word16]
	NZVC = cond(v430)
	branch Test(EQ,Z) l22EA
	// succ:  l22C6 l22EA
l22C6:
	v431 = Mem0[0x5426:ptr16]
	Mem0[v431:word16] = 0x007B
	NZ = cond(v431)
	V = false
	Mem0[0x54F2:word16] = 0x0003
	NZ = cond(v432)
	V = false
	v434 = Mem0[pc + 0x321A:word16] - Mem0[0x54CA:word16]
	Mem0[pc + 0x321A:word16] = v434
	NZVC = cond(v434)
	r5 = 0x4964
	NZ = cond(r5)
	V = false
	call fn2E20 (retsize: 2; FPU: 2;)
	v436 = Mem0[0x5426:ptr16]
	v436 = Mem0[v436:word16]
	v437 = Mem0[0x5426:ptr16]
	Mem0[v437:word16] = v436 + 0x0001
	NZV = cond(v437)
	Mem0[0x54D4:word16] = Mem0[0x54CA:word16]
	NZ = cond(v439)
	V = false
	// succ:  l22EA
l22EA:
	v200 = Mem0[0x5426:ptr16]
	Mem0[v200:word16] = 0x007D
	NZ = cond(v200)
	V = false
	v201 = Mem0[pc + 0x31C4:word16] + 0x0002
	Mem0[pc + 0x31C4:word16] = v201
	NZVC = cond(v201)
	v202 = Mem0[pc + 0x31F8:word16] + 0x0006
	Mem0[pc + 0x31F8:word16] = v202
	NZVC = cond(v202)
	v203 = Mem0[pc + 0x31BA:word16] + 0x0002
	Mem0[pc + 0x31BA:word16] = v203
	NZVC = cond(v203)
	Mem0[0x54FC:word16] = Mem0[0x54FA:word16] - 0x0001
	NZV = cond(v205)
	branch Test(LE,NZV) l230C
	// succ:  l2308 l230C
l2308:
	goto 0x2064
	goto l2064
	// succ:  l2064
l230C:
	v228 = Mem0[pc + 0x31E4:word16] + 0x0002
	Mem0[pc + 0x31E4:word16] = v228
	NZVC = cond(v228)
	Mem0[0x54DA:word16] = Mem0[0x54D8:word16] + 0x0001
	NZV = cond(v230)
	v232 = 0x0005 - Mem0[0x54D8:word16]
	NZVC = cond(v232)
	branch Test(GT,NZV) l2322
	// succ:  l231E l2322
l231E:
	goto 0x2040
	goto l2040
	// succ:  l2040
l2322:
	v250 = Mem0[0x5426:ptr16]
	v250 = Mem0[v250:word16]
	v251 = Mem0[0x5426:ptr16]
	Mem0[v251:word16] = v250 + 0x0001
	NZV = cond(v251)
	Mem0[0x54C8:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	Mem0[0x54CA:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v254 = Mem0[0x5426:ptr16]
	v254 = Mem0[v254:word16]
	v255 = Mem0[0x5426:ptr16]
	Mem0[v255:word16] = v254 + 0x0001
	NZV = cond(v255)
	v257 = 0x0002 - Mem0[0x54E8:word16]
	NZVC = cond(v257)
	branch Test(NE,Z) l2390
	// succ:  l233A l2390
l233A:
	v258 = Mem0[0x5426:ptr16]
	Mem0[v258:word16] = 0x0081
	NZ = cond(v258)
	V = false
	Mem0[0x54D8:word16] = 0x0001
	NZ = cond(v259)
	V = false
	// succ:  l2346
l2346:
	v260 = Mem0[0x5426:ptr16]
	Mem0[v260:word16] = 0x0082
	NZ = cond(v260)
	V = false
	Mem0[0x54DA:word16] = 0x0001
	NZ = cond(v261)
	V = false
	r4 = 0x0004
	NZ = cond(r4)
	V = false
	r5 = 0x487E
	NZ = cond(r5)
	V = false
	// succ:  l235A
l235A:
	v262 = Mem0[0x5426:ptr16]
	Mem0[v262:word16] = 0x0083
	NZ = cond(v262)
	V = false
	r1 = Mem0[0x54D6:word16]
	NZ = cond(r1)
	V = false
	r0 = r1
	NZ = cond(r0)
	V = false
	v264 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	r0 = r0 + v264
	NZVC = cond(r0)
	r0 = r0 << 1
	NZVC = cond(r0)
	Mem0[r0 + 0x5A3E:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v266 = Mem0[0x5426:ptr16]
	Mem0[v266:word16] = 0x0084
	NZ = cond(v266)
	V = false
	r4 = r4 - 0x0001
	NZV = cond(r4)
	branch Test(GT,NZV) l235A
	// succ:  l2378 l235A
l2378:
	r1 = r1 + 0x0001
	NZV = cond(r1)
	Mem0[0x54D8:word16] = r1
	NZ = cond(v267)
	V = false
	v268 = 0x0005 - r1
	NZVC = cond(v268)
	branch Test(LE,NZV) l2346
	// succ:  l2384 l2346
l2384:
	v269 = Mem0[0x5426:ptr16]
	v269 = Mem0[v269:word16]
	v270 = Mem0[0x5426:ptr16]
	Mem0[v270:word16] = v269 + 0x0001
	NZV = cond(v270)
	r5 = 0x48BA
	NZ = cond(r5)
	V = false
	call fn3E12 (retsize: 2; FPU: 2;)
	// succ:  l2390
l2390:
	v292 = Mem0[0x5426:ptr16]
	Mem0[v292:word16] = 0x0086
	NZ = cond(v292)
	V = false
	Mem0[0x54D2:word16] = 0x0001
	NZ = cond(v293)
	V = false
	v294 = Mem0[0x5426:ptr16]
	v294 = Mem0[v294:word16]
	v295 = Mem0[0x5426:ptr16]
	Mem0[v295:word16] = v294 + 0x0001
	NZV = cond(v295)
	Mem0[0x54D8:word16] = 0x0001
	NZ = cond(v296)
	V = false
	r3 = 0x000A
	NZ = cond(r3)
	V = false
	r4 = 0x5450
	NZ = cond(r4)
	V = false
	r5 = 0x5A2C
	NZ = cond(r5)
	V = false
	// succ:  l23B2
l23B2:
	v298 = Mem0[0x5426:ptr16]
	Mem0[v298:word16] = 0x0088
	NZ = cond(v298)
	V = false
	v299 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	v300 = v299
	Mem0[r5:word16] = v300
	r5 = r5 + 0x0002
	NZ = cond(v300)
	V = false
	v301 = Mem0[0x5426:ptr16]
	Mem0[v301:word16] = 0x0089
	NZ = cond(v301)
	V = false
	r3 = r3 - 0x0001
	NZV = cond(r3)
	branch Test(GT,NZV) l23B2
	// succ:  l23C4 l23B2
l23C4:
	v302 = Mem0[0x5426:ptr16]
	v302 = Mem0[v302:word16]
	v303 = Mem0[0x5426:ptr16]
	Mem0[v303:word16] = v302 + 0x0001
	NZV = cond(v303)
	v305 = 0x0002 - Mem0[0x54E4:word16]
	NZVC = cond(v305)
	branch Test(LE,NZV) l23E6
	// succ:  l23D0 l23E6
l23D0:
	v306 = Mem0[0x5426:ptr16]
	Mem0[v306:word16] = 0x008C
	NZ = cond(v306)
	V = false
	v308 = 0x0049 - Mem0[0x54E6:word16]
	NZVC = cond(v308)
	branch Test(GE,NV) l23E6
	// succ:  l23DE l23E6
l23DE:
	v309 = Mem0[0x5426:ptr16]
	Mem0[v309:word16] = 0x008E
	NZ = cond(v309)
	V = false
	goto l2406
	// succ:  l2406
l23E6:
	v319 = Mem0[0x5426:ptr16]
	Mem0[v319:word16] = 0x008F
	NZ = cond(v319)
	V = false
	Mem0[0x54E4:word16] = Mem0[0x54E2:word16] - 0x0001
	NZV = cond(v321)
	v322 = Mem0[0x5426:ptr16]
	v322 = Mem0[v322:word16]
	v323 = Mem0[0x5426:ptr16]
	Mem0[v323:word16] = v322 + 0x0001
	NZV = cond(v323)
	Mem0[0x54E0:word16] = -Mem0[0x54DE:word16]
	NZV = cond(v325)
	v326 = Mem0[0x5426:ptr16]
	v326 = Mem0[v326:word16]
	v327 = Mem0[0x5426:ptr16]
	Mem0[v327:word16] = v326 + 0x0001
	NZV = cond(v327)
	Mem0[0x54C8:word16] = 0x4080
	NZ = cond(v328)
	V = false
	Mem0[0x54CA:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l2406
l2406:
	v330 = Mem0[0x5426:ptr16]
	Mem0[v330:word16] = 0x0092
	NZ = cond(v330)
	V = false
	v332 = Mem0[pc + 0x30D0:word16] + Mem0[0x54DE:word16]
	Mem0[pc + 0x30D0:word16] = v332
	NZVC = cond(v332)
	v333 = Mem0[0x5426:ptr16]
	v333 = Mem0[v333:word16]
	v334 = Mem0[0x5426:ptr16]
	Mem0[v334:word16] = v333 + 0x0001
	NZV = cond(v334)
	Mem0[0x54CE:word16] = -Mem0[0x54CC:word16]
	NZV = cond(v336)
	v337 = Mem0[0x5426:ptr16]
	v337 = Mem0[v337:word16]
	v338 = Mem0[0x5426:ptr16]
	Mem0[v338:word16] = v337 + 0x0001
	NZV = cond(v338)
	r0 = Mem0[0x54C2:word16]
	NZ = cond(r0)
	V = false
	branch Test(NE,Z) l2428
	// succ:  l2424 l2428
l2424:
	goto 0x1E54
	goto l1E54
	// succ:  l1E54
l2428:
	v347 = Mem0[0x5426:ptr16]
	Mem0[v347:word16] = 0x0096
	NZ = cond(v347)
	V = false
	Mem0[0x54C6:word16] = r0
	NZ = cond(v348)
	V = false
	v349 = Mem0[0x5426:ptr16]
	v349 = Mem0[v349:word16]
	v350 = Mem0[0x5426:ptr16]
	Mem0[v350:word16] = v349 + 0x0001
	NZV = cond(v350)
	goto l1FE6
	// succ:  l1FE6
fn1DAE_exit:


// fn243A
// Return size: 2
void fn243A()
fn243A_entry:
	// succ:  l243A
l243A:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	r5 = r5 - 0x0002
	r0 = r0 - 0x0002
	v8 = Mem0[Mem0[r0:ptr16]:word16] & ~Mem0[r5:word16]
	Mem0[Mem0[r0:ptr16]:word16] = v8
	NZ = cond(v8)
	V = false
	v11 = Mem0[0x5426:ptr16]
	Mem0[v11:word16] = 0x0007
	NZ = cond(v11)
	V = false
	Mem0[0x569E:word16] = Mem0[0x5874:word16]
	NZ = cond(v13)
	V = false
	v14 = Mem0[0x5426:ptr16]
	v14 = Mem0[v14:word16]
	v15 = Mem0[0x5426:ptr16]
	Mem0[v15:word16] = v14 + 0x0001
	NZV = cond(v15)
	r5 = 0x4D88
	NZ = cond(r5)
	V = false
	call fn4030 (retsize: 2; FPU: 2;)
	v18 = Mem0[0x5426:ptr16]
	v18 = Mem0[v18:word16]
	v19 = Mem0[0x5426:ptr16]
	Mem0[v19:word16] = v18 + 0x0001
	NZV = cond(v19)
	r5 = 0x4D8A
	NZ = cond(r5)
	V = false
	call fn0818 (retsize: 2; FPU: 2;)
	v21 = Mem0[0x5426:ptr16]
	v21 = Mem0[v21:word16]
	v22 = Mem0[0x5426:ptr16]
	Mem0[v22:word16] = v21 + 0x0001
	NZV = cond(v22)
	Mem0[0x56A4:word16] = 0x0001
	NZ = cond(v23)
	V = false
	r5 = 0x5508
	NZ = cond(r5)
	V = false
	// succ:  l2472
l2472:
	v24 = Mem0[0x5426:ptr16]
	Mem0[v24:word16] = 0x000B
	NZ = cond(v24)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D82
	NZ = cond(v25)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x499C
	NZ = cond(v26)
	V = false
	call fn0DC8 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v28)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v31 = Mem0[0x5426:ptr16]
	v31 = Mem0[v31:word16]
	v32 = Mem0[0x5426:ptr16]
	Mem0[v32:word16] = v31 + 0x0001
	NZV = cond(v32)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D82
	NZ = cond(v33)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x499F
	NZ = cond(v34)
	V = false
	call fn0DC8 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7E
	NZ = cond(v36)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5668
	NZ = cond(v37)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v40 = Mem0[0x5426:ptr16]
	v40 = Mem0[v40:word16]
	v41 = Mem0[0x5426:ptr16]
	Mem0[v41:word16] = v40 + 0x0001
	NZV = cond(v41)
	Mem0[0x56A6:word16] = 0x0001
	NZ = cond(v42)
	V = false
	r2 = 0x001E
	NZ = cond(r2)
	V = false
	r3 = 0x5668
	NZ = cond(r3)
	V = false
	r4 = 0x4D3E
	NZ = cond(r4)
	V = false
	// succ:  l24C4
l24C4:
	v46 = Mem0[0x5426:ptr16]
	Mem0[v46:word16] = 0x000E
	NZ = cond(v46)
	V = false
	r1 = Mem0[0x56A2:word16]
	NZ = cond(r1)
	V = false
	r0 = r1
	NZ = cond(r0)
	V = false
	v49 = Mem0[r4:word16]
	r4 = r4 + 0x0002
	r0 = r0 + v49
	NZVC = cond(r0)
	v51 = Mem0[r3:byte]
	r3 = r3 + 0x0001
	Mem0[r0 + 0x551D:byte] = v51
	NZ = cond(v52)
	V = false
	v53 = Mem0[0x5426:ptr16]
	Mem0[v53:word16] = 0x000F
	NZ = cond(v53)
	V = false
	r2 = r2 - 0x0001
	NZV = cond(r2)
	branch Test(GT,NZV) l24C4
	// succ:  l24E0 l24C4
l24E0:
	v54 = Mem0[0x5426:ptr16]
	Mem0[v54:word16] = 0x0010
	NZ = cond(v54)
	V = false
	r5 = r5 + 0x0002
	NZVC = cond(r5)
	r1 = r1 + 0x0001
	NZV = cond(r1)
	Mem0[0x56A4:word16] = r1
	NZ = cond(v55)
	V = false
	v56 = 0x000A - r1
	NZVC = cond(v56)
	branch Test(LE,NZV) l2472
	// succ:  l24F6 l2472
l24F6:
	v57 = Mem0[0x5426:ptr16]
	v57 = Mem0[v57:word16]
	v58 = Mem0[0x5426:ptr16]
	Mem0[v58:word16] = v57 + 0x0001
	NZV = cond(v58)
	r5 = 0x4D96
	NZ = cond(r5)
	V = false
	call fn0A64 (retsize: 2; FPU: 2;)
	v60 = Mem0[0x5426:ptr16]
	v60 = Mem0[v60:word16]
	v61 = Mem0[0x5426:ptr16]
	Mem0[v61:word16] = v60 + 0x0001
	NZV = cond(v61)
	Mem0[0x551C:word16] = Mem0[0x5874:word16]
	NZ = cond(v63)
	V = false
	v64 = Mem0[0x5426:ptr16]
	v64 = Mem0[v64:word16]
	v65 = Mem0[0x5426:ptr16]
	Mem0[v65:word16] = v64 + 0x0001
	NZV = cond(v65)
	Mem0[0x56A6:word16] = 0x0001
	NZ = cond(v66)
	V = false
	r3 = 0x001E
	NZ = cond(r3)
	V = false
	r4 = 0x5898
	NZ = cond(r4)
	V = false
	r5 = 0x4D3E
	NZ = cond(r5)
	V = false
	// succ:  l2522
l2522:
	v67 = Mem0[0x5426:ptr16]
	Mem0[v67:word16] = 0x0014
	NZ = cond(v67)
	V = false
	v68 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	r0 = v68
	NZ = cond(r0)
	V = false
	v69 = Mem0[r4:byte]
	r4 = r4 + 0x0001
	Mem0[r0 + 0x5528:byte] = v69
	NZ = cond(v70)
	V = false
	v71 = Mem0[0x5426:ptr16]
	Mem0[v71:word16] = 0x0015
	NZ = cond(v71)
	V = false
	r3 = r3 - 0x0001
	NZV = cond(r3)
	branch Test(GT,NZV) l2522
	// succ:  l2538 l2522
l2538:
	v72 = Mem0[0x5426:ptr16]
	Mem0[v72:word16] = 0x0016
	NZ = cond(v72)
	V = false
	Mem0[0x56A2:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v77 = Mem0[0x5426:ptr16]
	v77 = Mem0[v77:word16]
	v78 = Mem0[0x5426:ptr16]
	Mem0[v78:word16] = v77 + 0x0001
	NZV = cond(v78)
	Mem0[0x56A4:word16] = 0x0001
	NZ = cond(v79)
	V = false
	r5 = 0x550A
	NZ = cond(r5)
	V = false
	// succ:  l2550
l2550:
	v80 = Mem0[0x5426:ptr16]
	Mem0[v80:word16] = 0x0018
	NZ = cond(v80)
	V = false
	v83 = Mem0[r5:word16] - Mem0[r5 + 0xFFFE:word16]
	NZVC = cond(v83)
	branch Test(GE,NV) l25C4
	// succ:  l255C l25C4
l255C:
	v85 = Mem0[0x5426:ptr16]
	Mem0[v85:word16] = 0x001A
	NZ = cond(v85)
	V = false
	r0 = Mem0[r5 + 0xFFFE:word16]
	NZ = cond(r0)
	V = false
	v87 = Mem0[0x5426:ptr16]
	v87 = Mem0[v87:word16]
	v88 = Mem0[0x5426:ptr16]
	Mem0[v88:word16] = v87 + 0x0001
	NZV = cond(v88)
	Mem0[r5 + 0xFFFE:word16] = Mem0[r5:word16]
	NZ = cond(v90)
	V = false
	v91 = Mem0[0x5426:ptr16]
	v91 = Mem0[v91:word16]
	v92 = Mem0[0x5426:ptr16]
	Mem0[v92:word16] = v91 + 0x0001
	NZV = cond(v92)
	v93 = r0
	Mem0[r5:word16] = v93
	NZ = cond(v93)
	V = false
	v94 = Mem0[0x5426:ptr16]
	v94 = Mem0[v94:word16]
	v95 = Mem0[0x5426:ptr16]
	Mem0[v95:word16] = v94 + 0x0001
	NZV = cond(v95)
	Mem0[0x56A2:word16] = 0x0001
	NZ = cond(v96)
	V = false
	v97 = Mem0[0x5426:ptr16]
	v97 = Mem0[v97:word16]
	v98 = Mem0[0x5426:ptr16]
	Mem0[v98:word16] = v97 + 0x0001
	NZV = cond(v98)
	Mem0[0x56A6:word16] = 0x0001
	NZ = cond(v99)
	V = false
	Mem0[0x56AC:word16] = 0x001E
	NZ = cond(v100)
	V = false
	r3 = 0x4D3E
	NZ = cond(r3)
	V = false
	r4 = 0x5668
	NZ = cond(r4)
	V = false
	// succ:  l2596
l2596:
	v101 = Mem0[0x5426:ptr16]
	Mem0[v101:word16] = 0x001F
	NZ = cond(v101)
	V = false
	r2 = Mem0[0x56A2:word16]
	NZ = cond(r2)
	V = false
	v103 = Mem0[r3:word16]
	r3 = r3 + 0x0002
	r2 = r2 + v103
	NZVC = cond(r2)
	v105 = Mem0[r2 + 0x551D:byte]
	Mem0[r4:byte] = v105
	NZ = cond(v105)
	V = false
	v106 = Mem0[0x5426:ptr16]
	v106 = Mem0[v106:word16]
	v107 = Mem0[0x5426:ptr16]
	Mem0[v107:word16] = v106 + 0x0001
	NZV = cond(v107)
	Mem0[r2 + 0x551D:byte] = Mem0[r2 + 0x551E:byte]
	NZ = cond(v109)
	V = false
	v110 = Mem0[0x5426:ptr16]
	v110 = Mem0[v110:word16]
	v111 = Mem0[0x5426:ptr16]
	Mem0[v111:word16] = v110 + 0x0001
	NZV = cond(v111)
	v112 = Mem0[r4:byte]
	r4 = r4 + 0x0001
	Mem0[r2 + 0x551E:byte] = v112
	NZ = cond(v113)
	V = false
	v114 = Mem0[0x5426:ptr16]
	Mem0[v114:word16] = 0x0022
	NZ = cond(v114)
	V = false
	Mem0[0x56AC:word16] = Mem0[0x56AA:word16] - 0x0001
	NZV = cond(v116)
	branch Test(GT,NZV) l2596
	// succ:  l25C4 l2596
l25C4:
	v117 = Mem0[0x5426:ptr16]
	Mem0[v117:word16] = 0x0023
	NZ = cond(v117)
	V = false
	r5 = r5 + 0x0002
	NZVC = cond(r5)
	Mem0[0x56A4:word16] = Mem0[0x56A2:word16] + 0x0001
	NZV = cond(v119)
	v121 = 0x000A - Mem0[0x56A2:word16]
	NZVC = cond(v121)
	branch Test(LE,NZV) l2550
	// succ:  l25DA l2550
l25DA:
	v122 = Mem0[0x5426:ptr16]
	v122 = Mem0[v122:word16]
	v123 = Mem0[0x5426:ptr16]
	Mem0[v123:word16] = v122 + 0x0001
	NZV = cond(v123)
	v125 = Mem0[0x56A0:word16]
	v125 = v125 & v125
	NZ = cond(v125)
	C = false
	V = false
	branch Test(NE,Z) l2538
	// succ:  l25E4 l2538
l25E4:
	v126 = Mem0[0x5426:ptr16]
	Mem0[v126:word16] = 0x0026
	NZ = cond(v126)
	V = false
	r5 = 0x4D9E
	NZ = cond(r5)
	V = false
	call fn0818 (retsize: 2; FPU: 2;)
	v128 = Mem0[0x5426:ptr16]
	v128 = Mem0[v128:word16]
	v129 = Mem0[0x5426:ptr16]
	Mem0[v129:word16] = v128 + 0x0001
	NZV = cond(v129)
	r2 = Mem0[0x5874:word16]
	NZ = cond(r2)
	V = false
	v132 = Mem0[0x5876:word16] - r2
	NZVC = cond(v132)
	branch Test(LE,NZV) l2604
	// succ:  l2600 l2604
l2600:
	goto 0x2A4A
	goto l2A4A
	// succ:  l2A4A
l2604:
	v147 = Mem0[0x5426:ptr16]
	Mem0[v147:word16] = 0x0029
	NZ = cond(v147)
	V = false
	r1 = r2
	NZ = cond(r1)
	V = false
	r0 = 0 - N
	Z = cond(r0)
	v149 = r0_r1
	r0 = v149 / 0x00C8
	r1 = v149 % 0x00C8
	NZVC = cond(r0)
	Mem0[0x5876:word16] = r0
	NZ = cond(v150)
	V = false
	r2 = r0
	NZ = cond(r2)
	V = false
	v151 = Mem0[0x5426:ptr16]
	v151 = Mem0[v151:word16]
	v152 = Mem0[0x5426:ptr16]
	Mem0[v152:word16] = v151 + 0x0001
	NZV = cond(v152)
	v153 = Mem0[0x5508:ptr16]
	v153 = Mem0[v153:word16]
	v154 = 0x0001 - v153
	NZVC = cond(v154)
	branch Test(NE,Z) l2628
	// succ:  l2624 l2628
l2624:
	goto 0x2A84
	goto l2A84
	// succ:  l2A84
l2628:
	v199 = Mem0[0x5426:ptr16]
	Mem0[v199:word16] = 0x002C
	NZ = cond(v199)
	V = false
	v200 = r2
	v200 = v200 & v200
	NZ = cond(v200)
	C = false
	V = false
	branch Test(NE,Z) l2646
	// succ:  l2632 l2646
l2632:
	v201 = Mem0[0x5426:ptr16]
	v201 = Mem0[v201:word16]
	v202 = Mem0[0x5426:ptr16]
	Mem0[v202:word16] = v201 + 0x0001
	NZV = cond(v202)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v203)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x49E0
	NZ = cond(v204)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2646
l2646:
	v226 = Mem0[0x5426:ptr16]
	Mem0[v226:word16] = 0x002E
	NZ = cond(v226)
	V = false
	v228 = 0x0001 - Mem0[0x5874:word16]
	NZVC = cond(v228)
	branch Test(NE,Z) l2668
	// succ:  l2654 l2668
l2654:
	v229 = Mem0[0x5426:ptr16]
	v229 = Mem0[v229:word16]
	v230 = Mem0[0x5426:ptr16]
	Mem0[v230:word16] = v229 + 0x0001
	NZV = cond(v230)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v231)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x49FA
	NZ = cond(v232)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2668
l2668:
	v235 = Mem0[0x5426:ptr16]
	Mem0[v235:word16] = 0x0030
	NZ = cond(v235)
	V = false
	v237 = 0x0002 - Mem0[0x5874:word16]
	NZVC = cond(v237)
	branch Test(NE,Z) l268A
	// succ:  l2676 l268A
l2676:
	v238 = Mem0[0x5426:ptr16]
	v238 = Mem0[v238:word16]
	v239 = Mem0[0x5426:ptr16]
	Mem0[v239:word16] = v238 + 0x0001
	NZV = cond(v239)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v240)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4A17
	NZ = cond(v241)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l268A
l268A:
	v244 = Mem0[0x5426:ptr16]
	Mem0[v244:word16] = 0x0032
	NZ = cond(v244)
	V = false
	v246 = 0x0003 - Mem0[0x5874:word16]
	NZVC = cond(v246)
	branch Test(NE,Z) l26AC
	// succ:  l2698 l26AC
l2698:
	v247 = Mem0[0x5426:ptr16]
	v247 = Mem0[v247:word16]
	v248 = Mem0[0x5426:ptr16]
	Mem0[v248:word16] = v247 + 0x0001
	NZV = cond(v248)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v249)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4A31
	NZ = cond(v250)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l26AC
l26AC:
	v253 = Mem0[0x5426:ptr16]
	Mem0[v253:word16] = 0x0034
	NZ = cond(v253)
	V = false
	v255 = 0x0004 - Mem0[0x5874:word16]
	NZVC = cond(v255)
	branch Test(NE,Z) l26CE
	// succ:  l26BA l26CE
l26BA:
	v256 = Mem0[0x5426:ptr16]
	v256 = Mem0[v256:word16]
	v257 = Mem0[0x5426:ptr16]
	Mem0[v257:word16] = v256 + 0x0001
	NZV = cond(v257)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v258)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4A4A
	NZ = cond(v259)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l26CE
l26CE:
	v262 = Mem0[0x5426:ptr16]
	Mem0[v262:word16] = 0x0036
	NZ = cond(v262)
	V = false
	v264 = 0x0005 - Mem0[0x5874:word16]
	NZVC = cond(v264)
	branch Test(NE,Z) l26F0
	// succ:  l26DC l26F0
l26DC:
	v265 = Mem0[0x5426:ptr16]
	v265 = Mem0[v265:word16]
	v266 = Mem0[0x5426:ptr16]
	Mem0[v266:word16] = v265 + 0x0001
	NZV = cond(v266)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v267)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4A69
	NZ = cond(v268)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l26F0
l26F0:
	v271 = Mem0[0x5426:ptr16]
	Mem0[v271:word16] = 0x0038
	NZ = cond(v271)
	V = false
	v273 = 0x0006 - Mem0[0x5874:word16]
	NZVC = cond(v273)
	branch Test(NE,Z) l2712
	// succ:  l26FE l2712
l26FE:
	v274 = Mem0[0x5426:ptr16]
	v274 = Mem0[v274:word16]
	v275 = Mem0[0x5426:ptr16]
	Mem0[v275:word16] = v274 + 0x0001
	NZV = cond(v275)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v276)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4A8A
	NZ = cond(v277)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2712
l2712:
	v280 = Mem0[0x5426:ptr16]
	Mem0[v280:word16] = 0x003A
	NZ = cond(v280)
	V = false
	v282 = 0x0007 - Mem0[0x5874:word16]
	NZVC = cond(v282)
	branch Test(NE,Z) l2734
	// succ:  l2720 l2734
l2720:
	v283 = Mem0[0x5426:ptr16]
	v283 = Mem0[v283:word16]
	v284 = Mem0[0x5426:ptr16]
	Mem0[v284:word16] = v283 + 0x0001
	NZV = cond(v284)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v285)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4AA4
	NZ = cond(v286)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2734
l2734:
	v289 = Mem0[0x5426:ptr16]
	Mem0[v289:word16] = 0x003C
	NZ = cond(v289)
	V = false
	v291 = 0x0008 - Mem0[0x5874:word16]
	NZVC = cond(v291)
	branch Test(NE,Z) l2756
	// succ:  l2742 l2756
l2742:
	v292 = Mem0[0x5426:ptr16]
	v292 = Mem0[v292:word16]
	v293 = Mem0[0x5426:ptr16]
	Mem0[v293:word16] = v292 + 0x0001
	NZV = cond(v293)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v294)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4ACB
	NZ = cond(v295)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2756
l2756:
	v298 = Mem0[0x5426:ptr16]
	Mem0[v298:word16] = 0x003E
	NZ = cond(v298)
	V = false
	v300 = 0x0009 - Mem0[0x5874:word16]
	NZVC = cond(v300)
	branch Test(NE,Z) l2778
	// succ:  l2764 l2778
l2764:
	v301 = Mem0[0x5426:ptr16]
	v301 = Mem0[v301:word16]
	v302 = Mem0[0x5426:ptr16]
	Mem0[v302:word16] = v301 + 0x0001
	NZV = cond(v302)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v303)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4ADD
	NZ = cond(v304)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2778
l2778:
	v307 = Mem0[0x5426:ptr16]
	Mem0[v307:word16] = 0x0040
	NZ = cond(v307)
	V = false
	v309 = 0x000A - Mem0[0x5874:word16]
	NZVC = cond(v309)
	branch Test(NE,Z) l279A
	// succ:  l2786 l279A
l2786:
	v310 = Mem0[0x5426:ptr16]
	v310 = Mem0[v310:word16]
	v311 = Mem0[0x5426:ptr16]
	Mem0[v311:word16] = v310 + 0x0001
	NZV = cond(v311)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v312)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4AF4
	NZ = cond(v313)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l279A
l279A:
	v316 = Mem0[0x5426:ptr16]
	Mem0[v316:word16] = 0x0042
	NZ = cond(v316)
	V = false
	v318 = 0x000B - Mem0[0x5874:word16]
	NZVC = cond(v318)
	branch Test(NE,Z) l27BC
	// succ:  l27A8 l27BC
l27A8:
	v319 = Mem0[0x5426:ptr16]
	v319 = Mem0[v319:word16]
	v320 = Mem0[0x5426:ptr16]
	Mem0[v320:word16] = v319 + 0x0001
	NZV = cond(v320)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v321)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4B0E
	NZ = cond(v322)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l27BC
l27BC:
	v325 = Mem0[0x5426:ptr16]
	Mem0[v325:word16] = 0x0044
	NZ = cond(v325)
	V = false
	v327 = 0x000C - Mem0[0x5874:word16]
	NZVC = cond(v327)
	branch Test(NE,Z) l27DE
	// succ:  l27CA l27DE
l27CA:
	v328 = Mem0[0x5426:ptr16]
	v328 = Mem0[v328:word16]
	v329 = Mem0[0x5426:ptr16]
	Mem0[v329:word16] = v328 + 0x0001
	NZV = cond(v329)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v330)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4B29
	NZ = cond(v331)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l27DE
l27DE:
	v334 = Mem0[0x5426:ptr16]
	Mem0[v334:word16] = 0x0046
	NZ = cond(v334)
	V = false
	v336 = 0x000D - Mem0[0x5874:word16]
	NZVC = cond(v336)
	branch Test(NE,Z) l2800
	// succ:  l27EC l2800
l27EC:
	v337 = Mem0[0x5426:ptr16]
	v337 = Mem0[v337:word16]
	v338 = Mem0[0x5426:ptr16]
	Mem0[v338:word16] = v337 + 0x0001
	NZV = cond(v338)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v339)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4B42
	NZ = cond(v340)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2800
l2800:
	v343 = Mem0[0x5426:ptr16]
	Mem0[v343:word16] = 0x0048
	NZ = cond(v343)
	V = false
	v345 = 0x000E - Mem0[0x5874:word16]
	NZVC = cond(v345)
	branch Test(NE,Z) l2822
	// succ:  l280E l2822
l280E:
	v346 = Mem0[0x5426:ptr16]
	v346 = Mem0[v346:word16]
	v347 = Mem0[0x5426:ptr16]
	Mem0[v347:word16] = v346 + 0x0001
	NZV = cond(v347)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v348)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4B5B
	NZ = cond(v349)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2822
l2822:
	v352 = Mem0[0x5426:ptr16]
	Mem0[v352:word16] = 0x004A
	NZ = cond(v352)
	V = false
	v354 = 0x000F - Mem0[0x5874:word16]
	NZVC = cond(v354)
	branch Test(NE,Z) l2844
	// succ:  l2830 l2844
l2830:
	v355 = Mem0[0x5426:ptr16]
	v355 = Mem0[v355:word16]
	v356 = Mem0[0x5426:ptr16]
	Mem0[v356:word16] = v355 + 0x0001
	NZV = cond(v356)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v357)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4B7C
	NZ = cond(v358)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2844
l2844:
	v361 = Mem0[0x5426:ptr16]
	Mem0[v361:word16] = 0x004C
	NZ = cond(v361)
	V = false
	v363 = 0x0010 - Mem0[0x5874:word16]
	NZVC = cond(v363)
	branch Test(NE,Z) l2866
	// succ:  l2852 l2866
l2852:
	v364 = Mem0[0x5426:ptr16]
	v364 = Mem0[v364:word16]
	v365 = Mem0[0x5426:ptr16]
	Mem0[v365:word16] = v364 + 0x0001
	NZV = cond(v365)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v366)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4B9D
	NZ = cond(v367)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2866
l2866:
	v370 = Mem0[0x5426:ptr16]
	Mem0[v370:word16] = 0x004E
	NZ = cond(v370)
	V = false
	v372 = 0x0011 - Mem0[0x5874:word16]
	NZVC = cond(v372)
	branch Test(NE,Z) l2888
	// succ:  l2874 l2888
l2874:
	v373 = Mem0[0x5426:ptr16]
	v373 = Mem0[v373:word16]
	v374 = Mem0[0x5426:ptr16]
	Mem0[v374:word16] = v373 + 0x0001
	NZV = cond(v374)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v375)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4BB9
	NZ = cond(v376)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2888
l2888:
	v379 = Mem0[0x5426:ptr16]
	Mem0[v379:word16] = 0x0050
	NZ = cond(v379)
	V = false
	v381 = 0x0012 - Mem0[0x5874:word16]
	NZVC = cond(v381)
	branch Test(NE,Z) l28AA
	// succ:  l2896 l28AA
l2896:
	v382 = Mem0[0x5426:ptr16]
	v382 = Mem0[v382:word16]
	v383 = Mem0[0x5426:ptr16]
	Mem0[v383:word16] = v382 + 0x0001
	NZV = cond(v383)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v384)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4BD8
	NZ = cond(v385)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l28AA
l28AA:
	v388 = Mem0[0x5426:ptr16]
	Mem0[v388:word16] = 0x0052
	NZ = cond(v388)
	V = false
	v390 = 0x0013 - Mem0[0x5874:word16]
	NZVC = cond(v390)
	branch Test(NE,Z) l28CC
	// succ:  l28B8 l28CC
l28B8:
	v391 = Mem0[0x5426:ptr16]
	v391 = Mem0[v391:word16]
	v392 = Mem0[0x5426:ptr16]
	Mem0[v392:word16] = v391 + 0x0001
	NZV = cond(v392)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v393)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4BF2
	NZ = cond(v394)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l28CC
l28CC:
	v397 = Mem0[0x5426:ptr16]
	Mem0[v397:word16] = 0x0054
	NZ = cond(v397)
	V = false
	v399 = 0x0014 - Mem0[0x5874:word16]
	NZVC = cond(v399)
	branch Test(NE,Z) l28EE
	// succ:  l28DA l28EE
l28DA:
	v400 = Mem0[0x5426:ptr16]
	v400 = Mem0[v400:word16]
	v401 = Mem0[0x5426:ptr16]
	Mem0[v401:word16] = v400 + 0x0001
	NZV = cond(v401)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v402)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4C07
	NZ = cond(v403)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l28EE
l28EE:
	v406 = Mem0[0x5426:ptr16]
	Mem0[v406:word16] = 0x0056
	NZ = cond(v406)
	V = false
	v408 = 0x0015 - Mem0[0x5874:word16]
	NZVC = cond(v408)
	branch Test(NE,Z) l2910
	// succ:  l28FC l2910
l28FC:
	v409 = Mem0[0x5426:ptr16]
	v409 = Mem0[v409:word16]
	v410 = Mem0[0x5426:ptr16]
	Mem0[v410:word16] = v409 + 0x0001
	NZV = cond(v410)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v411)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4C24
	NZ = cond(v412)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2910
l2910:
	v415 = Mem0[0x5426:ptr16]
	Mem0[v415:word16] = 0x0058
	NZ = cond(v415)
	V = false
	v417 = 0x0016 - Mem0[0x5874:word16]
	NZVC = cond(v417)
	branch Test(NE,Z) l2932
	// succ:  l291E l2932
l291E:
	v418 = Mem0[0x5426:ptr16]
	v418 = Mem0[v418:word16]
	v419 = Mem0[0x5426:ptr16]
	Mem0[v419:word16] = v418 + 0x0001
	NZV = cond(v419)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v420)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4C36
	NZ = cond(v421)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2932
l2932:
	v424 = Mem0[0x5426:ptr16]
	Mem0[v424:word16] = 0x005A
	NZ = cond(v424)
	V = false
	v426 = 0x0017 - Mem0[0x5874:word16]
	NZVC = cond(v426)
	branch Test(NE,Z) l2954
	// succ:  l2940 l2954
l2940:
	v427 = Mem0[0x5426:ptr16]
	v427 = Mem0[v427:word16]
	v428 = Mem0[0x5426:ptr16]
	Mem0[v428:word16] = v427 + 0x0001
	NZV = cond(v428)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v429)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4C4F
	NZ = cond(v430)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2954
l2954:
	v433 = Mem0[0x5426:ptr16]
	Mem0[v433:word16] = 0x005C
	NZ = cond(v433)
	V = false
	v435 = 0x0018 - Mem0[0x5874:word16]
	NZVC = cond(v435)
	branch Test(NE,Z) l2976
	// succ:  l2962 l2976
l2962:
	v436 = Mem0[0x5426:ptr16]
	v436 = Mem0[v436:word16]
	v437 = Mem0[0x5426:ptr16]
	Mem0[v437:word16] = v436 + 0x0001
	NZV = cond(v437)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v438)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4C65
	NZ = cond(v439)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2976
l2976:
	v442 = Mem0[0x5426:ptr16]
	Mem0[v442:word16] = 0x005E
	NZ = cond(v442)
	V = false
	v444 = 0x0019 - Mem0[0x5874:word16]
	NZVC = cond(v444)
	branch Test(NE,Z) l2998
	// succ:  l2984 l2998
l2984:
	v445 = Mem0[0x5426:ptr16]
	v445 = Mem0[v445:word16]
	v446 = Mem0[0x5426:ptr16]
	Mem0[v446:word16] = v445 + 0x0001
	NZV = cond(v446)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v447)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4C7A
	NZ = cond(v448)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2998
l2998:
	v451 = Mem0[0x5426:ptr16]
	Mem0[v451:word16] = 0x0060
	NZ = cond(v451)
	V = false
	v453 = 0x001A - Mem0[0x5874:word16]
	NZVC = cond(v453)
	branch Test(NE,Z) l29BA
	// succ:  l29A6 l29BA
l29A6:
	v454 = Mem0[0x5426:ptr16]
	v454 = Mem0[v454:word16]
	v455 = Mem0[0x5426:ptr16]
	Mem0[v455:word16] = v454 + 0x0001
	NZV = cond(v455)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v456)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4C99
	NZ = cond(v457)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l29BA
l29BA:
	v460 = Mem0[0x5426:ptr16]
	Mem0[v460:word16] = 0x0062
	NZ = cond(v460)
	V = false
	v462 = 0x001B - Mem0[0x5874:word16]
	NZVC = cond(v462)
	branch Test(NE,Z) l29DC
	// succ:  l29C8 l29DC
l29C8:
	v463 = Mem0[0x5426:ptr16]
	v463 = Mem0[v463:word16]
	v464 = Mem0[0x5426:ptr16]
	Mem0[v464:word16] = v463 + 0x0001
	NZV = cond(v464)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v465)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4CAF
	NZ = cond(v466)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l29DC
l29DC:
	v469 = Mem0[0x5426:ptr16]
	Mem0[v469:word16] = 0x0064
	NZ = cond(v469)
	V = false
	v471 = 0x001C - Mem0[0x5874:word16]
	NZVC = cond(v471)
	branch Test(NE,Z) l29FE
	// succ:  l29EA l29FE
l29EA:
	v472 = Mem0[0x5426:ptr16]
	v472 = Mem0[v472:word16]
	v473 = Mem0[0x5426:ptr16]
	Mem0[v473:word16] = v472 + 0x0001
	NZV = cond(v473)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v474)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4CC6
	NZ = cond(v475)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l29FE
l29FE:
	v478 = Mem0[0x5426:ptr16]
	Mem0[v478:word16] = 0x0066
	NZ = cond(v478)
	V = false
	v480 = 0x001D - Mem0[0x5874:word16]
	NZVC = cond(v480)
	branch Test(NE,Z) l2A20
	// succ:  l2A0C l2A20
l2A0C:
	v481 = Mem0[0x5426:ptr16]
	v481 = Mem0[v481:word16]
	v482 = Mem0[0x5426:ptr16]
	Mem0[v482:word16] = v481 + 0x0001
	NZV = cond(v482)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v483)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4CE1
	NZ = cond(v484)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2A20
l2A20:
	v487 = Mem0[0x5426:ptr16]
	Mem0[v487:word16] = 0x0068
	NZ = cond(v487)
	V = false
	v489 = 0x001E - Mem0[0x5874:word16]
	NZVC = cond(v489)
	branch Test(LT,NV) l2A42
	// succ:  l2A2E l2A42
l2A2E:
	v490 = Mem0[0x5426:ptr16]
	v490 = Mem0[v490:word16]
	v491 = Mem0[0x5426:ptr16]
	Mem0[v491:word16] = v490 + 0x0001
	NZV = cond(v491)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v492)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D03
	NZ = cond(v493)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2A42
l2A42:
	v496 = Mem0[0x5426:ptr16]
	Mem0[v496:word16] = 0x006A
	NZ = cond(v496)
	V = false
	goto l2A6E
	// succ:  l2A6E
l2A4A:
	v134 = Mem0[0x5426:ptr16]
	Mem0[v134:word16] = 0x006B
	NZ = cond(v134)
	V = false
	v135 = Mem0[0x5508:ptr16]
	v135 = Mem0[v135:word16]
	v136 = 0x0001 - v135
	NZVC = cond(v136)
	branch Test(EQ,Z) l2A84
	// succ:  l2A58 l2A84
l2A58:
	v137 = Mem0[0x5426:ptr16]
	Mem0[v137:word16] = 0x006D
	NZ = cond(v137)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v138)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D20
	NZ = cond(v139)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2A6E
l2A6E:
	v142 = Mem0[0x5426:ptr16]
	Mem0[v142:word16] = 0x006E
	NZ = cond(v142)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v143)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x49A3
	NZ = cond(v144)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2A84
l2A84:
	v156 = Mem0[0x5426:ptr16]
	Mem0[v156:word16] = 0x006F
	NZ = cond(v156)
	V = false
	Mem0[0x56A4:word16] = 0x0001
	NZ = cond(v157)
	V = false
	r5 = 0x5508
	NZ = cond(r5)
	V = false
	// succ:  l2A94
l2A94:
	v158 = Mem0[0x5426:ptr16]
	Mem0[v158:word16] = 0x0070
	NZ = cond(v158)
	V = false
	Mem0[0x56A6:word16] = 0x0001
	NZ = cond(v159)
	V = false
	r2 = 0x001E
	NZ = cond(r2)
	V = false
	r3 = 0x4D3E
	NZ = cond(r3)
	V = false
	r4 = 0x5668
	NZ = cond(r4)
	V = false
	// succ:  l2AAC
l2AAC:
	v160 = Mem0[0x5426:ptr16]
	Mem0[v160:word16] = 0x0071
	NZ = cond(v160)
	V = false
	r0 = Mem0[0x56A2:word16]
	NZ = cond(r0)
	V = false
	v162 = Mem0[r3:word16]
	r3 = r3 + 0x0002
	r0 = r0 + v162
	NZVC = cond(r0)
	v164 = Mem0[r0 + 0x551D:byte]
	Mem0[r4:byte] = v164
	r4 = r4 + 0x0001
	NZ = cond(v164)
	V = false
	v165 = Mem0[0x5426:ptr16]
	Mem0[v165:word16] = 0x0072
	NZ = cond(v165)
	V = false
	r2 = r2 - 0x0001
	NZV = cond(r2)
	branch Test(GT,NZV) l2AAC
	// succ:  l2AC6 l2AAC
l2AC6:
	v166 = Mem0[0x5426:ptr16]
	v166 = Mem0[v166:word16]
	v167 = Mem0[0x5426:ptr16]
	Mem0[v167:word16] = v166 + 0x0001
	NZV = cond(v167)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D82
	NZ = cond(v168)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x499C
	NZ = cond(v169)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v171)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v174 = Mem0[0x5426:ptr16]
	v174 = Mem0[v174:word16]
	v175 = Mem0[0x5426:ptr16]
	Mem0[v175:word16] = v174 + 0x0001
	NZV = cond(v175)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D82
	NZ = cond(v176)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x499F
	NZ = cond(v177)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7E
	NZ = cond(v179)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5668
	NZ = cond(v180)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v183 = Mem0[0x5426:ptr16]
	v183 = Mem0[v183:word16]
	v184 = Mem0[0x5426:ptr16]
	Mem0[v184:word16] = v183 + 0x0001
	NZV = cond(v184)
	v185 = Mem0[0x5508:ptr16]
	v185 = Mem0[v185:word16]
	v186 = 0x0001 - v185
	NZVC = cond(v186)
	branch Test(EQ,Z) l2B3C
	// succ:  l2B0C l2B3C
l2B0C:
	v187 = Mem0[0x5426:ptr16]
	Mem0[v187:word16] = 0x0077
	NZ = cond(v187)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v188)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x49D4
	NZ = cond(v189)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x56A4
	NZ = cond(v191)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7E
	NZ = cond(v193)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5668
	NZ = cond(v194)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v196)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l2B3C
l2B3C:
	v207 = Mem0[0x5426:ptr16]
	Mem0[v207:word16] = 0x0078
	NZ = cond(v207)
	V = false
	r5 = r5 + 0x0002
	NZVC = cond(r5)
	Mem0[0x56A4:word16] = Mem0[0x56A2:word16] + 0x0001
	NZV = cond(v209)
	v211 = 0x000A - Mem0[0x56A2:word16]
	NZVC = cond(v211)
	branch Test(LE,NZV) l2A94
	// succ:  l2B52 l2A94
l2B52:
	v212 = Mem0[0x5426:ptr16]
	v212 = Mem0[v212:word16]
	v213 = Mem0[0x5426:ptr16]
	Mem0[v213:word16] = v212 + 0x0001
	NZV = cond(v213)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4D7C
	NZ = cond(v214)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4984
	NZ = cond(v215)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x569E
	NZ = cond(v217)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v220 = Mem0[0x5426:ptr16]
	Mem0[v220:word16] = 0x007B
	NZ = cond(v220)
	V = false
	r5 = 0x4D88
	NZ = cond(r5)
	V = false
	call fn45C8 (retsize: 2; FPU: 2;)
	v222 = Mem0[0x5426:ptr16]
	v222 = Mem0[v222:word16]
	v223 = Mem0[0x5426:ptr16]
	Mem0[v223:word16] = v222 + 0x0001
	NZV = cond(v223)
	r5 = 0x4D88
	NZ = cond(r5)
	V = false
	call fn0F9C (retsize: 2; FPU: 2;)
	v225 = Mem0[0x5426:ptr16]
	Mem0[v225:word16] = 0x00A1
	NZ = cond(v225)
	V = false
	return
	// succ:  fn243A_exit
fn243A_exit:


// fn2B90
// Return size: 2
void fn2B90()
fn2B90_entry:
	// succ:  l2B90
l2B90:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	r2 = r2 - 0x0002
	v7 = Mem0[Mem0[r2:ptr16]:word16] & ~Mem0[sp + 0x15FF:word16]
	Mem0[Mem0[r2:ptr16]:word16] = v7
	NZ = cond(v7)
	V = false
	__reset()
	r2 = r2 - 0x0002
	v12 = Mem0[r2:word16] - Mem0[r2:word16]
	NZVC = cond(v12)
	r5 = 0x501C
	NZ = cond(r5)
	V = false
	call fn457C (retsize: 2; FPU: 2;)
	v16 = Mem0[0x5426:ptr16]
	v16 = Mem0[v16:word16]
	v17 = Mem0[0x5426:ptr16]
	Mem0[v17:word16] = v16 + 0x0001
	NZV = cond(v17)
	r5 = 0x501C
	NZ = cond(r5)
	V = false
	call fn4030 (retsize: 2; FPU: 2;)
	v20 = Mem0[0x5426:ptr16]
	v20 = Mem0[v20:word16]
	v21 = Mem0[0x5426:ptr16]
	Mem0[v21:word16] = v20 + 0x0001
	NZV = cond(v21)
	Mem0[0x56B8:word16] = 0x0001
	NZ = cond(v22)
	V = false
	r4 = 0x001E
	NZ = cond(r4)
	V = false
	r5 = 0x5898
	NZ = cond(r5)
	V = false
	// succ:  l2BC2
l2BC2:
	v24 = Mem0[0x5426:ptr16]
	Mem0[v24:word16] = 0x0008
	NZ = cond(v24)
	V = false
	v25 = 0x20
	Mem0[r5:byte] = v25
	r5 = r5 + 0x0001
	NZ = cond(v25)
	V = false
	v26 = Mem0[0x5426:ptr16]
	Mem0[v26:word16] = 0x0009
	NZ = cond(v26)
	V = false
	r4 = r4 - 0x0001
	NZV = cond(r4)
	branch Test(GT,NZV) l2BC2
	// succ:  l2BD6 l2BC2
l2BD6:
	v27 = Mem0[0x5426:ptr16]
	v27 = Mem0[v27:word16]
	v28 = Mem0[0x5426:ptr16]
	Mem0[v28:word16] = v27 + 0x0001
	NZV = cond(v28)
	r5 = 0x501E
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	v30 = Mem0[0x5426:ptr16]
	v30 = Mem0[v30:word16]
	v31 = Mem0[0x5426:ptr16]
	Mem0[v31:word16] = v30 + 0x0001
	NZV = cond(v31)
	r5 = 0x5022
	NZ = cond(r5)
	V = false
	call fn4072 (retsize: 2; FPU: 2;)
	v33 = Mem0[0x5426:ptr16]
	v33 = Mem0[v33:word16]
	v34 = Mem0[0x5426:ptr16]
	Mem0[v34:word16] = v33 + 0x0001
	NZV = cond(v34)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5006
	NZ = cond(v35)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4DE6
	NZ = cond(v36)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v39 = Mem0[0x5426:ptr16]
	v39 = Mem0[v39:word16]
	v40 = Mem0[0x5426:ptr16]
	Mem0[v40:word16] = v39 + 0x0001
	NZV = cond(v40)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5006
	NZ = cond(v41)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4F12
	NZ = cond(v42)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v45 = Mem0[0x5426:ptr16]
	v45 = Mem0[v45:word16]
	v46 = Mem0[0x5426:ptr16]
	Mem0[v46:word16] = v45 + 0x0001
	NZV = cond(v46)
	r5 = 0x5028
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	v48 = Mem0[0x5426:ptr16]
	v48 = Mem0[v48:word16]
	v49 = Mem0[0x5426:ptr16]
	Mem0[v49:word16] = v48 + 0x0001
	NZV = cond(v49)
	r5 = 0x502C
	NZ = cond(r5)
	V = false
	call fn4072 (retsize: 2; FPU: 2;)
	v51 = Mem0[0x5426:ptr16]
	v51 = Mem0[v51:word16]
	v52 = Mem0[0x5426:ptr16]
	Mem0[v52:word16] = v51 + 0x0001
	NZV = cond(v52)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5006
	NZ = cond(v53)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4FA0
	NZ = cond(v54)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v57 = Mem0[0x5426:ptr16]
	v57 = Mem0[v57:word16]
	v58 = Mem0[0x5426:ptr16]
	Mem0[v58:word16] = v57 + 0x0001
	NZV = cond(v58)
	r5 = 0x5032
	NZ = cond(r5)
	V = false
	call fn4072 (retsize: 2; FPU: 2;)
	v60 = Mem0[0x5426:ptr16]
	v60 = Mem0[v60:word16]
	v61 = Mem0[0x5426:ptr16]
	Mem0[v61:word16] = v60 + 0x0001
	NZV = cond(v61)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5006
	NZ = cond(v62)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4FBD
	NZ = cond(v63)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v66 = Mem0[0x5426:ptr16]
	v66 = Mem0[v66:word16]
	v67 = Mem0[0x5426:ptr16]
	Mem0[v67:word16] = v66 + 0x0001
	NZV = cond(v67)
	Mem0[0x56BA:word16] = 0x0001
	NZ = cond(v68)
	V = false
	v69 = Mem0[0x5426:ptr16]
	v69 = Mem0[v69:word16]
	v70 = Mem0[0x5426:ptr16]
	Mem0[v70:word16] = v69 + 0x0001
	NZV = cond(v70)
	Mem0[0x56BC:word16] = 0x0002
	NZ = cond(v71)
	V = false
	v72 = Mem0[0x5426:ptr16]
	v72 = Mem0[v72:word16]
	v73 = Mem0[0x5426:ptr16]
	Mem0[v73:word16] = v72 + 0x0001
	NZV = cond(v73)
	Mem0[0x56BE:word16] = 0x0001
	NZ = cond(v74)
	V = false
	v75 = Mem0[0x5426:ptr16]
	v75 = Mem0[v75:word16]
	v76 = Mem0[0x5426:ptr16]
	Mem0[v76:word16] = v75 + 0x0001
	NZV = cond(v76)
	Mem0[0x56C0:word16] = 0x000A
	NZ = cond(v77)
	V = false
	// succ:  l2C8A
l2C8A:
	v78 = Mem0[0x5426:ptr16]
	Mem0[v78:word16] = 0x0017
	NZ = cond(v78)
	V = false
	v80 = Mem0[0x56BC:word16]
	v80 = v80 & v80
	NZ = cond(v80)
	C = false
	V = false
	branch Test(LE,NZV) l2CA2
	// succ:  l2C96 l2CA2
l2C96:
	v82 = Mem0[0x5426:ptr16]
	v82 = Mem0[v82:word16]
	v83 = Mem0[0x5426:ptr16]
	Mem0[v83:word16] = v82 + 0x0001
	NZV = cond(v83)
	r5 = 0x5038
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l2CA2
l2CA2:
	v85 = Mem0[0x5426:ptr16]
	Mem0[v85:word16] = 0x0019
	NZ = cond(v85)
	V = false
	v87 = Mem0[0x56BC:word16]
	v87 = v87 & v87
	NZ = cond(v87)
	C = false
	V = false
	branch Test(GE,NV) l2CBA
	// succ:  l2CAE l2CBA
l2CAE:
	v89 = Mem0[0x5426:ptr16]
	v89 = Mem0[v89:word16]
	v90 = Mem0[0x5426:ptr16]
	Mem0[v90:word16] = v89 + 0x0001
	NZV = cond(v90)
	r5 = 0x5042
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l2CBA
l2CBA:
	v92 = Mem0[0x5426:ptr16]
	Mem0[v92:word16] = 0x001B
	NZ = cond(v92)
	V = false
	v94 = Mem0[0x56BC:word16]
	v94 = v94 & v94
	NZ = cond(v94)
	C = false
	V = false
	branch Test(LE,NZV) l2CD2
	// succ:  l2CC6 l2CD2
l2CC6:
	v95 = Mem0[0x5426:ptr16]
	v95 = Mem0[v95:word16]
	v96 = Mem0[0x5426:ptr16]
	Mem0[v96:word16] = v95 + 0x0001
	NZV = cond(v96)
	r5 = 0x504C
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l2CD2
l2CD2:
	v98 = Mem0[0x5426:ptr16]
	Mem0[v98:word16] = 0x001D
	NZ = cond(v98)
	V = false
	v100 = Mem0[0x56BC:word16]
	v100 = v100 & v100
	NZ = cond(v100)
	C = false
	V = false
	branch Test(GE,NV) l2CEA
	// succ:  l2CDE l2CEA
l2CDE:
	v101 = Mem0[0x5426:ptr16]
	v101 = Mem0[v101:word16]
	v102 = Mem0[0x5426:ptr16]
	Mem0[v102:word16] = v101 + 0x0001
	NZV = cond(v102)
	r5 = 0x5056
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l2CEA
l2CEA:
	v104 = Mem0[0x5426:ptr16]
	Mem0[v104:word16] = 0x001F
	NZ = cond(v104)
	V = false
	r5 = 0x501E
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	v106 = Mem0[0x5426:ptr16]
	v106 = Mem0[v106:word16]
	v107 = Mem0[0x5426:ptr16]
	Mem0[v107:word16] = v106 + 0x0001
	NZV = cond(v107)
	v109 = Mem0[0x56BC:word16]
	v109 = v109 & v109
	NZ = cond(v109)
	C = false
	V = false
	branch Test(LE,NZV) l2D0E
	// succ:  l2D02 l2D0E
l2D02:
	v110 = Mem0[0x5426:ptr16]
	v110 = Mem0[v110:word16]
	v111 = Mem0[0x5426:ptr16]
	Mem0[v111:word16] = v110 + 0x0001
	NZV = cond(v111)
	r5 = 0x5060
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l2D0E
l2D0E:
	v113 = Mem0[0x5426:ptr16]
	Mem0[v113:word16] = 0x0022
	NZ = cond(v113)
	V = false
	v115 = Mem0[0x56BC:word16]
	v115 = v115 & v115
	NZ = cond(v115)
	C = false
	V = false
	branch Test(GE,NV) l2D26
	// succ:  l2D1A l2D26
l2D1A:
	v116 = Mem0[0x5426:ptr16]
	v116 = Mem0[v116:word16]
	v117 = Mem0[0x5426:ptr16]
	Mem0[v117:word16] = v116 + 0x0001
	NZV = cond(v117)
	r5 = 0x506A
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l2D26
l2D26:
	v119 = Mem0[0x5426:ptr16]
	Mem0[v119:word16] = 0x0024
	NZ = cond(v119)
	V = false
	r5 = 0x5028
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	v121 = Mem0[0x5426:ptr16]
	v121 = Mem0[v121:word16]
	v122 = Mem0[0x5426:ptr16]
	Mem0[v122:word16] = v121 + 0x0001
	NZV = cond(v122)
	r5 = 0x501C
	NZ = cond(r5)
	V = false
	call fn5A90 (retsize: 2; FPU: 2;)
	r1 = (int16) r0
	NZ = cond(r1)
	V = false
	Mem0[0x56B6:byte] = r1
	NZ = cond(v126)
	V = false
	v127 = Mem0[0x5426:ptr16]
	Mem0[v127:word16] = 0x0026
	NZ = cond(v127)
	V = false
	v128 = 0x000D - r1
	NZVC = cond(v128)
	branch Test(EQ,Z) l2E18
	// succ:  l2D52 l2E18
l2D52:
	v130 = Mem0[0x5426:ptr16]
	Mem0[v130:word16] = 0x0028
	NZ = cond(v130)
	V = false
	v131 = 0x0020 - r1
	NZVC = cond(v131)
	branch Test(LT,NV) l2DC4
	// succ:  l2D5E l2DC4
l2D5E:
	v132 = Mem0[0x5426:ptr16]
	Mem0[v132:word16] = 0x002A
	NZ = cond(v132)
	V = false
	v133 = 0x007F - r1
	NZVC = cond(v133)
	branch Test(EQ,Z) l2D96
	// succ:  l2D6A l2D96
l2D6A:
	v134 = Mem0[0x5426:ptr16]
	Mem0[v134:word16] = 0x002C
	NZ = cond(v134)
	V = false
	r2 = Mem0[0x56B8:word16]
	NZ = cond(r2)
	V = false
	v136 = 0x001F - r2
	NZVC = cond(v136)
	branch Test(EQ,Z) l2DC4
	// succ:  l2D7A l2DC4
l2D7A:
	v137 = Mem0[0x5426:ptr16]
	Mem0[v137:word16] = 0x002E
	NZ = cond(v137)
	V = false
	Mem0[r2 + 0x5897:byte] = r1
	NZ = cond(v138)
	V = false
	v139 = Mem0[0x5426:ptr16]
	v139 = Mem0[v139:word16]
	v140 = Mem0[0x5426:ptr16]
	Mem0[v140:word16] = v139 + 0x0001
	NZV = cond(v140)
	Mem0[0x56BA:word16] = r2
	NZ = cond(v141)
	V = false
	Mem0[0x56BA:word16] = Mem0[0x56B8:word16] + 0x0001
	NZV = cond(v143)
	v144 = Mem0[0x5426:ptr16]
	v144 = Mem0[v144:word16]
	v145 = Mem0[0x5426:ptr16]
	Mem0[v145:word16] = v144 + 0x0001
	NZV = cond(v145)
	goto l2DC4
	// succ:  l2DC4
l2D96:
	v165 = Mem0[0x5426:ptr16]
	Mem0[v165:word16] = 0x0031
	NZ = cond(v165)
	V = false
	Mem0[0x56BA:word16] = Mem0[0x56B8:word16] - 0x0001
	NZV = cond(v167)
	v168 = Mem0[0x5426:ptr16]
	v168 = Mem0[v168:word16]
	v169 = Mem0[0x5426:ptr16]
	Mem0[v169:word16] = v168 + 0x0001
	NZV = cond(v169)
	v171 = Mem0[0x56B8:word16]
	v171 = v171 & v171
	NZ = cond(v171)
	C = false
	V = false
	branch Test(GT,NZV) l2DB4
	// succ:  l2DAA l2DB4
l2DAA:
	v172 = Mem0[0x5426:ptr16]
	v172 = Mem0[v172:word16]
	v173 = Mem0[0x5426:ptr16]
	Mem0[v173:word16] = v172 + 0x0001
	NZV = cond(v173)
	Mem0[0x56BA:word16] = 0x0001
	NZ = cond(v174)
	V = false
	// succ:  l2DB4
l2DB4:
	v182 = Mem0[0x5426:ptr16]
	Mem0[v182:word16] = 0x0034
	NZ = cond(v182)
	V = false
	r0 = Mem0[0x56B8:word16]
	NZ = cond(r0)
	V = false
	Mem0[r0 + 0x5897:byte] = 0x20
	NZ = cond(v184)
	V = false
	// succ:  l2DC4
l2DC4:
	v147 = Mem0[0x5426:ptr16]
	Mem0[v147:word16] = 0x0035
	NZ = cond(v147)
	V = false
	r5 = 0x5074
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v149 = Mem0[0x5426:ptr16]
	v149 = Mem0[v149:word16]
	v150 = Mem0[0x5426:ptr16]
	Mem0[v150:word16] = v149 + 0x0001
	NZV = cond(v150)
	Mem0[0x56BE:word16] = -Mem0[0x56BC:word16]
	NZV = cond(v152)
	v153 = Mem0[0x5426:ptr16]
	v153 = Mem0[v153:word16]
	v154 = Mem0[0x5426:ptr16]
	Mem0[v154:word16] = v153 + 0x0001
	NZV = cond(v154)
	v156 = Mem0[pc + 0x28DC:word16] + Mem0[0x56BA:word16]
	Mem0[pc + 0x28DC:word16] = v156
	NZVC = cond(v156)
	v157 = Mem0[0x5426:ptr16]
	v157 = Mem0[v157:word16]
	v158 = Mem0[0x5426:ptr16]
	Mem0[v158:word16] = v157 + 0x0001
	NZV = cond(v158)
	v160 = 0x003C - Mem0[0x56BE:word16]
	NZVC = cond(v160)
	branch Test(LE,NZV) l2DF8
	// succ:  l2DF0 l2DF8
l2DF0:
	v161 = Mem0[0x5426:ptr16]
	v161 = Mem0[v161:word16]
	v162 = Mem0[0x5426:ptr16]
	Mem0[v162:word16] = v161 + 0x0001
	NZV = cond(v162)
	Mem0[0x56BC:word16] = -Mem0[0x56BA:word16]
	NZV = cond(v164)
	// succ:  l2DF8
l2DF8:
	v175 = Mem0[0x5426:ptr16]
	Mem0[v175:word16] = 0x003A
	NZ = cond(v175)
	V = false
	v177 = 0x0008 - Mem0[0x56BE:word16]
	NZVC = cond(v177)
	branch Test(GE,NV) l2E0E
	// succ:  l2E06 l2E0E
l2E06:
	v178 = Mem0[0x5426:ptr16]
	v178 = Mem0[v178:word16]
	v179 = Mem0[0x5426:ptr16]
	Mem0[v179:word16] = v178 + 0x0001
	NZV = cond(v179)
	Mem0[0x56BC:word16] = -Mem0[0x56BA:word16]
	NZV = cond(v181)
	// succ:  l2E0E
l2E0E:
	v185 = Mem0[0x5426:ptr16]
	Mem0[v185:word16] = 0x003C
	NZ = cond(v185)
	V = false
	goto l2C8A
	// succ:  l2C8A
l2E18:
	v146 = Mem0[0x5426:ptr16]
	Mem0[v146:word16] = 0x003D
	NZ = cond(v146)
	V = false
	return
	// succ:  fn2B90_exit
fn2B90_exit:


// fn2E20
// Return size: 2
void fn2E20()
fn2E20_entry:
	// succ:  l2E20
l2E20:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v6 = Mem0[Mem0[sp + 0x15FF:ptr16]:word16] | r1
	Mem0[Mem0[sp + 0x15FF:ptr16]:word16] = v6
	NZ = cond(v6)
	V = false
	NZVC = __bpt()
	v12 = Mem0[Mem0[r2 + 0x0001:ptr16]:word16] - 0x15F7
	NZVC = cond(v12)
	r2 = r2 - 0x0002
	sp = sp - 0x0002
	v15 = Mem0[sp:word16] - Mem0[r2:word16]
	NZVC = cond(v15)
	r4 = 0x0010
	NZ = cond(r4)
	V = false
	r5 = 0x56C6
	NZ = cond(r5)
	V = false
	// succ:  l2E3A
l2E3A:
	v18 = Mem0[0x5426:ptr16]
	Mem0[v18:word16] = 0x0004
	NZ = cond(v18)
	V = false
	v19 = 0x3D
	Mem0[r5:byte] = v19
	r5 = r5 + 0x0001
	NZ = cond(v19)
	V = false
	v20 = Mem0[0x5426:ptr16]
	Mem0[v20:word16] = 0x0005
	NZ = cond(v20)
	V = false
	r4 = r4 - 0x0001
	NZV = cond(r4)
	branch Test(GT,NZV) l2E3A
	// succ:  l2E4E l2E3A
l2E4E:
	v22 = Mem0[0x5426:ptr16]
	v22 = Mem0[v22:word16]
	v23 = Mem0[0x5426:ptr16]
	Mem0[v23:word16] = v22 + 0x0001
	NZV = cond(v23)
	r5 = 0x5096
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v25 = Mem0[0x5426:ptr16]
	v25 = Mem0[v25:word16]
	v26 = Mem0[0x5426:ptr16]
	Mem0[v26:word16] = v25 + 0x0001
	NZV = cond(v26)
	v27 = Mem0[0x56C4:ptr16]
	v27 = Mem0[v27:word16]
	v28 = v27
	v28 = v28 & v28
	NZ = cond(v28)
	C = false
	V = false
	branch Test(LE,NZV) l2EB8
	// succ:  l2E64 l2EB8
l2E64:
	v30 = Mem0[0x5426:ptr16]
	Mem0[v30:word16] = 0x0009
	NZ = cond(v30)
	V = false
	r5 = 0x50A0
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	v32 = Mem0[0x5426:ptr16]
	v32 = Mem0[v32:word16]
	v33 = Mem0[0x5426:ptr16]
	Mem0[v33:word16] = v32 + 0x0001
	NZV = cond(v33)
	Mem0[0x56D8:word16] = 0x0001
	NZ = cond(v34)
	V = false
	// succ:  l2E7C
l2E7C:
	v35 = Mem0[0x5426:ptr16]
	Mem0[v35:word16] = 0x000B
	NZ = cond(v35)
	V = false
	r1 = Mem0[0x56D6:word16]
	NZ = cond(r1)
	V = false
	r1 = r1 - 0x0001
	NZV = cond(r1)
	r1 = r1 *s 0x0005
	NZC = cond(r1)
	V = false
	r1 = r1 + 0x0001
	NZV = cond(r1)
	Mem0[0x56DA:word16] = r1
	NZ = cond(v38)
	V = false
	r5 = 0x50A4
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v40 = Mem0[0x5426:ptr16]
	Mem0[v40:word16] = 0x000C
	NZ = cond(v40)
	V = false
	Mem0[0x56D8:word16] = Mem0[0x56D6:word16] + 0x0001
	NZV = cond(v42)
	v44 = Mem0[0x56C4:ptr16]
	v44 = Mem0[v44:word16]
	v45 = v44 - Mem0[0x56D6:word16]
	NZVC = cond(v45)
	branch Test(LE,NZV) l2E7C
	// succ:  l2EAC l2E7C
l2EAC:
	v46 = Mem0[0x5426:ptr16]
	v46 = Mem0[v46:word16]
	v47 = Mem0[0x5426:ptr16]
	Mem0[v47:word16] = v46 + 0x0001
	NZV = cond(v47)
	r5 = 0x50AE
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	// succ:  l2EB8
l2EB8:
	v49 = Mem0[0x5426:ptr16]
	Mem0[v49:word16] = 0x000E
	NZ = cond(v49)
	V = false
	v50 = Mem0[0x5426:ptr16]
	v50 = Mem0[v50:word16]
	v51 = Mem0[0x5426:ptr16]
	Mem0[v51:word16] = v50 + 0x0001
	NZV = cond(v51)
	return
	// succ:  fn2E20_exit
fn2E20_exit:


// fn2EC4
// Return size: 0
void fn2EC4()
fn2EC4_entry:
	// succ:  l2EC4
l2EC4:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v6 = Mem0[r2 + 0x15FF:word16] | r2
	Mem0[r2 + 0x15FF:word16] = v6
	NZ = cond(v6)
	V = false
fn2EC4_exit:


// fn3220
// Return size: 2
void fn3220()
fn3220_entry:
	// succ:  l3220
l3220:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	r4 = r4 - 0x0002
	v6 = Mem0[Mem0[r4:ptr16]:word16] | r4
	Mem0[Mem0[r4:ptr16]:word16] = v6
	NZ = cond(v6)
	V = false
	v9 = Mem0[0x5426:ptr16]
	Mem0[v9:word16] = 0x0009
	NZ = cond(v9)
	V = false
	v11 = Mem0[0x58C0:word16]
	v11 = v11 & v11
	NZ = cond(v11)
	C = false
	V = false
	branch Test(NE,Z) l3236
	// succ:  l3232 l3236
l3232:
	goto 0x345E
	goto l345E
	// succ:  l345E
l3236:
	v15 = Mem0[0x5426:ptr16]
	Mem0[v15:word16] = 0x000B
	NZ = cond(v15)
	V = false
	Mem0[0x570E:word16] = 0x0001
	NZ = cond(v16)
	V = false
	// succ:  l3242
l3242:
	v17 = Mem0[0x5426:ptr16]
	Mem0[v17:word16] = 0x000C
	NZ = cond(v17)
	V = false
	Mem0[0x5710:word16] = 0x0001
	NZ = cond(v18)
	V = false
	Mem0[0x5706:word16] = 0x513E
	NZ = cond(v19)
	V = false
	// succ:  l3254
l3254:
	v20 = Mem0[0x5426:ptr16]
	Mem0[v20:word16] = 0x000D
	NZ = cond(v20)
	V = false
	r3 = Mem0[0x570C:word16]
	NZ = cond(r3)
	V = false
	r1 = r3
	NZ = cond(r1)
	V = false
	v24 = Mem0[0x5706:ptr16]
	v24 = Mem0[v24:word16]
	r1 = r1 + v24
	NZVC = cond(r1)
	r1 = r1 << 1
	NZVC = cond(r1)
	v27 = Mem0[r1 + 0x58C2:word16]
	v27 = v27 & v27
	NZ = cond(v27)
	C = false
	V = false
	branch Test(EQ,Z) l3358
	// succ:  l326C l3358
l326C:
	v28 = Mem0[0x5426:ptr16]
	Mem0[v28:word16] = 0x000F
	NZ = cond(v28)
	V = false
	r2 = Mem0[r1 + 0x5926:word16]
	NZ = cond(r2)
	V = false
	Mem0[0x5712:word16] = r2
	NZ = cond(v31)
	V = false
	v32 = Mem0[0x5426:ptr16]
	v32 = Mem0[v32:word16]
	v33 = Mem0[0x5426:ptr16]
	Mem0[v33:word16] = v32 + 0x0001
	NZV = cond(v33)
	Mem0[0x5714:word16] = Mem0[r1 + 0x598A:word16]
	NZ = cond(v36)
	V = false
	v37 = Mem0[0x5426:ptr16]
	v37 = Mem0[v37:word16]
	v38 = Mem0[0x5426:ptr16]
	Mem0[v38:word16] = v37 + 0x0001
	NZV = cond(v38)
	r0 = r2
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x0002
	NZVC = cond(r0)
	r1 = Mem0[0x58BC:word16]
	NZ = cond(r1)
	V = false
	v41 = r0 - r1
	NZVC = cond(v41)
	branch Test(EQ,Z) l32C2
	// succ:  l3296 l32C2
l3296:
	v42 = Mem0[0x5426:ptr16]
	Mem0[v42:word16] = 0x0013
	NZ = cond(v42)
	V = false
	r0 = r2
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x0003
	NZVC = cond(r0)
	v43 = r0 - r1
	NZVC = cond(v43)
	branch Test(EQ,Z) l32C2
	// succ:  l32A6 l32C2
l32A6:
	v44 = Mem0[0x5426:ptr16]
	Mem0[v44:word16] = 0x0015
	NZ = cond(v44)
	V = false
	v45 = 0x0003 - r3
	NZVC = cond(v45)
	branch Test(LE,NZV) l3358
	// succ:  l32B2 l3358
l32B2:
	v46 = Mem0[0x5426:ptr16]
	Mem0[v46:word16] = 0x0017
	NZ = cond(v46)
	V = false
	r0 = r2
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x0004
	NZVC = cond(r0)
	v47 = r0 - r1
	NZVC = cond(v47)
	branch Test(NE,Z) l3358
	// succ:  l32C2 l3358
l32C2:
	v48 = Mem0[0x5426:ptr16]
	Mem0[v48:word16] = 0x0019
	NZ = cond(v48)
	V = false
	r1 = Mem0[0x58BE:word16]
	NZ = cond(r1)
	V = false
	r1 = r1 + 0x0001
	NZV = cond(r1)
	v51 = Mem0[0x5712:word16] - r1
	NZVC = cond(v51)
	branch Test(NE,Z) l3358
	// succ:  l32D4 l3358
l32D4:
	v52 = Mem0[0x5426:ptr16]
	Mem0[v52:word16] = 0x001B
	NZ = cond(v52)
	V = false
	Mem0[0x5716:word16] = r1
	NZ = cond(v53)
	V = false
	r5 = 0x515E
	NZ = cond(r5)
	V = false
	call fn3F42 (retsize: 2; FPU: 2;)
	v56 = Mem0[0x5426:ptr16]
	v56 = Mem0[v56:word16]
	v57 = Mem0[0x5426:ptr16]
	Mem0[v57:word16] = v56 + 0x0001
	NZV = cond(v57)
	Mem0[0x58C2:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v60 = Mem0[0x5426:ptr16]
	v60 = Mem0[v60:word16]
	v61 = Mem0[0x5426:ptr16]
	Mem0[v61:word16] = v60 + 0x0001
	NZV = cond(v61)
	Mem0[0x58C0:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v63 = Mem0[0x5426:ptr16]
	v63 = Mem0[v63:word16]
	v64 = Mem0[0x5426:ptr16]
	Mem0[v64:word16] = v63 + 0x0001
	NZV = cond(v64)
	r1 = Mem0[0x570C:word16]
	NZ = cond(r1)
	V = false
	r0 = r1
	NZ = cond(r0)
	V = false
	v66 = Mem0[0x5706:ptr16]
	v66 = Mem0[v66:word16]
	r0 = r0 + v66
	NZVC = cond(r0)
	r0 = r0 << 1
	NZVC = cond(r0)
	Mem0[r0 + 0x58C2:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v68 = Mem0[0x5426:ptr16]
	v68 = Mem0[v68:word16]
	v69 = Mem0[0x5426:ptr16]
	Mem0[v69:word16] = v68 + 0x0001
	NZV = cond(v69)
	v70 = 0x0003 - r1
	NZVC = cond(v70)
	branch Test(LE,NZV) l331E
	// succ:  l3314 l331E
l3314:
	v71 = Mem0[0x5426:ptr16]
	v71 = Mem0[v71:word16]
	v72 = Mem0[0x5426:ptr16]
	Mem0[v72:word16] = v71 + 0x0001
	NZV = cond(v72)
	v73 = Mem0[pc + 0x2558:word16] + 0x000A
	Mem0[pc + 0x2558:word16] = v73
	NZVC = cond(v73)
	// succ:  l331E
l331E:
	v93 = Mem0[0x5426:ptr16]
	Mem0[v93:word16] = 0x0021
	NZ = cond(v93)
	V = false
	v95 = 0x0003 - Mem0[0x570C:word16]
	NZVC = cond(v95)
	branch Test(NE,Z) l3336
	// succ:  l332C l3336
l332C:
	v96 = Mem0[0x5426:ptr16]
	v96 = Mem0[v96:word16]
	v97 = Mem0[0x5426:ptr16]
	Mem0[v97:word16] = v96 + 0x0001
	NZV = cond(v97)
	v98 = Mem0[pc + 0x2540:word16] + 0x0014
	Mem0[pc + 0x2540:word16] = v98
	NZVC = cond(v98)
	// succ:  l3336
l3336:
	v100 = Mem0[0x5426:ptr16]
	Mem0[v100:word16] = 0x0023
	NZ = cond(v100)
	V = false
	v102 = 0x0003 - Mem0[0x570C:word16]
	NZVC = cond(v102)
	branch Test(GE,NV) l334E
	// succ:  l3344 l334E
l3344:
	v104 = Mem0[0x5426:ptr16]
	v104 = Mem0[v104:word16]
	v105 = Mem0[0x5426:ptr16]
	Mem0[v105:word16] = v104 + 0x0001
	NZV = cond(v105)
	v106 = Mem0[pc + 0x2528:word16] + 0x001E
	Mem0[pc + 0x2528:word16] = v106
	NZVC = cond(v106)
	// succ:  l334E
l334E:
	v107 = Mem0[0x5426:ptr16]
	Mem0[v107:word16] = 0x0025
	NZ = cond(v107)
	V = false
	goto l345E
	// succ:  l345E
l3358:
	v109 = Mem0[0x5426:ptr16]
	Mem0[v109:word16] = 0x0026
	NZ = cond(v109)
	V = false
	v110 = Mem0[pc + 0x23A2:word16] + 0x0002
	Mem0[pc + 0x23A2:word16] = v110
	NZVC = cond(v110)
	Mem0[0x5710:word16] = Mem0[0x570E:word16] + 0x0001
	NZV = cond(v112)
	v114 = 0x000A - Mem0[0x570E:word16]
	NZVC = cond(v114)
	branch Test(GT,NZV) l3374
	// succ:  l3370 l3374
l3370:
	goto 0x3254
	goto l3254
	// succ:  l3254
l3374:
	Mem0[0x570E:word16] = Mem0[0x570C:word16] + 0x0001
	NZV = cond(v117)
	v119 = 0x0005 - Mem0[0x570C:word16]
	NZVC = cond(v119)
	branch Test(GT,NZV) l3384
	// succ:  l3380 l3384
l3380:
	goto 0x3242
	goto l3242
	// succ:  l3242
l3384:
	v121 = Mem0[0x5426:ptr16]
	v121 = Mem0[v121:word16]
	v122 = Mem0[0x5426:ptr16]
	Mem0[v122:word16] = v121 + 0x0001
	NZV = cond(v122)
	v124 = Mem0[0x58C0:word16]
	v124 = v124 & v124
	NZ = cond(v124)
	C = false
	V = false
	branch Test(EQ,Z) l345E
	// succ:  l338E l345E
l338E:
	v125 = Mem0[0x5426:ptr16]
	Mem0[v125:word16] = 0x0029
	NZ = cond(v125)
	V = false
	Mem0[0x5710:word16] = 0x0001
	NZ = cond(v126)
	V = false
	Mem0[0x5708:word16] = 0x5A18
	NZ = cond(v127)
	V = false
	Mem0[0x570A:word16] = 0x59F0
	NZ = cond(v128)
	V = false
	Mem0[0x570C:word16] = 0x5A04
	NZ = cond(v129)
	V = false
	// succ:  l33AC
l33AC:
	v130 = Mem0[0x5426:ptr16]
	Mem0[v130:word16] = 0x002A
	NZ = cond(v130)
	V = false
	v131 = Mem0[0x5708:ptr16]
	v131 = Mem0[v131:word16]
	v132 = v131
	v132 = v132 & v132
	NZ = cond(v132)
	C = false
	V = false
	branch Test(EQ,Z) l343A
	// succ:  l33B8 l343A
l33B8:
	v133 = Mem0[0x5426:ptr16]
	Mem0[v133:word16] = 0x002C
	NZ = cond(v133)
	V = false
	v134 = Mem0[0x570C:ptr16]
	v134 = Mem0[v134:word16]
	Mem0[0x5712:word16] = v134
	NZ = cond(v135)
	V = false
	v136 = Mem0[0x5426:ptr16]
	v136 = Mem0[v136:word16]
	v137 = Mem0[0x5426:ptr16]
	Mem0[v137:word16] = v136 + 0x0001
	NZV = cond(v137)
	v138 = Mem0[0x570E:ptr16]
	v138 = Mem0[v138:word16]
	Mem0[0x5714:word16] = v138
	NZ = cond(v139)
	V = false
	v140 = Mem0[0x5426:ptr16]
	v140 = Mem0[v140:word16]
	v141 = Mem0[0x5426:ptr16]
	Mem0[v141:word16] = v140 + 0x0001
	NZV = cond(v141)
	v144 = Mem0[0x570E:word16] - Mem0[0x58BC:word16]
	NZVC = cond(v144)
	branch Test(NE,Z) l343A
	// succ:  l33DA l343A
l33DA:
	v145 = Mem0[0x5426:ptr16]
	Mem0[v145:word16] = 0x0030
	NZ = cond(v145)
	V = false
	v148 = Mem0[0x5710:word16] - Mem0[0x58BE:word16]
	NZVC = cond(v148)
	branch Test(NE,Z) l343A
	// succ:  l33E8 l343A
l33E8:
	v149 = Mem0[0x5426:ptr16]
	Mem0[v149:word16] = 0x0032
	NZ = cond(v149)
	V = false
	r5 = 0x5164
	NZ = cond(r5)
	V = false
	call fn3F42 (retsize: 2; FPU: 2;)
	v151 = Mem0[0x5426:ptr16]
	v151 = Mem0[v151:word16]
	v152 = Mem0[0x5426:ptr16]
	Mem0[v152:word16] = v151 + 0x0001
	NZV = cond(v152)
	Mem0[0x5718:word16] = Mem0[0x58BE:word16]
	NZ = cond(v154)
	V = false
	Mem0[0x5718:word16] = Mem0[0x5716:word16] + 0x0001
	NZV = cond(v156)
	r5 = 0x516A
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v158 = Mem0[0x5426:ptr16]
	v158 = Mem0[v158:word16]
	v159 = Mem0[0x5426:ptr16]
	Mem0[v159:word16] = v158 + 0x0001
	NZV = cond(v159)
	v160 = Mem0[0x570A:ptr16]
	Mem0[v160:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v161 = Mem0[0x5426:ptr16]
	v161 = Mem0[v161:word16]
	v162 = Mem0[0x5426:ptr16]
	Mem0[v162:word16] = v161 + 0x0001
	NZV = cond(v162)
	v163 = Mem0[0x570C:ptr16]
	Mem0[v163:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v164 = Mem0[0x5426:ptr16]
	v164 = Mem0[v164:word16]
	v165 = Mem0[0x5426:ptr16]
	Mem0[v165:word16] = v164 + 0x0001
	NZV = cond(v165)
	v166 = Mem0[0x5708:ptr16]
	Mem0[v166:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v167 = Mem0[0x5426:ptr16]
	v167 = Mem0[v167:word16]
	v168 = Mem0[0x5426:ptr16]
	Mem0[v168:word16] = v167 + 0x0001
	NZV = cond(v168)
	Mem0[0x58C0:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v170 = Mem0[0x5426:ptr16]
	v170 = Mem0[v170:word16]
	v171 = Mem0[0x5426:ptr16]
	Mem0[v171:word16] = v170 + 0x0001
	NZV = cond(v171)
	Mem0[0x58C2:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v173 = Mem0[0x5426:ptr16]
	v173 = Mem0[v173:word16]
	v174 = Mem0[0x5426:ptr16]
	Mem0[v174:word16] = v173 + 0x0001
	NZV = cond(v174)
	goto l345E
	// succ:  l345E
l343A:
	v175 = Mem0[0x5426:ptr16]
	Mem0[v175:word16] = 0x003A
	NZ = cond(v175)
	V = false
	v176 = Mem0[pc + 0x22C2:word16] + 0x0002
	Mem0[pc + 0x22C2:word16] = v176
	NZVC = cond(v176)
	v177 = Mem0[pc + 0x22BE:word16] + 0x0002
	Mem0[pc + 0x22BE:word16] = v177
	NZVC = cond(v177)
	v178 = Mem0[pc + 0x22BA:word16] + 0x0002
	Mem0[pc + 0x22BA:word16] = v178
	NZVC = cond(v178)
	Mem0[0x5710:word16] = Mem0[0x570E:word16] + 0x0001
	NZV = cond(v180)
	v182 = 0x000A - Mem0[0x570E:word16]
	NZVC = cond(v182)
	branch Test(LE,NZV) l33AC
	// succ:  l345E l33AC
l345E:
	v74 = Mem0[0x5426:ptr16]
	Mem0[v74:word16] = 0x003B
	NZ = cond(v74)
	V = false
	v75 = Mem0[0x5700:ptr16]
	v75 = Mem0[v75:word16]
	v77 = Mem0[0x5872:word16] - v75
	NZVC = cond(v77)
	branch Test(EQ,Z) l34A4
	// succ:  l346C l34A4
l346C:
	v78 = Mem0[0x5426:ptr16]
	Mem0[v78:word16] = 0x003D
	NZ = cond(v78)
	V = false
	v80 = Mem0[0x56FE:ptr16]
	Mem0[v80:word16] = Mem0[0x5874:word16]
	NZ = cond(v80)
	V = false
	v81 = Mem0[0x5426:ptr16]
	v81 = Mem0[v81:word16]
	v82 = Mem0[0x5426:ptr16]
	Mem0[v82:word16] = v81 + 0x0001
	NZV = cond(v82)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5158
	NZ = cond(v83)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5136
	NZ = cond(v84)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5700
	NZ = cond(v85)
	V = false
	call fn0FA4 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5876
	NZ = cond(v87)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v90 = Mem0[0x5426:ptr16]
	v90 = Mem0[v90:word16]
	v91 = Mem0[0x5426:ptr16]
	Mem0[v91:word16] = v90 + 0x0001
	NZV = cond(v91)
	r5 = 0x5174
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	// succ:  l34A4
l34A4:
	v99 = Mem0[0x5426:ptr16]
	Mem0[v99:word16] = 0x0040
	NZ = cond(v99)
	V = false
	return
	// succ:  fn3220_exit
fn3220_exit:


// fn34AC
// Return size: 0
void fn34AC()
fn34AC_entry:
	// succ:  l34AC
l34AC:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v6 = Mem0[Mem0[sp + 0x15FF:ptr16]:word16] | r5
	Mem0[Mem0[sp + 0x15FF:ptr16]:word16] = v6
	NZ = cond(v6)
	V = false
fn34AC_exit:


// fn395C
// Return size: 2
void fn395C()
fn395C_entry:
	// succ:  l395C
l395C:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v6 = Mem0[Mem0[r4:word16]:ptr16] | pc
	Mem0[r4:word16] = v6
	r4 = r4 + 0x0002
	NZ = cond(v6)
	V = false
	v9 = Mem0[0x5426:ptr16]
	Mem0[v9:word16] = 0x0006
	NZ = cond(v9)
	V = false
	Mem0[0x575E:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	v14 = Mem0[0x5426:ptr16]
	v14 = Mem0[v14:word16]
	v15 = Mem0[0x5426:ptr16]
	Mem0[v15:word16] = v14 + 0x0001
	NZV = cond(v15)
	Mem0[0x5760:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l3974
l3974:
	v18 = Mem0[0x5426:ptr16]
	Mem0[v18:word16] = 0x0008
	NZ = cond(v18)
	V = false
	Mem0[0x5764:word16] = Mem0[0x575E:word16]
	NZ = cond(v20)
	V = false
	Mem0[0x5764:word16] = Mem0[0x5762:word16] + 0x0001
	NZV = cond(v22)
	Mem0[0x5766:word16] = Mem0[0x58B8:word16]
	NZ = cond(v24)
	V = false
	v26 = Mem0[pc + 0x1DD6:word16] + Mem0[0x575E:word16]
	Mem0[pc + 0x1DD6:word16] = v26
	NZVC = cond(v26)
	r5 = 0x520A
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v30 = Mem0[0x5426:ptr16]
	v30 = Mem0[v30:word16]
	v31 = Mem0[0x5426:ptr16]
	Mem0[v31:word16] = v30 + 0x0001
	NZV = cond(v31)
	Mem0[0x5768:word16] = Mem0[0x575E:word16]
	NZ = cond(v33)
	V = false
	Mem0[0x5768:word16] = Mem0[0x5766:word16] + 0x0001
	NZV = cond(v35)
	r5 = 0x5214
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v37 = Mem0[0x5426:ptr16]
	v37 = Mem0[v37:word16]
	v38 = Mem0[0x5426:ptr16]
	Mem0[v38:word16] = v37 + 0x0001
	NZV = cond(v38)
	Mem0[0x576A:word16] = Mem0[0x575E:word16]
	NZ = cond(v40)
	V = false
	Mem0[0x576A:word16] = Mem0[0x5768:word16] + 0x0001
	NZV = cond(v42)
	Mem0[0x576C:word16] = Mem0[0x58B8:word16]
	NZ = cond(v44)
	V = false
	v46 = Mem0[pc + 0x1DA4:word16] - Mem0[0x575E:word16]
	Mem0[pc + 0x1DA4:word16] = v46
	NZVC = cond(v46)
	r5 = 0x521E
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v48 = Mem0[0x5426:ptr16]
	v48 = Mem0[v48:word16]
	v49 = Mem0[0x5426:ptr16]
	Mem0[v49:word16] = v48 + 0x0001
	NZV = cond(v49)
	Mem0[0x576E:word16] = Mem0[0x58B8:word16]
	NZ = cond(v51)
	V = false
	v53 = Mem0[pc + 0x1D8E:word16] - Mem0[0x575E:word16]
	Mem0[pc + 0x1D8E:word16] = v53
	NZVC = cond(v53)
	r5 = 0x5228
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v55 = Mem0[0x5426:ptr16]
	v55 = Mem0[v55:word16]
	v56 = Mem0[0x5426:ptr16]
	Mem0[v56:word16] = v55 + 0x0001
	NZV = cond(v56)
	Mem0[0x5770:word16] = Mem0[0x58B8:word16]
	NZ = cond(v58)
	V = false
	v60 = Mem0[pc + 0x1D78:word16] + Mem0[0x575E:word16]
	Mem0[pc + 0x1D78:word16] = v60
	NZVC = cond(v60)
	r5 = 0x5232
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v62 = Mem0[0x5426:ptr16]
	v62 = Mem0[v62:word16]
	v63 = Mem0[0x5426:ptr16]
	Mem0[v63:word16] = v62 + 0x0001
	NZV = cond(v63)
	v65 = 0x0005 - Mem0[0x575E:word16]
	NZVC = cond(v65)
	branch Test(EQ,Z) l3AC2
	// succ:  l3A0C l3AC2
l3A0C:
	v66 = Mem0[0x5426:ptr16]
	Mem0[v66:word16] = 0x000F
	NZ = cond(v66)
	V = false
	Mem0[0x5782:word16] = Mem0[0x575E:word16]
	NZ = cond(v68)
	V = false
	v69 = Mem0[pc + 0x1D64:word16] + 0x0002
	Mem0[pc + 0x1D64:word16] = v69
	NZVC = cond(v69)
	Mem0[0x5772:word16] = Mem0[0x5780:word16]
	NZ = cond(v71)
	V = false
	r0 = Mem0[0x58B8:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 + Mem0[0x575E:word16]
	NZVC = cond(r0)
	r0 = r0 + 0x0001
	NZV = cond(r0)
	Mem0[0x5774:word16] = r0
	NZ = cond(v75)
	V = false
	r5 = 0x523C
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v77 = Mem0[0x5426:ptr16]
	v77 = Mem0[v77:word16]
	v78 = Mem0[0x5426:ptr16]
	Mem0[v78:word16] = v77 + 0x0001
	NZV = cond(v78)
	Mem0[0x5776:word16] = Mem0[0x5780:word16]
	NZ = cond(v80)
	V = false
	r5 = 0x5246
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v82 = Mem0[0x5426:ptr16]
	v82 = Mem0[v82:word16]
	v83 = Mem0[0x5426:ptr16]
	Mem0[v83:word16] = v82 + 0x0001
	NZV = cond(v83)
	r0 = Mem0[0x575E:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x0001
	NZV = cond(r0)
	r0 = r0 + 0x0001
	NZV = cond(r0)
	Mem0[0x5778:word16] = r0
	NZ = cond(v85)
	V = false
	r0 = Mem0[0x58B8:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 - 0x0001
	NZV = cond(r0)
	r0 = r0 - Mem0[0x575E:word16]
	NZVC = cond(r0)
	Mem0[0x577A:word16] = r0
	NZ = cond(v88)
	V = false
	r5 = 0x5250
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v90 = Mem0[0x5426:ptr16]
	v90 = Mem0[v90:word16]
	v91 = Mem0[0x5426:ptr16]
	Mem0[v91:word16] = v90 + 0x0001
	NZV = cond(v91)
	r0 = Mem0[0x58B8:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 - Mem0[0x575E:word16]
	NZVC = cond(r0)
	r0 = r0 - 0x0001
	NZV = cond(r0)
	Mem0[0x577C:word16] = r0
	NZ = cond(v94)
	V = false
	r5 = 0x525A
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v96 = Mem0[0x5426:ptr16]
	v96 = Mem0[v96:word16]
	v97 = Mem0[0x5426:ptr16]
	Mem0[v97:word16] = v96 + 0x0001
	NZV = cond(v97)
	r0 = Mem0[0x58B8:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 + Mem0[0x575E:word16]
	NZVC = cond(r0)
	r0 = r0 + 0x0001
	NZV = cond(r0)
	Mem0[0x577E:word16] = r0
	NZ = cond(v100)
	V = false
	r5 = 0x5264
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v102 = Mem0[0x5426:ptr16]
	v102 = Mem0[v102:word16]
	v103 = Mem0[0x5426:ptr16]
	Mem0[v103:word16] = v102 + 0x0001
	NZV = cond(v103)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5208
	NZ = cond(v104)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x51F8
	NZ = cond(v105)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x575E
	NZ = cond(v107)
	V = false
	call fn0AC4 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l3AC2
l3AC2:
	v110 = Mem0[0x5426:ptr16]
	Mem0[v110:word16] = 0x0015
	NZ = cond(v110)
	V = false
	Mem0[0x5760:word16] = Mem0[0x575E:word16] + 0x0001
	NZV = cond(v112)
	v114 = 0x0005 - Mem0[0x575E:word16]
	NZVC = cond(v114)
	branch Test(GT,NZV) l3AD8
	// succ:  l3AD4 l3AD8
l3AD4:
	goto 0x3974
	goto l3974
	// succ:  l3974
l3AD8:
	v116 = Mem0[0x5426:ptr16]
	v116 = Mem0[v116:word16]
	v117 = Mem0[0x5426:ptr16]
	Mem0[v117:word16] = v116 + 0x0001
	NZV = cond(v117)
	Mem0[0x5760:word16] = 0x0001
	NZ = cond(v118)
	V = false
	// succ:  l3AE2
l3AE2:
	v119 = Mem0[0x5426:ptr16]
	Mem0[v119:word16] = 0x0017
	NZ = cond(v119)
	V = false
	Mem0[0x5762:word16] = 0x0001
	NZ = cond(v120)
	V = false
	r4 = 0x0004
	NZ = cond(r4)
	V = false
	r5 = 0x51FE
	NZ = cond(r5)
	V = false
	// succ:  l3AF6
l3AF6:
	v121 = Mem0[0x5426:ptr16]
	Mem0[v121:word16] = 0x0018
	NZ = cond(v121)
	V = false
	r1 = Mem0[0x575E:word16]
	NZ = cond(r1)
	V = false
	r0 = r1
	NZ = cond(r0)
	V = false
	v124 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	r0 = r0 + v124
	NZVC = cond(r0)
	r0 = r0 << 1
	NZVC = cond(r0)
	Mem0[r0 + 0x5A66:word16] = 0xFFFF
	NZ = cond(v125)
	V = false
	v126 = Mem0[0x5426:ptr16]
	Mem0[v126:word16] = 0x0019
	NZ = cond(v126)
	V = false
	r4 = r4 - 0x0001
	NZV = cond(r4)
	branch Test(GT,NZV) l3AF6
	// succ:  l3B16 l3AF6
l3B16:
	r1 = r1 + 0x0001
	NZV = cond(r1)
	Mem0[0x5760:word16] = r1
	NZ = cond(v127)
	V = false
	v128 = 0x0005 - r1
	NZVC = cond(v128)
	branch Test(LE,NZV) l3AE2
	// succ:  l3B22 l3AE2
l3B22:
	v129 = Mem0[0x5426:ptr16]
	v129 = Mem0[v129:word16]
	v130 = Mem0[0x5426:ptr16]
	Mem0[v130:word16] = v129 + 0x0001
	NZV = cond(v130)
	Mem0[0x58BA:word16] = 0x0004
	NZ = cond(v131)
	V = false
	v132 = Mem0[0x5426:ptr16]
	v132 = Mem0[v132:word16]
	v133 = Mem0[0x5426:ptr16]
	Mem0[v133:word16] = v132 + 0x0001
	NZV = cond(v133)
	Mem0[0x58BC:word16] = 0xFFFF
	NZ = cond(v134)
	V = false
	v135 = Mem0[0x5426:ptr16]
	v135 = Mem0[v135:word16]
	v136 = Mem0[0x5426:ptr16]
	Mem0[v136:word16] = v135 + 0x0001
	NZV = cond(v136)
	return
	// succ:  fn395C_exit
fn395C_exit:


// fn3B3C
// Return size: 2
void fn3B3C()
fn3B3C_entry:
	// succ:  l3B3C
l3B3C:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	v7 = Mem0[Mem0[sp:ptr16]:word16] | Mem0[r1:word16]
	Mem0[Mem0[sp:ptr16]:word16] = v7
	NZ = cond(v7)
	V = false
	v10 = Mem0[0x5426:ptr16]
	Mem0[v10:word16] = 0x0007
	NZ = cond(v10)
	V = false
	v12 = 0x0001 - Mem0[0x5788:word16]
	NZVC = cond(v12)
	branch Test(EQ,Z) l3C36
	// succ:  l3B50 l3C36
l3B50:
	v15 = Mem0[0x5426:ptr16]
	Mem0[v15:word16] = 0x0009
	NZ = cond(v15)
	V = false
	r5 = 0x529C
	NZ = cond(r5)
	V = false
	call fn0F48 (retsize: 2; FPU: 2;)
	Mem0[0x578C:word16] = r0
	NZ = cond(v19)
	V = false
	Mem0[0x578E:word16] = r1
	NZ = cond(v20)
	V = false
	v21 = Mem0[0x5426:ptr16]
	v21 = Mem0[v21:word16]
	v22 = Mem0[0x5426:ptr16]
	Mem0[v22:word16] = v21 + 0x0001
	NZV = cond(v22)
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x578C:word16]
	NZ = cond(v25)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x578A:word16]
	NZ = cond(v27)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x70A4
	NZ = cond(v28)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x407D
	NZ = cond(v29)
	V = false
	call fn0E0E (retsize: 2; FPU: 2;)
	branch Test(LT,NV) l3C36
	// succ:  l3B80 l3C36
l3B80:
	v32 = Mem0[0x5426:ptr16]
	Mem0[v32:word16] = 0x000C
	NZ = cond(v32)
	V = false
	Mem0[0x578A:word16] = 0x0001
	NZ = cond(v33)
	V = false
	v34 = Mem0[0x5426:ptr16]
	v34 = Mem0[v34:word16]
	v35 = Mem0[0x5426:ptr16]
	Mem0[v35:word16] = v34 + 0x0001
	NZV = cond(v35)
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x578C:word16]
	NZ = cond(v37)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x578A:word16]
	NZ = cond(v39)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0xB852
	NZ = cond(v40)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x407E
	NZ = cond(v41)
	V = false
	call fn0E0E (retsize: 2; FPU: 2;)
	branch Test(LT,NV) l3BC2
	// succ:  l3BA6 l3BC2
l3BA6:
	v43 = Mem0[0x5426:ptr16]
	Mem0[v43:word16] = 0x000F
	NZ = cond(v43)
	V = false
	Mem0[0x5790:word16] = 0x004C
	NZ = cond(v44)
	V = false
	v45 = Mem0[0x5426:ptr16]
	v45 = Mem0[v45:word16]
	v46 = Mem0[0x5426:ptr16]
	Mem0[v46:word16] = v45 + 0x0001
	NZV = cond(v46)
	Mem0[0x5792:word16] = 0xFFFF
	NZ = cond(v47)
	V = false
	v48 = Mem0[0x5426:ptr16]
	v48 = Mem0[v48:word16]
	v49 = Mem0[0x5426:ptr16]
	Mem0[v49:word16] = v48 + 0x0001
	NZV = cond(v49)
	goto l3BD8
	// succ:  l3BD8
l3BC2:
	v55 = Mem0[0x5426:ptr16]
	Mem0[v55:word16] = 0x0012
	NZ = cond(v55)
	V = false
	Mem0[0x5790:word16] = 0x0004
	NZ = cond(v56)
	V = false
	v57 = Mem0[0x5426:ptr16]
	v57 = Mem0[v57:word16]
	v58 = Mem0[0x5426:ptr16]
	Mem0[v58:word16] = v57 + 0x0001
	NZV = cond(v58)
	Mem0[0x5792:word16] = 0x0001
	NZ = cond(v59)
	V = false
	// succ:  l3BD8
l3BD8:
	v60 = Mem0[0x5426:ptr16]
	Mem0[v60:word16] = 0x0014
	NZ = cond(v60)
	V = false
	r5 = 0x529C
	NZ = cond(r5)
	V = false
	call fn0F48 (retsize: 2; FPU: 2;)
	Mem0[0x5794:word16] = r0
	NZ = cond(v62)
	V = false
	Mem0[0x5796:word16] = r1
	NZ = cond(v63)
	V = false
	v64 = Mem0[0x5426:ptr16]
	v64 = Mem0[v64:word16]
	v65 = Mem0[0x5426:ptr16]
	Mem0[v65:word16] = v64 + 0x0001
	NZV = cond(v65)
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x5794:word16]
	NZ = cond(v67)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x5792:word16]
	NZ = cond(v69)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4180
	NZ = cond(v72)
	V = false
	call fn0670 (retsize: 2; FPU: 2;)
	v74 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[0x5794:word16] = v74
	NZ = cond(v75)
	V = false
	v76 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[0x5796:word16] = v76
	NZ = cond(v77)
	V = false
	v78 = Mem0[0x5426:ptr16]
	v78 = Mem0[v78:word16]
	v79 = Mem0[0x5426:ptr16]
	Mem0[v79:word16] = v78 + 0x0001
	NZV = cond(v79)
	r5 = 0x52A2
	NZ = cond(r5)
	V = false
	call fn0AAE (retsize: 2; FPU: 2;)
	r0 = r0 + 0x0013
	NZVC = cond(r0)
	Mem0[0x5798:word16] = r0
	NZ = cond(v81)
	V = false
	v82 = Mem0[0x5426:ptr16]
	v82 = Mem0[v82:word16]
	v83 = Mem0[0x5426:ptr16]
	Mem0[v83:word16] = v82 + 0x0001
	NZV = cond(v83)
	v85 = 0x0017 - Mem0[0x5796:word16]
	NZVC = cond(v85)
	branch Test(LT,NV) l3C36
	// succ:  l3C2C l3C36
l3C2C:
	v86 = Mem0[0x5426:ptr16]
	v86 = Mem0[v86:word16]
	v87 = Mem0[0x5426:ptr16]
	Mem0[v87:word16] = v86 + 0x0001
	NZV = cond(v87)
	Mem0[0x5798:word16] = 0x0016
	NZ = cond(v88)
	V = false
	// succ:  l3C36
l3C36:
	v50 = Mem0[0x5426:ptr16]
	Mem0[v50:word16] = 0x0019
	NZ = cond(v50)
	V = false
	v52 = Mem0[0x5788:word16]
	v52 = v52 & v52
	NZ = cond(v52)
	C = false
	V = false
	branch Test(NE,Z) l3C46
	// succ:  l3C42 l3C46
l3C42:
	goto 0x3E0A
	goto l3E0A
	// succ:  l3E0A
l3C46:
	v90 = Mem0[0x5426:ptr16]
	Mem0[v90:word16] = 0x001B
	NZ = cond(v90)
	V = false
	v92 = Mem0[pc + 0x1B3E:word16] + Mem0[0x5790:word16]
	Mem0[pc + 0x1B3E:word16] = v92
	NZVC = cond(v92)
	v93 = Mem0[0x5426:ptr16]
	v93 = Mem0[v93:word16]
	v94 = Mem0[0x5426:ptr16]
	Mem0[v94:word16] = v93 + 0x0001
	NZV = cond(v94)
	r0 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v96 = 0x0004 - Mem0[0x578E:word16]
	NZVC = cond(v96)
	branch Test(GE,NV) l3C62
	// succ:  l3C60 l3C62
l3C60:
	r0 = r0 - 0x0001
	NZV = cond(r0)
	// succ:  l3C62
l3C62:
	r1 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v98 = 0x004C - Mem0[0x578E:word16]
	NZVC = cond(v98)
	branch Test(LE,NZV) l3C6E
	// succ:  l3C6C l3C6E
l3C6C:
	r1 = r1 - 0x0001
	NZV = cond(r1)
	// succ:  l3C6E
l3C6E:
	r0 = r0 | r1
	NZ = cond(r0)
	V = false
	branch Test(EQ,Z) l3C76
	// succ:  l3C72 l3C76
l3C72:
	goto 0x3DEA
	goto l3DEA
	// succ:  l3DEA
l3C76:
	v100 = Mem0[0x5426:ptr16]
	Mem0[v100:word16] = 0x001E
	NZ = cond(v100)
	V = false
	Mem0[0x579E:word16] = Mem0[0x578E:word16]
	NZ = cond(v102)
	V = false
	Mem0[0x579E:word16] = Mem0[0x579C:word16] - 0x0001
	NZV = cond(v104)
	r5 = 0x52A6
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v106 = Mem0[0x5426:ptr16]
	v106 = Mem0[v106:word16]
	v107 = Mem0[0x5426:ptr16]
	Mem0[v107:word16] = v106 + 0x0001
	NZV = cond(v107)
	v109 = Mem0[0x58C0:word16]
	v109 = v109 & v109
	NZ = cond(v109)
	C = false
	V = false
	branch Test(NE,Z) l3C9C
	// succ:  l3C98 l3C9C
l3C98:
	goto 0x3E0A
	goto l3E0A
	// succ:  l3E0A
l3C9C:
	v120 = Mem0[0x5426:ptr16]
	Mem0[v120:word16] = 0x0021
	NZ = cond(v120)
	V = false
	r1 = Mem0[0x58BC:word16]
	NZ = cond(r1)
	V = false
	v123 = Mem0[0x578E:word16] - r1
	NZVC = cond(v123)
	branch Test(EQ,Z) l3CD8
	// succ:  l3CAC l3CD8
l3CAC:
	v124 = Mem0[0x5426:ptr16]
	Mem0[v124:word16] = 0x0023
	NZ = cond(v124)
	V = false
	r0 = Mem0[0x578E:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x0001
	NZV = cond(r0)
	v126 = r0 - r1
	NZVC = cond(v126)
	branch Test(EQ,Z) l3CD8
	// succ:  l3CBC l3CD8
l3CBC:
	v127 = Mem0[0x5426:ptr16]
	Mem0[v127:word16] = 0x0025
	NZ = cond(v127)
	V = false
	r0 = Mem0[0x578E:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x0002
	NZVC = cond(r0)
	v129 = r0 - r1
	NZVC = cond(v129)
	branch Test(EQ,Z) l3CD8
	// succ:  l3CCE l3CD8
l3CCE:
	v130 = Mem0[0x5426:ptr16]
	Mem0[v130:word16] = 0x0027
	NZ = cond(v130)
	V = false
	goto l3E0A
	// succ:  l3E0A
l3CD8:
	v132 = Mem0[0x5426:ptr16]
	Mem0[v132:word16] = 0x0028
	NZ = cond(v132)
	V = false
	r0 = Mem0[0x58BE:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 + 0x0001
	NZV = cond(r0)
	v135 = Mem0[0x5796:word16] - r0
	NZVC = cond(v135)
	branch Test(EQ,Z) l3CEE
	// succ:  l3CEA l3CEE
l3CEA:
	goto 0x3E0A
	goto l3E0A
	// succ:  l3E0A
l3CEE:
	v137 = Mem0[0x5426:ptr16]
	Mem0[v137:word16] = 0x002A
	NZ = cond(v137)
	V = false
	Mem0[0x57A0:word16] = Mem0[0x578E:word16]
	NZ = cond(v139)
	V = false
	Mem0[0x57A0:word16] = Mem0[0x579E:word16] - 0x0001
	NZV = cond(v141)
	r5 = 0x52B0
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v143 = Mem0[0x5426:ptr16]
	v143 = Mem0[v143:word16]
	v144 = Mem0[0x5426:ptr16]
	Mem0[v144:word16] = v143 + 0x0001
	NZV = cond(v144)
	Mem0[0x57A2:word16] = Mem0[0x578E:word16]
	NZ = cond(v146)
	V = false
	Mem0[0x57A2:word16] = Mem0[0x57A0:word16] + 0x0001
	NZV = cond(v148)
	r5 = 0x52BA
	NZ = cond(r5)
	V = false
	call fn3F42 (retsize: 2; FPU: 2;)
	v150 = Mem0[0x5426:ptr16]
	v150 = Mem0[v150:word16]
	v151 = Mem0[0x5426:ptr16]
	Mem0[v151:word16] = v150 + 0x0001
	NZV = cond(v151)
	Mem0[0x58C0:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v153 = Mem0[0x5426:ptr16]
	v153 = Mem0[v153:word16]
	v154 = Mem0[0x5426:ptr16]
	Mem0[v154:word16] = v153 + 0x0001
	NZV = cond(v154)
	Mem0[0x58BE:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v156 = Mem0[0x5426:ptr16]
	v156 = Mem0[v156:word16]
	v157 = Mem0[0x5426:ptr16]
	Mem0[v157:word16] = v156 + 0x0001
	NZV = cond(v157)
	Mem0[0x58C2:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v159 = Mem0[0x5426:ptr16]
	v159 = Mem0[v159:word16]
	v160 = Mem0[0x5426:ptr16]
	Mem0[v160:word16] = v159 + 0x0001
	NZV = cond(v160)
	r5 = 0x529C
	NZ = cond(r5)
	V = false
	call fn0F48 (retsize: 2; FPU: 2;)
	Mem0[0x5794:word16] = r0
	NZ = cond(v162)
	V = false
	Mem0[0x5796:word16] = r1
	NZ = cond(v163)
	V = false
	v164 = Mem0[0x5426:ptr16]
	v164 = Mem0[v164:word16]
	v165 = Mem0[0x5426:ptr16]
	Mem0[v165:word16] = v164 + 0x0001
	NZV = cond(v165)
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x5794:word16]
	NZ = cond(v167)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x5792:word16]
	NZ = cond(v169)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x4220
	NZ = cond(v171)
	V = false
	call fn0670 (retsize: 2; FPU: 2;)
	v173 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[0x57A4:word16] = v173
	NZ = cond(v174)
	V = false
	v175 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[0x57A6:word16] = v175
	NZ = cond(v176)
	V = false
	r5 = 0x52C0
	NZ = cond(r5)
	V = false
	call fn0AAE (retsize: 2; FPU: 2;)
	r1 = r0
	NZ = cond(r1)
	V = false
	r1 = r1 *s 0x0019
	NZC = cond(r1)
	V = false
	r1 = r1 + 0x0032
	NZVC = cond(r1)
	Mem0[0x579A:word16] = r1
	NZ = cond(v179)
	V = false
	v180 = Mem0[0x5426:ptr16]
	v180 = Mem0[v180:word16]
	v181 = Mem0[0x5426:ptr16]
	Mem0[v181:word16] = v180 + 0x0001
	NZV = cond(v181)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5292
	NZ = cond(v182)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x528E
	NZ = cond(v183)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5784
	NZ = cond(v184)
	V = false
	call fn0FA4 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x579A
	NZ = cond(v186)
	V = false
	call fn0AE2 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v189 = Mem0[0x5426:ptr16]
	v189 = Mem0[v189:word16]
	v190 = Mem0[0x5426:ptr16]
	Mem0[v190:word16] = v189 + 0x0001
	NZV = cond(v190)
	Mem0[0x579C:word16] = 0x0001
	NZ = cond(v191)
	V = false
	Mem0[0x57AA:word16] = 0x000A
	NZ = cond(v192)
	V = false
	// succ:  l3DAC
l3DAC:
	v193 = Mem0[0x5426:ptr16]
	Mem0[v193:word16] = 0x0033
	NZ = cond(v193)
	V = false
	r5 = 0x52C4
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v195 = Mem0[0x5426:ptr16]
	v195 = Mem0[v195:word16]
	v196 = Mem0[0x5426:ptr16]
	Mem0[v196:word16] = v195 + 0x0001
	NZV = cond(v196)
	r5 = 0x52CE
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v198 = Mem0[0x5426:ptr16]
	Mem0[v198:word16] = 0x0035
	NZ = cond(v198)
	V = false
	Mem0[0x57AA:word16] = Mem0[0x57A8:word16] - 0x0001
	NZV = cond(v200)
	branch Test(GT,NZV) l3DAC
	// succ:  l3DD2 l3DAC
l3DD2:
	v201 = Mem0[0x5426:ptr16]
	v201 = Mem0[v201:word16]
	v202 = Mem0[0x5426:ptr16]
	Mem0[v202:word16] = v201 + 0x0001
	NZV = cond(v202)
	v204 = Mem0[pc + 0x1A9A:word16] + Mem0[0x5798:word16]
	Mem0[pc + 0x1A9A:word16] = v204
	NZVC = cond(v204)
	v205 = Mem0[0x5426:ptr16]
	v205 = Mem0[v205:word16]
	v206 = Mem0[0x5426:ptr16]
	Mem0[v206:word16] = v205 + 0x0001
	NZV = cond(v206)
	Mem0[0x578A:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v208 = Mem0[0x5426:ptr16]
	v208 = Mem0[v208:word16]
	v209 = Mem0[0x5426:ptr16]
	Mem0[v209:word16] = v208 + 0x0001
	NZV = cond(v209)
	goto l3E0A
	// succ:  l3E0A
l3DEA:
	v111 = Mem0[0x5426:ptr16]
	Mem0[v111:word16] = 0x0039
	NZ = cond(v111)
	V = false
	Mem0[0x57A8:word16] = Mem0[0x578E:word16]
	NZ = cond(v113)
	V = false
	Mem0[0x57A8:word16] = Mem0[0x57A6:word16] - 0x0001
	NZV = cond(v115)
	r5 = 0x52D8
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v117 = Mem0[0x5426:ptr16]
	v117 = Mem0[v117:word16]
	v118 = Mem0[0x5426:ptr16]
	Mem0[v118:word16] = v117 + 0x0001
	NZV = cond(v118)
	Mem0[0x578A:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l3E0A
l3E0A:
	v89 = Mem0[0x5426:ptr16]
	Mem0[v89:word16] = 0x003B
	NZ = cond(v89)
	V = false
	return
	// succ:  fn3B3C_exit
fn3B3C_exit:


// fn3E12
// Return size: 2
void fn3E12()
fn3E12_entry:
	// succ:  l3E12
l3E12:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	r2 = r2 - 0x0002
	v8 = Mem0[r2:word16] | Mem0[r3:word16]
	Mem0[r2:word16] = v8
	NZ = cond(v8)
	V = false
	v11 = Mem0[0x5426:ptr16]
	Mem0[v11:word16] = 0x0005
	NZ = cond(v11)
	V = false
	Mem0[0x57B2:word16] = 0x0001
	NZ = cond(v12)
	V = false
	Mem0[0x57BC:word16] = 0x000D
	NZ = cond(v13)
	V = false
	// succ:  l3E2A
l3E2A:
	v14 = Mem0[0x5426:ptr16]
	Mem0[v14:word16] = 0x0006
	NZ = cond(v14)
	V = false
	Mem0[0x57B4:word16] = 0x0001
	NZ = cond(v15)
	V = false
	Mem0[0x57AE:word16] = 0x52EA
	NZ = cond(v16)
	V = false
	// succ:  l3E3C
l3E3C:
	v17 = Mem0[0x5426:ptr16]
	Mem0[v17:word16] = 0x0007
	NZ = cond(v17)
	V = false
	r2 = Mem0[0x57B0:word16]
	NZ = cond(r2)
	V = false
	v19 = Mem0[0x57AE:ptr16]
	v19 = Mem0[v19:word16]
	r2 = r2 + v19
	NZVC = cond(r2)
	r2 = r2 << 1
	NZVC = cond(r2)
	r1 = Mem0[r2 + 0x5A3E:word16]
	NZ = cond(r1)
	V = false
	Mem0[0x57B6:word16] = r1
	NZ = cond(v23)
	V = false
	v24 = Mem0[0x5426:ptr16]
	v24 = Mem0[v24:word16]
	v25 = Mem0[0x5426:ptr16]
	Mem0[v25:word16] = v24 + 0x0001
	NZV = cond(v25)
	r3 = Mem0[r2 + 0x5A66:word16]
	NZ = cond(r3)
	V = false
	Mem0[0x57B8:word16] = r3
	NZ = cond(v28)
	V = false
	v29 = Mem0[0x5426:ptr16]
	v29 = Mem0[v29:word16]
	v30 = Mem0[0x5426:ptr16]
	Mem0[v30:word16] = v29 + 0x0001
	NZV = cond(v30)
	v31 = r1 - r3
	NZVC = cond(v31)
	branch Test(EQ,Z) l3F0E
	// succ:  l3E68 l3F0E
l3E68:
	v33 = Mem0[0x5426:ptr16]
	Mem0[v33:word16] = 0x000B
	NZ = cond(v33)
	V = false
	Mem0[r2 + 0x5A66:word16] = r1
	NZ = cond(v34)
	V = false
	v35 = Mem0[0x5426:ptr16]
	v35 = Mem0[v35:word16]
	v36 = Mem0[0x5426:ptr16]
	Mem0[v36:word16] = v35 + 0x0001
	NZV = cond(v36)
	Mem0[0x57BA:word16] = Mem0[0x57B2:word16]
	NZ = cond(v38)
	V = false
	v40 = Mem0[pc + 0x1938:word16] + Mem0[0x57BA:word16]
	Mem0[pc + 0x1938:word16] = v40
	NZVC = cond(v40)
	v41 = Mem0[0x5426:ptr16]
	v41 = Mem0[v41:word16]
	v42 = Mem0[0x5426:ptr16]
	Mem0[v42:word16] = v41 + 0x0001
	NZV = cond(v42)
	v43 = 0x000A - r1
	NZVC = cond(v43)
	branch Test(EQ,Z) l3EB8
	// succ:  l3E8C l3EB8
l3E8C:
	v44 = Mem0[0x5426:ptr16]
	Mem0[v44:word16] = 0x000F
	NZ = cond(v44)
	V = false
	v45 = 0x0001 - r1
	NZVC = cond(v45)
	branch Test(EQ,Z) l3ECA
	// succ:  l3E98 l3ECA
l3E98:
	v46 = Mem0[0x5426:ptr16]
	Mem0[v46:word16] = 0x0011
	NZ = cond(v46)
	V = false
	v47 = r1
	v47 = v47 & v47
	NZ = cond(v47)
	C = false
	V = false
	branch Test(EQ,Z) l3EDC
	// succ:  l3EA2 l3EDC
l3EA2:
	v49 = Mem0[0x5426:ptr16]
	Mem0[v49:word16] = 0x0013
	NZ = cond(v49)
	V = false
	r0 = 0x0075
	NZ = cond(r0)
	V = false
	r0 = r0 - r1
	NZVC = cond(r0)
	Mem0[0x57B0:byte] = r0
	NZ = cond(v51)
	V = false
	v52 = Mem0[0x5426:ptr16]
	v52 = Mem0[v52:word16]
	v53 = Mem0[0x5426:ptr16]
	Mem0[v53:word16] = v52 + 0x0001
	NZV = cond(v53)
	goto l3EE8
	// succ:  l3EE8
l3EB8:
	v83 = Mem0[0x5426:ptr16]
	Mem0[v83:word16] = 0x0015
	NZ = cond(v83)
	V = false
	Mem0[0x57B0:byte] = 0x61
	NZ = cond(v84)
	V = false
	v85 = Mem0[0x5426:ptr16]
	v85 = Mem0[v85:word16]
	v86 = Mem0[0x5426:ptr16]
	Mem0[v86:word16] = v85 + 0x0001
	NZV = cond(v86)
	goto l3EE8
	// succ:  l3EE8
l3ECA:
	v79 = Mem0[0x5426:ptr16]
	Mem0[v79:word16] = 0x0017
	NZ = cond(v79)
	V = false
	Mem0[0x57B0:byte] = 0x69
	NZ = cond(v80)
	V = false
	v81 = Mem0[0x5426:ptr16]
	v81 = Mem0[v81:word16]
	v82 = Mem0[0x5426:ptr16]
	Mem0[v82:word16] = v81 + 0x0001
	NZV = cond(v82)
	goto l3EE8
	// succ:  l3EE8
l3EDC:
	v77 = Mem0[0x5426:ptr16]
	Mem0[v77:word16] = 0x0019
	NZ = cond(v77)
	V = false
	Mem0[0x57B0:byte] = 0x5F
	NZ = cond(v78)
	V = false
	// succ:  l3EE8
l3EE8:
	v66 = Mem0[0x5426:ptr16]
	Mem0[v66:word16] = 0x001A
	NZ = cond(v66)
	V = false
	r5 = 0x52F8
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	v69 = Mem0[0x5426:ptr16]
	v69 = Mem0[v69:word16]
	v70 = Mem0[0x5426:ptr16]
	Mem0[v70:word16] = v69 + 0x0001
	NZV = cond(v70)
	r5 = 0x52FC
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	v72 = Mem0[0x5426:ptr16]
	v72 = Mem0[v72:word16]
	v73 = Mem0[0x5426:ptr16]
	Mem0[v73:word16] = v72 + 0x0001
	NZV = cond(v73)
	r5 = 0x5306
	NZ = cond(r5)
	V = false
	call fn413C (retsize: 2; FPU: 2;)
	// succ:  l3F0E
l3F0E:
	v54 = Mem0[0x5426:ptr16]
	Mem0[v54:word16] = 0x001D
	NZ = cond(v54)
	V = false
	v55 = Mem0[pc + 0x1894:word16] + 0x0002
	Mem0[pc + 0x1894:word16] = v55
	NZVC = cond(v55)
	Mem0[0x57B4:word16] = Mem0[0x57B2:word16] + 0x0001
	NZV = cond(v57)
	v59 = 0x0004 - Mem0[0x57B2:word16]
	NZVC = cond(v59)
	branch Test(LE,NZV) l3E3C
	// succ:  l3F26 l3E3C
l3F26:
	v60 = Mem0[pc + 0x1890:word16] + 0x000D
	Mem0[pc + 0x1890:word16] = v60
	NZVC = cond(v60)
	Mem0[0x57B2:word16] = Mem0[0x57B0:word16] + 0x0001
	NZV = cond(v62)
	v64 = 0x0005 - Mem0[0x57B0:word16]
	NZVC = cond(v64)
	branch Test(GT,NZV) l3F3C
	// succ:  l3F38 l3F3C
l3F38:
	goto 0x3E2A
	goto l3E2A
	// succ:  l3E2A
l3F3C:
	v75 = Mem0[0x5426:ptr16]
	v75 = Mem0[v75:word16]
	v76 = Mem0[0x5426:ptr16]
	Mem0[v76:word16] = v75 + 0x0001
	NZV = cond(v76)
	return
	// succ:  fn3E12_exit
fn3E12_exit:


// fn3F42
// Return size: 2
void fn3F42()
fn3F42_entry:
	// succ:  l3F42
l3F42:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v8 = Mem0[r2:word16] | Mem0[r4:word16]
	Mem0[r2:word16] = v8
	NZ = cond(v8)
	V = false
	v11 = Mem0[0x5426:ptr16]
	Mem0[v11:word16] = 0x0005
	NZ = cond(v11)
	V = false
	Mem0[0x57C6:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	v16 = Mem0[0x5426:ptr16]
	v16 = Mem0[v16:word16]
	v17 = Mem0[0x5426:ptr16]
	Mem0[v17:word16] = v16 + 0x0001
	NZV = cond(v17)
	v19 = Mem0[0x57C2:ptr16]
	v19 = Mem0[v19:word16]
	Mem0[0x57C8:word16] = v19
	NZ = cond(v20)
	V = false
	v21 = Mem0[pc + 0x1866:word16] - 0x0002
	Mem0[pc + 0x1866:word16] = v21
	NZVC = cond(v21)
	v23 = Mem0[0x5426:ptr16]
	v23 = Mem0[v23:word16]
	v24 = Mem0[0x5426:ptr16]
	Mem0[v24:word16] = v23 + 0x0001
	NZV = cond(v24)
	r5 = 0x532A
	NZ = cond(r5)
	V = false
	call fn4534 (retsize: 2; FPU: 2;)
	v27 = Mem0[0x5426:ptr16]
	v27 = Mem0[v27:word16]
	v28 = Mem0[0x5426:ptr16]
	Mem0[v28:word16] = v27 + 0x0001
	NZV = cond(v28)
	Mem0[0x57CA:word16] = 0x0001
	NZ = cond(v29)
	V = false
	Mem0[0x57D0:word16] = 0x000A
	NZ = cond(v30)
	V = false
	// succ:  l3F7E
l3F7E:
	v31 = Mem0[0x5426:ptr16]
	Mem0[v31:word16] = 0x0009
	NZ = cond(v31)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5312
	NZ = cond(v32)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5328
	NZ = cond(v33)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x57C0:word16]
	NZ = cond(v35)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x57C8
	NZ = cond(v36)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0004
	NZ = cond(v37)
	V = false
	r5 = sp
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	sp = sp + 0x000A
	NZVC = cond(sp)
	v39 = Mem0[0x5426:ptr16]
	v39 = Mem0[v39:word16]
	v40 = Mem0[0x5426:ptr16]
	Mem0[v40:word16] = v39 + 0x0001
	NZV = cond(v40)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5318
	NZ = cond(v41)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5328
	NZ = cond(v42)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x57C0:word16]
	NZ = cond(v44)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x57C8
	NZ = cond(v45)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0004
	NZ = cond(v46)
	V = false
	r5 = sp
	NZ = cond(r5)
	V = false
	call fn4230 (retsize: 2; FPU: 2;)
	sp = sp + 0x000A
	NZVC = cond(sp)
	v48 = Mem0[0x5426:ptr16]
	Mem0[v48:word16] = 0x000B
	NZ = cond(v48)
	V = false
	Mem0[0x57D0:word16] = Mem0[0x57CE:word16] - 0x0001
	NZV = cond(v50)
	branch Test(GT,NZV) l3F7E
	// succ:  l3FD0 l3F7E
l3FD0:
	v51 = Mem0[0x5426:ptr16]
	v51 = Mem0[v51:word16]
	v52 = Mem0[0x5426:ptr16]
	Mem0[v52:word16] = v51 + 0x0001
	NZV = cond(v52)
	v53 = Mem0[0x57C4:ptr16]
	v53 = Mem0[v53:word16]
	v54 = 0x0002 - v53
	NZVC = cond(v54)
	branch Test(NE,Z) l4028
	// succ:  l3FDC l4028
l3FDC:
	v55 = Mem0[0x5426:ptr16]
	Mem0[v55:word16] = 0x000E
	NZ = cond(v55)
	V = false
	Mem0[0x57CC:word16] = 0x0001
	NZ = cond(v56)
	V = false
	// succ:  l3FE8
l3FE8:
	v57 = Mem0[0x5426:ptr16]
	Mem0[v57:word16] = 0x000F
	NZ = cond(v57)
	V = false
	Mem0[0x57CE:word16] = 0x0001
	NZ = cond(v58)
	V = false
	r4 = 0x0004
	NZ = cond(r4)
	V = false
	r5 = 0x531E
	NZ = cond(r5)
	V = false
	// succ:  l3FFC
l3FFC:
	v59 = Mem0[0x5426:ptr16]
	Mem0[v59:word16] = 0x0010
	NZ = cond(v59)
	V = false
	r1 = Mem0[0x57CA:word16]
	NZ = cond(r1)
	V = false
	r0 = r1
	NZ = cond(r0)
	V = false
	v63 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	r0 = r0 + v63
	NZVC = cond(r0)
	r0 = r0 << 1
	NZVC = cond(r0)
	Mem0[r0 + 0x5A66:word16] = 0xFFFF
	NZ = cond(v64)
	V = false
	v65 = Mem0[0x5426:ptr16]
	Mem0[v65:word16] = 0x0011
	NZ = cond(v65)
	V = false
	r4 = r4 - 0x0001
	NZV = cond(r4)
	branch Test(GT,NZV) l3FFC
	// succ:  l401C l3FFC
l401C:
	r1 = r1 + 0x0001
	NZV = cond(r1)
	Mem0[0x57CC:word16] = r1
	NZ = cond(v66)
	V = false
	v67 = 0x0005 - r1
	NZVC = cond(v67)
	branch Test(LE,NZV) l3FE8
	// succ:  l4028 l3FE8
l4028:
	v68 = Mem0[0x5426:ptr16]
	Mem0[v68:word16] = 0x0012
	NZ = cond(v68)
	V = false
	return
	// succ:  fn3F42_exit
fn3F42_exit:


// fn4030
// Return size: 2
void fn4030()
fn4030_entry:
	// succ:  l4030
l4030:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v8 = Mem0[r0 + 0x15FF:word16] | Mem0[r4:word16]
	Mem0[r0 + 0x15FF:word16] = v8
	NZ = cond(v8)
	V = false
	NZVC = __bpt()
	r2 = r2 - 0x0002
	Mem0[Mem0[r2:ptr16]:word16] = Mem0[pc:word16]
	NZ = cond(v14)
	V = false
	Mem0[0x57D4:byte] = 0x9B
	NZ = cond(v15)
	V = false
	v16 = Mem0[0x5426:ptr16]
	v16 = Mem0[v16:word16]
	v17 = Mem0[0x5426:ptr16]
	Mem0[v17:word16] = v16 + 0x0001
	NZV = cond(v17)
	Mem0[0x57D5:byte] = 0x48
	NZ = cond(v19)
	V = false
	v20 = Mem0[0x5426:ptr16]
	v20 = Mem0[v20:word16]
	v21 = Mem0[0x5426:ptr16]
	Mem0[v21:word16] = v20 + 0x0001
	NZV = cond(v21)
	Mem0[0x57D6:byte] = 0x9B
	NZ = cond(v22)
	V = false
	v23 = Mem0[0x5426:ptr16]
	v23 = Mem0[v23:word16]
	v24 = Mem0[0x5426:ptr16]
	Mem0[v24:word16] = v23 + 0x0001
	NZV = cond(v24)
	Mem0[0x57D7:byte] = 0x4A
	NZ = cond(v25)
	V = false
	v26 = Mem0[0x5426:ptr16]
	v26 = Mem0[v26:word16]
	v27 = Mem0[0x5426:ptr16]
	Mem0[v27:word16] = v26 + 0x0001
	NZV = cond(v27)
	r5 = 0x533E
	NZ = cond(r5)
	V = false
	call fn4534 (retsize: 2; FPU: 2;)
	v30 = Mem0[0x5426:ptr16]
	v30 = Mem0[v30:word16]
	v31 = Mem0[0x5426:ptr16]
	Mem0[v31:word16] = v30 + 0x0001
	NZV = cond(v31)
	return
	// succ:  fn4030_exit
fn4030_exit:


// fn4072
// Return size: 2
void fn4072()
fn4072_entry:
	// succ:  l4072
l4072:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	r4 = r4 | Mem0[r5:word16]
	NZ = cond(r4)
	V = false
	v10 = Mem0[0x5426:ptr16]
	Mem0[v10:word16] = 0x0003
	NZ = cond(v10)
	V = false
	v11 = Mem0[0x57DA:ptr16]
	v11 = Mem0[v11:word16]
	Mem0[0x57E0:word16] = v11
	NZ = cond(v12)
	V = false
	v13 = Mem0[0x5426:ptr16]
	v13 = Mem0[v13:word16]
	v14 = Mem0[0x5426:ptr16]
	Mem0[v14:word16] = v13 + 0x0001
	NZV = cond(v14)
	v16 = Mem0[0x57DC:ptr16]
	v16 = Mem0[v16:word16]
	Mem0[0x57E2:word16] = v16
	NZ = cond(v17)
	V = false
	v18 = Mem0[0x5426:ptr16]
	v18 = Mem0[v18:word16]
	v19 = Mem0[0x5426:ptr16]
	Mem0[v19:word16] = v18 + 0x0001
	NZV = cond(v19)
	v21 = Mem0[0x57DE:word16]
	v21 = v21 & v21
	NZ = cond(v21)
	C = false
	V = false
	branch Test(GE,NV) l40A0
	// succ:  l4098 l40A0
l4098:
	v24 = Mem0[0x5426:ptr16]
	v24 = Mem0[v24:word16]
	v25 = Mem0[0x5426:ptr16]
	Mem0[v25:word16] = v24 + 0x0001
	NZV = cond(v25)
	Mem0[0x57E0:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l40A0
l40A0:
	v29 = Mem0[0x5426:ptr16]
	Mem0[v29:word16] = 0x0007
	NZ = cond(v29)
	V = false
	v31 = Mem0[0x57E0:word16]
	v31 = v31 & v31
	NZ = cond(v31)
	C = false
	V = false
	branch Test(GE,NV) l40B4
	// succ:  l40AC l40B4
l40AC:
	v32 = Mem0[0x5426:ptr16]
	v32 = Mem0[v32:word16]
	v33 = Mem0[0x5426:ptr16]
	Mem0[v33:word16] = v32 + 0x0001
	NZV = cond(v33)
	Mem0[0x57E2:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l40B4
l40B4:
	v35 = Mem0[0x5426:ptr16]
	Mem0[v35:word16] = 0x0009
	NZ = cond(v35)
	V = false
	v37 = 0x004F - Mem0[0x57DE:word16]
	NZVC = cond(v37)
	branch Test(LE,NZV) l40CC
	// succ:  l40C2 l40CC
l40C2:
	v39 = Mem0[0x5426:ptr16]
	v39 = Mem0[v39:word16]
	v40 = Mem0[0x5426:ptr16]
	Mem0[v40:word16] = v39 + 0x0001
	NZV = cond(v40)
	Mem0[0x57E0:word16] = 0x004F
	NZ = cond(v41)
	V = false
	// succ:  l40CC
l40CC:
	v42 = Mem0[0x5426:ptr16]
	Mem0[v42:word16] = 0x000B
	NZ = cond(v42)
	V = false
	v44 = 0x0017 - Mem0[0x57E0:word16]
	NZVC = cond(v44)
	branch Test(LE,NZV) l40E4
	// succ:  l40DA l40E4
l40DA:
	v45 = Mem0[0x5426:ptr16]
	v45 = Mem0[v45:word16]
	v46 = Mem0[0x5426:ptr16]
	Mem0[v46:word16] = v45 + 0x0001
	NZV = cond(v46)
	Mem0[0x57E2:word16] = 0x0017
	NZ = cond(v47)
	V = false
	// succ:  l40E4
l40E4:
	v48 = Mem0[0x5426:ptr16]
	Mem0[v48:word16] = 0x000D
	NZ = cond(v48)
	V = false
	v49 = Mem0[pc + 0x16F0:word16] + 0x0020
	Mem0[pc + 0x16F0:word16] = v49
	NZVC = cond(v49)
	v50 = Mem0[0x5426:ptr16]
	v50 = Mem0[v50:word16]
	v51 = Mem0[0x5426:ptr16]
	Mem0[v51:word16] = v50 + 0x0001
	NZV = cond(v51)
	Mem0[0x57E2:word16] = -Mem0[0x57E0:word16]
	NZV = cond(v53)
	v54 = Mem0[pc + 0x16E4:word16] + 0x0037
	Mem0[pc + 0x16E4:word16] = v54
	NZVC = cond(v54)
	v55 = Mem0[0x5426:ptr16]
	v55 = Mem0[v55:word16]
	v56 = Mem0[0x5426:ptr16]
	Mem0[v56:word16] = v55 + 0x0001
	NZV = cond(v56)
	Mem0[0x57DC:byte] = 0x9B
	NZ = cond(v57)
	V = false
	v58 = Mem0[0x5426:ptr16]
	v58 = Mem0[v58:word16]
	v59 = Mem0[0x5426:ptr16]
	Mem0[v59:word16] = v58 + 0x0001
	NZV = cond(v59)
	Mem0[0x57DD:byte] = 0x59
	NZ = cond(v60)
	V = false
	v61 = Mem0[0x5426:ptr16]
	v61 = Mem0[v61:word16]
	v62 = Mem0[0x5426:ptr16]
	Mem0[v62:word16] = v61 + 0x0001
	NZV = cond(v62)
	r0 = (int16) Mem0[0x57E0:byte]
	NZ = cond(r0)
	V = false
	Mem0[0x57DE:byte] = r0
	NZ = cond(v65)
	V = false
	v66 = Mem0[0x5426:ptr16]
	v66 = Mem0[v66:word16]
	v67 = Mem0[0x5426:ptr16]
	Mem0[v67:word16] = v66 + 0x0001
	NZV = cond(v67)
	r0 = (int16) Mem0[0x57DE:byte]
	NZ = cond(r0)
	V = false
	Mem0[0x57DF:byte] = r0
	NZ = cond(v69)
	V = false
	v70 = Mem0[0x5426:ptr16]
	v70 = Mem0[v70:word16]
	v71 = Mem0[0x5426:ptr16]
	Mem0[v71:word16] = v70 + 0x0001
	NZV = cond(v71)
	r5 = 0x534E
	NZ = cond(r5)
	V = false
	call fn4534 (retsize: 2; FPU: 2;)
	v73 = Mem0[0x5426:ptr16]
	v73 = Mem0[v73:word16]
	v74 = Mem0[0x5426:ptr16]
	Mem0[v74:word16] = v73 + 0x0001
	NZV = cond(v74)
	return
	// succ:  fn4072_exit
fn4072_exit:


// fn413C
// Return size: 2
void fn413C()
fn413C_entry:
	// succ:  l413C
l413C:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v8 = Mem0[r4:word16] | Mem0[r5:word16]
	Mem0[r4:word16] = v8
	r4 = r4 + 0x0002
	NZ = cond(v8)
	V = false
	v11 = Mem0[0x5426:ptr16]
	Mem0[v11:word16] = 0x0003
	NZ = cond(v11)
	V = false
	Mem0[0x57E6:byte] = 0x9B
	NZ = cond(v12)
	V = false
	v13 = Mem0[0x5426:ptr16]
	v13 = Mem0[v13:word16]
	v14 = Mem0[0x5426:ptr16]
	Mem0[v14:word16] = v13 + 0x0001
	NZV = cond(v14)
	Mem0[0x57E7:byte] = 0x46
	NZ = cond(v16)
	V = false
	v17 = Mem0[0x5426:ptr16]
	v17 = Mem0[v17:word16]
	v18 = Mem0[0x5426:ptr16]
	Mem0[v18:word16] = v17 + 0x0001
	NZV = cond(v18)
	v19 = Mem0[0x57E4:ptr16]
	v19 = Mem0[v19:word16]
	v20 = v19
	v20 = v20 & v20
	NZ = cond(v20)
	C = false
	V = false
	branch Test(NE,Z) l416C
	// succ:  l4162 l416C
l4162:
	v23 = Mem0[0x5426:ptr16]
	v23 = Mem0[v23:word16]
	v24 = Mem0[0x5426:ptr16]
	Mem0[v24:word16] = v23 + 0x0001
	NZV = cond(v24)
	Mem0[0x57E7:byte] = 0x47
	NZ = cond(v25)
	V = false
	// succ:  l416C
l416C:
	v26 = Mem0[0x5426:ptr16]
	Mem0[v26:word16] = 0x0007
	NZ = cond(v26)
	V = false
	r5 = 0x5362
	NZ = cond(r5)
	V = false
	call fn4534 (retsize: 2; FPU: 2;)
	v28 = Mem0[0x5426:ptr16]
	v28 = Mem0[v28:word16]
	v29 = Mem0[0x5426:ptr16]
	Mem0[v29:word16] = v28 + 0x0001
	NZV = cond(v29)
	return
	// succ:  fn413C_exit
fn413C_exit:


// fn4180
// Return size: 2
void fn4180()
fn4180_entry:
	// succ:  l4180
l4180:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	r0 = r0 - 0x0002
	v8 = Mem0[Mem0[r0:ptr16]:word16] | Mem0[r5:word16]
	Mem0[Mem0[r0:ptr16]:word16] = v8
	NZ = cond(v8)
	V = false
	v11 = Mem0[0x5426:ptr16]
	Mem0[v11:word16] = 0x0005
	NZ = cond(v11)
	V = false
	r5 = 0x5376
	NZ = cond(r5)
	V = false
	call fn0CF4 (retsize: 2; FPU: 2;)
	v13 = Mem0[0x5426:ptr16]
	v13 = Mem0[v13:word16]
	v14 = Mem0[0x5426:ptr16]
	Mem0[v14:word16] = v13 + 0x0001
	NZV = cond(v14)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5374
	NZ = cond(v16)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5370
	NZ = cond(v17)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x57E8
	NZ = cond(v18)
	V = false
	call fn0FAE (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5374
	NZ = cond(v20)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x57FA
	NZ = cond(v21)
	V = false
	call fn0B3E (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v24 = Mem0[0x5426:ptr16]
	v24 = Mem0[v24:word16]
	v25 = Mem0[0x5426:ptr16]
	Mem0[v25:word16] = v24 + 0x0001
	NZV = cond(v25)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5374
	NZ = cond(v26)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5370
	NZ = cond(v27)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x57E8
	NZ = cond(v28)
	V = false
	call fn0FAE (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5374
	NZ = cond(v30)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x57FE
	NZ = cond(v31)
	V = false
	call fn0B3E (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v34 = Mem0[0x5426:ptr16]
	v34 = Mem0[v34:word16]
	v35 = Mem0[0x5426:ptr16]
	Mem0[v35:word16] = v34 + 0x0001
	NZV = cond(v35)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5374
	NZ = cond(v36)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5370
	NZ = cond(v37)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x57E8
	NZ = cond(v38)
	V = false
	call fn0FAE (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5374
	NZ = cond(v40)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5802
	NZ = cond(v41)
	V = false
	call fn0B3E (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v44 = Mem0[0x5426:ptr16]
	Mem0[v44:word16] = 0x000A
	NZ = cond(v44)
	V = false
	r0 = Mem0[0x57F8:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 + Mem0[0x57FC:word16]
	NZVC = cond(r0)
	r0 = r0 + Mem0[0x5800:word16]
	NZVC = cond(r0)
	Mem0[0x58B6:word16] = r0
	NZ = cond(v49)
	V = false
	v50 = Mem0[0x5426:ptr16]
	v50 = Mem0[v50:word16]
	v51 = Mem0[0x5426:ptr16]
	Mem0[v51:word16] = v50 + 0x0001
	NZV = cond(v51)
	r0 = Mem0[0x57FA:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 + Mem0[0x57FE:word16]
	NZVC = cond(r0)
	r0 = r0 + Mem0[0x5802:word16]
	NZVC = cond(r0)
	Mem0[0x58B8:word16] = r0
	NZ = cond(v55)
	V = false
	v56 = Mem0[0x5426:ptr16]
	v56 = Mem0[v56:word16]
	v57 = Mem0[0x5426:ptr16]
	Mem0[v57:word16] = v56 + 0x0001
	NZV = cond(v57)
	return
	// succ:  fn4180_exit
fn4180_exit:


// fn4230
// Return size: 2
void fn4230()
fn4230_entry:
	// succ:  l4230
l4230:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v8 = Mem0[Mem0[r2 + 0x15FF:ptr16]:word16] | Mem0[r5:word16]
	Mem0[Mem0[r2 + 0x15FF:ptr16]:word16] = v8
	NZ = cond(v8)
	V = false
	NZVC = __bpt()
	r2 = r2 - 0x0002
	Mem0[Mem0[r2:ptr16]:word16] = pc
	NZ = cond(v12)
	V = false
	v13 = Mem0[0x580A:ptr16]
	v13 = Mem0[v13:word16]
	Mem0[0x5856:word16] = v13
	NZ = cond(v14)
	V = false
	v15 = Mem0[0x5426:ptr16]
	v15 = Mem0[v15:word16]
	v16 = Mem0[0x5426:ptr16]
	Mem0[v16:word16] = v15 + 0x0001
	NZV = cond(v16)
	v18 = Mem0[0x580C:ptr16]
	v18 = Mem0[v18:word16]
	Mem0[0x5858:word16] = v18
	NZ = cond(v19)
	V = false
	v20 = Mem0[0x5426:ptr16]
	v20 = Mem0[v20:word16]
	v21 = Mem0[0x5426:ptr16]
	Mem0[v21:word16] = v20 + 0x0001
	NZV = cond(v21)
	v23 = Mem0[0x5854:word16]
	v23 = v23 & v23
	NZ = cond(v23)
	C = false
	V = false
	branch Test(GE,NV) l425E
	// succ:  l4256 l425E
l4256:
	v26 = Mem0[0x5426:ptr16]
	v26 = Mem0[v26:word16]
	v27 = Mem0[0x5426:ptr16]
	Mem0[v27:word16] = v26 + 0x0001
	NZV = cond(v27)
	Mem0[0x5856:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l425E
l425E:
	v31 = Mem0[0x5426:ptr16]
	Mem0[v31:word16] = 0x0008
	NZ = cond(v31)
	V = false
	v33 = Mem0[0x5856:word16]
	v33 = v33 & v33
	NZ = cond(v33)
	C = false
	V = false
	branch Test(GE,NV) l4272
	// succ:  l426A l4272
l426A:
	v34 = Mem0[0x5426:ptr16]
	v34 = Mem0[v34:word16]
	v35 = Mem0[0x5426:ptr16]
	Mem0[v35:word16] = v34 + 0x0001
	NZV = cond(v35)
	Mem0[0x5858:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l4272
l4272:
	v37 = Mem0[0x5426:ptr16]
	Mem0[v37:word16] = 0x000A
	NZ = cond(v37)
	V = false
	v39 = 0x004F - Mem0[0x5854:word16]
	NZVC = cond(v39)
	branch Test(LE,NZV) l428A
	// succ:  l4280 l428A
l4280:
	v40 = Mem0[0x5426:ptr16]
	v40 = Mem0[v40:word16]
	v41 = Mem0[0x5426:ptr16]
	Mem0[v41:word16] = v40 + 0x0001
	NZV = cond(v41)
	Mem0[0x5856:word16] = 0x004F
	NZ = cond(v42)
	V = false
	// succ:  l428A
l428A:
	v43 = Mem0[0x5426:ptr16]
	Mem0[v43:word16] = 0x000C
	NZ = cond(v43)
	V = false
	v45 = 0x0017 - Mem0[0x5856:word16]
	NZVC = cond(v45)
	branch Test(LE,NZV) l42A2
	// succ:  l4298 l42A2
l4298:
	v46 = Mem0[0x5426:ptr16]
	v46 = Mem0[v46:word16]
	v47 = Mem0[0x5426:ptr16]
	Mem0[v47:word16] = v46 + 0x0001
	NZV = cond(v47)
	Mem0[0x5858:word16] = 0x0017
	NZ = cond(v48)
	V = false
	// succ:  l42A2
l42A2:
	v49 = Mem0[0x5426:ptr16]
	Mem0[v49:word16] = 0x000E
	NZ = cond(v49)
	V = false
	v50 = Mem0[pc + 0x15A8:word16] + 0x0020
	Mem0[pc + 0x15A8:word16] = v50
	NZVC = cond(v50)
	v51 = Mem0[0x5426:ptr16]
	v51 = Mem0[v51:word16]
	v52 = Mem0[0x5426:ptr16]
	Mem0[v52:word16] = v51 + 0x0001
	NZV = cond(v52)
	Mem0[0x5858:word16] = -Mem0[0x5856:word16]
	NZV = cond(v54)
	v55 = Mem0[pc + 0x159C:word16] + 0x0037
	Mem0[pc + 0x159C:word16] = v55
	NZVC = cond(v55)
	v56 = Mem0[0x5426:ptr16]
	v56 = Mem0[v56:word16]
	v57 = Mem0[0x5426:ptr16]
	Mem0[v57:word16] = v56 + 0x0001
	NZV = cond(v57)
	Mem0[0x5811:byte] = 0x9B
	NZ = cond(v58)
	V = false
	v59 = Mem0[0x5426:ptr16]
	v59 = Mem0[v59:word16]
	v60 = Mem0[0x5426:ptr16]
	Mem0[v60:word16] = v59 + 0x0001
	NZV = cond(v60)
	Mem0[0x5812:byte] = 0x59
	NZ = cond(v61)
	V = false
	v62 = Mem0[0x5426:ptr16]
	v62 = Mem0[v62:word16]
	v63 = Mem0[0x5426:ptr16]
	Mem0[v63:word16] = v62 + 0x0001
	NZV = cond(v63)
	r0 = (int16) Mem0[0x5856:byte]
	NZ = cond(r0)
	V = false
	Mem0[0x5813:byte] = r0
	NZ = cond(v66)
	V = false
	v67 = Mem0[0x5426:ptr16]
	v67 = Mem0[v67:word16]
	v68 = Mem0[0x5426:ptr16]
	Mem0[v68:word16] = v67 + 0x0001
	NZV = cond(v68)
	r0 = (int16) Mem0[0x5854:byte]
	NZ = cond(r0)
	V = false
	Mem0[0x5814:byte] = r0
	NZ = cond(v70)
	V = false
	v71 = Mem0[0x5426:ptr16]
	v71 = Mem0[v71:word16]
	v72 = Mem0[0x5426:ptr16]
	Mem0[v72:word16] = v71 + 0x0001
	NZV = cond(v72)
	Mem0[0x5810:byte] = 0x24
	NZ = cond(v73)
	V = false
	v74 = Mem0[0x5426:ptr16]
	v74 = Mem0[v74:word16]
	v75 = Mem0[0x5426:ptr16]
	Mem0[v75:word16] = v74 + 0x0001
	NZV = cond(v75)
	v76 = Mem0[0x580E:ptr16]
	v76 = Mem0[v76:word16]
	v77 = 0x0001 - v76
	NZVC = cond(v77)
	branch Test(EQ,Z) l4380
	// succ:  l42FE l4380
l42FE:
	v78 = Mem0[0x5426:ptr16]
	Mem0[v78:word16] = 0x0017
	NZ = cond(v78)
	V = false
	v79 = Mem0[0x580E:ptr16]
	v79 = Mem0[v79:word16]
	v80 = 0x0005 - v79
	NZVC = cond(v80)
	branch Test(EQ,Z) l43C0
	// succ:  l430C l43C0
l430C:
	v81 = Mem0[0x5426:ptr16]
	Mem0[v81:word16] = 0x0019
	NZ = cond(v81)
	V = false
	v82 = Mem0[0x580E:ptr16]
	v82 = Mem0[v82:word16]
	v83 = 0x0006 - v82
	NZVC = cond(v83)
	branch Test(NE,Z) l431E
	// succ:  l431A l431E
l431A:
	goto 0x441E
	goto l441E
	// succ:  l441E
l431E:
	v149 = Mem0[0x5426:ptr16]
	Mem0[v149:word16] = 0x001B
	NZ = cond(v149)
	V = false
	v150 = Mem0[0x580E:ptr16]
	v150 = Mem0[v150:word16]
	v151 = 0x0007 - v150
	NZVC = cond(v151)
	branch Test(NE,Z) l4330
	// succ:  l432C l4330
l432C:
	goto 0x447A
	goto l447A
	// succ:  l447A
l4330:
	v174 = Mem0[0x5426:ptr16]
	Mem0[v174:word16] = 0x001D
	NZ = cond(v174)
	V = false
	v175 = Mem0[0x580E:ptr16]
	v175 = Mem0[v175:word16]
	v176 = 0x001E - v175
	NZVC = cond(v176)
	branch Test(NE,Z) l4342
	// succ:  l433E l4342
l433E:
	goto 0x44D6
	goto l44D6
	// succ:  l44D6
l4342:
	v197 = Mem0[0x5426:ptr16]
	Mem0[v197:word16] = 0x001F
	NZ = cond(v197)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x5808:word16]
	NZ = cond(v199)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x5806:word16]
	NZ = cond(v201)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0002
	NZ = cond(v202)
	V = false
	r5 = sp
	NZ = cond(r5)
	V = false
	call fn4072 (retsize: 2; FPU: 2;)
	sp = sp + 0x0006
	NZVC = cond(sp)
	v204 = Mem0[0x5426:ptr16]
	v204 = Mem0[v204:word16]
	v205 = Mem0[0x5426:ptr16]
	Mem0[v205:word16] = v204 + 0x0001
	NZV = cond(v205)
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x580C:word16]
	NZ = cond(v207)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[0x580A:word16]
	NZ = cond(v209)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x0002
	NZ = cond(v210)
	V = false
	r5 = sp
	NZ = cond(r5)
	V = false
	call fn4534 (retsize: 2; FPU: 2;)
	sp = sp + 0x0006
	NZVC = cond(sp)
	v212 = Mem0[0x5426:ptr16]
	v212 = Mem0[v212:word16]
	v213 = Mem0[0x5426:ptr16]
	Mem0[v213:word16] = v212 + 0x0001
	NZV = cond(v213)
	goto l452C
	// succ:  l452C
l4380:
	v85 = Mem0[0x5426:ptr16]
	Mem0[v85:word16] = 0x0022
	NZ = cond(v85)
	V = false
	v86 = Mem0[0x5810:ptr16]
	v86 = Mem0[v86:byte]
	Mem0[0x5815:byte] = v86
	NZ = cond(v87)
	V = false
	v88 = Mem0[0x5426:ptr16]
	v88 = Mem0[v88:word16]
	v89 = Mem0[0x5426:ptr16]
	Mem0[v89:word16] = v88 + 0x0001
	NZV = cond(v89)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v90)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5384
	NZ = cond(v91)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v93)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5810
	NZ = cond(v94)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A6
	NZ = cond(v96)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5815
	NZ = cond(v97)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v100 = Mem0[0x5426:ptr16]
	v100 = Mem0[v100:word16]
	v101 = Mem0[0x5426:ptr16]
	Mem0[v101:word16] = v100 + 0x0001
	NZV = cond(v101)
	goto l452C
	// succ:  l452C
l43C0:
	v103 = Mem0[0x5426:ptr16]
	Mem0[v103:word16] = 0x0025
	NZ = cond(v103)
	V = false
	Mem0[0x585A:word16] = 0x0001
	NZ = cond(v104)
	V = false
	r3 = 0x0005
	NZ = cond(r3)
	V = false
	r4 = Mem0[0x580C:word16]
	NZ = cond(r4)
	V = false
	r5 = 0x5816
	NZ = cond(r5)
	V = false
	// succ:  l43D8
l43D8:
	v108 = Mem0[0x5426:ptr16]
	Mem0[v108:word16] = 0x0026
	NZ = cond(v108)
	V = false
	v109 = Mem0[r4:byte]
	r4 = r4 + 0x0001
	v110 = v109
	Mem0[r5:byte] = v110
	r5 = r5 + 0x0001
	NZ = cond(v110)
	V = false
	v111 = Mem0[0x5426:ptr16]
	Mem0[v111:word16] = 0x0027
	NZ = cond(v111)
	V = false
	r3 = r3 - 0x0001
	NZV = cond(r3)
	branch Test(GT,NZV) l43D8
	// succ:  l43EA l43D8
l43EA:
	v112 = Mem0[0x5426:ptr16]
	v112 = Mem0[v112:word16]
	v113 = Mem0[0x5426:ptr16]
	Mem0[v113:word16] = v112 + 0x0001
	NZV = cond(v113)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v114)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x538A
	NZ = cond(v115)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v117)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5810
	NZ = cond(v118)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v120)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5816
	NZ = cond(v121)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v124 = Mem0[0x5426:ptr16]
	v124 = Mem0[v124:word16]
	v125 = Mem0[0x5426:ptr16]
	Mem0[v125:word16] = v124 + 0x0001
	NZV = cond(v125)
	goto l452C
	// succ:  l452C
l441E:
	v127 = Mem0[0x5426:ptr16]
	Mem0[v127:word16] = 0x002A
	NZ = cond(v127)
	V = false
	Mem0[0x585A:word16] = 0x0001
	NZ = cond(v128)
	V = false
	r3 = 0x0006
	NZ = cond(r3)
	V = false
	r4 = Mem0[0x580C:word16]
	NZ = cond(r4)
	V = false
	r5 = 0x581B
	NZ = cond(r5)
	V = false
	// succ:  l4436
l4436:
	v130 = Mem0[0x5426:ptr16]
	Mem0[v130:word16] = 0x002B
	NZ = cond(v130)
	V = false
	v131 = Mem0[r4:byte]
	r4 = r4 + 0x0001
	v132 = v131
	Mem0[r5:byte] = v132
	r5 = r5 + 0x0001
	NZ = cond(v132)
	V = false
	v133 = Mem0[0x5426:ptr16]
	Mem0[v133:word16] = 0x002C
	NZ = cond(v133)
	V = false
	r3 = r3 - 0x0001
	NZV = cond(r3)
	branch Test(GT,NZV) l4436
	// succ:  l4448 l4436
l4448:
	v134 = Mem0[0x5426:ptr16]
	v134 = Mem0[v134:word16]
	v135 = Mem0[0x5426:ptr16]
	Mem0[v135:word16] = v134 + 0x0001
	NZV = cond(v135)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v136)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5391
	NZ = cond(v137)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v139)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5810
	NZ = cond(v140)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53AA
	NZ = cond(v142)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x581B
	NZ = cond(v143)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v146 = Mem0[0x5426:ptr16]
	v146 = Mem0[v146:word16]
	v147 = Mem0[0x5426:ptr16]
	Mem0[v147:word16] = v146 + 0x0001
	NZV = cond(v147)
	goto l452C
	// succ:  l452C
l447A:
	v153 = Mem0[0x5426:ptr16]
	Mem0[v153:word16] = 0x002F
	NZ = cond(v153)
	V = false
	Mem0[0x585A:word16] = 0x0001
	NZ = cond(v154)
	V = false
	r3 = 0x0007
	NZ = cond(r3)
	V = false
	r4 = Mem0[0x580C:word16]
	NZ = cond(r4)
	V = false
	r5 = 0x5821
	NZ = cond(r5)
	V = false
	// succ:  l4492
l4492:
	v156 = Mem0[0x5426:ptr16]
	Mem0[v156:word16] = 0x0030
	NZ = cond(v156)
	V = false
	v157 = Mem0[r4:byte]
	r4 = r4 + 0x0001
	v158 = v157
	Mem0[r5:byte] = v158
	r5 = r5 + 0x0001
	NZ = cond(v158)
	V = false
	v159 = Mem0[0x5426:ptr16]
	Mem0[v159:word16] = 0x0031
	NZ = cond(v159)
	V = false
	r3 = r3 - 0x0001
	NZV = cond(r3)
	branch Test(GT,NZV) l4492
	// succ:  l44A4 l4492
l44A4:
	v160 = Mem0[0x5426:ptr16]
	v160 = Mem0[v160:word16]
	v161 = Mem0[0x5426:ptr16]
	Mem0[v161:word16] = v160 + 0x0001
	NZV = cond(v161)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v162)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5398
	NZ = cond(v163)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v165)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5810
	NZ = cond(v166)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53AC
	NZ = cond(v168)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5821
	NZ = cond(v169)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	v172 = Mem0[0x5426:ptr16]
	v172 = Mem0[v172:word16]
	v173 = Mem0[0x5426:ptr16]
	Mem0[v173:word16] = v172 + 0x0001
	NZV = cond(v173)
	goto l452C
	// succ:  l452C
l44D6:
	v178 = Mem0[0x5426:ptr16]
	Mem0[v178:word16] = 0x0034
	NZ = cond(v178)
	V = false
	Mem0[0x585A:word16] = 0x0001
	NZ = cond(v179)
	V = false
	r3 = 0x001E
	NZ = cond(r3)
	V = false
	r4 = Mem0[0x580C:word16]
	NZ = cond(r4)
	V = false
	r5 = 0x5828
	NZ = cond(r5)
	V = false
	// succ:  l44EE
l44EE:
	v181 = Mem0[0x5426:ptr16]
	Mem0[v181:word16] = 0x0035
	NZ = cond(v181)
	V = false
	v182 = Mem0[r4:byte]
	r4 = r4 + 0x0001
	v183 = v182
	Mem0[r5:byte] = v183
	r5 = r5 + 0x0001
	NZ = cond(v183)
	V = false
	v184 = Mem0[0x5426:ptr16]
	Mem0[v184:word16] = 0x0036
	NZ = cond(v184)
	V = false
	r3 = r3 - 0x0001
	NZV = cond(r3)
	branch Test(GT,NZV) l44EE
	// succ:  l4500 l44EE
l4500:
	v185 = Mem0[0x5426:ptr16]
	v185 = Mem0[v185:word16]
	v186 = Mem0[0x5426:ptr16]
	Mem0[v186:word16] = v185 + 0x0001
	NZV = cond(v186)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v187)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x539F
	NZ = cond(v188)
	V = false
	call fn0D7A (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53A8
	NZ = cond(v190)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5810
	NZ = cond(v191)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x53AE
	NZ = cond(v193)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x5828
	NZ = cond(v194)
	V = false
	call fn0B44 (retsize: 2; FPU: 2;)
	call fn0EA8 (retsize: 2; FPU: 2;)
	// succ:  l452C
l452C:
	v148 = Mem0[0x5426:ptr16]
	Mem0[v148:word16] = 0x0038
	NZ = cond(v148)
	V = false
	return
	// succ:  fn4230_exit
fn4230_exit:


// fn4534
// Return size: 0
void fn4534()
fn4534_entry:
	// succ:  l4534
l4534:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v7 = Mem0[r0 + 0x15FF:word16] | Mem0[sp:word16]
	Mem0[r0 + 0x15FF:word16] = v7
	NZ = cond(v7)
	V = false
	NZVC = __bpt()
fn4534_exit:


// fn457C
// Return size: 2
void fn457C()
fn457C_entry:
	// succ:  l457C
l457C:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	r0 = r0 | Mem0[pc:word16]
	NZ = cond(r0)
	V = false
	v9 = Mem0[0x5426:ptr16]
	Mem0[v9:word16] = 0x0003
	NZ = cond(v9)
	V = false
	Mem0[0x586E:byte] = 0x9B
	NZ = cond(v10)
	V = false
	v11 = Mem0[0x5426:ptr16]
	v11 = Mem0[v11:word16]
	v12 = Mem0[0x5426:ptr16]
	Mem0[v12:word16] = v11 + 0x0001
	NZV = cond(v12)
	Mem0[0x586F:byte] = 0x5B
	NZ = cond(v14)
	V = false
	v15 = Mem0[0x5426:ptr16]
	v15 = Mem0[v15:word16]
	v16 = Mem0[0x5426:ptr16]
	Mem0[v16:word16] = v15 + 0x0001
	NZV = cond(v16)
	Mem0[0x5870:byte] = 0x3F
	NZ = cond(v17)
	V = false
	v18 = Mem0[0x5426:ptr16]
	v18 = Mem0[v18:word16]
	v19 = Mem0[0x5426:ptr16]
	Mem0[v19:word16] = v18 + 0x0001
	NZV = cond(v19)
	Mem0[0x5871:byte] = 0x32
	NZ = cond(v20)
	V = false
	v21 = Mem0[0x5426:ptr16]
	v21 = Mem0[v21:word16]
	v22 = Mem0[0x5426:ptr16]
	Mem0[v22:word16] = v21 + 0x0001
	NZV = cond(v22)
	Mem0[0x5872:byte] = 0x6C
	NZ = cond(v23)
	V = false
	v24 = Mem0[0x5426:ptr16]
	v24 = Mem0[v24:word16]
	v25 = Mem0[0x5426:ptr16]
	Mem0[v25:word16] = v24 + 0x0001
	NZV = cond(v25)
	r5 = 0x53D2
	NZ = cond(r5)
	V = false
	call fn4534 (retsize: 2; FPU: 2;)
	v28 = Mem0[0x5426:ptr16]
	v28 = Mem0[v28:word16]
	v29 = Mem0[0x5426:ptr16]
	Mem0[v29:word16] = v28 + 0x0001
	NZV = cond(v29)
	return
	// succ:  fn457C_exit
fn457C_exit:


// fn45C8
// Return size: 2
void fn45C8()
fn45C8_entry:
	// succ:  l45C8
l45C8:
	sp = fp
	call fn0EF8 (retsize: 2; FPU: 2;)
	v7 = Mem0[Mem0[r0:word16]:ptr16] | Mem0[pc:word16]
	Mem0[r0:word16] = v7
	r0 = r0 + 0x0002
	NZ = cond(v7)
	V = false
	v10 = Mem0[0x5426:ptr16]
	Mem0[v10:word16] = 0x0003
	NZ = cond(v10)
	V = false
	Mem0[0x5874:byte] = 0x9B
	NZ = cond(v11)
	V = false
	v12 = Mem0[0x5426:ptr16]
	v12 = Mem0[v12:word16]
	v13 = Mem0[0x5426:ptr16]
	Mem0[v13:word16] = v12 + 0x0001
	NZV = cond(v13)
	Mem0[0x5875:byte] = 0x3C
	NZ = cond(v15)
	V = false
	v16 = Mem0[0x5426:ptr16]
	v16 = Mem0[v16:word16]
	v17 = Mem0[0x5426:ptr16]
	Mem0[v17:word16] = v16 + 0x0001
	NZV = cond(v17)
	r5 = 0x53E4
	NZ = cond(r5)
	V = false
	call fn4534 (retsize: 2; FPU: 2;)
	v20 = Mem0[0x5426:ptr16]
	v20 = Mem0[v20:word16]
	v21 = Mem0[0x5426:ptr16]
	Mem0[v21:word16] = v20 + 0x0001
	NZV = cond(v21)
	return
	// succ:  fn45C8_exit
fn45C8_exit:


// fn45F6
// Return size: 2
void fn45F6()
fn45F6_entry:
	// succ:  l45F6
l45F6:
	sp = fp
	sp = sp - 0x0002
	Mem0[sp:word16] = r5
	NZ = cond(v4)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v8)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r1
	NZ = cond(v10)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v12)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r2
	NZ = cond(v14)
	V = false
	r4 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l4602
l4602:
	r2 = r2 - 0x000A
	NZVC = cond(r2)
	branch Test(LT,N) l460C
	// succ:  l4608 l460C
l4608:
	r4 = r4 + 0x0001
	NZV = cond(r4)
	goto l4602
	// succ:  l4602
l460C:
	r2 = r2 + 0x000A
	NZVC = cond(r2)
	v20 = r4
	v20 = v20 & v20
	NZ = cond(v20)
	C = false
	V = false
	branch Test(NE,Z) l461A
	// succ:  l4614 l461A
l4614:
	r4 = r4 + r2
	NZVC = cond(r4)
	r2 = 0xFFE2
	NZ = cond(r2)
	V = false
	// succ:  l461A
l461A:
	r4 = r4 + 0x001E
	NZVC = cond(r4)
	sp = sp - 0x0002
	Mem0[sp:word16] = r4
	NZ = cond(v21)
	V = false
	r4 = r4 << 1
	NZVC = cond(r4)
	r4 = r4 << 1
	NZVC = cond(r4)
	v22 = Mem0[sp:word16]
	sp = sp + 0x0002
	r4 = r4 + v22
	NZVC = cond(r4)
	r4 = r4 << 1
	NZVC = cond(r4)
	r4 = r4 << 1
	NZVC = cond(r4)
	r4 = r4 << 1
	NZVC = cond(r4)
	branch Test(GT,N) l4614
	// succ:  l462E l4614
l462E:
	r5 = r0
	NZ = cond(r5)
	V = false
	r5 = r5 + 0x0006
	NZVC = cond(r5)
	r2 = Mem0[r5:word16]
	NZ = cond(r2)
	V = false
	branch Test(NE,Z) l465A
	// succ:  l4638 l465A
l4638:
	v24 = r4
	Mem0[r5:word16] = v24
	r5 = r5 + 0x0002
	NZ = cond(v24)
	V = false
	r1 = 0x47E4
	NZ = cond(r1)
	V = false
	// succ:  l463E
l463E:
	v26 = Mem0[r1:word16]
	v26 = v26 & v26
	NZ = cond(v26)
	C = false
	V = false
	branch Test(EQ,Z) l464A
	// succ:  l4642 l464A
l4642:
	v29 = Mem0[sp:word16] - Mem0[r1:word16]
	NZVC = cond(v29)
	branch Test(EQ,Z) l464A
	// succ:  l4646 l464A
l4646:
	v30 = Mem0[r1:word16]
	r1 = r1 + 0x0002
	v31 = Mem0[r1:word16]
	r1 = r1 + 0x0002
	v32 = v31 - v30
	NZVC = cond(v32)
	goto l463E
	// succ:  l463E
l464A:
	r1 = r1 - 0x0002
	r2 = Mem0[r1:word16]
	NZ = cond(r2)
	V = false
	v37 = 0x28AE
	Mem0[r5:word16] = v37
	r5 = r5 + 0x0002
	NZ = cond(v37)
	V = false
	v38 = r4
	Mem0[r5:word16] = v38
	r5 = r5 + 0x0002
	NZ = cond(v38)
	V = false
	v39 = 0x193C
	Mem0[r5:word16] = v39
	NZ = cond(v39)
	V = false
	r5 = r5 - 0x0006
	NZVC = cond(r5)
	// succ:  l465A
l465A:
	v34 = Mem0[r0:word16]
	v34 = v34 & v34
	NZ = cond(v34)
	C = false
	V = false
	branch Test(LT,N) l4662
	// succ:  l465E l4662
l465E:
	v35 = Mem0[r0:word16] | 0x0100
	Mem0[r0:word16] = v35
	NZ = cond(v35)
	V = false
	// succ:  l4662
l4662:
	r0 = Mem0[r3 + 0x0010:word16]
	NZ = cond(r0)
	V = false
	sp = sp - 0x0002
	Mem0[sp:word16] = r0
	NZ = cond(v42)
	V = false
	r1 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	// succ:  l466A
l466A:
	r1 = r1 + 0x0001
	NZV = cond(r1)
	branch Test(OV,V) l46C2
	// succ:  l466E l46C2
l466E:
	r0 = __ror(r0, r0)
	NZVC = cond(r0)
	branch Test(ULT,C) l466A
	// succ:  l4672 l466A
l4672:
	Mem0[r5 + 0x000B:byte] = r1
	NZ = cond(v43)
	V = false
	Mem0[r5 + 0x000B:byte] = Mem0[r5 + 0x000B:byte] - 0x01
	NZV = cond(v45)
	C = true
	// succ:  l467C
l467C:
	r0 = __rol(r0, r0)
	NZVC = cond(r0)
	r1 = r1 - 0x0001
	NZV = cond(r1)
	branch Test(NE,Z) l467C
	// succ:  l4682 l467C
l4682:
	Mem0[r3 + 0x0010:word16] = r0
	NZ = cond(v46)
	V = false
	call fn13FE (retsize: 2; FPU: 2;)
	r4 = Mem0[r3 + 0x0050:word16]
	NZ = cond(r4)
	V = false
	r1 = r5
	NZ = cond(r1)
	V = false
	r0 = 0x474C
	NZ = cond(r0)
	V = false
	r5 = Mem0[0x0026:word16]
	NZ = cond(r5)
	V = false
	branch Test(EQ,Z) l46BA
	// succ:  l469A l46BA
l469A:
	r5 = r5 + 0x1000
	NZVC = cond(r5)
	v51 = 0x474E - r5
	NZVC = cond(v51)
	branch Test(ULE,ZC) l46BA
	// succ:  l46A4 l46BA
l46A4:
	r5 = 0x47E0
	NZ = cond(r5)
	V = false
	v54 = r5 - Mem0[0x0026:word16]
	NZVC = cond(v54)
	branch Test(UGE,C) l46BA
	// succ:  l46AE l46BA
l46AE:
	sp = sp - 0x0002
	Mem0[sp:word16] = 0x099E
	NZ = cond(v55)
	V = false
	// succ:  l46B2
l46B2:
	r5 = r5 - 0x0002
	sp = sp - 0x0002
	Mem0[sp:word16] = Mem0[r5:word16]
	NZ = cond(v57)
	V = false
	v58 = r0 - r5
	NZVC = cond(v58)
	branch Test(UGT,ZC) l46B2
	// succ:  l46B8 l46B2
l46B8:
	r0 = sp
	NZ = cond(r0)
	V = false
	// succ:  l46BA
l46BA:
	call r0 (retsize: 2; FPU: 2;)
	r4 = r4 << 1
	NZVC = cond(r4)
	call Mem0[r4 + 0x46C4:word16] (retsize: 4; FPU: 2;)
	return
	// succ:  fn45F6_exit
l46C2:
	__syscall(0x899F)
	__syscall(0x899B)
	__syscall(0x899C)
	__syscall(0x899D)
	// succ:  l4712
l4712:
	v62 = Mem0[sp:word16]
	sp = sp + 0x0002
	Mem0[r3 + 0x0010:word16] = v62
	NZ = cond(v63)
	V = false
	v64 = Mem0[r1 + 0xFFFA:word16] | 0x0080
	Mem0[r1 + 0xFFFA:word16] = v64
	NZ = cond(v64)
	V = false
	Mem0[r1 + 0x000A:byte] = 0x00
	C = false
	V = false
	N = false
	Z = true
	v66 = Mem0[sp:word16]
	sp = sp + 0x0002
	r2 = v66
	NZ = cond(r2)
	V = false
	v67 = Mem0[sp:word16]
	sp = sp + 0x0002
	r0 = v67
	NZ = cond(r0)
	V = false
	Mem0[r0 + 0x0018:word16] = 0x0000
	C = false
	V = false
	N = false
	Z = true
	v69 = Mem0[r0:word16] & 0x0018
	Mem0[r0:word16] = v69
	NZ = cond(v69)
	V = false
	branch Test(EQ,Z) l4736
	// succ:  l472E l4736
l472E:
	v70 = Mem0[r0:word16] & 0x0010
	Mem0[r0:word16] = v70
	NZ = cond(v70)
	V = false
	branch Test(EQ,Z) l4740
	// succ:  l4734 l4740
l4734:
	goto 0x473C
	goto l473C
	// succ:  l473C
l4736:
	v71 = Mem0[r0:word16] & 0x0480
	Mem0[r0:word16] = v71
	NZ = cond(v71)
	V = false
	branch Test(EQ,Z) l4740
	// succ:  l473C l4740
l473C:
	v72 = Mem0[r0:word16] | 0x0020
	Mem0[r0:word16] = v72
	NZ = cond(v72)
	V = false
	// succ:  l4740
l4740:
	v73 = Mem0[r0:word16] | 0x0800
	Mem0[r0:word16] = v73
	NZ = cond(v73)
	V = false
	v74 = Mem0[sp:word16]
	sp = sp + 0x0002
	r1 = v74
	NZ = cond(r1)
	V = false
	v75 = Mem0[sp:word16]
	sp = sp + 0x0002
	r4 = v75
	NZ = cond(r4)
	V = false
	v76 = Mem0[sp:word16]
	sp = sp + 0x0002
	r5 = v76
	NZ = cond(r5)
	V = false
	return
	// succ:  fn45F6_exit
fn45F6_exit:


// fn5A90
// Return size: 2
void fn5A90()
fn5A90_entry:
	// succ:  l5A90
l5A90:
	sp = fp
	v4 = Mem0[r5:word16]
	r5 = r5 + 0x0002
	v5 = v4
	v5 = v5 & v5
	NZ = cond(v5)
	C = false
	V = false
	r0 = 0x0000
	C = false
	V = false
	N = false
	Z = true
	r1 = Mem0[0x0024:word16]
	NZ = cond(r1)
	V = false
	v14 = Mem0[0x0024:word16] | 0x5040
	Mem0[0x0024:word16] = v14
	NZ = cond(v14)
	V = false
	C = TTYIN(out r0)
	return
	// succ:  fn5A90_exit
fn5A90_exit:


