void fn0128()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0
// Preserved: sp
fn0128_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0128:
	__wait()
	word16 r0_4 = Mem0[0x006C:word16]
	branch r0_4 == 0x0000 l013C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0130:
	Mem8[0x006C:word16] = 0x0000
	Mem10[0x006E:word16] = r0_4
	fn053A()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l013C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0128_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0242(word16 r0, word16 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0242_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0242_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0242:
	Mem7[0x0080:word16] = 0x0000
	Mem8[0x0082:word16] = 0x0000
	Mem10[0x0086:word16] = 0x7FFF
	word16 r4_14 = r0
	word16 r5_6 = r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0254:
	word16 wLoc02_100 = 0x0000
	word16 r3_29
	word16 r2_28 = fn02C8(r4_14 + 0x0002, out r3_29, out r4_14)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l027A:
	word16 r2_36 = r2_28 - Mem21[0x0080:word16]
	branch r2_36 > 0x0000 l0288
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0282:
	r2_36 = -r2_36
	wLoc02_100 = 0x2000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0288:
	word16 r2_46 = __swab(r2_36 & ~0xFFC0)
	word16 r2_47 = __ror(r2_46, r2_46)
	Mem49[0x0080:word16] = r2_28
	word16 r3_52 = r3_29 - Mem49[0x0082:word16]
	branch r3_52 > 0x0000 l02A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l029C:
	r3_52 = -r3_52
	wLoc02_100 = wLoc02_100 | 0x0040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02A2:
	Mem64[0x0082:word16] = r3_29
	word16 r3_62 = r3_52 & ~0xFFC0
	branch Mem64[0x0086:word16] - r3_29 >= 0x0000 l02B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02B0:
	Mem68[0x0086:word16] = r3_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02B4:
	Mem89[r5_6:word16] = r3_62 | r2_47 | wLoc02_100
	r5_6 = r5_6 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn02C8(word16 r4, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..15]
// LiveOut: r2 r3 r4
// Trashed: NZVC r0 r1 r2 r3 r4
// Preserved: sp
fn02C8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02C8:
	word16 r2_13
	fn125E((int16) Mem0[r4:byte], Mem0[0x004A:word16], out r2_13)
	word16 r2_27
	fn125E((int16) Mem20[r4 + 0x0001:byte], Mem20[0x004C:word16], out r2_27)
	word16 r2_42
	fn125E((int16) Mem34[r4:byte], Mem34[0x004C:word16], out r2_42)
	word16 r2_58
	fn125E((int16) Mem49[r4 + 0x0001:byte], Mem49[0x004A:word16], out r2_58)
	r3Out = r2_27 - r2_13
	r4Out = r4 + 0x0002
	return r2_58 + r2_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn02C8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0300(word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..15]
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3
// Preserved: sp
fn0300_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0300:
	branch Mem0[0x0068:word16] == 0x0000 l03A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03A8:
	Mem10[0x25C0:word16] = 0xF700
	Mem11[0x0066:word16] = 0x0000
	Mem12[0x006A:word16] = 0x37DC
	Mem14[0x006A:word16] = Mem12[0x006A:word16] + Mem12[0x0068:word16]
	Mem15[0x004E:word16] = 0x0000
	Mem16[0x0050:word16] = 0x0000
	Mem18[0x0052:word16] = 0xF592
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0306:
	word16 r3_64
	word16 r2_26
	word16 r3_27
	fn114A(Mem0[0x0064:word16], 0x2904, out r2_26, out r3_27)
	word16 r3_36
	fn126C(0x0064, r2_26, r3_27, out r3_36)
	Mem41[0x0066:word16] = r3_36
	word16 r2_46
	word16 r3_47
	fn114A(Mem41[0x006E:word16], r3_36, out r2_46, out r3_47)
	word16 r3_56
	fn126C(0x05DC, r2_46, r3_47, out r3_56)
	word16 r3_61 = r3_56 - Mem41[0x0068:word16]
	branch r3_61 < 0x0000 l0340
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0340:
	r3_64 = -r3_61
	branch Mem41[0x25C0:word16] == 0x0000 l0358
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0348:
	branch 0x07D0 - r3_64 >= 0x0000 l0358
// DataOut:
// DataOut (flags):
// SymbolicIn:

l034E:
	Mem74[0x25C0:word16] = 0x0000
	Mem77[0xF402:word16] = Mem74[0xF402:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0336:
	Mem82[0x25C0:word16] = 0xF700
	r3_64 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0358:
	Mem87[0x0068:word16] = r3_64
	word16 r3_94
	fn126C(0x000A, 0x0000, r3_64, out r3_94)
	Mem101[0x006A:word16] = r3_94 + 0x37DC
	word16 r2_106
	word16 r3_107
	fn114A(Mem101[0x0066:word16], 0x3ED7, out r2_106, out r3_107)
	word16 r3_118
	fn126C(r4, r2_106, r3_107, out r3_118)
	Mem123[0x004E:word16] = r3_118
	word16 r2_130
	fn125E(r3_118, Mem123[0x004A:word16], out r2_130)
	Mem136[0x0050:word16] = r2_130
	word16 r2_143
	fn125E(Mem136[0x004E:word16], Mem136[0x004C:word16], out r2_143)
	Mem151[0x0052:word16] = r2_143 - 0x0A6E
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0300_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn03CE(word16 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn03CE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn03CE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03CE:
	word16 r2_10 = (int16) Mem0[(Mem0[0x0064:word16] >> 3) + 0x2766:byte]
	Mem11[0x008A:word16] = Mem0[0x008A:word16] + 0x0001
	word16 r2_15 = r2_10 + (int16) Mem11[(Mem11[0x008A:word16] & ~0xFFE0) + 0x2773:byte]
	Mem17[0x008C:word16] = Mem11[0x008C:word16] + r2_15
	word16 r4_20 = 0x000C
	word16 r5_21 = 0x27B0
	word16 r3_22 = (Mem17[0x008C:word16] & ~0xFFFC) + 0x2793
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0408:
	Mem30[r5_21:byte] = Mem25[r3_22:byte]
	word16 r5_31 = r5_21 + 0x0001
	Mem34[r5_31:byte] = r2_15
	r3_22 = r3_22 + 0x0001
	r5_21 = r5_31 + 0x0007
	r4_20 = r4_20 - 0x0001
	branch r4_20 > 0x0000 l0408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0414:
	Mem41[0x0090:word16] = Mem34[0x0090:word16] + 0x0001
	Mem43[0x0090:word16] = Mem41[0x0090:word16] & ~0xFFFC
	Mem45[0x008E:word16] = Mem43[0x008E:word16] + 0x0180
	Mem48[0x008E:word16] = Mem45[0x008E:word16] & ~0xFC7F
	Mem49[0x27A8:word16] = 0x8C54
	Mem51[0x27A8:word16] = Mem49[0x27A8:word16] | Mem49[0x0090:word16]
	Mem53[0x27A8:word16] = Mem51[0x27A8:word16] | Mem51[0x008E:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0440_thunk_fn0242:
	fn0242(0x27A2, r0)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0444()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0
// Preserved: sp
fn0444_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0444:
	word16 r0_12 = Mem0[0x0046:word16]
	branch r0_12 > 0x0000 l0458
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0458:
	branch 0x00B4 - r0_12 <= 0x0000 l0464
// DataOut:
// DataOut (flags):
// SymbolicIn:

l045E:
	r0_12 = r0_12 - 0x0168
	branch r0_12 < 0x0000 l0458
// DataOut:
// DataOut (flags):
// SymbolicIn:

l044A:
	branch 0xFF4C - r0_12 > 0x0000 l0464
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0450:
	r0_12 = r0_12 + 0x0168
	branch r0_12 > 0x0000 l0464
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0464:
	Mem23[0x0046:word16] = r0_12
	branch v12 > 0x0000 l046E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l046A:
	r0_12 = r0_12 + 0x0168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l046E:
	word16 r0_34 = r0_12 << 1
	Mem36[0x004A:word16] = Mem23[r0_34 + 0x31DC:word16]
	branch 0x021C - r0_34 < 0x0000 l0480
// DataOut:
// DataOut (flags):
// SymbolicIn:

l047C:
	r0_34 = r0_34 - 0x02D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0480:
	Mem44[0x004C:word16] = Mem36[r0_34 + 0x3290:word16]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0444_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0456:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0488()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3
// Preserved: sp
fn0488_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0488:
	word16 r1_14 = Mem0[0x0050:word16]
	branch r1_14 > 0x0000 l0490
// DataOut:
// DataOut (flags):
// SymbolicIn:

l048E:
	r1_14 = -r1_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0490:
	word16 r2_15
	word16 r3_16
	fn114A(Mem0[0x006E:word16], r1_14, out r2_15, out r3_16)
	word16 r3_25
	fn126C(0x0BB8, r2_15, r3_16, out r3_25)
	branch Mem0[0x0050:word16] > 0x0000 l04A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04A6:
	r3_25 = -r3_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04A8:
	word16 r3_42 = (r3_25 >> 1) + Mem0[0x0054:word16]
	Mem44[0x0054:word16] = Mem0[0x0054:word16] + r3_25
	word16 r1_50 = r3_42
	branch r3_42 > 0x0000 l04BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04BA:
	r1_50 = -r3_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04BC:
	word16 r2_61
	word16 r3_62
	fn114A(Mem49[0x006E:word16], r1_50, out r2_61, out r3_62)
	word16 r3_68 = r3_62 + Mem49[0x0056:word16]
	word16 r3_74
	word16 r2_73 = fn126C(0x0258, r2_61 + (r3_68 <u 0x0000), r3_68, out r3_74)
	branch r3_42 > 0x0000 l04D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04D6:
	r3_74 = -r3_74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04D8:
	Mem93[0x005C:word16] = Mem49[0x005C:word16] + r3_74
	Mem96[0x0056:word16] = r2_73
	word16 r1_101 = Mem96[0x0052:word16]
	branch r1_101 > 0x0000 l04E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04E6:
	r1_101 = -r1_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04E8:
	word16 r2_108
	word16 r3_109
	fn114A(Mem96[0x006E:word16], r1_101, out r2_108, out r3_109)
	word16 r3_118
	fn126C(0x0BB8, r2_108, r3_109, out r3_118)
	branch Mem96[0x0052:word16] > 0x0000 l0500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04FE:
	r3_118 = -r3_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0500:
	word16 r3_135 = (r3_118 >> 1) + Mem96[0x0058:word16]
	Mem137[0x0058:word16] = Mem96[0x0058:word16] + r3_118
	word16 r1_144 = r3_135
	branch r3_135 > 0x0000 l0514
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0512:
	r1_144 = -r3_135
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0514:
	word16 r2_155
	word16 r3_156
	fn114A(Mem143[0x006E:word16], r1_144, out r2_155, out r3_156)
	word16 r3_162 = r3_156 + Mem143[0x005A:word16]
	word16 r3_168
	word16 r2_167 = fn126C(0x0258, r2_155 + (r3_162 <u 0x0000), r3_162, out r3_168)
	branch r3_135 > 0x0000 l0530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l052E:
	r3_168 = -r3_168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0530:
	Mem187[0x005E:word16] = Mem143[0x005E:word16] + r3_168
	Mem190[0x005A:word16] = r2_167
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0488_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn053A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5
// Preserved: sp
l05E2:
	fn03CE(0x3588)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05F2:
	Mem77[0x34C2:word16] = 0x0000
	def sp
	def r2
	def r3
	def r1
	def r0
	def pc
	def wLoc02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05F6:
	r4_85 = Mem77[0x0072:word16]
	branch r4_85 < 0x0000 l0668
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05FC:
	branch 0x000A - r4_85 <= 0x0000 l0668
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0668:
	r0_92 = 0x000D
	r1_93 = 0x1FFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0602:
	branch 0x037A - r4_85 >= 0x0000 l0672
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0672:
	r0_99 = 0x0377
	r1_100 = 0x201C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0608:
	r4_103 = Mem77[0x005E:word16]
	branch r4_103 < 0x0000 l06B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l060E:
	branch 0x61A8 - r4_103 >= 0x0000 l067C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l067C:
	r0_110 = r4_103
	r1_111 = 0x2062
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0682:
	r1_122 = PHI((r1_93, l0668), (r1_111, l067C), (r1_100, l0672))
	r0_114 = PHI((r0_92, l0668), (r0_110, l067C), (r0_99, l0672))
	Mem121[0x005C:word16] = (r0_114 << 5) - 0x5780
	Mem123[0x34CA:word16] = r1_122
	Mem124[0x0068:word16] = 0x0000
	Mem125[0x0054:word16] = 0x0000
	r3_126 = Mem125[0x005E:word16]
	r3_128 = r3_126 >> 2
	branch r3_126 >> 2 < 0x0000 l06AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06AA:
	r3_131 = -(r3_126 >> 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06AC:
	r3_133 = PHI((r3_128, l0682), (r3_131, l06AA))
	Mem134[0x0058:word16] = r3_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0614:
	branch 0x01C2 - r4_103 <= 0x0000 l06B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06B4:
	branch Mem77[sp:word16] - Mem77[0x009E:word16] == 0x0000 l0792
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0792:
	r0_151 = Mem77[0x005C:word16] - Mem77[0x0076:word16]
	branch 0x001E - r0_151 <= 0x0000 l07AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07AE:
	r0_156 = Mem77[0x0072:word16] - 0x0011
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A0:
	branch 0x0244 - r0_151 < 0x0000 l06E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06E8:
	r3_196 = r0_151 * 0x0003 >> 1
	Mem197[0x34B4:word16] = r3_196
	r2_203 = fn126C(0x0030, 0x0000, r3_196, out r3_204)
	r3_209 = r3_204 + Mem197[0x0074:word16]
	Mem210[0x0078:word16] = r3_209
	fn123A(0x0030 - r2_203, Mem210[(r3_209 << 1) + 0x28F0:word16], out r2_433, out r3_221)
	Mem229[sp - 0x0002:word16] = r3_221
	fn123A(r2_203, Mem229[(r3_209 << 1) + 0x28F2:word16], out r2_434, out r3_235)
	r3_246 = r3_235 + Mem229[sp - 0x0002:word16]
	branch r3_246 > 0x0000 l073A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l073A:
	fn126C(0x0030, 0x0000, r3_246, out r3_250)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0730:
	fn126C(0x0030, 0x0000, -r3_246, out r3_258)
	r3_263 = -r3_258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l073E:
	r3_265 = PHI((r3_263, l0730), (r3_250, l073A))
	Mem270[0x007C:word16] = r3_265 >> 2
	r4_276 = fn100C(r3_265)
	Mem281[0x007A:word16] = r4_276
	r3_286 = Mem281[0x005E:word16] * 0x0003 >> 1
	Mem288[0x34B6:word16] = r3_286 + 0x0017
	Mem290[0x34B6:word16] = Mem288[0x34B6:word16] + 0x0018
	r3_291 = r3_286 + 0x0017 - r4_276
	branch r3_291 > 0x0000 l0772
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0770:
	r3_297 = -r3_291
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0772:
	r3_301 = PHI((r3_291, l073E), (r3_297, l0770))
	fn126C(0x0003, 0x0000, r3_301 << 1, out r3_305)
	branch r3_291 > 0x0000 l0784
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0782:
	r3_317 = -r3_305
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0784:
	r3_319 = PHI((r3_305, l0772), (r3_317, l0782))
	Mem320[0x007E:word16] = r3_319
	fn0856(pc, wLoc02)
	fn0A0A()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l078C_thunk_fn0790:
	fn0790()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A6:
	r0_162 = Mem77[0x0072:word16] - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06BA:
	r0_165 = Mem77[0x0072:word16] - 0x0009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06C2:
	r0_167 = PHI((r0_165, l06BA), (r0_162, l07A6), (r0_156, l07AE))
	Mem168[0x0074:word16] = r0_167
	r0_174 = (r0_167 << 5) - 0x5780
	Mem176[0x0076:word16] = r0_174
	fn0F04(r0_174, r1, r2, r3, r4_103)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l061A:
	Mem355[0x34B4:word16] = Mem77[0x0072:word16]
	r4_361 = (r4_103 >> 5) + 0x002B
	Mem362[0x34B6:word16] = r4_361
	branch Mem362[0x009E:word16] == 0x0000 l0640
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0640:
	fn1578(r0, pc)
	branch Mem362[0x007E:word16] > 0x0010 l0666
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0666:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l064E:
	r0_382 = fn0E06(0x0280, out r1_383, out r3_384, out r4_385)
	Mem392[0x009E:word16] = sp_387
	fn0CEC(r0_382, r1_383, r2, r3_384, r4_385)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0638:
	fn0CEC(r0, r1, r2, r3, r4_361)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn053A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn053A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l053A:
	Mem3[0x0084:word16] = 0xFFC0
	r5_4 = Mem3[0x0044:word16]
	Mem5[0x0044:word16] = 0x0000
	r0_7 = Mem5[0x006E:word16]
	r1_8 = r5_4
	branch r5_4 > 0x0000 l0552
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0550:
	r1_12 = -r5_4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0552:
	r1_15 = PHI((r1_8, l053A), (r1_12, l0550))
	fn114A(r0_7, r1_15, out r2_16, out r3_17)
	r3_24 = r3_17 + Mem5[0x0048:word16]
	r2_29 = fn126C(0x003C, r2_16 + (r3_24 <u 0x0000), r3_24, out r3_30)
	branch r5_4 > 0x0000 l056A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0568:
	r3_42 = -r3_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l056A:
	r3_45 = PHI((r3_30, l0552), (r3_42, l0568))
	Mem47[0x0046:word16] = Mem5[0x0046:word16] + r3_45
	Mem50[0x0048:word16] = r2_29
	fn0444()
	Mem62[0x0092:word16] = Mem50[0x0092:word16] + 0x0002
	fn0242(0x26D8, Mem62[(Mem62[0x0092:word16] & ~0xFFFD) + 0x34AC:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0790()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
l0790:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0790_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0790:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0790_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0856(word16 pc, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] Stack +0000:[0..15]
// LiveOut:
// Trashed: NZVC r0 r1 r4 r5
// Preserved: sp
l083E_thunk_fn0790:
	fn0790()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0826:
	branch Mem0[0x0066:word16] == 0x0000 l082A_thunk_fn0790
// DataOut:
// DataOut (flags):
// SymbolicIn:

l082A_thunk_fn0790:
	fn0790()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l082C:
	Mem369[sp - 0x0002:word16] = 0x0000
	Mem373[sp - 0x0004:word16] = r0
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	fn0C90(stackArg0, Mem373[sp - 0x0004:word16], Mem373[sp - 0x0002:word16])
	Mem382[0x34CA:word16] = 0x23B8
	fn0F04(r0, r1, r2, r3, r4)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0824_thunk_fn0790:
	fn0790()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0856_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0856:
	fn1578(r0, pc)
	word16 sp_196 = fp
	word16 r5_10 = Mem9[0x007E:word16]
	branch r5_10 < 0x0000 l08B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08B2:
	branch 0xFFF6 - r5_10 <= 0x0000 l0904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0860:
	branch 0x0003 - r5_10 <= 0x0000 l08B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08B8:
	Mem20[0x0060:word16] = 0x0000
	Mem21[0x25AA:word16] = 0x01C2
	Mem22[0x34C2:word16] = 0x0000
	Mem23[0x34D2:word16] = 0x0000
	branch r5_10 == 0x0000 l08D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08CE:
	branch r5_10 > 0x0000 l0888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08D0:
	word16 r4_33 = Mem23[0x0058:word16]
	branch 0xFDA8 - r4_33 <= 0x0000 l0904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08DA:
	word16 r0_138
	branch 0xFED4 - r4_33 <= 0x0000 l08FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08FE:
	r0_138 = 0x21CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08E0:
	branch 0xFF6A - r4_33 <= 0x0000 l08F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08F8:
	r0_138 = 0x21A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08E6:
	branch 0xFFB0 - r4_33 <= 0x0000 l08F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08F2:
	r0_138 = 0x2176
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08EC:
	r0_138 = 0x214E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l091E:
	word16 r0_153
	word16 r1_154
	Mem137[0x34C2:word16] = 0x0000
	Mem139[0x34CA:word16] = r0_138
	branch 0x0064 - Mem139[0x0054:word16] > 0x0000 l0964
// DataOut:
// DataOut (flags):
// SymbolicIn:

l092E:
	branch 0xFF9C - Mem139[0x0054:word16] < 0x0000 l0964
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0936:
	branch 0xFFF1 - Mem139[0x0046:word16] < 0x0000 l096E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l093E:
	branch 0x000F - Mem139[0x0046:word16] > 0x0000 l096E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l096E:
	r0_153 = Mem139[0x0046:word16]
	r1_154 = 0x2258
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0946:
	word16 r1_157 = Mem139[0x0078:word16]
	r0_153 = Mem139[(r1_157 << 1) + 0x28F2:word16] - Mem139[(r1_157 << 1) + 0x28F0:word16]
	word16 r2_162 = r0_153
	branch r0_153 > 0x0000 l095A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0958:
	r2_162 = -r0_153
// DataOut:
// DataOut (flags):
// SymbolicIn:

l095A:
	branch 0x0030 - r2_162 >= 0x0000 l0978
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0978:
	r1_154 = 0x2314
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0960:
	fn0B06(r3, r4_33, r5_10, pc)
	sp_196 = fp + 0xFFFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0964:
	r0_153 = Mem139[0x0054:word16]
	r1_154 = 0x22C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l097C:
	Mem204[0x34C2:word16] = r1_154
	word16 r1_205 = Mem204[0x0078:word16]
	word16 sp_209 = sp_196 - 0x0002
	Mem210[sp_209:word16] = 0x0003
	branch r0_153 < 0x0000 l098E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l098C:
	Mem219[sp_209:word16] = Mem210[sp_209:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l098E:
	Mem224[sp_209 - 0x0002:word16] = r1_205
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word16 sp_236
	fn0C90(stackArg0, Mem224[sp_209 - 0x0002:word16], Mem224[sp_209:word16])
	word16 r2_243 = Mem224[(r1_205 << 1) + 0x28F2:word16] - Mem224[(r1_205 << 1) + 0x28F0:word16]
	word16 r2_249 = r2_243 - (r2_243 * 0x0003 >> 2)
	word16 r2_252 = r2_249 + (r2_249 >> 1)
	branch r2_252 > 0x0000 l09BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09BE:
	branch 0x002D - r2_252 <= 0x0000 l09C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09C4:
	r2_252 = 0x002D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09B2:
	branch 0xFFD3 - r2_252 >= 0x0000 l09C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09B8:
	r2_252 = 0xFFD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09C8:
	word16 r3_267 = 0x005A
	branch r0_153 > 0x0000 l09D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09D0:
	r3_267 = -0x005A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09D2:
	Mem282[0x0046:word16] = r2_252 + r3_267
	word16 r1_286 = Mem282[0x0092:word16] + 0x0002 & ~0xFFFD
	Mem287[0x0092:word16] = r1_286
	word16 r1_288 = Mem287[r1_286 + 0x34AC:word16]
	Mem292[sp_236 - 0x0002:word16] = r1_288
	fn0444()
	fn0242(0x26D8, r1_288)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0866:
	r4 = Mem9[0x0058:word16]
	branch 0xFDA8 - r4 < 0x0000 l089A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l089A:
	Mem62[0x34CA:word16] = 0x20AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0870:
	branch 0xFED4 - r4 < 0x0000 l08A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08A2:
	Mem69[0x34CA:word16] = 0x20D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0876:
	branch 0xFF6A - r4 < 0x0000 l08AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08AA:
	Mem76[0x34CA:word16] = 0x210A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l087C:
	branch 0x210A - Mem9[0x34CA:word16] != 0x0000 l0888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0884:
	Mem83[0x34CA:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0888:
	word16 r0_89 = Mem88[0x0078:word16]
	fn0CCA(r4, r0_89)
	switch (wArg00) { l0896_thunk_fn0790 l07EE }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07EE:
	branch 0x001A - r5_10 > 0x0000 l07F2_thunk_fn0790
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07F2_thunk_fn0790:
	fn0790()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07F4:
	word16 v79_115 = 0xFDA8 - r4
	branch v79_115 <= 0x0000 l084A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l084A:
	branch v79_115 <= 0x0000 l0904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0904:
	Mem118[0x34CA:word16] = 0x2212
	word16 r1_123
	word16 r3_124
	word16 r4_125
	fn0F04(fn0E06(0x0020, out r1_123, out r3_124, out r4_125), r1_123, r2, r3_124, r4_125)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l084C:
	Mem314[0x34CA:word16] = 0x23FE
	r0 = fn0E32()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07FA:
	Mem325[0x34CA:word16] = 0x237E
	word16 wLoc02_413 = 0x0003
	branch Mem327[0x0054:word16] < 0x0000 l080C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l080A:
	wLoc02_413 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l080C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	fn0C90(stackArg0, r0_89, wLoc02_413)
	Mem354[0x34B6:word16] = Mem340[0x34B6:word16] - 0x0010
	fn0F04(r0_89, r0_89 << 1, r2, r3, r4)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0896_thunk_fn0790:
	fn0790()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0856_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0A0A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0A0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A0A:
	branch 0x0096 - Mem0[0x007E:word16] >= 0x0000 l0B00_in_fn0A0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B00_in_fn0A0A:
	Mem7[0x34D2:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A12:
	word16 r4_13 = Mem0[0x0064:word16]
	branch 0x003F - r4_13 <= 0x0000 l0A24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A20:
	r4_13 = 0x003F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A24:
	word16 r4_21 = __rol(r4_13, r4_13)
	word16 r4_22 = __rol(r4_21, r4_21)
	word16 r4_23 = __rol(r4_22, r4_22)
	Mem29[0x35CA:word16] = __rol(r4_23, r4_23) & ~0xFC7F | 0x9C50
	branch 0x002D - Mem29[0x0046:word16] > 0x0000 l0B00_in_fn0A0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B00_in_fn0A0A:
	Mem34[0x34D2:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A3E:
	branch 0xFFD3 - Mem29[0x0046:word16] < 0x0000 l0B00_in_fn0A0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B00_in_fn0A0A:
	Mem42[0x34D2:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A46:
	word16 r1_47 = Mem29[0x004A:word16]
	branch r1_47 > 0x0000 l0A4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A4C:
	r1_47 = -r1_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A4E:
	word16 r0_55 = Mem29[0x34B6:word16] - Mem29[0x007A:word16]
	word16 r2_61
	word16 r3_62
	fn114A(r0_55, r1_47, out r2_61, out r3_62)
	word16 r3_71
	fn126C(Mem29[0x004C:word16], r2_61, r3_62, out r3_71)
	word16 r4_76 = r0_55 + r3_71
	branch Mem29[0x004A:word16] < 0x0000 l0A6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A6C:
	r3_71 = -r3_71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A6E:
	Mem91[0x35CC:word16] = r3_71 + Mem29[0x34B4:word16]
	Mem94[0x35CE:word16] = Mem91[0x007A:word16]
	Mem97[0x35D0:word16] = 0xB000
	branch r4_76 > 0x0096 l0B00_in_fn0A0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B00_in_fn0A0A:
	Mem103[0x34D2:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A82:
	word16 r4_108 = 0x0096 - r4_76
	word16 r3_114
	fn114A(r4_108, Mem97[0x0064:word16], out r2_161, out r3_114)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A92_thunk_fn0A94:
	fn0A94(r3_114 >> 3, r4_108, 0x35D2)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0A94(word16 r3, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
l0A94:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A94_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A94:
	branch r3 >> 1 == 0x0000 l0B00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B00:
	Mem7[0x34D2:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A98:
	word16 wLoc02_85 = r3 >> 1
	branch r3 >> 1 >=u 0x0258 l0AA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AA6:
	wLoc02_85 = 600
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AA8:
	word16 r2_25 = Mem24[0x00B0:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AB0:
	word16 r2_34 = r2_25 + Mem30[0x0070:word16] + 0x0001 & ~0xFFC0
	r2_25 = r2_34 + Mem30[0x0052:word16] & ~0xFFC0
	word16 r0_39 = __swab((int16) Mem30[r2_34 + 0x2766:byte] & ~0xFFC0)
	word16 r4_43 = ~r4 & ~0xDFFF
	word16 r0_48 = __ror(r0_39, r0_39) | (r4_43 | 0x4000) | (int16) Mem30[r2_25 + 0x2766:byte] & ~0xFFC0
	Mem51[r5:word16] = r0_48
	word16 r5_52 = r5 + 0x0002
	Mem57[r5_52:word16] = r0_48 + 0x2040 & ~0xC000
	word16 v29_60 = wLoc02_85 - 0x0001
	r4 = r4_43 | 0x4000
	r5 = r5_52 + 0x0002
	wLoc02_85 = v29_60
	Mem30 = Mem61
	branch v29_60 > 0x0000 l0AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AEC:
	Mem64[r5_52 + 0x0002:word16] = 0xF700
	Mem67[r5_52 + 0x0004:word16] = 0x0000
	Mem69[0x00B0:word16] = r2_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF2_thunk_fn0AF6:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	fn0AF6(stackArg0)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A94_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0AF6(word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC sp
// Preserved:
l0AF6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF8:
	Mem10[0x34D2:word16] = 0x35CA
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF8_in_fn0AF6:
	Mem24[0x34D2:word16] = 0x35CA
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0B06(word16 r3, word16 r4, word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut:
// Trashed: NZVC pc r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0B06_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B06:
	fn13AA(pc, wLoc02)
	word16 pc_10 = pc - 0x0001
	branch pc != 0x0001 l0B0A_thunk_fn0A94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B0A_thunk_fn0A94:
	fn0A94(r3, r4, r5)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B0C:
	Mem24[0x267A:word16] = Mem0[0x34B4:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B12:
	Mem29[0x267C:word16] = Mem28[0x34B6:word16]
	Mem30[0x34D2:word16] = 0x2678
	word16 sp_152 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B1E:
	word16 v12_35 = Mem34[0x0070:word16] & 0x007F
	Mem36[0x0070:word16] = v12_35
	branch v12_35 != 0x0000 l0B1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B26:
	branch Mem36[0x07BA:word16] == 0x0000 l0BD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B2C:
	word16 r3_47 = Mem36[0x2610:word16] - Mem36[0x34B4:word16]
	word16 r2_49 = Mem36[0x2612:word16] - Mem36[0x267C:word16]
	branch v24 == 0x0000 l0B48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B44:
	fn0C36(r2_49 + 0x0003, r3_47)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B48:
	word16 r3_63 = Mem55[0x2610:word16] - Mem55[0x267A:word16]
	fn0C36(0x0000, r3_63 + 0x0019)
	Mem73[0x34CA:word16] = 0x24A2
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	ptr16 stackArg0 = <invalid>
	fn13AA(pc_10, stackArg0)
	word16 pc_96 = pc_10 - 0x0001
	branch pc_96 != 0x0000 l0AF8_in_fn0B06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF8_in_fn0B06:
	Mem97[0x34D2:word16] = 0x35CA
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B68:
	Mem103[0x34CA:word16] = 0x0000
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	ptr16 stackArg0 = <invalid>
	fn13AA(pc_96, stackArg0)
	branch pc_96 != 0x0001 l0B70_thunk_fn0AF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B70_thunk_fn0AF6:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	fn0AF6(stackArg0)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B72:
	word16 v44_116 = -(r3_63 + 0x0019)
	fn0C36(0x0000, v44_116)
	word16 r2_130 = -(r2_49 + 0x0003)
	branch r2_130 == 0x0000 l0B88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B84:
	fn0C36(r2_130, v44_116)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B88:
	fn13AA(pc_96 - 0x0001, r2_49 + 0x0003)
	pc_10 = pc_96 - 0x0002
	Mem28 = Mem117
	branch pc_96 != 0x0002 l0B12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B8E:
	Mem146[0x005E:word16] = Mem117[0x005E:word16] + 0x0004
	Mem148[0x0068:word16] = Mem146[0x0068:word16] + 0x07D0
	Mem149[0x0058:word16] = 0x0000
	Mem150[0x006C:word16] = 0x0000
	sp_152 = 0x3FFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BA6:
	Mem155[0x34CA:word16] = 0x0000
	Mem156[0x0046:word16] = 0x0000
	Mem157[0x0054:word16] = 0x0000
	Mem159[0x0060:word16] = 0x001E
	fn0128()
	branch Mem159[0x009E:word16] != 0x0000 l0BA6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BC2:
	Mem179[0x34BA:word16] = 0x0000
	Mem180[0x34C2:word16] = 0x0000
	fn13AA(pc_96 - 0x0002, r2_49 + 0x0003)
	__bpt()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BD0:
	word16 sp_189 = sp_152 - 0x0002
	Mem190[sp_189:word16] = 0x0001
	Mem192[sp_189 - 0x0002:word16] = Mem190[0x0078:word16]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word16 sp_202
	fn0C90(stackArg0, Mem192[sp_189 - 0x0002:word16], Mem192[sp_189:word16])
	word16 r5_209 = Mem192[0x0070:word16]
	word16 r3_208 = 0x0030
	branch __ror(r5_209, r5_209) >=u 0x0000 l0BEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BEC:
	r3_208 = -0x0030
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BEE:
	Mem218[sp_202 - 0x0002:word16] = r3_208
	fn0C36(0xFFE8, r3_208)
	fn0C36(0x0000, Mem218[sp_202 - 0x0002:word16])
	Mem238[0x26AC:word16] = Mem218[0x267A:word16]
	Mem239[0x26AE:word16] = Mem238[0x267C:word16]
	Mem241[0x26AC:word16] = Mem239[0x26AC:word16] + 0x0014
	Mem243[0x34C2:word16] = 0x26A8
	fn0C72()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0C36(word16 r2, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..15] r3:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
l0C70:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0C36_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0C36_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C36:
	word16 r5_11 = 0x0A80
	branch r3 > 0x0000 l0C44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C3E:
	r5_11 = 0x0AC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C44:
	Mem15[0x0C72:word16] = r5_11
	branch r2 == 0x0000 l0C58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C4E:
	branch r2 > 0x0000 l0C58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C54:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C58:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C5C:
	fn0C72()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0C72()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0C72_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0C72_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C72:
	__halt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0C76(word16 r0, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15]
// LiveOut:
// Trashed: NZVC
// Preserved: sp
fn0C76_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C76:
	word16 v3_4 = Mem3[0x0070:word16] & 0x0007
	Mem5[0x0070:word16] = v3_4
	branch v3_4 == 0x0000 l0C76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C7E:
	fn1578(r0, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C82:
	word16 v8_18 = Mem17[0x0070:word16] & 0x0007
	Mem19[0x0070:word16] = v8_18
	branch v8_18 != 0x0000 l0C82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C8A:
	fn1578(r0, pc)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0C76_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0C90(word16 wArg00, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: sp
// Trashed: NZVC sp
// Preserved: r4
fn0C90_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C90:
	branch wArg02 >> 1 >=u 0x0000 l0CB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CB2:
	Mem11[(wArg02 >> 1) + 0x3013:word16] = Mem5[(wArg02 >> 1) + 0x3013:word16] & ~0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C9A:
	Mem24[(wArg02 >> 1) + 0x3013:word16] = Mem21[(wArg02 >> 1) + 0x3013:word16] & ~0x00F0
	wArg04 = wArg04 << 4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CB8:
	Mem31[(wArg02 >> 1) + 0x3013:word16] = Mem28[(wArg02 >> 1) + 0x3013:word16] | wArg04
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0C90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0CCA(word16 r4, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: NZVC
// Preserved: r4 sp
fn0CCA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CCA:
	branch wArg02 >> 1 >=u 0x0000 l0CE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CD8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CE0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0CCA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0CEC(word16 r0, word16 r1, word16 r2, word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r2:[0..15] r3:[0..15] r4:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0CEC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0CEC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CEC:
	word16 sp_11
	word16 r5_10 = fn0D3C(r0, r1, r2, r3, r4, ptrLoc02)
	word16 r4_22 = (Mem0[0x28F0:word16] >> 5) + 0x0017
	Mem25[r5_10:word16] = r4_22
	Mem27[0x0082:word16] = r4_22
	Mem29[r5_10 + 0x0002:word16] = 0x8C50
	word16 r5_30 = r5_10 + 0x0004
	word16 r0_31 = 0x28F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D10:
	r0_31 = r0_31 + 0x0008
	r5_30 = fn0D78((Mem29[r0_31:word16] >> 5) + 0x0017, r5_30, Mem29[sp_11 + -2:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0D3C(word16 r0, word16 r1, word16 r2, word16 r3, word16 r4, ptr16 ptrArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r2:[0..15] r3:[0..15] r4:[0..15] Stack +0000:[0..15]
// LiveOut: r5 sp
// Trashed: NZVC r0 r5 sp
// Preserved:
fn0D3C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D3C:
	Mem18[0x00A0:word16] = 0x00E1
	Mem19[0x34DA:word16] = 0x0000
	Mem20[0x07BA:word16] = 0x0000
	Mem23[0x182A:word16] = 0x9854
	Mem26[0x182C:word16] = 0xF0A0
	Mem29[0x182E:word16] = 0x0000
	call ptrArg00 (retsize: 2;)
		uses: r0:r0,r1:r1,r2:r2,r3:r3,r4:r4,r5:0x1830,sp:fp - 0x000A,Stack +0002:r4,Stack +0004:r1,Stack +0006:r0,Stack +0008:r3,Stack +000A:r2,Stack +000C:ptrArg00
	return 0x1830
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0D3C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0D66(word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +000A:[0..15]
// LiveOut:
// Trashed: NZV r0 r1 r2 r3 r4 sp
// Preserved:
fn0D66_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D66:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0D66_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0D78(word16 r4, word16 r5, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..15] r5:[0..15] Stack +0000:[0..15]
// LiveOut: r5
// Trashed: NZVC r4 r5
// Preserved: sp
fn0D78_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D78:
	word16 wLoc02_112 = 0x0200
	branch 0x0400 - r4 <u 0x0000 l0D8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D82:
	r4 = 0x03FF
	branch Mem4[0x0082:word16] == 0x03FF l0D9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D8C:
	branch r4 > 0x0000 l0D98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D90:
	r4 = 0x0000
	branch Mem4[0x0082:word16] == 0x0000 l0D9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D98:
	wLoc02_112 = 0x4200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D9C:
	Mem36[0x00A2:word16] = Mem35[0x00A2:word16] - 0x0001
	branch v19 > 0x0000 l0DD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0DA2:
	Mem43[0x00A4:word16] = Mem36[0x00A4:word16] + 0x0001
	Mem45[0x00A4:word16] = Mem43[0x00A4:word16] & ~0xFFFC
	Mem46[0x00A4:word16] = Mem45[0x00A4:word16] + 0x0001
	Mem47[0x00A2:word16] = Mem46[0x00A4:word16]
	Mem49[0x00A6:word16] = Mem47[0x00A6:word16] + 0x0280
	Mem52[0x00A6:word16] = Mem49[0x00A6:word16] & ~0xFC7F
	Mem53[0x00A8:word16] = Mem52[0x00A8:word16] + 0x0001
	Mem55[0x00A8:word16] = Mem53[0x00A8:word16] & ~0xFFFC
	Mem61[r5:word16] = Mem55[0x00A6:word16]
	Mem63[r5:word16] = Mem61[r5:word16] | Mem61[0x00A8:word16]
	Mem65[r5:word16] = Mem63[r5:word16] | 0x8C04
	r5 = r5 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0DD8:
	word16 r4_76
	word16 r4_73 = r4 - Mem72[0x0082:word16]
	branch r4_73 > 0x0000 l0DEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0DEE:
	r4_76 = r4_73 & ~0xFFC0
	Mem78[0x0082:word16] = Mem72[0x0082:word16] + r4_76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0DDE:
	word16 r4_81 = -r4_73 & ~0xFFC0
	Mem83[0x0082:word16] = Mem72[0x0082:word16] - r4_81
	r4_76 = r4_81 | 0x0040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0DF6:
	Mem99[r5:word16] = r4_76 | wLoc02_112
	Mem101[0x00A0:word16] = Mem99[0x00A0:word16] - 0x0001
	word16 r5_100 = r5 + 0x0002
	branch v45 > 0x0000 l0E04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E00:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E04:
	return r5_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0D78_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0E06(word16 r0, ptr16 & r1Out, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15]
// LiveOut: r0 r1 r3 r4 sp
// Trashed: NZVC r0 r1 r3 r4 r5 sp
// Preserved:
fn0E06_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E06:
	word16 r1_4 = Mem0[0x0072:word16]
	word16 r1_7 = (r1_4 << 1) + 0x28F0
	word16 wLoc02_52 = 0x0003
	word16 r1_11 = r1_7 + 0x0002
	word16 r3_13 = r1_7 + 0x0002
	branch Mem9[r1_7:word16] - Mem9[r1_7 + 0x0002:word16] < 0x0000 l0E20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E1E:
	wLoc02_52 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E20:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	fn0C90(stackArg0, r1_4, wLoc02_52)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E26:
	Mem37[r1_11:word16] = Mem34[r1_11:word16] - r0
	r3_13 = r3_13 - 0x0002
	Mem42[r3_13:word16] = Mem37[r3_13:word16] - r0
	r1_11 = r1_11 + 0x0002
	r0 = -(r0 >> 1)
	branch r0 != 0x0000 l0E26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E30:
	r1Out = r1_11
	r3Out = r3_13
	r4Out = r1_4
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0E06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0E32()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZVC r0 r4 r5
// Preserved: sp
fn0E32_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E32:
	Mem3[0x00AE:word16] = 0x0000
	Mem4[0x34C2:word16] = 0x0000
	Mem5[0x34D2:word16] = 0x0000
	Mem8[0xF402:word16] = Mem5[0xF402:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E44:
	word16 r4_15 = __swab(Mem12[0x00AC:word16] + 0x0001)
	Mem22[0x35CA:word16] = __ror(r4_15, r4_15) + Mem12[0x35CA:word16] & ~0xFC7F | 0x9C50
	word16 r5_28
	fn0E98(0x35CC, out r5_28)
	Mem34[0xF402:word16] = Mem22[0xF402:word16]
	Mem36[0x00AE:word16] = Mem34[0x00AE:word16] - 0x000A
	word16 r5_40
	fn0E98(r5_28, out r5_40)
	Mem46[r5_40:word16] = 0xF700
	Mem49[r5_40 + 0x0002:word16] = 0x0000
	Mem50[0x34C2:word16] = 0x35CA
	Mem52[0xF402:word16] = Mem50[0xF402:word16]
	Mem54[0x00AE:word16] = Mem52[0x00AE:word16] + 0x0021
	branch 0x00C0 - Mem54[0x00AE:word16] <= 0x0000 l0E44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E92:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	ptr16 stackArg0 = <invalid>
	fn13AA(pc, stackArg0)
	__reset()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E96_thunk_fn0E98:
	return fn0E98(r5_40 + 0x0002, out r5_70)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0E32_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0E98(word16 r5, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..15]
// LiveOut: r0 r5
// Trashed: NZVC r0 r4 r5
// Preserved: r1 r2 r3 sp
fn0E98_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0E98:
	Mem3[0x0046:word16] = 0xFFE2
	word16 wLoc02_100 = 0x00F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0EA2:
	fn0444()
	word16 r0_20 = (wLoc08 >> 1) + 0x0001 + Mem15[0x0070:word16] + Mem15[0x00AC:word16]
	Mem21[0x00AC:word16] = r0_20
	word16 r0_110 = r0_20 & ~0xFFE0
	word16 r4_24 = (int16) Mem21[r0_110 + 0x2773:byte] + Mem21[0x00AE:word16]
	branch r4_24 < 0x0000 l0EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0EC8:
	word16 r2_33
	r0_110 = fn125E(r4_24, Mem21[0x004C:word16], out r2_33)
	word16 r2_39 = r2_33 + Mem21[0x34B4:word16]
	branch r2_39 < 0x0000 l0EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0ED8:
	Mem45[r5:word16] = r2_39 | 0x4000
	word16 r2_53
	r0_110 = fn125E(r4_24, Mem45[0x004A:word16], out r2_53)
	word16 r5_46 = r5 + 0x0002
	word16 r2_59 = r2_53 + Mem45[0x34B6:word16]
	branch r2_59 < 0x0000 l0EFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0EFC:
	Mem63[r5_46 - 0x0002:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0EFE:
	Mem70[r5:word16] = 0x0000
	Mem73[r5 + 0x0002:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0EEE:
	Mem80[r5_46:word16] = r2_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0EF0:
	Mem85[0x0046:word16] = Mem84[0x0046:word16] + 0x0001
	word16 v33_88 = wLoc02_100 - 0x0001
	r5 = r5 + 0x0004
	wLoc02_100 = v33_88
	Mem15 = Mem89
	branch v33_88 > 0x0000 l0EA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0EF8:
	r5Out = r5
	return r0_110
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0E98_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0F04(word16 r0, word16 r1, word16 r2, word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r2:[0..15] r3:[0..15] r4:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0F04_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0F04_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F04:
	word16 sp_11
	word16 r5_10 = fn0D3C(r0, r1, r2, r3, r4, ptrLoc02)
	Mem16[0x00AA:word16] = 0x0000
	word16 r0_116 = (Mem16[0x0074:word16] << 1) + 0x28F0
	word16 r4_136 = fn100C(Mem16[r0_116:word16])
	branch r4_136 > 0x0000 l0F24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F24:
	branch 0x0400 - r4_136 <u 0x0000 l0F2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F2A:
	r4_136 = 0x03FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F20:
	r4_136 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F2E:
	Mem49[r5_10:word16] = r4_136
	Mem51[0x0082:word16] = r4_136
	Mem53[r5_10 + 0x0002:word16] = 0x8C50
	word16 r5_152 = r5_10 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F38:
	word16 r3_106
	Mem60[sp_11 - 0x0002:word16] = r4_136
	word16 r4_67 = fn100C(Mem60[r0_116:word16])
	word16 v26_73 = Mem60[sp_11 - 0x0002:word16]
	Mem78[sp_11 - 0x0002:word16] = r0_116 + 0x0002
	r4_136 = v26_73
	word16 r1_80 = r4_67 - v26_73
	branch r1_80 > 0x0000 l0F60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F60:
	fn126C(0x000C, 0x0000, r1_80 + 0x0006, out r3_106)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F50:
	word16 r3_101
	fn126C(0x000C, 0x0000, 0x0006 - r1_80, out r3_101)
	r3_106 = -r3_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F6A:
	word16 r2_111 = 0x000C
	r0_116 = Mem78[sp_11 - 0x0002:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F70:
	Mem120[0x00AA:word16] = Mem119[0x00AA:word16] + 0x0001
	branch 0x0003 - Mem120[0x00AA:word16] < 0x0000 l0F84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F84:
	branch 0xFFFD - Mem120[0x00AA:word16] > 0x0000 l0F92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F8C:
	Mem127[0x0F70:word16] = 0x0A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F7C:
	Mem131[0x0F70:word16] = 0x0ADF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0F92:
	word16 r4_141 = r4_136 + Mem137[0x00AA:word16] + r3_106
	Mem146[sp_11 - 0x0002:word16] = r4_141
	r5_152 = fn0D78(r4_141, r5_152, Mem146[sp_11 + 0xFFFC:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0FA2:
	r4_136 = Mem146[sp_11 - 0x0002:word16]
	r2_111 = r2_111 - 0x0001
	branch r2_111 > 0x0000 l0F70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0FA8:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn100C(word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..15]
// LiveOut: r4
// Trashed: NZVC r4
// Preserved: sp
fn100C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l100C:
	return (r4 * 0x0003 >> 3) + 0x0017
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn100C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn103C(word16 r0, word16 r3, word16 r5, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r3:[0..15] r5:[0..15] Stack +0000:[0..15]
// LiveOut:
// Trashed: NZVC
// Preserved: sp
fn103C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l103C:
	branch 0x1F96 - r5 >u 0x0000 l10B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l10B6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn103C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1042:
	Mem24[r5:word16] = 0x9800
	Mem27[r5 + 0x0002:word16] = r0
	word16 r4_51 = fn100C(Mem40[r3 + 0x0002:word16]) + fn100C(Mem30[r3:word16])
	Mem55[0x0046:word16] = Mem40[wArg00:word16]
	word16 r4_58 = (r4_51 >> 1) + Mem55[wArg00 + 0x0002:word16]
	Mem59[0x0084:word16] = Mem55[wArg00 + 0x0004:word16]
	Mem61[r5 + 0x0004:word16] = r4_58
	word16 v39_63 = Mem61[r3 + 0x0002:word16] - Mem61[r3:word16]
	branch v39_63 == 0x0000 l1090
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1080:
	branch v39_63 >u 0x0000 l108A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l108A:
	Mem68[0x0046:word16] = Mem61[0x0046:word16] + 0x0016
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1082:
	Mem71[0x0046:word16] = Mem61[0x0046:word16] + 0xFFEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1090:
	fn0444()
	fn0242(0x26D8, r5 + 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn114A(word16 r0, word16 r1, ptr16 & r2Out, ptr16 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15]
// LiveOut: C r2 r3
// Trashed: NZVC r2 r3
// Preserved: r1 sp
fn114A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l114A:
	word16 r2_13
	word16 v10_6 = r0 - r1
	word16 r3_106 = 0x0000
	bool C_290 = SLICE(cond(v10_6), bool, 0)
	branch v10_6 >=u 0x0000 l115A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l115A:
	r2_13 = r0
	branch r0 == 0x0000 l119E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1150:
	r2_13 = r1
	branch r1 == 0x0000 l119E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1154:
	r1 = r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l115E:
	word16 r2_262
	word16 r2_244
	word16 r2_226
	word16 r2_208
	word16 r2_190
	word16 r2_172
	word16 r2_154
	word16 r2_136
	word16 r2_118
	word16 r2_100
	word16 r2_82
	word16 r2_64
	word16 r2_46
	word16 r2_28
	word16 r2_22 = __rol(r2_13, r2_13)
	branch r2_22 <u 0x0000 l11A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11A0:
	r3_106 = r1 << 1
	r2_28 = __rol(r2_22, r2_22)
	branch r2_28 >=u 0x0000 l11AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1162:
	r2_28 = __rol(r2_22, r2_22)
	branch r2_28 <u 0x0000 l11A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11A8:
	r3_106 = r3_106 + r1
	r2_28 = r2_28 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11AC:
	r3_106 = r3_106 << 1
	r2_46 = __rol(r2_28, r2_28)
	branch r2_46 >=u 0x0000 l11B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1166:
	r2_46 = __rol(r2_28, r2_28)
	branch r2_46 <u 0x0000 l11B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11B2:
	r3_106 = r3_106 + r1
	r2_46 = r2_46 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11B6:
	r3_106 = r3_106 << 1
	r2_64 = __rol(r2_46, r2_46)
	branch r2_64 >=u 0x0000 l11C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l116A:
	r2_64 = __rol(r2_46, r2_46)
	branch r2_64 <u 0x0000 l11BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11BC:
	r3_106 = r3_106 + r1
	r2_64 = r2_64 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11C0:
	r3_106 = r3_106 << 1
	r2_82 = __rol(r2_64, r2_64)
	branch r2_82 >=u 0x0000 l11CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l116E:
	r2_82 = __rol(r2_64, r2_64)
	branch r2_82 <u 0x0000 l11C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11C6:
	r3_106 = r3_106 + r1
	r2_82 = r2_82 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11CA:
	r3_106 = r3_106 << 1
	r2_100 = __rol(r2_82, r2_82)
	branch r2_100 >=u 0x0000 l11D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1172:
	r2_100 = __rol(r2_82, r2_82)
	branch r2_100 <u 0x0000 l11D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11D0:
	r3_106 = r3_106 + r1
	r2_100 = r2_100 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11D4:
	r3_106 = r3_106 << 1
	r2_118 = __rol(r2_100, r2_100)
	branch r2_118 >=u 0x0000 l11DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1176:
	r2_118 = __rol(r2_100, r2_100)
	branch r2_118 <u 0x0000 l11DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11DA:
	r3_106 = r3_106 + r1
	r2_118 = r2_118 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11DE:
	r3_106 = r3_106 << 1
	r2_136 = __rol(r2_118, r2_118)
	branch r2_136 >=u 0x0000 l11E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l117A:
	r2_136 = __rol(r2_118, r2_118)
	branch r2_136 <u 0x0000 l11E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11E4:
	r3_106 = r3_106 + r1
	r2_136 = r2_136 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11E8:
	r3_106 = r3_106 << 1
	r2_154 = __rol(r2_136, r2_136)
	branch r2_154 >=u 0x0000 l11F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l117E:
	r2_154 = __rol(r2_136, r2_136)
	branch r2_154 <u 0x0000 l11EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11EE:
	r3_106 = r3_106 + r1
	r2_154 = r2_154 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11F2:
	r3_106 = r3_106 << 1
	r2_172 = __rol(r2_154, r2_154)
	branch r2_172 >=u 0x0000 l11FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1182:
	r2_172 = __rol(r2_154, r2_154)
	branch r2_172 <u 0x0000 l11F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11F8:
	r3_106 = r3_106 + r1
	r2_172 = r2_172 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l11FC:
	r3_106 = r3_106 << 1
	r2_190 = __rol(r2_172, r2_172)
	branch r2_190 >=u 0x0000 l1206
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1186:
	r2_190 = __rol(r2_172, r2_172)
	branch r2_190 <u 0x0000 l1202
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1202:
	r3_106 = r3_106 + r1
	r2_190 = r2_190 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1206:
	r3_106 = r3_106 << 1
	r2_208 = __rol(r2_190, r2_190)
	branch r2_208 >=u 0x0000 l1210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l118A:
	r2_208 = __rol(r2_190, r2_190)
	branch r2_208 <u 0x0000 l120C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l120C:
	r3_106 = r3_106 + r1
	r2_208 = r2_208 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1210:
	r3_106 = r3_106 << 1
	r2_226 = __rol(r2_208, r2_208)
	branch r2_226 >=u 0x0000 l121A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l118E:
	r2_226 = __rol(r2_208, r2_208)
	branch r2_226 <u 0x0000 l1216
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1216:
	r3_106 = r3_106 + r1
	r2_226 = r2_226 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l121A:
	r3_106 = r3_106 << 1
	r2_244 = __rol(r2_226, r2_226)
	branch r2_244 >=u 0x0000 l1224
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1192:
	r2_244 = __rol(r2_226, r2_226)
	branch r2_244 <u 0x0000 l1220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1220:
	r3_106 = r3_106 + r1
	r2_244 = r2_244 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1224:
	r3_106 = r3_106 << 1
	r2_262 = __rol(r2_244, r2_244)
	branch r2_262 >=u 0x0000 l122E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1196:
	r2_262 = __rol(r2_244, r2_244)
	branch r2_262 <u 0x0000 l122A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l122A:
	r3_106 = r3_106 + r1
	r2_262 = r2_262 + (r3_106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l122E:
	word16 r2_280 = __rol(r2_262, r2_262)
	word16 r3_278 = r3_106 << 1
	bool C_282 = SLICE(cond(r2_280), bool, 0)
	branch r2_280 >=u 0x0000 l1238
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1234:
	r3_278 = r3_278 + r1
	r2_280 = r2_280 + (r3_278 <u 0x0000)
	C_282 = SLICE(cond(r2_280), bool, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1238:
	r2Out = r2_280
	r3Out = r3_278
	return C_282
// DataOut:
// DataOut (flags):
// SymbolicIn:

l119A:
	r2_13 = 0x0000
	C_290 = false
	r3_106 = r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l119E:
	r2Out = r2_13
	r3Out = r3_106
	return C_290
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn114A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn123A(word16 r0, word16 r1, ptr16 & r2Out, ptr16 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15]
// LiveOut: r0 r2 r3
// Trashed: NZVC r0 r1 r2 r3
// Preserved: sp
fn123A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l123A:
	branch r0 > 0x0000 l124C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l124C:
	branch r1 > 0x0000 l1246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1250:
	r1 = -r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l123E:
	r0 = -r0
	branch r1 > 0x0000 l1252
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1252:
	word16 r2_28
	word16 r3_29
	r2Out = -(r2_28 + fn114A(r0, r1, out r2_28, out r3_29))
	r3Out = -r3_29
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1244:
	r1 = -r1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1246:
	word16 r2_43
	word16 r3_44
	fn114A(r0, r1, out r2_43, out r3_44)
	r2Out = r2_43
	r3Out = r3_44
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn123A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn125E(word16 r0, word16 r1, ptr16 & r2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15]
// LiveOut: r0 r2
// Trashed: NZVC r0 r1 r2 r3
// Preserved: sp
fn125E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l125E:
	word16 r2_5
	word16 r0_8 = fn123A(r0, r1, out r2_5, out r3_6)
	word16 r2_14 = __rol(r2_5, r2_5)
	r2Out = __rol(r2_14, r2_14)
	return r0_8
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn125E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn126C(word16 r0, word16 r2, word16 r3, ptr16 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r2:[0..15] r3:[0..15]
// LiveOut: r2 r3
// Trashed: NZVC r2 r3
// Preserved: sp
fn126C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l126C:
	word16 r2_249
	word16 r3_245
	word16 r2_232
	word16 r3_228
	word16 r2_215
	word16 r3_211
	word16 r2_198
	word16 r3_194
	word16 r2_181
	word16 r3_177
	word16 r2_164
	word16 r3_160
	word16 r2_147
	word16 r3_143
	word16 r2_130
	word16 r3_126
	word16 r2_113
	word16 r3_109
	word16 r2_104
	word16 r3_100
	word16 r2_101
	word16 r3_75
	word16 r2_62
	word16 r3_58
	word16 r2_45
	word16 r3_41
	word16 r2_28
	word16 r3_24
	word16 r2_14
	word16 r3_12
	word16 r2_8 = __rol(r2, r2) - r0
	branch r2_8 > 0x0000 l12F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12F0:
	r3_12 = (r3 << 1) + 0x0001 << 1
	r2_14 = __rol(r2_8, r2_8) - r0
	branch r2_14 < 0x0000 l127C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1274:
	r3_12 = r3 << 2
	r2_14 = __rol(r2_8, r2_8) + r0
	branch r2_14 > 0x0000 l12FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12FA:
	r3_24 = r3_12 + 0x0001 << 1
	r2_28 = __rol(r2_14, r2_14) - r0
	branch r2_28 < 0x0000 l1284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l127C:
	r3_24 = r3_12 << 1
	r2_28 = __rol(r2_14, r2_14) + r0
	branch r2_28 > 0x0000 l1304
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1304:
	r3_41 = r3_24 + 0x0001 << 1
	r2_45 = __rol(r2_28, r2_28) - r0
	branch r2_45 < 0x0000 l128C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1284:
	r3_41 = r3_24 << 1
	r2_45 = __rol(r2_28, r2_28) + r0
	branch r2_45 > 0x0000 l130E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l130E:
	r3_58 = r3_41 + 0x0001 << 1
	r2_62 = __rol(r2_45, r2_45) - r0
	branch r2_62 < 0x0000 l1294
// DataOut:
// DataOut (flags):
// SymbolicIn:

l128C:
	r3_58 = r3_41 << 1
	r2_62 = __rol(r2_45, r2_45) + r0
	branch r2_62 > 0x0000 l1318
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1318:
	r3_75 = r3_58 + 0x0001 << 1
	r2_101 = __rol(r2_62, r2_62) - r0
	branch r2_101 < 0x0000 l129C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1294:
	r3_75 = r3_58 << 1
	r2_101 = __rol(r2_62, r2_62) + r0
	branch r2_101 > 0x0000 l1322
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1322:
	r3_100 = r3_75 + 0x0001 << 1
	r2_104 = __rol(r2_101, r2_101) - r0
	branch r2_104 < 0x0000 l12A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l129C:
	r3_100 = r3_75 << 1
	r2_104 = __rol(r2_101, r2_101) + r0
	branch r2_104 > 0x0000 l132C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l132C:
	r3_109 = r3_100 + 0x0001 << 1
	r2_113 = __rol(r2_104, r2_104) - r0
	branch r2_113 < 0x0000 l12AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12A4:
	r3_109 = r3_100 << 1
	r2_113 = __rol(r2_104, r2_104) + r0
	branch r2_113 > 0x0000 l1336
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1336:
	r3_126 = r3_109 + 0x0001 << 1
	r2_130 = __rol(r2_113, r2_113) - r0
	branch r2_130 < 0x0000 l12B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12AC:
	r3_126 = r3_109 << 1
	r2_130 = __rol(r2_113, r2_113) + r0
	branch r2_130 > 0x0000 l1340
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1340:
	r3_143 = r3_126 + 0x0001 << 1
	r2_147 = __rol(r2_130, r2_130) - r0
	branch r2_147 < 0x0000 l12BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12B4:
	r3_143 = r3_126 << 1
	r2_147 = __rol(r2_130, r2_130) + r0
	branch r2_147 > 0x0000 l134A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l134A:
	r3_160 = r3_143 + 0x0001 << 1
	r2_164 = __rol(r2_147, r2_147) - r0
	branch r2_164 < 0x0000 l12C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12BC:
	r3_160 = r3_143 << 1
	r2_164 = __rol(r2_147, r2_147) + r0
	branch r2_164 > 0x0000 l1354
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1354:
	r3_177 = r3_160 + 0x0001 << 1
	r2_181 = __rol(r2_164, r2_164) - r0
	branch r2_181 < 0x0000 l12CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12C4:
	r3_177 = r3_160 << 1
	r2_181 = __rol(r2_164, r2_164) + r0
	branch r2_181 > 0x0000 l135E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l135E:
	r3_194 = r3_177 + 0x0001 << 1
	r2_198 = __rol(r2_181, r2_181) - r0
	branch r2_198 < 0x0000 l12D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12CC:
	r3_194 = r3_177 << 1
	r2_198 = __rol(r2_181, r2_181) + r0
	branch r2_198 > 0x0000 l1368
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1368:
	r3_211 = r3_194 + 0x0001 << 1
	r2_215 = __rol(r2_198, r2_198) - r0
	branch r2_215 < 0x0000 l12DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12D4:
	r3_211 = r3_194 << 1
	r2_215 = __rol(r2_198, r2_198) + r0
	branch r2_215 > 0x0000 l1372
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1372:
	r3_228 = r3_211 + 0x0001 << 1
	r2_232 = __rol(r2_215, r2_215) - r0
	branch r2_232 < 0x0000 l12E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12DC:
	r3_228 = r3_211 << 1
	r2_232 = __rol(r2_215, r2_215) + r0
	branch r2_232 > 0x0000 l137C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l137C:
	r3_245 = r3_228 + 0x0001 << 1
	r2_249 = __rol(r2_232, r2_232) - r0
	branch r2_249 < 0x0000 l12EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12E4:
	r3_245 = r3_228 << 1
	r2_249 = __rol(r2_232, r2_232) + r0
	branch r2_249 > 0x0000 l1386
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1386:
	word16 r3_261 = r3_245 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1388:
	r3Out = r3_261
	return r2_249
// DataOut:
// DataOut (flags):
// SymbolicIn:

l12EC:
	r3Out = r3_245
	return r2_249 + r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn126C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn13AA(word16 pc, ptr16 ptrArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] Stack +0000:[0..15]
// LiveOut:
// Trashed: NZVC r0 r1 r2
// Preserved: sp
fn13AA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l13AA:
	word16 r0_10
	Mem3[0x25C0:word16] = 0xF700
	word16 r0_4 = Mem3[ptrArg00:word16]
	word16 r1_12 = Mem3[0x0070:word16]
	r0_10 = r0_4
	branch r0_4 > 0x0000 l13BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l13BC:
	r0_10 = -r0_4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l13BE:
	r1_12 = r1_12 + 0x003C
	r0_10 = r0_10 - 0x0001
	branch r0_10 > 0x0000 l13BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l13C6:
	__wait()
	fn1578(r0_10, pc)
	branch Mem3[0x0070:word16] - r1_12 >u 0x0000 l13C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l13D2:
	branch r0_4 < 0x0000 l1388_in_fn13AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1388_in_fn13AA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn13AA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l13DA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00DC:
	__reset()
	word16 r0_41 = 0x182A
	word16 r1_45 = 500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00EC:
	Mem49[r0_41:word16] = 0xF700
	word16 r0_50 = r0_41 + 0x0002
	Mem52[r0_50:word16] = 0x0000
	r0_41 = r0_50 + 0x0002
	r1_45 = r1_45 - 0x0001
	branch r1_45 > 0x0000 l00EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00F6:
	word16 r0_58 = 0x34E0
	word16 r1_62 = 711
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0104:
	Mem66[r0_58:word16] = 0xF700
	word16 r0_67 = r0_58 + 0x0002
	Mem69[r0_67:word16] = 0x0000
	r0_58 = r0_67 + 0x0002
	r1_62 = r1_62 - 0x0001
	branch r1_62 > 0x0000 l0104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l010E:
	Mem75[0xFFFE:word16] = 0x0000
	word16 r0_78 = 0x013E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l011A:
	word16 v28_83 = Mem82[r0_78:word16]
	word16 r0_84 = r0_78 + 0x0002
	branch v28_83 == 0x0000 l0122
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0122:
	fn0128()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l011E:
	Mem99[v28_83:word16] = Mem82[r0_84:word16]
	r0_78 = r0_84 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1578(word16 r0, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15]
// LiveOut:
// Trashed: NZVC
// Preserved: r0 r1 r2 r3 r4 r5 sp
fn1578_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1578:
	word16 r4_134 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1586:
	word16 r5_28 = Mem27[r4_134 + 0x168C:word16]
	branch r5_28 == 0x0000 l15CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15CC:
	branch Mem27[0x0062:word16] - Mem27[0x0060:word16] == 0x0000 l15E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15D4:
	word16 r0_36 = Mem27[0x0060:word16]
	Mem37[0x0062:word16] = r0_36
	fn1674(r0_36, 0x25B8, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15E4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1578_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l158C:
	Mem77[Mem27[r4_134 + 0x1696:word16] + 0x0012:word16] = r5_28 + 0x000A
	word16 r3_112 = Mem77[Mem77[r5_28 + 0xFFFC:ptr16]:word16]
	word16 r0_79 = Mem77[r5_28 + 0xFFFE:word16]
	branch r0_79 == 0x0000 l15B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15A4:
	branch r3_112 > 0x0000 l15AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15A8:
	r3_112 = -r3_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15AA:
	fn126C(r0_79, 0x0000, r3_112, out r3_112)
	branch Mem77[Mem77[r5_28 + 0xFFFC:ptr16]:word16] > 0x0000 l15B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15B6:
	r3_112 = -r3_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15B8:
	fn1674(r3_112, Mem77[r4_134 + 0x1696:word16] + 0x000A, pc)
	r4_134 = r4_134 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn15F2(word16 r0, word16 r1, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r1:[0..15]
// LiveOut: r1
// Trashed: NZVC r0 r1 r2 r3
// Preserved: sp
l15F2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn15F2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15F2:
	word16 wLoc02_106
	Mem5[r1:byte] = 0x20
	branch 0x2710 - r0 >=u 0x0000 l163A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l163A:
	Mem15[r1 + 0x0001:byte] = 0x30
	wLoc02_106 = pc
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1640:
	branch 0x2710 - r0 <u 0x0000 l1602
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1646:
	Mem25[r1 + 0x0001:byte] = Mem24[r1 + 0x0001:byte] + 0x01
	r0 = r0 - 0x2710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l15FC:
	Mem29[r1 + 0x0001:byte] = 0x20
	wLoc02_106 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1602:
	word16 r2_41
	word16 r3_42
	branch 0x0064 - r0 < 0x0000 l1650
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1650:
	r2_41 = r0
	r3_42 = 0x2814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1608:
	word16 r3_52
	r2_41 = fn126C(0x0064, 0x0000, r0, out r3_52)
	r3_42 = (r3_52 << 1) + 0x2814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l161A:
	word16 r3_69
	word16 r3_86
	return fn1658(fn1658(fn1658(fn1658(r1 + 0x0002, r3_42, wLoc02_106, out r3_69), r3_69, wLoc02_106, out r3_117), (r2_41 << 1) + 0x2814, wLoc02_106, out r3_86), r3_86, pc, out r3_118)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn15F2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1658(word16 r1, word16 r3, word16 wArg02, ptr16 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..15] r3:[0..15] Stack +0002:[0..15]
// LiveOut: r1 r3
// Trashed: NZVC r1 r3
// Preserved: sp
fn1658_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1658:
	branch wArg02 != 0x0000 l1670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l165E:
	branch 0x0030 - Mem0[r3:word16] != 0x0000 l166C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l166C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1670:
	Mem25[r1:byte] = Mem19[r3:byte]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1664:
	Mem30[r1:byte] = 0x20
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1658_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1674(word16 r0, word16 r1, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r1:[0..15]
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3
// Preserved: sp
fn1674_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1674:
	branch r0 > 0x0000 l1676_thunk_fn15F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1676_thunk_fn15F2:
	fn15F2(r0, r1, pc)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1678:
	word16 r0_30 = fn15F2(-r0, r1, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1680:
	r0_30 = r0_30 - 0x0002
	branch Mem0[r0_30:word16] != 0x0020 l1680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1686:
	Mem40[r0_30:byte] = 0x2D
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1674_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn34E0(word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn34E0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn34E0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l34E0:
	__reset()
	__reset()
	__reset()
	__reset()
	__reset()
	Mem2[0xFFFE:word16] = 0x0000
	Mem3[0x0004:word16] = 0x3546
	Mem4[0x0006:word16] = 0x0000
	Mem7[0xFB8E:word16] = 0x0000
	fn355A()
	Mem16[0xFB8E:word16] = 0x0083
	fn355A()
	Mem24[0xFB8E:word16] = 0x0083
	fn355A()
	Mem32[0xFB8E:word16] = 0x004B
	fn355A()
	Mem40[0xFB8E:word16] = 0x002F
	fn355A()
	Mem48[0xFB8E:word16] = 0x0046
	fn355A()
	Mem56[0xFB8E:word16] = 0x000D
	fn355A()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l3548:
	Mem64[0xFF66:word16] = 0x0040
	Mem65[0xF400:word16] = 0x3562
	fn13AA(pc, Mem65[0x3FFC:ptr16])
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn355A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC
// Preserved: sp
fn355A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l355A:
	branch Mem0[0xFB8C:byte] > 0x00 l355A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l3560:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn355A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



