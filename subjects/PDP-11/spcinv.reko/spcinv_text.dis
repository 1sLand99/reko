void fn0200(word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15]
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5
// Preserved: sp
fn0200_entry:
l0200:
	PRINT(0xF9A<16>)
	word16 r2_3 = 2<16>
	word16 r3_35 = 0<16>
l020C:
	word16 r0_9
	branch TTYIN(out r0_9) l020C
l0210:
l0212:
	word16 r0_14
	branch TTYIN(out r0_14) l0212
l0216:
	word16 r0_16
	branch TTYIN(out r0_16) l0216
l021A:
	branch r0_9 == 0x42<8> l0236
l0236:
	PRINT(0xFDA<16>)
l023C:
	word16 r0_26
	branch TTYIN(out r0_26) l023C
l0220:
	r2_3 = 1<16>
	r3_35 = 1<16>
	branch r0_9 == 0x49<8> l0240
l022A:
	r2_3 = 0<16>
	r3_35 = 2<16>
	branch r0_9 == 0x45<8> l0240
l0240:
	Mem46[0x0F06<p16>:word16] = r2_3
	Mem49[0x0F08<p16>:word16] = r3_35
	Mem51[0x0024<p16>:word16] = Mem49[0x0024<p16>:word16] | 0x1040<16>
	Mem53[0x1166<16>:word16] = 0x1100<16>
	Mem54[0x1168<16>:word16] = 0x1170<16>
	FnSubfn(0x1166<16>)
	Mem57[0x0AB4<p16>:word16] = Mem54[0x1170<p16>:word16]
	Mem58[0x0B5E<p16>:word16] = 0<16>
	Mem60[0x1166<16>:word16] = 0x101<16>
	Mem61[0x1168<16>:word16] = 0x115E<16>
	branch FnSubfn(0x1166<16>) l029E
l027A:
	Mem66[0x1166<16>:word16] = 0x801<16>
	Mem67[0x1168<16>:word16] = 0<16>
	Mem68[0x116A<16>:word16] = 0xB5E<16>
	Mem69[0x116C<16>:word16] = 1<16>
	Mem70[0x116E<16>:word16] = 0<16>
	FnSubfn(0x1166<16>)
	__syscall<word16>(0x88FC<16>)
l029E:
	fn0BD6()
l02A2:
	word16 r4_110 = fn0C20(pc)
l02A6:
	word16 r0_92
	branch TTYIN(out r0_92) l02FC
l02AA:
	branch Mem94[0x0EFA<p16>:word16] != 0<16> l02FC
l02FC:
	Mem102[0x1166<16>:word16] = 0x1100<16>
	Mem103[0x1168<16>:word16] = 0x1170<16>
	FnSubfn(0x1166<16>)
	word16 r0_106 = Mem103[0x1170<p16>:word16] - Mem103[0x1172<p16>:word16]
	branch r0_106 < 0<16> l0388
l0388:
	branch r4_110 == 0x1178<16> l02A6
l0316:
	Mem115[0x1174<p16>:word16] = Mem103[0x1170<p16>:word16]
	Mem119[pc + 0xE52<16>:word16] = Mem115[pc + 0xE52<16>:word16] + 1<16>
	word16 v35_120 = ~Mem119[0x0EF4<p16>:word16]
	Mem121[0x0EF6<p16>:word16] = v35_120
	branch v35_120 != 0<16> l032C
l0328:
	Mem127[0x0EF8<p16>:word16] = ~Mem121[0x0EF6<p16>:word16]
l032C:
	branch Mem131[0x0EFA<p16>:word16] == 0<16> l0352
l0332:
	word16 v41_138 = Mem131[0x0EFA<p16>:word16] - 1<16>
	Mem139[0x0EFC<p16>:word16] = v41_138
	branch v41_138 != 0<16> l0370
l0338:
	branch Mem139[0x0F18<p16>:word16] == 0<16> l03AE
l033E:
	word16 r4_151
	word16 r0_150 = fn0486(r0_106, r4_110, out r4_151)
	Mem157[0x0F16<p16>:word16] = 2<16>
	r4_110 = fn0470(r0_150, r4_151)
	Mem166[0x0F18<p16>:word16] = 0x78<16>
l0352:
	branch Mem169[0x0EF8<p16>:word16] != 0<16> l036C
l0358:
	branch Mem169[0x0F14<p16>:word16] <=u 8<16> l0370
l0360:
	word16 v65_179 = Mem169[0x0F16<p16>:word16] - 1<16>
	Mem180[0x0F18<p16>:word16] = v65_179
	branch v65_179 > 0<16> l0370
l0366:
	Mem182[0x0EFA<p16>:word16] = 0x456<16>
l036C:
	call Mem185[0x0EFA<p16>:word16] (retsize: 2;)
l0370:
	word16 r4_224
	r0_106 = fn0998(fn07A6(fn06D6(fn04A0(r4_110, pc), pc), pc, out r4_224), r4_224, pc, out r4_110)
	branch r4_110 == 0x1178<16> l0394
l0394:
	branch Mem240[0x0F12<p16>:word16] != 0<16> l02A6
l039A:
	branch Mem240[0x0F02<p16>:word16] != 0<16> l0392
l03A0:
	branch Mem240[0x0F18<p16>:word16] <= 0<16> l03AE
l03AE:
	branch Mem259[0x0B5A<p16>:word16] - Mem259[0x0B5A<p16>:word16] <=u 0<16> l040A
l03B6:
	Mem264[0x0B5E<p16>:word16] = Mem259[0x0B5A<p16>:word16]
	Mem266[0x1166<16>:word16] = 0x101<16>
	Mem267[0x1168<16>:word16] = 0x115E<16>
	branch FnSubfn(0x1166<16>) l03E6
l03CE:
	Mem272[0x1166<16>:word16] = 0x201<16>
	Mem273[0x1168<16>:word16] = 0x115E<16>
	Mem274[0x116A<16>:word16] = 1<16>
	r0_106 = 0x1166<16>
	branch FnSubfn(0x1166<16>) l040A
l03E6:
	Mem279[0x1166<16>:word16] = 0x901<16>
	Mem280[0x1168<16>:word16] = 0<16>
	Mem281[0x116A<16>:word16] = 0xB5E<16>
	Mem282[0x116C<16>:word16] = 1<16>
	Mem283[0x116E<16>:word16] = 0<16>
	FnSubfn(0x1166<16>)
	__syscall<word16>(0x88FC<16>)
	r0_106 = 0x601<16>
l040A:
	word16 r4_294
	word16 r0_293 = fn0486(r0_106, r4_110, out r4_294)
	word16 sp_296 = <invalid>
	Mem301[sp_296 - 1<16>:byte] = 1<8>
	Mem302[sp_296:byte] = 0x18<8>
	word16 r4_306
	word16 r5_307
	word16 r0_305 = fn0AB6(r0_293, r4_294, out r4_306, out r5_307)
	Mem312[sp_296 - 3<16>:word16] = r5_307
l041C_thunk_fn0AE8:
	word16 r4_429
	word16 r0_428
	word16 r5_430
	fn0AE8(r0_305, r4_306, 0x0420<p16>, out r0_428, out r4_429, out r5_430)
	return
l03A6:
	Mem322[0x0F1A<p16>:word16] = Mem240[0x0F18<p16>:word16] + 1<16>
l0386:
l038E:
	r4_110 = fn0AF6(r4_110)
l0392:
l02B0:
	Mem334[0x02CB<p16>:byte] = SLICE(r0_92, byte, 0)
	word16 r1_335 = 0x2C6<16>
l02B8:
	r1_335 = r1_431 + 1<16>
	r1_431 = r1_335
	branch Mem334[r1_431:byte] - r0_92 != 0<16> l02B8
l02BC:
	call Mem334[(r1_335 - 0x2C7<16> << 1<i16>) + 0x2CC<16>:ptr16] (retsize: 0;)
	return
fn0200_exit:
l0234:


word16 fn0470(word16 r0, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse:  r0:[0..15] r4:[0..15]
// LiveOut: r4
// Trashed: NZV r0 r4 r5
// Preserved: sp
fn0470_entry:
l0470:
	word16 r4_13
	word16 r5_31
	word16 r0_12 = fn0AB6(r0, r4, out r4_13, out r5_31)
l047E_thunk_fn0AE8:
	word16 r4_22
	word16 r0_32
	word16 r5_33
	fn0AE8(r0_12, r4_13, 0x0482<p16>, out r0_32, out r4_22, out r5_33)
	return r4_22
fn0470_exit:


word16 fn0486(word16 r0, word16 r4, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse:  r0:[0..15] r4:[0..15]
// LiveOut: r0 r4 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0486_entry:
l0486:
	word16 r4_13
	word16 r4_19
	word16 r5_27
	word16 r5_28
	word16 r0_18 = fn0A74(fn0AB6(r0, r4, out r4_13, out r5_27), r4_13, out r4_19, out r5_28)
	r4Out = r4_19
	return r0_18
fn0486_exit:


word16 fn04A0(word16 r4, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse:  pc:[0..15] r4:[0..15]
// LiveOut: r4
// Trashed: NZVC r0 r1 r2 r3 r4 r5
// Preserved: sp
fn04A0_entry:
	ptr16 fp
l04A0:
	word16 v5_5 = Mem0[pc + 0xA52<16>:word16] & Mem0[0x0EF4<p16>:word16]
	Mem6[pc + 0xA52<16>:word16] = v5_5
	branch v5_5 == 0<16> l04AA
l04AA:
	word16 r5_10 = Mem6[0x0F04<p16>:word16]
l04AE:
	word16 r3_15 = CONVERT(Mem14[r5_10 + 0xEF0<16>:byte], byte, int16)
	branch r3_15 == 0<16> l0588
l04B4:
	Mem19[0x0F0C<p16>:word16] = r3_15
	word16 r4_31
	word16 r0_30 = fn0AB6(CONVERT(Mem19[r5_10 + 0xEF3<16>:byte], byte, int16), r4, out r4_31, out r5_10)
	Mem36[r4_31:byte] = 0x20<8>
	word16 sp_138 = fp - 1<16>
	r4 = r4_31 + 1<16>
	word16 r0_38 = r0_30 - 1<16>
	branch Mem36[0x0F02<p16>:word16] > 0<16> l04D8
l04D2:
	branch r0_30 >=u 5<16> l0584
l04D8:
	branch r0_30 == 3<16> l0584
l04DE:
	Mem54[r5_10 + 0xEF3<16>:byte] = SLICE(r0_30, byte, 0) - 1<8>
	branch r0_30 >u 0x17<16> || r0_30 <u 1<16> l04EE
l04E8:
	sp_138 = <invalid>
	branch fn067C(r0_30 - 1<16>, r3_15, r4_31 + 1<16>, out r0_38, out r4, out r5_10) l0584
l04EE:
	word16 r1_71 = r0_38 + 1<16>
	branch r0_38 != 3<8> l0504
l04F8:
	branch Mem54[0x0F02<p16>:word16] <= 0<16> l0504
l04FE:
	branch fn05D4(r0_38, r3_15, r4, pc, out r0_38, out r3_15, out r4, out r5_10) l0584
l0504:
	word16 r0_100
	branch fn064A(r0_38, r1_71, r3_15, r4, out r0_100, out r4, out r5_10) l0584
l050A:
	word16 r2_107 = 0<16>
l050C:
	branch Mem54[r2_107 + 0xDB8<16>:word16] - r0_100 == 0<16> l0524
l0512:
	word16 v41_119 = Mem54[r2_107 + 0xDB8<16>:word16] - r1_71
	branch v41_119 <u 0<16> l05B4
l0518:
	branch v41_119 == 0<16> l0524
l0524:
	r0_100 = Mem54[r2_107 + 0xDAC<16>:word16]
	word16 r1_126 = 8<16>
l052C:
	word16 r3_131 = Mem130[r0_100:word16]
	branch r3_131 == 0<16> l05AE
l0530:
	branch r3_131 < 0<16> l058A
l058A:
	word16 sp_139 = sp_138 - 1<16>
	Mem140[sp_139:byte] = Mem130[r0_100:byte]
	Mem143[sp_139 + 1<16>:byte] = Mem140[r2_107 + 0xDB8<16>:byte]
	word16 r4_148
	word16 r4_154
	word16 r5_155
	word16 r5_353
	word16 r0_153 = fn0A74(fn0AB6(r0_100, r4, out r4_148, out r5_353), r4_148, out r4_154, out r5_155)
	Mem159[r0_153:word16] = 0<16>
	Mem165[sp_139 - 1<16>:byte] = Mem159[r5_155 + 0xEF0<16>:byte] + 1<8>
	Mem167[sp_139:byte] = Mem165[r5_155 + 0xEF3<16>:byte]
	sp_138 = sp_139 - 1<16>
	r0_100 = fn0AB6(r0_153, r4_154, out r4, out r5_10)
l0532:
	branch r3_131 + 4<16> - Mem130[r5_10 + 0xEF0<16>:byte] >u 0<8> l05AE
l05AE:
	r0_100 = r0_100 + 2<16>
	r1_126 = r1_126 - 1<16>
	branch r1_126 != 0<16> l052C
l053C:
	branch Mem130[r0_100:byte] - Mem130[r5_10 + 0xEF0<16>:byte] <u 0<8> l05B4
l0542:
	word16 r1_196 = Mem130[r0_100:word16]
	Mem198[r0_100:word16] = Mem130[r0_100:word16] | 0x8000<16>
	word16 r0_199 = r0_100 - Mem198[r2_107 + 0xDAC<16>:word16]
	Mem201[0x0F0A<p16>:word16] = r0_199
	Mem203[r0_199 + 0xDC4<16>:word16] = Mem201[r0_199 + 0xDC4<16>:word16] - 1<16>
	word16 sp_205 = sp_138 - 1<16>
	Mem206[sp_205:byte] = SLICE(r1_196, byte, 0)
	Mem208[sp_205 + 1<16>:byte] = Mem206[r2_107 + 0xDB8<16>:byte]
	word16 r4_212
	word16 r4_218
	word16 r5_354
	fn0A7C(fn0AB6(r0_199, r4, out r4_212, out r5_354), r4_212, out r4_218)
	Mem228[pc + 0x5F2<16>:word16] = Mem208[pc + 0x5F2<16>:word16] + Mem208[r2_107 + 0xDD4<16>:word16]
	r4 = fn0B1A(r4_218, out r5_10)
	word16 v69_237 = Mem228[0x0F12<p16>:word16] - 1<16>
	Mem238[0x0F14<p16>:word16] = v69_237
	branch v69_237 > 0<16> l0584
l0574:
	branch Mem238[0x0F02<p16>:word16] > 0<16> l0584
l057A:
	Mem246[0x0EFA<p16>:word16] = 0<16>
	Mem248[0x0EFC<p16>:word16] = 5<16>
l0584:
	Mem252[r5_10 + 0xEF0<16>:byte] = 0<8>
l0588:
l05CA:
	r5_10 = r5_10 - 1<16>
	branch r5_10 < 0<16> l05D2
l05D2:
	return r4
l05CE:
l051A:
	r2_107 = r2_107 + 2<16>
	branch r2_107 >= 0xA<16> l050C
l0522:
l05B4:
	Mem278[sp_138 - 2<i16>:word16] = r5_10
l05B4_thunk_fn0AE8:
	word16 r0_351
	word16 r5_352
	word16 r4_285
	fn0AE8(r0_100, r4, 0x05B8<p16>, out r0_351, out r4_285, out r5_352)
	return r4_285
l04A8:
	return r4
fn04A0_exit:


bool fn05D4(word16 r0, word16 r3, word16 r4, word16 pc, ptr16 & r0Out, ptr16 & r3Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn04A0
// MayUse:  pc:[0..15] r0:[0..15] r3:[0..15] r4:[0..15]
// LiveOut: Z r0 r3 r4 r5
// Trashed: NZVC r0 r3 r4 r5
// Preserved: sp
fn05D4_entry:
	word16 r5
l05D4:
	word16 v11_10 = 4<16> - (r3 - Mem5[0x0F02<p16>:word16])
	bool Z_111 = SLICE(cond(v11_10), bool, 2)
	branch v11_10 >u 0<16> l0648
l0648:
	r0Out = r0
	r3Out = r3
	r4Out = r4
	r5Out = r5
	return Z_111
l05E0:
	word16 r4_23
	word16 r4_29
	word16 r5_116
	fn0A7C(fn0AB6(r0, r4, out r4_23, out r5_116), r4_23, out r4_29)
	word16 r0_34 = fn0A94()
	word16 r3_49 = __rcl<word16,byte>(__rcl<word16,byte>(0<16>, 1<8>, SLICE(cond(r0_34 << 1<i16>), bool, 0)), 1<8>, SLICE(cond(r0_34 << 2<i16>), bool, 0))
	word16 r0_51 = Mem18[(r3_49 << 1<i16>) + 0xF2A<16>:word16]
	word16 v27_53 = Mem18[pc + 0x90A<16>:word16] >> 1<i16>
	Mem54[pc + 0x90A<16>:word16] = v27_53
	branch v27_53 <u 0<16> l060E
l060A:
	r0_51 = r0_51 + 0xC8<16>
l060E:
	Mem63[pc + 0x54A<16>:word16] = Mem54[pc + 0x54A<16>:word16] + r0_51
	word16 r4_74
	word16 r5_117
	word16 r0_73 = fn0AB6(r0_51, r4_29, out r4_74, out r5_117)
l0620_thunk_fn0AE8:
	word16 r0_82
	word16 r4_83
	word16 r5_84
	bool Z_87 = fn0AE8(r0_73, r4_74, 0x0624<p16>, out r0_82, out r4_83, out r5_84)
	r0Out = r0_82
	r3Out = r3_49 << 1<i16>
	r4Out = r4_83
	r5Out = r5_84
	return Z_87
fn05D4_exit:


bool fn064A(word16 r0, word16 r1, word16 r3, word16 r4, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn04A0
// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15]
// LiveOut: Z r0 r4 r5
// Trashed: NZVC r0 r2 r4 r5
// Preserved: sp
fn064A_entry:
	word16 r5
l064A:
	word16 r2_33 = Mem0[0x0F06<p16>:word16]
l064E:
	bool Z_27
	branch Mem0[r2_33 + 0xEE6<16>:byte] - r3 != 0<16> l0676
l0654:
	branch Mem0[r2_33 + 0xEEC<16>:byte] < 0<8> l0676
l065A:
	branch Mem0[r2_33 + 0xEE9<16>:byte] - r1 == 0<16> l0670
l0670:
	Mem23[r2_33 + 0xEE6<16>:byte] = 0<8>
	Z_27 = true
l0660:
	branch Mem0[r2_33 + 0xEE9<16>:byte] - r0 != 0<16> l0676
l0676:
	r2_33 = r2_33 - 1<16>
	Z_27 = SLICE(cond(r2_33), bool, 2) (alias)
	branch r2_33 >= 0<16> l064E
l067A:
	r0Out = r0
	r4Out = r4
	r5Out = r5
	return Z_27
l0666:
l0666_thunk_fn0AE8:
	word16 r0_47
	word16 r4_48
	word16 r5_49
	bool Z_52 = fn0AE8(r0, r4, 0x066A<p16>, out r0_47, out r4_48, out r5_49)
	r0Out = r0_47
	r4Out = r4_48
	r5Out = r5_49
	return Z_52
fn064A_exit:


bool fn067C(word16 r0, word16 r3, word16 r4, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn04A0
//      fn06D6
// MayUse:  r0:[0..15] r3:[0..15] r4:[0..15]
// LiveOut: Z r0 r4 r5 sp
// Trashed: NZVC r0 r1 r4 r5 sp
// Preserved:
fn067C_entry:
	word16 r5
l067C:
	word16 r1_8 = (r3 - 1<16> << 1<i16>) + r0
	byte v11_10 = Mem0[r1_8 + 0xE2A<16>:byte]
	bool Z_15 = SLICE(cond(v11_10), bool, 2)
	branch v11_10 == 0<8> l06A0
l068A:
	Mem17[r1_8 + 0xE2A<16>:byte] = Mem0[r1_8 + 0xE2A<16>:byte] - 1<8>
	word16 r1_18 = CONVERT(Mem17[r1_8 + 0xE2A<16>:byte], byte, int16)
	word16 r4_28
	r0 = fn0AB6(r0, r4, out r4_28, out r5)
	byte v23_33 = Mem23[r1_18 + 0xEE0<16>:byte]
	Mem34[r4_28:byte] = v23_33
	r4 = r4_28 + 1<16>
	Z_15 = SLICE(cond(v23_33), bool, 2) (alias)
l06A0:
	r0Out = r0
	r4Out = r4
	r5Out = r5
	return Z_15
fn067C_exit:


void fn06A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r5
// Preserved: sp
fn06A2_entry:
l06A2:
	branch Mem0[0x0F0A<p16>:word16] == 0<16> l06D4
l06A8:
	word16 r5_10 = Mem0[0x0F04<p16>:word16]
l06AC:
	branch Mem0[r5_10 + 0xEF0<16>:byte] != 0<8> l06D0
l06D0:
	r5_10 = r5_10 - 1<16>
	branch r5_10 >= 0<16> l06AC
l06B2:
	word16 r0_24 = Mem0[0x0F14<p16>:word16]
	branch r0_24 >u 8<16> l06D4
l06BC:
	Mem30[r5_10 + 0xEF0<16>:byte] = SLICE(r0_24, byte, 0) + 2<8>
	Mem31[r5_10 + 0xEF3<16>:byte] = 0x18<8>
	Mem32[0x0F0C<p16>:word16] = 0<16>
l06D4:
	return
fn06A2_exit:


word16 fn06D6(word16 r4, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse:  pc:[0..15] r4:[0..15]
// LiveOut: r4
// Trashed: NZVC r0 r2 r3 r4 r5
// Preserved: r1 sp
fn06D6_entry:
	ptr16 fp
l06D6:
	word16 r2_174 = Mem0[0x0F06<p16>:word16]
l06DA:
	word16 r3_9 = CONVERT(Mem8[r2_174 + 0xEE6<16>:byte], byte, int16)
	branch r3_9 == 0<16> l07A0
l06E0:
	word16 v12_14 = Mem8[pc + 0x812<16>:word16] & Mem8[0x0EF4<p16>:word16]
	Mem15[pc + 0x812<16>:word16] = v12_14
	branch v12_14 != 0<16> l06F6
l06E8:
	branch Mem15[r2_174 + 0xEEC<16>:byte] <= 0<8> l07A0
l06EE:
	branch Mem15[0x0EF4<p16>:word16] - Mem15[0x0EF4<p16>:word16] == 0<16> l07A0
l06F6:
	word16 r5_146
	word16 r0_50
	word16 r0_30 = CONVERT(Mem15[r2_174 + 0xEE9<16>:byte], byte, int16)
	branch Mem15[r2_174 + 0xEEC<16>:byte] < 0<8> l0710
l0710:
	r0_50 = fn0AB6(r0_30, r4, out r4, out r5_146)
	Mem58[r2_174 + 0xEEC<16>:byte] = Mem45[r2_174 + 0xEEC<16>:byte] & 0x7F<8>
l0700:
	word16 r4_69
	r0_50 = fn0AB6(r0_30, r4, out r4_69, out r5_146)
	Mem74[r4_69:byte] = 0x20<8>
	r4 = r4_69 + 1<16>
l0724:
	Mem81[r2_174 + 0xEE9<16>:byte] = Mem79[r2_174 + 0xEE9<16>:byte] + 1<8>
	word16 r0_144 = r0_50 + 1<16>
	word16 sp_105 = fp - 1<16>
	branch r0_144 == 0x19<16> l0784
l0730:
	branch r0_144 == 0x18<16> l0744
l0744:
	branch Mem81[0x0EFA<p16>:word16] != 0<16> l078A
l074A:
	branch Mem81[0x0F14<p16>:word16] - r3_9 <u 0<16> l078A
l0750:
	branch Mem81[0x0F14<p16>:word16] - (r3_9 - 4<16>) >u 0<16> l078A
l075A:
	word16 r4_113
	word16 r4_119
	word16 r5_236
	word16 r0_118 = fn0A7C(fn0AB6(r0_144, r4, out r4_113, out r5_236), r4_113, out r4_119)
	Mem124[0x0EFA<p16>:word16] = 0<16>
	Mem126[0x0EFC<p16>:word16] = 5<16>
	Mem128[0x0F1A<p16>:word16] = Mem126[0x0F18<p16>:word16] - 1<16>
l077A_thunk_fn0AE8:
	word16 r4_134
	word16 r0_237
	word16 r5_238
	fn0AE8(r0_118, r4_119, 0x077E<p16>, out r0_237, out r4_134, out r5_238)
	return r4_134
l0736:
	branch r0_144 >u 0x16<16> l078A
l073C:
	sp_105 = <invalid>
	branch fn067C(r0_144, r3_9, r4, out r0_144, out r4, out r5_146) l078A
l078A:
	Mem156[sp_105 - 2<i16>:word16] = r5_146
l078A_thunk_fn0AE8:
	word16 r4_161
	word16 r0_234
	word16 r5_235
	fn0AE8(r0_144, r4, 0x078E<p16>, out r0_234, out r4_161, out r5_235)
	return r4_161
l0742:
l0784:
	Mem168[r2_174 + 0xEE6<16>:byte] = 0<8>
l07A0:
	r2_174 = r2_174 - 1<16>
	branch r2_174 >= 0<16> l06DA
l07A4:
	return r4
fn06D6_exit:


word16 fn07A6(word16 r4, word16 pc, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse:  pc:[0..15] r4:[0..15]
// LiveOut: r0 r4
// Trashed: NZVC r0 r1 r2 r3 r4 r5
// Preserved: sp
fn07A6_entry:
	ptr16 fp
	word16 r0
	word16 sp_119 = fp
l07A6:
	word16 v5_4 = Mem0[0x0F1C<p16>:word16] - 1<16>
	Mem5[0x0F1E<p16>:word16] = v5_4
	branch v5_4 == 0<16> l07B0
l07B0:
	Mem9[0x0F1E<p16>:word16] = Mem5[0x0F26<p16>:word16]
	word16 r5_10 = 0<16>
l07B8:
	word16 r2_16 = Mem15[0x0F1A<p16>:word16]
	r0 = Mem15[r2_16 + 0xDB8<16>:word16]
	branch r0 == 0<16> l0868
l07C2:
	branch Mem15[0x0EFC<p16>:word16] == 0<16> l07F4
l07C8:
	word16 r1_27 = Mem15[r2_16 + 0xDAC<16>:word16]
	word16 r3_28 = 8<16>
l07D0:
	branch Mem32[r1_27:word16] == 0<16> l07E8
l07D4:
	sp_119 = sp_119 - 1<16>
	Mem42[sp_119:byte] = Mem32[r1_27:byte]
	Mem45[sp_119 + 1<16>:byte] = SLICE(r0, byte, 0)
	word16 r4_50
	word16 r5_560
	r0 = fn0A74(fn0AB6(r0, r4, out r4_50, out r5_560), r4_50, out r4, out r5_10)
	branch Mem45[r1_27:word16] > 0<16> l07E8
l07E6:
	Mem67[r1_27:word16] = 0<16>
l07E8:
	r1_27 = r1_27 + 2<16>
	r3_28 = r3_28 - 1<16>
	branch r3_28 != 0<16> l07D0
l07EE:
	Mem87[r2_16 + 0xDB8<16>:word16] = Mem73[r2_16 + 0xDB8<16>:word16] + 1<16>
	r0 = r0 + 1<16>
l07F4:
	word16 r1_148 = Mem92[r2_16 + 0xDAC<16>:word16]
	word16 r3_153 = 8<16>
l07FC:
	branch Mem98[r1_148:word16] <= 0<16> l0840
l0840:
	branch Mem98[r1_148:word16] >= 0<16> l085A
l0844:
	branch Mem98[0x0EFC<p16>:word16] != 0<16> l085A
l084A:
	sp_119 = sp_119 - 1<16>
	Mem121[sp_119:byte] = Mem98[r1_148:byte]
	Mem124[sp_119 + 1<16>:byte] = SLICE(r0, byte, 0)
	word16 r4_129
	word16 r5_561
	r0 = fn0A74(fn0AB6(r0, r4, out r4_129, out r5_561), r4_129, out r4, out r5_10)
	Mem140[r1_148:word16] = 0<16>
l085A:
	r1_148 = r1_148 + 2<16>
	r3_153 = r3_153 - 1<16>
	branch r3_153 != 0<16> l07FC
l0860:
	branch r5_10 != 0<16> l0868
l0864:
	Mem171[r2_16 + 0xDB8<16>:word16] = 0<16>
l0868:
	word16 v80_184 = Mem183[pc + 0x6AE<16>:word16] - 2<16>
	Mem185[pc + 0x6AE<16>:word16] = v80_184
	branch v80_184 < 0<16> l087E
l087E:
	Mem188[0x0F1C<p16>:word16] = 0xA<16>
	Mem190[0x0DAA<p16>:word16] = ~Mem188[0x0DA8<p16>:word16]
	branch Mem190[0x0EFC<p16>:word16] == 0<16> l0894
l0894:
	branch Mem190[0x0EFE<p16>:word16] == 0<16> l08AA
l089A:
	Mem204[0x0F22<p16>:word16] = -Mem190[0x0F20<p16>:word16]
	branch Mem204[0x0F00<p16>:word16] != 0<16> l08AA
l08A4:
	Mem211[0x0EFE<p16>:word16] = 1<16>
l088E:
	Mem214[0x0EFE<p16>:word16] = 0<16>
l08AA:
	Mem219[0x0F00<p16>:word16] = 0<16>
	Mem220[0x0F02<p16>:word16] = 0<16>
l0870:
	branch r5_10 != 0<16> l0878
l0878:
	Mem232[0x0F28<p16>:word16] = r5_10
l0874:
l0800:
	Mem236[r1_148:word16] = Mem98[r1_148:word16] + Mem98[0x0F20<p16>:word16]
	branch Mem236[r1_148:word16] >=u 8<16> l0810
l080A:
	branch Mem236[r1_148:word16] >u 0x48<16> l0814
l0810:
	Mem244[0x0F00<p16>:word16] = sp_119
l0814:
	branch r0 != 0x17<16> l081E
l081A:
	Mem253[0x0F02<p16>:word16] = sp_119
l081E:
	branch r0 >u 0x16<16> l0828
l0824:
	fn093C(r0, r1_148)
l0828:
	word16 sp_282 = sp_119 - 1<16>
	Mem283[sp_282:byte] = Mem277[r1_148:byte]
	Mem286[sp_282 + 1<16>:byte] = SLICE(r0, byte, 0)
	word16 r4_294
	word16 r5_295
	word16 r0_293 = fn0AB6(r0, r4, out r4_294, out r5_295)
	fn096A(r3_153)
	Mem306[sp_282 - 2<i16>:word16] = r5_295
l0838_thunk_fn0AE8:
	word16 r0_308
	word16 r4_309
	word16 r5_562
	fn0AE8(r0_293, r4_294, 0x083C<p16>, out r0_308, out r4_309, out r5_562)
	r4Out = r4_309
	return r0_308
l07AC:
l08B2:
	branch Mem315[0x0F12<p16>:word16] == 0<16> l08CE
l08B8:
	word16 v37_325 = Mem315[pc + 0x63A<16>:word16] & Mem315[0x0EF4<p16>:word16]
	Mem326[pc + 0x63A<16>:word16] = v37_325
	branch v37_325 == 0<16> l08CE
l08C0:
	word16 r2_330 = Mem326[0x0F06<p16>:word16]
l08C4:
	branch Mem326[r2_330 + 0xEE6<16>:byte] == 0<8> l08D0
l08D0:
	word16 r0_347 = fn0A94() & Mem326[0x0F0E<p16>:word16]
	branch r0_347 != 0<16> l093A
l08DA:
	word16 r0_351 = fn0A94()
	word16 r1_356 = Mem326[0x0F08<p16>:word16]
	branch r1_356 < 0<16> l08EE
l08E4:
	branch Mem326[r1_356 + 0xDC4<16>:word16] <= 0<16> l08EE
l08EA:
	r0_351 = r0_351 << 1<i16>
	branch r0_351 << 1<i16> <u 0<16> l0904
l08EE:
	ui32 v117_457 = CONVERT(r0_351, word16, uint32) << 1<8>
	word16 r0_371 = SLICE(v117_457, word16, 0)
	word16 r1_385 = __rcl<word16,byte>(__rcl<word16,byte>(SLICE(v117_457, word16, 16), 1<8>, SLICE(cond(r0_371 << 1<i16>), bool, 0)), 1<8>, SLICE(cond(r0_371 << 2<i16>), bool, 0))
	r1_356 = r1_385 << 1<i16>
	branch Mem326[(r1_385 << 1<i16>) + 0xDC4<16>:word16] <= 0<16> l08D0
l0904:
	r0_347 = 0xDB8<16>
l0908:
	r0_347 = r0_347 - 2<16>
	word16 r3_402 = Mem326[r0_347:word16] + r1_356
	branch Mem326[r3_402:word16] <= 0<16> l0908
l0910:
	Mem416[r2_330 + 0xEE6<16>:byte] = Mem326[r3_402:byte] + 2<8>
	Mem418[r2_330 + 0xEE9<16>:byte] = Mem416[r0_347 + 0xC<16>:byte]
	Mem419[r2_330 + 0xEEC<16>:byte] = 0x80<8>
	branch r0_347 == 0xDAC<16> l0936
l092C:
	r0_347 = fn0A94() & Mem419[0x0F0C<p16>:word16]
	branch r0_347 != 0<16> l093A
l0936:
	Mem435[r2_330 + 0xEEC<16>:byte] = Mem419[r2_330 + 0xEEC<16>:byte] + 1<8>
l093A:
	r4Out = r4
	return r0_347
l08CA:
	r2_330 = r2_330 - 1<16>
	branch r2_330 >= 0<16> l08C4
l08CE:
	r4Out = r4
	return r0
fn07A6_exit:


void fn093C(word16 r0, word16 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn07A6
// MayUse:  r0:[0..15] r1:[0..15]
// LiveOut:
// Trashed: NZVC
// Preserved: r3 sp
fn093C_entry:
l093C:
	word16 r3_7 = Mem5[r1:word16]
	word16 r3_15 = r3_7 - 1<16>
	branch Mem5[0x0F20<p16>:word16] < 0<16> l094C
l094A:
	r3_15 = r3_7 - 2<16>
l094C:
	word16 r3_22 = (r3_15 << 1<i16>) + r0 - 0x16<16> + 0xE40<16>
	word16 wLoc04_49 = 7<16>
l0958:
	Mem30[r3_22 + 0<16>:byte] = 0<8>
	word16 v18_34 = wLoc04_49 - 1<16>
	r3_22 = r3_22 + 2<16>
	wLoc04_49 = v18_34
	branch v18_34 != 0<16> l0958
l0964:
	return
fn093C_exit:


void fn096A(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn07A6
// MayUse:  r3:[0..15]
// LiveOut:
// Trashed: NZVC r3
// Preserved: sp
fn096A_entry:
l096A:
	branch (r3 & 1<16>) != 0<16> l0984
l0984:
	branch Mem0[0x0DA8<p16>:word16] != 0<16> l0976
l0970:
	branch Mem0[0x0DA8<p16>:word16] != 0<16> l098A
l098A:
	Mem21[0x112D<p16>:byte] = 0x5C<8>
	Mem22[0x1131<p16>:byte] = 0x2F<8>
	return
l0976:
	Mem25[0x112D<p16>:byte] = 0x2F<8>
	Mem26[0x1131<p16>:byte] = 0x5C<8>
	return
fn096A_exit:


word16 fn0998(word16 r0, word16 r4, word16 pc, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse:  pc:[0..15] r0:[0..15] r4:[0..15]
// LiveOut: r0 r4
// Trashed: NZVC r0 r2 r4 r5
// Preserved: r1 sp
fn0998_entry:
l0998:
	word16 r2_154 = Mem0[0x0F02<p16>:word16]
	branch r2_154 > 0<16> l09E4
l099E:
	word16 v10_8 = Mem0[0x0F1E<p16>:word16] - 1<16>
	Mem9[0x0F20<p16>:word16] = v10_8
	branch v10_8 != 0<16> l0A1E
l0A1E:
	branch r2_154 == 0<16> l0A5E
l0A22:
	branch Mem9[0x0F1E<p16>:word16] < 0x28<16> l0A5E
l09A4:
	Mem21[0x0F20<p16>:word16] = 0x64<16>
	Mem23[0x0F12<p16>:word16] = 1<16>
	Mem24[0x0A6A<p16>:word16] = 0x1134<16>
	word16 r0_30 = fn0A94()
	r2_154 = 1<16>
	word16 r1_25 = 0<16>
	r0 = r0_30 << 1<i16>
	branch r0_30 << 1<i16> >=u 0<16> l09D4
l09C2:
	r0 = r0_30 << 2<i16>
	branch r0_30 << 2<i16> >=u 0<16> l09D4
l09C6:
	Mem42[0x0F12<p16>:word16] = Mem24[0x0F10<p16>:word16] + 1<16>
	Mem43[0x0A6A<p16>:word16] = 0x113D<16>
	r1_25 = 0xA<16>
l09D4:
	branch r0 > 0<16> l09E4
l09D8:
	Mem56[0x0F12<p16>:word16] = -Mem54[0x0F10<p16>:word16]
	Mem61[pc + 0x8A<16>:word16] = Mem56[pc + 0x8A<16>:word16] + r1_25
	r2_154 = 0x4A<16>
l09E4:
	branch Mem66[0x0EF4<p16>:word16] != 0<16> l0A18
l09EA:
	branch Mem66[0x0EF6<p16>:word16] != 0<16> l0A18
l09F0:
	branch Mem66[0x0F10<p16>:word16] < 0<16> l09FE
l09FE:
	branch r2_154 == 2<8> l0A2A
l09F6:
	branch r2_154 == 0x49<8> l0A2A
l0A2A:
	word16 r4_111
	word16 r4_117
	word16 r4_129
	word16 r5_234
	word16 r5_235
	word16 r5_233
	word16 r5_236
	r0 = fn0A74(fn0AB6(fn0A74(fn0AB6(r0, r4, out r4_111, out r5_233), r4_111, out r4_117, out r5_234), r4_117, out r4_129, out r5_235), r4_129, out r4, out r5_236)
	Mem140[0x0F04<p16>:word16] = 0<16>
	branch Mem140[0x0F12<p16>:word16] > 0<16> l0A5E
l0A54:
	Mem147[0x0EFA<p16>:word16] = 0<16>
	Mem149[0x0EFC<p16>:word16] = 5<16>
l0A5E:
	r4Out = r4
	return r0
l09FC:
l0A04:
	r2_154 = r2_154 + Mem66[0x0F10<p16>:word16]
	word16 r4_166
	word16 r5_237
	r0 = fn0A60(fn0AB6(r0, r4, out r4_166, out r5_237), r4_166, out r4)
l0A18:
	Mem178[0x0F04<p16>:word16] = r2_154
	r4Out = r4
	return r0
fn0998_exit:


word16 fn0A60(word16 r0, word16 r4, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0998
// MayUse:  r0:[0..15] r4:[0..15]
// LiveOut: r0 r4
// Trashed: NZV r0 r4 r5
// Preserved: sp
fn0A60_entry:
l0A60:
l0A60_thunk_fn0AE8:
	word16 r0_9
	word16 r4_10
	word16 r5_18
	fn0AE8(r0, r4, 0x0A64<p16>, out r0_9, out r4_10, out r5_18)
	r4Out = r4_10
	return r0_9
fn0A60_exit:


word16 fn0A74(word16 r0, word16 r4, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0486
//      fn04A0
//      fn07A6
//      fn0998
// MayUse:  r0:[0..15] r4:[0..15]
// LiveOut: r0 r4 r5
// Trashed: NZV r0 r4 r5
// Preserved: sp
fn0A74_entry:
l0A74:
l0A74_thunk_fn0AE8:
	word16 r0_9
	word16 r4_10
	word16 r5_11
	fn0AE8(r0, r4, 0x0A78<p16>, out r0_9, out r4_10, out r5_11)
	r4Out = r4_10
	r5Out = r5_11
	return r0_9
fn0A74_exit:


word16 fn0A7C(word16 r0, word16 r4, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn04A0
//      fn05D4
//      fn06D6
// MayUse:  r0:[0..15] r4:[0..15]
// LiveOut: r0 r4
// Trashed: NZV r0 r4 r5
// Preserved: sp
fn0A7C_entry:
l0A7C:
	Mem6[r4:byte] = Mem0[0x0F24<p16>:byte]
l0A80_thunk_fn0AE8:
	word16 r0_15
	word16 r4_16
	word16 r5_24
	fn0AE8(r0, r4 + 1<16>, 0x0A84<p16>, out r0_15, out r4_16, out r5_24)
	r4Out = r4_16
	return r0_15
fn0A7C_exit:


word16 fn0A94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn05D4
//      fn07A6
//      fn0998
// MayUse: 
// LiveOut: r0
// Trashed: NZVC r0
// Preserved: sp
fn0A94_entry:
l0A94:
	word16 r0_11 = ((SEQ(SLICE(__swab(Mem0[0x0AB2<p16>:word16]), byte, 8), 0<8>) << 1<i16>) + Mem0[0x0AB2<p16>:word16] << 2<i16>) + Mem0[0x0AB2<p16>:word16]
	Mem14[0x0AB4<p16>:word16] = r0_11 + 0x3619<16>
	return r0_11 + 0x3619<16>
fn0A94_exit:


word16 fn0AB6(word16 r0, word16 r4, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
//      fn0470
//      fn0486
//      fn04A0
//      fn05D4
//      fn067C
//      fn06D6
//      fn07A6
//      fn0998
//      fn0AF6
//      fn0B1A
// MayUse:  r0:[0..15] r4:[0..15]
// LiveOut: r0 r4 r5
// Trashed: NZV r0 r4 r5
// Preserved: sp
fn0AB6_entry:
l0AB6:
l0AB6_thunk_fn0AE8:
	word16 r0_9
	word16 r4_10
	word16 r5_11
	fn0AE8(r0, r4, 0x0ABA<p16>, out r0_9, out r4_10, out r5_11)
	r4Out = r4_10
	r5Out = r5_11
	return r0_9
fn0AB6_exit:


bool fn0AE8(word16 r0, word16 r4, word16 r5, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
//      fn0470
//      fn04A0
//      fn05D4
//      fn064A
//      fn06D6
//      fn07A6
//      fn0A60
//      fn0A74
//      fn0A7C
//      fn0AB6
//      fn0B1A
//      fn0C20
// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r0 r4 r5
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0AE8_entry:
	word16 wArg00
l0AE8:
	word16 r0_12 = Mem5[r5:word16]
l0AEC:
	byte v8_14 = Mem13[r0_12:byte]
	Mem17[r4:byte] = v8_14
	r0_12 = r0_12 + 1<16>
	r4 = r4 + 1<16>
	branch v8_14 != 0<8> l0AEC
l0AF0:
	word16 r0_33
	byte NZV_34
	call r5 + 2<16> (retsize: 0;)
		uses: r0:r0
		defs: NZV:NZV_34,r0:r0_33
	r0Out = r0_33
	r4Out = r4 - 1<16>
	r5Out = wArg00
	return SLICE(NZV_34, bool, 2)
fn0AE8_exit:


word16 fn0AF6(word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse:  r4:[0..15]
// LiveOut: r4
// Trashed: NZVC r0 r4 r5 sp
// Preserved:
fn0AF6_entry:
l0AF6:
	word16 r4_15
	word16 r5_30
	fn0AB6(Mem0[0x0F14<p16>:word16] + 2<16>, r4, out r4_15, out r5_30)
	Mem20[r4_15:byte] = 0x80<8>
	PRINT(0x1178<16>)
	return 0x1178<16>
fn0AF6_exit:


word16 fn0B1A(word16 r4, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn04A0
// MayUse:  r4:[0..15]
// LiveOut: r4 r5
// Trashed: NZV r0 r3 r4 r5
// Preserved: sp
fn0B1A_entry:
l0B1A:
	word16 r4_13
	word16 r5_32
	word16 r0_12 = fn0AB6(Mem0[0x0B5A<p16>:word16], r4, out r4_13, out r5_32)
l0B30_thunk_fn0AE8:
	word16 r4_22
	word16 r5_23
	word16 r0_33
	fn0AE8(r0_12, r4_13, 0x0B34<p16>, out r0_33, out r4_22, out r5_23)
	r5Out = r5_23
	return r4_22
fn0B1A_exit:


void fn0B60(word16 r0, word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r3:[0..15] r4:[0..15]
// LiveOut:
// Trashed: NZVC r0 r3 r4
// Preserved: r1 r2 r5 sp
fn0B60_entry:
l0B60:
	word16 wLoc08_139 = 0<16>
	branch r3 < 0<16> l0B74
l0B74:
	Mem22[0x0BC8<p16>:word16] = 0x30<16>
	r3 = -r3
l0B6C:
	Mem25[0x0BC8<p16>:word16] = 0x20<16>
l0B7C:
	branch r3 == 0<16> l0BBE
l0B80:
	word16 r2_35 = 0xBD4<16> - (r3 << 1<i16>)
l0B88:
	word16 r5_123 = 0x30<16>
	word16 v16_41 = Mem40[r2_35:word16]
	r2_35 = r2_35 + 2<16>
	branch v16_41 == 0<16> l0BBE
l0B8E:
	r0 = r0 - v16_41
	branch r0 <u 0<16> l0B96
l0B96:
	word16 r5_79
	r0 = r0 + v16_41
	branch wLoc08_139 != 0<16> l0BB4
l0B9C:
	branch r5_123 == 0xFFD0<16> l0BA4
l0BA4:
	branch r3 == 1<16> l0BB4
l0BAA:
	branch Mem40[r2_35:word16] == 0<16> l0BB4
l0BAE:
	r5_79 = CONVERT(Mem40[0x0BC6<p16>:byte], byte, int16)
l0BA0:
	wLoc08_139 = wLoc08_139 + 1<16>
l0BB4:
	r5_79 = r5_123 + 0<16>
l0BB8:
	Mem93[r4:byte] = SLICE(r5_79, byte, 0)
	r4 = r4 + 1<16>
	r3 = r3 - 1<16>
	branch r3 != 0<16> l0B88
l0BBE:
	return
fn0B60_exit:
l0B92:
	r5_123 = r5_123 + 1<16>


void fn0BD6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2
// Preserved: sp
fn0BD6_entry:
l0BD6:
	Mem3[0x0F1A<p16>:word16] = 3<16>
	Mem4[0x0B5C<p16>:word16] = 0<16>
	Mem6[0x0F0E<p16>:word16] = 0xF800<16>
	Mem7[0x0F10<p16>:word16] = 0xE000<16>
	word16 r1_15 = 0xE56<16>
	word16 r0_25 = 6<16>
l0BF4:
	word16 r2_12 = 0xA<16>
l0BF8:
	Mem16[r1_15:byte] = 4<8>
	r1_15 = r1_15 + 1<16>
	r2_12 = r2_12 - 1<16>
	branch r2_12 != 0<16> l0BF8
l0C00:
	r1_15 = r1_15 + 0xA<16>
	r0_25 = r0_25 - 1<16>
	branch r0_25 != 0<16> l0BF4
l0C08:
	Mem30[0x1166<16>:word16] = 0x1100<16>
	Mem31[0x1168<16>:word16] = 0x1170<16>
	FnSubfn(0x1166<16>)
	Mem34[0x1174<p16>:word16] = Mem31[0x1170<p16>:word16]
	return
fn0BD6_exit:


word16 fn0C20(word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0200
// MayUse:  pc:[0..15]
// LiveOut: r4
// Trashed: NZVC r0 r1 r2 r4 r5
// Preserved: sp
fn0C20_entry:
l0C20:
	word16 r1_11 = 0xDB8<16>
	word16 r0_14 = 6<16>
	word16 r2_12 = 5<16>
l0C2C:
	Mem10[r1_11:word16] = r2_12
	r1_11 = r1_11 + 2<16>
	r2_12 = r2_12 + 2<16>
	r0_14 = r0_14 - 1<16>
	branch r0_14 != 0<16> l0C2C
l0C36:
	word16 r1_18 = 0<16>
	word16 r0_20 = 8<16>
	word16 r2_21 = 0xB<16>
l0C40:
	Mem26[r1_18 + 0xDE0<16>:word16] = r2_21
	Mem27[r1_18 + 0xDF0<16>:word16] = r2_21
	Mem28[r1_18 + 0xE00<16>:word16] = r2_21
	Mem29[r1_18 + 0xE10<16>:word16] = r2_21
	Mem30[r1_18 + 0xE20<16>:word16] = r2_21
	Mem31[r1_18 + 0xE30<16>:word16] = r2_21
	Mem32[r1_18 + 0xDC4<16>:word16] = 6<16>
	r1_18 = r1_18 + 2<16>
	r2_21 = r2_21 + 8<16>
	r0_20 = r0_20 - 1<16>
	branch r0_20 != 0<16> l0C40
l0C68:
	word16 r1_43 = 0xEE6<16>
	word16 r0_44 = 0x10<16>
l0C70:
	Mem48[r1_43:word16] = 0<16>
	r1_43 = r1_43 + 2<16>
	r0_44 = r0_44 - 1<16>
	branch r0_44 != 0<16> l0C70
l0C76:
	Mem55[0x0F0A<p16>:word16] = 0xFFFF<16>
	Mem56[0x0F14<p16>:word16] = 0x30<16>
	Mem57[0x0F16<p16>:word16] = 2<16>
	Mem58[0x0F18<p16>:word16] = 0x78<16>
	Mem59[0x0F1C<p16>:word16] = 0xA<16>
	Mem60[0x0F1E<p16>:word16] = 4<16>
	Mem61[0x0F28<p16>:word16] = 4<16>
	Mem62[0x0F20<p16>:word16] = 0x64<16>
	Mem63[0x0F22<p16>:word16] = 1<16>
	Mem69[pc + 0x25E<16>:word16] = Mem63[pc + 0x25E<16>:word16] << 1<i16>
	word16 v17_70 = Mem69[pc + 0x25C<16>:word16] << 1<i16>
	Mem71[pc + 0x25C<16>:word16] = v17_70
	branch v17_70 != 0<16> l0CBA
l0CB6:
	Mem75[pc + 0x256<16>:word16] = Mem71[pc + 0x256<16>:word16] >> 1<i16>
l0CBA:
l0CBE_thunk_fn0AE8:
	word16 r0_107
	word16 r5_108
	word16 r4_94
	fn0AE8(r0_44, 0x1178<16>, 0x0CC2<p16>, out r0_107, out r4_94, out r5_108)
	return r4_94
fn0C20_exit:


void fn0D98(word16 r0, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15]
// LiveOut:
// Trashed: NZV r0 r1 r2 r4
// Preserved: sp
fn0D98_entry:
l0D98:
	word16 r1_16 = 0x46<16>
l0D9C:
	Mem14[r4:byte] = Mem7[CONVERT(Mem7[r0:byte], byte, int16) + 0xEE0<16>:byte]
	r0 = r0 + 2<16>
	r4 = r4 + 1<16>
	r1_16 = r1_16 - 1<16>
	branch r1_16 != 0<16> l0D9C
l0DA8:
	return
fn0D98_exit:


