// fn0200
// Return size: 0
void fn0200()
fn0200_entry:
	// succ:  l0200
l0200:
	sp = fp
	r2 = 0x0002
	NZ = cond(r2)
	V = false
	r3 = 0x0000
	N = false
	V = false
	C = false
	Z = true
	r0 = 0x0F9A
	NZ = cond(r0)
	V = false
	PRINT(r0)
	// succ:  l020C
l020C:
	N = TTYIN(out r0)
	branch Test(ULT,C) l020C
	// succ:  l0210 l020C
l0210:
	r1 = r0
	NZ = cond(r1)
	V = false
	// succ:  l0212
l0212:
	N = TTYIN(out r0)
	branch Test(ULT,C) l0212
	// succ:  l0216 l0212
l0216:
	N = TTYIN(out r0)
	branch Test(ULT,C) l0216
	// succ:  l021A l0216
l021A:
	v12 = 0x0042 - r1
	NZVC = cond(v12)
	branch Test(EQ,Z) l0236
	// succ:  l0220 l0236
l0220:
	r2 = r2 - 0x0001
	NZV = cond(r2)
	r3 = r3 + 0x0001
	NZV = cond(r3)
	v15 = 0x0049 - r1
	NZVC = cond(v15)
	branch Test(EQ,Z) l0240
	// succ:  l022A l0240
l022A:
	r2 = r2 - 0x0001
	NZV = cond(r2)
	r3 = r3 + 0x0001
	NZV = cond(r3)
	v16 = 0x0045 - r1
	NZVC = cond(v16)
	branch Test(EQ,Z) l0240
	// succ:  l0234 l0240
l0234:
	goto l0200
	// succ:  l0200
l0236:
	r0 = 0x0FDA
	NZ = cond(r0)
	V = false
	PRINT(r0)
	// succ:  l023C
l023C:
	N = TTYIN(out r0)
	branch Test(ULT,C) l023C
	// succ:  l0240 l023C
l0240:
	v18 = Mem0[0x0244:word16]
	Mem0[0x0244:word16] = v18
	NZ = cond(v18)
	V = false
	v19 = Mem0[0x0248:word16]
	Mem0[0x0248:word16] = v19
	NZ = cond(v19)
	V = false
	v20 = Mem0[0x0024:word16] | 0x1040
	Mem0[0x0024:word16] = v20
	NZ = cond(v20)
	V = false
	r0 = 0x1166
	NZ = cond(r0)
	V = false
	Mem0[r0:word16] = 0x1100
	NZ = cond(v21)
	V = false
	Mem0[r0 + 0x0002:word16] = 0x1170
	NZ = cond(v22)
	V = false
	FnSubfn(r0)
	v24 = Mem0[0x0264:word16]
	Mem0[0x0264:word16] = v24
	NZ = cond(v24)
	V = false
	v25 = Mem0[0x0268:word16]
	Mem0[0x0268:word16] = v25
	N = false
	V = false
	C = false
	Z = true
	r0 = 0x1166
	NZ = cond(r0)
	V = false
	Mem0[r0:word16] = 0x0101
	NZ = cond(v26)
	V = false
	Mem0[r0 + 0x0002:word16] = 0x115E
	NZ = cond(v27)
	V = false
	FnSubfn(r0)
	branch Test(ULT,C) l029E
	v41 = Mem0[0x0244:word16]
	Mem0[0x0244:word16] = v41
	NZ = cond(v41)
	V = false
	v42 = Mem0[0x0248:word16]
	Mem0[0x0248:word16] = v42
	NZ = cond(v42)
	V = false
	v43 = Mem0[0x0024:word16] | 0x1040
	Mem0[0x0024:word16] = v43
	NZ = cond(v43)
	V = false
	r0 = 0x1166
	NZ = cond(r0)
	V = false
	Mem0[r0:word16] = 0x1100
	NZ = cond(v44)
	V = false
	Mem0[r0 + 0x0002:word16] = 0x1170
	NZ = cond(v45)
	V = false
	FnSubfn(r0)
	v47 = Mem0[0x0264:word16]
	Mem0[0x0264:word16] = v47
	NZ = cond(v47)
	V = false
	v48 = Mem0[0x0268:word16]
	Mem0[0x0268:word16] = v48
	N = false
	V = false
	C = false
	Z = true
	r0 = 0x1166
	NZ = cond(r0)
	V = false
	Mem0[r0:word16] = 0x0101
	NZ = cond(v49)
	V = false
	Mem0[r0 + 0x0002:word16] = 0x115E
	NZ = cond(v50)
	V = false
	FnSubfn(r0)
	branch Test(ULT,C) l029E
	// succ:  l027A l029E
l027A:
	r0 = 0x1166
	NZ = cond(r0)
	V = false
	Mem0[r0:word16] = 0x0801
	NZ = cond(v28)
	V = false
	Mem0[r0 + 0x0002:word16] = 0x0000
	N = false
	V = false
	C = false
	Z = true
	Mem0[r0 + 0x0004:word16] = 0x0B5E
	NZ = cond(v30)
	V = false
	Mem0[r0 + 0x0006:word16] = 0x0001
	NZ = cond(v31)
	V = false
	Mem0[r0 + 0x0008:word16] = 0x0000
	N = false
	V = false
	C = false
	Z = true
	FnSubfn(r0)
	r0 = 0x0601
	NZ = cond(r0)
	V = false
	__syscall(0x88FC)
	r0 = 0x1166
	NZ = cond(r0)
	V = false
	Mem0[r0:word16] = 0x0801
	NZ = cond(v51)
	V = false
	Mem0[r0 + 0x0002:word16] = 0x0000
	N = false
	V = false
	C = false
	Z = true
	Mem0[r0 + 0x0004:word16] = 0x0B5E
	NZ = cond(v53)
	V = false
	Mem0[r0 + 0x0006:word16] = 0x0001
	NZ = cond(v54)
	V = false
	Mem0[r0 + 0x0008:word16] = 0x0000
	N = false
	V = false
	C = false
	Z = true
	FnSubfn(r0)
	r0 = 0x0601
	NZ = cond(r0)
	V = false
	__syscall(0x88FC)
	// succ:  l029E
l029E:
	call fn0BD4 (retsize: 2; FPU: 2;)
	call fn0C1E (retsize: 2; FPU: 2;)
	// succ:  l02A6
l02A6:
	N = TTYIN(out r0)
	branch Test(ULT,C) l02FC
	// succ:  l02AA l02FC
l02AA:
	v36 = Mem0[0x0EFA:word16]
	v36 = v36 & v36
	NZ = cond(v36)
	V = false
	C = false
	branch Test(NE,Z) l02FC
	// succ:  l02B0 l02FC
l02B0:
	v37 = Mem0[0x02B4:byte]
	Mem0[0x02B4:byte] = v37
	NZ = cond(v37)
	V = false
	r1 = 0x02C6
	NZ = cond(r1)
	V = false
	// succ:  l02B8
l02B8:
	v38 = Mem0[r1:word16]
	r1 = r1 + 0x0002
	v39 = v38 - r0
	NZVC = cond(v39)
	branch Test(NE,Z) l02B8
	// succ:  l02BC l02B8
l02BC:
	r1 = r1 - 0x02C7
	NZVC = cond(r1)
	r1 = r1 << 1
	NZVC = cond(r1)
	call Mem0[r1 + 0x02CC:ptr16] (retsize: 4; FPU: 2;)
	return
	// succ:  fn0200_exit
l02FC:
	r0 = 0x1166
	NZ = cond(r0)
	V = false
	Mem0[r0:word16] = 0x1100
	NZ = cond(v56)
	V = false
	Mem0[r0 + 0x0002:word16] = 0x1170
	NZ = cond(v57)
	V = false
	FnSubfn(r0)
	r0 = Mem0[0x1170:word16]
	NZ = cond(r0)
	V = false
	r0 = r0 - Mem0[0x1172:word16]
	NZVC = cond(r0)
	branch Test(LT,N) l0388
	// succ:  l0316 l0388
l0316:
	v61 = Mem0[0x031C:word16]
	Mem0[0x031C:word16] = v61
	NZ = cond(v61)
	V = false
	v62 = Mem0[pc + 0x0E52:word16] + 0x0001
	Mem0[pc + 0x0E52:word16] = v62
	NZVC = cond(v62)
l0388:
	v64 = 0x1178 - r4
	NZVC = cond(v64)
	branch Test(EQ,Z) l02A6
	// succ:  l038E l02A6
l038E:
	call fn0AF4 (retsize: 2; FPU: 2;)
	goto l02A6
	// succ:  l02A6
fn0200_exit:


// fn0AF4
// Return size: 0
void fn0AF4()
fn0AF4_entry:
	// succ:  l0AF4
l0AF4:
	sp = fp
fn0AF4_exit:


// fn0BD4
// Return size: 0
void fn0BD4()
fn0BD4_entry:
	// succ:  l0BD4
l0BD4:
	sp = fp
	__halt()
fn0BD4_exit:


// fn0C1E
// Return size: 2
void fn0C1E()
fn0C1E_entry:
	// succ:  l0C1E
l0C1E:
	sp = fp
	return
	// succ:  fn0C1E_exit
fn0C1E_exit:


