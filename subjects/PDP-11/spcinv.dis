void fn0200(word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r5:[0..15]
// LiveOut:
// Trashed:
// Preserved:
l02FC:
	Mem102[0x1166:word16] = 0x1100
	Mem103[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	r0_105 = Mem103[0x1170:word16] - Mem103[0x1172:word16]
	branch r0_105 < 0x0000 l0388
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0388:
	branch 0x1178 - r4_109 == 0x0000 l02A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0316:
	Mem113[0x1174:word16] = Mem103[0x1170:word16]
	Mem117[pc + 0x0E52:word16] = Mem113[pc + 0x0E52:word16] + 0x0001
	Mem118[0x0EF6:word16] = ~Mem117[0x0EF4:word16]
	branch v49 != 0x0000 l032C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0328:
	Mem125[0x0EF8:word16] = ~Mem118[0x0EF6:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l032C:
	Mem131 = PHI((Mem118, l0316), (Mem125, l0328))
	branch Mem131[0x0EFA:word16] == 0x0000 l0352
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0332:
	Mem138[0x0EFC:word16] = Mem131[0x0EFA:word16] - 0x0001
	branch v55 != 0x0000 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0338:
	branch Mem138[0x0F18:word16] == 0x0000 l03AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l033E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	r0_158 = fn0486(r0_105, r1_157, r4_109, r5_153, stackArg0, out r4_159, out r5_160)
	Mem166[0x0F16:word16] = 0x0002
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	r0_175 = fn0470(r0_158, r1_157, r2_174, r4_159, r5_160, stackArg0, out r2_176, out r4_177, out r5_178)
	Mem184[0x0F18:word16] = 0x0078
	sp_179 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0352:
	r5_237 = PHI((r5_153, l032C), (r5_178, l033E))
	r4_235 = PHI((r4_109, l032C), (r4_177, l033E))
	r0_227 = PHI((r0_105, l032C), (r0_175, l033E))
	r2_220 = PHI((r2_174, l032C), (r2_176, l033E))
	sp_215 = PHI((sp_218, l032C), (sp_179, l033E))
	Mem190 = PHI((Mem131, l032C), (Mem184, l033E))
	branch Mem190[0x0EF8:word16] != 0x0000 l036C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0358:
	branch 0x0008 - Mem190[0x0F14:word16] >=u 0x0000 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0360:
	Mem200[0x0F18:word16] = Mem190[0x0F16:word16] - 0x0001
	branch v91 > 0x0000 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0366:
	Mem206[0x0EFA:word16] = 0x0456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l036C:
	Mem213 = PHI((Mem190, l0352), (Mem206, l0366))
	call Mem213[0x0EFA:word16] (retsize: 2;)
		uses: pc:pc,r0:r0_227,r1:r1_157,r2:r2_220,r3:r3_225,r4:r4_235,r5:r5_237,sp:sp_215
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0370:
	Mem273 = PHI((Mem138, l0332), (Mem190, l0358), (Mem200, l0360), (Mem213, l036C))
	r4_240 = PHI((r4_109, l0332), (r4_235, l0358), (r4_235, l0360), (r4_235, l036C))
	fn06D6(r1_157, r4_240, fn04A0(r1_157, r4_240, pc), pc)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	r0_262 = fn0998(fn07A6(r4_240, pc, out r1_255, out r3_256, out r5_254), r1_255, r4_240, r5_254, pc, stackArg0, out r2_261, out r4_263, out r5_264)
	sp_265 = <invalid>
	branch 0x1178 - r4_263 == 0x0000 l0394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0394:
	branch Mem273[0x0F12:word16] != 0x0000 l02A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l039A:
	branch Mem273[0x0F02:word16] != 0x0000 l0392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03A0:
	branch Mem273[0x0F18:word16] <= 0x0000 l03AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03AE:
	r1_346 = PHI((r1_157, l0338), (r1_255, l03A0))
	r4_343 = PHI((r4_109, l0338), (r4_263, l03A0))
	r5_340 = PHI((r5_153, l0338), (r5_264, l03A0))
	r0_338 = PHI((r0_105, l0338), (r0_262, l03A0))
	Mem293 = PHI((Mem138, l0338), (Mem273, l03A0))
	v67_294 = Mem293[0x0B5A:word16] - Mem293[0x0B5A:word16]
	branch v67_294 <=u 0x0000 l040A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03B6:
	Mem297[0x0B5E:word16] = Mem293[0x0B5A:word16]
	Mem300[0x1166:word16] = 0x0101
	Mem301[0x1168:word16] = 0x115E
	FnSubfn(0x1166)
	branch v67_294 >=u 0x0000 l03E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03CE:
	Mem314[0x1166:word16] = 0x0201
	Mem315[0x1168:word16] = 0x115E
	Mem316[0x116A:word16] = 0x0001
	FnSubfn(0x1166)
	r0_312 = 0x1166
	branch v67_294 <u 0x0000 l040A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03E6:
	Mem328[0x1166:word16] = 0x0901
	Mem329[0x1168:word16] = 0x0000
	Mem330[0x116A:word16] = 0x0B5E
	Mem331[0x116C:word16] = 0x0001
	Mem332[0x116E:word16] = 0x0000
	FnSubfn(0x1166)
	__syscall(0x88FC)
	r0_334 = 0x0601
// DataOut:
// DataOut (flags):
// SymbolicIn:

l040A:
	r0_337 = PHI((r0_338, l03AE), (r0_312, l03CE), (r0_334, l03E6))
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	r0_348 = fn0486(r0_337, r1_346, r4_343, r5_340, stackArg0, out r4_349, out r5_350)
	sp_351 = <invalid>
	Mem357[sp_351 - 0x0001:byte] = 0x01
	Mem358[sp_351:byte] = 0x18
	r0_376 = fn0AE8(r0_348, fn0AB6(r0_348, r1_346, r4_349, r5_350, Mem358[sp_351 + 0xFFFD:byte], Mem358[sp_351 + 0xFFFE:byte], out r5_371), r5_371, Mem358[sp_351 + 0xFFFD:word16], out r4_377, out r5_378)
	Mem384[r1_346 - 0x0002:word16] = r4_377
	sp_379 = <invalid>
	fn0AE8(r0_376, r4_377, r5_378, Mem384[sp_379 + -2:word16], out r4_544, out r5_545)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03A6:
	Mem403[0x0F1A:word16] = Mem273[0x0F18:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0386:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l038E:
	r3_519 = PHI((r3_225, l0388), (r3_256, l0386))
	r2_500 = PHI((r2_174, l0388), (r2_261, l0386))
	Mem467 = PHI((Mem103, l0388), (Mem273, l0386))
	r1_413 = PHI((r1_157, l0388), (r1_255, l0386))
	r4_412 = PHI((r4_109, l0388), (r4_263, l0386))
	r5_411 = PHI((r5_153, l0388), (r5_264, l0386))
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	r4_415 = fn0AF6(r1_413, r4_412, r5_411, stackArg0, out r5_416)
	sp_417 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0392:
	r3_518 = PHI((r3_519, l038E), (r3_256, l039A))
	sp_517 = PHI((sp_417, l038E), (sp_265, l039A))
	r2_499 = PHI((r2_500, l038E), (r2_261, l039A))
	r1_492 = PHI((r1_413, l038E), (r1_255, l039A))
	r5_491 = PHI((r5_416, l038E), (r5_264, l039A))
	r4_468 = PHI((r4_415, l038E), (r4_263, l039A))
	Mem466 = PHI((Mem467, l038E), (Mem273, l039A))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02A6:
	r3_225 = PHI((r3_225, l0388), (r3_256, l0394), (r3_518, l0392))
	sp_218 = PHI((sp_218, l0388), (sp_265, l0394), (sp_517, l0392))
	r2_174 = PHI((r2_174, l0388), (r2_261, l0394), (r2_499, l0392))
	r1_157 = PHI((r1_157, l0388), (r1_255, l0394), (r1_492, l0392))
	r5_153 = PHI((r5_153, l0388), (r5_264, l0394), (r5_491, l0392))
	r4_109 = PHI((r4_109, l0388), (r4_263, l0394), (r4_468, l0392))
	Mem93 = PHI((Mem103, l0388), (Mem273, l0394), (Mem466, l0392))
	branch TTYIN(out r0_91) l02FC
	def v49
	def v55
	def v91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02AA:
	branch Mem93[0x0EFA:word16] != 0x0000 l02FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02B0:
	Mem422[0x02CB:byte] = r0_91
	r1_423 = 0x02C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02B8:
	r1_426 = PHI((r1_423, l02B0), (r1_429, l02B8))
	r1_429 = r1_426 + 0x0002
	branch Mem422[r1_426:word16] - r0_91 != 0x0000 l02B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02BC:
	r1_435 = r1_429 - 0x02C7 << 1
	call Mem422[r1_435 + 0x02CC:ptr16] (retsize: 2;)
		uses: pc:pc,r0:r0_91,r1:r1_435,r2:r2_174,r3:r3_225,r4:r4_109,r5:r5_153,sp:sp_218
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0200_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0200_entry:
	def pc
	def r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0200:
	PRINT(0x0F9A)
	r2_3 = 0x0002
	r3_4 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l020C:
	branch TTYIN(out r0_9) l020C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0210:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0212:
	branch TTYIN(out r0_14) l0212
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0216:
	branch TTYIN(out r0_16) l0216
// DataOut:
// DataOut (flags):
// SymbolicIn:

l021A:
	branch 0x0042 - r0_9 == 0x0000 l0236
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0236:
	PRINT(0x0FDA)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l023C:
	branch TTYIN(out r0_26) l023C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0220:
	r2_31 = 0x0001
	r3_35 = 0x0001
	branch 0x0049 - r0_9 == 0x0000 l0240
// DataOut:
// DataOut (flags):
// SymbolicIn:

l022A:
	r2_39 = 0x0000
	r3_40 = 0x0002
	branch 0x0045 - r0_9 == 0x0000 l0240
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0240:
	r3_47 = PHI((r3_35, l0220), (r3_40, l022A), (r3_4, l023C))
	r2_44 = PHI((r2_31, l0220), (r2_39, l022A), (r2_3, l023C))
	Mem46[0x0F06:word16] = r2_44
	Mem49[0x0F08:word16] = r3_47
	Mem51[0x0024:word16] = Mem49[0x0024:word16] | 0x1040
	Mem54[0x1166:word16] = 0x1100
	Mem55[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	Mem56[0x0AB4:word16] = Mem55[0x1170:word16]
	Mem57[0x0B5E:word16] = 0x0000
	Mem61[0x1166:word16] = 0x0101
	Mem62[0x1168:word16] = 0x115E
	FnSubfn(0x1166)
	branch Test(ULT,false) l029E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l027A:
	Mem73[0x1166:word16] = 0x0801
	Mem74[0x1168:word16] = 0x0000
	Mem75[0x116A:word16] = 0x0B5E
	Mem76[0x116C:word16] = 0x0001
	Mem77[0x116E:word16] = 0x0000
	FnSubfn(0x1166)
	__syscall(0x88FC)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l029E:
	fn0BD6()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02A2:
	r5_90 = PHI((r5, l029E), (r5_264, l03A6))
	fn0C20(r5_90, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0234:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0470(word16 r0, word16 r1, word16 r2, word16 r4, word16 r5, byte bArg00, ptr16 & r2Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r2:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r2 r4 r5 sp
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved:
fn0470_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0470:
	word16 r5_15
	word16 r4_21
	word16 r5_22
	word16 r0_20 = fn0AE8(r0, fn0AB6(r0, r1, r4, r5, bLoc03, bLoc02, out r5_15), r5_15, SEQ(bLoc02, bLoc03), out r4_21, out r5_22)
	Mem29[r2 - 0x0002:word16] = r4_21
	r2Out = r2 - 0x0002
	r4Out = r4_21
	r5Out = r5_22
	return r0_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0470_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0486(word16 r0, word16 r1, word16 r4, word16 r5, byte bArg00, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZVC r0 r4 r5 sp
// Preserved:
fn0486_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0486:
	word16 r5_15
	word16 r4_21
	word16 r5_22
	word16 r0_20 = fn0A74(r0, fn0AB6(r0, r1, r4, r5, bLoc03, bLoc02, out r5_15), r5_15, out r4_21, out r5_22)
	r4Out = r4_21
	r5Out = r5_22
	return r0_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0486_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn04A0(word16 r1, word16 r4, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r1:[0..15] r4:[0..15]
// LiveOut: r5
// Trashed: NZV r3 r5
// Preserved: C r0 r1 r2 r4 sp
fn04A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04A0:
	word16 v5_5 = Mem0[pc + 0x0A52:word16] & Mem0[0x0EF4:word16]
	Mem6[pc + 0x0A52:word16] = v5_5
	word16 sp_108 = fp
	branch v5_5 == 0x0000 l04AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04AA:
	word16 r5_10 = Mem6[0x0F04:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04AE:
	word16 r3_101 = (int16) Mem14[r5_10 + 0x0EF0:byte]
	branch r3_101 == 0x0000 l0588
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04B4:
	Mem19[0x0F0C:word16] = r3_101
	word16 r0_20 = (int16) Mem19[r5_10 + 0x0EF3:byte]
	sp_108 = sp_108 - 0x0001
	Mem23[sp_108:byte] = r3_101
	Mem24[sp_108 + 0x0001:byte] = r0_20
	word16 r4_30 = fn0AB6(r0_20, r1, r4, r5_10, Mem24[sp_108 + -2:byte], Mem24[sp_108 + -1:byte], out r5_10)
	Mem37[r4_30:byte] = 0x20
	r4 = r4_30 + 0x0001
	word16 r0_103 = r0_20 - 0x0001
	branch Mem37[0x0F02:word16] > 0x0000 l04D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04D2:
	branch 0x0004 - (r0_20 - 0x0001) <=u 0x0000 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04D8:
	branch 0x0002 - (r0_20 - 0x0001) == 0x0000 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04DE:
	Mem55[r5_10 + 0x0EF3:byte] = r0_20 - 0x0001
	branch 0x0016 - (r0_20 - 0x0001) <u 0x0000 l04EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04E8:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	sp_108 = <invalid>
	branch fn067C(r0_20 - 0x0001, r3_101, r4_30 + 0x0001, r5_10, stackArg0, out r1, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04EE:
	r1 = r0_20
	branch 0x0003 - (r0_20 - 0x0001) != 0x0000 l0504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04F8:
	branch Mem55[0x0F02:word16] <= 0x0000 l0504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04FE:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	sp_108 = <invalid>
	branch fn05D4(r0_20 - 0x0001, r0_20, r3_101, r4, r5_10, pc, stackArg0, out r0_103, out r1, out r3_101, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0504:
	sp_108 = <invalid>
	word16 r0_105
	branch fn064A(r0_103, r1, r3_101, r4, r5_10, out r0_105, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l050A:
	word16 r2_113 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l050C:
	branch Mem55[r2_113 + 0x0DB8:word16] - r0_105 == 0x0000 l0524
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0512:
	word16 v43_125 = Mem55[r2_113 + 0x0DB8:word16] - r1
	branch v43_125 <u 0x0000 l05B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0518:
	branch v43_125 == 0x0000 l0524
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0524:
	r0_105 = Mem55[r2_113 + 0x0DAC:word16]
	r1 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l052C:
	word16 r3_137 = Mem136[r0_105:word16]
	branch r3_137 == 0x0000 l05AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0530:
	branch r3_137 < 0x0000 l058A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l058A:
	word16 sp_144 = sp_108 - 0x0001
	Mem145[sp_144:byte] = Mem136[r0_105:byte]
	Mem147[sp_144 + 0x0001:byte] = Mem145[r2_113 + 0x0DB8:byte]
	word16 r5_155
	word16 r4_161
	word16 r5_162
	r0_105 = fn0A74(r0_105, fn0AB6(r0_105, r1, r4, r5_10, Mem147[sp_144 + -2:byte], Mem147[sp_144 + -1:byte], out r5_155), r5_155, out r4_161, out r5_162)
	Mem168[r0_105:word16] = 0x0000
	word16 sp_163 = <invalid>
	Mem173[sp_163 - 0x0001:byte] = (int16) Mem168[r5_162 + 0x0EF0:byte] + 0x0001
	Mem174[sp_163:byte] = Mem173[r5_162 + 0x0EF3:byte]
	sp_108 = sp_163 - 0x0001
	r4 = fn0AB6(r0_105, r1, r4_161, r5_162, Mem174[sp_163 + 0xFFFD:byte], Mem174[sp_163 + 0xFFFE:byte], out r5_10)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0532:
	branch r3_137 + 0x0004 - Mem136[r5_10 + 0x0EF0:word16] >u 0x0000 l05AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05AE:
	r0_105 = r0_105 + 0x0002
	r1 = r1 - 0x0001
	branch r1 != 0x0000 l052C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l053C:
	branch Mem136[r0_105:word16] - Mem136[r5_10 + 0x0EF0:word16] <u 0x0000 l05B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0542:
	word16 r1_202 = Mem136[r0_105:word16]
	Mem204[r0_105:word16] = Mem136[r0_105:word16] | 0x8000
	word16 r0_205 = r0_105 - Mem204[r2_113 + 0x0DAC:word16]
	Mem207[0x0F0A:word16] = r0_205
	Mem208[r0_205 + 0x0DC4:word16] = Mem207[r0_205 + 0x0DC4:word16] - 0x0001
	word16 sp_209 = sp_108 - 0x0001
	Mem210[sp_209:byte] = r1_202
	Mem211[sp_209 + 0x0001:byte] = Mem210[r2_113 + 0x0DB8:byte]
	word16 r5_219
	word16 r1_229
	word16 r4_230
	word16 r5_231
	fn0A7C(r0_205, r1_202, fn0AB6(r0_205, r1_202, r4, r5_10, Mem211[sp_209 + -2:byte], Mem211[sp_209 + -1:byte], out r5_219), r5_219, pc, out r1_229, out r4_230, out r5_231)
	Mem237[pc + 0x05F2:word16] = Mem211[pc + 0x05F2:word16] + Mem211[r2_113 + 0x0DD4:word16]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	fn0B1A(r1_229, r4_230, r5_231, stackArg0, out r1, out r3_484, out r4, out r5_10)
	Mem249[0x0F14:word16] = Mem237[0x0F12:word16] - 0x0001
	sp_108 = <invalid>
	branch v79 > 0x0000 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0574:
	branch Mem249[0x0F02:word16] > 0x0000 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l057A:
	Mem262[0x0EFA:word16] = 0x0000
	Mem264[0x0EFC:word16] = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0584:
	Mem272[r5_10 + 0x0EF0:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0588:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l051A:
	r2_113 = r2_113 + 0x0002
	branch 0x000A - r2_113 <= 0x0000 l050C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0522:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05B4:
	word16 r4_296
	word16 r5_297
	word16 r0_295 = fn0AE8(r0_105, r4, r5_10, Mem294[sp_108 + -2:word16], out r4_296, out r5_297)
	word16 sp_298 = <invalid>
	Mem303[sp_298:word16] = r4_296
	word16 r4_308
	word16 r5_309
	word16 r0_307 = fn0AE8(r0_295, r4_296, r5_297, Mem303[sp_298:word16], out r4_308, out r5_309)
	word16 r1_315 = r1 - 0x0002
	Mem316[r1_315:word16] = r4_308
	Mem318[r4_308:byte] = Mem316[0x1159:byte]
	word16 sp_310 = <invalid>
	fn0AE8(r0_307, r4_308 + 0x0001, r5_309, Mem318[sp_310 + -2:word16], out r4, out r5_10)
	Mem330[r1_315 - 0x0002:word16] = r4
	sp_108 = <invalid>
	r1 = r1_315 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05CA:
	r5_10 = r5_10 - 0x0001
	branch r5_10 < 0x0000 l05D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05D2:
	return r5_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04A8:
	return r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn04A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn05D4(word16 r0, word16 r1, word16 r3, word16 r4, word16 r5, word16 pc, byte bArg00, ptr16 & r0Out, ptr16 & r1Out, ptr16 & r3Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r0 r1 r3 r4 r5 sp
// Trashed: NZVC r0 r1 r3 r4 r5 sp
// Preserved:
fn05D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05D4:
	word16 v9_6 = r3 - Mem5[0x0F02:word16]
	word16 v12_10 = 0x0004 - v9_6
	bool Z_134 = SLICE(cond(v12_10), bool, 2)
	branch v12_10 >u 0x0000 l0648
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05E0:
	word16 r5_24
	word16 r1_31
	word16 r4_32
	word16 r5_33
	fn0A7C(r0, r1, fn0AB6(r0, r1, r4, r5, bLoc03, v9_6, out r5_24), r5_24, pc, out r1_31, out r4_32, out r5_33)
	fn0A94()
	word16 r3_45 = __rol(0x0000, 0x0000)
	word16 r0_49 = Mem16[(__rol(r3_45, r3_45) << 1) + 0x0F2A:word16]
	word16 v25_50 = Mem16[pc + 0x090A:word16] >> 1
	Mem51[pc + 0x090A:word16] = v25_50
	word16 sp_34 = <invalid>
	branch v25_50 <u 0x0000 l060E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l060A:
	r0_49 = r0_49 + 0x00C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l060E:
	Mem60[pc + 0x054A:word16] = Mem51[pc + 0x054A:word16] + r0_49
	Mem64[sp_34 - 0x0001:byte] = Mem60[0x0F02:byte]
	Mem65[sp_34:byte] = 0x04
	word16 r5_74
	word16 r4_80
	word16 r5_81
	word16 r0_79 = fn0AE8(r0_49, fn0AB6(r0_49, r1_31, r4_32, r5_33, Mem65[sp_34 + 0xFFFD:byte], Mem65[sp_34 + 0xFFFE:byte], out r5_74), r5_74, Mem65[sp_34 + 0xFFFD:word16], out r4_80, out r5_81)
	Mem87[r1_31 - 0x0002:word16] = r4_80
	Mem89[r4_80:byte] = 0x28
	word16 r4_96
	word16 r0_95 = fn0B60(r0_79, r1_31 - 0x0002, 0x0003, r4_80 + 0x0001, out r3_160, out r4_96)
	Mem102[r4_96:byte] = 0x29
	word16 sp_82 = <invalid>
	word16 r4_107
	word16 r5_108
	fn0AE8(r0_95, r4_96 + 0x0001, r5_81, Mem102[sp_82 + -2:word16], out r4_107, out r5_108)
	Mem114[r1_31 - 0x0004:word16] = r4_107
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	r0 = fn0B1A(r1_31 - 0x0004, r4_107, r5_108, stackArg0, out r1, out r3, out r4, out r5)
	Mem129[0x0F05:byte] = 0xFF
	Z_134 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0648:
	r0Out = r0
	r1Out = r1
	r3Out = r3
	r4Out = r4
	r5Out = r5
	return Z_134
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn05D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn064A(word16 r0, word16 r1, word16 r3, word16 r4, word16 r5, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r0 r4 r5 sp
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved:
fn064A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l064A:
	word16 r2_28 = Mem0[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l064E:
	bool Z_59
	branch Mem0[r2_28 + 0x0EE6:word16] - r3 != 0x0000 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0654:
	branch Mem0[r2_28 + 0x0EEC:byte] < 0x00 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l065A:
	branch Mem0[r2_28 + 0x0EE9:word16] - r1 == 0x0000 l0670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0660:
	branch Mem0[r2_28 + 0x0EE9:word16] - r0 != 0x0000 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0676:
	r2_28 = r2_28 - 0x0001
	Z_59 = SLICE(cond(r2_28), bool, 2) (alias)
	branch r2_28 >= 0x0000 l064E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0666:
	word16 r4_40
	r0 = fn0AE8(r0, r4, r5, wLoc02, out r4_40, out r5)
	word16 sp_42 = <invalid>
	Mem47[sp_42:word16] = r4_40
	Mem50[r4_40:byte] = 0x20
	r4 = r4_40 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0670:
	Mem55[r2_28 + 0x0EE6:byte] = 0x00
	Z_59 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l067A:
	r0Out = r0
	r4Out = r4
	r5Out = r5
	return Z_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn064A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn067C(word16 r0, word16 r3, word16 r4, word16 r5, byte bArg00, ptr16 & r1Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r1 r4 r5 sp
// Trashed: NZVC r1 r4 r5 sp
// Preserved:
fn067C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l067C:
	word16 r1_17 = (r3 - 0x0001 << 1) + r0
	byte v11_10 = Mem0[r1_17 + 0x0E2A:byte]
	bool Z_15 = SLICE(cond(v11_10), bool, 2)
	branch v11_10 == 0x00 l06A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l068A:
	Mem16[r1_17 + 0x0E2A:byte] = Mem0[r1_17 + 0x0E2A:byte] - 0x01
	r1_17 = (int16) Mem16[r1_17 + 0x0E2A:byte]
	word16 r4_26 = fn0AB6(r0, r1_17, r4, r5, bLoc03, bLoc02, out r5)
	byte v23_32 = Mem20[r1_17 + 0x0EE0:byte]
	Mem33[r4_26:byte] = v23_32
	r4 = r4_26 + 0x0001
	Z_15 = SLICE(cond(v23_32), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A0:
	r1Out = r1_17
	r4Out = r4
	r5Out = r5
	return Z_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn067C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn06A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r5
// Preserved: sp
fn06A2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A2:
	branch Mem0[0x0F0A:word16] == 0x0000 l06D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A8:
	word16 r5_10 = Mem0[0x0F04:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06AC:
	branch Mem0[r5_10 + 0x0EF0:byte] != 0x00 l06D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D0:
	r5_10 = r5_10 - 0x0001
	branch r5_10 >= 0x0000 l06AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06B2:
	word16 r0_24 = Mem0[0x0F14:word16]
	branch 0x0008 - r0_24 <u 0x0000 l06D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06BC:
	Mem29[r5_10 + 0x0EF0:byte] = r0_24 + 0x0002
	Mem30[r5_10 + 0x0EF3:byte] = 0x18
	Mem31[0x0F0C:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn06A2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn06D6(word16 r1, word16 r4, word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut:
// Trashed: NZV r2 r3
// Preserved: C r0 r1 r4 r5 sp
fn06D6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D6:
	word16 sp_109 = fp
	word16 r2_236 = Mem0[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06DA:
	word16 r3_9 = (int16) Mem8[r2_236 + 0x0EE6:byte]
	branch r3_9 == 0x0000 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06E0:
	word16 v12_14 = Mem8[pc + 0x0812:word16] & Mem8[0x0EF4:word16]
	Mem15[pc + 0x0812:word16] = v12_14
	branch v12_14 != 0x0000 l06F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06E8:
	branch Mem15[r2_236 + 0x0EEC:byte] <= 0x00 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06EE:
	branch Mem15[0x0EF4:word16] - Mem15[0x0EF4:word16] == 0x0000 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06F6:
	word16 r0_31 = (int16) Mem15[r2_236 + 0x0EE9:byte]
	branch Mem15[r2_236 + 0x0EEC:byte] < 0x00 l0710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0710:
	sp_109 = sp_109 - 0x0001
	Mem43[sp_109:byte] = r3_9 + 0x0001
	Mem44[sp_109 + 0x0001:byte] = r0_31
	r4 = fn0AB6(r0_31, r1, r4, r5, Mem44[sp_109 + -2:byte], Mem44[sp_109 + -1:byte], out r5)
	Mem63[r2_236 + 0x0EEC:word16] = Mem44[r2_236 + 0x0EEC:word16] & ~0x0080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0700:
	sp_109 = sp_109 - 0x0001
	Mem67[sp_109:byte] = r3_9
	Mem68[sp_109 + 0x0001:byte] = r0_31
	word16 r4_73 = fn0AB6(r0_31, r1, r4, r5, Mem68[sp_109 + -2:byte], Mem68[sp_109 + -1:byte], out r5)
	Mem80[r4_73:byte] = 0x20
	r4 = r4_73 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0724:
	Mem86[r2_236 + 0x0EE9:byte] = Mem85[r2_236 + 0x0EE9:byte] + 0x01
	word16 r3_101 = r3_9
	branch 0x0019 - (r0_31 + 0x0001) == 0x0000 l0784
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0730:
	branch 0x0018 - (r0_31 + 0x0001) == 0x0000 l0744
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0744:
	branch Mem86[0x0EFA:word16] != 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l074A:
	branch Mem86[0x0F14:word16] - r3_9 <u 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0750:
	r3_101 = r3_9 - 0x0004
	branch Mem86[0x0F14:word16] - (r3_9 - 0x0004) >u 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l075A:
	word16 sp_110 = sp_109 - 0x0001
	Mem111[sp_110:byte] = Mem86[0x0F14:byte]
	Mem112[sp_110 + 0x0001:byte] = 0x18
	word16 r5_122
	word16 r1_130
	word16 r4_131
	word16 r5_132
	word16 r0_129 = fn0A7C(r0_31 + 0x0001, r1, fn0AB6(r0_31 + 0x0001, r1, r4, r5, Mem112[sp_110 + -2:byte], Mem112[sp_110 + -1:byte], out r5_122), r5_122, pc, out r1_130, out r4_131, out r5_132)
	Mem137[0x0EFA:word16] = 0x0000
	Mem139[0x0EFC:word16] = 0x0005
	Mem140[0x0F1A:word16] = Mem139[0x0F18:word16] - 0x0001
	word16 sp_133 = <invalid>
	word16 r4_146
	word16 r5_147
	fn0AE8(r0_129, r4_131, r5_132, Mem140[sp_133 + -2:word16], out r4_146, out r5_147)
	Mem153[r1_130 - 0x0002:word16] = r4_146
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	r1 = fn0B3A(r1_130 - 0x0002, r4_146, r5_147, stackArg0, out r4, out r5)
	sp_109 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0736:
	branch 0x0016 - (r0_31 + 0x0001) <u 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l073C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	sp_109 = <invalid>
	branch fn067C(r0_31 + 0x0001, r3_9, r4, r5, stackArg0, out r1, out r4, out r5) l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l078A:
	word16 r4_186
	word16 r5_187
	word16 r0_185 = fn0AE8(r0_31 + 0x0001, r4, r5, Mem86[sp_109 + -2:word16], out r4_186, out r5_187)
	Mem194[Mem86[r3_101:word16]:ptr16] = r4_186
	word16 sp_188 = <invalid>
	word16 r4_199
	word16 r5_200
	word16 r0_198 = fn0AE8(r0_185, r4_186, r5_187, Mem194[sp_188 + -2:word16], out r4_199, out r5_200)
	word16 r1_206 = r1 - 0x0002
	Mem207[r1_206:word16] = r4_199
	Mem209[r4_199:byte] = Mem207[0x115A:byte]
	word16 sp_201 = <invalid>
	fn0AE8(r0_198, r4_199 + 0x0001, r5_200, Mem209[sp_201 + -2:word16], out r4, out r5)
	Mem221[r1_206 - 0x0002:word16] = r4
	sp_109 = <invalid>
	r1 = r1_206 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0742:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0784:
	Mem229[r2_236 + 0x0EE6:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A0:
	r2_236 = r2_236 - 0x0001
	branch r2_236 >= 0x0000 l06DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn06D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn07A6(word16 r4, word16 pc, ptr16 & r1Out, ptr16 & r3Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r4:[0..15]
// LiveOut: r0 r1 r3 r5
// Trashed: NZVC r0 r1 r2 r3 r5
// Preserved: r4 sp
fn07A6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A6:
	Mem4[0x0F1E:word16] = Mem0[0x0F1C:word16] - 0x0001
	word16 sp_120 = fp
	branch v5 == 0x0000 l07B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07B0:
	Mem8[0x0F1E:word16] = Mem4[0x0F26:word16]
	word16 r5_128 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07B8:
	word16 r2_15 = Mem14[0x0F1A:word16]
	r0 = Mem14[r2_15 + 0x0DB8:word16]
	branch r0 == 0x0000 l0868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07C2:
	branch Mem14[0x0EFC:word16] == 0x0000 l07F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07C8:
	word16 r1_26 = Mem14[r2_15 + 0x0DAC:word16]
	word16 r3_27 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07D0:
	branch Mem31[r1_26:word16] == 0x0000 l07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07D4:
	word16 sp_39 = sp_120 - 0x0001
	Mem40[sp_39:byte] = Mem31[r1_26:byte]
	Mem42[sp_39 + 0x0001:byte] = r0
	word16 r5_49
	r0 = fn0A74(r0, fn0AB6(r0, r1_26, r4, r5_128, Mem42[sp_39 + -2:byte], Mem42[sp_39 + -1:byte], out r5_49), r5_49, out r4, out r5_128)
	sp_120 = <invalid>
	branch Mem42[r1_26:word16] > 0x0000 l07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07E6:
	Mem68[r1_26:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07E8:
	r1_26 = r1_26 + 0x0002
	r3_27 = r3_27 - 0x0001
	branch r3_27 != 0x0000 l07D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07EE:
	Mem87[r2_15 + 0x0DB8:word16] = Mem74[r2_15 + 0x0DB8:word16] + 0x0001
	r0 = r0 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07F4:
	r1 = Mem92[r2_15 + 0x0DAC:word16]
	r3 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07FC:
	branch Mem98[r1:word16] <= 0x0000 l0840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0840:
	branch Mem98[r1:word16] >= 0x0000 l085A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0844:
	branch Mem98[0x0EFC:word16] != 0x0000 l085A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l084A:
	word16 sp_121 = sp_120 - 0x0001
	Mem122[sp_121:byte] = Mem98[r1:byte]
	Mem124[sp_121 + 0x0001:byte] = r0
	word16 r5_131
	r0 = fn0A74(r0, fn0AB6(r0, r1, r4, r5_128, Mem124[sp_121 + -2:byte], Mem124[sp_121 + -1:byte], out r5_131), r5_131, out r4, out r5_128)
	Mem144[r1:word16] = 0x0000
	sp_120 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800:
	Mem150[r1:word16] = Mem98[r1:word16] + Mem98[0x0F20:word16]
	branch 0x0008 - Mem150[r1:word16] <=u 0x0000 l0810
// DataOut:
// DataOut (flags):
// SymbolicIn:

l080A:
	branch 0x0048 - Mem150[r1:word16] <u 0x0000 l0814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0810:
	Mem158[0x0F00:word16] = sp_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0814:
	branch 0x0017 - r0 != 0x0000 l081E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l081A:
	Mem169[0x0F02:word16] = sp_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l081E:
	branch 0x0016 - r0 <u 0x0000 l0828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0824:
	fn093C(r0, r1, r3)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0828:
	word16 sp_197 = sp_120 - 0x0001
	Mem202[sp_197:byte] = Mem200[r1:byte]
	Mem204[sp_197 + 0x0001:byte] = r0
	word16 r5_217
	word16 r4_216 = fn0AB6(r0, r1, r4, r5_128 + 0x0001, Mem204[sp_197 + -2:byte], Mem204[sp_197 + -1:byte], out r5_217)
	word16 r3_223 = fn096A(r3)
	r0 = fn0AE8(r0, r4_216, r5_217, Mem204[sp_197 + -2:word16], out r4, out r5_128)
	Mem236[Mem204[r3_223 - 0x0002:ptr16]:word16] = r4
	sp_120 = <invalid>
	r3 = r3_223 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l085A:
	r1 = r1 + 0x0002
	r3 = r3 - 0x0001
	branch r3 != 0x0000 l07FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0860:
	branch r5_128 != 0x0000 l0868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0864:
	Mem268[r2_15 + 0x0DB8:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0868:
	word16 v80_285 = Mem284[pc + 0x06AE:word16] - 0x0002
	Mem286[pc + 0x06AE:word16] = v80_285
	branch v80_285 < 0x0000 l087E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l087E:
	Mem289[0x0F1C:word16] = 0x000A
	Mem290[0x0DAA:word16] = ~Mem289[0x0DA8:word16]
	branch Mem290[0x0EFC:word16] == 0x0000 l0894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0894:
	branch Mem290[0x0EFE:word16] == 0x0000 l08AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l089A:
	Mem303[0x0F22:word16] = -Mem290[0x0F20:word16]
	branch Mem303[0x0F00:word16] != 0x0000 l08AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08A4:
	Mem310[0x0EFE:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l088E:
	Mem324[0x0EFE:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08AA:
	Mem329[0x0F00:word16] = 0x0000
	Mem330[0x0F02:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0870:
	branch r5_128 != 0x0000 l0878
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0878:
	Mem343[0x0F28:word16] = r5_128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0874:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07AC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08B2:
	branch Mem357[0x0F12:word16] == 0x0000 l08CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08B8:
	word16 v38_367 = Mem357[pc + 0x063A:word16] & Mem357[0x0EF4:word16]
	Mem368[pc + 0x063A:word16] = v38_367
	branch v38_367 == 0x0000 l08CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08C0:
	word16 r2_372 = Mem368[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08C4:
	branch Mem368[r2_372 + 0x0EE6:byte] == 0x00 l08D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08D0:
	word16 r0_389 = fn0A94() & Mem368[0x0F0E:word16]
	branch r0_389 != 0x0000 l093A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08DA:
	word16 r0_393 = fn0A94()
	r1 = Mem368[0x0F08:word16]
	branch r1 < 0x0000 l08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08E4:
	branch Mem368[r1 + 0x0DC4:word16] <= 0x0000 l08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08EA:
	branch r0_393 << 1 <u 0x0000 l0904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08EE:
	word16 r1_415 = __rol(0x0000, 0x0000)
	word16 r1_417 = __rol(r1_415, r1_415)
	word16 r1_419 = __rol(r1_417, r1_417)
	r1 = r1_419 << 1
	branch Mem368[(r1_419 << 1) + 0x0DC4:word16] <= 0x0000 l08D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0904:
	r0_389 = 0x0DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0908:
	r0_389 = r0_389 - 0x0002
	word16 r3_437 = Mem368[r0_389:word16] + r1
	branch Mem368[r3_437:word16] <= 0x0000 l0908
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0910:
	word16 r3_445 = (int16) Mem368[r3_437:byte]
	Mem451[r2_372 + 0x0EE6:byte] = r3_445 + 0x0002
	Mem452[r2_372 + 0x0EE9:byte] = Mem451[r0_389 + 0x000C:byte]
	Mem453[r2_372 + 0x0EEC:byte] = 0x80
	r3 = r3_445 + 0x0002
	branch 0x0DAC - r0_389 == 0x0000 l0936
// DataOut:
// DataOut (flags):
// SymbolicIn:

l092C:
	r0_389 = fn0A94() & Mem453[0x0F0C:word16]
	branch r0_389 != 0x0000 l093A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0936:
	Mem468[r2_372 + 0x0EEC:byte] = Mem453[r2_372 + 0x0EEC:byte] + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l093A:
	r1Out = r1
	r3Out = r3
	r5Out = <invalid>
	return r0_389
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08CA:
	r2_372 = r2_372 - 0x0001
	branch r2_372 >= 0x0000 l08C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08CE:
	r1Out = r1
	r3Out = r3
	r5Out = <invalid>
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn07A6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn093C(word16 r0, word16 r1, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15]
// LiveOut:
// Trashed: NZVC
// Preserved: r3 sp
fn093C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l093C:
	word16 r3_7 = Mem5[r1:word16]
	word16 r3_15 = r3_7 - 0x0001
	branch Mem5[0x0F20:word16] < 0x0000 l094C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l094A:
	r3_15 = r3_7 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l094C:
	word16 r3_22 = (r3_15 << 1) + r0 - 0x0016 + 0x0E40
	word16 wLoc04_51 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0958:
	Mem32[r3_22 + 0x0000:byte] = 0x00
	word16 v21_36 = wLoc04_51 - 0x0001
	r3_22 = r3_22 + 0x0002
	wLoc04_51 = v21_36
	branch v21_36 != 0x0000 l0958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0964:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn093C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn096A(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..15]
// LiveOut: r3
// Trashed: NZVC r3
// Preserved: sp
fn096A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l096A:
	branch (r3 & 0x0001) != 0x0000 l0984
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0984:
	branch Mem0[0x0DA8:word16] != 0x0000 l0976
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0970:
	branch Mem0[0x0DA8:word16] != 0x0000 l098A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l098A:
	Mem21[0x112D:byte] = 0x5C
	Mem22[0x1131:byte] = 0x2F
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0976:
	Mem27[0x112D:byte] = 0x2F
	Mem28[0x1131:byte] = 0x5C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn096A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0998(word16 r0, word16 r1, word16 r4, word16 r5, word16 pc, byte bArg00, ptr16 & r2Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r2 r4 r5 sp
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved: r1
fn0998_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0998:
	word16 r2_22 = Mem0[0x0F02:word16]
	branch r2_22 > 0x0000 l09E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l099E:
	Mem8[0x0F20:word16] = Mem0[0x0F1E:word16] - 0x0001
	branch v10 != 0x0000 l0A1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A1E:
	branch r2_22 == 0x0000 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A22:
	branch 0x0028 - Mem8[0x0F1E:word16] > 0x0000 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09A4:
	Mem21[0x0F20:word16] = 0x0064
	Mem23[0x0F12:word16] = 0x0001
	Mem24[0x0A6A:word16] = 0x1134
	word16 r0_30 = fn0A94()
	r2_22 = 0x0001
	r1 = 0x0000
	r0 = r0_30 << 1
	branch r0_30 << 1 >=u 0x0000 l09D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09C2:
	r0 = r0_30 << 2
	branch r0_30 << 2 >=u 0x0000 l09D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09C6:
	Mem41[0x0F12:word16] = Mem24[0x0F10:word16] + 0x0001
	Mem42[0x0A6A:word16] = 0x113D
	r1 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09D4:
	branch r0 > 0x0000 l09E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09D8:
	Mem54[0x0F12:word16] = -Mem53[0x0F10:word16]
	Mem59[pc + 0x008A:word16] = Mem54[pc + 0x008A:word16] + r1
	r2_22 = 0x004A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09E4:
	branch Mem64[0x0EF4:word16] != 0x0000 l0A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09EA:
	branch Mem64[0x0EF6:word16] != 0x0000 l0A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A18:
	Mem195[0x0F04:word16] = r2_22
	r2Out = r2_22
	r4Out = r4
	r5Out = r5
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09F0:
	branch Mem64[0x0F10:word16] < 0x0000 l09FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09FE:
	branch 0x0002 - r2_22 == 0x0000 l0A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09F6:
	branch 0x0049 - r2_22 == 0x0000 l0A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A2A:
	word16 r5_119
	word16 r4_125
	word16 r5_126
	word16 r0_124 = fn0A74(r0, fn0AB6(r0, r1, r4, r5, bLoc03, bLoc02, out r5_119), r5_119, out r4_125, out r5_126)
	word16 sp_127 = <invalid>
	Mem132[sp_127 - 0x0001:byte] = r2_22
	Mem133[sp_127:byte] = 0x04
	word16 r5_141
	r0 = fn0A74(r0_124, fn0AB6(r0_124, r1, r4_125, r5_126, Mem133[sp_127 + 0xFFFD:byte], Mem133[sp_127 + 0xFFFE:byte], out r5_141), r5_141, out r4, out r5)
	Mem153[0x0F04:word16] = 0x0000
	branch Mem153[0x0F12:word16] > 0x0000 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A54:
	Mem161[0x0EFA:word16] = 0x0000
	Mem163[0x0EFC:word16] = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A5E:
	r2Out = r2_22
	r4Out = r4
	r5Out = r5
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0998_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A04:
	word16 r5_189
	fn0A60(r0, r1, fn0AB6(r0, r1, r4, r5, bLoc03, bLoc02, out r5_189), r5_189)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0A60(word16 r0, word16 r1, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0A60_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A60_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A60:
	word16 r4_8
	word16 r5_9
	word16 r0_7 = fn0AE8(r0, r4, r5, wLoc02, out r4_8, out r5_9)
	Mem16[r1 - 0x0002:word16] = r4_8
	word16 sp_10 = <invalid>
	fn0AE8(r0_7, r4_8, r5_9, Mem16[sp_10 + -2:word16], out r4_28, out r5_29)
	__halt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A74(word16 r0, word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0A74_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A74:
	word16 r4_8
	word16 r5_9
	word16 r0_7 = fn0AE8(r0, r4, r5, wLoc02, out r4_8, out r5_9)
	Mem15[r5_9:word16] = r5_9
	r4Out = r4_8
	r5Out = r5_9 + 0x0002
	return r0_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A74_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A7C(word16 r0, word16 r1, word16 r4, word16 r5, word16 pc, ptr16 & r1Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r1 r4 r5 sp
// Trashed: NZV r0 r1 r4 r5 sp
// Preserved:
fn0A7C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A7C:
	Mem6[r4:byte] = Mem0[0x0F24:byte]
	word16 r4_13
	word16 r5_14
	word16 r0_12 = fn0AE8(r0, r4 + 0x0001, r5, wLoc02, out r4_13, out r5_14)
	Mem21[r1 - 0x0002:word16] = r4_13
	word16 sp_15 = <invalid>
	word16 r4_26
	word16 r5_27
	word16 r0_25 = fn0AE8(r0_12, r4_13, r5_14, Mem21[sp_15 + -2:word16], out r4_26, out r5_27)
	Mem34[pc:word16] = r5_27
	word16 sp_28 = <invalid>
	word16 r4_38
	word16 r5_39
	word16 r0_37 = fn0AE8(r0_25, r4_26, r5_27, Mem34[sp_28 + -2:word16], out r4_38, out r5_39)
	Mem45[r1 - 0x0004:word16] = r4_38
	r1Out = r1 - 0x0004
	r4Out = r4_38
	r5Out = r5_39
	return r0_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A7C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZVC r0
// Preserved: sp
fn0A94_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A94:
	word16 r0_11 = ((DPB(__swab(Mem0[0x0AB2:word16]), 0x00, 0) << 1) + Mem0[0x0AB2:word16] << 2) + Mem0[0x0AB2:word16]
	Mem14[0x0AB4:word16] = r0_11 + 0x3619
	return r0_11 + 0x3619
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A94_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0AB6(word16 r0, word16 r1, word16 r4, word16 r5, word16 wArg00, byte bArg01, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15] Stack +0000:[0..7] Stack +0001:[0..7]
// LiveOut: r4 r5
// Trashed: NZVC r4 r5
// Preserved: r3 sp
fn0AB6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AB6:
	word16 r4_8
	word16 r5_9
	fn0AE8(r0, r4, r5, wLoc02, out r4_8, out r5_9)
	Mem15[wLoc04:ptr16] = r4_8
	word16 r4_29
	fn0B60((int16) bArg01, r1, 0xFFFE, r4_8, out r3_73, out r4_29)
	Mem35[r4_29:byte] = 0x3B
	word16 r4_43
	fn0B60((int16) bArg00, r1, 0xFFFE, r4_29 + 0x0001, out r3_74, out r4_43)
	Mem49[r4_43:byte] = 0x48
	r5Out = r5_9
	return r4_43 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AB6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0AE8(word16 r0, word16 r4, word16 r5, word16 wArg00, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15] Stack +0000:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0AE8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AE8:
	word16 r0_12 = Mem5[r5:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AEC:
	byte v9_14 = Mem13[r0_12:byte]
	Mem18[r4:byte] = v9_14
	r0_12 = r0_12 + 0x0001
	r4 = r4 + 0x0001
	branch v9_14 != 0x00 l0AEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF0:
	word16 r0_34
	call r5 + 0x0002 (retsize: 0;)
		uses: r0:r0,r4:r4_19 - 0x0001,r5:wArg00,sp:fp + 0x0002,Stack +FFFFFFFC:r0,Stack +FFFFFFFE:wArg00
		defs: r0:r0_34
	r4Out = r4 - 0x0001
	r5Out = wArg00
	return r0_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AE8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0AF6(word16 r1, word16 r4, word16 r5, byte bArg00, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r4 r5 sp
// Trashed: NZVC r0 r4 r5 sp
// Preserved:
fn0AF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF6:
	word16 r5_17
	Mem23[fn0AB6(Mem0[0x0F14:word16] + 0x0002, r1, r4, r5, bLoc03, bLoc02, out r5_17):byte] = 0x80
	PRINT(0x1178)
	r5Out = r5_17
	return 0x1178
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0B1A(word16 r1, word16 r4, word16 r5, byte bArg00, ptr16 & r1Out, ptr16 & r3Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r1 r3 r4 r5 sp
// Trashed: NZVC r0 r1 r3 r4 r5 sp
// Preserved:
fn0B1A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B1A:
	word16 r0_4 = Mem0[0x0B5A:word16]
	word16 r5_16
	word16 r4_22
	word16 r5_23
	word16 r0_21 = fn0AE8(r0_4, fn0AB6(r0_4, r1, r4, r5, bLoc03, bLoc02, out r5_16), r5_16, SEQ(bLoc02, bLoc03), out r4_22, out r5_23)
	Mem29[r1 - 0x0002:word16] = r4_22
	word16 r4_35
	fn0B60(r0_21, r1 - 0x0002, 0x0005, r4_22, out r3_84, out r4_35)
	word16 sp_24 = <invalid>
	word16 r0_40 = Mem29[0x0F18:word16]
	Mem43[sp_24 - 0x0001:byte] = 0x1F
	Mem44[sp_24:byte] = 0x02
	word16 r5_49
	word16 r3_54
	word16 r4_56
	word16 r4_62
	word16 r5_63
	word16 r0_61 = fn0AE8(fn0B60(r0_40, r1 - 0x0002, 0x0003, fn0AB6(r0_40, r1 - 0x0002, r4_35, r5_23, Mem44[sp_24 + 0xFFFD:byte], Mem44[sp_24 + 0xFFFE:byte], out r5_49), out r3_54, out r4_56), r4_56, r5_49, Mem44[sp_24 + 0xFFFD:word16], out r4_62, out r5_63)
	Mem69[r1 - 0x0004:word16] = r4_62
	r1Out = r1 - 0x0004
	r3Out = r3_54
	r4Out = r4_62
	r5Out = r5_63
	return r0_61
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B1A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0B3A(word16 r1, word16 r4, word16 r5, byte bArg00, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r1 r4 r5 sp
// Trashed: NZVC r0 r1 r3 r4 r5 sp
// Preserved:
fn0B3A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B3A:
	word16 r0_4 = Mem0[0x0F18:word16]
	word16 r5_16
	word16 r4_23
	word16 r4_29
	word16 r5_30
	fn0AE8(fn0B60(r0_4, r1, 0x0003, fn0AB6(r0_4, r1, r4, r5, bLoc03, bLoc02, out r5_16), out r3_49, out r4_23), r4_23, r5_16, SEQ(bLoc02, bLoc03), out r4_29, out r5_30)
	Mem36[r1 - 0x0002:word16] = r4_29
	r4Out = r4_29
	r5Out = r5_30
	return r1 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B3A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0B60(word16 r0, word16 r1, word16 r3, word16 r4, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15]
// LiveOut: r0 r3 r4
// Trashed: NZVC r0 r3 r4
// Preserved: r1 r2 r5 sp
fn0B60_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B60:
	word16 wLoc08_141 = 0x0000
	branch r3 < 0x0000 l0B74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B74:
	Mem22[0x0BC8:word16] = 0x0030
	r3 = -r3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B6C:
	Mem26[0x0BC8:word16] = 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B7C:
	branch r3 == 0x0000 l0BBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B80:
	word16 r2_37 = 0x0BD4 - (r3 << 1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B88:
	word16 r5_125 = 0x0030
	word16 v22_43 = Mem42[r2_37:word16]
	r2_37 = r2_37 + 0x0002
	branch v22_43 == 0x0000 l0BBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B8E:
	r0 = r0 - v22_43
	branch r0 <u 0x0000 l0B96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B96:
	word16 r5_81
	r0 = r0 + v22_43
	branch wLoc08_141 != 0x0000 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B9C:
	branch r5_125 == 0xFFD0 l0BA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BA4:
	branch 0x0001 - r3 == 0x0000 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BAA:
	branch Mem42[r2_37:word16] == 0x0000 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BAE:
	r5_81 = (int16) Mem42[0x0BC6:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BA0:
	wLoc08_141 = wLoc08_141 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BB4:
	r5_81 = r5_125 + 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BB8:
	Mem95[r4:byte] = r5_81
	r4 = r4 + 0x0001
	r3 = r3 - 0x0001
	branch r3 != 0x0000 l0B88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BBE:
	r3Out = r3
	r4Out = r4
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B60_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B92:
	r5_125 = r5_125 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0BD6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2
// Preserved: sp
fn0BD6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BD6:
	Mem3[0x0F1A:word16] = 0x0003
	Mem4[0x0B5C:word16] = 0x0000
	Mem6[0x0F0E:word16] = 0xF800
	Mem7[0x0F10:word16] = 0xE000
	word16 r1_16 = 0x0E56
	word16 r0_26 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BF4:
	word16 r2_12 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BF8:
	Mem17[r1_16:byte] = 0x04
	r1_16 = r1_16 + 0x0001
	r2_12 = r2_12 - 0x0001
	branch r2_12 != 0x0000 l0BF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C00:
	r1_16 = r1_16 + 0x000A
	r0_26 = r0_26 - 0x0001
	branch r0_26 != 0x0000 l0BF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C08:
	Mem32[0x1166:word16] = 0x1100
	Mem33[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	Mem34[0x1174:word16] = Mem33[0x1170:word16]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0BD6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0C20(word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r5:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0C20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0C20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C20:
	word16 r1_10 = 0x0DB8
	word16 r0_15 = 0x0006
	word16 r2_13 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C2C:
	Mem11[r1_10:word16] = r2_13
	r1_10 = r1_10 + 0x0002
	r2_13 = r2_13 + 0x0002
	r0_15 = r0_15 - 0x0001
	branch r0_15 != 0x0000 l0C2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C36:
	word16 r1_19 = 0x0000
	word16 r0_21 = 0x0008
	word16 r2_22 = 0x000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C40:
	Mem27[r1_19 + 0x0DE0:word16] = r2_22
	Mem28[r1_19 + 0x0DF0:word16] = r2_22
	Mem29[r1_19 + 0x0E00:word16] = r2_22
	Mem30[r1_19 + 0x0E10:word16] = r2_22
	Mem31[r1_19 + 0x0E20:word16] = r2_22
	Mem32[r1_19 + 0x0E30:word16] = r2_22
	Mem33[r1_19 + 0x0DC4:word16] = 0x0006
	r1_19 = r1_19 + 0x0002
	r2_22 = r2_22 + 0x0008
	r0_21 = r0_21 - 0x0001
	branch r0_21 != 0x0000 l0C40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C68:
	word16 r1_44 = 0x0EE6
	word16 r0_45 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C70:
	Mem50[r1_44:word16] = 0x0000
	r1_44 = r1_44 + 0x0002
	r0_45 = r0_45 - 0x0001
	branch r0_45 != 0x0000 l0C70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C76:
	Mem57[0x0F0A:word16] = 0xFFFF
	Mem58[0x0F14:word16] = 0x0030
	Mem59[0x0F16:word16] = 0x0002
	Mem60[0x0F18:word16] = 0x0078
	Mem61[0x0F1C:word16] = 0x000A
	Mem62[0x0F1E:word16] = 0x0004
	Mem63[0x0F28:word16] = 0x0004
	Mem64[0x0F20:word16] = 0x0064
	Mem65[0x0F22:word16] = 0x0001
	Mem71[pc + 0x025E:word16] = Mem65[pc + 0x025E:word16] << 1
	word16 v35_72 = Mem71[pc + 0x025C:word16] << 1
	Mem73[pc + 0x025C:word16] = v35_72
	branch v35_72 != 0x0000 l0CBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CB6:
	Mem77[pc + 0x0256:word16] = Mem73[pc + 0x0256:word16] >> 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CBA:
	word16 r4_94
	word16 r5_95
	word16 r0_93 = fn0AE8(r0_45, 0x1178, r5, wLoc02, out r4_94, out r5_95)
	Mem102[r1_44:word16] = r4_94
	word16 sp_96 = <invalid>
	word16 r4_107
	word16 r5_108
	word16 r0_106 = fn0AE8(r0_93, r4_94, r5_95, Mem102[sp_96 + -2:word16], out r4_107, out r5_108)
	Mem114[r1_44:word16] = r4_107
	word16 sp_109 = <invalid>
	Mem116[sp_109 - 0x0001:byte] = 0x02
	Mem117[sp_109:byte] = 0x18
	word16 r5_126
	word16 r4_132
	word16 r5_133
	word16 r0_131 = fn0AE8(r0_106, fn0AB6(r0_106, r1_44, r4_107, r5_108, Mem117[sp_109 + 0xFFFD:byte], Mem117[sp_109 + 0xFFFE:byte], out r5_126), r5_126, Mem117[sp_109 + 0xFFFD:word16], out r4_132, out r5_133)
	Mem141[r2_22 - 0x0002:word16] = r4_132
	word16 sp_134 = <invalid>
	Mem143[sp_134 - 0x0001:byte] = 0x02
	Mem144[sp_134:byte] = 0x02
	word16 r5_153
	fn0AE8(r0_131, fn0AB6(r0_131, r1_44, r4_132, r5_133, Mem144[sp_134 + 0xFFFD:byte], Mem144[sp_134 + 0xFFFE:byte], out r5_153), r5_153, Mem144[sp_134 + 0xFFFD:word16], out r4_170, out r5_171)
// DataOut:
// DataOut (flags):
// SymbolicIn:



