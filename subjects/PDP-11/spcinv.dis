void fn0200(word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r5:[0..15]
// LiveOut:
// Trashed:
// Preserved:
l02FC:
	Mem93[0x1166:word16] = 0x1100
	Mem94[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	r0_96 = Mem94[0x1170:word16] - Mem94[0x1172:word16]
	branch r0_96 < 0x0000 l0388
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0388:
	branch r4_100 == 0x1178 l02A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0316:
	Mem105[0x1174:word16] = Mem94[0x1170:word16]
	Mem109[pc + 0x0E52:word16] = Mem105[pc + 0x0E52:word16] + 0x0001
	v34_110 = ~Mem109[0x0EF4:word16]
	Mem111[0x0EF6:word16] = v34_110
	branch v34_110 != 0x0000 l032C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0328:
	Mem117[0x0EF8:word16] = ~Mem111[0x0EF6:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l032C:
	Mem121 = PHI((Mem111, l0316), (Mem117, l0328))
	branch Mem121[0x0EFA:word16] == 0x0000 l0352
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0332:
	v40_128 = Mem121[0x0EFA:word16] - 0x0001
	Mem129[0x0EFC:word16] = v40_128
	branch v40_128 != 0x0000 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0338:
	branch Mem129[0x0F18:word16] == 0x0000 l03AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l033E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	r0_146 = fn0486(r0_96, r1_145, r4_100, r5_141, stackArg0, out r4_147, out r5_148)
	Mem154[0x0F16:word16] = 0x0002
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	r0_160 = fn0470(r0_146, r1_145, r2_159, r4_147, r5_148, stackArg0, out r4_162)
	Mem169[0x0F18:word16] = 0x0078
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0352:
	r4_210 = PHI((r4_100, l032C), (r4_162, l033E))
	r0_202 = PHI((r0_96, l032C), (r0_160, l033E))
	Mem172 = PHI((Mem121, l032C), (Mem169, l033E))
	branch Mem172[0x0EF8:word16] != 0x0000 l036C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0358:
	branch Mem172[0x0F14:word16] <=u 0x0008 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0360:
	v64_182 = Mem172[0x0F16:word16] - 0x0001
	Mem183[0x0F18:word16] = v64_182
	branch v64_182 > 0x0000 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0366:
	Mem185[0x0EFA:word16] = 0x0456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l036C:
	Mem188 = PHI((Mem172, l0352), (Mem185, l0366))
	call Mem188[0x0EFA:word16] (retsize: 2;)
		uses: r0:r0_202
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0370:
	Mem248 = PHI((Mem129, l0332), (Mem172, l0358), (Mem183, l0360), (Mem188, l036C))
	r4_215 = PHI((r4_100, l0332), (r4_210, l0358), (r4_210, l0360), (r4_210, l036C))
	fn06D6(r1_145, r4_215, fn04A0(r1_145, r4_215, pc), pc)
	r0_237 = fn0998(fn07A6(r4_215, pc, out r1_230, out r5_229), r1_230, r4_215, r5_229, pc, out r2_236, out r4_238, out r5_239)
	branch r4_238 == 0x1178 l0394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0394:
	branch Mem248[0x0F12:word16] != 0x0000 l02A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l039A:
	branch Mem248[0x0F02:word16] != 0x0000 l0392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03A0:
	branch Mem248[0x0F18:word16] <= 0x0000 l03AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03AE:
	r1_305 = PHI((r1_145, l0338), (r1_230, l03A0))
	r4_302 = PHI((r4_100, l0338), (r4_238, l03A0))
	r5_299 = PHI((r5_141, l0338), (r5_239, l03A0))
	r0_297 = PHI((r0_96, l0338), (r0_237, l03A0))
	Mem268 = PHI((Mem129, l0338), (Mem248, l03A0))
	v50_269 = Mem268[0x0B5A:word16] - Mem268[0x0B5A:word16]
	branch v50_269 <=u 0x0000 l040A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03B6:
	Mem273[0x0B5E:word16] = Mem268[0x0B5A:word16]
	Mem275[0x1166:word16] = 0x0101
	Mem276[0x1168:word16] = 0x115E
	FnSubfn(0x1166)
	branch v50_269 >=u 0x0000 l03E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03CE:
	Mem281[0x1166:word16] = 0x0201
	Mem282[0x1168:word16] = 0x115E
	Mem283[0x116A:word16] = 0x0001
	FnSubfn(0x1166)
	r0_280 = 0x1166
	branch v50_269 <u 0x0000 l040A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03E6:
	Mem287[0x1166:word16] = 0x0901
	Mem288[0x1168:word16] = 0x0000
	Mem289[0x116A:word16] = 0x0B5E
	Mem290[0x116C:word16] = 0x0001
	Mem291[0x116E:word16] = 0x0000
	FnSubfn(0x1166)
	__syscall(0x88FC)
	r0_293 = 0x0601
// DataOut:
// DataOut (flags):
// SymbolicIn:

l040A:
	r0_296 = PHI((r0_297, l03AE), (r0_280, l03CE), (r0_293, l03E6))
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	r0_307 = fn0486(r0_296, r1_305, r4_302, r5_299, stackArg0, out r4_308, out r5_309)
	sp_310 = <invalid>
	Mem316[sp_310 - 0x0001:byte] = 0x01
	Mem317[sp_310:byte] = 0x18
	r0_326 = fn0AE8(r0_307, fn0AB6(r0_307, r1_305, r4_308, r5_309, Mem317[sp_310 + 0xFFFD:byte], Mem317[sp_310 + 0xFFFE:byte], out r5_321), r5_321, Mem317[sp_310 + 0xFFFD:word16], out r4_327, out r5_328)
	Mem334[r1_305 - 0x0002:word16] = r4_327
	sp_329 = <invalid>
	fn0AE8(r0_326, r4_327, r5_328, Mem334[sp_329 + -2:word16], out r4_416, out r5_417)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03A6:
	Mem345[0x0F1A:word16] = Mem248[0x0F18:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0386:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l038E:
	r2_405 = PHI((r2_159, l0388), (r2_236, l0386))
	Mem398 = PHI((Mem94, l0388), (Mem248, l0386))
	r1_349 = PHI((r1_145, l0388), (r1_230, l0386))
	r4_348 = PHI((r4_100, l0388), (r4_238, l0386))
	r5_347 = PHI((r5_141, l0388), (r5_239, l0386))
	r4_351 = fn0AF6(r1_349, r4_348, r5_347, out r5_352)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0392:
	r2_404 = PHI((r2_405, l038E), (r2_236, l039A))
	r1_403 = PHI((r1_349, l038E), (r1_230, l039A))
	r5_402 = PHI((r5_352, l038E), (r5_239, l039A))
	r4_399 = PHI((r4_351, l038E), (r4_238, l039A))
	Mem397 = PHI((Mem398, l038E), (Mem248, l039A))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02A6:
	r2_159 = PHI((r2_159, l0388), (r2_236, l0394), (r2_404, l0392))
	r1_145 = PHI((r1_145, l0388), (r1_230, l0394), (r1_403, l0392))
	r5_141 = PHI((r5_141, l0388), (r5_239, l0394), (r5_402, l0392))
	r4_100 = PHI((r4_100, l0388), (r4_238, l0394), (r4_399, l0392))
	Mem85 = PHI((Mem94, l0388), (Mem248, l0394), (Mem397, l0392))
	branch TTYIN(out r0_83) l02FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02AA:
	branch Mem85[0x0EFA:word16] != 0x0000 l02FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02B0:
	Mem358[0x02CB:byte] = r0_83
	r1_359 = 0x02C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02B8:
	r1_362 = PHI((r1_359, l02B0), (r1_365, l02B8))
	r1_365 = r1_362 + 0x0002
	branch Mem358[r1_362:word16] - r0_83 != 0x0000 l02B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02BC:
	call Mem358[(r1_365 - 0x02C7 << 1) + 0x02CC:ptr16] (retsize: 2;)
		uses: r0:r0_83
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0200_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0200_entry:
	def pc
	def r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0200:
	PRINT(0x0F9A)
	r2_3 = 0x0002
	r3_4 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l020C:
	branch TTYIN(out r0_9) l020C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0210:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0212:
	branch TTYIN(out r0_14) l0212
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0216:
	branch TTYIN(out r0_16) l0216
// DataOut:
// DataOut (flags):
// SymbolicIn:

l021A:
	branch r0_9 == 0x0042 l0236
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0236:
	PRINT(0x0FDA)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l023C:
	branch TTYIN(out r0_26) l023C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0220:
	r2_31 = 0x0001
	r3_35 = 0x0001
	branch r0_9 == 0x0049 l0240
// DataOut:
// DataOut (flags):
// SymbolicIn:

l022A:
	r2_39 = 0x0000
	r3_40 = 0x0002
	branch r0_9 == 0x0045 l0240
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0240:
	r3_47 = PHI((r3_35, l0220), (r3_40, l022A), (r3_4, l023C))
	r2_44 = PHI((r2_31, l0220), (r2_39, l022A), (r2_3, l023C))
	Mem46[0x0F06:word16] = r2_44
	Mem49[0x0F08:word16] = r3_47
	Mem51[0x0024:word16] = Mem49[0x0024:word16] | 0x1040
	Mem53[0x1166:word16] = 0x1100
	Mem54[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	Mem56[0x0AB4:word16] = Mem54[0x1170:word16]
	Mem57[0x0B5E:word16] = 0x0000
	Mem60[0x1166:word16] = 0x0101
	Mem61[0x1168:word16] = 0x115E
	FnSubfn(0x1166)
	branch Test(ULT,false) l029E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l027A:
	Mem65[0x1166:word16] = 0x0801
	Mem66[0x1168:word16] = 0x0000
	Mem67[0x116A:word16] = 0x0B5E
	Mem68[0x116C:word16] = 0x0001
	Mem69[0x116E:word16] = 0x0000
	FnSubfn(0x1166)
	__syscall(0x88FC)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l029E:
	fn0BD6()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02A2:
	r5_82 = PHI((r5, l029E), (r5_239, l03A6))
	fn0C20(r5_82, pc)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0234:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0470(word16 r0, word16 r1, word16 r2, word16 r4, word16 r5, byte bArg00, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r2:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved:
fn0470_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0470:
	word16 r5_15
	word16 r4_21
	word16 r0_20 = fn0AE8(r0, fn0AB6(r0, r1, r4, r5, bLoc03, bLoc02, out r5_15), r5_15, SEQ(bLoc02, bLoc03), out r4_21, out r5_40)
	Mem29[r2 - 0x0002:word16] = r4_21
	r4Out = r4_21
	return r0_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0470_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0486(word16 r0, word16 r1, word16 r4, word16 r5, byte bArg00, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZVC r0 r4 r5 sp
// Preserved:
fn0486_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0486:
	word16 r5_15
	word16 r4_21
	word16 r5_22
	word16 r0_20 = fn0A74(r0, fn0AB6(r0, r1, r4, r5, bLoc03, bLoc02, out r5_15), r5_15, out r4_21, out r5_22)
	r4Out = r4_21
	r5Out = r5_22
	return r0_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0486_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn04A0(word16 r1, word16 r4, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r1:[0..15] r4:[0..15]
// LiveOut: r5
// Trashed: NZV r3 r5
// Preserved: C r0 r1 r2 r4 sp
fn04A0_entry:
	word16 sp_106 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04A0:
	word16 v5_5 = Mem0[pc + 0x0A52:word16] & Mem0[0x0EF4:word16]
	Mem6[pc + 0x0A52:word16] = v5_5
	branch v5_5 == 0x0000 l04AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04AA:
	word16 r5_10 = Mem6[0x0F04:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04AE:
	word16 r3_15 = (int16) Mem14[r5_10 + 0x0EF0:byte]
	branch r3_15 == 0x0000 l0588
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04B4:
	Mem19[0x0F0C:word16] = r3_15
	word16 r0_20 = (int16) Mem19[r5_10 + 0x0EF3:byte]
	sp_106 = sp_106 - 0x0002
	Mem23[sp_106:word16] = r3_15
	Mem24[sp_106 + 0x0001:byte] = r0_20
	word16 r4_29 = fn0AB6(r0_20, r1, r4, r5_10, Mem24[sp_106 + -2:byte], Mem24[sp_106 + -1:byte], out r5_10)
	Mem35[r4_29:byte] = 0x20
	r4 = r4_29 + 0x0001
	word16 r0_101 = r0_20 - 0x0001
	branch Mem35[0x0F02:word16] > 0x0000 l04D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04D2:
	branch r0_20 - 0x0001 >=u 0x0004 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04D8:
	branch r0_20 - 0x0001 == 0x0002 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04DE:
	Mem53[r5_10 + 0x0EF3:byte] = r0_20 - 0x0001
	branch r0_20 - 0x0001 >u 0x0016 l04EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04E8:
	sp_106 = <invalid>
	branch fn067C(r0_20 - 0x0001, r3_15, r4_29 + 0x0001, r5_10, out r1, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04EE:
	r1 = r0_20
	branch r0_20 - 0x0001 != 0x0003 l0504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04F8:
	branch Mem53[0x0F02:word16] <= 0x0000 l0504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04FE:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	sp_106 = <invalid>
	branch fn05D4(r0_20 - 0x0001, r0_20, r3_15, r4, r5_10, pc, stackArg0, out r0_101, out r1, out r3_15, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0504:
	sp_106 = <invalid>
	word16 r0_103
	branch fn064A(r0_101, r1, r3_15, r4, r5_10, out r0_103, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l050A:
	word16 r2_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l050C:
	branch Mem53[r2_111 + 0x0DB8:word16] - r0_103 == 0x0000 l0524
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0512:
	word16 v38_123 = Mem53[r2_111 + 0x0DB8:word16] - r1
	branch v38_123 <u 0x0000 l05B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0518:
	branch v38_123 == 0x0000 l0524
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0524:
	r0_103 = Mem53[r2_111 + 0x0DAC:word16]
	r1 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l052C:
	word16 r3_135 = Mem134[r0_103:word16]
	branch r3_135 == 0x0000 l05AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0530:
	branch r3_135 < 0x0000 l058A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l058A:
	word16 sp_143 = sp_106 - 0x0001
	Mem144[sp_143:byte] = Mem134[r0_103:byte]
	Mem147[sp_143 + 0x0001:byte] = Mem144[r2_111 + 0x0DB8:byte]
	word16 r5_154
	word16 r4_160
	word16 r5_161
	r0_103 = fn0A74(r0_103, fn0AB6(r0_103, r1, r4, r5_10, Mem147[sp_143 + -2:byte], Mem147[sp_143 + -1:byte], out r5_154), r5_154, out r4_160, out r5_161)
	Mem166[r0_103:word16] = 0x0000
	word16 sp_162 = <invalid>
	Mem171[sp_162 - 0x0002:word16] = (int16) Mem166[r5_161 + 0x0EF0:byte] + 0x0001
	Mem173[sp_162 - 0x0001:byte] = Mem171[r5_161 + 0x0EF3:byte]
	sp_106 = sp_162 - 0x0002
	r4 = fn0AB6(r0_103, r1, r4_160, r5_161, Mem173[sp_162 + 0xFFFC:byte], Mem173[sp_162 - 0x0003:byte], out r5_10)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0532:
	branch r3_135 + 0x0004 - Mem134[r5_10 + 0x0EF0:word16] >u 0x0000 l05AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05AE:
	r0_103 = r0_103 + 0x0002
	r1 = r1 - 0x0001
	branch r1 != 0x0000 l052C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l053C:
	branch Mem134[r0_103:word16] - Mem134[r5_10 + 0x0EF0:word16] <u 0x0000 l05B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0542:
	word16 r1_200 = Mem134[r0_103:word16]
	Mem202[r0_103:word16] = Mem134[r0_103:word16] | 0x8000
	word16 r0_203 = r0_103 - Mem202[r2_111 + 0x0DAC:word16]
	Mem205[0x0F0A:word16] = r0_203
	Mem207[r0_203 + 0x0DC4:word16] = Mem205[r0_203 + 0x0DC4:word16] - 0x0001
	word16 sp_208 = sp_106 - 0x0002
	Mem209[sp_208:word16] = r1_200
	Mem211[sp_208 + 0x0001:byte] = Mem209[r2_111 + 0x0DB8:byte]
	word16 r5_215
	word16 r1_225
	word16 r4_226
	word16 r5_227
	fn0A7C(r0_203, r1_200, fn0AB6(r0_203, r1_200, r4, r5_10, Mem211[sp_208 + -2:byte], Mem211[sp_208 + -1:byte], out r5_215), r5_215, pc, out r1_225, out r4_226, out r5_227)
	Mem233[pc + 0x05F2:word16] = Mem211[pc + 0x05F2:word16] + Mem211[r2_111 + 0x0DD4:word16]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	fn0B1A(r1_225, r4_226, r5_227, stackArg0, out r1, out r3_395, out r4, out r5_10)
	word16 v69_245 = Mem233[0x0F12:word16] - 0x0001
	Mem246[0x0F14:word16] = v69_245
	sp_106 = <invalid>
	branch v69_245 > 0x0000 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0574:
	branch Mem246[0x0F02:word16] > 0x0000 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l057A:
	Mem255[0x0EFA:word16] = 0x0000
	Mem257[0x0EFC:word16] = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0584:
	Mem261[r5_10 + 0x0EF0:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0588:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l051A:
	r2_111 = r2_111 + 0x0002
	branch r2_111 >= 0x000A l050C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0522:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05B4:
	word16 r4_285
	word16 r5_286
	word16 r0_284 = fn0AE8(r0_103, r4, r5_10, Mem283[sp_106 + -2:word16], out r4_285, out r5_286)
	word16 sp_287 = <invalid>
	Mem291[sp_287:word16] = r4_285
	word16 r4_296
	word16 r5_297
	word16 r0_295 = fn0AE8(r0_284, r4_285, r5_286, Mem291[sp_287:word16], out r4_296, out r5_297)
	word16 r1_303 = r1 - 0x0002
	Mem304[r1_303:word16] = r4_296
	Mem306[r4_296:byte] = Mem304[0x1159:byte]
	word16 sp_298 = <invalid>
	fn0AE8(r0_295, r4_296 + 0x0001, r5_297, Mem306[sp_298 + -2:word16], out r4, out r5_10)
	Mem318[r1_303 - 0x0002:word16] = r4
	sp_106 = <invalid>
	r1 = r1_303 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05CA:
	r5_10 = r5_10 - 0x0001
	branch r5_10 < 0x0000 l05D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05D2:
	return r5_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04A8:
	return r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn04A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn05D4(word16 r0, word16 r1, word16 r3, word16 r4, word16 r5, word16 pc, byte bArg00, ptr16 & r0Out, ptr16 & r1Out, ptr16 & r3Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r0 r1 r3 r4 r5 sp
// Trashed: NZVC r0 r1 r3 r4 r5 sp
// Preserved:
fn05D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05D4:
	word16 v8_6 = r3 - Mem5[0x0F02:word16]
	word16 v11_10 = 0x0004 - v8_6
	bool Z_127 = SLICE(cond(v11_10), bool, 2)
	branch v11_10 >u 0x0000 l0648
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05E0:
	word16 r5_24
	word16 r1_31
	word16 r4_32
	word16 r5_33
	fn0A7C(r0, r1, fn0AB6(r0, r1, r4, r5, bLoc03, v8_6, out r5_24), r5_24, pc, out r1_31, out r4_32, out r5_33)
	fn0A94()
	word16 r3_45 = __rol(0x0000, 0x0000)
	word16 r0_49 = Mem17[(__rol(r3_45, r3_45) << 1) + 0x0F2A:word16]
	word16 v23_50 = Mem17[pc + 0x090A:word16] >> 1
	Mem51[pc + 0x090A:word16] = v23_50
	word16 sp_34 = <invalid>
	branch v23_50 <u 0x0000 l060E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l060A:
	r0_49 = r0_49 + 0x00C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l060E:
	Mem60[pc + 0x054A:word16] = Mem51[pc + 0x054A:word16] + r0_49
	Mem65[sp_34 - 0x0001:byte] = Mem60[0x0F02:byte]
	Mem66[sp_34:byte] = 0x04
	word16 r5_73
	word16 r4_79
	word16 r5_80
	word16 r0_78 = fn0AE8(r0_49, fn0AB6(r0_49, r1_31, r4_32, r5_33, Mem66[sp_34 + 0xFFFD:byte], Mem66[sp_34 + 0xFFFE:byte], out r5_73), r5_73, Mem66[sp_34 + 0xFFFD:word16], out r4_79, out r5_80)
	Mem86[r1_31 - 0x0002:word16] = r4_79
	Mem87[r4_79:byte] = 0x28
	word16 r4_94
	word16 r0_93 = fn0B60(r0_78, r1_31 - 0x0002, 0x0003, r4_79 + 0x0001, out r3_153, out r4_94)
	Mem99[r4_94:byte] = 0x29
	word16 sp_81 = <invalid>
	word16 r4_104
	word16 r5_105
	fn0AE8(r0_93, r4_94 + 0x0001, r5_80, Mem99[sp_81 + -2:word16], out r4_104, out r5_105)
	Mem111[r1_31 - 0x0004:word16] = r4_104
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	r0 = fn0B1A(r1_31 - 0x0004, r4_104, r5_105, stackArg0, out r1, out r3, out r4, out r5)
	Mem124[0x0F05:byte] = 0xFF
	Z_127 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0648:
	r0Out = r0
	r1Out = r1
	r3Out = r3
	r4Out = r4
	r5Out = r5
	return Z_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn05D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn064A(word16 r0, word16 r1, word16 r3, word16 r4, word16 r5, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r0 r4 r5 sp
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved:
fn064A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l064A:
	word16 r2_28 = Mem0[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l064E:
	bool Z_57
	branch Mem0[r2_28 + 0x0EE6:word16] - r3 != 0x0000 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0654:
	branch Mem0[r2_28 + 0x0EEC:byte] < 0x00 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l065A:
	branch Mem0[r2_28 + 0x0EE9:word16] - r1 == 0x0000 l0670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0660:
	branch Mem0[r2_28 + 0x0EE9:word16] - r0 != 0x0000 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0676:
	r2_28 = r2_28 - 0x0001
	Z_57 = SLICE(cond(r2_28), bool, 2) (alias)
	branch r2_28 >= 0x0000 l064E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0666:
	word16 r4_40
	r0 = fn0AE8(r0, r4, r5, wLoc02, out r4_40, out r5)
	word16 sp_42 = <invalid>
	Mem46[sp_42:word16] = r4_40
	Mem48[r4_40:byte] = 0x20
	r4 = r4_40 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0670:
	Mem53[r2_28 + 0x0EE6:byte] = 0x00
	Z_57 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l067A:
	r0Out = r0
	r4Out = r4
	r5Out = r5
	return Z_57
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn064A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn067C(word16 r0, word16 r3, word16 r4, word16 r5, ptr16 & r1Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r1 r4 r5 sp
// Trashed: NZVC r1 r4 r5 sp
// Preserved:
fn067C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l067C:
	word16 r1_18 = (r3 - 0x0001 << 1) + r0
	byte v11_10 = Mem0[r1_18 + 0x0E2A:byte]
	bool Z_15 = SLICE(cond(v11_10), bool, 2)
	branch v11_10 == 0x00 l06A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l068A:
	Mem17[r1_18 + 0x0E2A:byte] = Mem0[r1_18 + 0x0E2A:byte] - 0x01
	r1_18 = (int16) Mem17[r1_18 + 0x0E2A:byte]
	word16 r4_26 = fn0AB6(r0, r1_18, r4, r5, bLoc04, bLoc03, out r5)
	byte v21_32 = Mem21[r1_18 + 0x0EE0:byte]
	Mem33[r4_26:byte] = v21_32
	r4 = r4_26 + 0x0001
	Z_15 = SLICE(cond(v21_32), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A0:
	r1Out = r1_18
	r4Out = r4
	r5Out = r5
	return Z_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn067C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn06A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r5
// Preserved: sp
fn06A2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A2:
	branch Mem0[0x0F0A:word16] == 0x0000 l06D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A8:
	word16 r5_10 = Mem0[0x0F04:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06AC:
	branch Mem0[r5_10 + 0x0EF0:byte] != 0x00 l06D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D0:
	r5_10 = r5_10 - 0x0001
	branch r5_10 >= 0x0000 l06AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06B2:
	word16 r0_24 = Mem0[0x0F14:word16]
	branch r0_24 >u 0x0008 l06D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06BC:
	Mem29[r5_10 + 0x0EF0:byte] = r0_24 + 0x0002
	Mem30[r5_10 + 0x0EF3:byte] = 0x18
	Mem31[0x0F0C:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn06A2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn06D6(word16 r1, word16 r4, word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut:
// Trashed: NZV r2 r3
// Preserved: C r0 r1 r4 r5 sp
fn06D6_entry:
	word16 sp_106 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D6:
	word16 r2_220 = Mem0[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06DA:
	word16 r3_9 = (int16) Mem8[r2_220 + 0x0EE6:byte]
	branch r3_9 == 0x0000 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06E0:
	word16 v12_14 = Mem8[pc + 0x0812:word16] & Mem8[0x0EF4:word16]
	Mem15[pc + 0x0812:word16] = v12_14
	branch v12_14 != 0x0000 l06F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06E8:
	branch Mem15[r2_220 + 0x0EEC:byte] <= 0x00 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06EE:
	branch Mem15[0x0EF4:word16] - Mem15[0x0EF4:word16] == 0x0000 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06F6:
	word16 r0_31 = (int16) Mem15[r2_220 + 0x0EE9:byte]
	branch Mem15[r2_220 + 0x0EEC:byte] < 0x00 l0710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0710:
	sp_106 = sp_106 - 0x0002
	Mem43[sp_106:word16] = r3_9 + 0x0001
	Mem44[sp_106 + 0x0001:byte] = r0_31
	r4 = fn0AB6(r0_31, r1, r4, r5, Mem44[sp_106 + -2:byte], Mem44[sp_106 + -1:byte], out r5)
	Mem61[r2_220 + 0x0EEC:word16] = Mem44[r2_220 + 0x0EEC:word16] & ~0x0080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0700:
	sp_106 = sp_106 - 0x0002
	Mem65[sp_106:word16] = r3_9
	Mem66[sp_106 + 0x0001:byte] = r0_31
	word16 r4_69 = fn0AB6(r0_31, r1, r4, r5, Mem66[sp_106 + -2:byte], Mem66[sp_106 + -1:byte], out r5)
	Mem75[r4_69:byte] = 0x20
	r4 = r4_69 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0724:
	Mem82[r2_220 + 0x0EE9:byte] = Mem80[r2_220 + 0x0EE9:byte] + 0x01
	word16 r3_101 = r3_9
	branch r0_31 + 0x0001 == 0x0019 l0784
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0730:
	branch r0_31 + 0x0001 == 0x0018 l0744
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0744:
	branch Mem82[0x0EFA:word16] != 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l074A:
	branch Mem82[0x0F14:word16] - r3_9 <u 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0750:
	r3_101 = r3_9 - 0x0004
	branch Mem82[0x0F14:word16] - (r3_9 - 0x0004) >u 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l075A:
	word16 sp_107 = sp_106 - 0x0001
	Mem108[sp_107:byte] = Mem82[0x0F14:byte]
	Mem109[sp_107 + 0x0001:byte] = 0x18
	word16 r5_116
	word16 r1_124
	word16 r4_125
	word16 r5_126
	word16 r0_123 = fn0A7C(r0_31 + 0x0001, r1, fn0AB6(r0_31 + 0x0001, r1, r4, r5, Mem109[sp_107 + -2:byte], Mem109[sp_107 + -1:byte], out r5_116), r5_116, pc, out r1_124, out r4_125, out r5_126)
	Mem131[0x0EFA:word16] = 0x0000
	Mem133[0x0EFC:word16] = 0x0005
	Mem135[0x0F1A:word16] = Mem133[0x0F18:word16] - 0x0001
	word16 sp_127 = <invalid>
	word16 r4_138
	word16 r5_139
	fn0AE8(r0_123, r4_125, r5_126, Mem135[sp_127 + -2:word16], out r4_138, out r5_139)
	Mem145[r1_124 - 0x0002:word16] = r4_138
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	byte stackArg0 = <invalid>
	r1 = fn0B3A(r1_124 - 0x0002, r4_138, r5_139, stackArg0, out r4, out r5)
	sp_106 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0736:
	branch r0_31 + 0x0001 >u 0x0016 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l073C:
	sp_106 = <invalid>
	branch fn067C(r0_31 + 0x0001, r3_9, r4, r5, out r1, out r4, out r5) l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l078A:
	word16 r4_175
	word16 r5_176
	word16 r0_174 = fn0AE8(r0_31 + 0x0001, r4, r5, Mem82[sp_106 + -2:word16], out r4_175, out r5_176)
	Mem182[Mem82[r3_101:word16]:ptr16] = r4_175
	word16 sp_177 = <invalid>
	word16 r4_187
	word16 r5_188
	word16 r0_186 = fn0AE8(r0_174, r4_175, r5_176, Mem182[sp_177 + -2:word16], out r4_187, out r5_188)
	word16 r1_194 = r1 - 0x0002
	Mem195[r1_194:word16] = r4_187
	Mem197[r4_187:byte] = Mem195[0x115A:byte]
	word16 sp_189 = <invalid>
	fn0AE8(r0_186, r4_187 + 0x0001, r5_188, Mem197[sp_189 + -2:word16], out r4, out r5)
	Mem209[r1_194 - 0x0002:word16] = r4
	sp_106 = <invalid>
	r1 = r1_194 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0742:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0784:
	Mem213[r2_220 + 0x0EE6:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A0:
	r2_220 = r2_220 - 0x0001
	branch r2_220 >= 0x0000 l06DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn06D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn07A6(word16 r4, word16 pc, ptr16 & r1Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r4:[0..15]
// LiveOut: r0 r1 r5
// Trashed: NZVC r0 r1 r2 r3 r5
// Preserved: r4 sp
fn07A6_entry:
	word16 sp_122 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A6:
	word16 v5_4 = Mem0[0x0F1C:word16] - 0x0001
	Mem5[0x0F1E:word16] = v5_4
	branch v5_4 == 0x0000 l07B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07B0:
	Mem9[0x0F1E:word16] = Mem5[0x0F26:word16]
	word16 r5_10 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07B8:
	word16 r2_16 = Mem15[0x0F1A:word16]
	r0 = Mem15[r2_16 + 0x0DB8:word16]
	branch r0 == 0x0000 l0868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07C2:
	branch Mem15[0x0EFC:word16] == 0x0000 l07F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07C8:
	word16 r1_27 = Mem15[r2_16 + 0x0DAC:word16]
	word16 r3_28 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07D0:
	branch Mem32[r1_27:word16] == 0x0000 l07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07D4:
	word16 sp_41 = sp_122 - 0x0001
	Mem42[sp_41:byte] = Mem32[r1_27:byte]
	Mem44[sp_41 + 0x0001:byte] = r0
	word16 r5_50
	r0 = fn0A74(r0, fn0AB6(r0, r1_27, r4, r5_10, Mem44[sp_41 + -2:byte], Mem44[sp_41 + -1:byte], out r5_50), r5_50, out r4, out r5_10)
	sp_122 = <invalid>
	branch Mem44[r1_27:word16] > 0x0000 l07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07E6:
	Mem68[r1_27:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07E8:
	r1_27 = r1_27 + 0x0002
	r3_28 = r3_28 - 0x0001
	branch r3_28 != 0x0000 l07D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07EE:
	Mem88[r2_16 + 0x0DB8:word16] = Mem74[r2_16 + 0x0DB8:word16] + 0x0001
	r0 = r0 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07F4:
	r1 = Mem93[r2_16 + 0x0DAC:word16]
	word16 r3_176 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07FC:
	branch Mem99[r1:word16] <= 0x0000 l0840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0840:
	branch Mem99[r1:word16] >= 0x0000 l085A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0844:
	branch Mem99[0x0EFC:word16] != 0x0000 l085A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l084A:
	word16 sp_123 = sp_122 - 0x0001
	Mem124[sp_123:byte] = Mem99[r1:byte]
	Mem126[sp_123 + 0x0001:byte] = r0
	word16 r5_132
	r0 = fn0A74(r0, fn0AB6(r0, r1, r4, r5_10, Mem126[sp_123 + -2:byte], Mem126[sp_123 + -1:byte], out r5_132), r5_132, out r4, out r5_10)
	Mem144[r1:word16] = 0x0000
	sp_122 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800:
	Mem150[r1:word16] = Mem99[r1:word16] + Mem99[0x0F20:word16]
	branch Mem150[r1:word16] >=u 0x0008 l0810
// DataOut:
// DataOut (flags):
// SymbolicIn:

l080A:
	branch Mem150[r1:word16] >u 0x0048 l0814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0810:
	Mem158[0x0F00:word16] = sp_122
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0814:
	branch r0 != 0x0017 l081E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l081A:
	Mem167[0x0F02:word16] = sp_122
// DataOut:
// DataOut (flags):
// SymbolicIn:

l081E:
	branch r0 >u 0x0016 l0828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0824:
	fn093C(r0, r1, r3_176)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0828:
	word16 sp_197 = sp_122 - 0x0001
	Mem198[sp_197:byte] = Mem192[r1:byte]
	Mem200[sp_197 + 0x0001:byte] = r0
	word16 r5_208
	word16 r4_207 = fn0AB6(r0, r1, r4, r5_10 + 0x0001, Mem200[sp_197 + -2:byte], Mem200[sp_197 + -1:byte], out r5_208)
	word16 r3_214 = fn096A(r3_176)
	r0 = fn0AE8(r0, r4_207, r5_208, Mem200[sp_197 + -2:word16], out r4, out r5_10)
	Mem227[Mem200[r3_214 - 0x0002:ptr16]:word16] = r4
	sp_122 = <invalid>
	r3_176 = r3_214 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l085A:
	r1 = r1 + 0x0002
	r3_176 = r3_176 - 0x0001
	branch r3_176 != 0x0000 l07FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0860:
	branch r5_10 != 0x0000 l0868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0864:
	Mem254[r2_16 + 0x0DB8:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0868:
	word16 v75_271 = Mem270[pc + 0x06AE:word16] - 0x0002
	Mem272[pc + 0x06AE:word16] = v75_271
	branch v75_271 < 0x0000 l087E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l087E:
	Mem275[0x0F1C:word16] = 0x000A
	Mem277[0x0DAA:word16] = ~Mem275[0x0DA8:word16]
	branch Mem277[0x0EFC:word16] == 0x0000 l0894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0894:
	branch Mem277[0x0EFE:word16] == 0x0000 l08AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l089A:
	Mem291[0x0F22:word16] = -Mem277[0x0F20:word16]
	branch Mem291[0x0F00:word16] != 0x0000 l08AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08A4:
	Mem298[0x0EFE:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l088E:
	Mem301[0x0EFE:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08AA:
	Mem306[0x0F00:word16] = 0x0000
	Mem307[0x0F02:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0870:
	branch r5_10 != 0x0000 l0878
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0878:
	Mem320[0x0F28:word16] = r5_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0874:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07AC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08B2:
	branch Mem323[0x0F12:word16] == 0x0000 l08CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08B8:
	word16 v36_333 = Mem323[pc + 0x063A:word16] & Mem323[0x0EF4:word16]
	Mem334[pc + 0x063A:word16] = v36_333
	branch v36_333 == 0x0000 l08CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08C0:
	word16 r2_338 = Mem334[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08C4:
	branch Mem334[r2_338 + 0x0EE6:byte] == 0x00 l08D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08D0:
	word16 r0_355 = fn0A94() & Mem334[0x0F0E:word16]
	branch r0_355 != 0x0000 l093A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08DA:
	word16 r0_359 = fn0A94()
	r1 = Mem334[0x0F08:word16]
	branch r1 < 0x0000 l08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08E4:
	branch Mem334[r1 + 0x0DC4:word16] <= 0x0000 l08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08EA:
	branch r0_359 << 1 <u 0x0000 l0904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08EE:
	word16 r1_381 = __rol(0x0000, 0x0000)
	word16 r1_383 = __rol(r1_381, r1_381)
	word16 r1_385 = __rol(r1_383, r1_383)
	r1 = r1_385 << 1
	branch Mem334[(r1_385 << 1) + 0x0DC4:word16] <= 0x0000 l08D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0904:
	r0_355 = 0x0DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0908:
	r0_355 = r0_355 - 0x0002
	word16 r3_403 = Mem334[r0_355:word16] + r1
	branch Mem334[r3_403:word16] <= 0x0000 l0908
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0910:
	Mem417[r2_338 + 0x0EE6:byte] = (int16) Mem334[r3_403:byte] + 0x0002
	Mem419[r2_338 + 0x0EE9:byte] = Mem417[r0_355 + 0x000C:byte]
	Mem420[r2_338 + 0x0EEC:byte] = 0x80
	branch r0_355 == 0x0DAC l0936
// DataOut:
// DataOut (flags):
// SymbolicIn:

l092C:
	r0_355 = fn0A94() & Mem420[0x0F0C:word16]
	branch r0_355 != 0x0000 l093A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0936:
	Mem436[r2_338 + 0x0EEC:byte] = Mem420[r2_338 + 0x0EEC:byte] + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l093A:
	r1Out = r1
	r5Out = <invalid>
	return r0_355
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08CA:
	r2_338 = r2_338 - 0x0001
	branch r2_338 >= 0x0000 l08C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08CE:
	r1Out = r1
	r5Out = <invalid>
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn07A6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn093C(word16 r0, word16 r1, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15]
// LiveOut:
// Trashed: NZVC
// Preserved: r3 sp
fn093C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l093C:
	word16 r3_7 = Mem5[r1:word16]
	word16 r3_15 = r3_7 - 0x0001
	branch Mem5[0x0F20:word16] < 0x0000 l094C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l094A:
	r3_15 = r3_7 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l094C:
	word16 r3_22 = (r3_15 << 1) + r0 - 0x0016 + 0x0E40
	word16 wLoc04_49 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0958:
	Mem30[r3_22 + 0x0000:byte] = 0x00
	word16 v18_34 = wLoc04_49 - 0x0001
	r3_22 = r3_22 + 0x0002
	wLoc04_49 = v18_34
	branch v18_34 != 0x0000 l0958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0964:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn093C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn096A(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..15]
// LiveOut: r3
// Trashed: NZVC r3
// Preserved: sp
fn096A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l096A:
	branch (r3 & 0x0001) != 0x0000 l0984
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0984:
	branch Mem0[0x0DA8:word16] != 0x0000 l0976
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0970:
	branch Mem0[0x0DA8:word16] != 0x0000 l098A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l098A:
	Mem21[0x112D:byte] = 0x5C
	Mem22[0x1131:byte] = 0x2F
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0976:
	Mem25[0x112D:byte] = 0x2F
	Mem26[0x1131:byte] = 0x5C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn096A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0998(word16 r0, word16 r1, word16 r4, word16 r5, word16 pc, ptr16 & r2Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r2 r4 r5
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved: r1
fn0998_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0998:
	word16 r2_216 = Mem0[0x0F02:word16]
	branch r2_216 > 0x0000 l09E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l099E:
	word16 v10_8 = Mem0[0x0F1E:word16] - 0x0001
	Mem9[0x0F20:word16] = v10_8
	branch v10_8 != 0x0000 l0A1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A1E:
	branch r2_216 == 0x0000 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A22:
	branch Mem9[0x0F1E:word16] < 0x0028 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09A4:
	Mem21[0x0F20:word16] = 0x0064
	Mem23[0x0F12:word16] = 0x0001
	Mem24[0x0A6A:word16] = 0x1134
	word16 r0_30 = fn0A94()
	r2_216 = 0x0001
	r1 = 0x0000
	r0 = r0_30 << 1
	branch r0_30 << 1 >=u 0x0000 l09D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09C2:
	r0 = r0_30 << 2
	branch r0_30 << 2 >=u 0x0000 l09D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09C6:
	Mem42[0x0F12:word16] = Mem24[0x0F10:word16] + 0x0001
	Mem43[0x0A6A:word16] = 0x113D
	r1 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09D4:
	branch r0 > 0x0000 l09E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09D8:
	Mem56[0x0F12:word16] = -Mem54[0x0F10:word16]
	Mem61[pc + 0x008A:word16] = Mem56[pc + 0x008A:word16] + r1
	r2_216 = 0x004A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09E4:
	branch Mem66[0x0EF4:word16] != 0x0000 l0A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09EA:
	branch Mem66[0x0EF6:word16] != 0x0000 l0A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A18:
	Mem181[0x0F04:word16] = r2_216
	r2Out = r2_216
	r4Out = r4
	r5Out = r5
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09F0:
	branch Mem66[0x0F10:word16] < 0x0000 l09FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09FE:
	branch r2_216 == 0x0002 l0A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09F6:
	branch r2_216 == 0x0049 l0A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A2A:
	word16 r5_117
	word16 r4_123
	word16 r5_124
	word16 r0_122 = fn0A74(r0, fn0AB6(r0, r1, r4, r5, bLoc04, bLoc03, out r5_117), r5_117, out r4_123, out r5_124)
	word16 sp_125 = <invalid>
	Mem130[sp_125 - 0x0002:word16] = r2_216
	Mem131[sp_125 - 0x0001:byte] = 0x04
	word16 r5_135
	r0 = fn0A74(r0_122, fn0AB6(r0_122, r1, r4_123, r5_124, Mem131[sp_125 + 0xFFFC:byte], Mem131[sp_125 - 0x0003:byte], out r5_135), r5_135, out r4, out r5)
	Mem147[0x0F04:word16] = 0x0000
	branch Mem147[0x0F12:word16] > 0x0000 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A54:
	Mem155[0x0EFA:word16] = 0x0000
	Mem157[0x0EFC:word16] = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A5E:
	r2Out = r2_216
	r4Out = r4
	r5Out = r5
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0998_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A04:
	word16 r5_175
	fn0A60(r0, r1, fn0AB6(r0, r1, r4, r5, bLoc04, bLoc03, out r5_175), r5_175)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0A60(word16 r0, word16 r1, word16 r4, word16 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0A60_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A60_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A60:
	word16 r4_8
	word16 r5_9
	word16 r0_7 = fn0AE8(r0, r4, r5, wLoc02, out r4_8, out r5_9)
	Mem16[r1 - 0x0002:word16] = r4_8
	word16 sp_10 = <invalid>
	fn0AE8(r0_7, r4_8, r5_9, Mem16[sp_10 + -2:word16], out r4_27, out r5_28)
	__halt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A74(word16 r0, word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0A74_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A74:
	word16 r4_8
	word16 r5_9
	word16 r0_7 = fn0AE8(r0, r4, r5, wLoc02, out r4_8, out r5_9)
	Mem14[r5_9:word16] = r5_9
	r4Out = r4_8
	r5Out = r5_9 + 0x0002
	return r0_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A74_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A7C(word16 r0, word16 r1, word16 r4, word16 r5, word16 pc, ptr16 & r1Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r1 r4 r5 sp
// Trashed: NZV r0 r1 r4 r5 sp
// Preserved:
fn0A7C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A7C:
	Mem6[r4:byte] = Mem0[0x0F24:byte]
	word16 r4_13
	word16 r5_14
	word16 r0_12 = fn0AE8(r0, r4 + 0x0001, r5, wLoc02, out r4_13, out r5_14)
	Mem21[r1 - 0x0002:word16] = r4_13
	word16 sp_15 = <invalid>
	word16 r4_25
	word16 r5_26
	word16 r0_24 = fn0AE8(r0_12, r4_13, r5_14, Mem21[sp_15 + -2:word16], out r4_25, out r5_26)
	Mem32[pc:word16] = r5_26
	word16 sp_27 = <invalid>
	word16 r4_36
	word16 r5_37
	word16 r0_35 = fn0AE8(r0_24, r4_25, r5_26, Mem32[sp_27 + -2:word16], out r4_36, out r5_37)
	Mem43[r1 - 0x0004:word16] = r4_36
	r1Out = r1 - 0x0004
	r4Out = r4_36
	r5Out = r5_37
	return r0_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A7C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZVC r0
// Preserved: sp
fn0A94_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A94:
	word16 r0_11 = ((DPB(__swab(Mem0[0x0AB2:word16]), 0x00, 0) << 1) + Mem0[0x0AB2:word16] << 2) + Mem0[0x0AB2:word16]
	Mem14[0x0AB4:word16] = r0_11 + 0x3619
	return r0_11 + 0x3619
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A94_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0AB6(word16 r0, word16 r1, word16 r4, word16 r5, word16 wArg00, byte bArg01, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r4:[0..15] r5:[0..15] Stack +0000:[0..7] Stack +0001:[0..7]
// LiveOut: r4 r5
// Trashed: NZVC r4 r5
// Preserved: r3 sp
fn0AB6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AB6:
	word16 r4_8
	word16 r5_9
	fn0AE8(r0, r4, r5, wLoc02, out r4_8, out r5_9)
	Mem14[wLoc04:ptr16] = r4_8
	word16 r4_28
	fn0B60((int16) bArg01, r1, 0xFFFE, r4_8, out r3_69, out r4_28)
	Mem33[r4_28:byte] = 0x3B
	word16 r4_41
	fn0B60((int16) bArg00, r1, 0xFFFE, r4_28 + 0x0001, out r3_70, out r4_41)
	Mem46[r4_41:byte] = 0x48
	r5Out = r5_9
	return r4_41 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AB6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0AE8(word16 r0, word16 r4, word16 r5, word16 wArg00, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15] Stack +0000:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0AE8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AE8:
	word16 r0_12 = Mem5[r5:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AEC:
	byte v8_14 = Mem13[r0_12:byte]
	Mem17[r4:byte] = v8_14
	r0_12 = r0_12 + 0x0001
	r4 = r4 + 0x0001
	branch v8_14 != 0x00 l0AEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF0:
	word16 r0_33
	call r5 + 0x0002 (retsize: 0;)
		uses: r0:r0,Stack +FFFFFFFC:r0,Stack +FFFFFFFE:wArg00
		defs: r0:r0_33
	r4Out = r4 - 0x0001
	r5Out = wArg00
	return r0_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AE8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0AF6(word16 r1, word16 r4, word16 r5, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r4 r5
// Trashed: NZVC r0 r4 r5 sp
// Preserved:
fn0AF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF6:
	word16 r5_16
	Mem21[fn0AB6(Mem0[0x0F14:word16] + 0x0002, r1, r4, r5, bLoc04, bLoc03, out r5_16):byte] = 0x80
	PRINT(0x1178)
	r5Out = r5_16
	return 0x1178
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0B1A(word16 r1, word16 r4, word16 r5, byte bArg00, ptr16 & r1Out, ptr16 & r3Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r1 r3 r4 r5 sp
// Trashed: NZVC r0 r1 r3 r4 r5 sp
// Preserved:
fn0B1A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B1A:
	word16 r0_4 = Mem0[0x0B5A:word16]
	word16 r5_15
	word16 r4_21
	word16 r5_22
	word16 r0_20 = fn0AE8(r0_4, fn0AB6(r0_4, r1, r4, r5, bLoc03, bLoc02, out r5_15), r5_15, SEQ(bLoc02, bLoc03), out r4_21, out r5_22)
	Mem28[r1 - 0x0002:word16] = r4_21
	word16 r4_33
	fn0B60(r0_20, r1 - 0x0002, 0x0005, r4_21, out r3_80, out r4_33)
	word16 sp_23 = <invalid>
	word16 r0_38 = Mem28[0x0F18:word16]
	Mem41[sp_23 - 0x0001:byte] = 0x1F
	Mem42[sp_23:byte] = 0x02
	word16 r5_46
	word16 r3_51
	word16 r4_53
	word16 r4_59
	word16 r5_60
	word16 r0_58 = fn0AE8(fn0B60(r0_38, r1 - 0x0002, 0x0003, fn0AB6(r0_38, r1 - 0x0002, r4_33, r5_22, Mem42[sp_23 + 0xFFFD:byte], Mem42[sp_23 + 0xFFFE:byte], out r5_46), out r3_51, out r4_53), r4_53, r5_46, Mem42[sp_23 + 0xFFFD:word16], out r4_59, out r5_60)
	Mem66[r1 - 0x0004:word16] = r4_59
	r1Out = r1 - 0x0004
	r3Out = r3_51
	r4Out = r4_59
	r5Out = r5_60
	return r0_58
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B1A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0B3A(word16 r1, word16 r4, word16 r5, byte bArg00, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r1:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r1 r4 r5 sp
// Trashed: NZVC r0 r1 r3 r4 r5 sp
// Preserved:
fn0B3A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B3A:
	word16 r0_4 = Mem0[0x0F18:word16]
	word16 r5_15
	word16 r4_22
	word16 r4_28
	word16 r5_29
	fn0AE8(fn0B60(r0_4, r1, 0x0003, fn0AB6(r0_4, r1, r4, r5, bLoc03, bLoc02, out r5_15), out r3_47, out r4_22), r4_22, r5_15, SEQ(bLoc02, bLoc03), out r4_28, out r5_29)
	Mem35[r1 - 0x0002:word16] = r4_28
	r4Out = r4_28
	r5Out = r5_29
	return r1 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B3A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0B60(word16 r0, word16 r1, word16 r3, word16 r4, ptr16 & r3Out, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15]
// LiveOut: r0 r3 r4
// Trashed: NZVC r0 r3 r4
// Preserved: r1 r2 r5 sp
fn0B60_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B60:
	word16 wLoc08_138 = 0x0000
	branch r3 < 0x0000 l0B74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B74:
	Mem22[0x0BC8:word16] = 0x0030
	r3 = -r3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B6C:
	Mem25[0x0BC8:word16] = 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B7C:
	branch r3 == 0x0000 l0BBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B80:
	word16 r2_35 = 0x0BD4 - (r3 << 1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B88:
	word16 r5_122 = 0x0030
	word16 v16_41 = Mem40[r2_35:word16]
	r2_35 = r2_35 + 0x0002
	branch v16_41 == 0x0000 l0BBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B8E:
	r0 = r0 - v16_41
	branch r0 <u 0x0000 l0B96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B96:
	word16 r5_79
	r0 = r0 + v16_41
	branch wLoc08_138 != 0x0000 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B9C:
	branch r5_122 == 0xFFD0 l0BA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BA4:
	branch r3 == 0x0001 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BAA:
	branch Mem40[r2_35:word16] == 0x0000 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BAE:
	r5_79 = (int16) Mem40[0x0BC6:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BA0:
	wLoc08_138 = wLoc08_138 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BB4:
	r5_79 = r5_122 + 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BB8:
	Mem92[r4:word16] = r5_79
	r4 = r4 + 0x0002
	r3 = r3 - 0x0001
	branch r3 != 0x0000 l0B88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BBE:
	r3Out = r3
	r4Out = r4
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B60_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B92:
	r5_122 = r5_122 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0BD6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2
// Preserved: sp
fn0BD6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BD6:
	Mem3[0x0F1A:word16] = 0x0003
	Mem4[0x0B5C:word16] = 0x0000
	Mem6[0x0F0E:word16] = 0xF800
	Mem7[0x0F10:word16] = 0xE000
	word16 r1_15 = 0x0E56
	word16 r0_25 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BF4:
	word16 r2_12 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BF8:
	Mem16[r1_15:byte] = 0x04
	r1_15 = r1_15 + 0x0001
	r2_12 = r2_12 - 0x0001
	branch r2_12 != 0x0000 l0BF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C00:
	r1_15 = r1_15 + 0x000A
	r0_25 = r0_25 - 0x0001
	branch r0_25 != 0x0000 l0BF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C08:
	Mem30[0x1166:word16] = 0x1100
	Mem31[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	Mem33[0x1174:word16] = Mem31[0x1170:word16]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0BD6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0C20(word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r5:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0C20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0C20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C20:
	word16 r1_11 = 0x0DB8
	word16 r0_14 = 0x0006
	word16 r2_12 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C2C:
	Mem10[r1_11:word16] = r2_12
	r1_11 = r1_11 + 0x0002
	r2_12 = r2_12 + 0x0002
	r0_14 = r0_14 - 0x0001
	branch r0_14 != 0x0000 l0C2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C36:
	word16 r1_18 = 0x0000
	word16 r0_20 = 0x0008
	word16 r2_21 = 0x000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C40:
	Mem26[r1_18 + 0x0DE0:word16] = r2_21
	Mem27[r1_18 + 0x0DF0:word16] = r2_21
	Mem28[r1_18 + 0x0E00:word16] = r2_21
	Mem29[r1_18 + 0x0E10:word16] = r2_21
	Mem30[r1_18 + 0x0E20:word16] = r2_21
	Mem31[r1_18 + 0x0E30:word16] = r2_21
	Mem32[r1_18 + 0x0DC4:word16] = 0x0006
	r1_18 = r1_18 + 0x0002
	r2_21 = r2_21 + 0x0008
	r0_20 = r0_20 - 0x0001
	branch r0_20 != 0x0000 l0C40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C68:
	word16 r1_43 = 0x0EE6
	word16 r0_44 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C70:
	Mem48[r1_43:word16] = 0x0000
	r1_43 = r1_43 + 0x0002
	r0_44 = r0_44 - 0x0001
	branch r0_44 != 0x0000 l0C70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C76:
	Mem55[0x0F0A:word16] = 0xFFFF
	Mem56[0x0F14:word16] = 0x0030
	Mem57[0x0F16:word16] = 0x0002
	Mem58[0x0F18:word16] = 0x0078
	Mem59[0x0F1C:word16] = 0x000A
	Mem60[0x0F1E:word16] = 0x0004
	Mem61[0x0F28:word16] = 0x0004
	Mem62[0x0F20:word16] = 0x0064
	Mem63[0x0F22:word16] = 0x0001
	Mem69[pc + 0x025E:word16] = Mem63[pc + 0x025E:word16] << 1
	word16 v17_70 = Mem69[pc + 0x025C:word16] << 1
	Mem71[pc + 0x025C:word16] = v17_70
	branch v17_70 != 0x0000 l0CBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CB6:
	Mem75[pc + 0x0256:word16] = Mem71[pc + 0x0256:word16] >> 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CBA:
	word16 r4_92
	word16 r5_93
	word16 r0_91 = fn0AE8(r0_44, 0x1178, r5, wLoc02, out r4_92, out r5_93)
	Mem99[r1_43:word16] = r4_92
	word16 sp_94 = <invalid>
	word16 r4_104
	word16 r5_105
	word16 r0_103 = fn0AE8(r0_91, r4_92, r5_93, Mem99[sp_94 + -2:word16], out r4_104, out r5_105)
	Mem111[r1_43:word16] = r4_104
	word16 sp_106 = <invalid>
	Mem113[sp_106 - 0x0001:byte] = 0x02
	Mem114[sp_106:byte] = 0x18
	word16 r5_118
	word16 r4_124
	word16 r5_125
	word16 r0_123 = fn0AE8(r0_103, fn0AB6(r0_103, r1_43, r4_104, r5_105, Mem114[sp_106 + 0xFFFD:byte], Mem114[sp_106 + 0xFFFE:byte], out r5_118), r5_118, Mem114[sp_106 + 0xFFFD:word16], out r4_124, out r5_125)
	Mem133[r2_21 - 0x0002:word16] = r4_124
	word16 sp_126 = <invalid>
	Mem135[sp_126 - 0x0001:byte] = 0x02
	Mem136[sp_126:byte] = 0x02
	word16 r5_140
	fn0AE8(r0_123, fn0AB6(r0_123, r1_43, r4_124, r5_125, Mem136[sp_126 + 0xFFFD:byte], Mem136[sp_126 + 0xFFFE:byte], out r5_140), r5_140, Mem136[sp_126 + 0xFFFD:word16], out r4_157, out r5_158)
// DataOut:
// DataOut (flags):
// SymbolicIn:



