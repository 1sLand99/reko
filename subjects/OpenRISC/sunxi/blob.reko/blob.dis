// fn000043D0
// Return size: 0
void fn000043D0()
fn000043D0_entry:
	r1 = fp
	// succ:  l000043D0
l000043D0:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	F = r5 == 0x00000000
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 << 0x00000004
	branch F l000043D0_ds_t
	// succ:  l000043D0_ds_f l000043D0_ds_t
l000043D0_ds_f:
	r4 = r4 << 0x00000002
	goto l000043EC
	// succ:  l000043EC
l000043D0_ds_t:
	r4 = r4 << 0x00000002
	goto l00004480
	// succ:  l00004480
l000043EC:
	r5 = 0x000001F0
	r5 = r5 | 0x00001540
	r2 = r3 + r5
	CV = cond(r2)
	r2 = r2 + r4
	CV = cond(r2)
	r3 = Mem0[r2:word32]
	F = r3 == 0x00000000
	branch F l000043EC_ds_t
	// succ:  l000043EC_ds_f l000043EC_ds_t
l000043EC_ds_f:
	r3 = 0x00000000 + -254
	CV = cond(r3)
	goto l0000440C
	// succ:  l0000440C
l000043EC_ds_t:
	r3 = 0x00000000 + -254
	CV = cond(r3)
	goto l000044BC
	// succ:  l000044BC
l0000440C:
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -20
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + -248
	CV = cond(r3)
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + -224
	CV = cond(r3)
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + -192
	CV = cond(r3)
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + -128
	CV = cond(r3)
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -20
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	// succ:  l00004468
l00004468:
	r3 = Mem0[r2:word32]
	F = r3 != 0x00000000
	branch F l00004468_ds_t
	// succ:  l00004468_ds_f l00004468_ds_t
l00004468_ds_f:
	goto l00004478
	// succ:  l00004478
l00004468_ds_t:
	goto l00004468
	// succ:  l00004468
l00004478:
	r1 = r1 + -8
	CV = cond(r1)
	goto l000044C0
	// succ:  l000044C0
l00004480:
	r5 = 0x000001F0
	r5 = r5 | 0x00001540
	r2 = r3 + r5
	CV = cond(r2)
	r2 = r2 + r4
	CV = cond(r2)
	r3 = Mem0[r2:word32]
	F = r3 == 0x000000FF
	branch F l00004480_ds_t
	// succ:  l00004480_ds_f l00004480_ds_t
l00004480_ds_f:
	r3 = 0x00000000 + -255
	CV = cond(r3)
	goto l000044A0
	// succ:  l000044A0
l00004480_ds_t:
	r3 = 0x00000000 + -255
	CV = cond(r3)
	goto l000044BC
	// succ:  l000044BC
l000044A0:
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -30
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	// succ:  l000044AC
l000044AC:
	r3 = Mem0[r2:word32]
	F = r3 != 0x000000FF
	branch F l000044AC_ds_t
	// succ:  l000044AC_ds_f l000044AC_ds_t
l000044AC_ds_f:
	goto l000044BC
	// succ:  l000044BC
l000044AC_ds_t:
	goto l000044AC
	// succ:  l000044AC
l000044BC:
	r1 = r1 + -8
	CV = cond(r1)
	// succ:  l000044C0
l000044C0:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000043D0_exit
fn000043D0_exit:


// fn000044D0
// Return size: 0
void fn000044D0()
fn000044D0_entry:
	r1 = fp
	// succ:  l000044D0
l000044D0:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r2
	r3 = r3 | 0x00003158
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r1 = r1 - 4
	CV = cond(r1)
	Mem0[r3:word32] = r2
	r1 = r1 + -4
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn000044D0_exit
fn000044D0_exit:


// fn00004570
// Return size: 0
void fn00004570()
fn00004570_entry:
	r1 = fp
	// succ:  l00004570
l00004570:
	r5 = 0x00000001
	Mem0[r1 - 4:word32] = r2
	r5 = r5 | 0x00003158
	r1 = r1 - 8
	CV = cond(r1)
	r6 = Mem0[r5:word32]
	F = r6 > 3
	branch F l00004570_ds_t
	// succ:  l00004570_ds_f l00004570_ds_t
l00004570_ds_f:
	r11 = 0x00000000 - 28
	CV = cond(r11)
	goto l00004590
	// succ:  l00004590
l00004570_ds_t:
	r11 = 0x00000000 - 28
	CV = cond(r11)
	goto l00004600
	// succ:  l00004600
l00004590:
	r6 = 0x000001F0
	r11 = 0x00000000 + -1
	CV = cond(r11)
	r6 = r6 | 0x00001C0C
	r2 = 0x0000003E
	r7 = Mem0[r6:word32]
	r2 = r2 | 0x00000382
	Mem0[r1:word32] = r7
	r8 = Mem0[r1:word32]
	r7 = Mem0[r5:word32]
l00004600:
	r1 = r1 + -8
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00004570_exit
fn00004570_exit:


// fn0000460C
// Return size: 0
void fn0000460C()
fn0000460C_entry:
	r1 = fp
	// succ:  l0000460C
l0000460C:
	r5 = r3 >>u 0x00000002
	r1 = r1 - 4
	CV = cond(r1)
	F = r5 == 0x00000000
	branch F l0000460C_ds_t
	// succ:  l0000460C_ds_f l0000460C_ds_t
l0000460C_ds_f:
	r4 = r4 & 0x00000001
	goto l00004620
	// succ:  l00004620
l0000460C_ds_t:
	r4 = r4 & 0x00000001
	goto l00004640
	// succ:  l00004640
l00004620:
	r5 = 0x00000170
	r3 = r3 - 4
	CV = cond(r3)
	r5 = r5 | 0x00000084
	r6 = Mem0[r5:word32]
	Mem0[r1:word32] = r6
	r7 = Mem0[r1:word32]
	r6 = 0x00000000 + -1
	CV = cond(r6)
	goto l00004658
	// succ:  l00004658
l00004640:
	r5 = 0x00000170
	r5 = r5 | 0x00000080
	r6 = Mem0[r5:word32]
	Mem0[r1:word32] = r6
	r7 = Mem0[r1:word32]
	r6 = 0x00000000 + -1
	CV = cond(r6)
	// succ:  l00004658
l00004658:
	r11 = 0x00000000 + 0
	CV = cond(r11)
fn0000460C_exit:


// fn000046C0
// Return size: 0
void fn000046C0()
fn000046C0_entry:
	r1 = fp
	// succ:  l000046C0
l000046C0:
	r3 = 0x000001F0
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 | 0x00001E80
	r4 = Mem0[r3:word32]
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	r4 = r4 | 0x00000002
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3:word32] = r4
	// succ:  l000046E8
l000046E8:
	r5 = Mem0[r3:word32]
	r5 = r5 & 0x00000002
	F = r5 != 0x00000000
	branch F l000046E8_ds_t
	// succ:  l000046E8_ds_f l000046E8_ds_t
l000046E8_ds_f:
	r4 = 0x000001F0
	goto l000046FC
	// succ:  l000046FC
l000046E8_ds_t:
	r4 = 0x000001F0
	goto l000046E8
	// succ:  l000046E8
l000046FC:
	r3 = r4 | 0x00001E84
	r4 = r4 | 0x00001E88
	r3 = Mem0[r3:word32]
	Mem0[r1:word32] = r3
	r3 = Mem0[r4:word32]
	Mem0[r1 + 4:word32] = r3
	r11 = Mem0[r1 + 4:word32]
	r12 = Mem0[r1:word32]
	r1 = r1 + -8
	CV = cond(r1)
	return
	// succ:  fn000046C0_exit
fn000046C0_exit:


// fn0000473C
// Return size: 0
void fn0000473C()
fn0000473C_entry:
	r1 = fp
	// succ:  l0000473C
l0000473C:
	r4 = 0x00000170
	Mem0[r1 - 4:word32] = r2
	r4 = r4 | 0x00000004
	r1 = r1 - 8
	CV = cond(r1)
	r5 = Mem0[r4:word32]
	r2 = 0x00000000 - 2
	CV = cond(r2)
	Mem0[r1:word32] = r5
	r3 = r3 & 0x00000001
	r5 = Mem0[r1:word32]
	r5 = r5 & r2
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r3 = r3 | r5
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	Mem0[r4:word32] = r3
	r1 = r1 + -8
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000473C_exit
fn0000473C_exit:


// fn00004788
// Return size: 0
void fn00004788()
fn00004788_entry:
	r1 = fp
	// succ:  l00004788
l00004788:
	r3 = 0x00000170
	r3 = r3 | 0x00000030
	// succ:  l00004790
l00004790:
	r4 = Mem0[r3:word32]
	r4 = r4 & 0x00000001
	F = r4 == 0x00000000
	branch F l00004790_ds_t
	// succ:  l00004790_ds_f l00004790_ds_t
l00004790_ds_f:
	goto l000047A4
	// succ:  l000047A4
l00004790_ds_t:
	goto l00004790
	// succ:  l00004790
l000047A4:
	return
	// succ:  fn00004788_exit
fn00004788_exit:


// fn000047AC
// Return size: 0
void fn000047AC()
fn000047AC_entry:
	r1 = fp
	// succ:  l000047AC
l000047AC:
	r4 = 0x00000170
	Mem0[r1 - 4:word32] = r2
	r5 = Mem0[r4:word32]
	r1 = r1 - 8
	CV = cond(r1)
	r2 = 0x00000000 - 32
	CV = cond(r2)
	Mem0[r1:word32] = r5
	r3 = r3 & 0x0000001F
	r5 = Mem0[r1:word32]
	r5 = r5 & r2
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r3 = r3 | r5
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	Mem0[r4:word32] = r3
	r1 = r1 + -8
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn000047AC_exit
fn000047AC_exit:


// fn000047F4
// Return size: 0
void fn000047F4()
fn000047F4_entry:
	r1 = fp
	// succ:  l000047F4
l000047F4:
	F = r3 == 0x00000000
	branch F l000047F4_ds_t
	// succ:  l000047F4_ds_f l000047F4_ds_t
l000047F4_ds_f:
	r4 = 0x00000170
	goto l00004800
	// succ:  l00004800
l000047F4_ds_t:
	r4 = 0x00000170
	goto l00004814
	// succ:  l00004814
l00004800:
	F = r3 == 0x00000001
	branch !F l00004800_ds_t
	// succ:  l00004800_ds_f l00004800_ds_t
l00004800_ds_f:
	r3 = 0x00000170
	goto l0000480C
	// succ:  l0000480C
l00004800_ds_t:
	r3 = 0x00000170
	goto l0000483C
	// succ:  l0000483C
l0000480C:
	r5 = 0x00001110
	goto l00004824
	// succ:  l00004824
l00004814:
	r4 = r4 | 0x00000080
	Mem0[r4:word32] = r3
	goto l0000483C
	// succ:  l0000483C
l00004824:
	r4 = r3 | 0x00000080
	r5 = r5 | 0x00001100
	r3 = r3 | 0x00000020
	Mem0[r4:word32] = r5
	r4 = 0x00000000 + -15
	CV = cond(r4)
	Mem0[r3:word32] = r4
	// succ:  l0000483C
l0000483C:
	return
	// succ:  fn000047F4_exit
fn000047F4_exit:


// fn00004844
// Return size: 0
void fn00004844()
fn00004844_entry:
	r1 = fp
	// succ:  l00004844
l00004844:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r1 = r1 - 12
	CV = cond(r1)
	r2 = 0x00000000 - 2
	CV = cond(r2)
	call fn0000473C (retsize: 0;)
	r3 = 0x00000000 | 0x0000B000
	call fn0000AEDC (retsize: 0;)
	call fn00004788 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B001
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00000170
	r3 = r3 | 0x00000020
	r4 = Mem0[r3:word32]
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	r4 = r4 & r2
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = r3 | 0x00000000
	call fn0000460C (retsize: 0;)
	r3 = 0x000001F0
	r3 = r3 | 0x00001C30
	r4 = Mem0[r3:word32]
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	r4 = r4 & r2
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = r3 | 0x00000000
	call fn0000460C (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn0000460C (retsize: 0;)
	r3 = 0x00000000 + -2
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn0000460C (retsize: 0;)
	r3 = 0x00000000 + -3
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn0000460C (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	r3 = 0x00000000 | 0x0000B002
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	// succ:  l00004904_thunk_fn0000AEDC
l00004904_thunk_fn0000AEDC:
	call fn0000AEDC (retsize: 0;)
	return
	// succ:  fn00004844_exit
fn00004844_exit:


// fn0000490C
// Return size: 0
void fn0000490C()
fn0000490C_entry:
	r1 = fp
	// succ:  l0000490C
l0000490C:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r1 = r1 - 8
	CV = cond(r1)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	call fn000047F4 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B003
	call fn0000AEDC (retsize: 0;)
	r3 = 0x000001F0
	r3 = r3 | 0x00001D40
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = r3 | 0x00000000
	call fn0000B950 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B004
	call fn0000AEDC (retsize: 0;)
	r3 = r2 | 0x00000000
	r4 = r2 | 0x00000000
	r5 = r2 | 0x00000000
	call fn000043D0 (retsize: 0;)
	r1 = r1 + -8
	CV = cond(r1)
	r3 = 0x00000000 | 0x0000B005
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	// succ:  l00004970_thunk_fn0000AEDC
l00004970_thunk_fn0000AEDC:
	call fn0000AEDC (retsize: 0;)
	return
	// succ:  fn0000490C_exit
fn0000490C_exit:


// fn00004978
// Return size: 0
void fn00004978()
fn00004978_entry:
	r1 = fp
	// succ:  l00004978
l00004978:
	r3 = 0x00000000 | 0x0000B00C
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	call fn0000AEDC (retsize: 0;)
	r3 = 0x000001F0
	r3 = r3 | 0x00001C30
	r4 = Mem0[r3:word32]
	r4 = r4 | 0x00000001
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = 0x00000000 + -3
	CV = cond(r4)
	call fn0000460C (retsize: 0;)
	r3 = 0x00000000 | 0x0000B00D
	call fn0000AEDC (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn00004978_exit
fn00004978_exit:


// fn000049C0
// Return size: 0
void fn000049C0()
fn000049C0_entry:
	r1 = fp
	// succ:  l000049C0
l000049C0:
	Mem0[r1 - 4:word32] = r2
	r2 = 0x0000002E
	r1 = r1 - 4
	CV = cond(r1)
	r2 = r2 | 0x00000014
	r5 = r4 + r2
	CV = cond(r5)
	r2 = 0x00000170
	r4 = r4 << 0x00000003
	r2 = r2 | 0x000000A4
	r5 = r5 << 0x00000003
	r4 = r4 + r2
	CV = cond(r4)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r5:word32] = r3
	Mem0[r4:word32] = r2
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn000049C0_exit
fn000049C0_exit:


// fn00004A00
// Return size: 0
void fn00004A00()
fn00004A00_entry:
	r1 = fp
	// succ:  l00004A00
l00004A00:
	r3 = r3 << 0x00000004
	Mem0[r1 - 4:word32] = r2
	r2 = 0x00000170
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 + r2
	CV = cond(r3)
	r4 = r4 + -24
	CV = cond(r4)
	r6 = Mem0[r3:word32]
	r5 = r5 << 0x00000018
	Mem0[r1:word32] = r6
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r7 = Mem0[r1:word32]
fn00004A00_exit:


// fn00004A6C
// Return size: 0
void fn00004A6C()
fn00004A6C_entry:
	r1 = fp
	// succ:  l00004A6C
l00004A6C:
	Mem0[r1 - 8:word32] = r14
	r14 = r3 | 0x00000000
	r3 = 0x00000000 + 0
	CV = cond(r3)
	Mem0[r1 - 4:word32] = r9
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r4 = r3 | 0x00000000
	Mem0[r1 - 12:word32] = r2
	r1 = r1 - 12
	CV = cond(r1)
	r2 = 0x00000000 + -1
	CV = cond(r2)
	call fn000043D0 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B006
	call fn0000AEDC (retsize: 0;)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000B950 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B007
	call fn0000AEDC (retsize: 0;)
	r3 = 0x000001F0
	r3 = r3 | 0x00001D40
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = r3 | 0x00000000
	call fn0000460C (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn000047F4 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B008
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn000047AC (retsize: 0;)
	r3 = 0x00000000 | 0x0000B009
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn0000473C (retsize: 0;)
	r3 = 0x00000000 | 0x0000B00A
	call fn0000AEDC (retsize: 0;)
	r3 = r2 | 0x00000000
	call fn000047F4 (retsize: 0;)
	r3 = r14 | 0x00000000
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn000049C0 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r5 = r2 | 0x00000000
	r4 = r3 | 0x00000000
	call fn00004A00 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B00B
	call fn0000AEDC (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00004A6C_exit
fn00004A6C_exit:


// fn00004B44
// Return size: 0
void fn00004B44()
fn00004B44_entry:
	r1 = fp
	// succ:  l00004B44
l00004B44:
	Mem0[r1 - 36:word32] = r2
	r2 = 0x00000170
	Mem0[r1 - 16:word32] = r22
	r22 = r3 << 0x00000002
	Mem0[r1 - 24:word32] = r18
	r2 = r2 | 0x00000080
	r18 = 0x00000000 + -1
	CV = cond(r18)
	Mem0[r1 - 32:word32] = r14
	r14 = r22 + r2
	CV = cond(r14)
fn00004B44_exit:


// fn00004C48
// Return size: 0
void fn00004C48()
fn00004C48_entry:
	r1 = fp
	// succ:  l00004C48
l00004C48:
	Mem0[r1 - 16:word32] = r14
	Mem0[r1 - 8:word32] = r18
	r14 = r3 << 0x00000002
	r18 = r3 | 0x00000000
	r3 = 0x00000170
	Mem0[r1 - 20:word32] = r2
	r3 = r3 | 0x00000030
	r2 = r4 | 0x00000000
	r5 = r14 + r3
	CV = cond(r5)
	r3 = r4 + -16
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	Mem0[r1 - 4:word32] = r9
fn00004C48_exit:


// fn00004D60
// Return size: 0
void fn00004D60()
fn00004D60_entry:
	r1 = fp
	// succ:  l00004D60
l00004D60:
	r5 = Mem0[r3 + 84:word32]
	r4 = Mem0[r3 + 88:word32]
	Mem0[r1 - 12:word32] = r14
	r14 = r3 | 0x00000000
	r3 = r5 & 0x0000000F
	Mem0[r1 - 16:word32] = r2
	r2 = r4 & 0x0000000F
	r3 = r3 << 0x00000009
	r2 = r2 + r2
	CV = cond(r2)
	Mem0[r1 - 4:word32] = r9
	r3 = r2 | r3
	r2 = 0x000001C6
	Mem0[r1 - 8:word32] = r16
	r2 = r2 | 0x00003310
	r1 = r1 - 16
	CV = cond(r1)
	// succ:  l00004D9C
l00004D9C:
	r6 = Mem0[r2:word32]
	r6 = r6 | r3
	Mem0[r2:word32] = r6
	r6 = 0x000001C6
	r2 = r2 + -4
	CV = cond(r2)
	r6 = r6 | 0x00003334
	F = r2 != r6
	branch F l00004D9C_ds_t
	// succ:  l00004D9C_ds_f l00004D9C_ds_t
l00004D9C_ds_f:
	goto l00004DC0
	// succ:  l00004DC0
l00004D9C_ds_t:
	goto l00004D9C
	// succ:  l00004D9C
l00004DC0:
	r3 = r4 & 0x000000F0
	r2 = r5 & 0x000000F0
	r3 = r3 >>u 0x00000003
	r2 = r2 << 0x00000005
	r3 = r3 | r2
	r2 = 0x000001C6
	r2 = r2 | 0x00003390
	// succ:  l00004DDC
l00004DDC:
	r6 = Mem0[r2:word32]
	r8 = 0x000001C6
	r6 = r6 | r3
	r8 = r8 | 0x000033B4
	Mem0[r2:word32] = r6
	r2 = r2 + -4
	CV = cond(r2)
	F = r2 != r8
	branch F l00004DDC_ds_t
	// succ:  l00004DDC_ds_f l00004DDC_ds_t
l00004DDC_ds_f:
	goto l00004E00
	// succ:  l00004E00
l00004DDC_ds_t:
	goto l00004DDC
	// succ:  l00004DDC
l00004E00:
	r3 = r4 & 0x00000F00
	r2 = r5 & 0x00000F00
	r3 = r3 >>u 0x00000007
	r2 = r2 << 0x00000001
	r3 = r3 | r2
	r2 = 0x000001C6
	r2 = r2 | 0x00003410
	// succ:  l00004E1C
l00004E1C:
	r6 = Mem0[r2:word32]
	r13 = 0x000001C6
	r6 = r6 | r3
	r13 = r13 | 0x00003434
	Mem0[r2:word32] = r6
	r2 = r2 + -4
	CV = cond(r2)
	F = r2 != r13
	branch F l00004E1C_ds_t
	// succ:  l00004E1C_ds_f l00004E1C_ds_t
l00004E1C_ds_f:
	r6 = 0x000001C6
	goto l00004E40
	// succ:  l00004E40
l00004E1C_ds_t:
	r6 = 0x000001C6
	goto l00004E1C
	// succ:  l00004E1C
l00004E40:
	r3 = r4 & 0x0000F000
	r2 = r5 & 0x0000F000
	r3 = r3 >>u 0x0000000B
	r2 = r2 >>u 0x00000003
	r2 = r3 | r2
	r6 = r6 | 0x00003490
	// succ:  l00004E58
l00004E58:
	r3 = Mem0[r6:word32]
	r15 = 0x000001C6
	r3 = r3 | r2
	r15 = r15 | 0x000034B4
	Mem0[r6:word32] = r3
	r6 = r6 + -4
	CV = cond(r6)
	F = r6 != r15
	branch F l00004E58_ds_t
	// succ:  l00004E58_ds_f l00004E58_ds_t
l00004E58_ds_f:
	r8 = 0x0000000F
	goto l00004E7C
	// succ:  l00004E7C
l00004E58_ds_t:
	r8 = 0x0000000F
	goto l00004E58
	// succ:  l00004E58
l00004E7C:
	r2 = 0x000001C6
	r7 = r2 | 0x00003100
	r12 = r5 & r8
	r16 = 0x0000FBFF
	r3 = Mem0[r7:word32]
	r16 = r16 | 0x0000FFFF
	r12 = r12 >>u 0x00000010
	r8 = r4 & r8
	r3 = r3 & r16
	r13 = r12 << 0x00000009
	r8 = r8 >>u 0x00000010
	Mem0[r7:word32] = r3
	r3 = r2 | 0x00003334
	r8 = r13 | r8
	r11 = Mem0[r3:word32]
	r15 = 0x000000F0
	r11 = r8 | r11
	r16 = 0x000000F0
	Mem0[r3:word32] = r11
	r3 = r2 | 0x00003338
	r12 = r12 << 0x00000019
	r11 = Mem0[r3:word32]
	r8 = r8 | r11
	r11 = r5 & r15
	Mem0[r3:word32] = r8
	r11 = r11 >>u 0x00000014
	r8 = r4 & r16
	r3 = r2 | 0x000033B4
	r15 = r11 << 0x00000009
	r8 = r8 >>u 0x00000014
	r13 = Mem0[r3:word32]
	r11 = r11 << 0x00000019
	r8 = r15 | r8
	r13 = r8 | r13
	Mem0[r3:word32] = r13
	r3 = r2 | 0x000033B8
	r13 = Mem0[r3:word32]
	r8 = r8 | r13
	r13 = 0x00000F00
	Mem0[r3:word32] = r8
	r8 = r5 & r13
	r13 = r4 & r13
	r8 = r8 >>u 0x00000018
	r13 = r13 >>u 0x00000018
	r3 = r2 | 0x00003434
	r17 = r8 << 0x00000009
	r15 = Mem0[r3:word32]
	r5 = r5 >>u 0x0000001C
	r13 = r17 | r13
	r4 = r4 >>u 0x0000001C
	r15 = r13 | r15
	r8 = r8 << 0x00000019
	Mem0[r3:word32] = r15
	r3 = r2 | 0x00003438
	r15 = Mem0[r3:word32]
	r13 = r13 | r15
	r15 = 0x00000400
	Mem0[r3:word32] = r13
	r13 = r5 << 0x00000009
	r3 = Mem0[r6:word32]
	r5 = r5 << 0x00000019
	r4 = r13 | r4
	r3 = r4 | r3
	Mem0[r6:word32] = r3
	r3 = r2 | 0x000034B8
	r6 = Mem0[r3:word32]
	r4 = r4 | r6
	Mem0[r3:word32] = r4
	r3 = r2 | 0x0000333C
	r4 = Mem0[r3:word32]
	r12 = r12 | r4
	Mem0[r3:word32] = r12
	r3 = r2 | 0x000033BC
	r4 = Mem0[r3:word32]
	r11 = r11 | r4
	Mem0[r3:word32] = r11
	r3 = r2 | 0x0000343C
	r4 = Mem0[r3:word32]
	r8 = r8 | r4
	Mem0[r3:word32] = r8
	r3 = r2 | 0x000034BC
	r2 = r2 | 0x00003240
	r4 = Mem0[r3:word32]
	r5 = r5 | r4
	Mem0[r3:word32] = r5
	r3 = Mem0[r7:word32]
	r3 = r3 | r15
	Mem0[r7:word32] = r3
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = Mem0[r14 + 80:word32]
	r4 = r3 & 0x000000F0
	r4 = r4 << 0x00000004
	// succ:  l00004FF0
l00004FF0:
	r5 = Mem0[r2:word32]
	r16 = 0x000001C6
	r5 = r5 | r4
	r16 = r16 | 0x00003268
	Mem0[r2:word32] = r5
	r2 = r2 + -4
	CV = cond(r2)
	F = r2 != r16
	branch F l00004FF0_ds_t
	// succ:  l00004FF0_ds_f l00004FF0_ds_t
l00004FF0_ds_f:
	r5 = r3 & 0x0000000F
	goto l00005014
	// succ:  l00005014
l00004FF0_ds_t:
	r5 = r3 & 0x0000000F
	goto l00004FF0
	// succ:  l00004FF0
l00005014:
	r2 = 0x000001C6
	r4 = r2 | 0x00003218
	r5 = r5 << 0x00000008
	r6 = Mem0[r4:word32]
	r5 = r5 | r6
	r6 = r3 & 0x00000F00
	Mem0[r4:word32] = r5
	r4 = r2 | 0x0000321C
	r3 = r3 & 0x0000F000
	r5 = Mem0[r4:word32]
	r2 = r2 | 0x00003280
	r5 = r6 | r5
	r3 = r3 >>u 0x00000004
	Mem0[r4:word32] = r5
	r4 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r1 = r1 + -16
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00004D60_exit
fn00004D60_exit:


// fn00005078
// Return size: 0
void fn00005078()
fn00005078_entry:
	r1 = fp
	// succ:  l00005078
l00005078:
	r3 = 0x000001C6
	r5 = 0x00000000 + -399
	CV = cond(r5)
	r4 = r3 | 0x0000200C
	r8 = 0x00000096
	Mem0[r4:word32] = r5
	r4 = r3 | 0x00002090
	r5 = 0x00000001
	r7 = 0x00000258
	Mem0[r4:word32] = r5
	r4 = r3 | 0x00002098
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r7 = r7 | 0x0000000D
	Mem0[r4:word32] = r5
	r5 = 0x0000012C
	r4 = r3 | 0x00002010
	r5 = r5 | 0x0000000D
	r6 = 0x000000C8
	Mem0[r4:word32] = r5
	r4 = r3 | 0x00002014
	r5 = r8 | 0x00000104
	r6 = r6 | 0x00000190
	Mem0[r4:word32] = r5
	r4 = r3 | 0x00002018
	r5 = 0x00000200
	Mem0[r4:word32] = r7
	r4 = r3 | 0x0000201C
	r5 = r5 | 0x0000000D
	Mem0[r4:word32] = r6
	r4 = r3 | 0x00002020
	r11 = r3 | 0x00002028
	Mem0[r4:word32] = r5
	r5 = 0x00000060
	r4 = r3 | 0x00002024
	r5 = r5 | 0x00000100
	r12 = 0x00000020
	Mem0[r4:word32] = r5
	r4 = 0x00000100
	r12 = r12 | 0x00000080
	r5 = r4 | 0x0000000D
	r8 = r8 | 0x0000000D
	Mem0[r11:word32] = r5
	r11 = r3 | 0x0000202C
	r4 = r4 | 0x00000009
	Mem0[r11:word32] = r12
	r12 = 0x0000076C
	r11 = r3 | 0x00002030
	r12 = r12 | 0x0000000D
	Mem0[r11:word32] = r12
	r12 = 0x000003E8
	r11 = r3 | 0x00002034
	r12 = r12 | 0x000005DC
	Mem0[r11:word32] = r12
	r11 = r3 | 0x00002038
	Mem0[r11:word32] = r8
	r11 = 0x00000064
	r8 = r3 | 0x0000203C
	r11 = r11 | 0x00000078
	Mem0[r8:word32] = r11
	r8 = r3 | 0x00002040
	r11 = r3 | 0x00002044
	Mem0[r8:word32] = r4
	r8 = 0x00000040
	r4 = r8 | 0x00000080
	r8 = r8 | 0x00000100
	Mem0[r11:word32] = r4
	r11 = r3 | 0x00002048
	Mem0[r11:word32] = r5
	r11 = r3 | 0x0000204C
	Mem0[r11:word32] = r4
	r11 = r3 | 0x00002050
	Mem0[r11:word32] = r5
	r5 = r3 | 0x00002054
	Mem0[r5:word32] = r4
	r4 = 0x00000400
	r5 = r3 | 0x00002058
	r11 = r4 | 0x00000009
	r4 = r4 | 0x00000960
	Mem0[r5:word32] = r11
	r5 = r3 | 0x0000205C
	Mem0[r5:word32] = r8
	r8 = 0x00000D48
	r5 = r3 | 0x00002060
	r8 = r8 | 0x0000030D
	Mem0[r5:word32] = r8
	r5 = r3 | 0x00002064
	Mem0[r5:word32] = r4
	r4 = r3 | 0x00002068
	r3 = r3 | 0x0000206C
	Mem0[r4:word32] = r7
	Mem0[r3:word32] = r6
	return
	// succ:  fn00005078_exit
fn00005078_exit:


// fn000051E8
// Return size: 0
void fn000051E8()
fn000051E8_entry:
	r1 = fp
	// succ:  l000051E8
l000051E8:
	r4 = Mem0[r3 + 92:word32]
	Mem0[r1 - 44:word32] = r2
	Mem0[r1 - 40:word32] = r14
	Mem0[r1 - 20:word32] = r24
	Mem0[r1 - 12:word32] = r28
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 36:word32] = r16
	Mem0[r1 - 32:word32] = r18
	Mem0[r1 - 28:word32] = r20
	Mem0[r1 - 24:word32] = r22
	Mem0[r1 - 16:word32] = r26
	Mem0[r1 - 8:word32] = r30
	r14 = Mem0[r3:word32]
	r4 = r4 & 0x00000002
	r1 = r1 - 96
	CV = cond(r1)
	r28 = r3 | 0x00000000
	r2 = r14 >>u 0x00000001
	F = r4 == 0x00000000
	branch F l000051E8_ds_t
	// succ:  l000051E8_ds_f l000051E8_ds_t
l000051E8_ds_f:
	r24 = Mem0[r3 + 4:word32]
	goto l00005238
	// succ:  l00005238
l000051E8_ds_t:
	r24 = Mem0[r3 + 4:word32]
	goto l000052D0
	// succ:  l000052D0
l00005238:
	r4 = Mem0[r3 + 44:word32]
	r5 = Mem0[r3 + 40:word32]
	r7 = r4 >>u 0x00000017
	r18 = r5 >>u 0x0000000B
	r8 = Mem0[r3 + 48:word32]
	r7 = r7 & 0x0000001F
	r18 = r18 & 0x0000000F
	Mem0[r1:word32] = r7
	r7 = r4 >>u 0x00000014
	r20 = r5 >>u 0x00000015
	r11 = r5 >>u 0x0000000F
	r6 = r5 >>u 0x00000006
	r29 = r4 >>u 0x0000000F
	r12 = r8 >>u 0x0000000C
	Mem0[r1 + 8:word32] = r18
	r18 = r7 & 0x00000007
	r7 = r4 >>u 0x00000006
	r16 = r4 >>u 0x0000000B
	r20 = r20 & 0x00000007
	r11 = r11 & 0x0000003F
	r6 = r6 & 0x0000001F
	r5 = r5 & 0x0000003F
	r29 = r29 & 0x0000001F
	r7 = r7 & 0x0000001F
	r4 = r4 & 0x0000003F
	r12 = r12 & 0x000001FF
	r8 = r8 & 0x00000FFF
	Mem0[r1 + 48:word32] = r20
	Mem0[r1 + 20:word32] = r11
	Mem0[r1 + 4:word32] = r6
	Mem0[r1 + 24:word32] = r5
	Mem0[r1 + 16:word32] = r29
	r16 = r16 & 0x0000000F
	Mem0[r1 + 12:word32] = r7
	Mem0[r1 + 28:word32] = r4
	Mem0[r1 + 36:word32] = r12
	Mem0[r1 + 32:word32] = r8
	goto l00005D6C
	// succ:  l00005D6C
l000052D0:
	F = r24 != 0x00000003
	branch F l000052D0_ds_t
	// succ:  l000052D0_ds_f l000052D0_ds_t
l000052D0_ds_f:
	F = r24 != 0x00000002
	goto l000052DC
	// succ:  l000052DC
l000052D0_ds_t:
	F = r24 != 0x00000002
	goto l000054E8
	// succ:  l000054E8
l000052DC:
	r16 = 0x00000000 + -50
	CV = cond(r16)
	r4 = 0x00000000 + -1000
	CV = cond(r4)
l000054E8:
	branch F l000054E8_ds_t
	// succ:  l000054E8_ds_f l000054E8_ds_t
l000054E8_ds_f:
	F = r24 != 0x00000006
	goto l000054F0
	// succ:  l000054F0
l000054E8_ds_t:
	F = r24 != 0x00000006
	goto l000056F8
	// succ:  l000056F8
l000054F0:
	r16 = 0x00000000 + -50
	CV = cond(r16)
	r4 = 0x00000000 + -1000
	CV = cond(r4)
l000056F8:
	branch F l000056F8_ds_t
	// succ:  l000056F8_ds_f l000056F8_ds_t
l000056F8_ds_f:
	F = r24 != 0x00000007
	goto l00005700
	// succ:  l00005700
l000056F8_ds_t:
	F = r24 != 0x00000007
	goto l000059C4
	// succ:  l000059C4
l00005700:
	r16 = 0x00000000 + -50
	CV = cond(r16)
	r4 = 0x00000000 + -1000
	CV = cond(r4)
l000059C4:
	branch F l000059C4_ds_t
	// succ:  l000059C4_ds_f l000059C4_ds_t
l000059C4_ds_f:
	r3 = 0x00000000 + -98
	CV = cond(r3)
	goto l000059CC
	// succ:  l000059CC
l000059C4_ds_t:
	r3 = 0x00000000 + -98
	CV = cond(r3)
	goto l00005C90
	// succ:  l00005C90
l000059CC:
	r16 = 0x00000000 + -50
	CV = cond(r16)
	r4 = 0x00000000 + -1000
	CV = cond(r4)
l00005C90:
	r6 = 0x00000000 + -128
	CV = cond(r6)
	r4 = 0x00000000 + -10
	CV = cond(r4)
	Mem0[r1 + 32:word32] = r3
	r3 = 0x00000000 + -6
	CV = cond(r3)
	Mem0[r1 + 36:word32] = r6
	Mem0[r1 + 12:word32] = r3
	r6 = 0x00000000 + -3
	CV = cond(r6)
	Mem0[r1:word32] = r4
	r4 = 0x00000000 + -14
	CV = cond(r4)
	r18 = r6 | 0x00000000
	Mem0[r1 + 16:word32] = r6
	Mem0[r1 + 28:word32] = r4
	r6 = 0x00000000 + -16
	CV = cond(r6)
	r3 = 0x00000000 + -20
	CV = cond(r3)
	r4 = Mem0[r1 + 12:word32]
	r16 = 0x00000000 + -8
	CV = cond(r16)
	Mem0[r1 + 20:word32] = r6
	Mem0[r1 + 24:word32] = r3
	Mem0[r1 + 4:word32] = r4
	Mem0[r1 + 8:word32] = r18
	r4 = Mem0[r1 + 4:word32]
	r6 = Mem0[r1 + 24:word32]
	r3 = 0x00000040
	r13 = r4 << 0x00000006
	r15 = r6 | r3
	r6 = Mem0[r1 + 8:word32]
	r13 = r15 | r13
	r15 = r6 << 0x0000000B
	r3 = Mem0[r1 + 20:word32]
	r4 = Mem0[r1 + 12:word32]
	r13 = r13 | r15
	r15 = r3 << 0x0000000F
	r3 = Mem0[r1 + 16:word32]
	r6 = Mem0[r1 + 28:word32]
	r13 = r13 | r15
	r15 = r4 << 0x00000006
	Mem0[r28 + 40:word32] = r13
	r13 = r16 << 0x0000000B
	r4 = Mem0[r1:word32]
	r13 = r15 | r13
	r15 = r3 << 0x0000000F
	r13 = r13 | r6
	r6 = Mem0[r1 + 36:word32]
	r13 = r13 | r15
	r15 = r18 << 0x00000014
	r3 = Mem0[r1 + 32:word32]
	r13 = r13 | r15
	r15 = r4 << 0x00000017
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r13 = r13 | r15
	Mem0[r1 + 48:word32] = r4
	Mem0[r28 + 44:word32] = r13
	r13 = r6 << 0x0000000C
	r13 = r13 | r3
	Mem0[r28 + 48:word32] = r13
	// succ:  l00005D6C
l00005D6C:
	F = r24 == 0x00000003
	branch F l00005D6C_ds_t
	// succ:  l00005D6C_ds_f l00005D6C_ds_t
l00005D6C_ds_f:
	F = r24 >u 0x00000003
	goto l00005D78
	// succ:  l00005D78
l00005D6C_ds_t:
	F = r24 >u 0x00000003
	goto l00005E3C
	// succ:  l00005E3C
l00005D78:
	branch F l00005D78_ds_t
	// succ:  l00005D78_ds_f l00005D78_ds_t
l00005D78_ds_f:
	F = r24 == 0x00000006
	goto l00005D80
	// succ:  l00005D80
l00005D78_ds_t:
	F = r24 == 0x00000006
	goto l00005D94
	// succ:  l00005D94
l00005D80:
	F = r24 == 0x00000002
	branch !F l00005D80_ds_t
	// succ:  l00005D80_ds_f l00005D80_ds_t
l00005D80_ds_f:
	r3 = r2 | 0x00000000
	goto l00005D8C
	// succ:  l00005D8C
l00005D80_ds_t:
	r3 = r2 | 0x00000000
	goto l00006010
	// succ:  l00006010
l00005D8C:
	r2 = 0x00000000 + -400
	CV = cond(r2)
	goto l00005DAC
	// succ:  l00005DAC
l00005D94:
	branch F l00005D94_ds_t
	// succ:  l00005D94_ds_f l00005D94_ds_t
l00005D94_ds_f:
	F = r24 == 0x00000007
	goto l00005D9C
	// succ:  l00005D9C
l00005D94_ds_t:
	F = r24 == 0x00000007
	goto l00005ED4
	// succ:  l00005ED4
l00005D9C:
	branch !F l00005D9C_ds_t
	// succ:  l00005D9C_ds_f l00005D9C_ds_t
l00005D9C_ds_f:
	r3 = r2 | 0x00000000
	goto l00005DA4
	// succ:  l00005DA4
l00005D9C_ds_t:
	r3 = r2 | 0x00000000
	goto l00006010
	// succ:  l00006010
l00005DA4:
	r2 = 0x00000000 + -200
	CV = cond(r2)
	goto l00005F70
	// succ:  l00005F70
l00005DAC:
	r4 = 0x00000000 + -15
	CV = cond(r4)
l00005E3C:
	r3 = r2 | 0x00000000
	r2 = 0x00000000 + -500
	CV = cond(r2)
	r4 = 0x00000000 + -15
	CV = cond(r4)
l00005ED4:
	r3 = r2 | 0x00000000
	r2 = 0x00000000 + -200
	CV = cond(r2)
	r4 = 0x00000000 + -30
	CV = cond(r4)
l00005F70:
	r4 = 0x00000000 + -30
	CV = cond(r4)
l00006010:
	r22 = 0x00000000 + 0
	CV = cond(r22)
	r7 = 0x00000000 + -3
	CV = cond(r7)
	r17 = 0x00000000 + -4
	CV = cond(r17)
	r6 = 0x00000000 + -27
	CV = cond(r6)
	r15 = 0x00000000 + -2
	CV = cond(r15)
	r13 = 0x00000000 + -1
	CV = cond(r13)
	r19 = r17 | 0x00000000
	r18 = 0x00000000 + -8
	CV = cond(r18)
	Mem0[r1 + 44:word32] = r6
	r16 = 0x00000000 + -12
	CV = cond(r16)
	r2 = 0x00000000 + -6
	CV = cond(r2)
	r4 = r15 | 0x00000000
	r27 = r7 | 0x00000000
	r25 = r7 | 0x00000000
	r5 = r13 | 0x00000000
	r20 = r22 | 0x00000000
	r24 = r22 | 0x00000000
	r26 = r22 | 0x00000000
	r21 = r22 | 0x00000000
	r14 = r22 | 0x00000000
	r12 = r22 | 0x00000000
	r8 = r22 | 0x00000000
	Mem0[r1 + 40:word32] = r22
	r30 = (word32) Mem0[r28 + 24:word16]
	F = r30 != 0x00000000
	branch F l00006010_ds_t
	// succ:  l00006010_ds_f l00006010_ds_t
l00006010_ds_f:
	goto l0000607C
	// succ:  l0000607C
l00006010_ds_t:
	goto l00006080
	// succ:  l00006080
l0000607C:
	Mem0[r28 + 24:word32] = r21
	// succ:  l00006080
l00006080:
	r30 = (word32) Mem0[r28 + 28:word16]
	F = r30 != 0x00000000
	branch F l00006080_ds_t
	// succ:  l00006080_ds_f l00006080_ds_t
l00006080_ds_f:
	goto l00006090
	// succ:  l00006090
l00006080_ds_t:
	goto l00006094
	// succ:  l00006094
l00006090:
	Mem0[r28 + 28:word32] = r26
	// succ:  l00006094
l00006094:
	r30 = (word32) Mem0[r28 + 32:word16]
	F = r30 != 0x00000000
	branch F l00006094_ds_t
	// succ:  l00006094_ds_f l00006094_ds_t
l00006094_ds_f:
	goto l000060A4
	// succ:  l000060A4
l00006094_ds_t:
	goto l000060A8
	// succ:  l000060A8
l000060A4:
	Mem0[r28 + 32:word32] = r24
	// succ:  l000060A8
l000060A8:
	r30 = (word32) Mem0[r28 + 36:word16]
	F = r30 != 0x00000000
	branch F l000060A8_ds_t
	// succ:  l000060A8_ds_f l000060A8_ds_t
l000060A8_ds_f:
	goto l000060B8
	// succ:  l000060B8
l000060A8_ds_t:
	goto l000060BC
	// succ:  l000060BC
l000060B8:
	Mem0[r28 + 36:word32] = r20
	// succ:  l000060BC
l000060BC:
	r30 = 0x000001C6
	r23 = (word32) Mem0[r28 + 26:word16]
	r21 = r30 | 0x00003030
	r6 = Mem0[r1 + 20:word32]
	Mem0[r21:word32] = r23
	r23 = (word32) Mem0[r28 + 30:word16]
	r21 = r30 | 0x00003034
	r3 = r6 << 0x00000010
	Mem0[r21:word32] = r23
	r23 = (word32) Mem0[r28 + 34:word16]
	r21 = r30 | 0x00003038
	r6 = Mem0[r1 + 28:word32]
	Mem0[r21:word32] = r23
	r23 = (word32) Mem0[r28 + 38:word16]
	r21 = r30 | 0x0000303C
	r3 = r3 | r6
	Mem0[r21:word32] = r23
	r21 = Mem0[r28 + 12:word32]
	r28 = r16 << 0x00000018
	r21 = r21 >>u 0x00000004
	r6 = Mem0[r1:word32]
	r28 = r3 | r28
	r23 = r21 & 0x00000003
	r3 = Mem0[r1 + 44:word32]
	r21 = r30 | 0x0000302C
	r26 = r3 << 0x00000008
	Mem0[r21:word32] = r23
	r3 = Mem0[r1 + 16:word32]
	r21 = r4 << 0x0000000C
	r22 = r22 << 0x00000010
	r29 = r3 << 0x00000008
	r31 = r6 << 0x00000010
	r22 = r22 | r21
	r6 = Mem0[r1 + 24:word32]
	r3 = Mem0[r1 + 48:word32]
	r22 = r22 | r2
	r31 = r31 | r29
	r2 = Mem0[r1 + 4:word32]
	r27 = r27 << 0x00000018
	r25 = r25 << 0x00000010
	r31 = r31 | r6
	r20 = r3 << 0x00000010
	r6 = r2 << 0x00000018
	r25 = r27 | r25
	r23 = r19 << 0x00000008
	r20 = r6 | r20
	r6 = Mem0[r1 + 8:word32]
	r4 = Mem0[r1 + 12:word32]
	r28 = r28 | r26
	r24 = r25 | r18
	r26 = r30 | 0x00003058
	r18 = r6 << 0x00000008
	r29 = r30 | 0x0000305C
	Mem0[r26:word32] = r28
	r24 = r24 | r23
	r19 = r20 | r4
	r23 = r30 | 0x00003060
	Mem0[r29:word32] = r31
	r21 = r30 | 0x00003064
	Mem0[r23:word32] = r24
	r19 = r19 | r18
	r18 = r30 | 0x00003068
	Mem0[r21:word32] = r22
	Mem0[r18:word32] = r19
	r18 = r17 << 0x00000018
	r17 = r17 << 0x00000010
	r2 = r30 | 0x00003078
	r4 = 0x00000200
	r17 = r18 | r17
	r3 = 0x0000FFFF
	r16 = r17 | r15
	r15 = r7 << 0x00000008
	r4 = r4 | 0x00000100
	r5 = r5 << 0x00000010
	r16 = r16 | r15
	r15 = r30 | 0x0000306C
	r13 = r13 | r4
	Mem0[r15:word32] = r16
	r6 = Mem0[r1 + 40:word32]
	r15 = Mem0[r2:word32]
	r13 = r13 | r5
	r15 = r15 & r3
	r3 = r8 << 0x00000014
	r15 = r15 | 0x00003310
	r5 = r30 | 0x00003080
	r14 = r14 << 0x00000014
	Mem0[r2:word32] = r15
	r4 = r3 | r6
	r3 = r30 | 0x00003050
	r2 = Mem0[r1 + 32:word32]
	Mem0[r5:word32] = r13
	Mem0[r3:word32] = r4
	r14 = r14 | r12
	r3 = r30 | 0x00003054
	r8 = r2 << 0x00000010
	Mem0[r3:word32] = r14
	r3 = Mem0[r1 + 36:word32]
	r2 = r30 | 0x00003090
	r12 = r8 | r3
	Mem0[r2:word32] = r12
	r1 = r1 + -96
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 44:word32]
	r14 = Mem0[r1 - 40:word32]
	r16 = Mem0[r1 - 36:word32]
	r18 = Mem0[r1 - 32:word32]
	r20 = Mem0[r1 - 28:word32]
	r22 = Mem0[r1 - 24:word32]
	r24 = Mem0[r1 - 20:word32]
	r26 = Mem0[r1 - 16:word32]
	r28 = Mem0[r1 - 12:word32]
	r30 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000051E8_exit
fn000051E8_exit:


// fn000062BC
// Return size: 0
void fn000062BC()
fn000062BC_entry:
	r1 = fp
	// succ:  l000062BC
l000062BC:
	r3 = Mem0[r3 + 92:word32]
	Mem0[r1 - 4:word32] = r9
	r3 = r3 >>u 0x00000014
	Mem0[r1 - 8:word32] = r2
	r3 = r3 & 0x00000007
	F = r3 >u 0x00000005
	branch F l000062BC_ds_t
	// succ:  l000062BC_ds_f l000062BC_ds_t
l000062BC_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l000062DC
	// succ:  l000062DC
l000062BC_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l00006324
	// succ:  l00006324
l000062DC:
	r2 = 0x00000001
	r3 = r3 << 0x00000002
	r2 = r2 | 0x00002478
	r3 = r3 + r2
	CV = cond(r3)
	r3 = Mem0[r3:word32]
l00006324:
	r4 = 0x0000F206
	r4 = r4 | 0x00003333
	r3 = 0x000001C2
	r2 = 0x00000100
	r3 = r3 | 0x00000290
	Mem0[r3:word32] = r4
	r3 = 0x000001C2
	r3 = r3 | 0x00000020
	r4 = Mem0[r3:word32]
	r4 = r4 | r2
	r2 = 0x00000010
	Mem0[r3:word32] = r4
	r4 = Mem0[r3:word32]
	r4 = r4 | r2
	Mem0[r3:word32] = r4
	// succ:  l00006360
l00006360:
	r4 = Mem0[r3:word32]
	r2 = 0x00000010
	r4 = r4 & r2
	F = r4 != 0x00000000
	branch F l00006360_ds_t
	// succ:  l00006360_ds_f l00006360_ds_t
l00006360_ds_f:
	goto l00006378
	// succ:  l00006378
l00006360_ds_t:
	goto l00006360
	// succ:  l00006360
l00006378:
	r3 = 0x00000000 + -20
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r1 = r1 + -8
	CV = cond(r1)
	r11 = 0x00000000 + -1
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000062BC_exit
fn000062BC_exit:


// fn00006394
// Return size: 0
void fn00006394()
fn00006394_entry:
	r1 = fp
	// succ:  l00006394
l00006394:
	Mem0[r1 - 16:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r1 - 8:word32] = r16
	r16 = r3 | 0x00000000
	r3 = r2 ^ 0x00000378
	Mem0[r1 - 4:word32] = r9
	r4 = 0x00000000 - r3
	CV = cond(r4)
	Mem0[r1 - 12:word32] = r14
	r3 = r4 | r3
	F = r3 >= 0
	branch F l00006394_ds_t
	// succ:  l00006394_ds_f l00006394_ds_t
l00006394_ds_f:
	r1 = r1 - 16
	CV = cond(r1)
	goto l000063C4
	// succ:  l000063C4
l00006394_ds_t:
	r1 = r1 - 16
	CV = cond(r1)
	goto l000063DC
	// succ:  l000063DC
l000063C4:
	r3 = r2 ^ 0x00000348
	r4 = 0x00000000 - r3
	CV = cond(r4)
	r3 = r4 | r3
	F = r3 < 0
	branch F l000063C4_ds_t
	// succ:  l000063C4_ds_f l000063C4_ds_t
l000063C4_ds_f:
	goto l000063DC
	// succ:  l000063DC
l000063C4_ds_t:
	goto l000063E4
	// succ:  l000063E4
l000063DC:
	r2 = r2 - 24
	CV = cond(r2)
	Mem0[r16:word32] = r2
	// succ:  l000063E4
l000063E4:
	r3 = Mem0[r16:word32]
	r4 = 0x00000000 + -24
	CV = cond(r4)
	r3 = r3 + r3
	CV = cond(r3)
	r2 = 0x00000000 + -1
	CV = cond(r2)
	call fn0000FEDC (retsize: 0;)
	F = r11 <=u 0x00000020
	branch F l000063E4_ds_t
	// succ:  l000063E4_ds_f l000063E4_ds_t
l000063E4_ds_f:
	r14 = r11 | 0x00000000
	goto l00006404
	// succ:  l00006404
l000063E4_ds_t:
	r14 = r11 | 0x00000000
	goto l0000646C
	// succ:  l0000646C
l00006404:
	F = r11 <=u 0x00000040
	branch F l00006404_ds_t
	// succ:  l00006404_ds_f l00006404_ds_t
l00006404_ds_f:
	r2 = 0x00000000 + -2
	CV = cond(r2)
	goto l00006410
	// succ:  l00006410
l00006404_ds_t:
	r2 = 0x00000000 + -2
	CV = cond(r2)
	goto l0000645C
	// succ:  l0000645C
l00006410:
	r3 = r11 | 0x00000000
	r4 = 0x00000000 + -3
	CV = cond(r4)
	r2 = 0x00000000 + -3
	CV = cond(r2)
	call fn0001003C (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00006410_ds_t
	// succ:  l00006410_ds_f l00006410_ds_t
l00006410_ds_f:
	r3 = r14 | 0x00000000
	goto l0000642C
	// succ:  l0000642C
l00006410_ds_t:
	r3 = r14 | 0x00000000
	goto l00006460
	// succ:  l00006460
l0000642C:
	r3 = r14 & r2
	F = r3 == 0x00000000
	branch F l0000642C_ds_t
	// succ:  l0000642C_ds_f l0000642C_ds_t
l0000642C_ds_f:
	r2 = 0x00000000 + -4
	CV = cond(r2)
	goto l0000643C
	// succ:  l0000643C
l0000642C_ds_t:
	r2 = 0x00000000 + -4
	CV = cond(r2)
	goto l0000645C
	// succ:  l0000645C
l0000643C:
	r3 = r14 | 0x00000000
	r4 = 0x00000000 + -5
	CV = cond(r4)
	r2 = 0x00000000 + -5
	CV = cond(r2)
	call fn0001003C (retsize: 0;)
	F = r11 == 0x00000000
	branch F l0000643C_ds_t
	// succ:  l0000643C_ds_f l0000643C_ds_t
l0000643C_ds_f:
	goto l00006458
	// succ:  l00006458
l0000643C_ds_t:
	goto l0000645C
	// succ:  l0000645C
l00006458:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	// succ:  l0000645C
l0000645C:
	r3 = r14 | 0x00000000
	// succ:  l00006460
l00006460:
	r4 = r2 | 0x00000000
	call fn0000FEDC (retsize: 0;)
	r14 = r11 | 0x00000000
	// succ:  l0000646C
l0000646C:
	r3 = 0x000001C2
	r5 = r14 - 1
	CV = cond(r5)
	r3 = r3 | 0x00000020
	r5 = r5 << 0x00000008
	r4 = Mem0[r3:word32]
	r4 = r2 - 1
	CV = cond(r4)
fn00006394_exit:


// fn000064DC
// Return size: 0
void fn000064DC()
fn000064DC_entry:
	r1 = fp
	// succ:  l000064DC
l000064DC:
	Mem0[r1 - 32:word32] = r2
	r2 = 0x000001C2
	Mem0[r1 - 28:word32] = r14
	r4 = 0x00007FFF
	r14 = r2 | 0x0000015C
	Mem0[r1 - 8:word32] = r24
	r4 = r4 | 0x0000FFFF
	r24 = r3 | 0x00000000
	r3 = Mem0[r14:word32]
	Mem0[r1 - 4:word32] = r9
	r3 = r3 & r4
	Mem0[r1 - 24:word32] = r16
	Mem0[r1 - 20:word32] = r18
	Mem0[r1 - 16:word32] = r20
	Mem0[r1 - 12:word32] = r22
	Mem0[r14:word32] = r3
	r16 = r2 | 0x000000FC
	r18 = r2 | 0x00000060
	r3 = Mem0[r16:word32]
	r20 = r2 | 0x000002C0
	r3 = r3 & r4
	r4 = 0x00000000 - 16385
	CV = cond(r4)
	Mem0[r16:word32] = r3
	r5 = 0x00007FFF
	r3 = Mem0[r18:word32]
	r5 = r5 | 0x0000FFFF
	r3 = r3 & r4
	r1 = r1 - 32
	CV = cond(r1)
	Mem0[r18:word32] = r3
	r3 = Mem0[r20:word32]
	r3 = r3 & r4
	r4 = r2 | 0x00000020
	Mem0[r20:word32] = r3
	r2 = r2 | 0x000000F4
	r3 = Mem0[r4:word32]
	r3 = r3 & r5
	r5 = 0x00000010
	Mem0[r4:word32] = r3
	r3 = r3 | r5
	Mem0[r4:word32] = r3
	r4 = 0x00007FFF
	r3 = Mem0[r2:word32]
	r4 = r4 | 0x0000FFFF
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r5 = 0x0000FFCF
	r22 = Mem0[r2:word32]
	r5 = r5 | 0x0000FFFF
	r3 = r24 | 0x00000000
	r22 = r22 & r5
	call fn00006394 (retsize: 0;)
	r11 = r11 >>u 0x00000001
	r3 = 0x00000000 + -1000
	CV = cond(r3)
	Mem0[r24:word32] = r11
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + -10
	CV = cond(r3)
	Mem0[r2:word32] = r22
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000001
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r22 = r22 | r3
	Mem0[r2:word32] = r22
	r3 = Mem0[r20:word32]
	r3 = r3 | 0x00004000
	Mem0[r20:word32] = r3
	r3 = Mem0[r18:word32]
	r3 = r3 | 0x00004000
	Mem0[r18:word32] = r3
	r18 = 0x000001C6
	r3 = r18 | 0x00002094
	r18 = r18 | 0x0000300C
	Mem0[r3:word32] = r4
	r4 = 0x00008000
	r3 = Mem0[r16:word32]
	r3 = r3 | r4
	Mem0[r16:word32] = r3
	r3 = Mem0[r14:word32]
	r3 = r3 | r4
	Mem0[r14:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -2000
	CV = cond(r3)
	r2 = 0x00000000 | 0x00008000
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + -10
	CV = cond(r3)
	Mem0[r18:word32] = r2
	call fn0000C8A0 (retsize: 0;)
	r1 = r1 + -32
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 32:word32]
	r14 = Mem0[r1 - 28:word32]
	r16 = Mem0[r1 - 24:word32]
	r18 = Mem0[r1 - 20:word32]
	r20 = Mem0[r1 - 16:word32]
	r22 = Mem0[r1 - 12:word32]
	r24 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000064DC_exit
fn000064DC_exit:


// fn00006678
// Return size: 0
void fn00006678()
fn00006678_entry:
	r1 = fp
	// succ:  l00006678
l00006678:
	r4 = 0x000001C6
	Mem0[r1 - 4:word32] = r2
	r4 = r4 | 0x00002000
	r2 = 0x0000FF00
	r6 = Mem0[r3 + 4:word32]
	r5 = Mem0[r4:word32]
	r2 = r2 | 0x00000FFF
	r4 = r6 & 0x00000007
	r5 = r5 & r2
	r2 = 0x00000040
	r4 = r4 << 0x00000010
	r5 = r5 | r2
	r1 = r1 - 4
	CV = cond(r1)
	r5 = r5 | r4
	r4 = Mem0[r3 + 20:word32]
	r12 = r4 & 0x00000001
	F = r12 == 0x00000000
	branch F l00006678_ds_t
	// succ:  l00006678_ds_f l00006678_ds_t
l00006678_ds_f:
	r7 = 0x00000000 + -4096
	CV = cond(r7)
	goto l000066C4
	// succ:  l000066C4
l00006678_ds_t:
	r7 = 0x00000000 + -4096
	CV = cond(r7)
	goto l000066C8
	// succ:  l000066C8
l000066C4:
	r7 = 0x00000000 + 0
	CV = cond(r7)
	// succ:  l000066C8
l000066C8:
	r6 = r6 - 6
	CV = cond(r6)
	F = r6 >u 0x00000001
	branch F l000066C8_ds_t
	// succ:  l000066C8_ds_f l000066C8_ds_t
l000066C8_ds_f:
	r5 = r5 | r7
	goto l000066D8
	// succ:  l000066D8
l000066C8_ds_t:
	r5 = r5 | r7
	goto l000066E4
	// succ:  l000066E4
l000066D8:
	r2 = 0x00000008
	r5 = r5 | r2
	goto l000066F8
	// succ:  l000066F8
l000066E4:
	r6 = Mem0[r3 + 92:word32]
	r2 = 0x00000008
	r6 = r6 << 0x0000000E
	r6 = r6 & r2
	r5 = r5 | r6
	// succ:  l000066F8
l000066F8:
	r6 = 0x000001C6
	r13 = 0x00000000 + -1
	CV = cond(r13)
	r6 = r6 | 0x00002000
	Mem0[r6:word32] = r5
	r5 = r4 & 0x00000100
	F = r5 == 0x00000000
	branch F l000066F8_ds_t
	// succ:  l000066F8_ds_f l000066F8_ds_t
l000066F8_ds_f:
	goto l00006718
	// succ:  l00006718
l000066F8_ds_t:
	goto l0000671C
	// succ:  l0000671C
l00006718:
	r13 = 0x00000000 + -2
	CV = cond(r13)
	// succ:  l0000671C
l0000671C:
	r4 = r4 >>u 0x0000000C
	r7 = 0x000001C6
	r11 = Mem0[r3 + 16:word32]
	r15 = r4 & 0x00000001
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r7 = r7 | 0x00002000
	r8 = r4 | 0x00000000
	r5 = r4 + -12
	CV = cond(r5)
	r6 = Mem0[r7:word32]
fn00006678_exit:


// fn00006880
// Return size: 0
void fn00006880()
fn00006880_entry:
	r1 = fp
	// succ:  l00006880
l00006880:
	r3 = 0x000001C6
	Mem0[r1 - 24:word32] = r2
	r2 = r4 | 0x00000000
	Mem0[r1 - 20:word32] = r14
	r14 = Mem0[r4 + 92:word32]
	r4 = r3 | 0x00003108
	r7 = Mem0[r2 + 12:word32]
	r5 = Mem0[r4:word32]
	r6 = 0x00000000 - 3841
	CV = cond(r6)
	r7 = r7 & 0x00000001
	r5 = r5 & r6
	r14 = r14 >>u 0x00000002
	r7 = r7 ^ 0x00000001
	r5 = r5 | 0x00000300
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 16:word32] = r16
	Mem0[r1 - 12:word32] = r18
	Mem0[r1 - 8:word32] = r20
	r7 = r7 << 0x00000005
	r1 = r1 - 24
	CV = cond(r1)
	r14 = r14 & 0x00000003
	Mem0[r4:word32] = r5
	r6 = Mem0[r2:word32]
	r3 = r3 | 0x00003344
	r8 = 0x00000000 - 49
	CV = cond(r8)
	goto l000068E4
	// succ:  l000068E4
l00006880:
l00006880_ds_f:
	r4 = r5 & r8
	goto l00006904
	// succ:  l00006904
l00006880_ds_t:
	r4 = r5 & r8
	goto l00006914
	// succ:  l00006914
l000068E4:
	r5 = Mem0[r3:word32]
	F = r6 <=u 0x00000258
	r5 = r5 & r8
	r8 = 0x0000FFFF
	r5 = r5 | r7
	r8 = r8 | 0x00000FF1
	branch F l00006880_ds_t
	goto l00006880_ds_f
	// succ:  l00006880_ds_f l00006880_ds_t
l00006904:
	r8 = 0x0000FFFF
	r8 = r8 | 0x000009F1
	r4 = r5 & r8
	r4 = r4 | 0x00000400
	// succ:  l00006914
l00006914:
	Mem0[r3:word32] = r4
	r4 = 0x000001C6
	r3 = r3 + -128
	CV = cond(r3)
	r4 = r4 | 0x00003544
	F = r3 != r4
	branch F l00006914_ds_t
	// succ:  l00006914_ds_f l00006914_ds_t
l00006914_ds_f:
	r8 = 0x00000000 - 49
	CV = cond(r8)
	goto l00006930
	// succ:  l00006930
l00006914_ds_t:
	r8 = 0x00000000 - 49
	CV = cond(r8)
	goto l000068E4
	// succ:  l000068E4
l00006930:
	r16 = 0x000001C6
	r5 = 0x00000000 - 2049
	CV = cond(r5)
	r3 = r16 | 0x00003208
	r4 = Mem0[r3:word32]
	r4 = r4 | 0x00000002
	r4 = r4 & r5
	Mem0[r3:word32] = r4
	r3 = r2 | 0x00000000
	call fn00004D60 (retsize: 0;)
	F = r14 == 0x00000001
	branch F l00006930_ds_t
	// succ:  l00006930_ds_f l00006930_ds_t
l00006930_ds_f:
	F = r14 == 0x00000002
	goto l00006960
	// succ:  l00006960
l00006930_ds_t:
	F = r14 == 0x00000002
	goto l00006970
	// succ:  l00006970
l00006960:
	branch !F l00006960_ds_t
	// succ:  l00006960_ds_f l00006960_ds_t
l00006960_ds_f:
	r3 = r16 | 0x00003108
	goto l00006968
	// succ:  l00006968
l00006960_ds_t:
	r3 = r16 | 0x00003108
	goto l00006A04
	// succ:  l00006A04
l00006968:
	goto l00006998
	// succ:  l00006998
l00006970:
	r3 = r16 | 0x00003108
	r6 = 0x00000000 - 193
	CV = cond(r6)
	r4 = Mem0[r3:word32]
	r16 = r16 | 0x000030BC
	r4 = r4 & r6
	r7 = 0x00000000 - 264
	CV = cond(r7)
	Mem0[r3:word32] = r4
	r3 = Mem0[r16:word32]
	r3 = r3 & r7
	goto l000069F8
	// succ:  l000069F8
l00006998:
	r4 = Mem0[r3:word32]
	r8 = 0x00000000 - 193
	CV = cond(r8)
	r6 = 0x00000000 - 264
	CV = cond(r6)
	r4 = r4 & r8
	r7 = 0x00000800
	r4 = r4 | 0x00000080
	r8 = 0x00007FFF
	Mem0[r3:word32] = r4
	r3 = r16 | 0x00003060
	r8 = r8 | 0x0000FFFF
	r4 = Mem0[r3:word32]
	r3 = r16 | 0x000030BC
	r4 = r4 >>u 0x00000010
	r5 = Mem0[r3:word32]
	r16 = r16 | 0x0000311C
	r5 = r5 & r6
	r4 = r4 & 0x0000001F
	r5 = r5 | 0x00000100
	r4 = r4 - 2
	CV = cond(r4)
	r4 = r5 | r4
	Mem0[r3:word32] = r4
	r3 = Mem0[r16:word32]
	r3 = r3 | r7
	r3 = r3 & r8
	// succ:  l000069F8
l000069F8:
	Mem0[r16:word32] = r3
	r4 = Mem0[r2 + 4:word32]
	goto l00006A24
	// succ:  l00006A24
l00006A04:
	r4 = Mem0[r3:word32]
	r5 = 0x00000000 - 65
	CV = cond(r5)
	r4 = r4 & r5
	Mem0[r3:word32] = r4
	r4 = Mem0[r3:word32]
	r4 = r4 | 0x000000C0
	Mem0[r3:word32] = r4
	r4 = Mem0[r2 + 4:word32]
	goto l00006A24
	// succ:  l00006A24
l00006A04_ds_f:
	r3 = 0x000001C6
	goto l00006A34
	// succ:  l00006A34
l00006A04_ds_t:
	r3 = 0x000001C6
	goto l00006A54
	// succ:  l00006A54
l00006A24:
	r3 = r4 - 6
	CV = cond(r3)
	F = r3 >u 0x00000001
	branch F l00006A04_ds_t
	goto l00006A04_ds_f
	// succ:  l00006A04_ds_f l00006A04_ds_t
l00006A34:
	r6 = 0x000088FF
	r3 = r3 | 0x0000311C
	r6 = r6 | 0x0000FFFF
	r5 = Mem0[r3:word32]
	r7 = 0x00002200
	r5 = r5 & r6
	r5 = r5 | r7
	Mem0[r3:word32] = r5
	// succ:  l00006A54
l00006A54:
	r3 = Mem0[r2 + 20:word32]
	r3 = r3 & 0x00001000
	F = r3 == 0x00000000
	branch F l00006A54_ds_t
	// succ:  l00006A54_ds_f l00006A54_ds_t
l00006A54_ds_f:
	r7 = 0x0000F000
	goto l00006A68
	// succ:  l00006A68
l00006A54_ds_t:
	r7 = 0x0000F000
	goto l00006A8C
	// succ:  l00006A8C
l00006A68:
	r3 = 0x000001C6
	r8 = 0x0000F000
	r3 = r3 | 0x000030C0
	r6 = 0x00000300
	r5 = Mem0[r3:word32]
	r6 = r6 | 0x00003087
	r5 = r5 & r8
	r5 = r5 | r6
	goto l00006AA8
	// succ:  l00006AA8
l00006A8C:
	r3 = 0x000001C6
	r3 = r3 | 0x000030C0
	r8 = 0x00000100
	r5 = Mem0[r3:word32]
	r8 = r8 | 0x00003087
	r5 = r5 & r7
	r5 = r5 | r8
	// succ:  l00006AA8
l00006AA8:
	Mem0[r3:word32] = r5
	r3 = 0x000001F0
	r3 = r3 | 0x00001510
	r5 = Mem0[r3:word32]
	r5 = r5 & 0x00000003
	F = r5 == 0x00000000
	branch F l00006AA8_ds_t
	// succ:  l00006AA8_ds_f l00006AA8_ds_t
l00006AA8_ds_f:
	r8 = 0x0000FF00
	goto l00006AC8
	// succ:  l00006AC8
l00006AA8_ds_t:
	r8 = 0x0000FF00
	goto l00006C98
	// succ:  l00006C98
l00006AC8:
	r4 = Mem0[r3:word32]
	r5 = 0x00000000 - 3
	CV = cond(r5)
	r4 = r4 & r5
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r4 = 0x000001C6
	r8 = 0x000000FF
	r3 = r4 | 0x00003140
	r5 = Mem0[r2 + 8:word32]
	r6 = Mem0[r3:word32]
	r7 = 0x0000FF00
	r8 = r8 | 0x0000FFFF
	r6 = r6 & r7
	r5 = r5 & r8
	F = r14 != 0x00000001
	r5 = r5 | r6
	Mem0[r3:word32] = r5
	branch F l00006AC8_ds_t
	// succ:  l00006AC8_ds_f l00006AC8_ds_t
l00006AC8_ds_f:
	r3 = 0x00000000 + -98
	CV = cond(r3)
	goto l00006B18
	// succ:  l00006B18
l00006AC8_ds_t:
	r3 = 0x00000000 + -98
	CV = cond(r3)
	goto l00006B50
	// succ:  l00006B50
l00006B18:
	r3 = r4 | 0x00003000
	r5 = 0x00000000 + -82
	CV = cond(r5)
	r4 = r4 | 0x00003010
	Mem0[r3:word32] = r5
	r5 = 0x00000000 + -83
	CV = cond(r5)
	Mem0[r3:word32] = r5
	// succ:  l00006B30
l00006B30:
	r3 = Mem0[r4:word32]
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l00006B30_ds_t
	// succ:  l00006B30_ds_f l00006B30_ds_t
l00006B30_ds_f:
	goto l00006B44
	// succ:  l00006B44
l00006B30_ds_t:
	goto l00006B30
	// succ:  l00006B30
l00006B44:
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + -32
	CV = cond(r3)
	// succ:  l00006B50
l00006B50:
	r16 = 0x000001C6
	r4 = r16 | 0x00003000
	Mem0[r4:word32] = r3
	r3 = r3 | 0x00000001
	Mem0[r4:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = r16 | 0x00003010
	// succ:  l00006B70
l00006B70:
	r4 = Mem0[r3:word32]
	r4 = r4 & 0x00000001
	F = r4 == 0x00000000
	branch F l00006B70_ds_t
	// succ:  l00006B70_ds_f l00006B70_ds_t
l00006B70_ds_f:
	r16 = 0x000001C6
	goto l00006B84
	// succ:  l00006B84
l00006B70_ds_t:
	r16 = 0x000001C6
	goto l00006B70
	// succ:  l00006B70
l00006B84:
	r3 = r16 | 0x0000310C
	r5 = 0x0000F9FF
	r4 = Mem0[r3:word32]
	r5 = r5 | 0x0000FFFF
	r6 = 0x00000400
	r4 = r4 & r5
	r4 = r4 | r6
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = r16 | 0x00003004
	r16 = r16 | 0x00003018
	r4 = Mem0[r3:word32]
	r4 = r4 | 0x00000001
	Mem0[r3:word32] = r4
	// succ:  l00006BC0
l00006BC0:
	r3 = Mem0[r16:word32]
	r3 = r3 & 0x00000007
	F = r3 != 0x00000003
	branch F l00006BC0_ds_t
	// succ:  l00006BC0_ds_f l00006BC0_ds_t
l00006BC0_ds_f:
	r18 = 0x000001C6
	goto l00006BD4
	// succ:  l00006BD4
l00006BC0_ds_t:
	r18 = 0x000001C6
	goto l00006BC0
	// succ:  l00006BC0
l00006BD4:
	r3 = 0x000001F0
	r7 = 0x00000000 - 2
	CV = cond(r7)
	r3 = r3 | 0x00001510
	r4 = Mem0[r3:word32]
	r4 = r4 & r7
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = r18 | 0x00003004
	r8 = 0x00000000 - 2
	CV = cond(r8)
	r4 = Mem0[r3:word32]
	r18 = r18 | 0x00003018
	r4 = r4 & r8
	Mem0[r3:word32] = r4
	// succ:  l00006C0C
l00006C0C:
	r3 = Mem0[r18:word32]
	r3 = r3 & 0x00000007
	F = r3 != 0x00000001
	branch F l00006C0C_ds_t
	// succ:  l00006C0C_ds_f l00006C0C_ds_t
l00006C0C_ds_f:
	r16 = 0x000001C6
	goto l00006C20
	// succ:  l00006C20
l00006C0C_ds_t:
	r16 = 0x000001C6
	goto l00006C0C
	// succ:  l00006C0C
l00006C20:
	r3 = 0x00000000 + -15
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	F = r14 != 0x00000001
	branch F l00006C20_ds_t
	// succ:  l00006C20_ds_f l00006C20_ds_t
l00006C20_ds_f:
	r3 = r16 | 0x00003108
	goto l00006C34
	// succ:  l00006C34
l00006C20_ds_t:
	r3 = r16 | 0x00003108
	goto l00006D58
	// succ:  l00006D58
l00006C34:
	r5 = 0x00000000 - 193
	CV = cond(r5)
	r4 = Mem0[r3:word32]
	r6 = 0x0000F9FF
	r4 = r4 & r5
	r6 = r6 | 0x0000FFFF
	Mem0[r3:word32] = r4
	r3 = r16 | 0x0000310C
	r7 = 0x00000200
	r4 = Mem0[r3:word32]
	r4 = r4 & r6
	r4 = r4 | r7
	Mem0[r3:word32] = r4
	r3 = r14 | 0x00000000
	call fn0000C8A0 (retsize: 0;)
	r3 = r16 | 0x00003000
	r4 = 0x00000000 + -1025
	CV = cond(r4)
	r16 = r16 | 0x00003010
	Mem0[r3:word32] = r4
	// succ:  l00006C7C
l00006C7C:
	r3 = Mem0[r16:word32]
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l00006C7C_ds_t
	// succ:  l00006C7C_ds_f l00006C7C_ds_t
l00006C7C_ds_f:
	r3 = 0x000001C6
	goto l00006C90
	// succ:  l00006C90
l00006C7C_ds_t:
	r3 = 0x000001C6
	goto l00006C7C
	// succ:  l00006C7C
l00006C90:
	r4 = r3 | 0x00003010
	goto l00006D60
	// succ:  l00006D60
l00006C98:
	r3 = 0x000001C6
	r5 = r3 | 0x00003140
	r6 = Mem0[r2 + 8:word32]
	r7 = Mem0[r5:word32]
	F = r14 != 0x00000001
	r7 = r7 & r8
	r8 = 0x000000FF
	r8 = r8 | 0x0000FFFF
	r6 = r6 & r8
	r6 = r6 | r7
	Mem0[r5:word32] = r6
	branch F l00006C98_ds_t
	// succ:  l00006C98_ds_f l00006C98_ds_t
l00006C98_ds_f:
	F = r4 == 0x00000003
	goto l00006CCC
	// succ:  l00006CCC
l00006C98_ds_t:
	F = r4 == 0x00000003
	goto l00006D18
	// succ:  l00006D18
l00006CCC:
	r4 = r3 | 0x00003000
	r5 = 0x00000000 + -82
	CV = cond(r5)
	r3 = r3 | 0x00003010
	Mem0[r4:word32] = r5
	r5 = 0x00000000 + -83
	CV = cond(r5)
	Mem0[r4:word32] = r5
	// succ:  l00006CE4
l00006CE4:
	r4 = Mem0[r3:word32]
	r4 = r4 & 0x00000001
	F = r4 == 0x00000000
	branch F l00006CE4_ds_t
	// succ:  l00006CE4_ds_f l00006CE4_ds_t
l00006CE4_ds_f:
	goto l00006CF8
	// succ:  l00006CF8
l00006CE4_ds_t:
	goto l00006CE4
	// succ:  l00006CE4
l00006CF8:
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r4 = Mem0[r2 + 4:word32]
	F = r4 == 0x00000003
	branch F l00006CF8_ds_t
	// succ:  l00006CF8_ds_f l00006CF8_ds_t
l00006CF8_ds_f:
	r3 = 0x00000000 + -1440
	CV = cond(r3)
	goto l00006D10
	// succ:  l00006D10
l00006CF8_ds_t:
	r3 = 0x00000000 + -1440
	CV = cond(r3)
	goto l00006D24
	// succ:  l00006D24
l00006D10:
	r3 = 0x00000000 + -1312
	CV = cond(r3)
	goto l00006D24
	// succ:  l00006D24
l00006D18:
	branch F l00006D18_ds_t
	// succ:  l00006D18_ds_f l00006D18_ds_t
l00006D18_ds_f:
	r3 = 0x00000000 + -1522
	CV = cond(r3)
	goto l00006D20
	// succ:  l00006D20
l00006D18_ds_t:
	r3 = 0x00000000 + -1522
	CV = cond(r3)
	goto l00006D24
	// succ:  l00006D24
l00006D20:
	r3 = 0x00000000 + -1394
	CV = cond(r3)
	// succ:  l00006D24
l00006D24:
	r16 = 0x000001C6
	r4 = r16 | 0x00003000
	r16 = r16 | 0x00003010
	Mem0[r4:word32] = r3
	r3 = r3 | 0x00000001
	Mem0[r4:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	// succ:  l00006D44
l00006D44:
	r3 = Mem0[r16:word32]
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l00006D44_ds_t
	// succ:  l00006D44_ds_f l00006D44_ds_t
l00006D44_ds_f:
	goto l00006D58
	// succ:  l00006D58
l00006D44_ds_t:
	goto l00006D44
	// succ:  l00006D44
l00006D58:
	r3 = 0x000001C6
	r4 = r3 | 0x00003010
	// succ:  l00006D60
l00006D60:
	r3 = r3 | 0x00003018
	r4 = Mem0[r4:word32]
	r4 = r4 >>u 0x00000014
	r4 = r4 & 0x000000FF
	r20 = 0x00000000 - r4
	CV = cond(r20)
	r20 = r20 | r4
	r20 = r20 ^ 0x0000FFFF
	r20 = r20 >>u 0x0000001F
	// succ:  l00006D80
l00006D80:
	r4 = Mem0[r3:word32]
	r4 = r4 & 0x00000001
	F = r4 == 0x00000000
	branch F l00006D80_ds_t
	// succ:  l00006D80_ds_f l00006D80_ds_t
l00006D80_ds_f:
	r16 = 0x000001C6
	goto l00006D94
	// succ:  l00006D94
l00006D80_ds_t:
	r16 = 0x000001C6
	goto l00006D80
	// succ:  l00006D80
l00006D94:
	r18 = r16 | 0x0000308C
	r4 = 0x00008000
	r3 = Mem0[r18:word32]
	r3 = r3 | r4
	Mem0[r18:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r5 = 0x00007FFF
	r3 = Mem0[r18:word32]
	r5 = r5 | 0x0000FFFF
	r3 = r3 & r5
	Mem0[r18:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = r16 | 0x000020D0
	r6 = 0x00008000
	r4 = Mem0[r3:word32]
	r4 = r4 | r6
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = r16 | 0x0000310C
	r7 = 0x0000F9FF
	r4 = Mem0[r3:word32]
	r7 = r7 | 0x0000FFFF
	r2 = Mem0[r2 + 4:word32]
	r4 = r4 & r7
	r2 = r2 - 6
	CV = cond(r2)
	Mem0[r3:word32] = r4
	F = r2 >u 0x00000001
	branch F l00006D94_ds_t
	// succ:  l00006D94_ds_f l00006D94_ds_t
l00006D94_ds_f:
	F = r14 != 0x00000001
	goto l00006E14
	// succ:  l00006E14
l00006D94_ds_t:
	F = r14 != 0x00000001
	goto l00006E30
	// succ:  l00006E30
l00006E14:
	branch F l00006E14_ds_t
	// succ:  l00006E14_ds_f l00006E14_ds_t
l00006E14_ds_f:
	r16 = r16 | 0x0000311C
	goto l00006E1C
	// succ:  l00006E1C
l00006E14_ds_t:
	r16 = r16 | 0x0000311C
	goto l00006E30
	// succ:  l00006E30
l00006E1C:
	r8 = 0x00000000 - 193
	CV = cond(r8)
	r2 = Mem0[r16:word32]
	r2 = r2 & r8
	r2 = r2 | 0x00000040
	Mem0[r16:word32] = r2
	// succ:  l00006E30
l00006E30:
	r1 = r1 + -24
	CV = cond(r1)
	r11 = r20 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 24:word32]
	r14 = Mem0[r1 - 20:word32]
	r16 = Mem0[r1 - 16:word32]
	r18 = Mem0[r1 - 12:word32]
	r20 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00006880_exit
fn00006880_exit:


// fn00006E54
// Return size: 0
void fn00006E54()
fn00006E54_entry:
	r1 = fp
	// succ:  l00006E54
l00006E54:
	r4 = 0x000001C6
	r3 = r4 | 0x00002000
	r3 = Mem0[r3:word32]
	r11 = r3 >>u 0x00000008
	r5 = r3 >>u 0x00000004
	r11 = r11 & 0x0000000F
	r5 = r5 & 0x0000000F
	r11 = r11 + r5
	CV = cond(r11)
	r5 = r3 >>u 0x00000002
	r11 = r11 - 14
	CV = cond(r11)
	r3 = r3 & 0x00000003
	r5 = r5 & 0x00000003
	F = r3 == 0x00000000
	r11 = r11 + r5
	CV = cond(r11)
	r5 = 0x00000000 + -1
	CV = cond(r5)
	branch F l00006E54_ds_t
	// succ:  l00006E54_ds_f l00006E54_ds_t
l00006E54_ds_f:
	goto l00006E98
	// succ:  l00006E98
l00006E54_ds_t:
	goto l00006ED8
	// succ:  l00006ED8
l00006E98:
	r4 = r4 | 0x00002004
	r3 = r11 | 0x00000000
	r4 = Mem0[r4:word32]
	r6 = r4 & 0x00000003
	F = r6 == 0x00000000
	branch F l00006E98_ds_t
	// succ:  l00006E98_ds_f l00006E98_ds_t
l00006E98_ds_f:
	r6 = r4 >>u 0x00000008
	goto l00006EB4
	// succ:  l00006EB4
l00006E98_ds_t:
	r6 = r4 >>u 0x00000008
	goto l00006ED8
	// succ:  l00006ED8
l00006EB4:
	r3 = r4 >>u 0x00000004
	r4 = r4 >>u 0x00000002
	r6 = r6 & 0x0000000F
	r3 = r3 & 0x0000000F
	r4 = r4 & 0x00000003
	r3 = r6 + r3
	CV = cond(r3)
	r3 = r3 - 14
	CV = cond(r3)
	r3 = r3 + r4
	CV = cond(r3)
l00006ED8:
	r11 = r3 + r11
	CV = cond(r11)
	return
	// succ:  fn00006E54_exit
fn00006E54_exit:


// fn00006EE0
// Return size: 0
void fn00006EE0()
fn00006EE0_entry:
	r1 = fp
	// succ:  l00006EE0
l00006EE0:
	r4 = 0x000001C6
	Mem0[r1 - 4:word32] = r2
	r5 = r4 | 0x00003010
	r2 = 0x00000040
	r5 = Mem0[r5:word32]
	r5 = r5 & r2
	F = r5 == 0x00000000
	branch F l00006EE0_ds_t
	// succ:  l00006EE0_ds_f l00006EE0_ds_t
l00006EE0_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l00006F04
	// succ:  l00006F04
l00006EE0_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l00006F50
	// succ:  l00006F50
l00006F04:
	r5 = r4 | 0x00003348
	r6 = r4 | 0x000033C8
	r5 = Mem0[r5:word32]
	r6 = Mem0[r6:word32]
	r7 = r4 | 0x00003448
	r6 = r6 >>u 0x00000018
	r4 = r4 | 0x000034C8
	r5 = r5 >>u 0x00000018
	r6 = r6 & 0x00000003
	r7 = Mem0[r7:word32]
	r4 = Mem0[r4:word32]
	F = r6 != 0x00000002
	branch F l00006F04_ds_t
	// succ:  l00006F04_ds_f l00006F04_ds_t
l00006F04_ds_f:
	r5 = r5 & 0x00000003
	goto l00006F3C
	// succ:  l00006F3C
l00006F04_ds_t:
	r5 = r5 & 0x00000003
	goto l00006FB0
	// succ:  l00006FB0
l00006F3C:
	F = r5 == 0x00000002
	branch F l00006F3C_ds_t
	// succ:  l00006F3C_ds_f l00006F3C_ds_t
l00006F3C_ds_f:
	r5 = r6 | r5
	goto l00006F48
	// succ:  l00006F48
l00006F3C_ds_t:
	r5 = r6 | r5
	goto l00006F64
	// succ:  l00006F64
l00006F48:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00006FB8
	// succ:  l00006FB8
l00006F50:
	r4 = Mem0[r3 + 20:word32]
	r2 = 0x00000000 - 16
	CV = cond(r2)
	r4 = r4 & r2
	r4 = r4 | 0x00001000
	goto l00006FD4
	// succ:  l00006FD4
l00006F64:
	r4 = r4 >>u 0x00000018
	r4 = r4 & 0x00000003
	F = r4 != 0x00000002
	branch F l00006F64_ds_t
	// succ:  l00006F64_ds_f l00006F64_ds_t
l00006F64_ds_f:
	r2 = 0x0000FFFF
	goto l00006F78
	// succ:  l00006F78
l00006F64_ds_t:
	r2 = 0x0000FFFF
	goto l00006F9C
	// succ:  l00006F9C
l00006F78:
	r4 = r7 >>u 0x00000018
	r4 = r4 & 0x00000003
	F = r4 != 0x00000002
	branch F l00006F78_ds_t
	// succ:  l00006F78_ds_f l00006F78_ds_t
l00006F78_ds_f:
	goto l00006F8C
	// succ:  l00006F8C
l00006F78_ds_t:
	goto l00006F9C
	// succ:  l00006F9C
l00006F8C:
	r4 = Mem0[r3 + 20:word32]
	r2 = r2 | 0x00000FF0
	r4 = r4 & r2
	goto l00006FD4
	// succ:  l00006FD4
l00006F9C:
	r4 = Mem0[r3 + 20:word32]
	r2 = r2 | 0x00000FF0
	r4 = r4 & r2
	r4 = r4 | 0x00000001
	goto l00006FD4
	// succ:  l00006FD4
l00006FB0:
	r5 = r6 | r5
	r11 = 0x00000000 + 0
	CV = cond(r11)
	// succ:  l00006FB8
l00006FB8:
	F = r5 != r11
	branch F l00006FB8_ds_t
	// succ:  l00006FB8_ds_f l00006FB8_ds_t
l00006FB8_ds_f:
	goto l00006FC4
	// succ:  l00006FC4
l00006FB8_ds_t:
	goto l00006FDC
	// succ:  l00006FDC
l00006FC4:
	r4 = Mem0[r3 + 20:word32]
	r2 = 0x00000000 - 4112
	CV = cond(r2)
	r4 = r4 & r2
	r4 = r4 | 0x00001001
	// succ:  l00006FD4
l00006FD4:
	Mem0[r3 + 20:word32] = r4
	r11 = 0x00000000 + -1
	CV = cond(r11)
	// succ:  l00006FDC
l00006FDC:
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00006EE0_exit
fn00006EE0_exit:


// fn00006FE8
// Return size: 0
void fn00006FE8()
fn00006FE8_entry:
	r1 = fp
	// succ:  l00006FE8
l00006FE8:
	Mem0[r1 - 24:word32] = r2
	r2 = 0x000001C6
	Mem0[r1 - 20:word32] = r14
	r14 = r3 | 0x00000000
	r3 = r2 | 0x00003100
	r5 = 0x00000200
	r4 = Mem0[r3:word32]
	Mem0[r1 - 4:word32] = r9
	r4 = r4 | r5
	Mem0[r1 - 16:word32] = r16
	Mem0[r1 - 12:word32] = r18
	Mem0[r1 - 8:word32] = r20
	Mem0[r3:word32] = r4
	r4 = 0x00001234
	r3 = 0x00004000
	r4 = r4 | 0x00005678
	r1 = r1 - 40
	CV = cond(r1)
	Mem0[r3:word32] = r4
	r3 = Mem0[r3:word32]
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = r2 | 0x00003010
	r3 = Mem0[r3:word32]
	r3 = r3 >>u 0x0000000D
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l00006FE8_ds_t
	// succ:  l00006FE8_ds_f l00006FE8_ds_t
l00006FE8_ds_f:
	r3 = r2 | 0x00003348
	goto l00007058
	// succ:  l00007058
l00006FE8_ds_t:
	r3 = r2 | 0x00003348
	goto l000070C0
	// succ:  l000070C0
l00007058:
	r5 = r2 | 0x00003448
	r4 = Mem0[r3:word32]
	r3 = r2 | 0x000033C8
	r4 = r4 >>u 0x0000001C
	r3 = Mem0[r3:word32]
	r2 = r2 | 0x000034C8
	r3 = r3 >>u 0x0000001C
	r4 = r4 & 0x00000001
	r5 = Mem0[r5:word32]
	r3 = r3 & 0x00000001
	r2 = Mem0[r2:word32]
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r1:word32] = r4
	F = r4 != r2
	branch F l00007058_ds_t
	// succ:  l00007058_ds_f l00007058_ds_t
l00007058_ds_f:
	Mem0[r1 + 4:word32] = r3
	goto l00007098
	// succ:  l00007098
l00007058_ds_t:
	Mem0[r1 + 4:word32] = r3
	goto l000070E0
	// succ:  l000070E0
l00007098:
	F = r3 != r2
	branch F l00007098_ds_t
	// succ:  l00007098_ds_f l00007098_ds_t
l00007098_ds_f:
	r18 = 0x000001C6
	goto l000070A4
	// succ:  l000070A4
l00007098_ds_t:
	r18 = 0x000001C6
	goto l000070E4
	// succ:  l000070E4
l000070A4:
	r2 = Mem0[r14 + 20:word32]
	r3 = 0x00000000 - 16
	CV = cond(r3)
	r2 = r2 & r3
	r2 = r2 | 0x00000001
	Mem0[r14 + 20:word32] = r2
	r2 = 0x00000000 + -1
	CV = cond(r2)
	goto l000070E4
	// succ:  l000070E4
l000070C0:
	r3 = Mem0[r14 + 20:word32]
	r4 = r3 & 0x0000000F
	F = r4 != 0x00000000
	branch F l000070C0_ds_t
	// succ:  l000070C0_ds_f l000070C0_ds_t
l000070C0_ds_f:
	r2 = 0x00000000 + -1
	CV = cond(r2)
	goto l000070D4
	// succ:  l000070D4
l000070C0_ds_t:
	r2 = 0x00000000 + -1
	CV = cond(r2)
	goto l000070E0
	// succ:  l000070E0
l000070D4:
	r4 = 0x00000000 - 16
	CV = cond(r4)
	r3 = r3 & r4
	Mem0[r14 + 20:word32] = r3
	// succ:  l000070E0
l000070E0:
	r18 = 0x000001C6
	// succ:  l000070E4
l000070E4:
	r5 = 0x0000FBFF
	r16 = r18 | 0x00003100
	r5 = r5 | 0x0000FFFF
	r20 = Mem0[r16:word32]
	r3 = 0x00000000 + -100
	CV = cond(r3)
	r20 = r20 & r5
	Mem0[r16:word32] = r20
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000400
	r4 = 0x00000100
	r20 = r20 | r3
	r5 = 0x00000000 - 8193
	CV = cond(r5)
	Mem0[r16:word32] = r20
	r20 = r18 | 0x00003010
	r3 = Mem0[r16:word32]
	r3 = r3 | r4
	Mem0[r16:word32] = r3
	r3 = Mem0[r20:word32]
	r3 = r3 & r5
	Mem0[r20:word32] = r3
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	F = r2 != 0x00000000
	branch F l000070E4_ds_t
	// succ:  l000070E4_ds_f l000070E4_ds_t
l000070E4_ds_f:
	r4 = 0x0000FDFF
	goto l0000714C
	// succ:  l0000714C
l000070E4_ds_t:
	r4 = 0x0000FDFF
	goto l00007164
	// succ:  l00007164
l0000714C:
	r3 = Mem0[r16:word32]
	r4 = r4 | 0x0000FFFF
	r3 = r3 & r4
	Mem0[r16:word32] = r3
	r1 = r1 + -40
	CV = cond(r1)
	goto l00007318
	// succ:  l00007318
l00007164:
	r3 = Mem0[r14 + 20:word32]
	r3 = r3 >>u 0x0000000C
	r3 = r3 & 0x0000000F
	F = r3 == 0x00000000
	branch F l00007164_ds_t
	// succ:  l00007164_ds_f l00007164_ds_t
l00007164_ds_f:
	r2 = 0x00000000 + -1
	CV = cond(r2)
	goto l0000717C
	// succ:  l0000717C
l00007164_ds_t:
	r2 = 0x00000000 + -1
	CV = cond(r2)
	goto l000072F8
	// succ:  l000072F8
l0000717C:
	r3 = Mem0[r14 + 16:word32]
	r16 = r2 | 0x00000000
	r5 = r3 >>u 0x0000000C
	r4 = r3 >>u 0x00000004
	r3 = r3 & 0x0000000F
	r5 = r5 & 0x0000000F
	r4 = r4 & 0x000000FF
	r3 = r3 + r3
	CV = cond(r3)
	r4 = r5 + r4
	CV = cond(r4)
	r5 = 0x00004000
	r4 = r4 + -11
	CV = cond(r4)
	r3 = r4 + r3
	CV = cond(r3)
	r4 = 0x00001234
l000072F8:
	r3 = 0x000001C6
	r5 = 0x0000FDFF
	r3 = r3 | 0x00003100
	r5 = r5 | 0x0000FFFF
	r4 = Mem0[r3:word32]
	r4 = r4 & r5
	Mem0[r3:word32] = r4
	r1 = r1 + -40
	CV = cond(r1)
	// succ:  l00007318
l00007318:
	r11 = r2 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 24:word32]
	r14 = Mem0[r1 - 20:word32]
	r16 = Mem0[r1 - 16:word32]
	r18 = Mem0[r1 - 12:word32]
	r20 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00006FE8_exit
fn00006FE8_exit:


// fn00007338
// Return size: 0
void fn00007338()
fn00007338_entry:
	r1 = fp
	// succ:  l00007338
l00007338:
	r3 = r3 >>u 0x00000001
	Mem0[r1 - 4:word32] = r2
	r6 = 0x00004000
	r1 = r1 - 4
	CV = cond(r1)
	r3 = r3 << 0x00000014
	r5 = 0x00000000 + 0
	CV = cond(r5)
	goto l0000737C
	// succ:  l0000737C
l00007354:
	r2 = r2 | 0x00004567
	r7 = r5 + r2
	CV = cond(r7)
	r2 = 0x0000FEDC
	Mem0[r6:word32] = r7
	r2 = r2 | 0x0000BA98
	r7 = r6 + r3
	CV = cond(r7)
	r8 = r5 + r2
	CV = cond(r8)
	r6 = r6 + -4
	CV = cond(r6)
	Mem0[r7:word32] = r8
	r5 = r5 + -1
	CV = cond(r5)
	// succ:  l0000737C
l0000737C:
	F = r5 <u r4
	branch F l0000737C_ds_t
	// succ:  l0000737C_ds_f l0000737C_ds_t
l0000737C_ds_f:
	r2 = 0x00000123
	goto l00007388
	// succ:  l00007388
l0000737C_ds_t:
	r2 = 0x00000123
	goto l00007354
	// succ:  l00007354
l00007388:
	r6 = 0x00004000
	r5 = 0x00000000 + 0
	CV = cond(r5)
	goto l000073D0
	// succ:  l000073D0
l00007394:
	r2 = 0x0000FEDC
	r2 = r2 | 0x0000BA98
	r8 = Mem0[r7:word32]
	r7 = r5 + r2
	CV = cond(r7)
	F = r8 != r7
	branch F l00007394_ds_t
	// succ:  l00007394_ds_f l00007394_ds_t
l00007394_ds_f:
	r11 = 0x00000000 + -1
	CV = cond(r11)
	goto l000073B0
	// succ:  l000073B0
l00007394_ds_t:
	r11 = 0x00000000 + -1
	CV = cond(r11)
	goto l000073E0
	// succ:  l000073E0
l000073B0:
	r2 = 0x00000123
	r8 = Mem0[r6:word32]
	r2 = r2 | 0x00004567
	r7 = r5 + r2
	CV = cond(r7)
	F = r8 != r7
	branch F l000073B0_ds_t
	// succ:  l000073B0_ds_f l000073B0_ds_t
l000073B0_ds_f:
	r6 = r6 + -4
	CV = cond(r6)
	goto l000073CC
	// succ:  l000073CC
l000073B0_ds_t:
	r6 = r6 + -4
	CV = cond(r6)
	goto l000073E0
	// succ:  l000073E0
l000073CC:
	r5 = r5 + -1
	CV = cond(r5)
	// succ:  l000073D0
l000073D0:
	F = r5 <u r4
	branch F l000073D0_ds_t
	// succ:  l000073D0_ds_f l000073D0_ds_t
l000073D0_ds_f:
	r7 = r6 + r3
	CV = cond(r7)
	goto l000073DC
	// succ:  l000073DC
l000073D0_ds_t:
	r7 = r6 + r3
	CV = cond(r7)
	goto l00007394
	// succ:  l00007394
l000073DC:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	// succ:  l000073E0
l000073E0:
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00007338_exit
fn00007338_exit:


// fn000073EC
// Return size: 0
void fn000073EC()
fn000073EC_entry:
	r1 = fp
	// succ:  l000073EC
l000073EC:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r1 = r1 - 8
	CV = cond(r1)
	r2 = r3 | 0x00000000
	call fn000064DC (retsize: 0;)
	r3 = r2 | 0x00000000
	call fn00006678 (retsize: 0;)
	r3 = r2 | 0x00000000
	call fn000051E8 (retsize: 0;)
	r1 = r1 + -8
	CV = cond(r1)
	r4 = r2 | 0x00000000
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	// succ:  l00007420_thunk_fn00006880
l00007420_thunk_fn00006880:
	call fn00006880 (retsize: 0;)
	return
	// succ:  fn000073EC_exit
fn000073EC_exit:


// fn00007428
// Return size: 0
void fn00007428()
fn00007428_entry:
	r1 = fp
	// succ:  l00007428
l00007428:
	r4 = 0x000000B0
	Mem0[r1 - 20:word32] = r2
	Mem0[r1 - 16:word32] = r14
	r2 = r3 | 0x00000000
	r14 = Mem0[r3 + 92:word32]
	r4 = r4 | 0x000000B0
	Mem0[r1 - 12:word32] = r16
	Mem0[r1 - 8:word32] = r18
	Mem0[r1 - 4:word32] = r9
	r18 = Mem0[r3 + 16:word32]
	r16 = Mem0[r3 + 20:word32]
	Mem0[r2 + 16:word32] = r4
	r3 = r14 | 0x00000001
	r4 = 0x00000000 + 0
	CV = cond(r4)
	Mem0[r2 + 92:word32] = r3
	Mem0[r2 + 20:word32] = r4
	r3 = r3 & 0x00000010
	F = r3 == r4
	branch F l00007428_ds_t
	// succ:  l00007428_ds_f l00007428_ds_t
l00007428_ds_f:
	r1 = r1 - 20
	CV = cond(r1)
	goto l00007478
	// succ:  l00007478
l00007428_ds_t:
	r1 = r1 - 20
	CV = cond(r1)
	goto l00007480
	// succ:  l00007480
l00007478:
	r3 = r14 | 0x00000005
	Mem0[r2 + 92:word32] = r3
	// succ:  l00007480
l00007480:
	r3 = Mem0[r2 + 68:word32]
	r3 = r3 & 0x000003FF
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -7
	CV = cond(r3)
	Mem0[r2 + 4:word32] = r3
	r3 = 0x0000003B
	r3 = r3 | 0x00003BF9
	Mem0[r2 + 8:word32] = r3
	r3 = 0x00000000 + -21765
	CV = cond(r3)
	Mem0[r2 + 80:word32] = r3
	r3 = 0x00003333
	Mem0[r2 + 84:word32] = r3
	r3 = 0x00000000 | 0x0000CCCC
	Mem0[r2 + 88:word32] = r3
	r3 = 0x00000000 + -2
	CV = cond(r3)
	Mem0[r2 + 36:word32] = r3
	r3 = r2 | 0x00000000
	call fn000073EC (retsize: 0;)
	r3 = Mem0[r2 + 92:word32]
	r3 = r3 & 0x00000010
	F = r3 != 0x00000000
	branch F l00007480_ds_t
	// succ:  l00007480_ds_f l00007480_ds_t
l00007480_ds_f:
	goto l000074DC
	// succ:  l000074DC
l00007480_ds_t:
	goto l000074EC
	// succ:  l000074EC
l000074DC:
	r3 = r2 | 0x00000000
	call fn00006FE8 (retsize: 0;)
	F = r11 != 0x00000000
	goto l000074F8
	// succ:  l000074F8
l000074EC:
	r3 = r2 | 0x00000000
	call fn00006EE0 (retsize: 0;)
	F = r11 != 0x00000000
	// succ:  l000074F8
l000074F8:
	branch F l000074F8_ds_t
	// succ:  l000074F8_ds_f l000074F8_ds_t
l000074F8_ds_f:
	goto l00007500
	// succ:  l00007500
l000074F8_ds_t:
	goto l00007608
	// succ:  l00007608
l00007500:
	r3 = Mem0[r2 + 68:word32]
	r3 = r3 >>u 0x0000000A
	r3 = r3 & 0x000003FF
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -6
	CV = cond(r3)
	Mem0[r2 + 4:word32] = r3
	r3 = 0x0000003B
	r3 = r3 | 0x00003BF9
	Mem0[r2 + 8:word32] = r3
	r3 = 0x00000000 + -21765
	CV = cond(r3)
	Mem0[r2 + 80:word32] = r3
	r3 = 0x00003333
	Mem0[r2 + 84:word32] = r3
	r3 = 0x00000000 | 0x0000CCCC
	Mem0[r2 + 88:word32] = r3
	r3 = 0x00000000 + -2
	CV = cond(r3)
	Mem0[r2 + 36:word32] = r3
	r3 = r2 | 0x00000000
	call fn000073EC (retsize: 0;)
	r3 = Mem0[r2 + 92:word32]
	r3 = r3 & 0x00000010
	F = r3 != 0x00000000
	branch F l00007500_ds_t
	// succ:  l00007500_ds_f l00007500_ds_t
l00007500_ds_f:
	goto l00007560
	// succ:  l00007560
l00007500_ds_t:
	goto l00007570
	// succ:  l00007570
l00007560:
	r3 = r2 | 0x00000000
	call fn00006FE8 (retsize: 0;)
	F = r11 != 0x00000000
	goto l0000757C
	// succ:  l0000757C
l00007570:
	r3 = r2 | 0x00000000
	call fn00006EE0 (retsize: 0;)
	F = r11 != 0x00000000
	// succ:  l0000757C
l0000757C:
	branch F l0000757C_ds_t
	// succ:  l0000757C_ds_f l0000757C_ds_t
l0000757C_ds_f:
	goto l00007584
	// succ:  l00007584
l0000757C_ds_t:
	goto l00007608
	// succ:  l00007608
l00007584:
	r3 = Mem0[r2 + 68:word32]
	r3 = r3 >>u 0x00000014
	r3 = r3 & 0x000003FF
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -3
	CV = cond(r3)
	Mem0[r2 + 4:word32] = r3
	r3 = 0x0000003B
	r3 = r3 | 0x00003BF9
	Mem0[r2 + 8:word32] = r3
	r3 = 0x00000000 + -21765
	CV = cond(r3)
	Mem0[r2 + 80:word32] = r3
	r3 = 0x00003333
	Mem0[r2 + 84:word32] = r3
	r3 = 0x00000000 | 0x0000BBBB
	Mem0[r2 + 88:word32] = r3
	r3 = 0x00000000 + -64
	CV = cond(r3)
	Mem0[r2 + 28:word32] = r3
	r3 = r2 | 0x00000000
	call fn000073EC (retsize: 0;)
	r3 = Mem0[r2 + 92:word32]
	r3 = r3 & 0x00000010
	F = r3 != 0x00000000
	branch F l00007584_ds_t
	// succ:  l00007584_ds_f l00007584_ds_t
l00007584_ds_f:
	goto l000075E4
	// succ:  l000075E4
l00007584_ds_t:
	goto l000075F4
	// succ:  l000075F4
l000075E4:
	r3 = r2 | 0x00000000
	call fn00006FE8 (retsize: 0;)
	F = r11 == 0x00000000
	goto l00007600
	// succ:  l00007600
l000075F4:
	r3 = r2 | 0x00000000
	call fn00006EE0 (retsize: 0;)
	F = r11 == 0x00000000
	// succ:  l00007600
l00007600:
	branch F l00007600_ds_t
	// succ:  l00007600_ds_f l00007600_ds_t
l00007600_ds_f:
	goto l00007608
	// succ:  l00007608
l00007600_ds_t:
	goto l00007618
	// succ:  l00007618
l00007608:
	Mem0[r2 + 92:word32] = r14
	Mem0[r2 + 16:word32] = r18
	Mem0[r2 + 20:word32] = r16
	r11 = 0x00000000 + -1
	CV = cond(r11)
	// succ:  l00007618
l00007618:
	r1 = r1 + -20
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 20:word32]
	r14 = Mem0[r1 - 16:word32]
	r16 = Mem0[r1 - 12:word32]
	r18 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00007428_exit
fn00007428_exit:


// fn00007634
// Return size: 0
void fn00007634()
fn00007634_entry:
	r1 = fp
	// succ:  l00007634
l00007634:
	r4 = 0x000000B0
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 12:word32] = r14
	r2 = r3 | 0x00000000
	r14 = Mem0[r3 + 92:word32]
	r4 = r4 | 0x000000B0
	Mem0[r1 - 8:word32] = r16
	Mem0[r1 - 4:word32] = r9
	r16 = Mem0[r3 + 16:word32]
	r3 = r14 | 0x00000001
	Mem0[r2 + 16:word32] = r4
	r4 = 0x00000000 + -4096
	CV = cond(r4)
	Mem0[r2 + 92:word32] = r3
	Mem0[r2 + 20:word32] = r4
	r3 = r3 & 0x00000010
	F = r3 == 0x00000000
	branch F l00007634_ds_t
	// succ:  l00007634_ds_f l00007634_ds_t
l00007634_ds_f:
	r1 = r1 - 16
	CV = cond(r1)
	goto l0000767C
	// succ:  l0000767C
l00007634_ds_t:
	r1 = r1 - 16
	CV = cond(r1)
	goto l00007684
	// succ:  l00007684
l0000767C:
	r3 = r14 | 0x00000005
	Mem0[r2 + 92:word32] = r3
	// succ:  l00007684
l00007684:
	r3 = r2 | 0x00000000
	call fn000073EC (retsize: 0;)
	r3 = 0x000001C6
	r4 = 0x00000010
	r3 = r3 | 0x00003010
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r3 = Mem0[r3:word32]
	r3 = r3 & r4
	F = r3 != r11
	branch F l00007684_ds_t
	// succ:  l00007684_ds_f l00007684_ds_t
l00007684_ds_f:
	goto l000076B0
	// succ:  l000076B0
l00007684_ds_t:
	goto l000076F4
	// succ:  l000076F4
l000076B0:
	r3 = Mem0[r2 + 92:word32]
	r3 = r3 & 0x00000010
	F = r3 != r11
	branch F l000076B0_ds_t
	// succ:  l000076B0_ds_f l000076B0_ds_t
l000076B0_ds_f:
	goto l000076C4
	// succ:  l000076C4
l000076B0_ds_t:
	goto l000076D4
	// succ:  l000076D4
l000076C4:
	r3 = r2 | 0x00000000
	call fn00006FE8 (retsize: 0;)
	F = r11 == 0x00000000
	goto l000076E0
	// succ:  l000076E0
l000076D4:
	r3 = r2 | 0x00000000
	call fn00006EE0 (retsize: 0;)
	F = r11 == 0x00000000
	// succ:  l000076E0
l000076E0:
	branch F l000076E0_ds_t
	// succ:  l000076E0_ds_f l000076E0_ds_t
l000076E0_ds_f:
	goto l000076E8
	// succ:  l000076E8
l000076E0_ds_t:
	goto l000076F4
	// succ:  l000076F4
l000076E8:
	Mem0[r2 + 92:word32] = r14
	Mem0[r2 + 16:word32] = r16
	r11 = 0x00000000 + -1
	CV = cond(r11)
	// succ:  l000076F4
l000076F4:
	r1 = r1 + -16
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00007634_exit
fn00007634_exit:


// fn0000770C
// Return size: 0
void fn0000770C()
fn0000770C_entry:
	r1 = fp
	// succ:  l0000770C
l0000770C:
	Mem0[r1 - 20:word32] = r2
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 16:word32] = r14
	Mem0[r1 - 12:word32] = r16
	Mem0[r1 - 8:word32] = r18
	r1 = r1 - 20
	CV = cond(r1)
	r2 = r3 | 0x00000000
	call fn000073EC (retsize: 0;)
	F = r11 == 0x00000000
	branch F l0000770C_ds_t
	// succ:  l0000770C_ds_f l0000770C_ds_t
l0000770C_ds_f:
	r7 = 0x00000000 + 0
	CV = cond(r7)
	goto l00007738
	// succ:  l00007738
l0000770C_ds_t:
	r7 = 0x00000000 + 0
	CV = cond(r7)
	goto l00007A20
	// succ:  l00007A20
l00007738:
	r23 = Mem0[r2 + 20:word32]
	r11 = r23 >>u 0x00000008
	r3 = 0x000001C6
	r5 = 0x00004000
	r11 = r11 & 0x0000000F
	r19 = r7 | 0x00000000
	r11 = r11 + -1
	CV = cond(r11)
	r17 = r7 | 0x00000000
	r3 = r3 | 0x00002000
	r13 = 0x00000000 + -1
	CV = cond(r13)
	r31 = 0x00000000 + -255
	CV = cond(r31)
	r25 = 0x00000000 + -15
	CV = cond(r25)
	goto l000079E0
	// succ:  l000079E0
l0000776C:
	r14 = r4 & 0x00000001
	F = r14 != 0x00000000
	branch F l0000776C_ds_t
	// succ:  l0000776C_ds_f l0000776C_ds_t
l0000776C_ds_f:
	r12 = r8 | 0x00000000
	goto l0000777C
	// succ:  l0000777C
l0000776C_ds_t:
	r12 = r8 | 0x00000000
	goto l00007780
	// succ:  l00007780
l0000777C:
	r12 = r6 | 0x00000000
	// succ:  l00007780
l00007780:
	Mem0[r8:word32] = r12
	r4 = r4 + -1
	CV = cond(r4)
	r8 = r8 + -4
	CV = cond(r8)
	F = r4 != 0x00000040
	branch F l00007780_ds_t
	// succ:  l00007780_ds_f l00007780_ds_t
l00007780_ds_f:
	r6 = r6 - 4
	CV = cond(r6)
	goto l00007798
	// succ:  l00007798
l00007780_ds_t:
	r6 = r6 - 4
	CV = cond(r6)
	goto l0000776C
	// succ:  l0000776C
l00007798:
	r4 = Mem0[r3:word32]
	r6 = 0x00000000 - 3853
	CV = cond(r6)
	r4 = r4 & r6
	r6 = 0x00000000 + -11
	CV = cond(r6)
	r4 = r4 | 0x000006F0
	Mem0[r3:word32] = r4
	r14 = r6 + -11
	CV = cond(r14)
	r8 = 0x00000000 + 0
	CV = cond(r8)
l000079E0:
	r15 = r5 ^ 0x0000FFFF
	r8 = r5 | 0x00000000
	r6 = r15 | 0x00000000
	r4 = 0x00000000 + 0
	CV = cond(r4)
	goto l0000776C
	// succ:  l0000776C
l00007A20:
	r1 = r1 + -20
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 20:word32]
	r14 = Mem0[r1 - 16:word32]
	r16 = Mem0[r1 - 12:word32]
	r18 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000770C_exit
fn0000770C_exit:


// fn00007A3C
// Return size: 0
void fn00007A3C()
fn00007A3C_entry:
	r1 = fp
	// succ:  l00007A3C
l00007A3C:
	r4 = Mem0[r3 + 92:word32]
	Mem0[r1 - 8:word32] = r2
	Mem0[r1 - 4:word32] = r9
	r4 = r4 & 0x00002000
	r1 = r1 - 8
	CV = cond(r1)
	F = r4 != 0x00000000
	branch F l00007A3C_ds_t
	// succ:  l00007A3C_ds_f l00007A3C_ds_t
l00007A3C_ds_f:
	r2 = r3 | 0x00000000
	goto l00007A5C
	// succ:  l00007A5C
l00007A3C_ds_t:
	r2 = r3 | 0x00000000
	goto l00007A70
	// succ:  l00007A70
l00007A5C:
	call fn00007428 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00007A5C_ds_t
	// succ:  l00007A5C_ds_f l00007A5C_ds_t
l00007A5C_ds_f:
	goto l00007A70
	// succ:  l00007A70
l00007A5C_ds_t:
	goto l00007AD0
	// succ:  l00007AD0
l00007A70:
	r3 = Mem0[r2 + 92:word32]
	r3 = r3 & 0x00004000
	F = r3 != 0x00000000
	branch F l00007A70_ds_t
	// succ:  l00007A70_ds_f l00007A70_ds_t
l00007A70_ds_f:
	goto l00007A84
	// succ:  l00007A84
l00007A70_ds_t:
	goto l00007A98
	// succ:  l00007A98
l00007A84:
	r3 = r2 | 0x00000000
	call fn00007634 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00007A84_ds_t
	// succ:  l00007A84_ds_f l00007A84_ds_t
l00007A84_ds_f:
	goto l00007A98
	// succ:  l00007A98
l00007A84_ds_t:
	goto l00007AD0
	// succ:  l00007AD0
l00007A98:
	r3 = r2 | 0x00000000
	call fn0000770C (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00007A98_ds_t
	// succ:  l00007A98_ds_f l00007A98_ds_t
l00007A98_ds_f:
	goto l00007AAC
	// succ:  l00007AAC
l00007A98_ds_t:
	goto l00007AD0
	// succ:  l00007AD0
l00007AAC:
	r3 = Mem0[r2 + 92:word32]
	r4 = r3 & 0x00008000
	F = r4 != 0x00000000
	branch F l00007AAC_ds_t
	// succ:  l00007AAC_ds_f l00007AAC_ds_t
l00007AAC_ds_f:
	r11 = 0x00000000 + -1
	CV = cond(r11)
	goto l00007AC0
	// succ:  l00007AC0
l00007AAC_ds_t:
	r11 = 0x00000000 + -1
	CV = cond(r11)
	goto l00007AD0
	// succ:  l00007AD0
l00007AC0:
	r3 = r3 | 0x00000003
	r4 = 0x00000000 - 24577
	CV = cond(r4)
	r3 = r3 & r4
	Mem0[r2 + 92:word32] = r3
	// succ:  l00007AD0
l00007AD0:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00007A3C_exit
fn00007A3C_exit:


// fn00007AE0
// Return size: 0
void fn00007AE0()
fn00007AE0_entry:
	r1 = fp
	// succ:  l00007AE0
l00007AE0:
	r3 = 0x000001F0
	Mem0[r1 - 8:word32] = r16
	r3 = r3 | 0x00001510
	Mem0[r1 - 16:word32] = r2
	r16 = Mem0[r3:word32]
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 12:word32] = r14
	r16 = r16 & 0x00000003
	r1 = r1 - 16
	CV = cond(r1)
	F = r16 != 0x00000000
	branch F l00007AE0_ds_t
	// succ:  l00007AE0_ds_f l00007AE0_ds_t
l00007AE0_ds_f:
	r2 = r4 | 0x00000000
	goto l00007B10
	// succ:  l00007B10
l00007AE0_ds_t:
	r2 = r4 | 0x00000000
	goto l00007B38
	// succ:  l00007B38
l00007B10:
	r3 = Mem0[r4 + 92:word32]
	r3 = r3 & 0x00000001
	F = r3 != 0x00000000
	branch F l00007B10_ds_t
	// succ:  l00007B10_ds_f l00007B10_ds_t
l00007B10_ds_f:
	goto l00007B24
	// succ:  l00007B24
l00007B10_ds_t:
	goto l00007B38
	// succ:  l00007B38
l00007B24:
	r3 = r4 | 0x00000000
	call fn00007A3C (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00007B24_ds_t
	// succ:  l00007B24_ds_f l00007B24_ds_t
l00007B24_ds_f:
	r4 = r11 | 0x00000000
	goto l00007B38
	// succ:  l00007B38
l00007B24_ds_t:
	r4 = r11 | 0x00000000
	goto l00007CE0
	// succ:  l00007CE0
l00007B38:
	r3 = r2 | 0x00000000
	call fn000073EC (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00007B38_ds_t
	// succ:  l00007B38_ds_f l00007B38_ds_t
l00007B38_ds_f:
	r4 = r11 | 0x00000000
	goto l00007B4C
	// succ:  l00007B4C
l00007B38_ds_t:
	r4 = r11 | 0x00000000
	goto l00007CE0
	// succ:  l00007CE0
l00007B4C:
	r14 = Mem0[r2 + 20:word32]
	F = r14 >= 0
	branch F l00007B4C_ds_t
	// succ:  l00007B4C_ds_f l00007B4C_ds_t
l00007B4C_ds_f:
	r14 = r14 >>u 0x00000010
	goto l00007B5C
	// succ:  l00007B5C
l00007B4C_ds_t:
	r14 = r14 >>u 0x00000010
	goto l00007B64
	// succ:  l00007B64
l00007B5C:
	r14 = r14 & 0x00007FFF
	goto l00007B80
	// succ:  l00007B80
l00007B64:
	call fn00006E54 (retsize: 0;)
	r3 = (word32) Mem0[r2 + 22:word16]
	r4 = r11 << 0x00000010
	r14 = r11 | 0x00000000
	r3 = r4 | r3
	Mem0[r2 + 20:word32] = r3
	// succ:  l00007B80
l00007B80:
	r3 = Mem0[r2 + 92:word32]
	r4 = r3 & 0x00000200
	F = r4 == 0x00000000
	branch F l00007B80_ds_t
	// succ:  l00007B80_ds_f l00007B80_ds_t
l00007B80_ds_f:
	r7 = 0x0000FFFF
	goto l00007B94
	// succ:  l00007B94
l00007B80_ds_t:
	r7 = 0x0000FFFF
	goto l00007BB4
	// succ:  l00007BB4
l00007B94:
	r4 = 0x000001C6
	r6 = 0x0000FFFF
	r4 = r4 | 0x00003100
	r6 = r6 | 0x00000FFF
	r5 = Mem0[r4:word32]
	r5 = r5 & r6
	r5 = r5 | 0x00005000
	goto l00007BC8
	// succ:  l00007BC8
l00007BB4:
	r4 = 0x000001C6
	r4 = r4 | 0x00003100
	r7 = r7 | 0x00000FFF
	r5 = Mem0[r4:word32]
	r5 = r5 & r7
	// succ:  l00007BC8
l00007BC8:
	Mem0[r4:word32] = r5
	r4 = 0x000001C6
	r7 = 0x00008000
	r5 = r4 | 0x00003140
	r6 = Mem0[r5:word32]
	r6 = r6 | r7
	Mem0[r5:word32] = r6
	r5 = r3 & 0x00000100
	F = r5 == 0x00000000
	branch F l00007BC8_ds_t
	// succ:  l00007BC8_ds_f l00007BC8_ds_t
l00007BC8_ds_f:
	r5 = 0x00000400
	goto l00007BF4
	// succ:  l00007BF4
l00007BC8_ds_t:
	r5 = 0x00000400
	goto l00007C08
	// succ:  l00007C08
l00007BF4:
	r4 = r4 | 0x000030B8
	r5 = Mem0[r4:word32]
	r5 = r5 | 0x00000300
	Mem0[r4:word32] = r5
	r5 = 0x00000400
	// succ:  l00007C08
l00007C08:
	r4 = r3 & r5
	F = r4 == 0x00000000
	branch F l00007C08_ds_t
	// succ:  l00007C08_ds_f l00007C08_ds_t
l00007C08_ds_f:
	r4 = 0x000001C6
	goto l00007C18
	// succ:  l00007C18
l00007C08_ds_t:
	r4 = 0x000001C6
	goto l00007C2C
	// succ:  l00007C2C
l00007C18:
	r6 = 0x00000000 - 8193
	CV = cond(r6)
	r4 = r4 | 0x00003108
	r5 = Mem0[r4:word32]
	r5 = r5 & r6
	goto l00007C38
	// succ:  l00007C38
l00007C2C:
	r4 = r4 | 0x00003108
	r5 = Mem0[r4:word32]
	r5 = r5 | 0x00002000
	// succ:  l00007C38
l00007C38:
	Mem0[r4:word32] = r5
	r4 = Mem0[r2 + 4:word32]
	F = r4 != 0x00000007
	branch F l00007C38_ds_t
	// succ:  l00007C38_ds_f l00007C38_ds_t
l00007C38_ds_f:
	r7 = 0x00000800
	goto l00007C4C
	// succ:  l00007C4C
l00007C38_ds_t:
	r7 = 0x00000800
	goto l00007C74
	// succ:  l00007C74
l00007C4C:
	r4 = 0x000001C6
	r7 = 0x0000FFF0
	r4 = r4 | 0x0000307C
	r7 = r7 | 0x0000FFFF
	r5 = Mem0[r4:word32]
	r6 = 0x00000001
	r5 = r5 & r7
	r5 = r5 | r6
	Mem0[r4:word32] = r5
	r7 = 0x00000800
	// succ:  l00007C74
l00007C74:
	r3 = r3 & r7
	F = r3 != 0x00000000
	branch F l00007C74_ds_t
	// succ:  l00007C74_ds_f l00007C74_ds_t
l00007C74_ds_f:
	F = r16 == 0x00000000
	goto l00007C84
	// succ:  l00007C84
l00007C74_ds_t:
	F = r16 == 0x00000000
	goto l00007C90
	// succ:  l00007C90
l00007C84:
	call fn00005078 (retsize: 0;)
	F = r16 == 0x00000000
	// succ:  l00007C90
l00007C90:
	branch F l00007C90_ds_t
	// succ:  l00007C90_ds_f l00007C90_ds_t
l00007C90_ds_f:
	goto l00007C98
	// succ:  l00007C98
l00007C90_ds_t:
	goto l00007CB0
	// succ:  l00007CB0
l00007C98:
	r2 = Mem0[r2 + 92:word32]
	r3 = 0x00001000
	r2 = r2 & r3
	F = r2 == 0x00000000
	branch F l00007C98_ds_t
	// succ:  l00007C98_ds_f l00007C98_ds_t
l00007C98_ds_f:
	r4 = r14 | 0x00000000
	goto l00007CB0
	// succ:  l00007CB0
l00007C98_ds_t:
	r4 = r14 | 0x00000000
	goto l00007CE0
	// succ:  l00007CE0
l00007CB0:
	r2 = 0x000001C6
	r3 = 0x00000000 - 1
	CV = cond(r3)
	r2 = r2 | 0x00002094
	r4 = 0x00000000 + -256
	CV = cond(r4)
	Mem0[r2:word32] = r3
	r3 = r14 | 0x00000000
	call fn00007338 (retsize: 0;)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	F = r11 != r4
	branch F l00007CB0_ds_t
	// succ:  l00007CB0_ds_f l00007CB0_ds_t
l00007CB0_ds_f:
	goto l00007CDC
	// succ:  l00007CDC
l00007CB0_ds_t:
	goto l00007CE0
	// succ:  l00007CE0
l00007CDC:
	r4 = r14 | 0x00000000
	// succ:  l00007CE0
l00007CE0:
	r1 = r1 + -16
	CV = cond(r1)
	r11 = r4 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00007AE0_exit
fn00007AE0_exit:


// fn00007E04
// Return size: 0
void fn00007E04()
fn00007E04_entry:
	r1 = fp
	// succ:  l00007E04
l00007E04:
	Mem0[r1 - 12:word32] = r2
	r2 = 0x000001C6
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r3 = r2 | 0x00002094
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r14
	Mem0[r3:word32] = r4
	r1 = r1 - 12
	CV = cond(r1)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = r2 | 0x00003004
	r2 = r2 | 0x00003018
	r4 = Mem0[r3:word32]
	r4 = r4 | 0x00000101
	Mem0[r3:word32] = r4
	// succ:  l00007E40
l00007E40:
	r3 = Mem0[r2:word32]
	r3 = r3 & 0x00000007
	F = r3 != 0x00000003
	branch F l00007E40_ds_t
	// succ:  l00007E40_ds_f l00007E40_ds_t
l00007E40_ds_f:
	r14 = 0x000001C6
	goto l00007E54
	// succ:  l00007E54
l00007E40_ds_t:
	r14 = 0x000001C6
	goto l00007E40
	// succ:  l00007E40
l00007E54:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r14 | 0x0000310C
	call fn0000C8A0 (retsize: 0;)
	r5 = 0x0000FF00
	r3 = Mem0[r2:word32]
	r5 = r5 | 0x0000FFFF
	r3 = r3 & r5
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = r14 | 0x00003344
	r4 = 0x0000FF3F
	// succ:  l00007E84
l00007E84:
	r2 = Mem0[r3:word32]
	r4 = r4 | 0x00000FF4
	r5 = 0x00000040
	r2 = r2 & r4
	r5 = r5 | 0x0000500A
	r2 = r2 | r5
	Mem0[r3:word32] = r2
	r2 = 0x000001C6
	r3 = r3 + -128
	CV = cond(r3)
	r2 = r2 | 0x00003544
	F = r3 != r2
	branch F l00007E84_ds_t
	// succ:  l00007E84_ds_f l00007E84_ds_t
l00007E84_ds_f:
	r4 = 0x0000FF3F
	goto l00007EB8
	// succ:  l00007EB8
l00007E84_ds_t:
	r4 = 0x0000FF3F
	goto l00007E84
	// succ:  l00007E84
l00007EB8:
	r2 = 0x000001C6
	r5 = 0x00000000 - 988
	CV = cond(r5)
	r3 = r2 | 0x00003208
	r2 = r2 | 0x0000300C
	r4 = Mem0[r3:word32]
	r4 = r4 & r5
	r4 = r4 | 0x00000313
	Mem0[r3:word32] = r4
	r3 = 0x000001F0
	r3 = r3 | 0x00001510
	r4 = Mem0[r3:word32]
	r4 = r4 | 0x00000003
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r5 = 0x00007FFF
	Mem0[r2:word32] = r3
	r3 = 0x000001C2
	r5 = r5 | 0x0000FFFF
	r4 = r3 | 0x00000020
	r2 = Mem0[r4:word32]
	r2 = r2 & r5
	r5 = 0x00000010
	Mem0[r4:word32] = r2
	r2 = r2 | r5
	r5 = 0x00007FFF
	Mem0[r4:word32] = r2
	r4 = r3 | 0x000000F4
	r5 = r5 | 0x0000FFFF
	r2 = Mem0[r4:word32]
	r2 = r2 & r5
	r5 = 0x00000001
	Mem0[r4:word32] = r2
	r2 = Mem0[r4:word32]
	r2 = r2 | r5
	r5 = 0x00000000 - 16385
	CV = cond(r5)
	Mem0[r4:word32] = r2
	r2 = r3 | 0x00000060
	r4 = Mem0[r2:word32]
	r4 = r4 & r5
	r5 = 0x00007FFF
	Mem0[r2:word32] = r4
	r2 = r3 | 0x0000015C
	r5 = r5 | 0x0000FFFF
	r4 = Mem0[r2:word32]
	r3 = r3 | 0x000002C0
	r4 = r4 & r5
	Mem0[r2:word32] = r4
	r4 = 0x00000000 - 16385
	CV = cond(r4)
	r2 = Mem0[r3:word32]
	r2 = r2 & r4
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00007E04_exit
fn00007E04_exit:


// fn00007FAC
// Return size: 0
void fn00007FAC()
fn00007FAC_entry:
	r1 = fp
	// succ:  l00007FAC
l00007FAC:
	r4 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r4 = r4 | 0x00002E8C
	r1 = r1 - 4
	CV = cond(r1)
	r4 = Mem0[r4:word32]
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r3 = 0x00000000 + 0
	CV = cond(r3)
	// succ:  l00007FC8_thunk_fn00007AE0
l00007FC8_thunk_fn00007AE0:
	call fn00007AE0 (retsize: 0;)
	return
	// succ:  fn00007FAC_exit
fn00007FAC_exit:


// fn00007FD0
// Return size: 0
void fn00007FD0()
fn00007FD0_entry:
	r1 = fp
	// succ:  l00007FD0
l00007FD0:
	r3 = 0x000001C6
	r4 = 0x00000000 - 1
	CV = cond(r4)
	r3 = r3 | 0x00002094
	Mem0[r1 - 4:word32] = r9
	Mem0[r3:word32] = r4
	r1 = r1 - 4
	CV = cond(r1)
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r3 = 0x00000000 | 0x00009071
	// succ:  l00007FF8_thunk_fn0000AEDC
l00007FF8_thunk_fn0000AEDC:
	call fn0000AEDC (retsize: 0;)
	return
	// succ:  fn00007FD0_exit
fn00007FD0_exit:


// fn00008000
// Return size: 0
void fn00008000()
fn00008000_entry:
	r1 = fp
	// succ:  l00008000
l00008000:
	r3 = 0x000001C6
	r4 = 0x00000001
	r3 = r3 | 0x00002094
	Mem0[r1 - 4:word32] = r9
	Mem0[r3:word32] = r4
	r1 = r1 - 4
	CV = cond(r1)
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r3 = 0x00000000 | 0x00009072
	// succ:  l00008028_thunk_fn0000AEDC
l00008028_thunk_fn0000AEDC:
	call fn0000AEDC (retsize: 0;)
	return
	// succ:  fn00008000_exit
fn00008000_exit:


// fn00008030
// Return size: 0
void fn00008030()
fn00008030_entry:
	r1 = fp
	// succ:  l00008030
l00008030:
	r4 = r4 << 0x00000018
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r5 = 0x000001C6
fn00008030_exit:


// fn00008080
// Return size: 0
void fn00008080()
fn00008080_entry:
	r1 = fp
	// succ:  l00008080
l00008080:
	Mem0[r1 - 4:word32] = r2
	r2 = 0x00000000 - 4
	CV = cond(r2)
	r1 = r1 - 8
	CV = cond(r1)
	r5 = r3 & r2
	r2 = 0x000001C1
	r3 = r3 & 0x00000003
	r2 = r2 | 0x00007000
	r3 = r3 << 0x00000003
	r5 = r5 + r2
	CV = cond(r5)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r6 = Mem0[r5:word32]
	Mem0[r1:word32] = r6
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r7 = Mem0[r1:word32]
fn00008080_exit:


// fn000080EC
// Return size: 0
void fn000080EC()
fn000080EC_entry:
	r1 = fp
	// succ:  l000080EC
l000080EC:
	Mem0[r1 - 4:word32] = r2
	r2 = 0x00000000 - 4
	CV = cond(r2)
	r1 = r1 - 8
	CV = cond(r1)
	r5 = r3 & r2
	r2 = 0x000001C1
	r3 = r3 & 0x00000003
	r2 = r2 | 0x00007000
	r3 = r3 << 0x00000003
	r5 = r5 + r2
	CV = cond(r5)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r6 = Mem0[r5:word32]
	r3 = r3 + -4
	CV = cond(r3)
	Mem0[r1:word32] = r6
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r7 = Mem0[r1:word32]
fn000080EC_exit:


// fn000082AC
// Return size: 0
void fn000082AC()
fn000082AC_entry:
	r1 = fp
	// succ:  l000082AC
l000082AC:
	r4 = 0x000001C1
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r4 = r4 | 0x00007040
	r3 = r3 + r3
	CV = cond(r3)
	r5 = Mem0[r4:word32]
	r1 = r1 - 4
	CV = cond(r1)
fn000082AC_exit:


// fn000082FC
// Return size: 0
void fn000082FC()
fn000082FC_entry:
	r1 = fp
	// succ:  l000082FC
l000082FC:
	Mem0[r1 - 4:word32] = r9
	r3 = 0x00000000 + -17
	CV = cond(r3)
	r1 = r1 - 4
	CV = cond(r1)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B320 (retsize: 0;)
	r3 = 0x00000000 + -17
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = r3 | 0x00000000
	call fn000080EC (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn00008080 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = r3 | 0x00000000
	call fn000080EC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn00008080 (retsize: 0;)
	r3 = 0x00000000 + -2
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn000080EC (retsize: 0;)
	r3 = 0x00000000 + -2
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn00008080 (retsize: 0;)
	r3 = 0x00000000 + -3
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn000080EC (retsize: 0;)
	r3 = 0x00000000 + -3
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn00008080 (retsize: 0;)
	r3 = 0x00000000 + -4
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn000080EC (retsize: 0;)
	r3 = 0x00000000 + -4
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn00008080 (retsize: 0;)
	r3 = 0x00000000 + -5
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn000080EC (retsize: 0;)
	r3 = 0x00000000 + -5
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn00008080 (retsize: 0;)
	r3 = 0x00000001
	r3 = r3 | 0x0000315C
	r5 = Mem0[r3:word32]
	F = r5 != 0x00000000
	branch F l000082FC_ds_t
	// succ:  l000082FC_ds_f l000082FC_ds_t
l000082FC_ds_f:
	r4 = 0x00000000
	goto l000083C4
	// succ:  l000083C4
l000082FC_ds_t:
	r4 = 0x00000000
	goto l000083D8
	// succ:  l000083D8
l000083C4:
	r3 = 0x00000000 + -17
	CV = cond(r3)
	r4 = r4 | 0x0000815C
	call fn00008BB8 (retsize: 0;)
	r3 = 0x00000000 + -17
	CV = cond(r3)
	call fn00008B60 (retsize: 0;)
l000083D8:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn000082AC (retsize: 0;)
	r3 = 0x00000000 + -4
	CV = cond(r3)
	call fn000082AC (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn000082FC_exit
fn000082FC_exit:


// fn000083F8
// Return size: 0
void fn000083F8()
fn000083F8_entry:
	r1 = fp
	// succ:  l000083F8
l000083F8:
	Mem0[r1 - 4:word32] = r9
	r3 = 0x00000000 + -17
	CV = cond(r3)
	r1 = r1 - 4
	CV = cond(r1)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r3 = 0x00000000 + -17
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn0000B320 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn000083F8_exit
fn000083F8_exit:


// fn00008428
// Return size: 0
void fn00008428()
fn00008428_entry:
	r1 = fp
	// succ:  l00008428
l00008428:
	Mem0[r1 - 20:word32] = r2
	Mem0[r1 - 16:word32] = r14
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 12:word32] = r16
	Mem0[r1 - 8:word32] = r18
	r14 = r3 | 0x00000000
	r3 = (word32) Mem0[r3 + 1:byte]
	r3 = r3 & 0x00000002
	r1 = r1 - 24
	CV = cond(r1)
	F = r3 != 0x00000000
	branch F l00008428_ds_t
	// succ:  l00008428_ds_f l00008428_ds_t
l00008428_ds_f:
	r2 = r4 | 0x00000000
	goto l00008458
	// succ:  l00008458
l00008428_ds_t:
	r2 = r4 | 0x00000000
	goto l0000847C
	// succ:  l0000847C
l00008458:
	r16 = 0x000001C1
	goto l000084FC
	// succ:  l000084FC
l00008460:
	F = r2 == 0x00000000
	branch F l00008460_ds_t
	// succ:  l00008460_ds_f l00008460_ds_t
l00008460_ds_f:
	r11 = 0x00000000 - 35
	CV = cond(r11)
	goto l0000846C
	// succ:  l0000846C
l00008460_ds_t:
	r11 = 0x00000000 - 35
	CV = cond(r11)
	goto l00008558
	// succ:  l00008558
l0000846C:
	r2 = r2 - 1
	CV = cond(r2)
	call fn0000C768 (retsize: 0;)
	goto l00008484
	// succ:  l00008484
l0000847C:
	r18 = 0x000001C1
	r18 = r18 | 0x00007108
	goto l00008484
	// succ:  l00008484
l0000847C_ds_f:
	r16 = 0x000001C1
	goto l00008494
	// succ:  l00008494
l0000847C_ds_t:
	r16 = 0x000001C1
	goto l00008460
	// succ:  l00008460
l00008484:
	r3 = Mem0[r18:word32]
	F = r3 == 0x00000001
	branch F l0000847C_ds_t
	goto l0000847C_ds_f
	// succ:  l0000847C_ds_f l0000847C_ds_t
l00008494:
	r3 = r14 | 0x00000000
	r2 = r16 | 0x00007188
	call fn0000F888 (retsize: 0;)
	Mem0[r1:word32] = r11
	r16 = r16 | 0x0000714C
	r3 = Mem0[r1:word32]
	Mem0[r2:word32] = r3
	// succ:  l000084B0
l000084B0:
	r2 = Mem0[r16:word32]
	F = r2 == 0x00000000
	branch F l000084B0_ds_t
	// succ:  l000084B0_ds_f l000084B0_ds_t
l000084B0_ds_f:
	r2 = 0x000001C1
	goto l000084C0
	// succ:  l000084C0
l000084B0_ds_t:
	r2 = 0x000001C1
	goto l000084B0
	// succ:  l000084B0
l000084C0:
	r3 = Mem0[r1:word32]
	r2 = r2 | 0x0000718C
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r2 = Mem0[r2:word32]
	F = r3 == r2
	branch F l000084C0_ds_t
	// succ:  l000084C0_ds_f l000084C0_ds_t
l000084C0_ds_f:
	goto l000084DC
	// succ:  l000084DC
l000084C0_ds_t:
	goto l00008558
	// succ:  l00008558
l000084DC:
	r11 = 0x00000000 - 14
	CV = cond(r11)
	goto l00008558
	// succ:  l00008558
l000084E4:
	branch F l000084E4_ds_t
	// succ:  l000084E4_ds_f l000084E4_ds_t
l000084E4_ds_f:
	r11 = 0x00000000 - 35
	CV = cond(r11)
	goto l000084EC
	// succ:  l000084EC
l000084E4_ds_t:
	r11 = 0x00000000 - 35
	CV = cond(r11)
	goto l00008558
	// succ:  l00008558
l000084EC:
	r2 = r2 - 1
	CV = cond(r2)
	call fn0000C768 (retsize: 0;)
	goto l00008500
	// succ:  l00008500
l000084FC:
	r16 = r16 | 0x00007100
	goto l00008500
	// succ:  l00008500
l000084FC_ds_f:
	F = r2 == 0x00000000
	goto l00008510
	// succ:  l00008510
l000084FC_ds_t:
	F = r2 == 0x00000000
	goto l000084E4
	// succ:  l000084E4
l00008500:
	r3 = Mem0[r16:word32]
	F = r3 == 0x00000001
	branch F l000084FC_ds_t
	goto l000084FC_ds_f
	// succ:  l000084FC_ds_f l000084FC_ds_t
l00008510:
	r2 = 0x000001C1
	r3 = r14 | 0x00000000
	r2 = r2 | 0x00007180
	call fn0000F888 (retsize: 0;)
	Mem0[r2:word32] = r11
	r11 = (word32) Mem0[r14 + 1:byte]
	r11 = r11 & 0x00000001
	F = r11 == 0x00000000
	branch F l00008510_ds_t
	// succ:  l00008510_ds_f l00008510_ds_t
l00008510_ds_f:
	goto l00008538
	// succ:  l00008538
l00008510_ds_t:
	goto l00008558
	// succ:  l00008558
l00008538:
	r2 = Mem0[r14 + 32:word32]
	r3 = Mem0[r14 + 36:word32]
	r4 = r2 | 0x00000000
	r2 = r4 | r3
	F = r2 == 0x00000000
	branch F l00008538_ds_t
	// succ:  l00008538_ds_f l00008538_ds_t
l00008538_ds_f:
	goto l00008554
	// succ:  l00008554
l00008538_ds_t:
	goto l00008538
	// succ:  l00008538
l00008554:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	// succ:  l00008558
l00008558:
	r1 = r1 + -24
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 20:word32]
	r14 = Mem0[r1 - 16:word32]
	r16 = Mem0[r1 - 12:word32]
	r18 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00008428_exit
fn00008428_exit:


// fn00008574
// Return size: 0
void fn00008574()
fn00008574_entry:
	r1 = fp
	// succ:  l00008574
l00008574:
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r16
	r14 = r3 | 0x00000000
	r3 = (word32) Mem0[r3 + 1:byte]
	r2 = r4 | 0x00000000
	r4 = r3 & 0x00000002
	F = r4 == 0x00000000
	branch F l00008574_ds_t
	// succ:  l00008574_ds_f l00008574_ds_t
l00008574_ds_f:
	r1 = r1 - 16
	CV = cond(r1)
	goto l000085A0
	// succ:  l000085A0
l00008574_ds_t:
	r1 = r1 - 16
	CV = cond(r1)
	goto l000085EC
	// succ:  l000085EC
l000085A0:
	r16 = 0x000001C1
	goto l000085C4
	// succ:  l000085C4
l000085A8:
	call fn0000C768 (retsize: 0;)
	F = r2 == 0x00000000
	branch F l000085A8_ds_t
	// succ:  l000085A8_ds_f l000085A8_ds_t
l000085A8_ds_f:
	r2 = r2 - 1
	CV = cond(r2)
	goto l000085BC
	// succ:  l000085BC
l000085A8_ds_t:
	r2 = r2 - 1
	CV = cond(r2)
	goto l00008658
	// succ:  l00008658
l000085BC:
	goto l000085C8
	// succ:  l000085C8
l000085C4:
	r16 = r16 | 0x00007114
	goto l000085C8
	// succ:  l000085C8
l000085C4_ds_f:
	goto l000085D8
	// succ:  l000085D8
l000085C4_ds_t:
	goto l000085A8
	// succ:  l000085A8
l000085C8:
	r3 = Mem0[r16:word32]
	F = r3 == 0x00000001
	branch F l000085C4_ds_t
	goto l000085C4_ds_f
	// succ:  l000085C4_ds_f l000085C4_ds_t
l000085D8:
	r3 = r14 | 0x00000000
	r2 = 0x000001C1
	call fn0000F888 (retsize: 0;)
	r2 = r2 | 0x00007194
	goto l0000864C
	// succ:  l0000864C
l000085EC:
	r4 = r3 & 0x00000001
	F = r4 != 0x00000000
	branch F l000085EC_ds_t
	// succ:  l000085EC_ds_f l000085EC_ds_t
l000085EC_ds_f:
	r16 = 0x000001C1
	goto l000085FC
	// succ:  l000085FC
l000085EC_ds_t:
	r16 = 0x000001C1
	goto l00008628
	// succ:  l00008628
l000085FC:
	F = r3 != 0x00000000
	branch !F l000085FC_ds_t
	// succ:  l000085FC_ds_f l000085FC_ds_t
l000085FC_ds_f:
	r11 = 0x00000000 - 3
	CV = cond(r11)
	goto l00008608
	// succ:  l00008608
l000085FC_ds_t:
	r11 = 0x00000000 - 3
	CV = cond(r11)
	goto l00008628
	// succ:  l00008628
l00008608:
	r1 = r1 + -16
	CV = cond(r1)
	goto l00008660
	// succ:  l00008660
l00008610:
	branch F l00008610_ds_t
	// succ:  l00008610_ds_f l00008610_ds_t
l00008610_ds_f:
	r11 = 0x00000000 - 35
	CV = cond(r11)
	goto l00008618
	// succ:  l00008618
l00008610_ds_t:
	r11 = 0x00000000 - 35
	CV = cond(r11)
	goto l0000865C
	// succ:  l0000865C
l00008618:
	r2 = r2 - 1
	CV = cond(r2)
	call fn0000C768 (retsize: 0;)
	goto l0000862C
	// succ:  l0000862C
l00008628:
	r16 = r16 | 0x00007100
	goto l0000862C
	// succ:  l0000862C
l00008628_ds_f:
	F = r2 == 0x00000000
	goto l0000863C
	// succ:  l0000863C
l00008628_ds_t:
	F = r2 == 0x00000000
	goto l00008610
	// succ:  l00008610
l0000862C:
	r3 = Mem0[r16:word32]
	F = r3 == 0x00000001
	branch F l00008628_ds_t
	goto l00008628_ds_f
	// succ:  l00008628_ds_f l00008628_ds_t
l0000863C:
	r2 = 0x000001C1
	r3 = r14 | 0x00000000
	r2 = r2 | 0x00007180
	call fn0000F888 (retsize: 0;)
l0000864C:
	Mem0[r2:word32] = r11
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000865C
	// succ:  l0000865C
l00008658:
	r11 = 0x00000000 - 35
	CV = cond(r11)
	// succ:  l0000865C
l0000865C:
	r1 = r1 + -16
	CV = cond(r1)
	// succ:  l00008660
l00008660:
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00008574_exit
fn00008574_exit:


// fn00008674
// Return size: 0
void fn00008674()
fn00008674_entry:
	r1 = fp
	// succ:  l00008674
l00008674:
	r3 = 0x000001C1
	Mem0[r1 - 8:word32] = r2
	r2 = r3 | 0x00007144
	Mem0[r1 - 4:word32] = r9
	r2 = Mem0[r2:word32]
	F = r2 == 0x00000000
	branch F l00008674_ds_t
	// succ:  l00008674_ds_f l00008674_ds_t
l00008674_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l00008694
	// succ:  l00008694
l00008674_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l000086DC
	// succ:  l000086DC
l00008694:
	r3 = r3 | 0x00007184
	r3 = Mem0[r3:word32]
	call fn0000F874 (retsize: 0;)
	r3 = r11 | 0x00000000
	r2 = r11 | 0x00000000
	call fn0000F154 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00008694_ds_t
	// succ:  l00008694_ds_f l00008694_ds_t
l00008694_ds_f:
	goto l000086BC
	// succ:  l000086BC
l00008694_ds_t:
	goto l00008744
	// succ:  l00008744
l000086BC:
	r3 = (word32) Mem0[r2:byte]
	F = r3 != 0x00000005
	branch !F l000086BC_ds_t
	// succ:  l000086BC_ds_f l000086BC_ds_t
l000086BC_ds_f:
	r3 = 0x00000000 + -6
	CV = cond(r3)
	goto l000086CC
	// succ:  l000086CC
l000086BC_ds_t:
	r3 = 0x00000000 + -6
	CV = cond(r3)
	goto l000086D0
	// succ:  l000086D0
l000086CC:
	r3 = 0x00000000 + -3
	CV = cond(r3)
	// succ:  l000086D0
l000086D0:
	Mem0[r2:byte] = SLICE(r3, byte, 0)
	r4 = 0x00000000 + -4
	CV = cond(r4)
	goto l00008730
	// succ:  l00008730
l000086DC:
	r2 = r3 | 0x00007150
	r2 = Mem0[r2:word32]
	F = r2 == 0x00000000
	branch F l000086DC_ds_t
	// succ:  l000086DC_ds_f l000086DC_ds_t
l000086DC_ds_f:
	r3 = r3 | 0x00007190
	goto l000086F0
	// succ:  l000086F0
l000086DC_ds_t:
	r3 = r3 | 0x00007190
	goto l00008748
	// succ:  l00008748
l000086F0:
	r3 = Mem0[r3:word32]
	call fn0000F874 (retsize: 0;)
	r3 = r11 | 0x00000000
	r2 = r11 | 0x00000000
	call fn0000F154 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l000086F0_ds_t
	// succ:  l000086F0_ds_f l000086F0_ds_t
l000086F0_ds_f:
	goto l00008714
	// succ:  l00008714
l000086F0_ds_t:
	goto l00008744
	// succ:  l00008744
l00008714:
	r3 = (word32) Mem0[r2:byte]
	F = r3 != 0x00000005
	branch !F l00008714_ds_t
	// succ:  l00008714_ds_f l00008714_ds_t
l00008714_ds_f:
	r3 = 0x00000000 + -6
	CV = cond(r3)
	goto l00008724
	// succ:  l00008724
l00008714_ds_t:
	r3 = 0x00000000 + -6
	CV = cond(r3)
	goto l00008728
	// succ:  l00008728
l00008724:
	r3 = 0x00000000 + -3
	CV = cond(r3)
	// succ:  l00008728
l00008728:
	Mem0[r2:byte] = SLICE(r3, byte, 0)
	r4 = 0x00000000 + -256
	CV = cond(r4)
	// succ:  l00008730
l00008730:
	r3 = 0x000001C1
	r3 = r3 | 0x00007050
	Mem0[r3:word32] = r4
	r1 = r1 + -8
	CV = cond(r1)
	goto l0000874C
	// succ:  l0000874C
l00008744:
	r2 = r11 | 0x00000000
	// succ:  l00008748
l00008748:
	r1 = r1 + -8
	CV = cond(r1)
	// succ:  l0000874C
l0000874C:
	r11 = r2 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00008674_exit
fn00008674_exit:


// fn0000875C
// Return size: 0
void fn0000875C()
fn0000875C_entry:
	r1 = fp
	// succ:  l0000875C
l0000875C:
	r3 = 0x00000001
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = r3 | 0x0000315C
	Mem0[r1 - 4:word32] = r9
	Mem0[r3:word32] = r4
	r1 = r1 - 4
	CV = cond(r1)
	call fn000083F8 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn0000875C_exit
fn0000875C_exit:


// fn00008788
// Return size: 0
void fn00008788()
fn00008788_entry:
	r1 = fp
	// succ:  l00008788
l00008788:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r1 = r1 - 8
	CV = cond(r1)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	call fn000082FC (retsize: 0;)
	r3 = 0x00000001
	r11 = r2 | 0x00000000
	r3 = r3 | 0x0000315C
	Mem0[r3:word32] = r2
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00008788_exit
fn00008788_exit:


// fn000087BC
// Return size: 0
void fn000087BC()
fn000087BC_entry:
	r1 = fp
	// succ:  l000087BC
l000087BC:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r3 = 0x00000000 + -16
	CV = cond(r3)
	r1 = r1 - 8
	CV = cond(r1)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	call fn0000B320 (retsize: 0;)
	r3 = 0x00000000 + -16
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r3 = 0x00000001
	r11 = r2 | 0x00000000
	r3 = r3 | 0x000037E8
	Mem0[r3 + 4:word32] = r2
	Mem0[r3 + 12:word32] = r2
	Mem0[r3 + 20:word32] = r2
	Mem0[r3 + 28:word32] = r2
	Mem0[r3 + 36:word32] = r2
	Mem0[r3 + 44:word32] = r2
	Mem0[r3 + 52:word32] = r2
	Mem0[r3 + 60:word32] = r2
	r3 = 0x00000001
	r3 = r3 | 0x00003160
	Mem0[r3:word32] = r2
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000087BC_exit
fn000087BC_exit:


// fn00008834
// Return size: 0
void fn00008834()
fn00008834_entry:
	r1 = fp
	// succ:  l00008834
l00008834:
	Mem0[r1 - 12:word32] = r2
	Mem0[r1 - 8:word32] = r14
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 12
	CV = cond(r1)
	r2 = r3 | 0x00000000
	r14 = r4 | 0x00000000
	call fn0000E718 (retsize: 0;)
	r5 = 0x00000001
	r4 = r2 << 0x00000003
	r5 = r5 | 0x000037E8
	r3 = r11 | 0x00000000
	r4 = r4 + r5
	CV = cond(r4)
	r5 = 0x00000000 - 13
	CV = cond(r5)
	Mem0[r4:word32] = r11
	r4 = 0x00000001
	r4 = r4 | 0x00003160
	r4 = Mem0[r4:word32]
	F = r4 != 0x00000000
	branch F l00008834_ds_t
	// succ:  l00008834_ds_f l00008834_ds_t
l00008834_ds_f:
	r6 = 0x00000070
	goto l00008884
	// succ:  l00008884
l00008834_ds_t:
	r6 = 0x00000070
	goto l000088E4
	// succ:  l000088E4
l00008884:
	r5 = 0x0000001E
	r5 = r5 | 0x00008480
	r6 = r6 | 0x00006040
l000088E4:
	r1 = r1 + -12
	CV = cond(r1)
	r11 = r5 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00008834_exit
fn00008834_exit:


// fn000088FC
// Return size: 0
void fn000088FC()
fn000088FC_entry:
	r1 = fp
	// succ:  l000088FC
l000088FC:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r2 = r2 | 0x00003160
	r1 = r1 - 8
	CV = cond(r1)
	r2 = Mem0[r2:word32]
	F = r2 == 0x00000000
	branch F l000088FC_ds_t
	// succ:  l000088FC_ds_f l000088FC_ds_t
l000088FC_ds_f:
	r4 = r3 << 0x00000003
	goto l00008920
	// succ:  l00008920
l000088FC_ds_t:
	r4 = r3 << 0x00000003
	goto l0000893C
	// succ:  l0000893C
l00008920:
	r2 = 0x00000001
	r2 = r2 | 0x000037E8
	r4 = r4 + r2
	CV = cond(r4)
	r3 = Mem0[r4:word32]
	call fn0000E740 (retsize: 0;)
	r11 = 0x00000000 - 13
	CV = cond(r11)
	goto l0000896C
	// succ:  l0000896C
l0000893C:
	r5 = 0x00000070
	r5 = r5 | 0x00006040
	r3 = r3 + r5
	CV = cond(r3)
	r5 = 0x00000001
	r3 = r3 << 0x00000002
	r5 = r5 | 0x000037E8
	Mem0[r3:word32] = r2
	r3 = r4 + r5
	CV = cond(r3)
	Mem0[r3 + 4:word32] = r2
	r3 = Mem0[r3:word32]
	call fn0000E740 (retsize: 0;)
	r11 = r2 | 0x00000000
	// succ:  l0000896C
l0000896C:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000088FC_exit
fn000088FC_exit:


// fn0000897C
// Return size: 0
void fn0000897C()
fn0000897C_entry:
	r1 = fp
	// succ:  l0000897C
l0000897C:
	r3 = 0x00000001
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = r3 | 0x00003160
	r11 = 0x00000000 + 0
	CV = cond(r11)
	Mem0[r3:word32] = r4
	return
	// succ:  fn0000897C_exit
fn0000897C_exit:


// fn00008998
// Return size: 0
void fn00008998()
fn00008998_entry:
	r1 = fp
	// succ:  l00008998
l00008998:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r3 = 0x00000000 + -16
	CV = cond(r3)
	r1 = r1 - 8
	CV = cond(r1)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	call fn0000B320 (retsize: 0;)
	r3 = 0x00000000 + -16
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r3 = 0x00000001
	r11 = r2 | 0x00000000
	r3 = r3 | 0x00003160
	Mem0[r3:word32] = r2
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00008998_exit
fn00008998_exit:


// fn000089E0
// Return size: 0
void fn000089E0()
fn000089E0_entry:
	r1 = fp
	// succ:  l000089E0
l000089E0:
	r3 = 0x000001F0
	r4 = 0x00000001
	r3 = r3 | 0x00000C00
	r4 = r4 | 0x00003828
	Mem0[r1 - 4:word32] = r2
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r4:word32] = r3
	Mem0[r3 + 64:word32] = r2
	r4 = 0x00000000 - 1
	CV = cond(r4)
	Mem0[r3 + 80:word32] = r2
	r1 = r1 - 4
	CV = cond(r1)
	Mem0[r3 + 16:word32] = r4
	r1 = r1 + -4
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn000089E0_exit
fn000089E0_exit:


// fn00008A20
// Return size: 0
void fn00008A20()
fn00008A20_entry:
	r1 = fp
	// succ:  l00008A20
l00008A20:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r2
	r3 = r3 | 0x00003828
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r1 = r1 - 4
	CV = cond(r1)
	Mem0[r3:word32] = r2
	r1 = r1 + -4
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00008A20_exit
fn00008A20_exit:


// fn00008A48
// Return size: 0
void fn00008A48()
fn00008A48_entry:
	r1 = fp
	// succ:  l00008A48
l00008A48:
	F = r3 != 0x00000000
	branch F l00008A48_ds_t
	goto l00008A48_ds_f
	// succ:  l00008A48_ds_f l00008A48_ds_t
l00008A48:
l00008A48_ds_f:
	r4 = 0x00000001
	goto l00008A54
	// succ:  l00008A54
l00008A48_ds_t:
	r4 = 0x00000001
	goto l00008A64
	// succ:  l00008A64
l00008A54:
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r4 = r4 | 0x00003828
	r4 = Mem0[r4:word32]
	Mem0[r4 + 16:word32] = r5
	// succ:  l00008A64
l00008A64:
	r4 = 0x00000001
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r4 = r4 | 0x00003828
fn00008A48_exit:


// fn00008A90
// Return size: 0
void fn00008A90()
fn00008A90_entry:
	r1 = fp
	// succ:  l00008A90
l00008A90:
	r4 = 0x00000001
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r4 = r4 | 0x00003828
l00008A90:
fn00008A90_exit:


// fn00008AC0
// Return size: 0
void fn00008AC0()
fn00008AC0_entry:
	r1 = fp
	// succ:  l00008AC0
l00008AC0:
	r3 = 0x00000001
	r1 = r1 - 4
	CV = cond(r1)
	r3 = r3 | 0x00003828
	r3 = Mem0[r3:word32]
	r3 = Mem0[r3:word32]
	r3 = r3 >>u 0x00000002
	Mem0[r1:word32] = r3
	r11 = Mem0[r1:word32]
	r1 = r1 + -4
	CV = cond(r1)
	return
	// succ:  fn00008AC0_exit
fn00008AC0_exit:


// fn00008AF0
// Return size: 0
void fn00008AF0()
fn00008AF0_entry:
	r1 = fp
	// succ:  l00008AF0
l00008AF0:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r1 = r1 - 8
	CV = cond(r1)
	call fn000089E0 (retsize: 0;)
	r3 = 0x00000001
	r4 = 0x00000000
	r3 = r3 | 0x00003834
	r4 = r4 | 0x00008AE8
	// succ:  l00008B10
l00008B10:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r3:word32] = r4
	Mem0[r3 + 4:word32] = r2
	r2 = 0x00000001
	r3 = r3 + -8
	CV = cond(r3)
	r2 = r2 | 0x00003934
	F = r3 != r2
	branch F l00008B10_ds_t
	// succ:  l00008B10_ds_f l00008B10_ds_t
l00008B10_ds_f:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00008B34
	// succ:  l00008B34
l00008B10_ds_t:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00008B10
	// succ:  l00008B10
l00008B34:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00008AF0_exit
fn00008AF0_exit:


// fn00008B60
// Return size: 0
void fn00008B60()
fn00008B60_entry:
	r1 = fp
	// succ:  l00008B60
l00008B60:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	// succ:  l00008B70_thunk_fn00008A48
l00008B70_thunk_fn00008A48:
	call fn00008A48 (retsize: 0;)
	return
	// succ:  fn00008B60_exit
fn00008B60_exit:


// fn00008B78
// Return size: 0
void fn00008B78()
fn00008B78_entry:
	r1 = fp
	// succ:  l00008B78
l00008B78:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	// succ:  l00008B88_thunk_fn00008A90
l00008B88_thunk_fn00008A90:
	call fn00008A90 (retsize: 0;)
	return
	// succ:  fn00008B78_exit
fn00008B78_exit:


// fn00008B90
// Return size: 0
void fn00008B90()
fn00008B90_entry:
	r1 = fp
	// succ:  l00008B90
l00008B90:
	r4 = 0x00000001
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r4 = r4 | 0x00003828
	r4 = Mem0[r4:word32]
	Mem0[r4 + 12:word32] = r3
	r3 = Mem0[r4 + 80:word32]
	r3 = r3 | 0x00000001
	Mem0[r4 + 80:word32] = r3
	return
	// succ:  fn00008B90_exit
fn00008B90_exit:


// fn00008BB8
// Return size: 0
void fn00008BB8()
fn00008BB8_entry:
	r1 = fp
	// succ:  l00008BB8
l00008BB8:
	Mem0[r1 - 4:word32] = r2
	r2 = 0x00000001
	r3 = r3 << 0x00000003
	r2 = r2 | 0x00003834
	r1 = r1 - 4
	CV = cond(r1)
	r3 = r3 + r2
	CV = cond(r3)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	Mem0[r3:word32] = r4
	Mem0[r3 + 4:word32] = r5
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00008BB8_exit
fn00008BB8_exit:


// fn00008C74
// Return size: 0
void fn00008C74()
fn00008C74_entry:
	r1 = fp
	// succ:  l00008C74
l00008C74:
	r4 = 0x00000001
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r4 = r4 | 0x00003828
fn00008C74_exit:


// fn00008CA4
// Return size: 0
void fn00008CA4()
fn00008CA4_entry:
	r1 = fp
	// succ:  l00008CA4
l00008CA4:
	r4 = 0x00000001
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r4 = r4 | 0x00003828
fn00008CA4_exit:


// fn00008CC8
// Return size: 0
void fn00008CC8()
fn00008CC8_entry:
	r1 = fp
	// succ:  l00008CC8
l00008CC8:
	r3 = 0x00000001
	r4 = 0x00000001
	r3 = r3 | 0x00003828
	r4 = r4 | 0x0000382C
	r3 = Mem0[r3:word32]
	Mem0[r1 - 4:word32] = r2
	r5 = Mem0[r3 + 64:word32]
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r4:word32] = r5
	r4 = 0x00000001
	r5 = Mem0[r3 + 80:word32]
	r4 = r4 | 0x00003830
	Mem0[r3 + 64:word32] = r2
	r1 = r1 - 4
	CV = cond(r1)
	Mem0[r3 + 80:word32] = r2
	Mem0[r4:word32] = r5
	r1 = r1 + -4
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00008CC8_exit
fn00008CC8_exit:


// fn00008D58
// Return size: 0
void fn00008D58()
fn00008D58_entry:
	r1 = fp
	// succ:  l00008D58
l00008D58:
	r6 = 0x000001F0
	Mem0[r1 - 4:word32] = r2
	r3 = r6 | 0x00002030
	r1 = r1 - 4
	CV = cond(r1)
	r7 = Mem0[r3:word32]
	r3 = 0x00000001
	r7 = r7 >>u 0x00000008
	r3 = r3 | 0x00003374
	r7 = r7 & 0x0000007F
	r4 = Mem0[r3:word32]
	r5 = r7 + r4
	CV = cond(r5)
	F = r5 >u 0x000000FF
	branch F l00008D58_ds_t
	// succ:  l00008D58_ds_f l00008D58_ds_t
l00008D58_ds_f:
	r11 = 0x00000000 - 28
	CV = cond(r11)
	goto l00008D90
	// succ:  l00008D90
l00008D58_ds_t:
	r11 = 0x00000000 - 28
	CV = cond(r11)
	goto l00008DCC
	// succ:  l00008DCC
l00008D90:
	r4 = r4 + -4
	CV = cond(r4)
	r6 = r6 | 0x00002020
	r4 = r4 + r3
	CV = cond(r4)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l00008DB4
	// succ:  l00008DB4
l00008DA4:
	r8 = Mem0[r6:word32]
	r3 = r3 + -1
	CV = cond(r3)
	Mem0[r4:byte] = SLICE(r8, byte, 0)
	r4 = r4 + -1
	CV = cond(r4)
	// succ:  l00008DB4
l00008DB4:
	F = r3 != r7
	branch F l00008DB4_ds_t
	// succ:  l00008DB4_ds_f l00008DB4_ds_t
l00008DB4_ds_f:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00008DC0
	// succ:  l00008DC0
l00008DB4_ds_t:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00008DA4
	// succ:  l00008DA4
l00008DC0:
	r3 = 0x00000001
	r3 = r3 | 0x00003374
	Mem0[r3:word32] = r5
	// succ:  l00008DCC
l00008DCC:
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00008D58_exit
fn00008D58_exit:


// fn00008DD8
// Return size: 0
void fn00008DD8()
fn00008DD8_entry:
	r1 = fp
	// succ:  l00008DD8
l00008DD8:
	Mem0[r1 - 4:word32] = r2
	r1 = r1 - 304
	CV = cond(r1)
	r5 = r1 + -260
	CV = cond(r5)
	r6 = r1 + -300
	CV = cond(r6)
	r4 = r5 | 0x00000000
	r2 = 0x00000000 + 0
	CV = cond(r2)
	// succ:  l00008DF0
l00008DF0:
	Mem0[r4:byte] = SLICE(r2, byte, 0)
	r4 = r4 + -1
	CV = cond(r4)
	F = r4 != r6
	branch F l00008DF0_ds_t
	// succ:  l00008DF0_ds_f l00008DF0_ds_t
l00008DF0_ds_f:
	goto l00008E04
	// succ:  l00008E04
l00008DF0_ds_t:
	goto l00008DF0
	// succ:  l00008DF0
l00008E04:
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r6 = r1 + -5
	CV = cond(r6)
	goto l00008E2C
	// succ:  l00008E2C
l00008E10:
	r7 = r6 + r4
	CV = cond(r7)
	r2 = r2 | 0x00003374
	r8 = r4 + r2
	CV = cond(r8)
	r4 = r4 + -1
	CV = cond(r4)
	r8 = (word32) Mem0[r8 + 4:byte]
	r4 = r4 & 0x000000FF
	Mem0[r7:byte] = SLICE(r8, byte, 0)
	// succ:  l00008E2C
l00008E2C:
	F = r4 <u r3
	branch F l00008E2C_ds_t
	// succ:  l00008E2C_ds_f l00008E2C_ds_t
l00008E2C_ds_f:
	r2 = 0x00000001
	goto l00008E38
	// succ:  l00008E38
l00008E2C_ds_t:
	r2 = 0x00000001
	goto l00008E10
	// succ:  l00008E10
l00008E38:
	r2 = 0x00000000 + -20
	CV = cond(r2)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	Mem0[r1 + 4:byte] = SLICE(r2, byte, 0)
	r3 = r3 + -1
	CV = cond(r3)
	r7 = r4 | 0x00000000
	r15 = r1 + -4
	CV = cond(r15)
	r6 = r1 + -260
	CV = cond(r6)
	goto l00008F18
	// succ:  l00008F18
l00008E58:
	r11 = (word32) Mem0[r8:byte]
	r8 = r11 & 0x0000007F
	F = r8 <= 19
	branch F l00008E58_ds_t
	// succ:  l00008E58_ds_f l00008E58_ds_t
l00008E58_ds_f:
	r12 = 0x00000000 + 0
	CV = cond(r12)
	goto l00008E6C
	// succ:  l00008E6C
l00008E58_ds_t:
	r12 = 0x00000000 + 0
	CV = cond(r12)
	goto l00008E7C
	// succ:  l00008E7C
l00008E6C:
	F = r8 <= 40
	branch F l00008E6C_ds_t
	// succ:  l00008E6C_ds_f l00008E6C_ds_t
l00008E6C_ds_f:
	r12 = 0x00000000 + -1
	CV = cond(r12)
	goto l00008E78
	// succ:  l00008E78
l00008E6C_ds_t:
	r12 = 0x00000000 + -1
	CV = cond(r12)
	goto l00008E7C
	// succ:  l00008E7C
l00008E78:
	r12 = 0x00000000 + 0
	CV = cond(r12)
	// succ:  l00008E7C
l00008E7C:
	F = r12 == 0x00000000
	branch F l00008E7C_ds_t
	// succ:  l00008E7C_ds_f l00008E7C_ds_t
l00008E7C_ds_f:
	F = r8 <= 39
	goto l00008E88
	// succ:  l00008E88
l00008E7C_ds_t:
	F = r8 <= 39
	goto l00008EB0
	// succ:  l00008EB0
l00008E88:
	r11 = r11 << 0x00000018
	F = r11 >= 0
	branch F l00008E88_ds_t
	// succ:  l00008E88_ds_f l00008E88_ds_t
l00008E88_ds_f:
	goto l00008E98
	// succ:  l00008E98
l00008E88_ds_t:
	goto l00008EA4
	// succ:  l00008EA4
l00008E98:
	r8 = r6 + r4
	CV = cond(r8)
	r2 = 0x00000000 + -1
	CV = cond(r2)
	goto l00008F04
	// succ:  l00008F04
l00008EA4:
	r8 = r6 + r4
	CV = cond(r8)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	goto l00008F04
	// succ:  l00008F04
l00008EB0:
	branch F l00008EB0_ds_t
	// succ:  l00008EB0_ds_f l00008EB0_ds_t
l00008EB0_ds_f:
	r13 = r12 | 0x00000000
	goto l00008EB8
	// succ:  l00008EB8
l00008EB0_ds_t:
	r13 = r12 | 0x00000000
	goto l00008EC8
	// succ:  l00008EC8
l00008EB8:
	F = r8 <= 80
	branch F l00008EB8_ds_t
	// succ:  l00008EB8_ds_f l00008EB8_ds_t
l00008EB8_ds_f:
	r13 = 0x00000000 + -1
	CV = cond(r13)
	goto l00008EC4
	// succ:  l00008EC4
l00008EB8_ds_t:
	r13 = 0x00000000 + -1
	CV = cond(r13)
	goto l00008EC8
	// succ:  l00008EC8
l00008EC4:
	r13 = r12 | 0x00000000
	// succ:  l00008EC8
l00008EC8:
	r13 = r13 << 0x00000018
	F = r13 == 0x00000000
	branch F l00008EC8_ds_t
	// succ:  l00008EC8_ds_f l00008EC8_ds_t
l00008EC8_ds_f:
	r11 = r11 << 0x00000018
	goto l00008ED8
	// succ:  l00008ED8
l00008EC8_ds_t:
	r11 = r11 << 0x00000018
	goto l00008F10
	// succ:  l00008F10
l00008ED8:
	F = r11 >= 0
	branch F l00008ED8_ds_t
	// succ:  l00008ED8_ds_f l00008ED8_ds_t
l00008ED8_ds_f:
	r8 = r4 + -1
	CV = cond(r8)
	goto l00008EE4
	// succ:  l00008EE4
l00008ED8_ds_t:
	r8 = r4 + -1
	CV = cond(r8)
	goto l00008EF0
	// succ:  l00008EF0
l00008EE4:
	r4 = r6 + r4
	CV = cond(r4)
	r2 = 0x00000000 + -1
	CV = cond(r2)
	goto l00008EF8
	// succ:  l00008EF8
l00008EF0:
	r4 = r6 + r4
	CV = cond(r4)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	// succ:  l00008EF8
l00008EF8:
	Mem0[r4:byte] = SLICE(r2, byte, 0)
	r4 = r8 & 0x000000FF
	r8 = r6 + r4
	CV = cond(r8)
	// succ:  l00008F04
l00008F04:
	r4 = r4 + -1
	CV = cond(r4)
	Mem0[r8:byte] = SLICE(r2, byte, 0)
	r4 = r4 & 0x000000FF
	// succ:  l00008F10
l00008F10:
	r7 = r7 + -1
	CV = cond(r7)
	r7 = r7 & 0x000000FF
	// succ:  l00008F18
l00008F18:
	F = r7 <u r3
	branch F l00008F18_ds_t
	// succ:  l00008F18_ds_f l00008F18_ds_t
l00008F18_ds_f:
	r8 = 0x00000000 + -1
	CV = cond(r8)
	goto l00008F24
	// succ:  l00008F24
l00008F18_ds_t:
	r8 = 0x00000000 + -1
	CV = cond(r8)
	goto l00008F28
	// succ:  l00008F28
l00008F24:
	r8 = 0x00000000 + 0
	CV = cond(r8)
	// succ:  l00008F28
l00008F28:
	r8 = r8 & 0x000000FF
	F = r8 == 0x00000000
	branch F l00008F28_ds_t
	// succ:  l00008F28_ds_f l00008F28_ds_t
l00008F28_ds_f:
	F = r7 <=u 0x00000027
	goto l00008F38
	// succ:  l00008F38
l00008F28_ds_t:
	F = r7 <=u 0x00000027
	goto l00008F54
	// succ:  l00008F54
l00008F38:
	branch F l00008F38_ds_t
	// succ:  l00008F38_ds_f l00008F38_ds_t
l00008F38_ds_f:
	r8 = 0x00000000 + -1
	CV = cond(r8)
	goto l00008F40
	// succ:  l00008F40
l00008F38_ds_t:
	r8 = 0x00000000 + -1
	CV = cond(r8)
	goto l00008F44
	// succ:  l00008F44
l00008F40:
	r8 = 0x00000000 + 0
	CV = cond(r8)
	// succ:  l00008F44
l00008F44:
	r8 = r8 & 0x000000FF
	F = r8 != 0x00000000
	branch F l00008F44_ds_t
	// succ:  l00008F44_ds_f l00008F44_ds_t
l00008F44_ds_f:
	r8 = r15 + r7
	CV = cond(r8)
	goto l00008F54
	// succ:  l00008F54
l00008F44_ds_t:
	r8 = r15 + r7
	CV = cond(r8)
	goto l00008E58
	// succ:  l00008E58
l00008F54:
	F = r4 <=u 0x0000001A
	branch F l00008F54_ds_t
	// succ:  l00008F54_ds_f l00008F54_ds_t
l00008F54_ds_f:
	r11 = 0x00000000 - 1
	CV = cond(r11)
	goto l00008F60
	// succ:  l00008F60
l00008F54_ds_t:
	r11 = 0x00000000 - 1
	CV = cond(r11)
	goto l00008FC4
	// succ:  l00008FC4
l00008F60:
	r4 = r5 + -28
	CV = cond(r4)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l00008F68
	// succ:  l00008F68
l00008F60_ds_f:
	r3 = r3 + r3
	CV = cond(r3)
	goto l00008F78
	// succ:  l00008F78
l00008F60_ds_t:
	r3 = r3 + r3
	CV = cond(r3)
	goto l00008F7C
	// succ:  l00008F7C
l00008F68:
	r6 = (word32) Mem0[r5:byte]
	F = r6 != 0x00000000
	branch F l00008F60_ds_t
	goto l00008F60_ds_f
	// succ:  l00008F60_ds_f l00008F60_ds_t
l00008F78:
	r3 = r3 | 0x00000001
	// succ:  l00008F7C
l00008F7C:
	r5 = r5 + -2
	CV = cond(r5)
	F = r5 != r4
	branch F l00008F7C_ds_t
	// succ:  l00008F7C_ds_f l00008F7C_ds_t
l00008F7C_ds_f:
	goto l00008F8C
	// succ:  l00008F8C
l00008F7C_ds_t:
	goto l00008F68
	// succ:  l00008F68
l00008F8C:
	r11 = r3 & 0x000007C0
	r5 = r3 & 0x0000003F
	r3 = r3 & 0x00001000
	r11 = r11 >>u 0x00000006
	F = r3 == 0x00000000
	branch F l00008F8C_ds_t
	// succ:  l00008F8C_ds_f l00008F8C_ds_t
l00008F8C_ds_f:
	r4 = 0x00000000 + -64
	CV = cond(r4)
	goto l00008FA8
	// succ:  l00008FA8
l00008F8C_ds_t:
	r4 = 0x00000000 + -64
	CV = cond(r4)
	goto l00008FAC
	// succ:  l00008FAC
l00008FA8:
	r4 = 0x00000000 + 0
	CV = cond(r4)
	// succ:  l00008FAC
l00008FAC:
	r3 = r4 + r5
	CV = cond(r3)
	r4 = r3 << 0x00000010
	r3 = r3 ^ 0x0000FFFF
	r3 = r3 << 0x00000018
	r11 = r4 | r11
	r11 = r11 | r3
	// succ:  l00008FC4
l00008FC4:
	r1 = r1 + -304
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00008DD8_exit
fn00008DD8_exit:


// fn00009290
// Return size: 0
void fn00009290()
fn00009290_entry:
	r1 = fp
	goto l00009290
	// succ:  l00009290
l00008FD0:
	r3 = 0x000001F0
	Mem0[r1 - 24:word32] = r2
	r4 = 0x00000001
	r2 = r3 | 0x00002000
	r4 = r4 | 0x00003484
	r5 = Mem0[r2:word32]
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 20:word32] = r14
	Mem0[r1 - 16:word32] = r16
	Mem0[r1 - 12:word32] = r18
	Mem0[r1 - 8:word32] = r20
	Mem0[r4:word32] = r5
	r18 = r3 | 0x00002010
	r4 = 0x00000001
	r5 = Mem0[r18:word32]
	r4 = r4 | 0x00003488
	r14 = r3 | 0x0000202C
	Mem0[r4:word32] = r5
	r4 = 0x00000001
	r5 = Mem0[r14:word32]
	r4 = r4 | 0x0000348C
	r16 = r3 | 0x00002030
	Mem0[r4:word32] = r5
	r4 = 0x00000001
	r5 = Mem0[r16:word32]
	r4 = r4 | 0x00003490
	r20 = r3 | 0x00002034
	Mem0[r4:word32] = r5
	r3 = 0x00000001
	r4 = Mem0[r20:word32]
	r3 = r3 | 0x00003494
	r1 = r1 - 24
	CV = cond(r1)
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -31
	CV = cond(r3)
	call fn0000AF1C (retsize: 0;)
	r3 = 0x00000001
	r3 = r3 | 0x0000347C
	Mem0[r3:word32] = r11
	r3 = 0x00000000 + -31
	CV = cond(r3)
	call fn0000B250 (retsize: 0;)
	r3 = 0x00000001
	r4 = 0x00000000 + -11
	CV = cond(r4)
	r3 = r3 | 0x00003480
	r5 = 0x00000000 + -2
	CV = cond(r5)
	Mem0[r3:word32] = r11
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -11
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn000097BC (retsize: 0;)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -11
	CV = cond(r4)
	call fn00009834 (retsize: 0;)
	r3 = 0x00000000 + -31
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -31
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B320 (retsize: 0;)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = 0x00000000 + -31
	CV = cond(r3)
	call fn0000B0B8 (retsize: 0;)
	r3 = 0x00000000 + -31
	CV = cond(r3)
	call fn0000BDC8 (retsize: 0;)
	r3 = 0x00000000 + -31
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B320 (retsize: 0;)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = 0x00000000 + -23
	CV = cond(r3)
	call fn0000B320 (retsize: 0;)
	r3 = 0x00000000 + -48
	CV = cond(r3)
	Mem0[r2:word32] = r3
	r3 = 0x00000100
	r3 = r3 | 0x0000032C
	Mem0[r20:word32] = r3
	r3 = 0x00000000 + -4
	CV = cond(r3)
	Mem0[r18:word32] = r3
	r3 = 0x00000000 + -255
	CV = cond(r3)
	Mem0[r16:word32] = r3
	r3 = 0x00000000 + -7955
	CV = cond(r3)
	Mem0[r14:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | 0x00000003
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r2 = r2 | 0x00003374
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -5
	CV = cond(r3)
	call fn00008CA4 (retsize: 0;)
	r3 = 0x00000000 + -5
	CV = cond(r3)
	call fn00008B60 (retsize: 0;)
	r1 = r1 + -24
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 24:word32]
	r14 = Mem0[r1 - 20:word32]
	r16 = Mem0[r1 - 16:word32]
	r18 = Mem0[r1 - 12:word32]
	r20 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00009290_exit
l00009290:
	r3 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x00004000
	r3 = Mem0[r3 + 944:word32]
	F = r3 == 0x00000000
	branch F l00009290_ds_t
	// succ:  l00009290_ds_f l00009290_ds_t
l00009290_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l000092AC
	// succ:  l000092AC
l00009290_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l000092BC
	// succ:  l000092BC
l000092AC:
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	goto l00008FD0
	// succ:  l00008FD0
l000092BC:
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00009290_exit
fn00009290_exit:


// fn000092CC
// Return size: 0
void fn000092CC()
fn000092CC_entry:
	r1 = fp
	// succ:  l000092CC
l000092CC:
	Mem0[r1 - 12:word32] = r2
	r3 = 0x000001F0
	r2 = 0x00000001
	r3 = r3 | 0x00002030
	r2 = r2 | 0x00003164
	Mem0[r1 - 8:word32] = r14
	r14 = Mem0[r2:word32]
	r2 = Mem0[r3:word32]
	Mem0[r1 - 4:word32] = r9
	Mem0[r3:word32] = r2
	r3 = r2 & 0x00000010
	F = r3 == 0x00000000
	branch F l000092CC_ds_t
	// succ:  l000092CC_ds_f l000092CC_ds_t
l000092CC_ds_f:
	r1 = r1 - 12
	CV = cond(r1)
	goto l00009304
	// succ:  l00009304
l000092CC_ds_t:
	r1 = r1 - 12
	CV = cond(r1)
	goto l00009324
	// succ:  l00009324
l00009304:
	call fn00008D58 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00009304_ds_t
	// succ:  l00009304_ds_f l00009304_ds_t
l00009304_ds_f:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l00009318
	// succ:  l00009318
l00009304_ds_t:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l00009324
	// succ:  l00009324
l00009318:
	r2 = 0x00000001
	r2 = r2 | 0x00003374
	goto l00009678
	// succ:  l00009678
l00009324:
	r3 = r2 & 0x00000002
	F = r3 == 0x00000000
	branch F l00009324_ds_t
	// succ:  l00009324_ds_f l00009324_ds_t
l00009324_ds_f:
	r11 = r2 & 0x00000001
	goto l00009334
	// succ:  l00009334
l00009324_ds_t:
	r11 = r2 & 0x00000001
	goto l00009668
	// succ:  l00009668
l00009334:
	call fn00008D58 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00009334_ds_t
	// succ:  l00009334_ds_f l00009334_ds_t
l00009334_ds_f:
	r7 = 0x00001000
	goto l00009348
	// succ:  l00009348
l00009334_ds_t:
	r7 = 0x00001000
	goto l00009360
	// succ:  l00009360
l00009348:
	r2 = 0x00000001
	r5 = 0x00000000 + 0
	CV = cond(r5)
	r2 = r2 | 0x00003374
	r11 = r5 | 0x00000000
	Mem0[r2:word32] = r5
	goto l000096E4
	// succ:  l000096E4
l00009360:
	r2 = 0x00000001
	F = r14 != r7
	branch F l00009360_ds_t
	// succ:  l00009360_ds_f l00009360_ds_t
l00009360_ds_f:
	r2 = r2 | 0x00003374
	goto l00009370
	// succ:  l00009370
l00009360_ds_t:
	r2 = r2 | 0x00003374
	goto l00009388
	// succ:  l00009388
l00009370:
	r3 = Mem0[r2:word32]
	r2 = 0x00000001
	call fn00008DD8 (retsize: 0;)
	r2 = r2 | 0x00003478
	Mem0[r2:word32] = r11
	goto l00009574
	// succ:  l00009574
l00009388:
	r7 = Mem0[r2:word32]
	r3 = r11 | 0x00000000
	r2 = r2 + -4
	CV = cond(r2)
	r5 = r11 | 0x00000000
	goto l000093D0
	// succ:  l000093D0
l0000939C:
	r3 = (word32) Mem0[r2:byte]
	r4 = r3 & 0x00000080
	F = r4 == 0x00000000
	branch F l0000939C_ds_t
	// succ:  l0000939C_ds_f l0000939C_ds_t
l0000939C_ds_f:
	F = r5 >u 0x00000070
	goto l000093B0
	// succ:  l000093B0
l0000939C_ds_t:
	F = r5 >u 0x00000070
	goto l000093BC
	// succ:  l000093BC
l000093B0:
	r4 = r3 & 0x0000007F
	r5 = r5 + r4
	CV = cond(r5)
	goto l000093C8
	// succ:  l000093C8
l000093BC:
	branch F l000093BC_ds_t
	// succ:  l000093BC_ds_f l000093BC_ds_t
l000093BC_ds_f:
	goto l000093C4
	// succ:  l000093C4
l000093BC_ds_t:
	goto l000093DC
	// succ:  l000093DC
l000093C4:
	r5 = r4 | 0x00000000
	// succ:  l000093C8
l000093C8:
	r11 = r11 + -1
	CV = cond(r11)
	r2 = r2 + -1
	CV = cond(r2)
	// succ:  l000093D0
l000093D0:
	F = r11 <u r7
	branch F l000093D0_ds_t
	// succ:  l000093D0_ds_f l000093D0_ds_t
l000093D0_ds_f:
	goto l000093DC
	// succ:  l000093DC
l000093D0_ds_t:
	goto l0000939C
	// succ:  l0000939C
l000093DC:
	r2 = r3 >>u 0x00000007
	r2 = r2 & 0x00000001
	F = r2 != 0x00000000
	branch F l000093DC_ds_t
	// succ:  l000093DC_ds_f l000093DC_ds_t
l000093DC_ds_f:
	F = r5 <=u 0x00000070
	goto l000093F0
	// succ:  l000093F0
l000093DC_ds_t:
	F = r5 <=u 0x00000070
	goto l00009548
	// succ:  l00009548
l000093F0:
	branch F l000093F0_ds_t
	// succ:  l000093F0_ds_f l000093F0_ds_t
l000093F0_ds_f:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	goto l000093F8
	// succ:  l000093F8
l000093F0_ds_t:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	goto l000093FC
	// succ:  l000093FC
l000093F8:
	r4 = r2 | 0x00000000
	// succ:  l000093FC
l000093FC:
	r4 = r4 & 0x000000FF
	F = r4 != 0x00000000
	branch F l000093FC_ds_t
	// succ:  l000093FC_ds_f l000093FC_ds_t
l000093FC_ds_f:
	F = r11 <u r7
	goto l0000940C
	// succ:  l0000940C
l000093FC_ds_t:
	F = r11 <u r7
	goto l00009548
	// succ:  l00009548
l0000940C:
	goto l00009450
	// succ:  l00009450
l00009414:
	r8 = r8 | 0x00003378
	r2 = r11 + r8
	CV = cond(r2)
	r3 = (word32) Mem0[r2:byte]
	r2 = r3 & 0x00000080
	F = r2 == 0x00000000
	branch F l00009414_ds_t
	// succ:  l00009414_ds_f l00009414_ds_t
l00009414_ds_f:
	F = r4 >u 0x00000038
	goto l00009430
	// succ:  l00009430
l00009414_ds_t:
	F = r4 >u 0x00000038
	goto l00009440
	// succ:  l00009440
l00009430:
	branch F l00009430_ds_t
	// succ:  l00009430_ds_f l00009430_ds_t
l00009430_ds_f:
	goto l00009438
	// succ:  l00009438
l00009430_ds_t:
	goto l00009458
	// succ:  l00009458
l00009438:
	r4 = 0x00000000 + 0
	CV = cond(r4)
	goto l00009448
	// succ:  l00009448
l00009440:
	r2 = r3 & 0x0000007F
	r4 = r4 + r2
	CV = cond(r4)
	// succ:  l00009448
l00009448:
	r11 = r11 + -1
	CV = cond(r11)
	F = r11 <u r7
	// succ:  l00009450
l00009450:
	branch F l00009450_ds_t
	// succ:  l00009450_ds_f l00009450_ds_t
l00009450_ds_f:
	r8 = 0x00000001
	goto l00009458
	// succ:  l00009458
l00009450_ds_t:
	r8 = 0x00000001
	goto l00009414
	// succ:  l00009414
l00009458:
	r3 = r3 & 0x00000080
	r2 = 0x00000000 - r3
	CV = cond(r2)
	r3 = r2 | r3
	r3 = r3 ^ 0x0000FFFF
	r3 = r3 >>u 0x0000001F
	F = r3 != 0x00000000
	branch F l00009458_ds_t
	// succ:  l00009458_ds_f l00009458_ds_t
l00009458_ds_f:
	F = r4 <=u 0x00000038
	goto l00009478
	// succ:  l00009478
l00009458_ds_t:
	F = r4 <=u 0x00000038
	goto l00009548
	// succ:  l00009548
l00009478:
	branch F l00009478_ds_t
	// succ:  l00009478_ds_f l00009478_ds_t
l00009478_ds_f:
	r5 = 0x00000000 + -1
	CV = cond(r5)
	goto l00009480
	// succ:  l00009480
l00009478_ds_t:
	r5 = 0x00000000 + -1
	CV = cond(r5)
	goto l00009484
	// succ:  l00009484
l00009480:
	r5 = r3 | 0x00000000
	// succ:  l00009484
l00009484:
	r5 = r5 & 0x000000FF
	F = r5 != 0x00000000
	branch F l00009484_ds_t
	// succ:  l00009484_ds_f l00009484_ds_t
l00009484_ds_f:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	goto l00009494
	// succ:  l00009494
l00009484_ds_t:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	goto l00009548
	// succ:  l00009548
l00009494:
	r2 = r5 | 0x00000000
	r3 = r5 | 0x00000000
	r12 = r4 | 0x00000000
	goto l0000952C
	// succ:  l0000952C
l000094A4:
	r8 = 0x00000001
	r8 = r8 | 0x00003378
	r6 = r11 + r8
	CV = cond(r6)
	r6 = (word32) Mem0[r6:byte]
	branch F l000094A4_ds_t
	// succ:  l000094A4_ds_f l000094A4_ds_t
l000094A4_ds_f:
	r8 = r6 & 0x00000080
	goto l000094BC
	// succ:  l000094BC
l000094A4_ds_t:
	r8 = r6 & 0x00000080
	goto l000094E4
	// succ:  l000094E4
l000094BC:
	F = r8 == 0x00000000
	branch F l000094BC_ds_t
	// succ:  l000094BC_ds_f l000094BC_ds_t
l000094BC_ds_f:
	F = r3 >u 0x00000024
	goto l000094C8
	// succ:  l000094C8
l000094BC_ds_t:
	F = r3 >u 0x00000024
	goto l000094D4
	// succ:  l000094D4
l000094C8:
	r6 = r6 & 0x0000007F
	r3 = r3 + r6
	CV = cond(r3)
	goto l00009518
	// succ:  l00009518
l000094D4:
	branch F l000094D4_ds_t
	// succ:  l000094D4_ds_f l000094D4_ds_t
l000094D4_ds_f:
	r4 = r8 | 0x00000000
	goto l000094DC
	// succ:  l000094DC
l000094D4_ds_t:
	r4 = r8 | 0x00000000
	goto l00009550
	// succ:  l00009550
l000094DC:
	r3 = r6 & 0x0000007F
	goto l00009528
	// succ:  l00009528
l000094E4:
	F = r8 == 0x00000000
	branch F l000094E4_ds_t
	// succ:  l000094E4_ds_f l000094E4_ds_t
l000094E4_ds_f:
	F = r3 >u 0x0000004A
	goto l000094F0
	// succ:  l000094F0
l000094E4_ds_t:
	F = r3 >u 0x0000004A
	goto l00009520
	// succ:  l00009520
l000094F0:
	branch F l000094F0_ds_t
	// succ:  l000094F0_ds_f l000094F0_ds_t
l000094F0_ds_f:
	F = r3 <=u 0x00000024
	goto l000094F8
	// succ:  l000094F8
l000094F0_ds_t:
	F = r3 <=u 0x00000024
	goto l00009558
	// succ:  l00009558
l000094F8:
	branch F l000094F8_ds_t
	// succ:  l000094F8_ds_f l000094F8_ds_t
l000094F8_ds_f:
	goto l00009500
	// succ:  l00009500
l000094F8_ds_t:
	goto l00009504
	// succ:  l00009504
l00009500:
	r2 = r2 | r3
	// succ:  l00009504
l00009504:
	r5 = r5 + -1
	CV = cond(r5)
	F = r5 == 0x00000020
	branch F l00009504_ds_t
	// succ:  l00009504_ds_f l00009504_ds_t
l00009504_ds_f:
	goto l00009514
	// succ:  l00009514
l00009504_ds_t:
	goto l00009568
	// succ:  l00009568
l00009514:
	r3 = r6 & 0x0000007F
	// succ:  l00009518
l00009518:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	goto l00009528
	// succ:  l00009528
l00009520:
	r6 = r6 & 0x0000007F
	r3 = r3 + r6
	CV = cond(r3)
	// succ:  l00009528
l00009528:
	r11 = r11 + -1
	CV = cond(r11)
	// succ:  l0000952C
l0000952C:
	F = r11 <u r7
	branch F l0000952C_ds_t
	// succ:  l0000952C_ds_f l0000952C_ds_t
l0000952C_ds_f:
	F = r4 == 0x00000000
	goto l00009538
	// succ:  l00009538
l0000952C_ds_t:
	F = r4 == 0x00000000
	goto l000094A4
	// succ:  l000094A4
l00009538:
	r3 = 0x00000001
	goto l0000956C
	// succ:  l0000956C
l00009540:
	r3 = r3 + -1
	CV = cond(r3)
	goto l0000955C
	// succ:  l0000955C
l00009548:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l0000955C
	// succ:  l0000955C
l00009550:
	r3 = r8 | 0x00000000
	goto l0000955C
	// succ:  l0000955C
l00009558:
	r3 = r4 | 0x00000000
	// succ:  l0000955C
l0000955C:
	F = r3 <u r7
	branch F l0000955C_ds_t
	// succ:  l0000955C_ds_f l0000955C_ds_t
l0000955C_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l00009568
	// succ:  l00009568
l0000955C_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l00009540
	// succ:  l00009540
l00009568:
	r3 = 0x00000001
	// succ:  l0000956C
l0000956C:
	r3 = r3 | 0x00003478
	Mem0[r3:word32] = r2
	// succ:  l00009574
l00009574:
	r2 = 0x00000001
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r2 = r2 | 0x00003374
	r5 = 0x000000FF
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	r7 = 0x0000FF00
	r2 = r2 | 0x00003478
	r3 = 0x00000001
	r4 = Mem0[r2:word32]
	r3 = r3 | 0x0000316C
	r6 = r4 & r5
	r5 = 0x00000001
	r12 = r4 & r7
	r5 = r5 | 0x00003370
	r12 = r12 >>u 0x00000008
	r8 = Mem0[r5:word32]
	r5 = 0x00000001
	r11 = Mem0[r3:word32]
	r5 = r5 | 0x00003168
	r3 = r3 + -8
	CV = cond(r3)
	r2 = r4 & 0x0000FFFF
	r7 = Mem0[r5:word32]
	r12 = r12 ^ r6
	r5 = r3 | 0x00000000
	r4 = 0x00000000 + 0
	CV = cond(r4)
	goto l00009640
	// succ:  l00009640
l000095E0:
	r8 = Mem0[r5:word32]
	r13 = r8 & 0x0000FFFF
	F = r2 != r13
	branch F l000095E0_ds_t
	// succ:  l000095E0_ds_f l000095E0_ds_t
l000095E0_ds_f:
	goto l000095F4
	// succ:  l000095F4
l000095E0_ds_t:
	goto l00009634
	// succ:  l00009634
l000095F4:
	r7 = 0x000000FF
	F = r12 != r7
	branch F l000095F4_ds_t
	// succ:  l000095F4_ds_f l000095F4_ds_t
l000095F4_ds_f:
	r7 = 0x00000000 + 0
	CV = cond(r7)
	goto l00009604
	// succ:  l00009604
l000095F4_ds_t:
	r7 = 0x00000000 + 0
	CV = cond(r7)
	goto l00009634
	// succ:  l00009634
l00009604:
	r4 = 0x00000001
	r6 = r6 >>u 0x00000010
	r4 = r4 | 0x00003370
	r5 = 0x00000001
	Mem0[r4:word32] = r2
	r4 = 0x00000001
	r5 = r5 | 0x00003170
	r4 = r4 | 0x00003168
	r8 = r13 | 0x00000000
	Mem0[r4:word32] = r6
	r4 = 0x00000000 + 0
	CV = cond(r4)
	goto l000096CC
	// succ:  l000096CC
l00009634:
	r4 = r4 + -1
	CV = cond(r4)
	r5 = r5 + -8
	CV = cond(r5)
	r8 = r2 | 0x00000000
	// succ:  l00009640
l00009640:
	F = r4 <u r11
	branch F l00009640_ds_t
	// succ:  l00009640_ds_f l00009640_ds_t
l00009640_ds_f:
	goto l0000964C
	// succ:  l0000964C
l00009640_ds_t:
	goto l000095E0
	// succ:  l000095E0
l0000964C:
	r2 = 0x00000001
	r2 = r2 | 0x00003370
	Mem0[r2:word32] = r8
	r2 = 0x00000001
	r2 = r2 | 0x00003168
	Mem0[r2:word32] = r7
	goto l000096D8
	// succ:  l000096D8
l00009668:
	F = r11 == 0x00000000
	branch F l00009668_ds_t
	// succ:  l00009668_ds_f l00009668_ds_t
l00009668_ds_f:
	r2 = 0x00000001
	goto l00009674
	// succ:  l00009674
l00009668_ds_t:
	r2 = 0x00000001
	goto l000096E4
	// succ:  l000096E4
l00009674:
	r2 = r2 | 0x00003374
	// succ:  l00009678
l00009678:
	Mem0[r2:word32] = r3
	r11 = r3 | 0x00000000
	goto l000096E4
	// succ:  l000096E4
l00009684:
	branch F l00009684_ds_t
	// succ:  l00009684_ds_f l00009684_ds_t
l00009684_ds_f:
	r7 = Mem0[r5:word32]
	goto l0000968C
	// succ:  l0000968C
l00009684_ds_t:
	r7 = Mem0[r5:word32]
	goto l000096A4
	// succ:  l000096A4
l0000968C:
	F = r6 != r7
	branch F l0000968C_ds_t
	// succ:  l0000968C_ds_f l0000968C_ds_t
l0000968C_ds_f:
	goto l00009698
	// succ:  l00009698
l0000968C_ds_t:
	goto l000096C0
	// succ:  l000096C0
l00009698:
	r7 = Mem0[r3:word32]
	F = r8 == r7
	goto l000096B8
	// succ:  l000096B8
l000096A4:
	F = r6 != r7
	branch F l000096A4_ds_t
	// succ:  l000096A4_ds_f l000096A4_ds_t
l000096A4_ds_f:
	goto l000096B0
	// succ:  l000096B0
l000096A4_ds_t:
	goto l000096C0
	// succ:  l000096C0
l000096B0:
	r7 = Mem0[r3:word32]
	F = r2 == r7
	// succ:  l000096B8
l000096B8:
	branch F l000096B8_ds_t
	// succ:  l000096B8_ds_f l000096B8_ds_t
l000096B8_ds_f:
	goto l000096C0
	// succ:  l000096C0
l000096B8_ds_t:
	goto l000096E0
	// succ:  l000096E0
l000096C0:
	r4 = r4 + -1
	CV = cond(r4)
	r3 = r3 + -8
	CV = cond(r3)
	r5 = r5 + -8
	CV = cond(r5)
	// succ:  l000096CC
l000096CC:
	F = r4 <u r11
	branch F l000096CC_ds_t
	// succ:  l000096CC_ds_f l000096CC_ds_t
l000096CC_ds_f:
	F = r14 == 0x00000000
	goto l000096D8
	// succ:  l000096D8
l000096CC_ds_t:
	F = r14 == 0x00000000
	goto l00009684
	// succ:  l00009684
l000096D8:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l000096E4
	// succ:  l000096E4
l000096E0:
	r11 = 0x00000000 + -1
	CV = cond(r11)
	// succ:  l000096E4
l000096E4:
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000092CC_exit
fn000092CC_exit:


// fn000096F8
// Return size: 0
void fn000096F8()
fn000096F8_entry:
	r1 = fp
	// succ:  l000096F8
l000096F8:
	Mem0[r1 - 4:word32] = r9
	r3 = 0x00000000 + -32
	CV = cond(r3)
	r1 = r1 - 4
	CV = cond(r1)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B320 (retsize: 0;)
	r4 = 0x000001F0
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = r4 | 0x00002E18
	r4 = r4 | 0x00002E38
	Mem0[r5:word32] = r3
	Mem0[r4:word32] = r3
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn000096F8_exit
fn000096F8_exit:


// fn00009744
// Return size: 0
void fn00009744()
fn00009744_entry:
	r1 = fp
	// succ:  l00009744
l00009744:
	r6 = r3 << 0x00000003
	Mem0[r1 - 4:word32] = r2
	r2 = 0x0000007C
	r3 = r6 + r3
	CV = cond(r3)
	r2 = r2 | 0x00000AF7
	r6 = r4 >>u 0x00000003
	r3 = r3 + r2
	CV = cond(r3)
	r4 = r4 & 0x00000007
	r3 = r3 + r6
	CV = cond(r3)
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 << 0x00000002
	r4 = r4 << 0x00000002
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r6 = Mem0[r3:word32]
	Mem0[r1:word32] = r6
	r6 = 0x00000000 + -7
	CV = cond(r6)
	r7 = Mem0[r1:word32]
fn00009744_exit:


// fn000097BC
// Return size: 0
void fn000097BC()
fn000097BC_entry:
	r1 = fp
	// succ:  l000097BC
l000097BC:
	r6 = r3 << 0x00000003
	Mem0[r1 - 4:word32] = r2
	r2 = 0x0000007C
	r3 = r6 + r3
	CV = cond(r3)
	r2 = r2 | 0x00000AFE
	r6 = r4 >>u 0x00000004
	r3 = r3 + r2
	CV = cond(r3)
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 + r6
	CV = cond(r3)
	r4 = r4 & 0x0000000F
	r3 = r3 << 0x00000002
	r4 = r4 + r4
	CV = cond(r4)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r6 = Mem0[r3:word32]
	Mem0[r1:word32] = r6
	r6 = 0x00000000 + -3
	CV = cond(r6)
	r7 = Mem0[r1:word32]
l000097BC:
fn000097BC_exit:


// fn00009834
// Return size: 0
void fn00009834()
fn00009834_entry:
	r1 = fp
	// succ:  l00009834
l00009834:
	r6 = r3 << 0x00000003
	Mem0[r1 - 4:word32] = r2
	r2 = 0x0000007C
	r3 = r6 + r3
	CV = cond(r3)
	r2 = r2 | 0x00000AFC
	r6 = r4 >>u 0x00000004
	r3 = r3 + r2
	CV = cond(r3)
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 + r6
	CV = cond(r3)
	r4 = r4 & 0x0000000F
	r3 = r3 << 0x00000002
	r4 = r4 + r4
	CV = cond(r4)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r6 = Mem0[r3:word32]
	Mem0[r1:word32] = r6
	r6 = 0x00000000 + -3
	CV = cond(r6)
	r7 = Mem0[r1:word32]
fn00009834_exit:


// fn000098AC
// Return size: 0
void fn000098AC()
fn000098AC_entry:
	r1 = fp
	// succ:  l000098AC
l000098AC:
	r6 = r3 << 0x00000002
	r3 = r3 << 0x00000005
	Mem0[r1 - 4:word32] = r2
	r2 = 0x000001F0
	r3 = r6 + r3
	CV = cond(r3)
	r2 = r2 | 0x00002BEC
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 + r2
	CV = cond(r3)
	r5 = r5 & 0x00000001
	r6 = Mem0[r3:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	Mem0[r1:word32] = r6
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r7 = Mem0[r1:word32]
fn000098AC_exit:


// fn00009918
// Return size: 0
void fn00009918()
fn00009918_entry:
	r1 = fp
	// succ:  l00009918
l00009918:
	r5 = r3 << 0x00000002
	r3 = r3 << 0x00000005
	Mem0[r1 - 4:word32] = r2
	r2 = 0x000001F0
	r3 = r5 + r3
	CV = cond(r3)
	r2 = r2 | 0x00002BEC
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 + r2
	CV = cond(r3)
	r3 = Mem0[r3:word32]
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	r1 = r1 + -8
	CV = cond(r1)
fn00009918_exit:


// fn00009958
// Return size: 0
void fn00009958()
fn00009958_entry:
	r1 = fp
	// succ:  l00009958
l00009958:
	Mem0[r1 - 4:word32] = r2
	r2 = 0x000001F0
	r3 = r3 << 0x00000005
	r2 = r2 | 0x00002DF4
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 + r2
	CV = cond(r3)
	r3 = Mem0[r3:word32]
	Mem0[r1:word32] = r3
	r11 = Mem0[r1:word32]
	r1 = r1 + -8
	CV = cond(r1)
	r11 = r4 & r11
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00009958_exit
fn00009958_exit:


// fn0000998C
// Return size: 0
void fn0000998C()
fn0000998C_entry:
	r1 = fp
	// succ:  l0000998C
l0000998C:
	Mem0[r1 - 16:word32] = r14
	Mem0[r1 - 12:word32] = r16
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 20:word32] = r2
	Mem0[r1 - 8:word32] = r18
	r1 = r1 - 24
	CV = cond(r1)
	r16 = 0x00000001
	call fn0000D628 (retsize: 0;)
	r3 = 0x00000001
	r14 = 0x00000001
	F = r11 != 0x00000000
	r3 = r3 | 0x000034AC
	r16 = r16 | 0x00003938
	branch F l0000998C_ds_t
	// succ:  l0000998C_ds_f l0000998C_ds_t
l0000998C_ds_f:
	r14 = r14 | 0x00003934
	goto l000099C8
	// succ:  l000099C8
l0000998C_ds_t:
	r14 = r14 | 0x00003934
	goto l00009A78
	// succ:  l00009A78
l000099C8:
	r2 = 0x00000000 + -1
	CV = cond(r2)
	r18 = 0x00000000 + -15
	CV = cond(r18)
	Mem0[r3:word32] = r2
	Mem0[r16:word32] = r11
	Mem0[r14:word32] = r18
	r16 = r1 + -3
	CV = cond(r16)
	r14 = r1 + -2
	CV = cond(r14)
	r3 = 0x00000000 + -50
	CV = cond(r3)
	r4 = r14 | 0x00000000
	Mem0[r1 + 3:byte] = SLICE(r3, byte, 0)
	r5 = r2 | 0x00000000
	r3 = r16 | 0x00000000
	call fn0000D214 (retsize: 0;)
	r3 = (word32) Mem0[r1 + 2:byte]
	r3 = r3 | 0x00000010
	r5 = r2 | 0x00000000
	Mem0[r1 + 2:byte] = SLICE(r3, byte, 0)
	r4 = r14 | 0x00000000
	r3 = r16 | 0x00000000
	call fn0000D298 (retsize: 0;)
	r4 = 0x00000001
	r3 = r18 | 0x00000000
	r4 = r4 | 0x00002C08
	call fn0000EDF4 (retsize: 0;)
	r4 = 0x00000000 + -26
	CV = cond(r4)
	r3 = r16 | 0x00000000
	Mem0[r1 + 3:byte] = SLICE(r4, byte, 0)
	r5 = r2 | 0x00000000
	r4 = r14 | 0x00000000
	call fn0000D214 (retsize: 0;)
	r3 = (word32) Mem0[r1 + 2:byte]
	r3 = r3 | 0x00000007
	r4 = r14 | 0x00000000
	Mem0[r1 + 2:byte] = SLICE(r3, byte, 0)
	r5 = r2 | 0x00000000
	r3 = r16 | 0x00000000
	call fn0000D298 (retsize: 0;)
	r3 = 0x00000001
	r3 = r3 | 0x00003010
	Mem0[r3 + 7:byte] = SLICE(r2, byte, 0)
	Mem0[r3 + 15:byte] = SLICE(r2, byte, 0)
	Mem0[r3 + 23:byte] = SLICE(r2, byte, 0)
	Mem0[r3 + 31:byte] = SLICE(r2, byte, 0)
	goto l00009B48
	// succ:  l00009B48
l00009A78:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r4 = 0x00000000 + -5
	CV = cond(r4)
	Mem0[r3:word32] = r2
	r5 = r2 | 0x00000000
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = 0x00000001
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -8
	CV = cond(r4)
	r5 = r3 | 0x00000000
	r2 = r2 | 0x00003498
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -9
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -5
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -8
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -9
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -5
	CV = cond(r4)
	r5 = 0x00000000 + -3
	CV = cond(r5)
	call fn00009834 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -8
	CV = cond(r4)
	r5 = 0x00000000 + -3
	CV = cond(r5)
	call fn00009834 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -9
	CV = cond(r4)
	r5 = 0x00000000 + -3
	CV = cond(r5)
	call fn00009834 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = 0x0000001A
	r3 = r3 | r4
	r4 = 0x00000001
	Mem0[r2:word32] = r3
	r2 = 0x00000000 + -17
	CV = cond(r2)
	r3 = 0x00000000 + -15
	CV = cond(r3)
	Mem0[r16:word32] = r2
	r2 = 0x00000000 + -22
	CV = cond(r2)
	r4 = r4 | 0x00002C16
	Mem0[r14:word32] = r2
	call fn0000EDF4 (retsize: 0;)
l00009B48:
	r1 = r1 + -24
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 20:word32]
	r14 = Mem0[r1 - 16:word32]
	r16 = Mem0[r1 - 12:word32]
	r18 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000998C_exit
fn0000998C_exit:


// fn00009B70
// Return size: 0
void fn00009B70()
fn00009B70_entry:
	r1 = fp
	// succ:  l00009B70
l00009B70:
	r3 = 0x00000001
	r3 = r3 | 0x000034AC
	r11 = Mem0[r3:word32]
	return
	// succ:  fn00009B70_exit
fn00009B70_exit:


// fn00009B80
// Return size: 0
void fn00009B80()
fn00009B80_entry:
	r1 = fp
	// succ:  l00009B80
l00009B80:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x000001F0
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r3 = r2 | 0x00001000
	Mem0[r1 - 4:word32] = r9
	Mem0[r3:word32] = r4
	r3 = r2 | 0x00001014
	r4 = 0x00000000 + -257
	CV = cond(r4)
	r2 = r2 | 0x00001018
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r1 = r1 - 8
	CV = cond(r1)
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r3 = r3 | 0x00000001
	Mem0[r2:word32] = r3
	// succ:  l00009BC8
l00009BC8:
	goto l00009BC8
	// succ:  l00009BC8
fn00009B80_exit:


// fn00009C2C
// Return size: 0
void fn00009C2C()
fn00009C2C_entry:
	r1 = fp
	// succ:  l00009C2C
l00009C2C:
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 8:word32] = r16
	r2 = r3 | 0x00000000
	r1 = r1 - 20
	CV = cond(r1)
	r5 = r4 | 0x00000000
	F = r3 >u 0x00000016
	branch F l00009C2C_ds_t
	// succ:  l00009C2C_ds_f l00009C2C_ds_t
l00009C2C_ds_f:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l00009C54
	// succ:  l00009C54
l00009C2C_ds_t:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l00009DC4
	// succ:  l00009DC4
l00009C54:
	F = r3 >u 0x00000010
	branch F l00009C54_ds_t
	// succ:  l00009C54_ds_f l00009C54_ds_t
l00009C54_ds_f:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00009C60
	// succ:  l00009C60
l00009C54_ds_t:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00009DC4
	// succ:  l00009DC4
l00009C60:
	r4 = r3 + r3
	CV = cond(r4)
	r4 = r4 + r3
	CV = cond(r4)
	r3 = 0x00000001
	r4 = r4 << 0x00000003
	r3 = r3 | 0x00002E90
	r4 = r4 + r3
	CV = cond(r4)
	r7 = r4 + -4
	CV = cond(r7)
	r3 = (word32) Mem0[r7:word16]
	F = r5 <u r3
	branch F l00009C60_ds_t
	// succ:  l00009C60_ds_f l00009C60_ds_t
l00009C60_ds_f:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l00009C8C
	// succ:  l00009C8C
l00009C60_ds_t:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l00009DC4
	// succ:  l00009DC4
l00009C8C:
	r6 = r4 + -12
	CV = cond(r6)
	r8 = (word32) Mem0[r6 + 2:word16]
	F = r5 >u r8
	branch F l00009C8C_ds_t
	// succ:  l00009C8C_ds_f l00009C8C_ds_t
l00009C8C_ds_f:
	goto l00009CA0
	// succ:  l00009CA0
l00009C8C_ds_t:
	goto l00009DC4
	// succ:  l00009DC4
l00009CA0:
	r7 = (word32) Mem0[r7 + 2:word16]
	F = r5 >u r7
	branch F l00009CA0_ds_t
	// succ:  l00009CA0_ds_f l00009CA0_ds_t
l00009CA0_ds_f:
	goto l00009CB0
	// succ:  l00009CB0
l00009CA0_ds_t:
	goto l00009CCC
	// succ:  l00009CCC
l00009CB0:
	r4 = (word32) Mem0[r4 + 8:word16]
	r6 = r4 - 1
	CV = cond(r6)
	r3 = r6 - r3
	CV = cond(r3)
	r3 = r3 + r5
	CV = cond(r3)
	call fn0000FEDC (retsize: 0;)
	r11 = r11 & 0x0000007F
	goto l00009D0C
	// succ:  l00009D0C
l00009CCC:
	r3 = (word32) Mem0[r6:word16]
	F = r5 >u r3
	branch F l00009CCC_ds_t
	// succ:  l00009CCC_ds_f l00009CCC_ds_t
l00009CCC_ds_f:
	r14 = r4 + -8
	CV = cond(r14)
	goto l00009CDC
	// succ:  l00009CDC
l00009CCC_ds_t:
	r14 = r4 + -8
	CV = cond(r14)
	goto l00009CEC
	// succ:  l00009CEC
l00009CDC:
	r3 = (word32) Mem0[r14 + 3:byte]
	r3 = r3 & 0x0000007F
	Mem0[r1 + 2:byte] = SLICE(r3, byte, 0)
	goto l00009D10
	// succ:  l00009D10
l00009CEC:
	r4 = (word32) Mem0[r4 + 16:word16]
	r6 = r4 - 1
	CV = cond(r6)
	r3 = r6 - r3
	CV = cond(r3)
	r3 = r3 + r5
	CV = cond(r3)
	call fn0000FEDC (retsize: 0;)
	r3 = (word32) Mem0[r14 + 3:byte]
	r11 = r11 + r3
	CV = cond(r11)
	r11 = r11 & 0x0000007F
	// succ:  l00009D0C
l00009D0C:
	Mem0[r1 + 2:byte] = SLICE(r11, byte, 0)
	goto l00009D10
	// succ:  l00009D10
l00009D0C_ds_f:
	r14 = r11 & 0x000000FF
	goto l00009D8C
	// succ:  l00009D8C
l00009D0C_ds_t:
	r14 = r11 & 0x000000FF
	goto l00009DC0
	// succ:  l00009DC0
l00009D10:
	r3 = r2 + r2
	CV = cond(r3)
	r4 = 0x00000001
	r3 = r3 + r2
	CV = cond(r3)
	r4 = r4 | 0x00002E90
	r3 = r3 << 0x00000003
	r14 = r1 + -3
	CV = cond(r14)
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r3 = r3 + r4
	CV = cond(r3)
	r2 = r2 << 0x00000003
	r4 = (word32) Mem0[r3 + 3:byte]
	Mem0[r1 + 3:byte] = SLICE(r4, byte, 0)
	r4 = Mem0[r3 + 20:word32]
	r3 = (word32) Mem0[r1 + 2:byte]
	r3 = r4 & r3
	r4 = r1 + -1
	CV = cond(r4)
	Mem0[r1 + 2:byte] = SLICE(r3, byte, 0)
	r3 = r14 | 0x00000000
	call fn0000D214 (retsize: 0;)
	r3 = r14 | 0x00000000
	r4 = r1 + -2
	CV = cond(r4)
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r16 = r11 | 0x00000000
	call fn0000D298 (retsize: 0;)
	r3 = 0x00000001
	r11 = r16 | r11
	r3 = r3 | 0x00003010
	r2 = r2 + r3
	CV = cond(r2)
	r2 = (word32) Mem0[r2 + 7:byte]
	F = r2 == 0x00000000
	branch F l00009D0C_ds_t
	goto l00009D0C_ds_f
	// succ:  l00009D0C_ds_f l00009D0C_ds_t
l00009D8C:
	r2 = (word32) Mem0[r1 + 2:byte]
	r3 = (word32) Mem0[r1 + 1:byte]
	F = r2 <u r3
	branch F l00009D8C_ds_t
	// succ:  l00009D8C_ds_f l00009D8C_ds_t
l00009D8C_ds_f:
	goto l00009DA0
	// succ:  l00009DA0
l00009D8C_ds_t:
	goto l00009DA8
	// succ:  l00009DA8
l00009DA0:
	r2 = r2 - r3
	CV = cond(r2)
	goto l00009DAC
	// succ:  l00009DAC
l00009DA8:
	r2 = r3 - r2
	CV = cond(r2)
	// succ:  l00009DAC
l00009DAC:
	Mem0[r1 + 2:byte] = SLICE(r2, byte, 0)
	r3 = (word32) Mem0[r1 + 2:byte]
	r3 = r3 << 0x00000004
	r3 = r3 + -100
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
l00009DC0:
	r11 = r14 | 0x00000000
	// succ:  l00009DC4
l00009DC4:
	r1 = r1 + -20
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00009C2C_exit
fn00009C2C_exit:


// fn00009DDC
// Return size: 0
void fn00009DDC()
fn00009DDC_entry:
	r1 = fp
	// succ:  l00009DDC
l00009DDC:
	Mem0[r1 - 8:word32] = r2
	Mem0[r1 - 4:word32] = r9
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r1 = r1 - 12
	CV = cond(r1)
	r11 = 0x00000000 - 22
	CV = cond(r11)
	F = r3 >u 0x00000016
	branch F l00009DDC_ds_t
	// succ:  l00009DDC_ds_f l00009DDC_ds_t
l00009DDC_ds_f:
	Mem0[r1 + 2:byte] = SLICE(r2, byte, 0)
	goto l00009DFC
	// succ:  l00009DFC
l00009DDC_ds_t:
	Mem0[r1 + 2:byte] = SLICE(r2, byte, 0)
	goto l00009EC0
	// succ:  l00009EC0
l00009DFC:
	F = r3 == 0x00000011
	branch F l00009DFC_ds_t
	// succ:  l00009DFC_ds_f l00009DFC_ds_t
l00009DFC_ds_f:
	r11 = 0x00000000 + -3300
	CV = cond(r11)
	goto l00009E08
	// succ:  l00009E08
l00009DFC_ds_t:
	r11 = 0x00000000 + -3300
	CV = cond(r11)
	goto l00009EC0
	// succ:  l00009EC0
l00009E08:
	F = r3 == 0x00000012
	branch F l00009E08_ds_t
	// succ:  l00009E08_ds_f l00009E08_ds_t
l00009E08_ds_f:
	r11 = 0x00000000 + -1200
	CV = cond(r11)
	goto l00009E14
	// succ:  l00009E14
l00009E08_ds_t:
	r11 = 0x00000000 + -1200
	CV = cond(r11)
	goto l00009EC0
	// succ:  l00009EC0
l00009E14:
	F = r3 == 0x00000013
	branch F l00009E14_ds_t
	// succ:  l00009E14_ds_f l00009E14_ds_t
l00009E14_ds_f:
	F = r3 == 0x00000014
	goto l00009E20
	// succ:  l00009E20
l00009E14_ds_t:
	F = r3 == 0x00000014
	goto l00009EC0
	// succ:  l00009EC0
l00009E20:
	branch F l00009E20_ds_t
	// succ:  l00009E20_ds_f l00009E20_ds_t
l00009E20_ds_f:
	r11 = 0x00000000 + -1100
	CV = cond(r11)
	goto l00009E28
	// succ:  l00009E28
l00009E20_ds_t:
	r11 = 0x00000000 + -1100
	CV = cond(r11)
	goto l00009EC0
	// succ:  l00009EC0
l00009E28:
	F = r3 == 0x00000015
	branch F l00009E28_ds_t
	// succ:  l00009E28_ds_f l00009E28_ds_t
l00009E28_ds_f:
	r11 = 0x00000000 + -3300
	CV = cond(r11)
	goto l00009E34
	// succ:  l00009E34
l00009E28_ds_t:
	r11 = 0x00000000 + -3300
	CV = cond(r11)
	goto l00009EC0
	// succ:  l00009EC0
l00009E34:
	F = r3 == 0x00000016
	branch F l00009E34_ds_t
	// succ:  l00009E34_ds_f l00009E34_ds_t
l00009E34_ds_f:
	r4 = r1 + -2
	CV = cond(r4)
	goto l00009E40
	// succ:  l00009E40
l00009E34_ds_t:
	r4 = r1 + -2
	CV = cond(r4)
	goto l00009EC0
	// succ:  l00009EC0
l00009E40:
	r2 = r3 + r3
	CV = cond(r2)
	r2 = r2 + r3
	CV = cond(r2)
	r3 = 0x00000001
	r2 = r2 << 0x00000003
	r3 = r3 | 0x00002E90
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r2 = r2 + r3
	CV = cond(r2)
	r3 = (word32) Mem0[r2 + 3:byte]
	Mem0[r1 + 3:byte] = SLICE(r3, byte, 0)
	r3 = r1 + -3
	CV = cond(r3)
	call fn0000D214 (retsize: 0;)
	r3 = (word32) Mem0[r1 + 2:byte]
	r11 = Mem0[r2 + 20:word32]
	r4 = r2 + -8
	CV = cond(r4)
	r11 = r11 & r3
	r3 = (word32) Mem0[r4 + 2:word16]
	F = r3 <= r11
	branch F l00009E40_ds_t
	// succ:  l00009E40_ds_f l00009E40_ds_t
l00009E40_ds_f:
	F = r11 != r3
	goto l00009E8C
	// succ:  l00009E8C
l00009E40_ds_t:
	F = r11 != r3
	goto l00009E9C
	// succ:  l00009E9C
l00009E8C:
	r3 = (word32) Mem0[r4:word16]
	r2 = (word32) Mem0[r2 + 4:word16]
	goto l00009EBC
	// succ:  l00009EBC
l00009E9C:
	branch F l00009E9C_ds_t
	// succ:  l00009E9C_ds_f l00009E9C_ds_t
l00009E9C_ds_f:
	r4 = r2 + -12
	CV = cond(r4)
	goto l00009EA4
	// succ:  l00009EA4
l00009E9C_ds_t:
	r4 = r2 + -12
	CV = cond(r4)
	goto l00009EAC
	// succ:  l00009EAC
l00009EA4:
	r11 = (word32) Mem0[r4:word16]
	goto l00009EC0
	// succ:  l00009EC0
l00009EAC:
	r2 = (word32) Mem0[r2 + 16:word16]
	r11 = r11 - r3
	CV = cond(r11)
l00009EBC:
	r11 = r11 + r2
	CV = cond(r11)
	// succ:  l00009EC0
l00009EC0:
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00009DDC_exit
fn00009DDC_exit:


// fn00009ED0
// Return size: 0
void fn00009ED0()
fn00009ED0_entry:
	r1 = fp
	// succ:  l00009ED0
l00009ED0:
	Mem0[r1 - 20:word32] = r2
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 16:word32] = r14
	Mem0[r1 - 12:word32] = r16
	Mem0[r1 - 8:word32] = r18
	r6 = r3 | 0x00000000
	r1 = r1 - 24
	CV = cond(r1)
	F = r3 >u 0x0000000F
	branch F l00009ED0_ds_t
	// succ:  l00009ED0_ds_f l00009ED0_ds_t
l00009ED0_ds_f:
	r2 = r4 | 0x00000000
	goto l00009EF8
	// succ:  l00009EF8
l00009ED0_ds_t:
	r2 = r4 | 0x00000000
	goto l00009F7C
	// succ:  l00009F7C
l00009EF8:
	r6 = r3 << 0x00000003
	r3 = 0x00000001
	r16 = r1 + -3
	CV = cond(r16)
	r3 = r3 | 0x00003010
	r14 = r1 + -2
	CV = cond(r14)
	r6 = r6 + r3
	CV = cond(r6)
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r3 = (word32) Mem0[r6 + 3:byte]
	r6 = r6 + -4
	CV = cond(r6)
	Mem0[r1 + 3:byte] = SLICE(r3, byte, 0)
	Mem0[r6 + 2:byte] = SLICE(r4, byte, 0)
	r3 = r16 | 0x00000000
	r4 = r14 | 0x00000000
	r18 = (word32) Mem0[r6:word16]
	call fn0000D214 (retsize: 0;)
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r4 = (word32) Mem0[r1 + 2:byte]
l00009F7C:
	r3 = r3 ^ 0x00000013
	r4 = 0x00000000 - r3
	CV = cond(r4)
	r3 = r4 | r3
	F = r3 >= 0
	branch F l00009F7C_ds_t
	// succ:  l00009F7C_ds_f l00009F7C_ds_t
l00009F7C_ds_f:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	goto l00009F94
	// succ:  l00009F94
l00009F7C_ds_t:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	goto l00009FB8
	// succ:  l00009FB8
l00009F94:
	r3 = r6 ^ 0x00000011
	r4 = 0x00000000 - r3
	CV = cond(r4)
	r3 = r4 | r3
	F = r3 >= 0
	branch F l00009F94_ds_t
	// succ:  l00009F94_ds_f l00009F94_ds_t
l00009F94_ds_f:
	F = r6 != 0x00000014
	goto l00009FAC
	// succ:  l00009FAC
l00009F94_ds_t:
	F = r6 != 0x00000014
	goto l00009FB4
	// succ:  l00009FB4
l00009FAC:
	branch F l00009FAC_ds_t
	// succ:  l00009FAC_ds_f l00009FAC_ds_t
l00009FAC_ds_f:
	F = r6 != 0x00000012
	goto l00009FB4
	// succ:  l00009FB4
l00009FAC_ds_t:
	F = r6 != 0x00000012
	goto l0000A000
	// succ:  l0000A000
l00009FB4:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	// succ:  l00009FB8
l00009FB8:
	r4 = 0x00000001
l0000A000:
	branch F l0000A000_ds_t
	// succ:  l0000A000_ds_f l0000A000_ds_t
l0000A000_ds_f:
	F = r6 != 0x00000015
	goto l0000A008
	// succ:  l0000A008
l0000A000_ds_t:
	F = r6 != 0x00000015
	goto l0000A014
	// succ:  l0000A014
l0000A008:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -9
	CV = cond(r4)
	goto l0000A024
	// succ:  l0000A024
l0000A014:
	branch F l0000A014_ds_t
	// succ:  l0000A014_ds_f l0000A014_ds_t
l0000A014_ds_f:
	F = r6 != 0x00000016
	goto l0000A01C
	// succ:  l0000A01C
l0000A014_ds_t:
	F = r6 != 0x00000016
	goto l0000A02C
	// succ:  l0000A02C
l0000A01C:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -7
	CV = cond(r4)
	// succ:  l0000A024
l0000A024:
	r5 = r2 | 0x00000000
	goto l0000A048
	// succ:  l0000A048
l0000A02C:
	branch F l0000A02C_ds_t
	// succ:  l0000A02C_ds_f l0000A02C_ds_t
l0000A02C_ds_f:
	r5 = 0x00000000 - r2
	CV = cond(r5)
	goto l0000A034
	// succ:  l0000A034
l0000A02C_ds_t:
	r5 = 0x00000000 - r2
	CV = cond(r5)
	goto l0000A050
	// succ:  l0000A050
l0000A034:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r5 | r2
	r4 = 0x00000000 + -5
	CV = cond(r4)
	r5 = r2 ^ 0x0000FFFF
	r5 = r5 >>u 0x0000001F
	// succ:  l0000A048
l0000A048:
	call fn000098AC (retsize: 0;)
	// succ:  l0000A050
l0000A050:
	r1 = r1 + -24
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 20:word32]
	r14 = Mem0[r1 - 16:word32]
	r16 = Mem0[r1 - 12:word32]
	r18 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00009ED0_exit
fn00009ED0_exit:


// fn0000A070
// Return size: 0
void fn0000A070()
fn0000A070_entry:
	r1 = fp
	// succ:  l0000A070
l0000A070:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 12:word32] = r2
	Mem0[r1 - 8:word32] = r14
	F = r3 >u 0x0000000F
	branch F l0000A070_ds_t
	// succ:  l0000A070_ds_f l0000A070_ds_t
l0000A070_ds_f:
	r1 = r1 - 16
	CV = cond(r1)
	goto l0000A088
	// succ:  l0000A088
l0000A070_ds_t:
	r1 = r1 - 16
	CV = cond(r1)
	goto l0000A0E4
	// succ:  l0000A0E4
l0000A088:
	r2 = r3 << 0x00000003
	r3 = 0x00000001
	r4 = r1 + -2
	CV = cond(r4)
	r3 = r3 | 0x00003010
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r2 = r2 + r3
	CV = cond(r2)
	r3 = (word32) Mem0[r2 + 3:byte]
	r2 = r2 + -4
	CV = cond(r2)
	Mem0[r1 + 3:byte] = SLICE(r3, byte, 0)
	r3 = r1 + -3
	CV = cond(r3)
	r14 = (word32) Mem0[r2:word16]
	call fn0000D214 (retsize: 0;)
	r11 = (word32) Mem0[r1 + 2:byte]
l0000A0E4:
	r2 = r3 ^ 0x00000013
	r4 = 0x00000000 - r2
	CV = cond(r4)
	r2 = r4 | r2
	F = r2 >= 0
	branch F l0000A0E4_ds_t
	// succ:  l0000A0E4_ds_f l0000A0E4_ds_t
l0000A0E4_ds_f:
	r2 = r3 ^ 0x00000011
	goto l0000A0FC
	// succ:  l0000A0FC
l0000A0E4_ds_t:
	r2 = r3 ^ 0x00000011
	goto l0000A118
	// succ:  l0000A118
l0000A0FC:
	r4 = 0x00000000 - r2
	CV = cond(r4)
	r2 = r4 | r2
	F = r2 >= 0
	branch F l0000A0FC_ds_t
	// succ:  l0000A0FC_ds_f l0000A0FC_ds_t
l0000A0FC_ds_f:
	F = r3 != 0x00000014
	goto l0000A110
	// succ:  l0000A110
l0000A0FC_ds_t:
	F = r3 != 0x00000014
	goto l0000A118
	// succ:  l0000A118
l0000A110:
	branch F l0000A110_ds_t
	// succ:  l0000A110_ds_f l0000A110_ds_t
l0000A110_ds_f:
	F = r3 != 0x00000012
	goto l0000A118
	// succ:  l0000A118
l0000A110_ds_t:
	F = r3 != 0x00000012
	goto l0000A130
	// succ:  l0000A130
l0000A118:
	r2 = 0x00000001
	r2 = r2 | 0x00003498
	r11 = Mem0[r2:word32]
l0000A130:
	branch F l0000A130_ds_t
	// succ:  l0000A130_ds_f l0000A130_ds_t
l0000A130_ds_f:
	F = r3 != 0x00000015
	goto l0000A138
	// succ:  l0000A138
l0000A130_ds_t:
	F = r3 != 0x00000015
	goto l0000A144
	// succ:  l0000A144
l0000A138:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -9
	CV = cond(r4)
	goto l0000A150
	// succ:  l0000A150
l0000A144:
	branch F l0000A144_ds_t
	// succ:  l0000A144_ds_f l0000A144_ds_t
l0000A144_ds_f:
	r4 = 0x00000000 + -7
	CV = cond(r4)
	goto l0000A14C
	// succ:  l0000A14C
l0000A144_ds_t:
	r4 = 0x00000000 + -7
	CV = cond(r4)
	goto l0000A160
	// succ:  l0000A160
l0000A14C:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	// succ:  l0000A150
l0000A150:
	call fn00009918 (retsize: 0;)
	r1 = r1 + -16
	CV = cond(r1)
	goto l0000A18C
	// succ:  l0000A18C
l0000A160:
	F = r3 != 0x00000016
	branch F l0000A160_ds_t
	// succ:  l0000A160_ds_f l0000A160_ds_t
l0000A160_ds_f:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l0000A16C
	// succ:  l0000A16C
l0000A160_ds_t:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l0000A188
	// succ:  l0000A188
l0000A16C:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -5
	CV = cond(r4)
	call fn00009918 (retsize: 0;)
	r2 = 0x00000000 - r11
	CV = cond(r2)
	r11 = r2 | r11
	r11 = r11 ^ 0x0000FFFF
	r11 = r11 >>u 0x0000001F
	// succ:  l0000A188
l0000A188:
	r1 = r1 + -16
	CV = cond(r1)
	// succ:  l0000A18C
l0000A18C:
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000A070_exit
fn0000A070_exit:


// fn0000A22C
// Return size: 0
void fn0000A22C()
fn0000A22C_entry:
	r1 = fp
	// succ:  l0000A22C
l0000A22C:
	Mem0[r1 - 8:word32] = r2
	r2 = r3 | 0x00000000
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x000034AC
	r3 = Mem0[r3:word32]
	F = r3 != 0x00000001
	branch F l0000A22C_ds_t
	// succ:  l0000A22C_ds_f l0000A22C_ds_t
l0000A22C_ds_f:
	r1 = r1 - 24
	CV = cond(r1)
	goto l0000A250
	// succ:  l0000A250
l0000A22C_ds_t:
	r1 = r1 - 24
	CV = cond(r1)
	goto l0000A2EC
	// succ:  l0000A2EC
l0000A250:
	r3 = 0x00000000 + -72
	CV = cond(r3)
	r5 = 0x00000000 + -73
	CV = cond(r5)
	Mem0[r1 + 8:byte] = SLICE(r3, byte, 0)
	Mem0[r1 + 9:byte] = SLICE(r5, byte, 0)
	r3 = r1 + -8
	CV = cond(r3)
	r4 = r1 | 0x00000000
	r5 = 0x00000000 + -6
	CV = cond(r5)
	call fn0000D214 (retsize: 0;)
	r3 = (word32) Mem0[r1 + 1:byte]
	r4 = r3 & 0x00000001
	F = r4 == 0x00000000
	branch F l0000A250_ds_t
	// succ:  l0000A250_ds_f l0000A250_ds_t
l0000A250_ds_f:
	r4 = r3 & 0x00000002
	goto l0000A284
	// succ:  l0000A284
l0000A250_ds_t:
	r4 = r3 & 0x00000002
	goto l0000A298
	// succ:  l0000A298
l0000A284:
	r4 = Mem0[r2:word32]
	r5 = 0x00000004
	r4 = r4 | r5
	Mem0[r2:word32] = r4
	r4 = r3 & 0x00000002
	// succ:  l0000A298
l0000A298:
	F = r4 == 0x00000000
	branch F l0000A298_ds_t
	// succ:  l0000A298_ds_f l0000A298_ds_t
l0000A298_ds_f:
	r4 = r3 & 0x00000020
	goto l0000A2A4
	// succ:  l0000A2A4
l0000A298_ds_t:
	r4 = r3 & 0x00000020
	goto l0000A2B8
	// succ:  l0000A2B8
l0000A2A4:
	r4 = Mem0[r2:word32]
	r5 = 0x00000002
	r4 = r4 | r5
	Mem0[r2:word32] = r4
	r4 = r3 & 0x00000020
	// succ:  l0000A2B8
l0000A2B8:
	F = r4 == 0x00000000
	branch F l0000A2B8_ds_t
	// succ:  l0000A2B8_ds_f l0000A2B8_ds_t
l0000A2B8_ds_f:
	r5 = 0x00000001
	goto l0000A2C4
	// succ:  l0000A2C4
l0000A2B8_ds_t:
	r5 = 0x00000001
	goto l0000A2D0
	// succ:  l0000A2D0
l0000A2C4:
	r4 = Mem0[r2:word32]
	r4 = r4 | r5
	Mem0[r2:word32] = r4
	// succ:  l0000A2D0
l0000A2D0:
	r3 = r3 & 0x00000040
	F = r3 == 0x00000000
	branch F l0000A2D0_ds_t
	// succ:  l0000A2D0_ds_f l0000A2D0_ds_t
l0000A2D0_ds_f:
	goto l0000A2E0
	// succ:  l0000A2E0
l0000A2D0_ds_t:
	goto l0000A2EC
	// succ:  l0000A2EC
l0000A2E0:
	r3 = Mem0[r2:word32]
	r3 = r3 | 0x00008000
	Mem0[r2:word32] = r3
	// succ:  l0000A2EC
l0000A2EC:
	r1 = r1 + -24
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000A22C_exit
fn0000A22C_exit:


// fn0000A300
// Return size: 0
void fn0000A300()
fn0000A300_entry:
	r1 = fp
	// succ:  l0000A300
l0000A300:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x000034AC
	Mem0[r1 - 8:word32] = r2
	r3 = Mem0[r3:word32]
	r1 = r1 - 12
	CV = cond(r1)
	F = r3 != 0x00000001
	branch F l0000A300_ds_t
	// succ:  l0000A300_ds_f l0000A300_ds_t
l0000A300_ds_f:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000A324
	// succ:  l0000A324
l0000A300_ds_t:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000A354
	// succ:  l0000A354
l0000A324:
	r2 = 0x00000000 + -72
	CV = cond(r2)
	r3 = r1 + -2
	CV = cond(r3)
	Mem0[r1 + 2:byte] = SLICE(r2, byte, 0)
	r2 = 0x00000000 - 1
	CV = cond(r2)
	r4 = r1 | 0x00000000
	Mem0[r1:byte] = SLICE(r2, byte, 0)
	r2 = 0x00000000 + -73
	CV = cond(r2)
	r5 = 0x00000000 + -2
	CV = cond(r5)
	Mem0[r1 + 3:byte] = SLICE(r2, byte, 0)
	r2 = 0x00000000 - 1
	CV = cond(r2)
	Mem0[r1 + 1:byte] = SLICE(r2, byte, 0)
	call fn0000D298 (retsize: 0;)
l0000A354:
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000A300_exit
fn0000A300_exit:


// fn0000A364
// Return size: 0
void fn0000A364()
fn0000A364_entry:
	r1 = fp
	// succ:  l0000A364
l0000A364:
	Mem0[r1 - 12:word32] = r2
	r2 = r3 | 0x00000000
	r3 = 0x00000001
	Mem0[r1 - 8:word32] = r14
	r3 = r3 | 0x000034AC
	Mem0[r1 - 4:word32] = r9
	r5 = Mem0[r3:word32]
	r1 = r1 - 80
	CV = cond(r1)
	F = r5 != 0x00000001
	branch F l0000A364_ds_t
	// succ:  l0000A364_ds_f l0000A364_ds_t
l0000A364_ds_f:
	r14 = 0x00000000 + 0
	CV = cond(r14)
	goto l0000A390
	// succ:  l0000A390
l0000A364_ds_t:
	r14 = 0x00000000 + 0
	CV = cond(r14)
	goto l0000A5B8
	// succ:  l0000A5B8
l0000A390:
	r3 = 0x00000000 - 1
	CV = cond(r3)
	r14 = r1 + -24
	CV = cond(r14)
	Mem0[r1 + 24:byte] = SLICE(r3, byte, 0)
	r4 = r1 + -67
	CV = cond(r4)
	r3 = r14 | 0x00000000
	Mem0[r1 + 67:byte] = SLICE(r5, byte, 0)
	call fn0000D298 (retsize: 0;)
	r3 = r14 | 0x00000000
	r4 = 0x00000000 + -32
	CV = cond(r4)
	// succ:  l0000A3B4
l0000A3B4:
	Mem0[r3:byte] = SLICE(r4, byte, 0)
	r4 = r4 + -1
	CV = cond(r4)
	r4 = r4 & 0x000000FF
	F = r4 != 0x00000037
	branch F l0000A3B4_ds_t
	// succ:  l0000A3B4_ds_f l0000A3B4_ds_t
l0000A3B4_ds_f:
	r3 = r3 + -1
	CV = cond(r3)
	goto l0000A3CC
	// succ:  l0000A3CC
l0000A3B4_ds_t:
	r3 = r3 + -1
	CV = cond(r3)
	goto l0000A3B4
	// succ:  l0000A3B4
l0000A3CC:
	r3 = r1 + -24
	CV = cond(r3)
	r4 = r1 | 0x00000000
	r5 = 0x00000000 + -23
	CV = cond(r5)
	call fn0000D214 (retsize: 0;)
	r3 = (word32) Mem0[r1:byte]
	Mem0[r1 + 63:byte] = SLICE(r3, byte, 0)
	r3 = (word32) Mem0[r1 + 1:byte]
	Mem0[r1 + 62:byte] = SLICE(r3, byte, 0)
	r3 = (word32) Mem0[r1 + 2:byte]
	Mem0[r1 + 61:byte] = SLICE(r3, byte, 0)
	r3 = (word32) Mem0[r1 + 3:byte]
	Mem0[r1 + 60:byte] = SLICE(r3, byte, 0)
	r3 = (word32) Mem0[r1 + 4:byte]
	Mem0[r1 + 59:byte] = SLICE(r3, byte, 0)
	r3 = (word32) Mem0[r1 + 6:byte]
	r4 = (word32) Mem0[r1 + 5:byte]
	r3 = r3 & 0x0000003F
	r4 = r4 & 0x0000003F
	r3 = r3 << 0x00000006
	r5 = (word32) Mem0[r1 + 9:byte]
	r4 = r4 | r3
	r3 = (word32) Mem0[r1 + 7:byte]
	r3 = r3 & 0x0000003F
	r5 = r5 & 0x0000003F
	r3 = r3 << 0x0000000C
	r5 = r5 << 0x00000018
	r7 = (word32) Mem0[r1 + 11:byte]
	r4 = r4 | r3
	r3 = (word32) Mem0[r1 + 8:byte]
	r3 = r3 & 0x0000003F
	r7 = r7 << 0x00000004
	r3 = r3 << 0x00000012
	r14 = r11 | 0x00000000
	r4 = r4 | r3
	r3 = (word32) Mem0[r1 + 10:byte]
	r3 = r3 & 0x0000003F
	r4 = r4 | r5
	r5 = r3 << 0x0000001E
	r6 = r3 >>u 0x00000002
	r4 = r4 | r5
	r5 = (word32) Mem0[r1 + 12:byte]
	r5 = r5 & 0x00000003
	r3 = r7 | r6
	r5 = r5 << 0x0000000C
	r6 = (word32) Mem0[r1 + 20:byte]
	r3 = r3 | r5
	r5 = (word32) Mem0[r1 + 16:byte]
	r5 = r5 & 0x0000003F
	r6 = r6 & 0x0000003F
	r5 = r5 << 0x0000000E
	r6 = r6 << 0x00000006
	Mem0[r1 + 58:byte] = SLICE(r4, byte, 0)
	r3 = r3 | r5
	r5 = (word32) Mem0[r1 + 17:byte]
	r5 = r5 & 0x0000003F
	r5 = r5 << 0x00000014
	r3 = r3 | r5
	r5 = (word32) Mem0[r1 + 18:byte]
	r5 = r5 << 0x0000001A
	r3 = r3 | r5
	r5 = (word32) Mem0[r1 + 21:byte]
	r5 = r5 & 0x0000003F
	Mem0[r1 + 54:byte] = SLICE(r3, byte, 0)
	r5 = r5 << 0x0000000C
	r5 = r6 | r5
	r6 = (word32) Mem0[r1 + 19:byte]
	r6 = r6 & 0x0000003F
	r5 = r5 | r6
	r6 = (word32) Mem0[r1 + 22:byte]
	r6 = r6 & 0x0000003F
	r6 = r6 << 0x00000012
	r5 = r5 | r6
	r6 = r4 >>u 0x00000008
	Mem0[r1 + 57:byte] = SLICE(r6, byte, 0)
	r6 = r4 >>u 0x00000010
	r4 = r4 >>u 0x00000018
	Mem0[r1 + 56:byte] = SLICE(r6, byte, 0)
	Mem0[r1 + 55:byte] = SLICE(r4, byte, 0)
	r4 = r3 >>u 0x00000008
	Mem0[r1 + 53:byte] = SLICE(r4, byte, 0)
	r4 = r3 >>u 0x00000010
	r3 = r3 >>u 0x00000018
	Mem0[r1 + 52:byte] = SLICE(r4, byte, 0)
	Mem0[r1 + 51:byte] = SLICE(r3, byte, 0)
	Mem0[r1 + 50:byte] = SLICE(r5, byte, 0)
	r3 = r5 >>u 0x00000008
	r5 = r5 >>u 0x00000010
	r4 = r1 + -48
	CV = cond(r4)
	Mem0[r1 + 49:byte] = SLICE(r3, byte, 0)
	Mem0[r1 + 48:byte] = SLICE(r5, byte, 0)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r8 = Mem0[r2 + 40:word32]
	r7 = Mem0[r2 + 44:word32]
	r6 = Mem0[r2 + 48:word32]
	r5 = Mem0[r2 + 52:word32]
	r11 = (word32) Mem0[r4:byte]
l0000A5B8:
	r1 = r1 + -80
	CV = cond(r1)
	r11 = r14 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000A364_exit
fn0000A364_exit:


// fn0000A5D0
// Return size: 0
void fn0000A5D0()
fn0000A5D0_entry:
	r1 = fp
	// succ:  l0000A5D0
l0000A5D0:
	r4 = Mem0[r3 + 48:word32]
	F = r4 != 0x00000001
	r4 = Mem0[r3 + 40:word32]
	branch F l0000A5D0_ds_t
	// succ:  l0000A5D0_ds_f l0000A5D0_ds_t
l0000A5D0_ds_f:
	r3 = Mem0[r3 + 44:word32]
	goto l0000A5E4
	// succ:  l0000A5E4
l0000A5D0_ds_t:
	r3 = Mem0[r3 + 44:word32]
	goto l0000A5FC
	// succ:  l0000A5FC
l0000A5E4:
	r5 = 0x00000001
	r5 = r5 | 0x0000349C
	Mem0[r5:word32] = r4
	r4 = 0x00000001
	r4 = r4 | 0x000034A0
	goto l0000A628
	// succ:  l0000A628
l0000A5FC:
	r5 = r4 + r4
	CV = cond(r5)
	r4 = r4 << 0x00000003
	r4 = r5 + r4
	CV = cond(r4)
	r5 = 0x00000001
	r5 = r5 | 0x000034A4
	Mem0[r5:word32] = r4
	r4 = r3 + r3
	CV = cond(r4)
	r3 = r3 << 0x00000003
	r3 = r4 + r3
	CV = cond(r3)
	r4 = 0x00000001
	r4 = r4 | 0x000034A8
	// succ:  l0000A628
l0000A628:
	Mem0[r4:word32] = r3
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn0000A5D0_exit
fn0000A5D0_exit:


// fn0000A634
// Return size: 0
void fn0000A634()
fn0000A634_entry:
	r1 = fp
	// succ:  l0000A634
l0000A634:
	r4 = r3 + -40
	CV = cond(r4)
	r3 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x00004000
	r1 = r1 - 4
	CV = cond(r1)
	r3 = r3 + -856
	CV = cond(r3)
	r5 = 0x00000000 + -80
	CV = cond(r5)
	call fn0000DF10 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn0000A634_exit
fn0000A634_exit:


// fn0000A664
// Return size: 0
void fn0000A664()
fn0000A664_entry:
	r1 = fp
	// succ:  l0000A664
l0000A664:
	r3 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x00004000
	r3 = Mem0[r3 + 948:word32]
	F = r3 == 0x00000000
	branch F l0000A664_ds_t
	// succ:  l0000A664_ds_f l0000A664_ds_t
l0000A664_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000A680
	// succ:  l0000A680
l0000A664_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000A688
	// succ:  l0000A688
l0000A680:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008B60 (retsize: 0;)
l0000A688:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -6
	CV = cond(r4)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r1 = r1 + -4
	CV = cond(r1)
	r4 = 0x00000000 + -6
	CV = cond(r4)
	r9 = Mem0[r1 - 4:word32]
	r5 = r3 | 0x00000000
	// succ:  l0000A6A8_thunk_fn000097BC
l0000A6A8_thunk_fn000097BC:
	call fn000097BC (retsize: 0;)
	return
	// succ:  fn0000A664_exit
fn0000A664_exit:


// fn0000A6B0
// Return size: 0
void fn0000A6B0()
fn0000A6B0_entry:
	r1 = fp
	// succ:  l0000A6B0
l0000A6B0:
	Mem0[r1 - 4:word32] = r9
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r1 = r1 - 4
	CV = cond(r1)
	r4 = 0x00000000 + -6
	CV = cond(r4)
	call fn00009918 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	F = r11 != r3
	branch F l0000A6B0_ds_t
	// succ:  l0000A6B0_ds_f l0000A6B0_ds_t
l0000A6B0_ds_f:
	goto l0000A6D4
	// succ:  l0000A6D4
l0000A6B0_ds_t:
	goto l0000A6F8
	// succ:  l0000A6F8
l0000A6D4:
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -6
	CV = cond(r4)
	call fn00009918 (retsize: 0;)
	r3 = 0x00000000 - r11
	CV = cond(r3)
	r11 = r3 | r11
	r3 = r11 ^ 0x0000FFFF
	r3 = r3 >>u 0x0000001F
	// succ:  l0000A6F8
l0000A6F8:
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = r3 | 0x00000000
	return
	// succ:  fn0000A6B0_exit
fn0000A6B0_exit:


// fn0000A708
// Return size: 0
void fn0000A708()
fn0000A708_entry:
	r1 = fp
	// succ:  l0000A708
l0000A708:
	Mem0[r1 - 16:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r2 = r2 | 0x000034AC
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 8:word32] = r16
	r2 = Mem0[r2:word32]
	F = r2 != 0x00000001
	branch F l0000A708_ds_t
	// succ:  l0000A708_ds_f l0000A708_ds_t
l0000A708_ds_f:
	r1 = r1 - 20
	CV = cond(r1)
	goto l0000A730
	// succ:  l0000A730
l0000A708_ds_t:
	r1 = r1 - 20
	CV = cond(r1)
	goto l0000A774
	// succ:  l0000A774
l0000A730:
	r3 = 0x00000000 + -50
	CV = cond(r3)
	r16 = r1 + -3
	CV = cond(r16)
	r14 = r1 + -2
	CV = cond(r14)
	Mem0[r1 + 3:byte] = SLICE(r3, byte, 0)
	r4 = r14 | 0x00000000
	r3 = r16 | 0x00000000
	r5 = r2 | 0x00000000
	call fn0000D214 (retsize: 0;)
	r3 = (word32) Mem0[r1 + 2:byte]
	r3 = r3 | 0x00000040
	r4 = r14 | 0x00000000
	Mem0[r1 + 2:byte] = SLICE(r3, byte, 0)
	r5 = r2 | 0x00000000
	r3 = r16 | 0x00000000
	call fn0000D298 (retsize: 0;)
	// succ:  l0000A76C
l0000A76C:
	goto l0000A76C
	// succ:  l0000A76C
l0000A774:
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002C28
	call fn0000EDF4 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -5
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -9
	CV = cond(r4)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	call fn000098AC (retsize: 0;)
	r4 = 0x00000000 + -8
	CV = cond(r4)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1000
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -8
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -9
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r4 = 0x00000000 + -5
	CV = cond(r4)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -100
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	call fn00009B80 (retsize: 0;)
	r1 = r1 + -20
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000A708_exit
fn0000A708_exit:


// fn0000A92C
// Return size: 0
void fn0000A92C()
fn0000A92C_entry:
	r1 = fp
	// succ:  l0000A92C
l0000A92C:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 8:word32] = r16
	r1 = r1 - 20
	CV = cond(r1)
	r2 = 0x00000001
	call fn0000AC84 (retsize: 0;)
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r2 | 0x000034AC
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	call fn0000BAC8 (retsize: 0;)
	call fn0000897C (retsize: 0;)
	r3 = 0x00000000 + -11
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B950 (retsize: 0;)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = 0x00000000 + -12
	CV = cond(r3)
	call fn0000B950 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = 0x00000000 + -33
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r2 = Mem0[r2:word32]
	F = r2 != 0x00000001
	branch F l0000A92C_ds_t
	// succ:  l0000A92C_ds_f l0000A92C_ds_t
l0000A92C_ds_f:
	r14 = r1 + -2
	CV = cond(r14)
	goto l0000A9B4
	// succ:  l0000A9B4
l0000A92C_ds_t:
	r14 = r1 + -2
	CV = cond(r14)
	goto l0000AA20
	// succ:  l0000AA20
l0000A9B4:
	r16 = r1 + -3
	CV = cond(r16)
	r3 = 0x00000000 + -16
	CV = cond(r3)
	r4 = r14 | 0x00000000
	Mem0[r1 + 3:byte] = SLICE(r3, byte, 0)
	r5 = r2 | 0x00000000
	r3 = r16 | 0x00000000
	call fn0000D214 (retsize: 0;)
	r3 = 0x00000000 + -32
	CV = cond(r3)
	r4 = r14 | 0x00000000
	Mem0[r1 + 2:byte] = SLICE(r3, byte, 0)
	r5 = r2 | 0x00000000
	r3 = r16 | 0x00000000
	call fn0000D298 (retsize: 0;)
	r3 = 0x00000000 + -17
	CV = cond(r3)
	r4 = r14 | 0x00000000
	Mem0[r1 + 3:byte] = SLICE(r3, byte, 0)
	r5 = r2 | 0x00000000
	r3 = r16 | 0x00000000
	call fn0000D214 (retsize: 0;)
	r3 = 0x00000000 + -16
	CV = cond(r3)
	r4 = r14 | 0x00000000
	Mem0[r1 + 2:byte] = SLICE(r3, byte, 0)
	r5 = r2 | 0x00000000
	r3 = r16 | 0x00000000
	call fn0000D298 (retsize: 0;)
	r1 = r1 + -20
	CV = cond(r1)
	goto l0000AA6C
	// succ:  l0000AA6C
l0000AA20:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -5
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -9
	CV = cond(r4)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	call fn000098AC (retsize: 0;)
	r4 = 0x00000000 + -8
	CV = cond(r4)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1500
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002C37
	call fn0000EDF4 (retsize: 0;)
	r1 = r1 + -20
	CV = cond(r1)
	// succ:  l0000AA6C
l0000AA6C:
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000A92C_exit
fn0000A92C_exit:


// fn0000AA80
// Return size: 0
void fn0000AA80()
fn0000AA80_entry:
	r1 = fp
	// succ:  l0000AA80
l0000AA80:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x000034AC
	Mem0[r1 - 8:word32] = r2
	r3 = Mem0[r3:word32]
	F = r3 == 0x00000001
	branch F l0000AA80_ds_t
	// succ:  l0000AA80_ds_f l0000AA80_ds_t
l0000AA80_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000AAA0
	// succ:  l0000AAA0
l0000AA80_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000AACC
	// succ:  l0000AACC
l0000AAA0:
	r2 = 0x00000000 - 2
	CV = cond(r2)
	call fn0000A92C (retsize: 0;)
	r3 = 0x000001F0
	r3 = r3 | 0x0000142C
	r4 = Mem0[r3:word32]
	r4 = r4 & r2
	Mem0[r3:word32] = r4
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	// succ:  l0000AAC4_thunk_fn0000A708
l0000AAC4_thunk_fn0000A708:
	call fn0000A708 (retsize: 0;)
	return
	// succ:  fn0000AA80_exit
l0000AACC:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	// succ:  l0000AAD4_thunk_fn00009B80
l0000AAD4_thunk_fn00009B80:
	call fn00009B80 (retsize: 0;)
	return
	// succ:  fn0000AA80_exit
fn0000AA80_exit:


// fn0000AADC
// Return size: 0
void fn0000AADC()
fn0000AADC_entry:
	r1 = fp
	// succ:  l0000AADC
l0000AADC:
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 4:word32] = r9
	r2 = 0x00000000 + -50
	CV = cond(r2)
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 8:word32] = r16
	r1 = r1 - 20
	CV = cond(r1)
	Mem0[r1 + 3:byte] = SLICE(r2, byte, 0)
	r2 = 0x00000001
	r2 = r2 | 0x000034AC
	r2 = Mem0[r2:word32]
	F = r2 != 0x00000001
	branch F l0000AADC_ds_t
	// succ:  l0000AADC_ds_f l0000AADC_ds_t
l0000AADC_ds_f:
	r4 = 0x00000000 + -2
	CV = cond(r4)
	goto l0000AB10
	// succ:  l0000AB10
l0000AADC_ds_t:
	r4 = 0x00000000 + -2
	CV = cond(r4)
	goto l0000AB60
	// succ:  l0000AB60
l0000AB10:
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002C41
	r16 = r1 + -3
	CV = cond(r16)
	r14 = r1 + -2
	CV = cond(r14)
	call fn0000EDF4 (retsize: 0;)
	r3 = r16 | 0x00000000
	r4 = r14 | 0x00000000
	r5 = r2 | 0x00000000
	call fn0000D214 (retsize: 0;)
	r3 = (word32) Mem0[r1 + 2:byte]
	r4 = 0x00000000 - 128
	CV = cond(r4)
	r5 = r2 | 0x00000000
	r3 = r3 | r4
	r4 = r14 | 0x00000000
	Mem0[r1 + 2:byte] = SLICE(r3, byte, 0)
	r3 = r16 | 0x00000000
	call fn0000D298 (retsize: 0;)
	goto l0000ABF4
	// succ:  l0000ABF4
l0000AB60:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = r3 | 0x00000000
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -7
	CV = cond(r4)
	r5 = r3 | 0x00000000
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r5 = 0x00000000 + -3
	CV = cond(r5)
	call fn00009834 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -7
	CV = cond(r4)
	r5 = 0x00000000 + -3
	CV = cond(r5)
	call fn00009834 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	call fn000098AC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -7
	CV = cond(r4)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	call fn000098AC (retsize: 0;)
	call fn0000A92C (retsize: 0;)
	r3 = 0x000001F0
	r4 = 0x00000000 + -1956
	CV = cond(r4)
	r2 = r3 | 0x00000180
	r5 = 0x00000000 - 2
	CV = cond(r5)
	Mem0[r2:word32] = r4
	r2 = r3 | 0x0000142C
	r3 = r3 | 0x00001C00
	r4 = Mem0[r2:word32]
	r4 = r4 & r5
	Mem0[r2:word32] = r4
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r3:word32] = r2
	// succ:  l0000ABF4
l0000ABF4:
	goto l0000ABF4
	// succ:  l0000ABF4
fn0000AADC_exit:


// fn0000AC14
// Return size: 0
void fn0000AC14()
fn0000AC14_entry:
	r1 = fp
	// succ:  l0000AC14
l0000AC14:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x00000170
	Mem0[r1 - 4:word32] = r9
	r2 = r2 | 0x00000030
	r1 = r1 - 12
	CV = cond(r1)
	goto l0000AC28
	// succ:  l0000AC28
l0000AC14_ds_f:
	r4 = 0x00000001
	goto l0000AC40
	// succ:  l0000AC40
l0000AC14_ds_t:
	r4 = 0x00000001
	goto l0000AC74
	// succ:  l0000AC74
l0000AC28:
	r3 = Mem0[r2:word32]
	r4 = 0x00000001
	r3 = r3 & r4
	F = r3 == 0x00000000
	branch F l0000AC14_ds_t
	goto l0000AC14_ds_f
	// succ:  l0000AC14_ds_f l0000AC14_ds_t
l0000AC40:
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002C4B
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r1:word32] = r2
	call fn0000EDF4 (retsize: 0;)
	call fn00004844 (retsize: 0;)
	call fn0000490C (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	// succ:  l0000AC6C_thunk_fn0000A92C
l0000AC6C_thunk_fn0000A92C:
	call fn0000A92C (retsize: 0;)
	return
	// succ:  fn0000AC14_exit
l0000AC74:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	goto l0000AC28
	// succ:  l0000AC28
fn0000AC14_exit:


// fn0000AC84
// Return size: 0
void fn0000AC84()
fn0000AC84_entry:
	r1 = fp
	// succ:  l0000AC84
l0000AC84:
	Mem0[r1 - 32:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r2 = r2 | 0x000034B0
	Mem0[r1 - 28:word32] = r14
	Mem0[r1 - 24:word32] = r16
	Mem0[r1 - 20:word32] = r18
	Mem0[r1 - 16:word32] = r20
	Mem0[r1 - 12:word32] = r22
	Mem0[r1 - 8:word32] = r24
	r3 = Mem0[r2:word32]
	F = r3 != 0x00000000
	branch F l0000AC84_ds_t
	// succ:  l0000AC84_ds_f l0000AC84_ds_t
l0000AC84_ds_f:
	r1 = r1 - 32
	CV = cond(r1)
	goto l0000ACBC
	// succ:  l0000ACBC
l0000AC84_ds_t:
	r1 = r1 - 32
	CV = cond(r1)
	goto l0000AD94
	// succ:  l0000AD94
l0000ACBC:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r14 = 0x0000000F
	call fn0000AF1C (retsize: 0;)
	r4 = 0x00000000 + -3
	CV = cond(r4)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r24 = r11 | 0x00000000
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1600
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
	call fn000046C0 (retsize: 0;)
	r3 = r14 | 0x00004240
	r20 = r12 | 0x00000000
	call fn0000DB28 (retsize: 0;)
	call fn000046C0 (retsize: 0;)
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r22 = r12 | 0x00000000
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1600
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
	call fn000046C0 (retsize: 0;)
	r3 = r14 | 0x00004240
	r16 = r12 | 0x00000000
	call fn0000DB28 (retsize: 0;)
	call fn000046C0 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = r24 | 0x00000000
	r18 = r12 | 0x00000000
	call fn0000B610 (retsize: 0;)
	r3 = r22 - r20
	CV = cond(r3)
	r4 = 0x00000000 + -24000
	CV = cond(r4)
	call fn0000FEDC (retsize: 0;)
	r4 = 0x00000000 + -24000
	CV = cond(r4)
	r3 = r18 - r16
	CV = cond(r3)
	call fn0000FEDC (retsize: 0;)
	r3 = r14 | 0x00000000
	r4 = r11 | 0x00000000
	call fn0000FEDC (retsize: 0;)
	r3 = 0x00000000 + -1000
	CV = cond(r3)
l0000AD94:
	r1 = r1 + -32
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 32:word32]
	r14 = Mem0[r1 - 28:word32]
	r16 = Mem0[r1 - 24:word32]
	r18 = Mem0[r1 - 20:word32]
	r20 = Mem0[r1 - 16:word32]
	r22 = Mem0[r1 - 12:word32]
	r24 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000AC84_exit
fn0000AC84_exit:


// fn0000ADBC
// Return size: 0
void fn0000ADBC()
fn0000ADBC_entry:
	r1 = fp
	// succ:  l0000ADBC
l0000ADBC:
	r4 = 0x000001F0
	r3 = 0x00000001
	r4 = r4 | 0x00001400
	r3 = r3 | 0x00003948
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	Mem0[r3:word32] = r4
	r4 = 0x00000001
	r3 = 0x000001C2
	r4 = r4 | 0x00003944
	r1 = r1 - 8
	CV = cond(r1)
	Mem0[r4:word32] = r3
	r4 = 0x00000001
	r3 = r3 | 0x00000028
	r4 = r4 | 0x0000393C
	Mem0[r4:word32] = r3
	r3 = 0x00000000 + -11
	CV = cond(r3)
	call fn0000BF88 (retsize: 0;)
	r4 = 0x00000BEB
	r3 = r11 | 0x00000000
	r4 = r4 | 0x0000C200
	call fn0000FFD8 (retsize: 0;)
	F = r11 == 0x00000000
	branch !F l0000ADBC_ds_t
	// succ:  l0000ADBC_ds_f l0000ADBC_ds_t
l0000ADBC_ds_f:
	goto l0000AE20
	// succ:  l0000AE20
l0000ADBC_ds_t:
	goto l0000AE24
	// succ:  l0000AE24
l0000AE20:
	r11 = 0x00000000 + -1
	CV = cond(r11)
	// succ:  l0000AE24
l0000AE24:
	r3 = 0x00000001
	r4 = r11 - 1
	CV = cond(r4)
	r3 = r3 | 0x00003948
	r4 = r4 & 0x0000001F
	r3 = Mem0[r3:word32]
	r2 = 0x00000000 - 7937
	CV = cond(r2)
	r11 = Mem0[r3:word32]
	r4 = r4 << 0x00000008
	r11 = r11 & r2
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r11 = r11 | r4
	r4 = 0x00000000 + -11
	CV = cond(r4)
	Mem0[r3:word32] = r11
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000001
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r3 = r3 | 0x00003940
	Mem0[r3:word32] = r2
	r3 = 0x000001C2
	r2 = 0x0000FFFF
	r3 = r3 | 0x00000204
	r4 = Mem0[r3:word32]
	r4 = r4 & r2
	r4 = r4 | 0x00000400
	Mem0[r3:word32] = r4
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000ADBC_exit
fn0000ADBC_exit:


// fn0000AEDC
// Return size: 0
void fn0000AEDC()
fn0000AEDC_entry:
	r1 = fp
	// succ:  l0000AEDC
l0000AEDC:
	r4 = 0x000001F0
	r4 = r4 | 0x0000010C
	Mem0[r4:word32] = r3
	return
	// succ:  fn0000AEDC_exit
fn0000AEDC_exit:


// fn0000AF04
// Return size: 0
void fn0000AF04()
fn0000AF04_entry:
	r1 = fp
	// succ:  l0000AF04
l0000AF04:
	Mem0[r3:word32] = r4
	return
	// succ:  fn0000AF04_exit
fn0000AF04_exit:


// fn0000AF1C
// Return size: 0
void fn0000AF1C()
fn0000AF1C_entry:
	r1 = fp
	// succ:  l0000AF1C
l0000AF1C:
	Mem0[r1 - 4:word32] = r2
	r3 = r3 - 1
	CV = cond(r3)
	F = r3 >u 0x0000001F
	branch F l0000AF1C_ds_t
	// succ:  l0000AF1C_ds_f l0000AF1C_ds_t
l0000AF1C_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000AF30
	// succ:  l0000AF30
l0000AF1C_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000B01C
	// succ:  l0000B01C
l0000AF30:
	r2 = 0x00000001
	r3 = r3 << 0x00000002
	r2 = r2 | 0x00002490
	r3 = r3 + r2
	CV = cond(r3)
	r3 = Mem0[r3:word32]
l0000B01C:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	// succ:  l0000B028
l0000B028:
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000AF1C_exit
fn0000AF1C_exit:


// fn0000B034
// Return size: 0
void fn0000B034()
fn0000B034_entry:
	r1 = fp
	// succ:  l0000B034
l0000B034:
	Mem0[r1 - 4:word32] = r2
	F = r3 >u 0x00000010
	branch F l0000B034_ds_t
	// succ:  l0000B034_ds_f l0000B034_ds_t
l0000B034_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000B044
	// succ:  l0000B044
l0000B034_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000B058
	// succ:  l0000B058
l0000B044:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r4:word32] = r2
	Mem0[r5:word32] = r3
	r11 = r2 | 0x00000000
	goto l0000B0AC
	// succ:  l0000B0AC
l0000B058:
	F = r3 >u 0x00000020
	branch F l0000B058_ds_t
	// succ:  l0000B058_ds_f l0000B058_ds_t
l0000B058_ds_f:
	F = r3 >u 0x00000040
	goto l0000B064
	// succ:  l0000B064
l0000B058_ds_t:
	F = r3 >u 0x00000040
	goto l0000B074
	// succ:  l0000B074
l0000B064:
	r6 = 0x00000000 + -1
	CV = cond(r6)
	Mem0[r4:word32] = r6
	r3 = r3 + r6
	CV = cond(r3)
	goto l0000B0A0
	// succ:  l0000B0A0
l0000B074:
	branch F l0000B074_ds_t
	// succ:  l0000B074_ds_f l0000B074_ds_t
l0000B074_ds_f:
	r6 = 0x00000000 + -2
	CV = cond(r6)
	goto l0000B07C
	// succ:  l0000B07C
l0000B074_ds_t:
	r6 = 0x00000000 + -2
	CV = cond(r6)
	goto l0000B088
	// succ:  l0000B088
l0000B07C:
	r3 = r3 + -3
	CV = cond(r3)
	Mem0[r4:word32] = r6
	goto l0000B0A0
	// succ:  l0000B0A0
l0000B088:
	F = r3 >u 0x00000080
	branch F l0000B088_ds_t
	// succ:  l0000B088_ds_f l0000B088_ds_t
l0000B088_ds_f:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l0000B094
	// succ:  l0000B094
l0000B088_ds_t:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l0000B0AC
	// succ:  l0000B0AC
l0000B094:
	r6 = 0x00000000 + -3
	CV = cond(r6)
	r3 = r3 + -7
	CV = cond(r3)
	Mem0[r4:word32] = r6
	// succ:  l0000B0A0
l0000B0A0:
l0000B0AC:
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000B034_exit
fn0000B034_exit:


// fn0000B0B8
// Return size: 0
void fn0000B0B8()
fn0000B0B8_entry:
	r1 = fp
	// succ:  l0000B0B8
l0000B0B8:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	F = r3 == 0x00000003
	branch F l0000B0B8_ds_t
	// succ:  l0000B0B8_ds_f l0000B0B8_ds_t
l0000B0B8_ds_f:
	r1 = r1 - 16
	CV = cond(r1)
	goto l0000B0CC
	// succ:  l0000B0CC
l0000B0B8_ds_t:
	r1 = r1 - 16
	CV = cond(r1)
	goto l0000B144
	// succ:  l0000B144
l0000B0CC:
	F = r3 >u 0x00000003
	branch F l0000B0CC_ds_t
	// succ:  l0000B0CC_ds_f l0000B0CC_ds_t
l0000B0CC_ds_f:
	F = r3 == 0x00000014
	goto l0000B0D8
	// succ:  l0000B0D8
l0000B0CC_ds_t:
	F = r3 == 0x00000014
	goto l0000B0EC
	// succ:  l0000B0EC
l0000B0D8:
	F = r3 == 0x00000001
	branch !F l0000B0D8_ds_t
	// succ:  l0000B0D8_ds_f l0000B0D8_ds_t
l0000B0D8_ds_f:
	r3 = 0x00000001
	goto l0000B0E4
	// succ:  l0000B0E4
l0000B0D8_ds_t:
	r3 = 0x00000001
	goto l0000B238
	// succ:  l0000B238
l0000B0E4:
	r3 = r3 | 0x00003948
	goto l0000B104
	// succ:  l0000B104
l0000B0EC:
	branch F l0000B0EC_ds_t
	// succ:  l0000B0EC_ds_f l0000B0EC_ds_t
l0000B0EC_ds_f:
	F = r3 == 0x0000001F
	goto l0000B0F4
	// succ:  l0000B0F4
l0000B0EC_ds_t:
	F = r3 == 0x0000001F
	goto l0000B1F4
	// succ:  l0000B1F4
l0000B0F4:
	branch !F l0000B0F4_ds_t
	// succ:  l0000B0F4_ds_f l0000B0F4_ds_t
l0000B0F4_ds_f:
	r3 = r4 | 0x00000000
	goto l0000B0FC
	// succ:  l0000B0FC
l0000B0F4_ds_t:
	r3 = r4 | 0x00000000
	goto l0000B238
	// succ:  l0000B238
l0000B0FC:
	r5 = r1 | 0x00000000
	goto l0000B174
	// succ:  l0000B174
l0000B104:
	r5 = Mem0[r3:word32]
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l0000B114
	// succ:  l0000B114
l0000B110:
	r3 = r3 + -1
	CV = cond(r3)
	// succ:  l0000B114
l0000B114:
	F = r4 >u 0x00000001
	branch F l0000B114_ds_t
	// succ:  l0000B114_ds_f l0000B114_ds_t
l0000B114_ds_f:
	r4 = r4 >>u 0x00000001
	goto l0000B120
	// succ:  l0000B120
l0000B114_ds_t:
	r4 = r4 >>u 0x00000001
	goto l0000B110
	// succ:  l0000B110
l0000B120:
	r3 = r3 & 0x00000003
	r4 = Mem0[r5:word32]
	r2 = 0x00000000 - 49
	CV = cond(r2)
	r3 = r3 << 0x00000004
	r4 = r4 & r2
	r3 = r4 | r3
	Mem0[r5:word32] = r3
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l0000B23C
	// succ:  l0000B23C
l0000B144:
	r3 = 0x00000001
	r4 = r4 - 1
	CV = cond(r4)
	r3 = r3 | 0x00003948
	r2 = 0x00000000 - 4
	CV = cond(r2)
	r3 = Mem0[r3:word32]
	r4 = r4 & 0x00000003
	r5 = Mem0[r3 + 12:word32]
	r5 = r5 & r2
	r4 = r5 | r4
	Mem0[r3 + 12:word32] = r4
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l0000B23C
	// succ:  l0000B23C
l0000B174:
	r4 = r1 + -4
	CV = cond(r4)
	call fn0000B034 (retsize: 0;)
	F = r11 != 0x00000000
	branch F l0000B174_ds_t
	// succ:  l0000B174_ds_f l0000B174_ds_t
l0000B174_ds_f:
	r3 = 0x00000000 - 36
	CV = cond(r3)
	goto l0000B188
	// succ:  l0000B188
l0000B174_ds_t:
	r3 = 0x00000000 - 36
	CV = cond(r3)
	goto l0000B23C
	// succ:  l0000B23C
l0000B188:
	r3 = 0x00000001
	r4 = Mem0[r1 + 4:word32]
	r3 = r3 | 0x00003948
	r3 = Mem0[r3:word32]
	goto l0000B1A0
	// succ:  l0000B1A0
l0000B19C:
	r11 = r11 + -1
	CV = cond(r11)
	// succ:  l0000B1A0
l0000B1A0:
	F = r4 >u 0x00000001
	branch F l0000B1A0_ds_t
	// succ:  l0000B1A0_ds_f l0000B1A0_ds_t
l0000B1A0_ds_f:
	r4 = r4 >>u 0x00000001
	goto l0000B1AC
	// succ:  l0000B1AC
l0000B1A0_ds_t:
	r4 = r4 >>u 0x00000001
	goto l0000B19C
	// succ:  l0000B19C
l0000B1AC:
	r2 = 0x0000FFFC
	r11 = r11 & 0x00000003
	r4 = Mem0[r3 + 84:word32]
	r2 = r2 | 0x0000FFFF
	r11 = r11 << 0x00000010
	r4 = r4 & r2
	r2 = 0x00000000 - 16
	CV = cond(r2)
	r11 = r4 | r11
	Mem0[r3 + 84:word32] = r11
	r5 = Mem0[r1:word32]
	r4 = Mem0[r3 + 84:word32]
	r5 = r5 - 1
	CV = cond(r5)
	r4 = r4 & r2
	r5 = r5 & 0x0000000F
	r4 = r4 | r5
	Mem0[r3 + 84:word32] = r4
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l0000B23C
	// succ:  l0000B23C
l0000B1F4:
	r3 = 0x000001C2
	r2 = 0x00000000 - 4
	CV = cond(r2)
	r3 = r3 | 0x00000050
	r4 = r4 - 1
	CV = cond(r4)
	r5 = Mem0[r3:word32]
	r4 = r4 & 0x00000003
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r5 = r5 & r2
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r4 = r4 | r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l0000B23C
	// succ:  l0000B23C
l0000B238:
	r3 = 0x00000000 - 22
	CV = cond(r3)
	// succ:  l0000B23C
l0000B23C:
	r1 = r1 + -16
	CV = cond(r1)
	r11 = r3 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000B0B8_exit
fn0000B0B8_exit:


// fn0000B250
// Return size: 0
void fn0000B250()
fn0000B250_entry:
	r1 = fp
	// succ:  l0000B250
l0000B250:
	Mem0[r1 - 4:word32] = r2
	r3 = r3 - 1
	CV = cond(r3)
	F = r3 >u 0x0000001F
	branch F l0000B250_ds_t
	// succ:  l0000B250_ds_f l0000B250_ds_t
l0000B250_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000B264
	// succ:  l0000B264
l0000B250_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000B310
	// succ:  l0000B310
l0000B264:
	r2 = 0x00000001
	r3 = r3 << 0x00000002
	r2 = r2 | 0x00002510
	r3 = r3 + r2
	CV = cond(r3)
	r3 = Mem0[r3:word32]
l0000B310:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	r1 = r1 + -8
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000B250_exit
fn0000B250_exit:


// fn0000B320
// Return size: 0
void fn0000B320()
fn0000B320_entry:
	r1 = fp
	// succ:  l0000B320
l0000B320:
	Mem0[r1 - 4:word32] = r2
	r3 = r3 - 14
	CV = cond(r3)
	F = r3 >u 0x00000012
	branch F l0000B320_ds_t
	// succ:  l0000B320_ds_f l0000B320_ds_t
l0000B320_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000B334
	// succ:  l0000B334
l0000B320_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000B4C4
	// succ:  l0000B4C4
l0000B334:
	r2 = 0x00000001
	r3 = r3 << 0x00000002
	r2 = r2 | 0x00002590
	r3 = r3 + r2
	CV = cond(r3)
	r3 = Mem0[r3:word32]
l0000B4C4:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000B320_exit
fn0000B320_exit:


// fn0000B4D4
// Return size: 0
void fn0000B4D4()
fn0000B4D4_entry:
	r1 = fp
	// succ:  l0000B4D4
l0000B4D4:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	r3 = 0x00000001
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r3 = r3 | 0x00003940
	// succ:  l0000B4E8_thunk_fn0000F8E8
l0000B4E8_thunk_fn0000F8E8:
	call fn0000F8E8 (retsize: 0;)
	return
	// succ:  fn0000B4D4_exit
fn0000B4D4_exit:


// fn0000B4F0
// Return size: 0
void fn0000B4F0()
fn0000B4F0_entry:
	r1 = fp
	// succ:  l0000B4F0
l0000B4F0:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	r3 = 0x00000001
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r3 = r3 | 0x00003940
	// succ:  l0000F9A0
l0000F9A0:
	Mem0[r1 - 4:word32] = r2
	r6 = Mem0[r3:word32]
	r1 = r1 - 4
	CV = cond(r1)
	F = r6 == 0x00000000
	branch F l0000F9A0_ds_t
	// succ:  l0000F9A0_ds_f l0000F9A0_ds_t
l0000F9A0_ds_f:
	r11 = 0x00000000 - 19
	CV = cond(r11)
	goto l0000F9B8
	// succ:  l0000F9B8
l0000F9A0_ds_t:
	r11 = 0x00000000 - 19
	CV = cond(r11)
	goto l0000FA2C
	// succ:  l0000FA2C
l0000F9B8:
	r5 = Mem0[r6 + 8:word32]
	F = r5 != 0x00000000
	branch F l0000F9B8_ds_t
	// succ:  l0000F9B8_ds_f l0000F9B8_ds_t
l0000F9B8_ds_f:
	goto l0000F9C8
	// succ:  l0000F9C8
l0000F9B8_ds_t:
	goto l0000F9E8
	// succ:  l0000F9E8
l0000F9C8:
	r7 = Mem0[r6 + 4:word32]
	F = r7 != r4
	branch F l0000F9C8_ds_t
	// succ:  l0000F9C8_ds_f l0000F9C8_ds_t
l0000F9C8_ds_f:
	r11 = 0x00000000 - 36
	CV = cond(r11)
	goto l0000F9D8
	// succ:  l0000F9D8
l0000F9C8_ds_t:
	r11 = 0x00000000 - 36
	CV = cond(r11)
	goto l0000FA2C
	// succ:  l0000FA2C
l0000F9D8:
	Mem0[r3:word32] = r5
	r5 = r6 | 0x00000000
	goto l0000FA1C
	// succ:  l0000FA1C
l0000F9E4:
	r5 = r3 | 0x00000000
	// succ:  l0000F9E8
l0000F9E8:
	r3 = Mem0[r5 + 4:word32]
	F = r3 != r4
	branch F l0000F9E8_ds_t
	// succ:  l0000F9E8_ds_f l0000F9E8_ds_t
l0000F9E8_ds_f:
	goto l0000F9F8
	// succ:  l0000F9F8
l0000F9E8_ds_t:
	goto l0000FA04
	// succ:  l0000FA04
l0000F9F8:
	r3 = Mem0[r5 + 8:word32]
	Mem0[r6 + 8:word32] = r3
	goto l0000FA1C
	// succ:  l0000FA1C
l0000FA04:
	r3 = Mem0[r5 + 8:word32]
	F = r3 != 0x00000000
	branch F l0000FA04_ds_t
	// succ:  l0000FA04_ds_f l0000FA04_ds_t
l0000FA04_ds_f:
	r6 = r5 | 0x00000000
	goto l0000FA14
	// succ:  l0000FA14
l0000FA04_ds_t:
	r6 = r5 | 0x00000000
	goto l0000F9E4
	// succ:  l0000F9E4
l0000FA14:
	r11 = 0x00000000 - 36
	CV = cond(r11)
	goto l0000FA2C
	// succ:  l0000FA2C
l0000FA1C:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r5:word32] = r2
	Mem0[r5 + 8:word32] = r2
	r11 = r2 | 0x00000000
	// succ:  l0000FA2C
l0000FA2C:
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000B4F0_exit
fn0000B4F0_exit:


// fn0000B610
// Return size: 0
void fn0000B610()
fn0000B610_entry:
	r1 = fp
	goto l0000B610
	// succ:  l0000B610
l0000B50C:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 12:word32] = r2
	Mem0[r1 - 8:word32] = r14
	F = r3 == 0x00000002
	branch F l0000B50C_ds_t
	// succ:  l0000B50C_ds_f l0000B50C_ds_t
l0000B50C_ds_f:
	r1 = r1 - 12
	CV = cond(r1)
	goto l0000B524
	// succ:  l0000B524
l0000B50C_ds_t:
	r1 = r1 - 12
	CV = cond(r1)
	goto l0000B578
	// succ:  l0000B578
l0000B524:
	F = r3 >u 0x00000002
	branch F l0000B524_ds_t
	// succ:  l0000B524_ds_f l0000B524_ds_t
l0000B524_ds_f:
	F = r3 == 0x00000003
	goto l0000B530
	// succ:  l0000B530
l0000B524_ds_t:
	F = r3 == 0x00000003
	goto l0000B544
	// succ:  l0000B544
l0000B530:
	F = r3 == 0x00000001
	branch !F l0000B530_ds_t
	// succ:  l0000B530_ds_f l0000B530_ds_t
l0000B530_ds_f:
	r2 = 0x00000001
	goto l0000B53C
	// succ:  l0000B53C
l0000B530_ds_t:
	r2 = 0x00000001
	goto l0000B5F8
	// succ:  l0000B5F8
l0000B53C:
	r14 = 0x00000000 + 0
	CV = cond(r14)
	goto l0000B56C
	// succ:  l0000B56C
l0000B544:
	branch F l0000B544_ds_t
	// succ:  l0000B544_ds_f l0000B544_ds_t
l0000B544_ds_f:
	F = r3 == 0x0000000B
	goto l0000B54C
	// succ:  l0000B54C
l0000B544_ds_t:
	F = r3 == 0x0000000B
	goto l0000B55C
	// succ:  l0000B55C
l0000B54C:
	branch !F l0000B54C_ds_t
	// succ:  l0000B54C_ds_f l0000B54C_ds_t
l0000B54C_ds_f:
	r2 = 0x00000BEB
	goto l0000B554
	// succ:  l0000B554
l0000B54C_ds_t:
	r2 = 0x00000BEB
	goto l0000B5F8
	// succ:  l0000B5F8
l0000B554:
	r14 = 0x00000000 + -2
	CV = cond(r14)
	goto l0000B58C
	// succ:  l0000B58C
l0000B55C:
	r2 = 0x0000016E
	r14 = 0x00000000 + -1
	CV = cond(r14)
	r2 = r2 | 0x00003600
	goto l0000B590
	// succ:  l0000B590
l0000B56C:
	r2 = r2 | 0x0000309C
	r2 = Mem0[r2:word32]
	goto l0000B590
	// succ:  l0000B590
l0000B578:
	r2 = 0x00000001
	r14 = 0x00000000 + -3
	CV = cond(r14)
	r2 = r2 | 0x00003098
	r2 = Mem0[r2:word32]
	goto l0000B590
	// succ:  l0000B590
l0000B58C:
	r2 = r2 | 0x0000C200
	// succ:  l0000B590
l0000B590:
	r3 = 0x00000001
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r3 = r3 | 0x00003940
	r5 = r2 | 0x00000000
	r14 = r14 << 0x00000010
	call fn0000FA38 (retsize: 0;)
	r3 = 0x00000001
	r5 = 0x00000000 - 4
	CV = cond(r5)
	r3 = r3 | 0x00003948
	r3 = Mem0[r3:word32]
	r4 = Mem0[r3 + 12:word32]
	r4 = r4 & r5
	r5 = 0x0000FFFC
	Mem0[r3 + 12:word32] = r4
	r5 = r5 | 0x0000FFFF
	r4 = Mem0[r3:word32]
	r4 = r4 & r5
	r5 = r2 | 0x00000000
	r14 = r4 | r14
	r4 = 0x00000000 + -1
	CV = cond(r4)
	Mem0[r3:word32] = r14
	r3 = 0x00000001
	r3 = r3 | 0x00003940
	call fn0000FA38 (retsize: 0;)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000B5FC
	// succ:  l0000B5FC
l0000B5F8:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	// succ:  l0000B5FC
l0000B5FC:
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000B610_exit
l0000B610:
	Mem0[r1 - 8:word32] = r2
	Mem0[r1 - 4:word32] = r9
	r2 = r4 | 0x00000000
	F = r3 == 0x0000000A
	branch F l0000B610_ds_t
	// succ:  l0000B610_ds_f l0000B610_ds_t
l0000B610_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000B628
	// succ:  l0000B628
l0000B610_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000B700
	// succ:  l0000B700
l0000B628:
	F = r3 >u 0x0000000A
	branch F l0000B628_ds_t
	// succ:  l0000B628_ds_f l0000B628_ds_t
l0000B628_ds_f:
	F = r3 == 0x0000000D
	goto l0000B634
	// succ:  l0000B634
l0000B628_ds_t:
	F = r3 == 0x0000000D
	goto l0000B650
	// succ:  l0000B650
l0000B634:
	F = r3 == 0x00000001
	branch F l0000B634_ds_t
	// succ:  l0000B634_ds_f l0000B634_ds_t
l0000B634_ds_f:
	F = r3 == 0x00000004
	goto l0000B640
	// succ:  l0000B640
l0000B634_ds_t:
	F = r3 == 0x00000004
	goto l0000B670
	// succ:  l0000B670
l0000B640:
	branch !F l0000B640_ds_t
	// succ:  l0000B640_ds_f l0000B640_ds_t
l0000B640_ds_f:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l0000B648
	// succ:  l0000B648
l0000B640_ds_t:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l0000B8C8
	// succ:  l0000B8C8
l0000B648:
	F = r4 == 0x00000003
	goto l0000B694
	// succ:  l0000B694
l0000B650:
	branch F l0000B650_ds_t
	// succ:  l0000B650_ds_f l0000B650_ds_t
l0000B650_ds_f:
	F = r3 == 0x0000001F
	goto l0000B658
	// succ:  l0000B658
l0000B650_ds_t:
	F = r3 == 0x0000001F
	goto l0000B7DC
	// succ:  l0000B7DC
l0000B658:
	branch F l0000B658_ds_t
	// succ:  l0000B658_ds_f l0000B658_ds_t
l0000B658_ds_f:
	F = r3 == 0x0000000B
	goto l0000B660
	// succ:  l0000B660
l0000B658_ds_t:
	F = r3 == 0x0000000B
	goto l0000B85C
	// succ:  l0000B85C
l0000B660:
	branch !F l0000B660_ds_t
	// succ:  l0000B660_ds_f l0000B660_ds_t
l0000B660_ds_f:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l0000B668
	// succ:  l0000B668
l0000B660_ds_t:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l0000B8C8
	// succ:  l0000B8C8
l0000B668:
	F = r4 == 0x0000000B
	goto l0000B79C
	// succ:  l0000B79C
l0000B670:
	call fn0000AF1C (retsize: 0;)
	F = r11 == r2
	branch F l0000B670_ds_t
	// succ:  l0000B670_ds_f l0000B670_ds_t
l0000B670_ds_f:
	r3 = r2 | 0x00000000
	goto l0000B684
	// succ:  l0000B684
l0000B670_ds_t:
	r3 = r2 | 0x00000000
	goto l0000B8BC
	// succ:  l0000B8BC
l0000B684:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	goto l0000B50C
	// succ:  l0000B50C
l0000B694:
	branch F l0000B694_ds_t
	// succ:  l0000B694_ds_f l0000B694_ds_t
l0000B694_ds_f:
	F = r4 == 0x00000006
	goto l0000B69C
	// succ:  l0000B69C
l0000B694_ds_t:
	F = r4 == 0x00000006
	goto l0000B6C0
	// succ:  l0000B6C0
l0000B69C:
	branch F l0000B69C_ds_t
	// succ:  l0000B69C_ds_f l0000B69C_ds_t
l0000B69C_ds_f:
	F = r4 == 0x00000001
	goto l0000B6A4
	// succ:  l0000B6A4
l0000B69C_ds_t:
	F = r4 == 0x00000001
	goto l0000B6E0
	// succ:  l0000B6E0
l0000B6A4:
	branch !F l0000B6A4_ds_t
	// succ:  l0000B6A4_ds_f l0000B6A4_ds_t
l0000B6A4_ds_f:
	r4 = 0x0000FFFC
	goto l0000B6AC
	// succ:  l0000B6AC
l0000B6A4_ds_t:
	r4 = 0x0000FFFC
	goto l0000B8C4
	// succ:  l0000B8C4
l0000B6AC:
	r2 = 0x000001C2
	r2 = r2 | 0x00000050
	r3 = Mem0[r2:word32]
	r4 = r4 | 0x0000FFFF
	goto l0000B808
	// succ:  l0000B808
l0000B6C0:
	r2 = 0x000001C2
	r4 = 0x0000FFFC
	r2 = r2 | 0x00000050
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	r4 = 0x00000001
	goto l0000B84C
	// succ:  l0000B84C
l0000B6E0:
	r2 = 0x000001C2
	r4 = 0x0000FFFC
	r2 = r2 | 0x00000050
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	r4 = 0x00000002
	goto l0000B84C
	// succ:  l0000B84C
l0000B700:
	F = r4 == 0x00000003
	branch F l0000B700_ds_t
	// succ:  l0000B700_ds_f l0000B700_ds_t
l0000B700_ds_f:
	F = r4 >u 0x00000003
	goto l0000B70C
	// succ:  l0000B70C
l0000B700_ds_t:
	F = r4 >u 0x00000003
	goto l0000B754
	// succ:  l0000B754
l0000B70C:
	branch F l0000B70C_ds_t
	// succ:  l0000B70C_ds_f l0000B70C_ds_t
l0000B70C_ds_f:
	F = r4 == 0x00000004
	goto l0000B714
	// succ:  l0000B714
l0000B70C_ds_t:
	F = r4 == 0x00000004
	goto l0000B728
	// succ:  l0000B728
l0000B714:
	F = r4 == 0x00000001
	branch !F l0000B714_ds_t
	// succ:  l0000B714_ds_f l0000B714_ds_t
l0000B714_ds_f:
	goto l0000B720
	// succ:  l0000B720
l0000B714_ds_t:
	goto l0000B8C4
	// succ:  l0000B8C4
l0000B720:
	r2 = 0x000001C2
	goto l0000B740
	// succ:  l0000B740
l0000B728:
	branch F l0000B728_ds_t
	// succ:  l0000B728_ds_f l0000B728_ds_t
l0000B728_ds_f:
	F = r4 == 0x0000000B
	goto l0000B730
	// succ:  l0000B730
l0000B728_ds_t:
	F = r4 == 0x0000000B
	goto l0000B770
	// succ:  l0000B770
l0000B730:
	branch !F l0000B730_ds_t
	// succ:  l0000B730_ds_f l0000B730_ds_t
l0000B730_ds_f:
	goto l0000B738
	// succ:  l0000B738
l0000B730_ds_t:
	goto l0000B8C4
	// succ:  l0000B8C4
l0000B738:
	r2 = 0x000001C2
	goto l0000B78C
	// succ:  l0000B78C
l0000B740:
	r4 = 0x00000000 - 12289
	CV = cond(r4)
	r2 = r2 | 0x00000054
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	goto l0000B850
	// succ:  l0000B850
l0000B754:
	r2 = 0x000001C2
	r4 = 0x00000000 - 12289
	CV = cond(r4)
	r2 = r2 | 0x00000054
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	r3 = r3 | 0x00001000
	goto l0000B850
	// succ:  l0000B850
l0000B770:
	r2 = 0x000001C2
	r4 = 0x00000000 - 12289
	CV = cond(r4)
	r2 = r2 | 0x00000054
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	r3 = r3 | 0x00002000
	goto l0000B850
	// succ:  l0000B850
l0000B78C:
	r2 = r2 | 0x00000054
	r3 = Mem0[r2:word32]
	r3 = r3 | 0x00003000
	goto l0000B850
	// succ:  l0000B850
l0000B79C:
	branch F l0000B79C_ds_t
	// succ:  l0000B79C_ds_f l0000B79C_ds_t
l0000B79C_ds_f:
	F = r4 == 0x00000017
	goto l0000B7A4
	// succ:  l0000B7A4
l0000B79C_ds_t:
	F = r4 == 0x00000017
	goto l0000B7C0
	// succ:  l0000B7C0
l0000B7A4:
	branch !F l0000B7A4_ds_t
	// succ:  l0000B7A4_ds_f l0000B7A4_ds_t
l0000B7A4_ds_f:
	r4 = 0x00000000 - 4
	CV = cond(r4)
	goto l0000B7AC
	// succ:  l0000B7AC
l0000B7A4_ds_t:
	r4 = 0x00000000 - 4
	CV = cond(r4)
	goto l0000B8C4
	// succ:  l0000B8C4
l0000B7AC:
	r2 = 0x000001C2
	r2 = r2 | 0x0000005C
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	goto l0000B850
	// succ:  l0000B850
l0000B7C0:
	r2 = 0x000001C2
	r4 = 0x00000000 - 4
	CV = cond(r4)
	r2 = r2 | 0x0000005C
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	r3 = r3 | 0x00000001
	goto l0000B850
	// succ:  l0000B850
l0000B7DC:
	F = r4 == 0x00000003
	branch F l0000B7DC_ds_t
	// succ:  l0000B7DC_ds_f l0000B7DC_ds_t
l0000B7DC_ds_f:
	F = r4 == 0x0000000B
	goto l0000B7E8
	// succ:  l0000B7E8
l0000B7DC_ds_t:
	F = r4 == 0x0000000B
	goto l0000B810
	// succ:  l0000B810
l0000B7E8:
	branch F l0000B7E8_ds_t
	// succ:  l0000B7E8_ds_f l0000B7E8_ds_t
l0000B7E8_ds_f:
	F = r4 == 0x00000001
	goto l0000B7F0
	// succ:  l0000B7F0
l0000B7E8_ds_t:
	F = r4 == 0x00000001
	goto l0000B830
	// succ:  l0000B830
l0000B7F0:
	branch !F l0000B7F0_ds_t
	// succ:  l0000B7F0_ds_f l0000B7F0_ds_t
l0000B7F0_ds_f:
	r4 = 0x0000FCFF
	goto l0000B7F8
	// succ:  l0000B7F8
l0000B7F0_ds_t:
	r4 = 0x0000FCFF
	goto l0000B8C4
	// succ:  l0000B8C4
l0000B7F8:
	r2 = 0x000001C2
	r2 = r2 | 0x00000058
	r3 = Mem0[r2:word32]
	r4 = r4 | 0x0000FFFF
	// succ:  l0000B808
l0000B808:
	r3 = r3 & r4
	goto l0000B850
	// succ:  l0000B850
l0000B810:
	r2 = 0x000001C2
	r4 = 0x0000FCFF
	r2 = r2 | 0x00000058
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	r4 = 0x00000100
	goto l0000B84C
	// succ:  l0000B84C
l0000B830:
	r2 = 0x000001C2
	r4 = 0x0000FCFF
	r2 = r2 | 0x00000058
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	r4 = 0x00000200
	// succ:  l0000B84C
l0000B84C:
	r3 = r3 | r4
	// succ:  l0000B850
l0000B850:
	Mem0[r2:word32] = r3
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000B8C8
	// succ:  l0000B8C8
l0000B85C:
	F = r4 == 0x00000001
	branch F l0000B85C_ds_t
	// succ:  l0000B85C_ds_f l0000B85C_ds_t
l0000B85C_ds_f:
	F = r4 == 0x00000003
	goto l0000B868
	// succ:  l0000B868
l0000B85C_ds_t:
	F = r4 == 0x00000003
	goto l0000B878
	// succ:  l0000B878
l0000B868:
	branch !F l0000B868_ds_t
	// succ:  l0000B868_ds_f l0000B868_ds_t
l0000B868_ds_f:
	goto l0000B870
	// succ:  l0000B870
l0000B868_ds_t:
	goto l0000B8C4
	// succ:  l0000B8C4
l0000B870:
	r2 = 0x00000001
	goto l0000B898
	// succ:  l0000B898
l0000B878:
	r2 = 0x00000001
	r4 = 0x0000FCFF
	r2 = r2 | 0x00003948
	r4 = r4 | 0x0000FFFF
	r2 = Mem0[r2:word32]
	r3 = Mem0[r2 + 84:word32]
	r3 = r3 & r4
	goto l0000B8B8
	// succ:  l0000B8B8
l0000B898:
	r4 = 0x0000FCFF
	r2 = r2 | 0x00003948
	r4 = r4 | 0x0000FFFF
	r2 = Mem0[r2:word32]
	r3 = Mem0[r2 + 84:word32]
	r3 = r3 & r4
	r4 = 0x00000100
	r3 = r3 | r4
	// succ:  l0000B8B8
l0000B8B8:
	Mem0[r2 + 84:word32] = r3
	// succ:  l0000B8BC
l0000B8BC:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000B8C8
	// succ:  l0000B8C8
l0000B8C4:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	// succ:  l0000B8C8
l0000B8C8:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000B610_exit
fn0000B610_exit:


// fn0000B8D8
// Return size: 0
void fn0000B8D8()
fn0000B8D8_entry:
	r1 = fp
	// succ:  l0000B8D8
l0000B8D8:
	Mem0[r1 - 8:word32] = r2
	r2 = r3 | 0x00000000
	r3 = 0x00007829
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x0000B800
	F = r4 <=u r3
	branch F l0000B8D8_ds_t
	// succ:  l0000B8D8_ds_f l0000B8D8_ds_t
l0000B8D8_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000B8F8
	// succ:  l0000B8F8
l0000B8D8_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000B8FC
	// succ:  l0000B8FC
l0000B8F8:
	r4 = r3 | 0x00000000
	// succ:  l0000B8FC
l0000B8FC:
	r3 = r4 | 0x00000000
	r4 = 0x0000005B
	r4 = r4 | 0x00008D80
	call fn0000FEDC (retsize: 0;)
	r3 = 0x00000001
	r11 = r11 << 0x00000002
	r3 = r3 | 0x00002624
	r11 = r11 + r3
	CV = cond(r11)
	r3 = (word32) Mem0[r11:byte]
	Mem0[r2:byte] = SLICE(r3, byte, 0)
	r3 = (word32) Mem0[r11 + 1:byte]
	Mem0[r2 + 1:byte] = SLICE(r3, byte, 0)
	r3 = (word32) Mem0[r11 + 2:byte]
	r11 = (word32) Mem0[r11 + 3:byte]
	Mem0[r2 + 2:byte] = SLICE(r3, byte, 0)
	Mem0[r2 + 3:byte] = SLICE(r11, byte, 0)
	r1 = r1 + -8
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000B8D8_exit
fn0000B8D8_exit:


// fn0000B950
// Return size: 0
void fn0000B950()
fn0000B950_entry:
	r1 = fp
	// succ:  l0000B950
l0000B950:
	Mem0[r1 - 4:word32] = r2
	r3 = r3 - 1
	CV = cond(r3)
	F = r3 >u 0x0000000E
	branch F l0000B950_ds_t
	// succ:  l0000B950_ds_f l0000B950_ds_t
l0000B950_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000B964
	// succ:  l0000B964
l0000B950_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000BA98
	// succ:  l0000BA98
l0000B964:
	r2 = 0x00000001
	r3 = r3 << 0x00000002
	r2 = r2 | 0x00002B68
	r3 = r3 + r2
	CV = cond(r3)
	r3 = Mem0[r3:word32]
l0000BA98:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000B950_exit
fn0000B950_exit:


// fn0000BAA8
// Return size: 0
void fn0000BAA8()
fn0000BAA8_entry:
	r1 = fp
	// succ:  l0000BAA8
l0000BAA8:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	r4 = r3 | 0x00000000
	r1 = r1 + -4
	CV = cond(r1)
	r3 = 0x00000001
	r9 = Mem0[r1 - 4:word32]
	r3 = r3 | 0x000034B4
	// succ:  l0000BAC0_thunk_fn0000F8E8
l0000BAC0_thunk_fn0000F8E8:
	call fn0000F8E8 (retsize: 0;)
	return
	// succ:  fn0000BAA8_exit
fn0000BAA8_exit:


// fn0000BAC8
// Return size: 0
void fn0000BAC8()
fn0000BAC8_entry:
	r1 = fp
	// succ:  l0000BAC8
l0000BAC8:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x00000001
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r2 = r2 | 0x000034B8
	Mem0[r1 - 4:word32] = r9
	r3 = 0x00000001
	Mem0[r2:word32] = r4
	r2 = 0x000001F0
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 | 0x000034B4
	r5 = 0x00000000 + 0
	CV = cond(r5)
	r2 = r2 | 0x00001444
	call fn0000FA38 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = 0x0000A700
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	r4 = 0x00000000 - 4
	CV = cond(r4)
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -20
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = 0x0000A700
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	r4 = 0x00000000 - 5
	CV = cond(r4)
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000BAC8_exit
fn0000BAC8_exit:


// fn0000BB60
// Return size: 0
void fn0000BB60()
fn0000BB60_entry:
	r1 = fp
	// succ:  l0000BB60
l0000BB60:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x000001F0
	r4 = 0x0000A700
	r2 = r2 | 0x00001444
	Mem0[r1 - 4:word32] = r9
	r3 = Mem0[r2:word32]
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r3 | r4
	r4 = r4 | 0x00000004
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -2
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = 0x0000A700
	r3 = r3 | r4
	r4 = r4 | 0x00000003
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -2
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = 0x0000A700
	r3 = r3 | r4
	r4 = 0x000058F0
	Mem0[r2:word32] = r3
	r4 = r4 | 0x00000FFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	r4 = 0x0000A707
	r3 = r3 | r4
	r4 = 0x00000000 + 0
	CV = cond(r4)
	Mem0[r2:word32] = r3
	r3 = 0x00000001
	r5 = r4 | 0x00000000
	r3 = r3 | 0x000034B4
	r2 = 0x00000001
	call fn0000FA38 (retsize: 0;)
	r2 = r2 | 0x000034B8
	r3 = 0x00000000 + 0
	CV = cond(r3)
	Mem0[r2:word32] = r3
	r1 = r1 + -8
	CV = cond(r1)
	r11 = r3 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000BB60_exit
fn0000BB60_exit:


// fn0000BC28
// Return size: 0
void fn0000BC28()
fn0000BC28_entry:
	r1 = fp
	// succ:  l0000BC28
l0000BC28:
	r3 = 0x00000001
	r3 = r3 | 0x000034B8
	r11 = Mem0[r3:word32]
	return
	// succ:  fn0000BC28_exit
fn0000BC28_exit:


// fn0000BC38
// Return size: 0
void fn0000BC38()
fn0000BC38_entry:
	r1 = fp
	// succ:  l0000BC38
l0000BC38:
	Mem0[r1 - 4:word32] = r2
	r3 = r3 - 14
	CV = cond(r3)
	F = r3 >u 0x00000013
	branch F l0000BC38_ds_t
	// succ:  l0000BC38_ds_f l0000BC38_ds_t
l0000BC38_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000BC4C
	// succ:  l0000BC4C
l0000BC38_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000BDB8
	// succ:  l0000BDB8
l0000BC4C:
	r2 = 0x00000001
	r3 = r3 << 0x00000002
	r2 = r2 | 0x00002BA4
	r3 = r3 + r2
	CV = cond(r3)
	r3 = Mem0[r3:word32]
l0000BDB8:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000BC38_exit
fn0000BC38_exit:


// fn0000BDC8
// Return size: 0
void fn0000BDC8()
fn0000BDC8_entry:
	r1 = fp
	// succ:  l0000BDC8
l0000BDC8:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r1 = r1 - 8
	CV = cond(r1)
	r2 = r3 | 0x00000000
	call fn0000BC38 (retsize: 0;)
	r3 = r2 | 0x00000000
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r1 = r1 + -8
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000BDC8_exit
fn0000BDC8_exit:


// fn0000BE00
// Return size: 0
void fn0000BE00()
fn0000BE00_entry:
	r1 = fp
	// succ:  l0000BE00
l0000BE00:
	Mem0[r1 - 8:word32] = r14
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 12:word32] = r2
	r14 = 0x00000000 - 22
	CV = cond(r14)
	F = r3 == 0x00000006
	branch !F l0000BE00_ds_t
	// succ:  l0000BE00_ds_f l0000BE00_ds_t
l0000BE00_ds_f:
	r1 = r1 - 16
	CV = cond(r1)
	goto l0000BE1C
	// succ:  l0000BE1C
l0000BE00_ds_t:
	r1 = r1 - 16
	CV = cond(r1)
	goto l0000BF70
	// succ:  l0000BF70
l0000BE1C:
	r2 = 0x00000001
	r3 = r1 | 0x00000000
	r2 = r2 | 0x00003944
	call fn0000B8D8 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = (word32) Mem0[r1 + 3:byte]
	r2 = Mem0[r3:word32]
	r5 = r2 >>u 0x00000010
	r5 = r5 & 0x00000003
	F = r5 >= r4
	branch F l0000BE1C_ds_t
	// succ:  l0000BE1C_ds_f l0000BE1C_ds_t
l0000BE1C_ds_f:
	r5 = 0x0000FFFC
	goto l0000BE4C
	// succ:  l0000BE4C
l0000BE1C_ds_t:
	r5 = 0x0000FFFC
	goto l0000BE6C
	// succ:  l0000BE6C
l0000BE4C:
	r4 = r4 & 0x00000003
	r5 = r5 | 0x0000FFFF
	r4 = r4 << 0x00000010
	r2 = r2 & r5
	r2 = r2 | r4
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + -2000
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
l0000BE6C:
	r3 = (word32) Mem0[r1 + 2:byte]
	r4 = r2 & 0x00000003
	F = r4 >= r3
	branch F l0000BE6C_ds_t
	// succ:  l0000BE6C_ds_f l0000BE6C_ds_t
l0000BE6C_ds_f:
	r4 = 0x00000000 - 4
	CV = cond(r4)
	goto l0000BE80
	// succ:  l0000BE80
l0000BE6C_ds_t:
	r4 = 0x00000000 - 4
	CV = cond(r4)
	goto l0000BEA4
	// succ:  l0000BEA4
l0000BE80:
	r3 = r3 & 0x00000003
	r2 = r2 & r4
	r2 = r2 | r3
	r3 = 0x00000001
	r3 = r3 | 0x00003944
	r3 = Mem0[r3:word32]
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + -2000
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
l0000BEA4:
	r3 = (word32) Mem0[r1:byte]
	r3 = r3 & 0x0000001F
	r5 = 0x00000000 - 7937
	CV = cond(r5)
	r3 = r3 << 0x00000008
	r2 = r2 & r5
	r4 = 0x00000000 - 49
	CV = cond(r4)
	r2 = r2 | r3
	r3 = (word32) Mem0[r1 + 1:byte]
	r3 = r3 & 0x00000003
	r14 = 0x00000001
	r3 = r3 << 0x00000004
	r2 = r2 & r4
	r14 = r14 | 0x00003944
	r2 = r2 | r3
	r3 = Mem0[r14:word32]
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + -20
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = (word32) Mem0[r1 + 2:byte]
	r4 = r2 & 0x00000003
	F = r4 <= r3
	branch F l0000BEA4_ds_t
	// succ:  l0000BEA4_ds_f l0000BEA4_ds_t
l0000BEA4_ds_f:
	r4 = r2 >>u 0x00000010
	goto l0000BF08
	// succ:  l0000BF08
l0000BEA4_ds_t:
	r4 = r2 >>u 0x00000010
	goto l0000BF2C
	// succ:  l0000BF2C
l0000BF08:
	r5 = 0x00000000 - 4
	CV = cond(r5)
	r3 = r3 & 0x00000003
	r2 = r2 & r5
	r2 = r2 | r3
	r3 = Mem0[r14:word32]
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + -2000
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
	r4 = r2 >>u 0x00000010
	// succ:  l0000BF2C
l0000BF2C:
	r3 = (word32) Mem0[r1 + 3:byte]
	r4 = r4 & 0x00000003
	F = r4 <= r3
	branch F l0000BF2C_ds_t
	// succ:  l0000BF2C_ds_f l0000BF2C_ds_t
l0000BF2C_ds_f:
	r14 = 0x00000000 + 0
	CV = cond(r14)
	goto l0000BF40
	// succ:  l0000BF40
l0000BF2C_ds_t:
	r14 = 0x00000000 + 0
	CV = cond(r14)
	goto l0000BF70
	// succ:  l0000BF70
l0000BF40:
	r4 = 0x0000FFFC
	r3 = r3 & 0x00000003
	r4 = r4 | 0x0000FFFF
	r3 = r3 << 0x00000010
	r2 = r2 & r4
	r2 = r2 | r3
	r3 = 0x00000001
	r3 = r3 | 0x00003944
	r3 = Mem0[r3:word32]
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + -2000
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
l0000BF70:
	r1 = r1 + -16
	CV = cond(r1)
	r11 = r14 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000BE00_exit
fn0000BE00_exit:


// fn0000BF88
// Return size: 0
void fn0000BF88()
fn0000BF88_entry:
	r1 = fp
	// succ:  l0000BF88
l0000BF88:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	F = r3 == 0x0000000B
	branch F l0000BF88_ds_t
	// succ:  l0000BF88_ds_f l0000BF88_ds_t
l0000BF88_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000BF9C
	// succ:  l0000BF9C
l0000BF88_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000C0DC
	// succ:  l0000C0DC
l0000BF9C:
	F = r3 >u 0x0000000B
	branch F l0000BF9C_ds_t
	// succ:  l0000BF9C_ds_f l0000BF9C_ds_t
l0000BF9C_ds_f:
	F = r3 == 0x00000016
	goto l0000BFA8
	// succ:  l0000BFA8
l0000BF9C_ds_t:
	F = r3 == 0x00000016
	goto l0000BFCC
	// succ:  l0000BFCC
l0000BFA8:
	F = r3 == 0x00000003
	branch F l0000BFA8_ds_t
	// succ:  l0000BFA8_ds_f l0000BFA8_ds_t
l0000BFA8_ds_f:
	F = r3 == 0x00000006
	goto l0000BFB4
	// succ:  l0000BFB4
l0000BFA8_ds_t:
	F = r3 == 0x00000006
	goto l0000C124
	// succ:  l0000C124
l0000BFB4:
	branch F l0000BFB4_ds_t
	// succ:  l0000BFB4_ds_f l0000BFB4_ds_t
l0000BFB4_ds_f:
	F = r3 == 0x00000001
	goto l0000BFBC
	// succ:  l0000BFBC
l0000BFB4_ds_t:
	F = r3 == 0x00000001
	goto l0000BFEC
	// succ:  l0000BFEC
l0000BFBC:
	branch !F l0000BFBC_ds_t
	// succ:  l0000BFBC_ds_f l0000BFBC_ds_t
l0000BFBC_ds_f:
	goto l0000BFC4
	// succ:  l0000BFC4
l0000BFBC_ds_t:
	goto l0000C11C
	// succ:  l0000C11C
l0000BFC4:
	r2 = 0x00000001
	goto l0000C074
	// succ:  l0000C074
l0000BFCC:
	branch F l0000BFCC_ds_t
	// succ:  l0000BFCC_ds_f l0000BFCC_ds_t
l0000BFCC_ds_f:
	F = r3 == 0x00000019
	goto l0000BFD4
	// succ:  l0000BFD4
l0000BFCC_ds_t:
	F = r3 == 0x00000019
	goto l0000C03C
	// succ:  l0000C03C
l0000BFD4:
	branch F l0000BFD4_ds_t
	// succ:  l0000BFD4_ds_f l0000BFD4_ds_t
l0000BFD4_ds_f:
	F = r3 == 0x00000011
	goto l0000BFDC
	// succ:  l0000BFDC
l0000BFD4_ds_t:
	F = r3 == 0x00000011
	goto l0000C0B0
	// succ:  l0000C0B0
l0000BFDC:
	branch !F l0000BFDC_ds_t
	// succ:  l0000BFDC_ds_f l0000BFDC_ds_t
l0000BFDC_ds_f:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000BFE4
	// succ:  l0000BFE4
l0000BFDC_ds_t:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000C12C
	// succ:  l0000C12C
l0000BFE4:
	r2 = 0x00000001
	goto l0000C040
	// succ:  l0000C040
l0000BFEC:
	r2 = 0x00000001
	r2 = r2 | 0x00003944
	r2 = Mem0[r2:word32]
	r3 = Mem0[r2:word32]
	r5 = r3 >>u 0x00000008
	r6 = r3 >>u 0x00000004
	r4 = r3 & 0x00000003
	r3 = r3 >>u 0x00000010
	r5 = r5 & 0x0000001F
	r6 = r6 & 0x00000003
	r2 = r3 & 0x00000003
	r5 = r5 + -1
	CV = cond(r5)
	r3 = r6 + -1
	CV = cond(r3)
	r4 = r4 + -1
	CV = cond(r4)
l0000C03C:
	r2 = 0x00000001
	// succ:  l0000C040
l0000C040:
	r2 = r2 | 0x00003948
	r3 = Mem0[r2:word32]
	r3 = Mem0[r3:word32]
	r3 = r3 >>u 0x00000010
	r3 = r3 & 0x00000003
	F = r3 == 0x00000002
	branch F l0000C040_ds_t
	// succ:  l0000C040_ds_f l0000C040_ds_t
l0000C040_ds_f:
	F = r3 == 0x00000003
	goto l0000C060
	// succ:  l0000C060
l0000C040_ds_t:
	F = r3 == 0x00000003
	goto l0000C07C
	// succ:  l0000C07C
l0000C060:
	branch F l0000C060_ds_t
	// succ:  l0000C060_ds_f l0000C060_ds_t
l0000C060_ds_f:
	F = r3 == 0x00000001
	goto l0000C068
	// succ:  l0000C068
l0000C060_ds_t:
	F = r3 == 0x00000001
	goto l0000C0A0
	// succ:  l0000C0A0
l0000C068:
	branch F l0000C068_ds_t
	// succ:  l0000C068_ds_f l0000C068_ds_t
l0000C068_ds_f:
	goto l0000C070
	// succ:  l0000C070
l0000C068_ds_t:
	goto l0000C124
	// succ:  l0000C124
l0000C070:
	r2 = 0x00000001
	// succ:  l0000C074
l0000C074:
	r2 = r2 | 0x0000309C
	goto l0000C0A8
	// succ:  l0000C0A8
l0000C07C:
	r3 = 0x00000000 + -11
	CV = cond(r3)
	call fn0000BF88 (retsize: 0;)
	r2 = Mem0[r2:word32]
	r3 = r11 | 0x00000000
	r4 = Mem0[r2:word32]
	r4 = r4 >>u 0x00000008
	r4 = r4 & 0x0000001F
	r4 = r4 + -1
	CV = cond(r4)
	goto l0000C0CC
	// succ:  l0000C0CC
l0000C0A0:
	r2 = 0x00000001
	r2 = r2 | 0x00003098
	// succ:  l0000C0A8
l0000C0A8:
	r11 = Mem0[r2:word32]
	goto l0000C12C
	// succ:  l0000C12C
l0000C0B0:
	r3 = 0x00000000 + -22
	CV = cond(r3)
	call fn0000BF88 (retsize: 0;)
	r3 = 0x00000000 + -3
	CV = cond(r3)
	r2 = r11 | 0x00000000
	call fn0000B250 (retsize: 0;)
	r3 = r2 | 0x00000000
	r4 = r11 | 0x00000000
	// succ:  l0000C0CC
l0000C0CC:
	call fn0000FFD8 (retsize: 0;)
	r1 = r1 + -8
	CV = cond(r1)
	goto l0000C130
	// succ:  l0000C130
l0000C0DC:
	r2 = 0x00000001
	r3 = 0x0000016E
	r2 = r2 | 0x0000393C
	r3 = r3 | 0x00003600
	r2 = Mem0[r2:word32]
	r2 = Mem0[r2:word32]
	r11 = r2 >>u 0x00000008
	r2 = r2 >>u 0x00000004
	r11 = r11 & 0x0000001F
	r2 = r2 & 0x00000003
	r11 = r11 + -1
	CV = cond(r11)
	r2 = r2 + -1
	CV = cond(r2)
l0000C11C:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000C12C
	// succ:  l0000C12C
l0000C124:
	r11 = 0x0000016E
	r11 = r11 | 0x00003600
	// succ:  l0000C12C
l0000C12C:
	r1 = r1 + -8
	CV = cond(r1)
	// succ:  l0000C130
l0000C130:
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000BF88_exit
fn0000BF88_exit:


// fn0000C32C
// Return size: 0
void fn0000C32C()
fn0000C32C_entry:
	r1 = fp
	// succ:  l0000C32C
l0000C32C:
	Mem0[r1 - 8:word32] = r2
	r3 = 0x000001F0
	r2 = 0x00000001
	r3 = r3 | 0x00000800
	r2 = r2 | 0x00003958
	Mem0[r1 - 4:word32] = r9
	Mem0[r2:word32] = r3
	r1 = r1 - 8
	CV = cond(r1)
	r3 = 0x00000000 + -28
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B320 (retsize: 0;)
	r3 = 0x00000000 + -28
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r4 = 0x00000001
	r6 = Mem0[r2:word32]
	r4 = r4 | 0x000030BC
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r5 = 0x00000000 + -24000
	CV = cond(r5)
	// succ:  l0000C378
l0000C378:
	r2 = r3 + -1
	CV = cond(r2)
	r7 = 0x00000000 + 0
	CV = cond(r7)
	r3 = r2 << 0x00000005
	r8 = 0x00000000 - 13
	CV = cond(r8)
	F = r2 != 0x00000002
	r3 = r6 + r3
	CV = cond(r3)
	Mem0[r4:word32] = r3
	Mem0[r3:word32] = r7
	r7 = Mem0[r3:word32]
	r7 = r7 & r8
	r8 = 0x00000000 - 113
	CV = cond(r8)
	Mem0[r3:word32] = r7
	r7 = Mem0[r3:word32]
	r7 = r7 | 0x00000004
	Mem0[r3:word32] = r7
	r7 = Mem0[r3:word32]
	r7 = r7 & r8
	Mem0[r3:word32] = r7
	r7 = Mem0[r3:word32]
	Mem0[r3:word32] = r7
	Mem0[r4 - 12:word32] = r5
	r3 = r2 | 0x00000000
	branch F l0000C378_ds_t
	// succ:  l0000C378_ds_f l0000C378_ds_t
l0000C378_ds_f:
	r4 = r4 + -28
	CV = cond(r4)
	goto l0000C3D8
	// succ:  l0000C3D8
l0000C378_ds_t:
	r4 = r4 + -28
	CV = cond(r4)
	goto l0000C378
	// succ:  l0000C378
l0000C3D8:
	r3 = 0x00000001
	r2 = 0x00000000 + -1
	CV = cond(r2)
	r3 = r3 | 0x000030A4
	Mem0[r3 + 4:word32] = r2
	r2 = 0x00000001
	r2 = r2 | 0x00003954
	Mem0[r2:word32] = r3
	r3 = Mem0[r3 + 24:word32]
	r2 = Mem0[r3:word32]
	r2 = r2 | 0x00000080
	Mem0[r3:word32] = r2
	r3 = 0x00000000
	r2 = 0x00000001
	r3 = r3 | 0x0000C1DC
	r2 = r2 | 0x000030A0
	call fn0000BAA8 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	Mem0[r2:word32] = r3
	r1 = r1 + -8
	CV = cond(r1)
	r11 = r3 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000C32C_exit
fn0000C32C_exit:


// fn0000C48C
// Return size: 0
void fn0000C48C()
fn0000C48C_entry:
	r1 = fp
	// succ:  l0000C48C
l0000C48C:
	Mem0[r1 - 20:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 16:word32] = r14
	r2 = r2 | 0x000030A0
	Mem0[r1 - 12:word32] = r16
	Mem0[r1 - 8:word32] = r18
	r14 = Mem0[r2:word32]
	Mem0[r1 - 4:word32] = r9
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r1 = r1 - 20
	CV = cond(r1)
	r18 = r3 | 0x00000000
	F = r14 != r2
	branch F l0000C48C_ds_t
	// succ:  l0000C48C_ds_f l0000C48C_ds_t
l0000C48C_ds_f:
	r16 = r4 | 0x00000000
	goto l0000C4C4
	// succ:  l0000C4C4
l0000C48C_ds_t:
	r16 = r4 | 0x00000000
	goto l0000C540
	// succ:  l0000C540
l0000C4C4:
	r2 = 0x00000001
	call fn0000E718 (retsize: 0;)
	r2 = r2 | 0x000030A4
	r5 = Mem0[r2 + 4:word32]
	F = r5 == 0x00000000
	branch F l0000C4C4_ds_t
	// succ:  l0000C4C4_ds_f l0000C4C4_ds_t
l0000C4C4_ds_f:
	r3 = r5 << 0x00000002
	goto l0000C4E0
	// succ:  l0000C4E0
l0000C4C4_ds_t:
	r3 = r5 << 0x00000002
	goto l0000C4F8
	// succ:  l0000C4F8
l0000C4E0:
	r3 = Mem0[r2 + 32:word32]
	F = r3 != 0x00000000
	branch F l0000C4E0_ds_t
	// succ:  l0000C4E0_ds_f l0000C4E0_ds_t
l0000C4E0_ds_f:
	r2 = r14 | 0x00000000
	goto l0000C4F0
	// succ:  l0000C4F0
l0000C4E0_ds_t:
	r2 = r14 | 0x00000000
	goto l0000C51C
	// succ:  l0000C51C
l0000C4F0:
	r5 = 0x00000000 + -1
	CV = cond(r5)
	r3 = r5 << 0x00000002
	// succ:  l0000C4F8
l0000C4F8:
	r2 = r5 << 0x00000005
	r2 = r2 - r3
	CV = cond(r2)
	r3 = 0x00000001
	r3 = r3 | 0x000030A4
	r2 = r2 + r3
	CV = cond(r2)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	Mem0[r2 + 16:word32] = r18
	Mem0[r2 + 4:word32] = r3
	Mem0[r2 + 20:word32] = r16
	// succ:  l0000C51C
l0000C51C:
	r3 = r11 | 0x00000000
	call fn0000E740 (retsize: 0;)
	F = r2 == 0x00000000
	branch F l0000C51C_ds_t
	// succ:  l0000C51C_ds_f l0000C51C_ds_t
l0000C51C_ds_f:
	r4 = 0x00000000
	goto l0000C530
	// succ:  l0000C530
l0000C51C_ds_t:
	r4 = 0x00000000
	goto l0000C540
	// succ:  l0000C540
l0000C530:
	r3 = Mem0[r2 + 8:word32]
	r4 = r4 | 0x0000C13C
	r5 = r2 | 0x00000000
	call fn00008BB8 (retsize: 0;)
l0000C540:
	r1 = r1 + -20
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 20:word32]
	r14 = Mem0[r1 - 16:word32]
	r16 = Mem0[r1 - 12:word32]
	r18 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000C48C_exit
fn0000C48C_exit:


// fn0000C588
// Return size: 0
void fn0000C588()
fn0000C588_entry:
	r1 = fp
	// succ:  l0000C588
l0000C588:
	Mem0[r1 - 12:word32] = r2
	r2 = r3 | 0x00000000
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x000030A0
	Mem0[r1 - 8:word32] = r14
	r3 = Mem0[r3:word32]
	r1 = r1 - 12
	CV = cond(r1)
	F = r3 != 0x00000000
	branch F l0000C588_ds_t
	// succ:  l0000C588_ds_f l0000C588_ds_t
l0000C588_ds_f:
	r11 = 0x00000000 - 13
	CV = cond(r11)
	goto l0000C5B4
	// succ:  l0000C5B4
l0000C588_ds_t:
	r11 = 0x00000000 - 13
	CV = cond(r11)
	goto l0000C648
	// succ:  l0000C648
l0000C5B4:
	r3 = Mem0[r2 + 12:word32]
	r6 = Mem0[r2 + 24:word32]
l0000C648:
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000C588_exit
fn0000C588_exit:


// fn0000C768
// Return size: 0
void fn0000C768()
fn0000C768_entry:
	r1 = fp
	// succ:  l0000C768
l0000C768:
	r4 = 0x00000001
	Mem0[r1 - 4:word32] = r2
	r4 = r4 | 0x000030A0
	r1 = r1 - 4
	CV = cond(r1)
	r4 = Mem0[r4:word32]
	F = r4 != 0x00000000
	branch F l0000C768_ds_t
	// succ:  l0000C768_ds_f l0000C768_ds_t
l0000C768_ds_f:
	F = r3 == 0x00000000
	goto l0000C788
	// succ:  l0000C788
l0000C768_ds_t:
	F = r3 == 0x00000000
	goto l0000C814
	// succ:  l0000C814
l0000C788:
	branch F l0000C788_ds_t
	// succ:  l0000C788_ds_f l0000C788_ds_t
l0000C788_ds_f:
	r4 = 0x00000001
	goto l0000C790
	// succ:  l0000C790
l0000C788_ds_t:
	r4 = 0x00000001
	goto l0000C814
	// succ:  l0000C814
l0000C790:
	r4 = r4 | 0x00003954
	r5 = Mem0[r4:word32]
	r6 = Mem0[r5 + 12:word32]
	r4 = Mem0[r5 + 24:word32]
l0000C814:
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000C768_exit
fn0000C768_exit:


// fn0000C8A0
// Return size: 0
void fn0000C8A0()
fn0000C8A0_entry:
	r1 = fp
	goto l0000C8A0
	// succ:  l0000C8A0
l0000C820:
	Mem0[r1 - 12:word32] = r2
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r14
	r2 = r3 | 0x00000000
	F = r3 == 0x00000000
	branch F l0000C820_ds_t
	// succ:  l0000C820_ds_f l0000C820_ds_t
l0000C820_ds_f:
	r1 = r1 - 12
	CV = cond(r1)
	goto l0000C83C
	// succ:  l0000C83C
l0000C820_ds_t:
	r1 = r1 - 12
	CV = cond(r1)
	goto l0000C88C
	// succ:  l0000C88C
l0000C83C:
	r14 = 0x00000000 + -1
	CV = cond(r14)
	call fn000046C0 (retsize: 0;)
	r3 = r2 + r2
	CV = cond(r3)
	r2 = r3 + r2
	CV = cond(r2)
	r2 = r2 << 0x00000003
	r2 = r12 + r2
	CV = cond(r2)
	F = r2 <u r12
	branch F l0000C83C_ds_t
	// succ:  l0000C83C_ds_f l0000C83C_ds_t
l0000C83C_ds_f:
	r14 = r14 + r11
	CV = cond(r14)
	goto l0000C860
	// succ:  l0000C860
l0000C83C_ds_t:
	r14 = r14 + r11
	CV = cond(r14)
	goto l0000C868
	// succ:  l0000C868
l0000C860:
	r14 = 0x00000000 + 0
	CV = cond(r14)
	r14 = r14 + r11
	CV = cond(r14)
	// succ:  l0000C868
l0000C868:
	call fn000046C0 (retsize: 0;)
	F = r14 >u r11
	branch F l0000C868_ds_t
	// succ:  l0000C868_ds_f l0000C868_ds_t
l0000C868_ds_f:
	F = r14 != r11
	goto l0000C87C
	// succ:  l0000C87C
l0000C868_ds_t:
	F = r14 != r11
	goto l0000C868
	// succ:  l0000C868
l0000C87C:
	branch F l0000C87C_ds_t
	// succ:  l0000C87C_ds_f l0000C87C_ds_t
l0000C87C_ds_f:
	F = r2 >u r12
	goto l0000C884
	// succ:  l0000C884
l0000C87C_ds_t:
	F = r2 >u r12
	goto l0000C88C
	// succ:  l0000C88C
l0000C884:
	branch F l0000C884_ds_t
	// succ:  l0000C884_ds_f l0000C884_ds_t
l0000C884_ds_f:
	goto l0000C88C
	// succ:  l0000C88C
l0000C884_ds_t:
	goto l0000C868
	// succ:  l0000C868
l0000C88C:
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000C8A0_exit
l0000C8A0:
	Mem0[r1 - 8:word32] = r2
	Mem0[r1 - 4:word32] = r9
	r2 = r3 | 0x00000000
	F = r3 == 0x00000000
	branch F l0000C8A0_ds_t
	// succ:  l0000C8A0_ds_f l0000C8A0_ds_t
l0000C8A0_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000C8B8
	// succ:  l0000C8B8
l0000C8A0_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000C914
	// succ:  l0000C914
l0000C8B8:
	call fn0000BC28 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l0000C8B8_ds_t
	// succ:  l0000C8B8_ds_f l0000C8B8_ds_t
l0000C8B8_ds_f:
	r3 = r2 | 0x00000000
	goto l0000C8CC
	// succ:  l0000C8CC
l0000C8B8_ds_t:
	r3 = r2 | 0x00000000
	goto l0000C904
	// succ:  l0000C904
l0000C8CC:
	r3 = 0x00000000 + -17
	CV = cond(r3)
	call fn0000BF88 (retsize: 0;)
l0000C904:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	goto l0000C820
	// succ:  l0000C820
l0000C914:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000C8A0_exit
fn0000C8A0_exit:


// fn0000C93C
// Return size: 0
void fn0000C93C()
fn0000C93C_entry:
	r1 = fp
	// succ:  l0000C93C
l0000C93C:
	r3 = 0x000001F0
	r3 = r3 | 0x0000240C
	r4 = Mem0[r3:word32]
	r4 = r4 | 0x00000008
	Mem0[r3:word32] = r4
	r4 = Mem0[r3:word32]
	// succ:  l0000C954
l0000C954:
	r4 = Mem0[r3:word32]
	r4 = r4 & 0x00000008
	F = r4 != 0x00000000
	branch F l0000C954_ds_t
	// succ:  l0000C954_ds_f l0000C954_ds_t
l0000C954_ds_f:
	goto l0000C968
	// succ:  l0000C968
l0000C954_ds_t:
	goto l0000C954
	// succ:  l0000C954
l0000C968:
	return
	// succ:  fn0000C93C_exit
fn0000C93C_exit:


// fn0000C970
// Return size: 0
void fn0000C970()
fn0000C970_entry:
	r1 = fp
	// succ:  l0000C970
l0000C970:
	r3 = 0x000001F0
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = r3 | 0x00002418
	Mem0[r3:word32] = r4
	// succ:  l0000C980
l0000C980:
	r4 = Mem0[r3:word32]
	F = r4 != 0x00000000
	branch F l0000C980_ds_t
	// succ:  l0000C980_ds_f l0000C980_ds_t
l0000C980_ds_f:
	goto l0000C990
	// succ:  l0000C990
l0000C980_ds_t:
	goto l0000C980
	// succ:  l0000C980
l0000C990:
	return
	// succ:  fn0000C970_exit
fn0000C970_exit:


// fn0000C998
// Return size: 0
void fn0000C998()
fn0000C998_entry:
	r1 = fp
	// succ:  l0000C998
l0000C998:
	r3 = 0x000001F0
	Mem0[r1 - 4:word32] = r2
	r3 = r3 | 0x0000240C
	r2 = 0x00000000 - 9
	CV = cond(r2)
	r4 = Mem0[r3:word32]
	r1 = r1 - 4
	CV = cond(r1)
	r4 = r4 | 0x00000020
	r4 = r4 & r2
	Mem0[r3:word32] = r4
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000C998_exit
fn0000C998_exit:


// fn0000C9C8
// Return size: 0
void fn0000C9C8()
fn0000C9C8_entry:
	r1 = fp
	// succ:  l0000C9C8
l0000C9C8:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 16:word32] = r18
	Mem0[r1 - 12:word32] = r20
	Mem0[r1 - 28:word32] = r2
	Mem0[r1 - 24:word32] = r14
	Mem0[r1 - 20:word32] = r16
	Mem0[r1 - 8:word32] = r22
	r3 = 0x00000000 + -25
	CV = cond(r3)
	r1 = r1 - 28
	CV = cond(r1)
	call fn0000BF88 (retsize: 0;)
	r4 = 0x00000000 + -10
	CV = cond(r4)
	r3 = r11 | 0x00000000
	call fn0000FFD8 (retsize: 0;)
	r4 = 0x00000006
	r3 = r11 | 0x00000000
	r4 = r4 | 0x00001A80
	r20 = r11 | 0x00000000
	call fn0000FEDC (retsize: 0;)
	F = r11 == 0x00000000
	branch F l0000C9C8_ds_t
	// succ:  l0000C9C8_ds_f l0000C9C8_ds_t
l0000C9C8_ds_f:
	r18 = r11 | 0x00000000
	goto l0000CA1C
	// succ:  l0000CA1C
l0000C9C8_ds_t:
	r18 = r11 | 0x00000000
	goto l0000CA94
	// succ:  l0000CA94
l0000CA1C:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r16 = 0x00000000 + -1
	CV = cond(r16)
	// succ:  l0000CA24
l0000CA24:
	r3 = r18 | 0x00000000
	r4 = r16 | 0x00000000
	call fn0000FEDC (retsize: 0;)
	r11 = r11 - 1
	CV = cond(r11)
	r14 = r11 & 0x000000FF
	goto l0000CA6C
	// succ:  l0000CA6C
l0000CA3C:
	r3 = r20 | 0x00000000
	r4 = r22 | 0x00000000
	call fn0000FEDC (retsize: 0;)
	r4 = r16 | 0x00000000
	r3 = r11 | 0x00000000
	call fn0000FEDC (retsize: 0;)
	r3 = 0x00000006
	r3 = r3 | 0x00001A80
	F = r11 <=u r3
	branch F l0000CA3C_ds_t
	// succ:  l0000CA3C_ds_f l0000CA3C_ds_t
l0000CA3C_ds_f:
	r14 = r14 << 0x00000003
	goto l0000CA68
	// succ:  l0000CA68
l0000CA3C_ds_t:
	r14 = r14 << 0x00000003
	goto l0000CAA0
	// succ:  l0000CAA0
l0000CA68:
	r14 = r22 & 0x000000FF
	// succ:  l0000CA6C
l0000CA6C:
	F = r14 <=u 0x0000000F
	branch F l0000CA6C_ds_t
	// succ:  l0000CA6C_ds_f l0000CA6C_ds_t
l0000CA6C_ds_f:
	r22 = r14 + -1
	CV = cond(r22)
	goto l0000CA78
	// succ:  l0000CA78
l0000CA6C_ds_t:
	r22 = r14 + -1
	CV = cond(r22)
	goto l0000CA3C
	// succ:  l0000CA3C
l0000CA78:
	r2 = r2 + -1
	CV = cond(r2)
	r2 = r2 & 0x000000FF
	F = r2 == 0x00000008
	branch F l0000CA78_ds_t
	// succ:  l0000CA78_ds_f l0000CA78_ds_t
l0000CA78_ds_f:
	r16 = r16 + r16
	CV = cond(r16)
	goto l0000CA8C
	// succ:  l0000CA8C
l0000CA78_ds_t:
	r16 = r16 + r16
	CV = cond(r16)
	goto l0000CA9C
	// succ:  l0000CA9C
l0000CA8C:
	r16 = r16 & 0x000000FF
	goto l0000CA24
	// succ:  l0000CA24
l0000CA94:
	r2 = r11 | 0x00000000
	r14 = 0x00000000 + -1
	CV = cond(r14)
	// succ:  l0000CA9C
l0000CA9C:
	r14 = r14 << 0x00000003
	// succ:  l0000CAA0
l0000CAA0:
	r3 = 0x000001F0
	r2 = r14 | r2
	r3 = r3 | 0x00002414
	Mem0[r3:word32] = r2
	r1 = r1 + -28
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 28:word32]
	r14 = Mem0[r1 - 24:word32]
	r16 = Mem0[r1 - 20:word32]
	r18 = Mem0[r1 - 16:word32]
	r20 = Mem0[r1 - 12:word32]
	r22 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000C9C8_exit
fn0000C9C8_exit:


// fn0000CB40
// Return size: 0
void fn0000CB40()
fn0000CB40_entry:
	r1 = fp
	// succ:  l0000CB40
l0000CB40:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	r2 = r2 | 0x00004000
	r2 = Mem0[r2 + 32:word32]
	F = r2 == 0x00000000
	branch F l0000CB40_ds_t
	// succ:  l0000CB40_ds_f l0000CB40_ds_t
l0000CB40_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000CB60
	// succ:  l0000CB60
l0000CB40_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000CB78
	// succ:  l0000CB78
l0000CB60:
	r2 = 0x00000001
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r2 | 0x000034C0
	Mem0[r2:byte] = SLICE(r3, byte, 0)
	r1 = r1 + -8
	CV = cond(r1)
	goto l0000CC90
	// succ:  l0000CC90
l0000CB78:
	r4 = r2 | 0x00000000
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = 0x00000000 + -2
	CV = cond(r5)
	call fn00009744 (retsize: 0;)
	r4 = r2 | 0x00000000
	r5 = r2 | 0x00000000
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn000097BC (retsize: 0;)
	r4 = r2 | 0x00000000
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = 0x00000000 + -2
	CV = cond(r5)
	call fn00009834 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = 0x00000000 + -2
	CV = cond(r5)
	r4 = r3 | 0x00000000
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = r2 | 0x00000000
	r4 = r3 | 0x00000000
	r2 = 0x000001F0
	call fn000097BC (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = 0x00000000 + -2
	CV = cond(r5)
	r4 = r3 | 0x00000000
	call fn00009834 (retsize: 0;)
	r3 = 0x00000000 + -25
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B320 (retsize: 0;)
	r3 = 0x00000000 + -25
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	call fn0000C9C8 (retsize: 0;)
	r3 = r2 | 0x0000240C
	r4 = 0x00000000 + -68
	CV = cond(r4)
	Mem0[r3:word32] = r4
	call fn0000C970 (retsize: 0;)
	r3 = r2 | 0x00002420
	r2 = Mem0[r3:word32]
	F = r2 == 0x0000003A
	branch F l0000CB78_ds_t
	// succ:  l0000CB78_ds_f l0000CB78_ds_t
l0000CB78_ds_f:
	r4 = 0x00000000 + -10
	CV = cond(r4)
	goto l0000CC24
	// succ:  l0000CC24
l0000CB78_ds_t:
	r4 = 0x00000000 + -10
	CV = cond(r4)
	goto l0000CC60
	// succ:  l0000CC60
l0000CC24:
	r2 = 0x00000000 + -11
	CV = cond(r2)
	goto l0000CC30
	// succ:  l0000CC30
l0000CC2C:
	Mem0[r3:word32] = r4
	// succ:  l0000CC30
l0000CC30:
	r2 = r2 - 1
	CV = cond(r2)
	F = r2 != 0x00000000
	branch F l0000CC30_ds_t
	// succ:  l0000CC30_ds_f l0000CC30_ds_t
l0000CC30_ds_f:
	goto l0000CC40
	// succ:  l0000CC40
l0000CC30_ds_t:
	goto l0000CC2C
	// succ:  l0000CC2C
l0000CC40:
	r2 = 0x000001F0
	r4 = 0x00000000 + -10
	CV = cond(r4)
	r3 = r2 | 0x00002420
	r2 = r2 | 0x00002418
	Mem0[r3:word32] = r4
	r3 = Mem0[r3:word32]
	r3 = 0x00000000 + -1
	CV = cond(r3)
	Mem0[r2:word32] = r3
	// succ:  l0000CC60
l0000CC60:
	r4 = 0x00000000
	r3 = 0x00000000 + -25
	CV = cond(r3)
	r4 = r4 | 0x0000CAD4
	r2 = 0x00000001
	call fn0000B4D4 (retsize: 0;)
	r2 = r2 | 0x000034C0
	r3 = 0x00000000 + 0
	CV = cond(r3)
	Mem0[r2:byte] = SLICE(r3, byte, 0)
	r2 = 0x000001F0
	r2 = r2 | 0x00002420
	r2 = Mem0[r2:word32]
	r1 = r1 + -8
	CV = cond(r1)
	// succ:  l0000CC90
l0000CC90:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000CB40_exit
fn0000CB40_exit:


// fn0000CCA8
// Return size: 0
void fn0000CCA8()
fn0000CCA8_entry:
	r1 = fp
	// succ:  l0000CCA8
l0000CCA8:
	Mem0[r1 - 40:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 36:word32] = r14
	Mem0[r1 - 32:word32] = r16
	Mem0[r1 - 20:word32] = r22
	Mem0[r1 - 12:word32] = r26
	Mem0[r1 - 8:word32] = r28
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 28:word32] = r18
	Mem0[r1 - 24:word32] = r20
	Mem0[r1 - 16:word32] = r24
	r2 = r2 | 0x000034C0
	r1 = r1 - 44
	CV = cond(r1)
	r20 = (word32) Mem0[r2:byte]
	r20 = r20 << 0x00000018
	r26 = r3 | 0x00000000
	r16 = r6 | 0x00000000
	r20 = r20 >> 0x00000018
	r14 = r7 | 0x00000000
	r22 = r4 & 0x000000FF
	r28 = r5 & 0x000000FF
	F = r20 != 0x00000000
	branch F l0000CCA8_ds_t
	// succ:  l0000CCA8_ds_f l0000CCA8_ds_t
l0000CCA8_ds_f:
	r2 = 0x00000000 - 13
	CV = cond(r2)
	goto l0000CD08
	// succ:  l0000CD08
l0000CCA8_ds_t:
	r2 = 0x00000000 - 13
	CV = cond(r2)
	goto l0000D1E0
	// succ:  l0000D1E0
l0000CD08:
	F = r7 >u 0x00000004
	branch F l0000CD08_ds_t
	// succ:  l0000CD08_ds_f l0000CD08_ds_t
l0000CD08_ds_f:
	r2 = 0x00000000 - 22
	CV = cond(r2)
	goto l0000CD14
	// succ:  l0000CD14
l0000CD08_ds_t:
	r2 = 0x00000000 - 22
	CV = cond(r2)
	goto l0000D1E0
	// succ:  l0000D1E0
l0000CD14:
	r2 = 0x000001F0
	r4 = 0x00000000 - 9
	CV = cond(r4)
	r18 = r2 | 0x0000240C
	r3 = Mem0[r18:word32]
	r3 = r3 | 0x00000004
	r3 = r3 & r4
	Mem0[r18:word32] = r3
	r3 = Mem0[r18:word32]
	r3 = Mem0[r18:word32]
	call fn0000E718 (retsize: 0;)
	r3 = r2 | 0x0000241C
	r2 = r2 | 0x00002410
	Mem0[r3:word32] = r20
	r24 = r11 | 0x00000000
	r2 = Mem0[r2:word32]
	r2 = r2 & 0x000000FF
	Mem0[r1:word32] = r2
	r2 = 0x00000000 - 1
	CV = cond(r2)
	r3 = Mem0[r1:word32]
	F = r3 != 0x000000F8
	branch F l0000CD14_ds_t
	// succ:  l0000CD14_ds_f l0000CD14_ds_t
l0000CD14_ds_f:
	r4 = 0x000001F0
	goto l0000CD70
	// succ:  l0000CD70
l0000CD14_ds_t:
	r4 = 0x000001F0
	goto l0000D0F0
	// succ:  l0000D0F0
l0000CD70:
	call fn0000C998 (retsize: 0;)
	r6 = 0x00000000 + -2047
	CV = cond(r6)
	goto l0000CD7C
	// succ:  l0000CD7C
l0000CD70_ds_f:
	r20 = 0x000001F0
	goto l0000CD90
	// succ:  l0000CD90
l0000CD70_ds_t:
	r20 = 0x000001F0
	goto l0000CDA8
	// succ:  l0000CDA8
l0000CD7C:
	r2 = Mem0[r18:word32]
	r2 = r2 & 0x00000008
	F = r2 != 0x00000000
	branch F l0000CD70_ds_t
	goto l0000CD70_ds_f
	// succ:  l0000CD70_ds_f l0000CD70_ds_t
l0000CD90:
	r6 = r6 - 1
	CV = cond(r6)
	F = r6 != 0x00000000
	branch F l0000CD90_ds_t
	// succ:  l0000CD90_ds_f l0000CD90_ds_t
l0000CD90_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CDA0
	// succ:  l0000CDA0
l0000CD90_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CD7C
	// succ:  l0000CD7C
l0000CDA0:
	r4 = 0x000001F0
	goto l0000D0F0
	// succ:  l0000D0F0
l0000CDA8:
	F = r6 == 0x00000000
	branch F l0000CDA8_ds_t
	// succ:  l0000CDA8_ds_f l0000CDA8_ds_t
l0000CDA8_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CDB4
	// succ:  l0000CDB4
l0000CDA8_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000D0EC
	// succ:  l0000D0EC
l0000CDB4:
	r3 = r20 | 0x00002410
	r3 = Mem0[r3:word32]
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	F = r3 != 0x00000008
	branch F l0000CDB4_ds_t
	// succ:  l0000CDB4_ds_f l0000CDB4_ds_t
l0000CDB4_ds_f:
	r4 = 0x000001F0
	goto l0000CDD0
	// succ:  l0000CDD0
l0000CDB4_ds_t:
	r4 = 0x000001F0
	goto l0000D0F0
	// succ:  l0000D0F0
l0000CDD0:
	r22 = r22 + r22
	CV = cond(r22)
	r2 = r20 | 0x00002408
	r3 = r22 & 0x000000FF
	r20 = r20 | 0x0000240C
	Mem0[r2:word32] = r3
	call fn0000C93C (retsize: 0;)
	r6 = 0x00000000 + -2047
	CV = cond(r6)
	goto l0000CDF0
	// succ:  l0000CDF0
l0000CDD0_ds_f:
	r18 = 0x000001F0
	goto l0000CE04
	// succ:  l0000CE04
l0000CDD0_ds_t:
	r18 = 0x000001F0
	goto l0000CE1C
	// succ:  l0000CE1C
l0000CDF0:
	r2 = Mem0[r20:word32]
	r2 = r2 & 0x00000008
	F = r2 != 0x00000000
	branch F l0000CDD0_ds_t
	goto l0000CDD0_ds_f
	// succ:  l0000CDD0_ds_f l0000CDD0_ds_t
l0000CE04:
	r6 = r6 - 1
	CV = cond(r6)
	F = r6 != 0x00000000
	branch F l0000CE04_ds_t
	// succ:  l0000CE04_ds_f l0000CE04_ds_t
l0000CE04_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CE14
	// succ:  l0000CE14
l0000CE04_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CDF0
	// succ:  l0000CDF0
l0000CE14:
	r4 = 0x000001F0
	goto l0000D0F0
	// succ:  l0000D0F0
l0000CE1C:
	F = r6 == 0x00000000
	branch F l0000CE1C_ds_t
	// succ:  l0000CE1C_ds_f l0000CE1C_ds_t
l0000CE1C_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CE28
	// succ:  l0000CE28
l0000CE1C_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000D0EC
	// succ:  l0000D0EC
l0000CE28:
	r3 = r18 | 0x00002410
	r3 = Mem0[r3:word32]
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	F = r3 != 0x00000018
	branch F l0000CE28_ds_t
	// succ:  l0000CE28_ds_f l0000CE28_ds_t
l0000CE28_ds_f:
	r4 = 0x000001F0
	goto l0000CE44
	// succ:  l0000CE44
l0000CE28_ds_t:
	r4 = 0x000001F0
	goto l0000D0F0
	// succ:  l0000D0F0
l0000CE44:
	r2 = r18 | 0x00002408
	Mem0[r2:word32] = r28
	r2 = r18 | 0x0000240C
	call fn0000C93C (retsize: 0;)
	r5 = 0x00000000 + -2047
	CV = cond(r5)
	goto l0000CE58
	// succ:  l0000CE58
l0000CE44_ds_f:
	r18 = 0x000001F0
	goto l0000CE6C
	// succ:  l0000CE6C
l0000CE44_ds_t:
	r18 = 0x000001F0
	goto l0000CE84
	// succ:  l0000CE84
l0000CE58:
	r3 = Mem0[r2:word32]
	r3 = r3 & 0x00000008
	F = r3 != 0x00000000
	branch F l0000CE44_ds_t
	goto l0000CE44_ds_f
	// succ:  l0000CE44_ds_f l0000CE44_ds_t
l0000CE6C:
	r5 = r5 - 1
	CV = cond(r5)
	F = r5 != 0x00000000
	branch F l0000CE6C_ds_t
	// succ:  l0000CE6C_ds_f l0000CE6C_ds_t
l0000CE6C_ds_f:
	goto l0000CE7C
	// succ:  l0000CE7C
l0000CE6C_ds_t:
	goto l0000CE58
	// succ:  l0000CE58
l0000CE7C:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000D0EC
	// succ:  l0000D0EC
l0000CE84:
	F = r5 == 0x00000000
	branch F l0000CE84_ds_t
	// succ:  l0000CE84_ds_f l0000CE84_ds_t
l0000CE84_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CE90
	// succ:  l0000CE90
l0000CE84_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000D0EC
	// succ:  l0000D0EC
l0000CE90:
	r4 = r18 | 0x00002410
	r3 = Mem0[r4:word32]
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	F = r3 != 0x00000028
	branch F l0000CE90_ds_t
	// succ:  l0000CE90_ds_f l0000CE90_ds_t
l0000CE90_ds_f:
	F = r26 != 0x00000000
	goto l0000CEAC
	// succ:  l0000CEAC
l0000CE90_ds_t:
	F = r26 != 0x00000000
	goto l0000D0EC
	// succ:  l0000D0EC
l0000CEAC:
	branch !F l0000CEAC_ds_t
	// succ:  l0000CEAC_ds_f l0000CEAC_ds_t
l0000CEAC_ds_f:
	r20 = r4 | 0x00000000
	goto l0000CEB4
	// succ:  l0000CEB4
l0000CEAC_ds_t:
	r20 = r4 | 0x00000000
	goto l0000CF30
	// succ:  l0000CF30
l0000CEB4:
	goto l0000CF4C
	// succ:  l0000CF4C
l0000CEBC:
	r2 = (word32) Mem0[r16:byte]
	Mem0[r22:word32] = r2
	r2 = 0x00000000 + -2047
	CV = cond(r2)
	call fn0000C93C (retsize: 0;)
	goto l0000CECC
	// succ:  l0000CECC
l0000CEBC_ds_f:
	r2 = r2 - 1
	CV = cond(r2)
	goto l0000CEE0
	// succ:  l0000CEE0
l0000CEBC_ds_t:
	r2 = r2 - 1
	CV = cond(r2)
	goto l0000CEF8
	// succ:  l0000CEF8
l0000CECC:
	r3 = Mem0[r18:word32]
	r3 = r3 & 0x00000008
	F = r3 == 0x00000000
	branch F l0000CEBC_ds_t
	goto l0000CEBC_ds_f
	// succ:  l0000CEBC_ds_f l0000CEBC_ds_t
l0000CEE0:
	r2 = r2 + -1
	CV = cond(r2)
	F = r2 == 0xFFFFFFFF
	branch !F l0000CEE0_ds_t
	// succ:  l0000CEE0_ds_f l0000CEE0_ds_t
l0000CEE0_ds_f:
	r4 = 0x000001F0
	goto l0000CEF0
	// succ:  l0000CEF0
l0000CEE0_ds_t:
	r4 = 0x000001F0
	goto l0000CF0C
	// succ:  l0000CF0C
l0000CEF0:
	r5 = 0x00000000 - 9
	CV = cond(r5)
	goto l0000D0F4
	// succ:  l0000D0F4
l0000CEF8:
	F = r2 != 0xFFFFFFFF
	branch F l0000CEF8_ds_t
	// succ:  l0000CEF8_ds_f l0000CEF8_ds_t
l0000CEF8_ds_f:
	r4 = 0x000001F0
	goto l0000CF04
	// succ:  l0000CF04
l0000CEF8_ds_t:
	r4 = 0x000001F0
	goto l0000CECC
	// succ:  l0000CECC
l0000CF04:
	r5 = 0x00000000 - 9
	CV = cond(r5)
	goto l0000D0F4
	// succ:  l0000D0F4
l0000CF0C:
	r2 = Mem0[r20:word32]
	r14 = r14 - 1
	CV = cond(r14)
	Mem0[r1:word32] = r2
	r2 = Mem0[r1:word32]
	F = r2 != 0x00000028
	branch F l0000CF0C_ds_t
	// succ:  l0000CF0C_ds_f l0000CF0C_ds_t
l0000CF0C_ds_f:
	r16 = r16 + -1
	CV = cond(r16)
	goto l0000CF28
	// succ:  l0000CF28
l0000CF0C_ds_t:
	r16 = r16 + -1
	CV = cond(r16)
	goto l0000D0E8
	// succ:  l0000D0E8
l0000CF28:
	F = r14 != 0x00000000
	goto l0000CF3C
	// succ:  l0000CF3C
l0000CF30:
	r22 = r18 | 0x00002408
	r18 = r18 | 0x0000240C
	F = r14 != 0x00000000
	goto l0000CF3C
	// succ:  l0000CF3C
l0000CF30_ds_f:
	goto l0000CF44
	// succ:  l0000CF44
l0000CF30_ds_t:
	goto l0000CEBC
	// succ:  l0000CEBC
l0000CF3C:
	branch F l0000CF30_ds_t
	goto l0000CF30_ds_f
	// succ:  l0000CF30_ds_f l0000CF30_ds_t
l0000CF44:
	r2 = r14 | 0x00000000
	goto l0000D0EC
	// succ:  l0000D0EC
l0000CF4C:
	r18 = r18 | 0x0000240C
	call fn0000C998 (retsize: 0;)
	call fn0000C93C (retsize: 0;)
	r5 = 0x00000000 + -2047
	CV = cond(r5)
	goto l0000CF60
	// succ:  l0000CF60
l0000CF4C_ds_f:
	r20 = 0x000001F0
	goto l0000CF74
	// succ:  l0000CF74
l0000CF4C_ds_t:
	r20 = 0x000001F0
	goto l0000CF8C
	// succ:  l0000CF8C
l0000CF60:
	r2 = Mem0[r18:word32]
	r2 = r2 & 0x00000008
	F = r2 != 0x00000000
	branch F l0000CF4C_ds_t
	goto l0000CF4C_ds_f
	// succ:  l0000CF4C_ds_f l0000CF4C_ds_t
l0000CF74:
	r5 = r5 - 1
	CV = cond(r5)
	F = r5 != 0x00000000
	branch F l0000CF74_ds_t
	// succ:  l0000CF74_ds_f l0000CF74_ds_t
l0000CF74_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CF84
	// succ:  l0000CF84
l0000CF74_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CF60
	// succ:  l0000CF60
l0000CF84:
	r4 = 0x000001F0
	goto l0000D0F0
	// succ:  l0000D0F0
l0000CF8C:
	F = r5 == 0x00000000
	branch F l0000CF8C_ds_t
	// succ:  l0000CF8C_ds_f l0000CF8C_ds_t
l0000CF8C_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CF98
	// succ:  l0000CF98
l0000CF8C_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000D0EC
	// succ:  l0000D0EC
l0000CF98:
	r3 = r20 | 0x00002410
	r3 = Mem0[r3:word32]
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	F = r3 != 0x00000010
	branch F l0000CF98_ds_t
	// succ:  l0000CF98_ds_f l0000CF98_ds_t
l0000CF98_ds_f:
	r4 = 0x000001F0
	goto l0000CFB4
	// succ:  l0000CFB4
l0000CF98_ds_t:
	r4 = 0x000001F0
	goto l0000D0F0
	// succ:  l0000D0F0
l0000CFB4:
	r2 = r20 | 0x00002408
	r22 = r22 | 0x00000001
	r20 = r20 | 0x0000240C
	Mem0[r2:word32] = r22
	call fn0000C93C (retsize: 0;)
	r4 = 0x00000000 + -2047
	CV = cond(r4)
	goto l0000CFD0
	// succ:  l0000CFD0
l0000CFB4_ds_f:
	r5 = 0x000001F0
	goto l0000CFE4
	// succ:  l0000CFE4
l0000CFB4_ds_t:
	r5 = 0x000001F0
	goto l0000CFFC
	// succ:  l0000CFFC
l0000CFD0:
	r2 = Mem0[r20:word32]
	r2 = r2 & 0x00000008
	F = r2 != 0x00000000
	branch F l0000CFB4_ds_t
	goto l0000CFB4_ds_f
	// succ:  l0000CFB4_ds_f l0000CFB4_ds_t
l0000CFE4:
	r4 = r4 - 1
	CV = cond(r4)
	F = r4 != 0x00000000
	branch F l0000CFE4_ds_t
	// succ:  l0000CFE4_ds_f l0000CFE4_ds_t
l0000CFE4_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CFF4
	// succ:  l0000CFF4
l0000CFE4_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000CFD0
	// succ:  l0000CFD0
l0000CFF4:
	r4 = 0x000001F0
	goto l0000D0F0
	// succ:  l0000D0F0
l0000CFFC:
	F = r4 == 0x00000000
	branch F l0000CFFC_ds_t
	// succ:  l0000CFFC_ds_f l0000CFFC_ds_t
l0000CFFC_ds_f:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000D008
	// succ:  l0000D008
l0000CFFC_ds_t:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	goto l0000D0EC
	// succ:  l0000D0EC
l0000D008:
	r4 = r5 | 0x00002410
	r3 = Mem0[r4:word32]
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	F = r3 != 0x00000040
	branch F l0000D008_ds_t
	// succ:  l0000D008_ds_f l0000D008_ds_t
l0000D008_ds_f:
	r18 = r5 | 0x0000240C
	goto l0000D024
	// succ:  l0000D024
l0000D008_ds_t:
	r18 = r5 | 0x0000240C
	goto l0000D0EC
	// succ:  l0000D0EC
l0000D024:
	r22 = r5 | 0x00002408
	goto l0000D0CC
	// succ:  l0000D0CC
l0000D02C:
	F = r14 != 0x00000000
	branch F l0000D02C_ds_t
	// succ:  l0000D02C_ds_f l0000D02C_ds_t
l0000D02C_ds_f:
	goto l0000D038
	// succ:  l0000D038
l0000D02C_ds_t:
	goto l0000D044
	// succ:  l0000D044
l0000D038:
	r2 = Mem0[r18:word32]
	r2 = r2 & 0x000000F3
	Mem0[r18:word32] = r2
	// succ:  l0000D044
l0000D044:
	r2 = 0x00000000 + -2047
	CV = cond(r2)
	call fn0000C93C (retsize: 0;)
	goto l0000D04C
	// succ:  l0000D04C
l0000D044_ds_f:
	r2 = r2 - 1
	CV = cond(r2)
	goto l0000D060
	// succ:  l0000D060
l0000D044_ds_t:
	r2 = r2 - 1
	CV = cond(r2)
	goto l0000D078
	// succ:  l0000D078
l0000D04C:
	r3 = Mem0[r18:word32]
	r3 = r3 & 0x00000008
	F = r3 == 0x00000000
	branch F l0000D044_ds_t
	goto l0000D044_ds_f
	// succ:  l0000D044_ds_f l0000D044_ds_t
l0000D060:
	r2 = r2 + -1
	CV = cond(r2)
	F = r2 == 0xFFFFFFFF
	branch !F l0000D060_ds_t
	// succ:  l0000D060_ds_f l0000D060_ds_t
l0000D060_ds_f:
	r4 = 0x000001F0
	goto l0000D070
	// succ:  l0000D070
l0000D060_ds_t:
	r4 = 0x000001F0
	goto l0000D08C
	// succ:  l0000D08C
l0000D070:
	r5 = 0x00000000 - 9
	CV = cond(r5)
	goto l0000D0F4
	// succ:  l0000D0F4
l0000D078:
	F = r2 != 0xFFFFFFFF
	branch F l0000D078_ds_t
	// succ:  l0000D078_ds_f l0000D078_ds_t
l0000D078_ds_f:
	r4 = 0x000001F0
	goto l0000D084
	// succ:  l0000D084
l0000D078_ds_t:
	r4 = 0x000001F0
	goto l0000D04C
	// succ:  l0000D04C
l0000D084:
	r5 = 0x00000000 - 9
	CV = cond(r5)
	goto l0000D0F4
	// succ:  l0000D0F4
l0000D08C:
	r2 = Mem0[r22:word32]
	F = r14 == 0x00000000
	Mem0[r16:byte] = SLICE(r2, byte, 0)
	r2 = Mem0[r20:word32]
	Mem0[r1:word32] = r2
	branch F l0000D08C_ds_t
	// succ:  l0000D08C_ds_f l0000D08C_ds_t
l0000D08C_ds_f:
	goto l0000D0A8
	// succ:  l0000D0A8
l0000D08C_ds_t:
	goto l0000D0B4
	// succ:  l0000D0B4
l0000D0A8:
	r2 = Mem0[r1:word32]
	F = r2 != 0x00000050
	goto l0000D0BC
	// succ:  l0000D0BC
l0000D0B4:
	r2 = Mem0[r1:word32]
	F = r2 != 0x00000058
	// succ:  l0000D0BC
l0000D0BC:
	branch F l0000D0BC_ds_t
	// succ:  l0000D0BC_ds_f l0000D0BC_ds_t
l0000D0BC_ds_f:
	r16 = r16 + -1
	CV = cond(r16)
	goto l0000D0C4
	// succ:  l0000D0C4
l0000D0BC_ds_t:
	r16 = r16 + -1
	CV = cond(r16)
	goto l0000D0E8
	// succ:  l0000D0E8
l0000D0C4:
	F = r14 != 0x00000000
	goto l0000D0D4
	// succ:  l0000D0D4
l0000D0CC:
	r20 = r4 | 0x00000000
	F = r14 != 0x00000000
	goto l0000D0D4
	// succ:  l0000D0D4
l0000D0CC_ds_f:
	r14 = r14 - 1
	CV = cond(r14)
	goto l0000D0DC
	// succ:  l0000D0DC
l0000D0CC_ds_t:
	r14 = r14 - 1
	CV = cond(r14)
	goto l0000D02C
	// succ:  l0000D02C
l0000D0D4:
	branch F l0000D0CC_ds_t
	goto l0000D0CC_ds_f
	// succ:  l0000D0CC_ds_f l0000D0CC_ds_t
l0000D0DC:
	r14 = r14 + -1
	CV = cond(r14)
	r2 = r14 | 0x00000000
	goto l0000D0EC
	// succ:  l0000D0EC
l0000D0E8:
	r2 = 0x00000000 - 1
	CV = cond(r2)
	// succ:  l0000D0EC
l0000D0EC:
	r4 = 0x000001F0
	// succ:  l0000D0F0
l0000D0F0:
	r5 = 0x00000000 - 9
	CV = cond(r5)
	goto l0000D0F4
	// succ:  l0000D0F4
l0000D0F0_ds_f:
	r5 = r5 - 1
	CV = cond(r5)
	goto l0000D120
	// succ:  l0000D120
l0000D0F0_ds_t:
	r5 = r5 - 1
	CV = cond(r5)
	goto l0000D12C
	// succ:  l0000D12C
l0000D0F4:
	r4 = r4 | 0x0000240C
	r3 = Mem0[r4:word32]
	r3 = r3 | 0x00000010
	r3 = r3 & r5
	r5 = 0x00000000 + -2047
	CV = cond(r5)
	Mem0[r4:word32] = r3
	// succ:  l0000D10C
l0000D10C:
	r3 = Mem0[r4:word32]
	r3 = r3 & 0x00000010
	F = r3 == 0x00000000
	branch F l0000D0F0_ds_t
	goto l0000D0F0_ds_f
	// succ:  l0000D0F0_ds_f l0000D0F0_ds_t
l0000D120:
	F = r5 != 0x00000000
	branch F l0000D120_ds_t
	// succ:  l0000D120_ds_f l0000D120_ds_t
l0000D120_ds_f:
	goto l0000D12C
	// succ:  l0000D12C
l0000D120_ds_t:
	goto l0000D10C
	// succ:  l0000D10C
l0000D12C:
	call fn0000C93C (retsize: 0;)
	r4 = 0x000001F0
	r5 = 0x00000000 + -2047
	CV = cond(r5)
	r4 = r4 | 0x0000240C
	r3 = Mem0[r4:word32]
	r3 = Mem0[r4:word32]
	goto l0000D148
	// succ:  l0000D148
l0000D12C_ds_f:
	r5 = r5 - 1
	CV = cond(r5)
	goto l0000D15C
	// succ:  l0000D15C
l0000D12C_ds_t:
	r5 = r5 - 1
	CV = cond(r5)
	goto l0000D168
	// succ:  l0000D168
l0000D148:
	r3 = Mem0[r4:word32]
	r3 = r3 & 0x00000010
	F = r3 == 0x00000000
	branch F l0000D12C_ds_t
	goto l0000D12C_ds_f
	// succ:  l0000D12C_ds_f l0000D12C_ds_t
l0000D15C:
	F = r5 != 0x00000000
	branch F l0000D15C_ds_t
	// succ:  l0000D15C_ds_f l0000D15C_ds_t
l0000D15C_ds_f:
	goto l0000D168
	// succ:  l0000D168
l0000D15C_ds_t:
	goto l0000D148
	// succ:  l0000D148
l0000D168:
	r3 = 0x000001F0
	r4 = 0x00000000 + -2047
	CV = cond(r4)
	r3 = r3 | 0x00002410
	goto l0000D174
	// succ:  l0000D174
l0000D168_ds_f:
	F = r4 != 0x00000000
	goto l0000D184
	// succ:  l0000D184
l0000D168_ds_t:
	F = r4 != 0x00000000
	goto l0000D19C
	// succ:  l0000D19C
l0000D174:
	r5 = Mem0[r3:word32]
	F = r5 == 0x000000F8
	branch F l0000D168_ds_t
	goto l0000D168_ds_f
	// succ:  l0000D168_ds_f l0000D168_ds_t
l0000D184:
	r4 = r4 - 1
	CV = cond(r4)
	F = r4 != 0x00000000
	branch F l0000D184_ds_t
	// succ:  l0000D184_ds_f l0000D184_ds_t
l0000D184_ds_f:
	goto l0000D194
	// succ:  l0000D194
l0000D184_ds_t:
	goto l0000D174
	// succ:  l0000D174
l0000D194:
	goto l0000D1A4
	// succ:  l0000D1A4
l0000D19C:
	branch F l0000D19C_ds_t
	// succ:  l0000D19C_ds_f l0000D19C_ds_t
l0000D19C_ds_f:
	r5 = 0x00000000 + -2047
	CV = cond(r5)
	goto l0000D1A4
	// succ:  l0000D1A4
l0000D19C_ds_t:
	r5 = 0x00000000 + -2047
	CV = cond(r5)
	goto l0000D1B4
	// succ:  l0000D1B4
l0000D1A4:
	call fn0000C970 (retsize: 0;)
	goto l0000D1D8
	// succ:  l0000D1D8
l0000D1B4:
	r3 = 0x000001F0
	r3 = r3 | 0x00002420
	goto l0000D1BC
	// succ:  l0000D1BC
l0000D1B4_ds_f:
	r5 = r5 - 1
	CV = cond(r5)
	goto l0000D1CC
	// succ:  l0000D1CC
l0000D1B4_ds_t:
	r5 = r5 - 1
	CV = cond(r5)
	goto l0000D1D8
	// succ:  l0000D1D8
l0000D1BC:
	r4 = Mem0[r3:word32]
	F = r4 == 0x0000003A
	branch F l0000D1B4_ds_t
	goto l0000D1B4_ds_f
	// succ:  l0000D1B4_ds_f l0000D1B4_ds_t
l0000D1CC:
	F = r5 != 0x00000000
	branch F l0000D1CC_ds_t
	// succ:  l0000D1CC_ds_f l0000D1CC_ds_t
l0000D1CC_ds_f:
	goto l0000D1D8
	// succ:  l0000D1D8
l0000D1CC_ds_t:
	goto l0000D1BC
	// succ:  l0000D1BC
l0000D1D8:
	r3 = r24 | 0x00000000
	call fn0000E740 (retsize: 0;)
l0000D1E0:
	r1 = r1 + -44
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 40:word32]
	r14 = Mem0[r1 - 36:word32]
	r16 = Mem0[r1 - 32:word32]
	r18 = Mem0[r1 - 28:word32]
	r20 = Mem0[r1 - 24:word32]
	r22 = Mem0[r1 - 20:word32]
	r24 = Mem0[r1 - 16:word32]
	r26 = Mem0[r1 - 12:word32]
	r28 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000CCA8_exit
fn0000CCA8_exit:


// fn0000D214
// Return size: 0
void fn0000D214()
fn0000D214_entry:
	r1 = fp
	// succ:  l0000D214
l0000D214:
	Mem0[r1 - 20:word32] = r14
	r14 = 0x00000000 + 0
	CV = cond(r14)
	Mem0[r1 - 24:word32] = r2
	Mem0[r1 - 16:word32] = r16
	Mem0[r1 - 12:word32] = r18
	Mem0[r1 - 8:word32] = r20
	Mem0[r1 - 4:word32] = r9
	r20 = r3 | 0x00000000
	r1 = r1 - 24
	CV = cond(r1)
	r18 = r4 | 0x00000000
	r16 = r5 | 0x00000000
	r2 = r14 | 0x00000000
	goto l0000D268
	// succ:  l0000D268
l0000D248:
	r5 = r20 + r2
	CV = cond(r5)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r5 = (word32) Mem0[r5:byte]
	r4 = 0x00000000 + -54
	CV = cond(r4)
	r7 = r3 | 0x00000000
	r2 = r2 + -1
	CV = cond(r2)
	call fn0000CCA8 (retsize: 0;)
	r14 = r14 | r11
	// succ:  l0000D268
l0000D268:
	F = r2 <u r16
	branch F l0000D268_ds_t
	// succ:  l0000D268_ds_f l0000D268_ds_t
l0000D268_ds_f:
	r6 = r18 + r2
	CV = cond(r6)
	goto l0000D274
	// succ:  l0000D274
l0000D268_ds_t:
	r6 = r18 + r2
	CV = cond(r6)
	goto l0000D248
	// succ:  l0000D248
l0000D274:
	r1 = r1 + -24
	CV = cond(r1)
	r11 = r14 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 24:word32]
	r14 = Mem0[r1 - 20:word32]
	r16 = Mem0[r1 - 16:word32]
	r18 = Mem0[r1 - 12:word32]
	r20 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000D214_exit
fn0000D214_exit:


// fn0000D298
// Return size: 0
void fn0000D298()
fn0000D298_entry:
	r1 = fp
	// succ:  l0000D298
l0000D298:
	Mem0[r1 - 20:word32] = r14
	r14 = 0x00000000 + 0
	CV = cond(r14)
	Mem0[r1 - 24:word32] = r2
	Mem0[r1 - 16:word32] = r16
	Mem0[r1 - 12:word32] = r18
	Mem0[r1 - 8:word32] = r20
	Mem0[r1 - 4:word32] = r9
	r20 = r3 | 0x00000000
	r1 = r1 - 24
	CV = cond(r1)
	r18 = r4 | 0x00000000
	r16 = r5 | 0x00000000
	r2 = r14 | 0x00000000
	goto l0000D2EC
	// succ:  l0000D2EC
l0000D2CC:
	r5 = r20 + r2
	CV = cond(r5)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r5 = (word32) Mem0[r5:byte]
	r4 = 0x00000000 + -54
	CV = cond(r4)
	r7 = 0x00000000 + -1
	CV = cond(r7)
	r2 = r2 + -1
	CV = cond(r2)
	call fn0000CCA8 (retsize: 0;)
	r14 = r14 | r11
	// succ:  l0000D2EC
l0000D2EC:
	F = r2 <u r16
	branch F l0000D2EC_ds_t
	// succ:  l0000D2EC_ds_f l0000D2EC_ds_t
l0000D2EC_ds_f:
	r6 = r18 + r2
	CV = cond(r6)
	goto l0000D2F8
	// succ:  l0000D2F8
l0000D2EC_ds_t:
	r6 = r18 + r2
	CV = cond(r6)
	goto l0000D2CC
	// succ:  l0000D2CC
l0000D2F8:
	r1 = r1 + -24
	CV = cond(r1)
	r11 = r14 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 24:word32]
	r14 = Mem0[r1 - 20:word32]
	r16 = Mem0[r1 - 16:word32]
	r18 = Mem0[r1 - 12:word32]
	r20 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000D298_exit
fn0000D298_exit:


// fn0000D31C
// Return size: 0
void fn0000D31C()
fn0000D31C_entry:
	r1 = fp
	// succ:  l0000D31C
l0000D31C:
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r16
	r2 = r3 | 0x00000000
	r1 = r1 - 32
	CV = cond(r1)
	r14 = Mem0[r3 + 40:word32]
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r6 = r1 + -8
	CV = cond(r6)
	r4 = r3 | 0x00000000
	goto l0000D378
	// succ:  l0000D378
l0000D348:
	branch F l0000D348_ds_t
	// succ:  l0000D348_ds_f l0000D348_ds_t
l0000D348_ds_f:
	goto l0000D350
	// succ:  l0000D350
l0000D348_ds_t:
	goto l0000D35C
	// succ:  l0000D35C
l0000D350:
	r5 = Mem0[r2 + 44:word32]
	goto l0000D368
	// succ:  l0000D368
l0000D35C:
	r5 = r3 - 32
	CV = cond(r5)
	r7 = Mem0[r2 + 48:word32]
l0000D368:
	Mem0[r6:byte] = SLICE(r5, byte, 0)
	r4 = r4 + -1
	CV = cond(r4)
	r3 = r3 + -8
	CV = cond(r3)
	r6 = r6 + -1
	CV = cond(r6)
	// succ:  l0000D378
l0000D378:
	F = r4 <u r14
	branch F l0000D378_ds_t
	// succ:  l0000D378_ds_f l0000D378_ds_t
l0000D378_ds_f:
	F = r4 >u 0x00000003
	goto l0000D384
	// succ:  l0000D384
l0000D378_ds_t:
	F = r4 >u 0x00000003
	goto l0000D348
	// succ:  l0000D348
l0000D384:
	r3 = r1 + -8
	CV = cond(r3)
	r4 = r1 | 0x00000000
	r5 = r14 | 0x00000000
	call fn0000D214 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = r1 | 0x00000000
	r6 = r3 | 0x00000000
	goto l0000D3E4
	// succ:  l0000D3E4
l0000D3A4:
	F = r6 >u 0x00000003
	branch F l0000D3A4_ds_t
	// succ:  l0000D3A4_ds_f l0000D3A4_ds_t
l0000D3A4_ds_f:
	r5 = (word32) Mem0[r4:byte]
	goto l0000D3B0
	// succ:  l0000D3B0
l0000D3A4_ds_t:
	r5 = (word32) Mem0[r4:byte]
	goto l0000D3C4
	// succ:  l0000D3C4
l0000D3B0:
l0000D3C4:
	r7 = r3 - 32
	CV = cond(r7)
l0000D3E4:
	F = r6 <u r14
	branch F l0000D3E4_ds_t
	// succ:  l0000D3E4_ds_f l0000D3E4_ds_t
l0000D3E4_ds_f:
	goto l0000D3F0
	// succ:  l0000D3F0
l0000D3E4_ds_t:
	goto l0000D3A4
	// succ:  l0000D3A4
l0000D3F0:
	r1 = r1 + -32
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000D31C_exit
fn0000D31C_exit:


// fn0000D408
// Return size: 0
void fn0000D408()
fn0000D408_entry:
	r1 = fp
	// succ:  l0000D408
l0000D408:
	Mem0[r1 - 4:word32] = r9
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r1 = r1 - 20
	CV = cond(r1)
	r5 = Mem0[r3 + 40:word32]
	r8 = r1 + -8
	CV = cond(r8)
	r7 = r1 | 0x00000000
	r6 = r4 | 0x00000000
	goto l0000D474
	// succ:  l0000D474
l0000D428:
	branch F l0000D428_ds_t
	// succ:  l0000D428_ds_f l0000D428_ds_t
l0000D428_ds_f:
	goto l0000D430
	// succ:  l0000D430
l0000D428_ds_t:
	goto l0000D448
	// succ:  l0000D448
l0000D430:
	r11 = Mem0[r3 + 44:word32]
l0000D448:
	r11 = r4 - 32
	CV = cond(r11)
	r12 = Mem0[r3 + 48:word32]
l0000D474:
	F = r6 <u r5
	branch F l0000D474_ds_t
	// succ:  l0000D474_ds_f l0000D474_ds_t
l0000D474_ds_f:
	F = r6 >u 0x00000003
	goto l0000D480
	// succ:  l0000D480
l0000D474_ds_t:
	F = r6 >u 0x00000003
	goto l0000D428
	// succ:  l0000D428
l0000D480:
	r3 = r1 + -8
	CV = cond(r3)
	r4 = r1 | 0x00000000
	call fn0000D298 (retsize: 0;)
	r1 = r1 + -20
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000D408_exit
fn0000D408_exit:


// fn0000D49C
// Return size: 0
void fn0000D49C()
fn0000D49C_entry:
	r1 = fp
	// succ:  l0000D49C
l0000D49C:
	Mem0[r1 - 44:word32] = r2
	Mem0[r1 - 32:word32] = r18
	Mem0[r1 - 8:word32] = r30
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 40:word32] = r14
	Mem0[r1 - 36:word32] = r16
	Mem0[r1 - 28:word32] = r20
	Mem0[r1 - 24:word32] = r22
	Mem0[r1 - 20:word32] = r24
	Mem0[r1 - 16:word32] = r26
	Mem0[r1 - 12:word32] = r28
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r1 = r1 - 76
	CV = cond(r1)
	r18 = Mem0[r3 + 40:word32]
	r30 = Mem0[r3 + 68:word32]
	r8 = r1 + -24
	CV = cond(r8)
	r7 = r1 + -16
	CV = cond(r7)
	r6 = r1 + -8
	CV = cond(r6)
	r2 = r4 | 0x00000000
	goto l0000D554
	// succ:  l0000D554
l0000D4EC:
	branch F l0000D4EC_ds_t
	// succ:  l0000D4EC_ds_f l0000D4EC_ds_t
l0000D4EC_ds_f:
	goto l0000D4F4
	// succ:  l0000D4F4
l0000D4EC_ds_t:
	goto l0000D518
	// succ:  l0000D518
l0000D4F4:
	r5 = Mem0[r3 + 44:word32]
l0000D518:
	r5 = r4 - 32
	CV = cond(r5)
	r11 = Mem0[r3 + 48:word32]
l0000D554:
	F = r2 <u r18
	branch F l0000D554_ds_t
	// succ:  l0000D554_ds_f l0000D554_ds_t
l0000D554_ds_f:
	F = r2 >u 0x00000003
	goto l0000D560
	// succ:  l0000D560
l0000D554_ds_t:
	F = r2 >u 0x00000003
	goto l0000D4EC
	// succ:  l0000D4EC
l0000D560:
	r16 = 0x00000000 + 0
	CV = cond(r16)
	r2 = r1 | 0x00000000
	r14 = r16 | 0x00000000
	r20 = r1 + -24
	CV = cond(r20)
	r28 = r1 + -16
	CV = cond(r28)
	r24 = r1 + -8
	CV = cond(r24)
	r22 = 0x00000000 + -1000
	CV = cond(r22)
	goto l0000D5E4
	// succ:  l0000D5E4
l0000D580:
	r3 = r20 + r14
	CV = cond(r3)
	r5 = 0x00000000 + -1
	CV = cond(r5)
	call fn0000D214 (retsize: 0;)
	F = r30 != 0x00000000
	branch F l0000D580_ds_t
	// succ:  l0000D580_ds_f l0000D580_ds_t
l0000D580_ds_f:
	r3 = r20 | 0x00000000
	goto l0000D598
	// succ:  l0000D598
l0000D580_ds_t:
	r3 = r20 | 0x00000000
	goto l0000D5B4
	// succ:  l0000D5B4
l0000D598:
	r3 = r28 + r14
	CV = cond(r3)
	r4 = (word32) Mem0[r2:byte]
	r3 = (word32) Mem0[r3:byte]
	r3 = r3 ^ 0x000000FF
	r3 = r3 & r4
	Mem0[r2:byte] = SLICE(r3, byte, 0)
	r3 = r20 | 0x00000000
	// succ:  l0000D5B4
l0000D5B4:
	r5 = r18 | 0x00000000
	r4 = r1 | 0x00000000
	call fn0000D298 (retsize: 0;)
	r3 = r24 + r14
	CV = cond(r3)
	r5 = (word32) Mem0[r3:byte]
	F = r5 == 0x00000000
	branch F l0000D5B4_ds_t
	// succ:  l0000D5B4_ds_f l0000D5B4_ds_t
l0000D5B4_ds_f:
	r16 = r11 | 0x00000000
	goto l0000D5D4
	// succ:  l0000D5D4
l0000D5B4_ds_t:
	r16 = r11 | 0x00000000
	goto l0000D5DC
	// succ:  l0000D5DC
l0000D5D4:
	call fn0000C8A0 (retsize: 0;)
l0000D5DC:
	r14 = r14 + -1
	CV = cond(r14)
	r2 = r2 + -1
	CV = cond(r2)
	// succ:  l0000D5E4
l0000D5E4:
	F = r14 <u r18
	branch F l0000D5E4_ds_t
	// succ:  l0000D5E4_ds_f l0000D5E4_ds_t
l0000D5E4_ds_f:
	r4 = r2 | 0x00000000
	goto l0000D5F0
	// succ:  l0000D5F0
l0000D5E4_ds_t:
	r4 = r2 | 0x00000000
	goto l0000D580
	// succ:  l0000D580
l0000D5F0:
	r1 = r1 + -76
	CV = cond(r1)
	r11 = r16 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 44:word32]
	r14 = Mem0[r1 - 40:word32]
	r16 = Mem0[r1 - 36:word32]
	r18 = Mem0[r1 - 32:word32]
	r20 = Mem0[r1 - 28:word32]
	r22 = Mem0[r1 - 24:word32]
	r24 = Mem0[r1 - 20:word32]
	r26 = Mem0[r1 - 16:word32]
	r28 = Mem0[r1 - 12:word32]
	r30 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000D49C_exit
fn0000D49C_exit:


// fn0000D628
// Return size: 0
void fn0000D628()
fn0000D628_entry:
	r1 = fp
	// succ:  l0000D628
l0000D628:
	r3 = 0x00000001
	r3 = r3 | 0x000034C0
	r11 = (word32) Mem0[r3:byte]
	r11 = r11 << 0x00000018
	r11 = r11 >> 0x00000018
	return
	// succ:  fn0000D628_exit
fn0000D628_exit:


// fn0000D640
// Return size: 0
void fn0000D640()
fn0000D640_entry:
	r1 = fp
	// succ:  l0000D640
l0000D640:
	Mem0[r1 - 12:word32] = r2
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r14
	r1 = r1 - 12
	CV = cond(r1)
	call fn0000ECE8 (retsize: 0;)
	r2 = 0x00000000 - r11
	CV = cond(r2)
	r11 = r2 | r11
	r2 = 0x00000001
	r11 = r11 ^ 0x0000FFFF
	r2 = r2 | 0x000034C4
	r11 = r11 >>u 0x0000001F
	Mem0[r2:word32] = r11
	r11 = 0x00000000 - 13
	CV = cond(r11)
	r2 = Mem0[r2:word32]
	F = r2 != 0x00000000
	branch F l0000D640_ds_t
	// succ:  l0000D640_ds_f l0000D640_ds_t
l0000D640_ds_f:
	r3 = 0x00000001
	goto l0000D684
	// succ:  l0000D684
l0000D640_ds_t:
	r3 = 0x00000001
	goto l0000D758
	// succ:  l0000D758
l0000D684:
	r14 = 0x00000001
	r14 = r14 | 0x000034C8
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = r3 | 0x0000C200
	r5 = r4 | 0x00000000
	Mem0[r14:word32] = r3
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn00009744 (retsize: 0;)
	r5 = 0x00000000 + -2
	CV = cond(r5)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -3
	CV = cond(r4)
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -27
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = 0x00000000 + -27
	CV = cond(r3)
	call fn0000B320 (retsize: 0;)
	r3 = 0x00000000 + -25
	CV = cond(r3)
	call fn0000BF88 (retsize: 0;)
	r3 = Mem0[r14:word32]
	r4 = Mem0[r14:word32]
	r3 = r3 << 0x00000003
	r4 = r4 << 0x00000004
	r3 = r11 + r3
	CV = cond(r3)
	call fn0000FEDC (retsize: 0;)
	r3 = 0x000001F0
	r6 = r11 & 0x000000FF
	r4 = r3 | 0x0000280C
	r11 = r11 >>u 0x00000008
	r5 = Mem0[r4:word32]
	r5 = r5 | 0x00000080
	r11 = r11 & 0x000000FF
	Mem0[r4:word32] = r5
	r5 = r3 | 0x00002800
	Mem0[r5:word32] = r6
	r5 = r3 | 0x00002804
	Mem0[r5:word32] = r11
	r5 = r3 | 0x000028A4
	r3 = r3 | 0x00002808
	Mem0[r5:word32] = r2
	r5 = 0x00000000 + -3
	CV = cond(r5)
	Mem0[r4:word32] = r5
	r4 = 0x00000000 + -7
	CV = cond(r4)
	Mem0[r3:word32] = r4
	r4 = 0x00000000
	r3 = 0x00000000 + -27
	CV = cond(r3)
	r4 = r4 | 0x0000DA70
	call fn0000B4D4 (retsize: 0;)
	r3 = 0x00000001
	r11 = r2 | 0x00000000
	r3 = r3 | 0x000030DC
	Mem0[r3:word32] = r2
	// succ:  l0000D758
l0000D758:
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000D640_exit
fn0000D640_exit:


// fn0000D76C
// Return size: 0
void fn0000D76C()
fn0000D76C_entry:
	r1 = fp
	// succ:  l0000D76C
l0000D76C:
	r3 = 0x00000001
	Mem0[r1 - 8:word32] = r2
	r3 = r3 | 0x000030DC
	r2 = 0x00000000 + -1
	CV = cond(r2)
	Mem0[r1 - 4:word32] = r9
	Mem0[r3:word32] = r2
	r1 = r1 - 8
	CV = cond(r1)
	call fn0000ECE8 (retsize: 0;)
	r3 = 0x00000000 - r11
	CV = cond(r3)
	r4 = 0x00000000
	r11 = r3 | r11
	r3 = 0x00000001
	r11 = r11 ^ 0x0000FFFF
	r3 = r3 | 0x000034C4
	r11 = r11 >>u 0x0000001F
	r4 = r4 | 0x0000DA70
	Mem0[r3:word32] = r11
	r3 = 0x00000000 + -27
	CV = cond(r3)
	call fn0000B4F0 (retsize: 0;)
	r3 = r2 | 0x00000000
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r5 = 0x00000000 + -7
	CV = cond(r5)
	call fn00009744 (retsize: 0;)
	r3 = r2 | 0x00000000
	r5 = 0x00000000 + -7
	CV = cond(r5)
	r4 = 0x00000000 + -3
	CV = cond(r4)
	call fn00009744 (retsize: 0;)
	r3 = 0x00000000 + -27
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn0000B320 (retsize: 0;)
	r3 = 0x00000000 + -27
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r1 = r1 + -8
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000D76C_exit
fn0000D76C_exit:


// fn0000D804
// Return size: 0
void fn0000D804()
fn0000D804_entry:
	r1 = fp
	// succ:  l0000D804
l0000D804:
	r4 = 0x00000001
	r3 = r3 << 0x00000018
	r4 = r4 | 0x000030DC
	r11 = 0x00000000 - 13
	CV = cond(r11)
	r4 = Mem0[r4:word32]
	F = r4 != 0x00000000
	branch F l0000D804_ds_t
	// succ:  l0000D804_ds_f l0000D804_ds_t
l0000D804_ds_f:
	r3 = r3 >> 0x00000018
	goto l0000D824
	// succ:  l0000D824
l0000D804_ds_t:
	r3 = r3 >> 0x00000018
	goto l0000D864
	// succ:  l0000D864
l0000D824:
	r4 = 0x00000001
	r4 = r4 | 0x000034C4
	r4 = Mem0[r4:word32]
	F = r4 != 0x00000000
	branch F l0000D824_ds_t
	// succ:  l0000D824_ds_f l0000D824_ds_t
l0000D824_ds_f:
	r4 = 0x000001F0
	goto l0000D83C
	// succ:  l0000D83C
l0000D824_ds_t:
	r4 = 0x000001F0
	goto l0000D864
	// succ:  l0000D864
l0000D83C:
	r4 = r4 | 0x0000287C
	// succ:  l0000D840
l0000D840:
	r5 = Mem0[r4:word32]
	r5 = r5 & 0x00000002
	F = r5 == 0x00000000
	branch F l0000D840_ds_t
	// succ:  l0000D840_ds_f l0000D840_ds_t
l0000D840_ds_f:
	goto l0000D854
	// succ:  l0000D854
l0000D840_ds_t:
	goto l0000D840
	// succ:  l0000D840
l0000D854:
	r4 = 0x000001F0
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r4 = r4 | 0x00002800
	Mem0[r4:word32] = r3
	// succ:  l0000D864
l0000D864:
	return
	// succ:  fn0000D804_exit
fn0000D804_exit:


// fn0000D8D8
// Return size: 0
void fn0000D8D8()
fn0000D8D8_entry:
	r1 = fp
	// succ:  l0000D8D8
l0000D8D8:
	Mem0[r1 - 8:word32] = r2
	r2 = r3 | 0x00000000
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x000030DC
	r1 = r1 - 8
	CV = cond(r1)
	r3 = Mem0[r3:word32]
	F = r3 != 0x00000000
	branch F l0000D8D8_ds_t
	// succ:  l0000D8D8_ds_f l0000D8D8_ds_t
l0000D8D8_ds_f:
	r11 = 0x00000000 - 13
	CV = cond(r11)
	goto l0000D900
	// succ:  l0000D900
l0000D8D8_ds_t:
	r11 = 0x00000000 - 13
	CV = cond(r11)
	goto l0000D94C
	// succ:  l0000D94C
l0000D900:
	r3 = 0x00000001
	r3 = r3 | 0x000034C4
	r3 = Mem0[r3:word32]
	F = r3 != 0x00000000
	branch !F l0000D900_ds_t
	// succ:  l0000D900_ds_f l0000D900_ds_t
l0000D900_ds_f:
	goto l0000D918
	// succ:  l0000D918
l0000D900_ds_t:
	goto l0000D93C
	// succ:  l0000D93C
l0000D918:
	r1 = r1 + -8
	CV = cond(r1)
	goto l0000D950
	// succ:  l0000D950
l0000D920:
	branch F l0000D920_ds_t
	// succ:  l0000D920_ds_f l0000D920_ds_t
l0000D920_ds_f:
	goto l0000D928
	// succ:  l0000D928
l0000D920_ds_t:
	goto l0000D930
	// succ:  l0000D930
l0000D928:
	r3 = 0x00000000 + -13
	CV = cond(r3)
	call fn0000D804 (retsize: 0;)
l0000D930:
	r3 = (int32) Mem0[r2:int8]
	r2 = r2 + -1
	CV = cond(r2)
	call fn0000D804 (retsize: 0;)
l0000D93C:
	r11 = (int32) Mem0[r2:int8]
	F = r11 != 0x00000000
	branch F l0000D93C_ds_t
	// succ:  l0000D93C_ds_f l0000D93C_ds_t
l0000D93C_ds_f:
	F = r11 != 0x0000000A
	goto l0000D94C
	// succ:  l0000D94C
l0000D93C_ds_t:
	F = r11 != 0x0000000A
	goto l0000D920
	// succ:  l0000D920
l0000D94C:
	r1 = r1 + -8
	CV = cond(r1)
	// succ:  l0000D950
l0000D950:
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000D8D8_exit
fn0000D8D8_exit:


// fn0000D95C
// Return size: 0
void fn0000D95C()
fn0000D95C_entry:
	r1 = fp
	// succ:  l0000D95C
l0000D95C:
	r4 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r4 = r4 | 0x000034C4
	Mem0[r1 - 8:word32] = r2
	r4 = Mem0[r4:word32]
	r1 = r1 - 8
	CV = cond(r1)
	F = r4 != 0x00000000
	branch F l0000D95C_ds_t
	// succ:  l0000D95C_ds_f l0000D95C_ds_t
l0000D95C_ds_f:
	r11 = 0x00000000 - 13
	CV = cond(r11)
	goto l0000D980
	// succ:  l0000D980
l0000D95C_ds_t:
	r11 = 0x00000000 - 13
	CV = cond(r11)
	goto l0000DA60
	// succ:  l0000DA60
l0000D980:
	r4 = 0x00000001
	r4 = r4 | 0x000034C8
	Mem0[r4:word32] = r3
	r3 = 0x000001F0
	r3 = r3 | 0x00002880
	// succ:  l0000D994
l0000D994:
	r4 = Mem0[r3:word32]
	F = r4 != 0x00000000
	branch F l0000D994_ds_t
	// succ:  l0000D994_ds_f l0000D994_ds_t
l0000D994_ds_f:
	goto l0000D9A4
	// succ:  l0000D9A4
l0000D994_ds_t:
	goto l0000D994
	// succ:  l0000D994
l0000D9A4:
	r3 = 0x00000000 + -25
	CV = cond(r3)
	call fn0000BF88 (retsize: 0;)
	r4 = 0x00000001
	r4 = r4 | 0x000034C8
	r3 = Mem0[r4:word32]
	r4 = Mem0[r4:word32]
	r3 = r3 << 0x00000003
	r4 = r4 << 0x00000004
	r3 = r11 + r3
	CV = cond(r3)
	call fn0000FEDC (retsize: 0;)
	r3 = 0x000001F0
	F = r11 == 0x00000000
	r3 = r3 | 0x0000280C
	r6 = Mem0[r3:word32]
	branch !F l0000D9A4_ds_t
	// succ:  l0000D9A4_ds_f l0000D9A4_ds_t
l0000D9A4_ds_f:
	r4 = 0x000001F0
	goto l0000D9E4
	// succ:  l0000D9E4
l0000D9A4_ds_t:
	r4 = 0x000001F0
	goto l0000D9E8
	// succ:  l0000D9E8
l0000D9E4:
	r11 = 0x00000000 + -1
	CV = cond(r11)
	// succ:  l0000D9E8
l0000D9E8:
	r7 = r6 | 0x00000080
	r3 = r4 | 0x000028A4
	r8 = r11 & 0x000000FF
	r5 = Mem0[r3:word32]
	r11 = r11 >>u 0x00000008
	r5 = r5 | 0x00000002
	r2 = 0x00000000 - 129
	CV = cond(r2)
	Mem0[r3:word32] = r5
	r5 = r4 | 0x0000280C
	r11 = r11 & 0x000000FF
	Mem0[r5:word32] = r7
	r7 = r4 | 0x00002800
	r4 = r4 | 0x00002804
	Mem0[r7:word32] = r8
	r6 = r6 & r2
	Mem0[r4:word32] = r11
	Mem0[r5:word32] = r6
	r4 = Mem0[r3:word32]
	r4 = r4 | 0x00000004
	Mem0[r3:word32] = r4
	// succ:  l0000DA38
l0000DA38:
	r11 = Mem0[r3:word32]
	r11 = r11 & 0x00000004
	F = r11 != 0x00000000
	branch F l0000DA38_ds_t
	// succ:  l0000DA38_ds_f l0000DA38_ds_t
l0000DA38_ds_f:
	goto l0000DA4C
	// succ:  l0000DA4C
l0000DA38_ds_t:
	goto l0000DA38
	// succ:  l0000DA38
l0000DA4C:
	r4 = Mem0[r3:word32]
	r2 = 0x00000000 - 3
	CV = cond(r2)
	r4 = r4 | 0x00000004
	r4 = r4 & r2
	Mem0[r3:word32] = r4
	// succ:  l0000DA60
l0000DA60:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000D95C_exit
fn0000D95C_exit:


// fn0000DB28
// Return size: 0
void fn0000DB28()
fn0000DB28_entry:
	r1 = fp
	// succ:  l0000DB28
l0000DB28:
	F = r3 != 0x00000000
	branch F l0000DB28_ds_t
	// succ:  l0000DB28_ds_f l0000DB28_ds_t
l0000DB28_ds_f:
	r3 = r3 - 1
	CV = cond(r3)
	goto l0000DB34
	// succ:  l0000DB34
l0000DB28_ds_t:
	r3 = r3 - 1
	CV = cond(r3)
	goto l0000DB28
	// succ:  l0000DB28
l0000DB34:
	r3 = r3 + -1
	CV = cond(r3)
	return
	// succ:  fn0000DB28_exit
fn0000DB28_exit:


// fn0000DB40
// Return size: 0
void fn0000DB40()
fn0000DB40_entry:
	r1 = fp
	// succ:  l0000DB40
l0000DB40:
	Mem0[r1 - 32:word32] = r2
	Mem0[r1 - 28:word32] = r14
	Mem0[r1 - 16:word32] = r20
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 24:word32] = r16
	Mem0[r1 - 20:word32] = r18
	Mem0[r1 - 12:word32] = r22
	Mem0[r1 - 8:word32] = r24
	r2 = r3 | 0x00000000
	r1 = r1 - 48
	CV = cond(r1)
	r14 = r4 | 0x00000000
	F = r3 != 0x00000000
	branch F l0000DB40_ds_t
	// succ:  l0000DB40_ds_f l0000DB40_ds_t
l0000DB40_ds_f:
	r20 = r5 | 0x00000000
	goto l0000DB78
	// succ:  l0000DB78
l0000DB40_ds_t:
	r20 = r5 | 0x00000000
	goto l0000DB88
	// succ:  l0000DB88
l0000DB78:
	r3 = 0x00000000 + -48
	CV = cond(r3)
	Mem0[r4 + 1:byte] = SLICE(r2, byte, 0)
	Mem0[r4:byte] = SLICE(r3, byte, 0)
	goto l0000DC44
	// succ:  l0000DC44
l0000DB88:
	r18 = 0x00000000 + 0
	CV = cond(r18)
	F = r3 >= r18
	branch F l0000DB88_ds_t
	// succ:  l0000DB88_ds_f l0000DB88_ds_t
l0000DB88_ds_f:
	goto l0000DB98
	// succ:  l0000DB98
l0000DB88_ds_t:
	goto l0000DBA0
	// succ:  l0000DBA0
l0000DB98:
	r2 = 0x00000000 - r3
	CV = cond(r2)
	r18 = 0x00000000 + -1
	CV = cond(r18)
	// succ:  l0000DBA0
l0000DBA0:
	r16 = 0x00000000 + 0
	CV = cond(r16)
	r22 = r1 | 0x00000000
	goto l0000DBB0
	// succ:  l0000DBB0
l0000DBAC:
	r16 = r3 | 0x00000000
	// succ:  l0000DBB0
l0000DBB0:
	r3 = r2 | 0x00000000
	r4 = r20 | 0x00000000
	r24 = r22 + r16
	CV = cond(r24)
	call fn0001005C (retsize: 0;)
	r6 = 0x00000001
	r3 = r2 | 0x00000000
	r6 = r6 | 0x00002BF4
	r4 = r20 | 0x00000000
	r11 = r11 + r6
	CV = cond(r11)
	r11 = (word32) Mem0[r11:byte]
	Mem0[r24:byte] = SLICE(r11, byte, 0)
	call fn0000FFD8 (retsize: 0;)
	r3 = r16 + -1
	CV = cond(r3)
	F = r11 > 0
	branch F l0000DBB0_ds_t
	// succ:  l0000DBB0_ds_f l0000DBB0_ds_t
l0000DBB0_ds_f:
	r2 = r11 | 0x00000000
	goto l0000DBF0
	// succ:  l0000DBF0
l0000DBB0_ds_t:
	r2 = r11 | 0x00000000
	goto l0000DBAC
	// succ:  l0000DBAC
l0000DBF0:
	F = r18 == 0x00000000
	branch F l0000DBF0_ds_t
	// succ:  l0000DBF0_ds_f l0000DBF0_ds_t
l0000DBF0_ds_f:
	r2 = r18 | 0x00000000
	goto l0000DBFC
	// succ:  l0000DBFC
l0000DBF0_ds_t:
	r2 = r18 | 0x00000000
	goto l0000DC08
	// succ:  l0000DC08
l0000DBFC:
	r2 = 0x00000000 + -45
	CV = cond(r2)
	Mem0[r14:byte] = SLICE(r2, byte, 0)
	r2 = 0x00000000 + -1
	CV = cond(r2)
	// succ:  l0000DC08
l0000DC08:
	r3 = r1 + r16
	CV = cond(r3)
	r4 = r14 + r2
	CV = cond(r4)
	r5 = r1 - 1
	CV = cond(r5)
	goto l0000DC28
	// succ:  l0000DC28
l0000DC18:
	r6 = (word32) Mem0[r3:byte]
	r3 = r3 - 1
	CV = cond(r3)
	Mem0[r4:byte] = SLICE(r6, byte, 0)
	r4 = r4 + -1
	CV = cond(r4)
	// succ:  l0000DC28
l0000DC28:
	F = r3 != r5
	branch F l0000DC28_ds_t
	// succ:  l0000DC28_ds_f l0000DC28_ds_t
l0000DC28_ds_f:
	goto l0000DC34
	// succ:  l0000DC34
l0000DC28_ds_t:
	goto l0000DC18
	// succ:  l0000DC18
l0000DC34:
	r2 = r14 + r2
	CV = cond(r2)
	r16 = r2 + r16
	CV = cond(r16)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r16 + 1:byte] = SLICE(r2, byte, 0)
	// succ:  l0000DC44
l0000DC44:
	r1 = r1 + -48
	CV = cond(r1)
	r11 = r14 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 32:word32]
	r14 = Mem0[r1 - 28:word32]
	r16 = Mem0[r1 - 24:word32]
	r18 = Mem0[r1 - 20:word32]
	r20 = Mem0[r1 - 16:word32]
	r22 = Mem0[r1 - 12:word32]
	r24 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000DB40_exit
fn0000DB40_exit:


// fn0000DC70
// Return size: 0
void fn0000DC70()
fn0000DC70_entry:
	r1 = fp
	// succ:  l0000DC70
l0000DC70:
	Mem0[r1 - 28:word32] = r2
	Mem0[r1 - 24:word32] = r14
	Mem0[r1 - 20:word32] = r16
	Mem0[r1 - 12:word32] = r20
	Mem0[r1 - 8:word32] = r22
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 16:word32] = r18
	r16 = 0x00000000 + 0
	CV = cond(r16)
	r1 = r1 - 44
	CV = cond(r1)
	r2 = r3 | 0x00000000
	r14 = r4 | 0x00000000
	r20 = r5 | 0x00000000
	F = r3 != r16
	branch F l0000DC70_ds_t
	// succ:  l0000DC70_ds_f l0000DC70_ds_t
l0000DC70_ds_f:
	r22 = r1 | 0x00000000
	goto l0000DCAC
	// succ:  l0000DCAC
l0000DC70_ds_t:
	r22 = r1 | 0x00000000
	goto l0000DCC0
	// succ:  l0000DCC0
l0000DCAC:
	r3 = 0x00000000 + -48
	CV = cond(r3)
	Mem0[r4 + 1:byte] = SLICE(r2, byte, 0)
	Mem0[r4:byte] = SLICE(r3, byte, 0)
	goto l0000DD38
	// succ:  l0000DD38
l0000DCBC:
	r16 = r3 | 0x00000000
	// succ:  l0000DCC0
l0000DCC0:
	r3 = r2 | 0x00000000
	r4 = r20 | 0x00000000
	r18 = r22 + r16
	CV = cond(r18)
	call fn0001003C (retsize: 0;)
	r5 = 0x00000001
	r3 = r2 | 0x00000000
	r5 = r5 | 0x00002BF4
	r4 = r20 | 0x00000000
	r11 = r11 + r5
	CV = cond(r11)
	r11 = (word32) Mem0[r11:byte]
	Mem0[r18:byte] = SLICE(r11, byte, 0)
	call fn0000FEDC (retsize: 0;)
	r3 = r16 + -1
	CV = cond(r3)
	F = r11 != 0x00000000
	branch F l0000DCC0_ds_t
	// succ:  l0000DCC0_ds_f l0000DCC0_ds_t
l0000DCC0_ds_f:
	r2 = r11 | 0x00000000
	goto l0000DD00
	// succ:  l0000DD00
l0000DCC0_ds_t:
	r2 = r11 | 0x00000000
	goto l0000DCBC
	// succ:  l0000DCBC
l0000DD00:
	r2 = r18 | 0x00000000
	r3 = r14 | 0x00000000
	r4 = r1 - 1
	CV = cond(r4)
	goto l0000DD20
	// succ:  l0000DD20
l0000DD10:
	r5 = (word32) Mem0[r2:byte]
	r2 = r2 - 1
	CV = cond(r2)
	Mem0[r3:byte] = SLICE(r5, byte, 0)
	r3 = r3 + -1
	CV = cond(r3)
	// succ:  l0000DD20
l0000DD20:
	F = r2 != r4
	branch F l0000DD20_ds_t
	// succ:  l0000DD20_ds_f l0000DD20_ds_t
l0000DD20_ds_f:
	goto l0000DD2C
	// succ:  l0000DD2C
l0000DD20_ds_t:
	goto l0000DD10
	// succ:  l0000DD10
l0000DD2C:
	r16 = r14 + r16
	CV = cond(r16)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r16 + 1:byte] = SLICE(r2, byte, 0)
	// succ:  l0000DD38
l0000DD38:
	r1 = r1 + -44
	CV = cond(r1)
	r11 = r14 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 28:word32]
	r14 = Mem0[r1 - 24:word32]
	r16 = Mem0[r1 - 20:word32]
	r18 = Mem0[r1 - 16:word32]
	r20 = Mem0[r1 - 12:word32]
	r22 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000DC70_exit
fn0000DC70_exit:


// fn0000DD60
// Return size: 0
void fn0000DD60()
fn0000DD60_entry:
	r1 = fp
	// succ:  l0000DD60
l0000DD60:
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 8:word32] = r16
	Mem0[r1 - 4:word32] = r9
	r2 = r4 | 0x00000000
	r1 = r1 - 20
	CV = cond(r1)
	r4 = 0x00000001
	Mem0[r1:word32] = r3
	r4 = r4 | 0x00002C6D
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r16 = r5 | 0x00000000
	r14 = 0x00000000 + 0
	CV = cond(r14)
	call fn0000EDF4 (retsize: 0;)
	F = r14 <u r16
	goto l0000DDDC
	// succ:  l0000DDDC
l0000DD9C:
	F = r3 != 0x00000000
	branch F l0000DD9C_ds_t
	// succ:  l0000DD9C_ds_f l0000DD9C_ds_t
l0000DD9C_ds_f:
	r4 = 0x00000001
	goto l0000DDA8
	// succ:  l0000DDA8
l0000DD9C_ds_t:
	r4 = 0x00000001
	goto l0000DDB8
	// succ:  l0000DDB8
l0000DDA8:
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002C73
	Mem0[r1:word32] = r2
	call fn0000EDF4 (retsize: 0;)
l0000DDB8:
	r3 = Mem0[r2:word32]
	r4 = 0x00000001
	Mem0[r1:word32] = r3
	r4 = r4 | 0x00002C7D
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r14 = r14 + -4
	CV = cond(r14)
	r2 = r2 + -4
	CV = cond(r2)
	call fn0000EDF4 (retsize: 0;)
	F = r14 <u r16
	// succ:  l0000DDDC
l0000DDDC:
	branch F l0000DDDC_ds_t
	// succ:  l0000DDDC_ds_f l0000DDDC_ds_t
l0000DDDC_ds_f:
	r3 = r14 & 0x0000000F
	goto l0000DDE4
	// succ:  l0000DDE4
l0000DDDC_ds_t:
	r3 = r14 & 0x0000000F
	goto l0000DD9C
	// succ:  l0000DD9C
l0000DDE4:
	r1 = r1 + -20
	CV = cond(r1)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002E0B
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	// succ:  l0000DE00_thunk_fn0000EDF4
l0000DE00_thunk_fn0000EDF4:
	call fn0000EDF4 (retsize: 0;)
	return
	// succ:  fn0000DD60_exit
fn0000DD60_exit:


// fn0000DE08
// Return size: 0
void fn0000DE08()
fn0000DE08_entry:
	r1 = fp
	// succ:  l0000DE08
l0000DE08:
	r4 = r3 | 0x00000000
	// succ:  l0000DE0C
l0000DE0C:
	r5 = (int32) Mem0[r4:int8]
	F = r5 != 0x00000000
	branch F l0000DE0C_ds_t
	// succ:  l0000DE0C_ds_f l0000DE0C_ds_t
l0000DE0C_ds_f:
	r4 = r4 + -1
	CV = cond(r4)
	goto l0000DE1C
	// succ:  l0000DE1C
l0000DE0C_ds_t:
	r4 = r4 + -1
	CV = cond(r4)
	goto l0000DE0C
	// succ:  l0000DE0C
l0000DE1C:
	r4 = r4 - 1
	CV = cond(r4)
	r11 = r4 - r3
	CV = cond(r11)
	return
	// succ:  fn0000DE08_exit
fn0000DE08_exit:


// fn0000DE28
// Return size: 0
void fn0000DE28()
fn0000DE28_entry:
	r1 = fp
	// succ:  l0000DE28
l0000DE28:
	r5 = 0x00000000 + 0
	CV = cond(r5)
	// succ:  l0000DE2C
l0000DE2C:
	r6 = r4 + r5
	CV = cond(r6)
	r7 = r3 + r5
	CV = cond(r7)
	r6 = (int32) Mem0[r6:int8]
	Mem0[r7:byte] = SLICE(r6, byte, 0)
	F = r6 != 0x00000000
	branch F l0000DE2C_ds_t
	// succ:  l0000DE2C_ds_f l0000DE2C_ds_t
l0000DE2C_ds_f:
	r5 = r5 + -1
	CV = cond(r5)
	goto l0000DE48
	// succ:  l0000DE48
l0000DE2C_ds_t:
	r5 = r5 + -1
	CV = cond(r5)
	goto l0000DE2C
	// succ:  l0000DE2C
l0000DE48:
	r11 = r3 | 0x00000000
	return
	// succ:  fn0000DE28_exit
fn0000DE28_exit:


// fn0000DE50
// Return size: 0
void fn0000DE50()
fn0000DE50_entry:
	r1 = fp
	// succ:  l0000DE50
l0000DE50:
	Mem0[r1 - 4:word32] = r2
	r6 = r3 | 0x00000000
	F = r5 == 0x00000000
	branch !F l0000DE50_ds_t
	// succ:  l0000DE50_ds_f l0000DE50_ds_t
l0000DE50_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000DE64
	// succ:  l0000DE64
l0000DE50_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000DE6C
	// succ:  l0000DE6C
l0000DE64:
	r1 = r1 + -4
	CV = cond(r1)
	goto l0000DEBC
	// succ:  l0000DEBC
l0000DE6C:
	r7 = (int32) Mem0[r6:int8]
	F = r7 != 0x00000000
	branch F l0000DE6C_ds_t
	// succ:  l0000DE6C_ds_f l0000DE6C_ds_t
l0000DE6C_ds_f:
	r6 = r6 + -1
	CV = cond(r6)
	goto l0000DE7C
	// succ:  l0000DE7C
l0000DE6C_ds_t:
	r6 = r6 + -1
	CV = cond(r6)
	goto l0000DE6C
	// succ:  l0000DE6C
l0000DE7C:
	r6 = r6 - 1
	CV = cond(r6)
	r8 = r4 + r7
	CV = cond(r8)
	goto l0000DEA8
	// succ:  l0000DEA8
l0000DE88:
	r7 = r7 + -1
	CV = cond(r7)
	F = r5 != r7
	branch F l0000DE88_ds_t
	// succ:  l0000DE88_ds_f l0000DE88_ds_t
l0000DE88_ds_f:
	r6 = r6 + -1
	CV = cond(r6)
	goto l0000DE98
	// succ:  l0000DE98
l0000DE88_ds_t:
	r6 = r6 + -1
	CV = cond(r6)
	goto l0000DEA4
	// succ:  l0000DEA4
l0000DE98:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	Mem0[r6:byte] = SLICE(r2, byte, 0)
	goto l0000DEB8
	// succ:  l0000DEB8
l0000DEA4:
	r8 = r4 + r7
	CV = cond(r8)
	// succ:  l0000DEA8
l0000DEA8:
	r8 = (int32) Mem0[r8:int8]
	F = r8 != 0x00000000
	branch F l0000DEA8_ds_t
	// succ:  l0000DEA8_ds_f l0000DEA8_ds_t
l0000DEA8_ds_f:
	Mem0[r6:byte] = SLICE(r8, byte, 0)
	goto l0000DEB8
	// succ:  l0000DEB8
l0000DEA8_ds_t:
	Mem0[r6:byte] = SLICE(r8, byte, 0)
	goto l0000DE88
	// succ:  l0000DE88
l0000DEB8:
	r1 = r1 + -4
	CV = cond(r1)
	// succ:  l0000DEBC
l0000DEBC:
	r11 = r3 | 0x00000000
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000DE50_exit
fn0000DE50_exit:


// fn0000DF10
// Return size: 0
void fn0000DF10()
fn0000DF10_entry:
	r1 = fp
	// succ:  l0000DF10
l0000DF10:
	r7 = r4 | r3
	Mem0[r1 - 4:word32] = r2
	r7 = r7 & 0x00000003
	r6 = 0x00000000 + 0
	CV = cond(r6)
	F = r7 != r6
	branch F l0000DF10_ds_t
	// succ:  l0000DF10_ds_f l0000DF10_ds_t
l0000DF10_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000DF2C
	// succ:  l0000DF2C
l0000DF10_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l0000DF48
	// succ:  l0000DF48
l0000DF2C:
	r6 = r5 >>u 0x00000002
	goto l0000DF5C
	// succ:  l0000DF5C
l0000DF34:
	r7 = r3 + r6
	CV = cond(r7)
	r8 = (word32) Mem0[r8:byte]
	r6 = r6 + -1
	CV = cond(r6)
	Mem0[r7:byte] = SLICE(r8, byte, 0)
	r5 = r5 - 1
	CV = cond(r5)
	// succ:  l0000DF48
l0000DF48:
	F = r5 != 0x00000000
	branch F l0000DF48_ds_t
	// succ:  l0000DF48_ds_f l0000DF48_ds_t
l0000DF48_ds_f:
	r8 = r4 + r6
	CV = cond(r8)
	goto l0000DF54
	// succ:  l0000DF54
l0000DF48_ds_t:
	r8 = r4 + r6
	CV = cond(r8)
	goto l0000DF34
	// succ:  l0000DF34
l0000DF54:
	r1 = r1 + -4
	CV = cond(r1)
	goto l0000DFC0
	// succ:  l0000DFC0
l0000DF5C:
	F = r6 != 0x00000000
	goto l0000DF7C
	// succ:  l0000DF7C
l0000DF64:
	r11 = r3 + r7
	CV = cond(r11)
	r8 = Mem0[r8:word32]
	r7 = r7 + -4
	CV = cond(r7)
	Mem0[r11:word32] = r8
	r6 = r6 - 1
	CV = cond(r6)
	F = r6 != 0x00000000
	// succ:  l0000DF7C
l0000DF7C:
	branch F l0000DF7C_ds_t
	// succ:  l0000DF7C_ds_f l0000DF7C_ds_t
l0000DF7C_ds_f:
	r8 = r4 + r7
	CV = cond(r8)
	goto l0000DF84
	// succ:  l0000DF84
l0000DF7C_ds_t:
	r8 = r4 + r7
	CV = cond(r8)
	goto l0000DF64
	// succ:  l0000DF64
l0000DF84:
	r2 = 0x00000000 - 4
	CV = cond(r2)
	r7 = r5 & r2
	r5 = r5 & 0x00000003
	r4 = r4 + r7
	CV = cond(r4)
	r7 = r3 + r7
	CV = cond(r7)
	goto l0000DFB0
	// succ:  l0000DFB0
l0000DF9C:
	r8 = r7 + r6
	CV = cond(r8)
	r11 = (word32) Mem0[r11:byte]
	r6 = r6 + -1
	CV = cond(r6)
	Mem0[r8:byte] = SLICE(r11, byte, 0)
	r5 = r5 - 1
	CV = cond(r5)
	// succ:  l0000DFB0
l0000DFB0:
	F = r5 != 0x00000000
	branch F l0000DFB0_ds_t
	// succ:  l0000DFB0_ds_f l0000DFB0_ds_t
l0000DFB0_ds_f:
	r11 = r4 + r6
	CV = cond(r11)
	goto l0000DFBC
	// succ:  l0000DFBC
l0000DFB0_ds_t:
	r11 = r4 + r6
	CV = cond(r11)
	goto l0000DF9C
	// succ:  l0000DF9C
l0000DFBC:
	r1 = r1 + -4
	CV = cond(r1)
	// succ:  l0000DFC0
l0000DFC0:
	r11 = r3 | 0x00000000
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000DF10_exit
fn0000DF10_exit:


// fn0000DFCC
// Return size: 0
void fn0000DFCC()
fn0000DFCC_entry:
	r1 = fp
	// succ:  l0000DFCC
l0000DFCC:
	r6 = r3 | 0x00000000
	goto l0000DFE0
	// succ:  l0000DFE0
l0000DFD4:
	Mem0[r6:byte] = SLICE(r4, byte, 0)
	r5 = r5 - 1
	CV = cond(r5)
	r6 = r6 + -1
	CV = cond(r6)
	// succ:  l0000DFE0
l0000DFE0:
	F = r5 != 0x00000000
	branch F l0000DFE0_ds_t
	// succ:  l0000DFE0_ds_f l0000DFE0_ds_t
l0000DFE0_ds_f:
	goto l0000DFEC
	// succ:  l0000DFEC
l0000DFE0_ds_t:
	goto l0000DFD4
	// succ:  l0000DFD4
l0000DFEC:
	r11 = r3 | 0x00000000
	return
	// succ:  fn0000DFCC_exit
fn0000DFCC_exit:


// fn0000E110
// Return size: 0
void fn0000E110()
fn0000E110_entry:
	r1 = fp
	// succ:  l0000E110
l0000E110:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = 0x00000000 + -6
	CV = cond(r3)
	r1 = r1 - 8
	CV = cond(r1)
	r2 = r2 | 0x00003960
	call fn0000BF88 (retsize: 0;)
	Mem0[r2:word32] = r11
	r2 = 0x00000001
	call fn00009B70 (retsize: 0;)
	F = r11 != 0x00000001
	branch F l0000E110_ds_t
	// succ:  l0000E110_ds_f l0000E110_ds_t
l0000E110_ds_f:
	r2 = r2 | 0x0000395C
	goto l0000E144
	// succ:  l0000E144
l0000E110_ds_t:
	r2 = r2 | 0x0000395C
	goto l0000E14C
	// succ:  l0000E14C
l0000E144:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l0000E150
	// succ:  l0000E150
l0000E14C:
	r3 = 0x00000000 + -20
	CV = cond(r3)
	// succ:  l0000E150
l0000E150:
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	r2 = r2 | 0x0000395C
	r3 = Mem0[r2:word32]
	r2 = 0x00000001
	call fn00009DDC (retsize: 0;)
	r2 = r2 | 0x00003960
	r3 = 0x00000000 + -20
	CV = cond(r3)
	Mem0[r2 + 4:word32] = r11
	call fn0000B250 (retsize: 0;)
	r3 = 0x00000000
	Mem0[r2 + 8:word32] = r11
	r2 = 0x00000001
	r3 = r3 | 0x00004298
	r2 = r2 | 0x000034CC
	r11 = 0x00000000 + 0
	CV = cond(r11)
	Mem0[r2:word32] = r3
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000E110_exit
fn0000E110_exit:


// fn0000E1AC
// Return size: 0
void fn0000E1AC()
fn0000E1AC_entry:
	r1 = fp
	// succ:  l0000E1AC
l0000E1AC:
	Mem0[r1 - 28:word32] = r2
	Mem0[r1 - 16:word32] = r18
	r2 = 0x00000000 + -1000
	CV = cond(r2)
	r18 = Mem0[r3 + 40:word32]
	Mem0[r1 - 4:word32] = r9
fn0000E1AC_exit:


// fn0000E3A8
// Return size: 0
void fn0000E3A8()
fn0000E3A8_entry:
	r1 = fp
	// succ:  l0000E3A8
l0000E3A8:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r2
	r3 = r3 | 0x0000396C
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r1 = r1 - 4
	CV = cond(r1)
	Mem0[r3:word32] = r2
	r3 = 0x00000001
	r11 = r2 | 0x00000000
	r3 = r3 | 0x00003970
	Mem0[r3:word32] = r2
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000E3A8_exit
fn0000E3A8_exit:


// fn0000E4F0
// Return size: 0
void fn0000E4F0()
fn0000E4F0_entry:
	r1 = fp
	// succ:  l0000E4F0
l0000E4F0:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	r5 = r3 | 0x00000000
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r3 = r4 | 0x00000000
	call r5 (retsize: 0;)
	return
	// succ:  fn0000E4F0_exit
fn0000E4F0_exit:


// fn0000E50C
// Return size: 0
void fn0000E50C()
fn0000E50C_entry:
	r1 = fp
	// succ:  l0000E50C
l0000E50C:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r4 = Mem0[r3 + 32:word32]
	r5 = Mem0[r3 + 36:word32]
	F = r5 != 0x00000001
	branch F l0000E50C_ds_t
	// succ:  l0000E50C_ds_f l0000E50C_ds_t
l0000E50C_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000E528
	// succ:  l0000E528
l0000E50C_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l0000E55C
	// succ:  l0000E55C
l0000E528:
	r2 = r3 + -40
	CV = cond(r2)
	r3 = 0x00000001
	r4 = r2 | 0x00000000
	r3 = r3 | 0x00003974
	r5 = 0x00000000 + -12
	CV = cond(r5)
	call fn0000DF10 (retsize: 0;)
	r3 = 0x00000001
	r4 = r2 | 0x00000000
	r3 = r3 | 0x000030E0
	r5 = 0x00000000 + -12
	CV = cond(r5)
	call fn0000DF10 (retsize: 0;)
	r1 = r1 + -8
	CV = cond(r1)
	goto l0000E580
	// succ:  l0000E580
l0000E55C:
	r4 = 0x00000001
	r4 = r4 | 0x000030E0
	r2 = Mem0[r4:word32]
	Mem0[r3 + 40:word32] = r2
	r2 = Mem0[r4 + 4:word32]
	Mem0[r3 + 44:word32] = r2
	r2 = Mem0[r4 + 8:word32]
	Mem0[r3 + 48:word32] = r2
	r1 = r1 + -8
	CV = cond(r1)
	// succ:  l0000E580
l0000E580:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000E50C_exit
fn0000E50C_exit:


// fn0000E590
// Return size: 0
void fn0000E590()
fn0000E590_entry:
	r1 = fp
	// succ:  l0000E590
l0000E590:
	r6 = 0x00000001
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r6 = r6 | 0x0000375C
	Mem0[r6:word32] = r3
	r3 = 0x00000001
	r3 = r3 | 0x00003104
	Mem0[r3:word32] = r4
	r3 = 0x00000001
	r3 = r3 | 0x00003108
	Mem0[r3:word32] = r5
	return
	// succ:  fn0000E590_exit
fn0000E590_exit:


// fn0000E5BC
// Return size: 0
void fn0000E5BC()
fn0000E5BC_entry:
	r1 = fp
	// succ:  l0000E5BC
l0000E5BC:
	r3 = 0x00000001
	r3 = r3 | 0x0000375C
	r11 = Mem0[r3:word32]
	return
	// succ:  fn0000E5BC_exit
fn0000E5BC_exit:


// fn0000E5CC
// Return size: 0
void fn0000E5CC()
fn0000E5CC_entry:
	r1 = fp
	// succ:  l0000E5CC
l0000E5CC:
	Mem0[r1 - 12:word32] = r14
	r4 = 0x00000001
	r14 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r14 = r14 | 0x00003104
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 8:word32] = r16
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r1 = r1 - 24
	CV = cond(r1)
	r4 = r4 | 0x00002C82
	r16 = 0x00000001
	r2 = Mem0[r14:word32]
	call fn0000EDF4 (retsize: 0;)
	r3 = Mem0[r14:word32]
	r16 = r16 | 0x00003108
	Mem0[r1:word32] = r3
	r4 = 0x00000001
	r3 = Mem0[r16:word32]
	r4 = r4 | 0x00002C90
	Mem0[r1 + 4:word32] = r3
	r3 = 0x00000000 + -15
	CV = cond(r3)
	call fn0000EDF4 (retsize: 0;)
	r3 = Mem0[r14:word32]
	r4 = Mem0[r16:word32]
	r14 = 0x00000000 + 0
	CV = cond(r14)
	r3 = r4 + r3
	CV = cond(r3)
	goto l0000E644
	// succ:  l0000E644
l0000E638:
	r4 = Mem0[r2:word32]
	r2 = r2 + -4
	CV = cond(r2)
	r14 = r14 + r4
	CV = cond(r14)
	// succ:  l0000E644
l0000E644:
	F = r2 <u r3
	branch F l0000E644_ds_t
	// succ:  l0000E644_ds_f l0000E644_ds_t
l0000E644_ds_f:
	r4 = 0x00000001
	goto l0000E650
	// succ:  l0000E650
l0000E644_ds_t:
	r4 = 0x00000001
	goto l0000E638
	// succ:  l0000E638
l0000E650:
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002C9F
	call fn0000EDF4 (retsize: 0;)
	r1 = r1 + -24
	CV = cond(r1)
	r11 = r14 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000E5CC_exit
fn0000E5CC_exit:


// fn0000E6E4
// Return size: 0
void fn0000E6E4()
fn0000E6E4_entry:
	r1 = fp
	// succ:  l0000E6E4
l0000E6E4:
	r3 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x0000E678
	r1 = r1 - 4
	CV = cond(r1)
	call fn0000E96C (retsize: 0;)
	r3 = 0x00000000 + -17
	CV = cond(r3)
fn0000E6E4_exit:


// fn0000E718
// Return size: 0
void fn0000E718()
fn0000E718_entry:
	r1 = fp
	// succ:  l0000E718
l0000E718:
	Mem0[r1 - 4:word32] = r2
	r2 = 0x00000000 - 7
	CV = cond(r2)
	r3 = 0x00000000 + -17
	CV = cond(r3)
	r1 = r1 - 4
	CV = cond(r1)
fn0000E718_exit:


// fn0000E740
// Return size: 0
void fn0000E740()
fn0000E740_entry:
	r1 = fp
	// succ:  l0000E740
l0000E740:
	r4 = 0x00000000 + -17
	CV = cond(r4)
fn0000E740_exit:


// fn0000E758
// Return size: 0
void fn0000E758()
fn0000E758_entry:
	r1 = fp
	goto l0000E758
	// succ:  l0000E758
l00008C34:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r1 = r1 - 8
	CV = cond(r1)
	r2 = 0x00000001
	call fn00008AC0 (retsize: 0;)
	r3 = r11 << 0x00000003
	r2 = r2 | 0x00003834
	r3 = r3 + r2
	CV = cond(r3)
	r11 = Mem0[r3:word32]
	r3 = Mem0[r3 + 4:word32]
	call r11 (retsize: 0;)
	r1 = r1 + -8
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000E758_exit
l0000E758:
	Mem0[r1 - 8:word32] = r14
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 12:word32] = r2
	r14 = r5 | 0x00000000
	F = r3 != 0x00000008
	branch F l0000E758_ds_t
	// succ:  l0000E758_ds_f l0000E758_ds_t
l0000E758_ds_f:
	r1 = r1 - 24
	CV = cond(r1)
	goto l0000E774
	// succ:  l0000E774
l0000E758_ds_t:
	r1 = r1 - 24
	CV = cond(r1)
	goto l0000E788
	// succ:  l0000E788
l0000E774:
	r1 = r1 + -24
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	goto l00008C34
	// succ:  l00008C34
l0000E788:
	r2 = 0x00000001
	Mem0[r1:word32] = r3
	r3 = r3 << 0x00000002
	r2 = r2 | 0x00003110
	r3 = r3 + r2
	CV = cond(r3)
	r2 = Mem0[r3:word32]
	Mem0[r1 + 8:word32] = r4
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002CC1
	Mem0[r1 + 4:word32] = r2
	call fn0000EDF4 (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002CE8
	r2 = 0x00000000 + -2
	CV = cond(r2)
	call fn0000EDF4 (retsize: 0;)
	// succ:  l0000E7CC
l0000E7CC:
	Mem0[r1:word32] = r2
	r4 = 0x00000001
	r3 = Mem0[r14:word32]
	r4 = r4 | 0x00002CF8
	Mem0[r1 + 4:word32] = r3
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r2 = r2 + -1
	CV = cond(r2)
	call fn0000EDF4 (retsize: 0;)
	F = r2 != 0x00000020
	branch F l0000E7CC_ds_t
	// succ:  l0000E7CC_ds_f l0000E7CC_ds_t
l0000E7CC_ds_f:
	r14 = r14 + -4
	CV = cond(r14)
	goto l0000E7F8
	// succ:  l0000E7F8
l0000E7CC_ds_t:
	r14 = r14 + -4
	CV = cond(r14)
	goto l0000E7CC
	// succ:  l0000E7CC
l0000E7F8:
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002D08
	call fn0000EDF4 (retsize: 0;)
	// succ:  l0000E80C
l0000E80C:
	goto l0000E80C
	// succ:  l0000E80C
fn0000E758_exit:


// fn0000E8BC
// Return size: 0
void fn0000E8BC()
fn0000E8BC_entry:
	r1 = fp
	// succ:  l0000E8BC
l0000E8BC:
	r3 = 0x00000001
	r3 = r3 | 0x0000376C
	r11 = Mem0[r3:word32]
	return
	// succ:  fn0000E8BC_exit
fn0000E8BC_exit:


// fn0000E904
// Return size: 0
void fn0000E904()
fn0000E904_entry:
	r1 = fp
	// succ:  l0000E904
l0000E904:
	r3 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r3 = r3 | 0x0000E814
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r1 = r1 - 8
	CV = cond(r1)
	call fn0000C48C (retsize: 0;)
	r4 = 0x00000001
	r3 = r11 | 0x00000000
	r4 = r4 | 0x00003768
	F = r3 == 0x00000000
	Mem0[r4:word32] = r11
	branch F l0000E904_ds_t
	// succ:  l0000E904_ds_f l0000E904_ds_t
l0000E904_ds_f:
	r11 = 0x00000000 - 36
	CV = cond(r11)
	goto l0000E93C
	// succ:  l0000E93C
l0000E904_ds_t:
	r11 = 0x00000000 - 36
	CV = cond(r11)
	goto l0000E95C
	// succ:  l0000E95C
l0000E93C:
	r4 = 0x00000001
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r4 = r4 | 0x0000376C
	r5 = r2 | 0x00000000
	Mem0[r4:word32] = r2
	r4 = 0x00000000 + -10
	CV = cond(r4)
	call fn0000C588 (retsize: 0;)
	r11 = r2 | 0x00000000
	// succ:  l0000E95C
l0000E95C:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000E904_exit
fn0000E904_exit:


// fn0000E96C
// Return size: 0
void fn0000E96C()
fn0000E96C_entry:
	r1 = fp
	// succ:  l0000E96C
l0000E96C:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	r4 = r3 | 0x00000000
	r1 = r1 + -4
	CV = cond(r1)
	r3 = 0x00000001
	r9 = Mem0[r1 - 4:word32]
	r3 = r3 | 0x00003770
	// succ:  l0000E984_thunk_fn0000F8E8
l0000E984_thunk_fn0000F8E8:
	call fn0000F8E8 (retsize: 0;)
	return
	// succ:  fn0000E96C_exit
fn0000E96C_exit:


// fn0000E98C
// Return size: 0
void fn0000E98C()
fn0000E98C_entry:
	r1 = fp
	// succ:  l0000E98C
l0000E98C:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r1 = r1 - 16
	CV = cond(r1)
	call fn0000F89C (retsize: 0;)
	r3 = 0x00000000 | 0x0000B000
	call fn0000AEDC (retsize: 0;)
	call fn0000ADBC (retsize: 0;)
	r3 = 0x00000000 | 0x0000B001
	call fn0000AEDC (retsize: 0;)
	call fn000096F8 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B002
	call fn0000AEDC (retsize: 0;)
	call fn000087BC (retsize: 0;)
	r3 = 0x00000000 | 0x0000B003
	call fn0000AEDC (retsize: 0;)
	call fn00008AF0 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B004
	call fn0000AEDC (retsize: 0;)
	call fn0000EC18 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B005
	call fn0000AEDC (retsize: 0;)
	call fn0000ED78 (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002E02
	call fn0000EDF4 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B006
	call fn0000AEDC (retsize: 0;)
	call fn0000CB40 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B007
	call fn0000AEDC (retsize: 0;)
	call fn0000998C (retsize: 0;)
	r3 = 0x00000000 | 0x0000B008
	call fn0000AEDC (retsize: 0;)
	call fn000082FC (retsize: 0;)
	r3 = 0x00000000 | 0x0000B009
	call fn0000AEDC (retsize: 0;)
	call fn000044D0 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B00A
	call fn0000AEDC (retsize: 0;)
	call fn0000F194 (retsize: 0;)
	call fn0000C32C (retsize: 0;)
	call fn0000E110 (retsize: 0;)
	call fn0000E3A8 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B00B
	call fn0000AEDC (retsize: 0;)
	call fn0000E904 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B00C
	call fn0000AEDC (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002E0D
	call fn0000EDF4 (retsize: 0;)
	call fn0000F250 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l0000E98C_ds_t
	// succ:  l0000E98C_ds_f l0000E98C_ds_t
l0000E98C_ds_f:
	r2 = r11 | 0x00000000
	goto l0000EAB0
	// succ:  l0000EAB0
l0000E98C_ds_t:
	r2 = r11 | 0x00000000
	goto l0000EB14
	// succ:  l0000EB14
l0000EAB0:
	r3 = 0x00000000 - 112
	CV = cond(r3)
	r4 = 0x00000000 + -2
	CV = cond(r4)
	Mem0[r11 + 2:byte] = SLICE(r3, byte, 0)
	Mem0[r11 + 1:byte] = SLICE(r4, byte, 0)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	Mem0[r11 + 32:word32] = r3
	Mem0[r11 + 36:word32] = r4
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r3 = 0x00000000 + -120
	CV = cond(r3)
	Mem0[r11 + 3:byte] = SLICE(r4, byte, 0)
	r4 = 0x00000001
	Mem0[r11 + 40:word32] = r3
	r4 = r4 | 0x00002E16
	r3 = r11 + -44
	CV = cond(r3)
	call fn0000DE28 (retsize: 0;)
	r3 = r2 | 0x00000000
	r4 = 0x00000000 + -4000
	CV = cond(r4)
	call fn00008428 (retsize: 0;)
	r3 = 0x00000001
	r4 = Mem0[r2 + 40:word32]
	r3 = r3 | 0x00003980
	Mem0[r3:word32] = r4
	r3 = r2 | 0x00000000
	call fn0000F368 (retsize: 0;)
l0000EB14:
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002E1E
	r2 = 0x00000000 + -120
	CV = cond(r2)
	call fn0000EDF4 (retsize: 0;)
	call fn0000EC54 (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002E2A
	call fn0000EDF4 (retsize: 0;)
	r3 = 0x00000000 | 0x0000B00D
	call fn0000AEDC (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002E38
	Mem0[r1:word32] = r2
	call fn0000EDF4 (retsize: 0;)
	call fn0000E6E4 (retsize: 0;)
	goto l0000EB64
	// succ:  l0000EB64
l0000EB14_ds_f:
	r2 = r11 | 0x00000000
	goto l0000EB84
	// succ:  l0000EB84
l0000EB14_ds_t:
	r2 = r11 | 0x00000000
	goto l0000EBDC
	// succ:  l0000EBDC
l0000EB64:
	call fn0000E8BC (retsize: 0;)
	r4 = 0x00000000 + -500
	CV = cond(r4)
	r3 = r11 | 0x00000000
	call fn0001003C (retsize: 0;)
	F = r11 != 0x00000000
	branch F l0000EB14_ds_t
	goto l0000EB14_ds_f
	// succ:  l0000EB14_ds_f l0000EB14_ds_t
l0000EB84:
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002E4C
	call fn0000EDF4 (retsize: 0;)
	r3 = 0x00000001
	r4 = 0x00000000 + -256
	CV = cond(r4)
	r3 = r3 | 0x00003770
	r5 = r2 | 0x00000000
	call fn0000FA38 (retsize: 0;)
	goto l0000EBC0
	// succ:  l0000EBC0
l0000EBB0:
	r2 = Mem0[r1 + 4:word32]
	Mem0[r1 + 4:word32] = r2
	r2 = Mem0[r1 + 4:word32]
	r2 = r2 + -1
	CV = cond(r2)
	// succ:  l0000EBC0
l0000EBC0:
	Mem0[r1 + 4:word32] = r2
	r3 = 0x00000003
	r2 = Mem0[r1 + 4:word32]
	r3 = r3 | 0x00000D3F
	F = r2 <= r3
	branch F l0000EBC0_ds_t
	// succ:  l0000EBC0_ds_f l0000EBC0_ds_t
l0000EBC0_ds_f:
	goto l0000EBDC
	// succ:  l0000EBDC
l0000EBC0_ds_t:
	goto l0000EBB0
	// succ:  l0000EBB0
l0000EBDC:
	r4 = 0x00000000 + 0
	CV = cond(r4)
	Mem0[r1 + 4:word32] = r4
	goto l0000EC00
	// succ:  l0000EC00
l0000EBEC:
	r2 = Mem0[r1 + 4:word32]
	Mem0[r1 + 4:word32] = r2
	r2 = Mem0[r1 + 4:word32]
	r2 = r2 + -1
	CV = cond(r2)
	Mem0[r1 + 4:word32] = r2
	// succ:  l0000EC00
l0000EC00:
	r2 = Mem0[r1 + 4:word32]
	F = r2 <= 9999
	branch !F l0000EC00_ds_t
	// succ:  l0000EC00_ds_f l0000EC00_ds_t
l0000EC00_ds_f:
	goto l0000EC10
	// succ:  l0000EC10
l0000EC00_ds_t:
	goto l0000EB64
	// succ:  l0000EB64
l0000EC10:
	goto l0000EBEC
	// succ:  l0000EBEC
fn0000E98C_exit:


// fn0000EC18
// Return size: 0
void fn0000EC18()
fn0000EC18_entry:
	r1 = fp
	// succ:  l0000EC18
l0000EC18:
	r3 = 0x00000000
	r4 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x00004000
	r1 = r1 - 4
	CV = cond(r1)
	r4 = r4 | 0x000043C4
	call fn00004570 (retsize: 0;)
	r4 = 0x00000000
	r4 = r4 | 0x00004000
	r3 = Mem0[r4 + 8:word32]
	r4 = Mem0[r4 + 12:word32]
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r4 = r3 + r4
	CV = cond(r4)
	// succ:  l0000EC4C_thunk_fn00004570
l0000EC4C_thunk_fn00004570:
	call fn00004570 (retsize: 0;)
	return
	// succ:  fn0000EC18_exit
fn0000EC18_exit:


// fn0000EC54
// Return size: 0
void fn0000EC54()
fn0000EC54_entry:
	r1 = fp
	goto l0000EC54
	// succ:  l0000EC54
l00009220:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r2 = r2 | 0x0000316C
	r4 = r3 | 0x00000000
	r1 = r1 - 8
	CV = cond(r1)
	r3 = r2 | 0x00000000
	r5 = 0x00000000 + -516
	CV = cond(r5)
	call fn0000DF10 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = 0x00001000
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r5 = r3 & r4
	r4 = 0x00000001
	r4 = r4 | 0x00003164
	Mem0[r4:word32] = r5
	r4 = 0x00000FFF
	r4 = r4 | 0x0000FFFF
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000EC54_exit
l0000EC54:
	r3 = 0x00000001
	r4 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x00002E6C
	r1 = r1 - 4
	CV = cond(r1)
	r4 = r4 | 0x00004000
	r5 = 0x00000000 + -964
	CV = cond(r5)
	call fn0000DD60 (retsize: 0;)
	r3 = 0x00000000
	r3 = r3 | 0x00004000
	r3 = Mem0[r3 + 16:word32]
	F = r3 != 0x00000000
	branch F l0000EC54_ds_t
	// succ:  l0000EC54_ds_f l0000EC54_ds_t
l0000EC54_ds_f:
	r3 = 0x00000000
	goto l0000EC8C
	// succ:  l0000EC8C
l0000EC54_ds_t:
	r3 = 0x00000000
	goto l0000EC98
	// succ:  l0000EC98
l0000EC8C:
	call fn0000D76C (retsize: 0;)
	r3 = 0x00000000
	// succ:  l0000EC98
l0000EC98:
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r3 = r3 | 0x00004034
	goto l00009220
	// succ:  l00009220
fn0000EC54_exit:


// fn0000ECA8
// Return size: 0
void fn0000ECA8()
fn0000ECA8_entry:
	r1 = fp
	// succ:  l0000ECA8
l0000ECA8:
	r5 = 0x00000000
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r5 = r5 | 0x00004000
	r6 = Mem0[r5:word32]
	Mem0[r3:word32] = r6
	r3 = Mem0[r5 + 4:word32]
	Mem0[r4:word32] = r3
	return
	// succ:  fn0000ECA8_exit
fn0000ECA8_exit:


// fn0000ECC8
// Return size: 0
void fn0000ECC8()
fn0000ECC8_entry:
	r1 = fp
	// succ:  l0000ECC8
l0000ECC8:
	r5 = 0x00000000
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r5 = r5 | 0x00004000
	r6 = Mem0[r5 + 8:word32]
	Mem0[r3:word32] = r6
	r3 = Mem0[r5 + 12:word32]
	Mem0[r4:word32] = r3
	return
	// succ:  fn0000ECC8_exit
fn0000ECC8_exit:


// fn0000ECE8
// Return size: 0
void fn0000ECE8()
fn0000ECE8_entry:
	r1 = fp
	// succ:  l0000ECE8
l0000ECE8:
	r3 = 0x00000000
	r3 = r3 | 0x00004000
	r11 = Mem0[r3 + 16:word32]
	return
	// succ:  fn0000ECE8_exit
fn0000ECE8_exit:


// fn0000ECF8
// Return size: 0
void fn0000ECF8()
fn0000ECF8_entry:
	r1 = fp
	// succ:  l0000ECF8
l0000ECF8:
	Mem0[r1 - 24:word32] = r2
	Mem0[r1 - 20:word32] = r14
	Mem0[r1 - 12:word32] = r18
	Mem0[r1 - 8:word32] = r20
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 16:word32] = r16
	r18 = r4 | 0x00000000
	r1 = r1 - 44
	CV = cond(r1)
	r4 = 0x00000001
	r20 = r5 | 0x00000000
	r14 = r3 | 0x00000000
	r4 = r4 | 0x00002E71
	r3 = r1 | 0x00000000
	r5 = 0x00000000 + -17
	CV = cond(r5)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	call fn0000DF10 (retsize: 0;)
	F = r18 >= r20
	branch F l0000ECF8_ds_t
	// succ:  l0000ECF8_ds_f l0000ECF8_ds_t
l0000ECF8_ds_f:
	r3 = r14 | 0x00000000
	goto l0000ED44
	// succ:  l0000ED44
l0000ECF8_ds_t:
	r3 = r14 | 0x00000000
	goto l0000ED54
	// succ:  l0000ED54
l0000ED44:
	r2 = r20 - r18
	CV = cond(r2)
	r4 = r1 | 0x00000000
	r5 = r2 | 0x00000000
	call fn0000DE50 (retsize: 0;)
l0000ED54:
	r1 = r1 + -44
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 24:word32]
	r14 = Mem0[r1 - 20:word32]
	r16 = Mem0[r1 - 16:word32]
	r18 = Mem0[r1 - 12:word32]
	r20 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000ECF8_exit
fn0000ECF8_exit:


// fn0000ED78
// Return size: 0
void fn0000ED78()
fn0000ED78_entry:
	r1 = fp
	// succ:  l0000ED78
l0000ED78:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	call fn0000D640 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn0000ED78_exit
fn0000ED78_exit:


// fn0000EDF4
// Return size: 0
void fn0000EDF4()
fn0000EDF4_entry:
	r1 = fp
	// succ:  l0000EDF4
l0000EDF4:
	Mem0[r1 - 32:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 24:word32] = r16
	r2 = r2 | 0x00003150
	Mem0[r1 - 4:word32] = r9
	r11 = Mem0[r2:word32]
	r2 = 0x00000000 + -240
	CV = cond(r2)
	r11 = r11 + -1
	CV = cond(r11)
	Mem0[r1 - 28:word32] = r14
fn0000EDF4_exit:


// fn0000F140
// Return size: 0
void fn0000F140()
fn0000F140_entry:
	r1 = fp
	// succ:  l0000F140
l0000F140:
	r4 = 0x00000001
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r4 = r4 | 0x00003150
	Mem0[r4:word32] = r3
	return
	// succ:  fn0000F140_exit
fn0000F140_exit:


// fn0000F154
// Return size: 0
void fn0000F154()
fn0000F154_entry:
	r1 = fp
	// succ:  l0000F154
l0000F154:
	r4 = 0x00000001
	r4 = r4 | 0x0000377C
	r4 = Mem0[r4:word32]
	F = r3 <u r4
	branch F l0000F154_ds_t
	// succ:  l0000F154_ds_f l0000F154_ds_t
l0000F154_ds_f:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000F16C
	// succ:  l0000F16C
l0000F154_ds_t:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l0000F18C
	// succ:  l0000F18C
l0000F16C:
	r5 = 0x00000001
	r5 = r5 | 0x00003780
	r5 = Mem0[r5:word32]
	F = r3 <u r5
	branch F l0000F16C_ds_t
	// succ:  l0000F16C_ds_f l0000F16C_ds_t
l0000F16C_ds_f:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	goto l0000F184
	// succ:  l0000F184
l0000F16C_ds_t:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	goto l0000F188
	// succ:  l0000F188
l0000F184:
	r4 = r11 | 0x00000000
	// succ:  l0000F188
l0000F188:
	r11 = r4 | 0x00000000
	// succ:  l0000F18C
l0000F18C:
	return
	// succ:  fn0000F154_exit
fn0000F154_exit:


// fn0000F194
// Return size: 0
void fn0000F194()
fn0000F194_entry:
	r1 = fp
	// succ:  l0000F194
l0000F194:
	r3 = 0x00000001
	r4 = 0x00000001
	Mem0[r1 - 12:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r14
	r3 = r3 | 0x00003774
	r1 = r1 - 12
	CV = cond(r1)
	r4 = r4 | 0x00003784
	r2 = r2 | 0x00003774
	call fn0000ECA8 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r2 = 0x00000001
	r5 = 0x00000001
	r2 = r2 | 0x00003784
	r5 = r5 | 0x00003780
	r4 = Mem0[r2:word32]
	r14 = 0x00000001
	r4 = r3 + r4
	CV = cond(r4)
	r14 = r14 | 0x0000377C
	Mem0[r5:word32] = r4
	Mem0[r14:word32] = r3
	call fn00004570 (retsize: 0;)
	r3 = Mem0[r14:word32]
	r5 = Mem0[r2:word32]
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r2 = 0x00000000 + 0
	CV = cond(r2)
	call fn0000DFCC (retsize: 0;)
	r3 = 0x00000001
	r3 = r3 | 0x00003A04
	Mem0[r3 + 4:word32] = r2
	Mem0[r3 + 8:word32] = r2
	Mem0[r3 + 12:word32] = r2
	Mem0[r3 + 16:word32] = r2
	Mem0[r3:word32] = r2
	r2 = 0x00000001
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r2 = r2 | 0x00003778
	r11 = r3 | 0x00000000
	Mem0[r2:word32] = r3
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000F194_exit
fn0000F194_exit:


// fn0000F250
// Return size: 0
void fn0000F250()
fn0000F250_entry:
	r1 = fp
	// succ:  l0000F250
l0000F250:
	Mem0[r1 - 8:word32] = r2
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 8
	CV = cond(r1)
	call fn0000E718 (retsize: 0;)
	r4 = 0x00000001
	r3 = r11 | 0x00000000
	r4 = r4 | 0x00003A04
	r2 = Mem0[r4:word32]
	F = r2 == 0x00000000
	branch F l0000F250_ds_t
	// succ:  l0000F250_ds_f l0000F250_ds_t
l0000F250_ds_f:
	goto l0000F27C
	// succ:  l0000F27C
l0000F250_ds_t:
	goto l0000F2BC
	// succ:  l0000F2BC
l0000F27C:
	r2 = Mem0[r4:word32]
	r5 = 0x00000001
	r2 = r2 - 1
	CV = cond(r2)
	r5 = r5 | 0x00003A04
	Mem0[r4:word32] = r2
	r2 = Mem0[r4:word32]
	r2 = r2 + -1
	CV = cond(r2)
	r2 = r2 << 0x00000002
	r2 = r2 + r4
	CV = cond(r2)
	r2 = Mem0[r2:word32]
	r4 = Mem0[r4:word32]
	r4 = r4 + -1
	CV = cond(r4)
	r4 = r4 << 0x00000002
	r4 = r4 + r5
	CV = cond(r4)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	Mem0[r4:word32] = r5
	// succ:  l0000F2BC
l0000F2BC:
	call fn0000E740 (retsize: 0;)
	r3 = r2 | 0x00000000
	call fn0000F154 (retsize: 0;)
	F = r11 != 0x00000000
	branch F l0000F2BC_ds_t
	// succ:  l0000F2BC_ds_f l0000F2BC_ds_t
l0000F2BC_ds_f:
	r3 = r11 | 0x00000000
	goto l0000F2D8
	// succ:  l0000F2D8
l0000F2BC_ds_t:
	r3 = r11 | 0x00000000
	goto l0000F334
	// succ:  l0000F334
l0000F2D8:
	r4 = 0x00000000 + -100
	CV = cond(r4)
	call fn00008834 (retsize: 0;)
	r3 = 0x00000001
	r4 = 0x00000001
	r3 = r3 | 0x0000377C
	r4 = r4 | 0x00003780
	r3 = Mem0[r3:word32]
	r4 = Mem0[r4:word32]
	goto l0000F320
	// succ:  l0000F320
l0000F2FC:
	r5 = (word32) Mem0[r3:byte]
	F = r5 != 0x00000000
	branch F l0000F2FC_ds_t
	// succ:  l0000F2FC_ds_f l0000F2FC_ds_t
l0000F2FC_ds_f:
	r3 = r3 + -128
	CV = cond(r3)
	goto l0000F30C
	// succ:  l0000F30C
l0000F2FC_ds_t:
	r3 = r3 + -128
	CV = cond(r3)
	goto l0000F320
	// succ:  l0000F320
l0000F30C:
	r3 = r3 - 128
	CV = cond(r3)
	r2 = 0x00000000 + -1
	CV = cond(r2)
	Mem0[r3:byte] = SLICE(r2, byte, 0)
	r2 = r3 | 0x00000000
	goto l0000F32C
	// succ:  l0000F32C
l0000F320:
	F = r3 <u r4
	branch F l0000F320_ds_t
	// succ:  l0000F320_ds_f l0000F320_ds_t
l0000F320_ds_f:
	goto l0000F32C
	// succ:  l0000F32C
l0000F320_ds_t:
	goto l0000F2FC
	// succ:  l0000F2FC
l0000F32C:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn000088FC (retsize: 0;)
l0000F334:
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r11 = r2 | 0x00000000
	Mem0[r2 + 8:word32] = r3
	Mem0[r2 + 12:word32] = r4
	Mem0[r2 + 32:word32] = r3
	Mem0[r2 + 36:word32] = r4
	r4 = 0x00000000 + 0
	CV = cond(r4)
	Mem0[r2 + 1:byte] = SLICE(r4, byte, 0)
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000F250_exit
fn0000F250_exit:


// fn0000F368
// Return size: 0
void fn0000F368()
fn0000F368_entry:
	r1 = fp
	// succ:  l0000F368
l0000F368:
	Mem0[r1 - 12:word32] = r2
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r14
	r1 = r1 - 12
	CV = cond(r1)
	r2 = r3 | 0x00000000
	call fn0000F154 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l0000F368_ds_t
	// succ:  l0000F368_ds_f l0000F368_ds_t
l0000F368_ds_f:
	goto l0000F38C
	// succ:  l0000F38C
l0000F368_ds_t:
	goto l0000F430
	// succ:  l0000F430
l0000F38C:
	call fn0000E718 (retsize: 0;)
	r4 = 0x00000001
	r14 = r11 | 0x00000000
	r4 = r4 | 0x00003A04
	r3 = Mem0[r4:word32]
	F = r3 >u 0x00000003
	branch F l0000F38C_ds_t
	// succ:  l0000F38C_ds_f l0000F38C_ds_t
l0000F38C_ds_f:
	r6 = 0x00000000 + 0
	CV = cond(r6)
	goto l0000F3B0
	// succ:  l0000F3B0
l0000F38C_ds_t:
	r6 = 0x00000000 + 0
	CV = cond(r6)
	goto l0000F3EC
	// succ:  l0000F3EC
l0000F3B0:
	r5 = 0x00000000 + 0
	CV = cond(r5)
	Mem0[r2 + 8:word32] = r5
	Mem0[r2 + 12:word32] = r6
	r6 = 0x00000000 + -1
	CV = cond(r6)
	Mem0[r2:byte] = SLICE(r6, byte, 0)
	r3 = Mem0[r4:word32]
	r3 = r3 + -1
	CV = cond(r3)
	r3 = r3 << 0x00000002
	r3 = r3 + r4
	CV = cond(r3)
	Mem0[r3:word32] = r2
	r2 = Mem0[r4:word32]
	r2 = r2 + -1
	CV = cond(r2)
	Mem0[r4:word32] = r2
	r1 = r1 + -12
	CV = cond(r1)
	goto l0000F41C
	// succ:  l0000F41C
l0000F3EC:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = 0x00000000 + -100
	CV = cond(r4)
	call fn00008834 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = 0x00000000 + 0
	CV = cond(r4)
	Mem0[r2:byte] = SLICE(r3, byte, 0)
	r5 = 0x00000000 + 0
	CV = cond(r5)
	Mem0[r2 + 8:word32] = r4
	Mem0[r2 + 12:word32] = r5
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn000088FC (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	// succ:  l0000F41C
l0000F41C:
	r3 = r14 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	// succ:  l0000F428_thunk_fn0000E740
l0000F428_thunk_fn0000E740:
	call fn0000E740 (retsize: 0;)
	return
	// succ:  fn0000F368_exit
l0000F430:
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000F368_exit
fn0000F368_exit:


// fn0000F444
// Return size: 0
void fn0000F444()
fn0000F444_entry:
	r1 = fp
	// succ:  l0000F444
l0000F444:
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 8:word32] = r16
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 16
	CV = cond(r1)
	r14 = r3 | 0x00000000
	r2 = 0x00000000 + -4
	CV = cond(r2)
	call fn0000E718 (retsize: 0;)
	r4 = (word32) Mem0[r14 + 2:byte]
	Mem0[r14:byte] = SLICE(r2, byte, 0)
	F = r4 == 0x00000059
	branch F l0000F444_ds_t
	// succ:  l0000F444_ds_f l0000F444_ds_t
l0000F444_ds_f:
	r16 = r11 | 0x00000000
	goto l0000F478
	// succ:  l0000F478
l0000F444_ds_t:
	r16 = r11 | 0x00000000
	goto l0000F75C
	// succ:  l0000F75C
l0000F478:
	F = r4 >u 0x00000059
	branch F l0000F478_ds_t
	// succ:  l0000F478_ds_f l0000F478_ds_t
l0000F478_ds_f:
	F = r4 == 0x00000061
	goto l0000F484
	// succ:  l0000F484
l0000F478_ds_t:
	F = r4 == 0x00000061
	goto l0000F52C
	// succ:  l0000F52C
l0000F484:
	F = r4 == 0x00000030
	branch F l0000F484_ds_t
	// succ:  l0000F484_ds_f l0000F484_ds_t
l0000F484_ds_f:
	F = r4 >u 0x00000030
	goto l0000F490
	// succ:  l0000F490
l0000F484_ds_t:
	F = r4 >u 0x00000030
	goto l0000F5F4
	// succ:  l0000F5F4
l0000F490:
	branch F l0000F490_ds_t
	// succ:  l0000F490_ds_f l0000F490_ds_t
l0000F490_ds_f:
	F = r4 == 0x00000053
	goto l0000F498
	// succ:  l0000F498
l0000F490_ds_t:
	F = r4 == 0x00000053
	goto l0000F4E0
	// succ:  l0000F4E0
l0000F498:
	F = r4 == 0x00000020
	branch F l0000F498_ds_t
	// succ:  l0000F498_ds_f l0000F498_ds_t
l0000F498_ds_f:
	F = r4 >u 0x00000020
	goto l0000F4A4
	// succ:  l0000F4A4
l0000F498_ds_t:
	F = r4 >u 0x00000020
	goto l0000F688
	// succ:  l0000F688
l0000F4A4:
	branch F l0000F4A4_ds_t
	// succ:  l0000F4A4_ds_f l0000F4A4_ds_t
l0000F4A4_ds_f:
	F = r4 == 0x00000022
	goto l0000F4AC
	// succ:  l0000F4AC
l0000F4A4_ds_t:
	F = r4 == 0x00000022
	goto l0000F4C8
	// succ:  l0000F4C8
l0000F4AC:
	F = r4 == 0x00000016
	branch F l0000F4AC_ds_t
	// succ:  l0000F4AC_ds_f l0000F4AC_ds_t
l0000F4AC_ds_f:
	F = r4 == 0x00000019
	goto l0000F4B8
	// succ:  l0000F4B8
l0000F4AC_ds_t:
	F = r4 == 0x00000019
	goto l0000F604
	// succ:  l0000F604
l0000F4B8:
	branch !F l0000F4B8_ds_t
	// succ:  l0000F4B8_ds_f l0000F4B8_ds_t
l0000F4B8_ds_f:
	r3 = 0x00000001
	goto l0000F4C0
	// succ:  l0000F4C0
l0000F4B8_ds_t:
	r3 = 0x00000001
	goto l0000F7E4
	// succ:  l0000F7E4
l0000F4C0:
	goto l0000F678
	// succ:  l0000F678
l0000F4C8:
	branch F l0000F4C8_ds_t
	// succ:  l0000F4C8_ds_f l0000F4C8_ds_t
l0000F4C8_ds_f:
	F = r4 == 0x00000024
	goto l0000F4D0
	// succ:  l0000F4D0
l0000F4C8_ds_t:
	F = r4 == 0x00000024
	goto l0000F5D4
	// succ:  l0000F5D4
l0000F4D0:
	branch !F l0000F4D0_ds_t
	// succ:  l0000F4D0_ds_f l0000F4D0_ds_t
l0000F4D0_ds_f:
	r3 = 0x00000001
	goto l0000F4D8
	// succ:  l0000F4D8
l0000F4D0_ds_t:
	r3 = 0x00000001
	goto l0000F7E4
	// succ:  l0000F7E4
l0000F4D8:
	goto l0000F5E4
	// succ:  l0000F5E4
l0000F4E0:
	branch F l0000F4E0_ds_t
	// succ:  l0000F4E0_ds_f l0000F4E0_ds_t
l0000F4E0_ds_f:
	F = r4 >u 0x00000053
	goto l0000F4E8
	// succ:  l0000F4E8
l0000F4E0_ds_t:
	F = r4 >u 0x00000053
	goto l0000F6E0
	// succ:  l0000F6E0
l0000F4E8:
	branch F l0000F4E8_ds_t
	// succ:  l0000F4E8_ds_f l0000F4E8_ds_t
l0000F4E8_ds_f:
	F = r4 == 0x00000055
	goto l0000F4F0
	// succ:  l0000F4F0
l0000F4E8_ds_t:
	F = r4 == 0x00000055
	goto l0000F50C
	// succ:  l0000F50C
l0000F4F0:
	F = r4 == 0x00000051
	branch F l0000F4F0_ds_t
	// succ:  l0000F4F0_ds_f l0000F4F0_ds_t
l0000F4F0_ds_f:
	F = r4 == 0x00000052
	goto l0000F4FC
	// succ:  l0000F4FC
l0000F4F0_ds_t:
	F = r4 == 0x00000052
	goto l0000F698
	// succ:  l0000F698
l0000F4FC:
	branch !F l0000F4FC_ds_t
	// succ:  l0000F4FC_ds_f l0000F4FC_ds_t
l0000F4FC_ds_f:
	r3 = 0x00000001
	goto l0000F504
	// succ:  l0000F504
l0000F4FC_ds_t:
	r3 = 0x00000001
	goto l0000F7E4
	// succ:  l0000F7E4
l0000F504:
	goto l0000F6A8
	// succ:  l0000F6A8
l0000F50C:
	branch F l0000F50C_ds_t
	// succ:  l0000F50C_ds_f l0000F50C_ds_t
l0000F50C_ds_f:
	F = r4 <u 0x00000055
	goto l0000F514
	// succ:  l0000F514
l0000F50C_ds_t:
	F = r4 <u 0x00000055
	goto l0000F6F0
	// succ:  l0000F6F0
l0000F514:
	branch F l0000F514_ds_t
	// succ:  l0000F514_ds_f l0000F514_ds_t
l0000F514_ds_f:
	F = r4 == 0x00000056
	goto l0000F51C
	// succ:  l0000F51C
l0000F514_ds_t:
	F = r4 == 0x00000056
	goto l0000F74C
	// succ:  l0000F74C
l0000F51C:
	branch !F l0000F51C_ds_t
	// succ:  l0000F51C_ds_f l0000F51C_ds_t
l0000F51C_ds_f:
	r3 = 0x00000001
	goto l0000F524
	// succ:  l0000F524
l0000F51C_ds_t:
	r3 = 0x00000001
	goto l0000F7E4
	// succ:  l0000F7E4
l0000F524:
	goto l0000F704
	// succ:  l0000F704
l0000F52C:
	branch F l0000F52C_ds_t
	// succ:  l0000F52C_ds_f l0000F52C_ds_t
l0000F52C_ds_f:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	goto l0000F534
	// succ:  l0000F534
l0000F52C_ds_t:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F534:
	F = r4 >u 0x00000061
	branch F l0000F534_ds_t
	// succ:  l0000F534_ds_f l0000F534_ds_t
l0000F534_ds_f:
	F = r4 == 0x00000067
	goto l0000F540
	// succ:  l0000F540
l0000F534_ds_t:
	F = r4 == 0x00000067
	goto l0000F588
	// succ:  l0000F588
l0000F540:
	F = r4 == 0x0000005C
	branch F l0000F540_ds_t
	// succ:  l0000F540_ds_f l0000F540_ds_t
l0000F540_ds_f:
	F = r4 >u 0x0000005C
	goto l0000F54C
	// succ:  l0000F54C
l0000F540_ds_t:
	F = r4 >u 0x0000005C
	goto l0000F714
	// succ:  l0000F714
l0000F54C:
	branch F l0000F54C_ds_t
	// succ:  l0000F54C_ds_f l0000F54C_ds_t
l0000F54C_ds_f:
	F = r4 == 0x0000005D
	goto l0000F554
	// succ:  l0000F554
l0000F54C_ds_t:
	F = r4 == 0x0000005D
	goto l0000F570
	// succ:  l0000F570
l0000F554:
	F = r4 == 0x0000005A
	branch F l0000F554_ds_t
	// succ:  l0000F554_ds_f l0000F554_ds_t
l0000F554_ds_f:
	F = r4 == 0x0000005B
	goto l0000F560
	// succ:  l0000F560
l0000F554_ds_t:
	F = r4 == 0x0000005B
	goto l0000F6C0
	// succ:  l0000F6C0
l0000F560:
	branch !F l0000F560_ds_t
	// succ:  l0000F560_ds_f l0000F560_ds_t
l0000F560_ds_f:
	r3 = 0x00000001
	goto l0000F568
	// succ:  l0000F568
l0000F560_ds_t:
	r3 = 0x00000001
	goto l0000F7E4
	// succ:  l0000F7E4
l0000F568:
	goto l0000F6D0
	// succ:  l0000F6D0
l0000F570:
	branch F l0000F570_ds_t
	// succ:  l0000F570_ds_f l0000F570_ds_t
l0000F570_ds_f:
	F = r4 == 0x00000060
	goto l0000F578
	// succ:  l0000F578
l0000F570_ds_t:
	F = r4 == 0x00000060
	goto l0000F728
	// succ:  l0000F728
l0000F578:
	branch !F l0000F578_ds_t
	// succ:  l0000F578_ds_f l0000F578_ds_t
l0000F578_ds_f:
	r3 = 0x00000001
	goto l0000F580
	// succ:  l0000F580
l0000F578_ds_t:
	r3 = 0x00000001
	goto l0000F7E4
	// succ:  l0000F7E4
l0000F580:
	goto l0000F79C
	// succ:  l0000F79C
l0000F588:
	branch F l0000F588_ds_t
	// succ:  l0000F588_ds_f l0000F588_ds_t
l0000F588_ds_f:
	F = r4 >u 0x00000067
	goto l0000F590
	// succ:  l0000F590
l0000F588_ds_t:
	F = r4 >u 0x00000067
	goto l0000F7D0
	// succ:  l0000F7D0
l0000F590:
	branch F l0000F590_ds_t
	// succ:  l0000F590_ds_f l0000F590_ds_t
l0000F590_ds_f:
	F = r4 == 0x00000081
	goto l0000F598
	// succ:  l0000F598
l0000F590_ds_t:
	F = r4 == 0x00000081
	goto l0000F5B4
	// succ:  l0000F5B4
l0000F598:
	F = r4 == 0x00000062
	branch F l0000F598_ds_t
	// succ:  l0000F598_ds_f l0000F598_ds_t
l0000F598_ds_f:
	F = r4 == 0x00000064
	goto l0000F5A4
	// succ:  l0000F5A4
l0000F598_ds_t:
	F = r4 == 0x00000064
	goto l0000F7AC
	// succ:  l0000F7AC
l0000F5A4:
	branch !F l0000F5A4_ds_t
	// succ:  l0000F5A4_ds_f l0000F5A4_ds_t
l0000F5A4_ds_f:
	goto l0000F5AC
	// succ:  l0000F5AC
l0000F5A4_ds_t:
	goto l0000F7E0
	// succ:  l0000F7E0
l0000F5AC:
	r3 = Mem0[r14 + 40:word32]
	goto l0000F7BC
	// succ:  l0000F7BC
l0000F5B4:
	branch F l0000F5B4_ds_t
	// succ:  l0000F5B4_ds_f l0000F5B4_ds_t
l0000F5B4_ds_f:
	F = r4 == 0x00000082
	goto l0000F5BC
	// succ:  l0000F5BC
l0000F5B4_ds_t:
	F = r4 == 0x00000082
	goto l0000F77C
	// succ:  l0000F77C
l0000F5BC:
	branch F l0000F5BC_ds_t
	// succ:  l0000F5BC_ds_f l0000F5BC_ds_t
l0000F5BC_ds_f:
	F = r4 == 0x00000080
	goto l0000F5C4
	// succ:  l0000F5C4
l0000F5BC_ds_t:
	F = r4 == 0x00000080
	goto l0000F78C
	// succ:  l0000F78C
l0000F5C4:
	branch !F l0000F5C4_ds_t
	// succ:  l0000F5C4_ds_f l0000F5C4_ds_t
l0000F5C4_ds_f:
	r3 = 0x00000001
	goto l0000F5CC
	// succ:  l0000F5CC
l0000F5C4_ds_t:
	r3 = 0x00000001
	goto l0000F7E4
	// succ:  l0000F7E4
l0000F5CC:
	goto l0000F76C
	// succ:  l0000F76C
l0000F5D4:
	r3 = r14 | 0x00000000
	call fn00012214 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F5E4:
	r3 = r14 | 0x00000000
	call fn000122B8 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F5F4:
	r3 = r14 | 0x00000000
	call fn0000E1AC (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F604:
	r2 = 0x00000001
	r2 = r2 | 0x00003778
	r3 = Mem0[r2:word32]
	F = r3 == 0x00000003
	branch F l0000F604_ds_t
	// succ:  l0000F604_ds_f l0000F604_ds_t
l0000F604_ds_f:
	r3 = 0x00000000 + -3
	CV = cond(r3)
	goto l0000F61C
	// succ:  l0000F61C
l0000F604_ds_t:
	r3 = 0x00000000 + -3
	CV = cond(r3)
	goto l0000F660
	// succ:  l0000F660
l0000F61C:
	r5 = 0x00000001
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	r3 = 0x00000001
	r2 = r2 | 0x00003980
	r5 = r5 | 0x00002476
	r4 = Mem0[r2:word32]
	r2 = 0x00000001
	r3 = r3 | 0x000000B8
	r2 = r2 | 0x000000B8
	r4 = r4 + r2
	CV = cond(r4)
	r5 = r5 - r2
	CV = cond(r5)
	call fn0000DF10 (retsize: 0;)
	call fn0000FA94 (retsize: 0;)
	r3 = 0x00000000 + -1000
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
l0000F660:
	r3 = 0x0000F3F3
	call fn0000AEDC (retsize: 0;)
	r3 = r14 | 0x00000000
	call fn00010570 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F678:
	r3 = r14 | 0x00000000
	call fn00012320 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F688:
	r3 = r14 | 0x00000000
	call fn0000E50C (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F698:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008B78 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F6A8:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008CA4 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008B60 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F6C0:
	r3 = r2 | 0x00000000
	call fn00008CA4 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F6D0:
	r3 = Mem0[r14 + 40:word32]
	call fn00008B90 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F6E0:
	r3 = r14 | 0x00000000
	call fn0000A364 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F6F0:
	r3 = Mem0[r14 + 40:word32]
	r4 = Mem0[r14 + 44:word32]
	call fn00009C2C (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F704:
	r3 = Mem0[r14 + 40:word32]
	call fn00009DDC (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F734
	// succ:  l0000F734
l0000F714:
	r3 = Mem0[r14 + 40:word32]
	r4 = Mem0[r14 + 44:word32]
	call fn00009ED0 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F728:
	r3 = Mem0[r14 + 40:word32]
	call fn0000A070 (retsize: 0;)
	r2 = r11 | 0x00000000
	// succ:  l0000F734
l0000F734:
	F = r11 < 0
	branch F l0000F734_ds_t
	// succ:  l0000F734_ds_f l0000F734_ds_t
l0000F734_ds_f:
	r3 = 0x00000000 + -5
	CV = cond(r3)
	goto l0000F740
	// succ:  l0000F740
l0000F734_ds_t:
	r3 = 0x00000000 + -5
	CV = cond(r3)
	goto l0000F7FC
	// succ:  l0000F7FC
l0000F740:
	Mem0[r14 + 44:word32] = r11
	r2 = 0x00000000 + 0
	CV = cond(r2)
	goto l0000F7FC
	// succ:  l0000F7FC
l0000F74C:
	r3 = r14 | 0x00000000
	call fn0000A5D0 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F75C:
	r3 = r14 | 0x00000000
	call fn0000A634 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F76C:
	r3 = r14 | 0x00000000
	call fn0000D31C (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F77C:
	r3 = r14 | 0x00000000
	call fn0000D408 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F78C:
	r3 = r14 | 0x00000000
	call fn0000D49C (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F79C:
	r3 = Mem0[r14 + 40:word32]
	call fn0000F140 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F7AC:
	r3 = Mem0[r14 + 40:word32]
	call fn0000D95C (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F7BC:
	r4 = Mem0[r14 + 44:word32]
	r5 = Mem0[r14 + 48:word32]
	call fn0000E590 (retsize: 0;)
	r2 = r11 | 0x00000000
	goto l0000F7F8
	// succ:  l0000F7F8
l0000F7D0:
	call fn0000EC54 (retsize: 0;)
	r3 = 0x00000000 + -5
	CV = cond(r3)
	goto l0000F7FC
	// succ:  l0000F7FC
l0000F7E0:
	r3 = 0x00000001
	// succ:  l0000F7E4
l0000F7E4:
	r4 = r14 | 0x00000000
	r3 = r3 | 0x00002E82
	r5 = 0x00000000 + -128
	CV = cond(r5)
	r2 = 0x00000000 - 3
	CV = cond(r2)
	call fn0000DD60 (retsize: 0;)
l0000F7F8:
	r3 = 0x00000000 + -5
	CV = cond(r3)
	goto l0000F7FC
	// succ:  l0000F7FC
l0000F7F8_ds_f:
	r3 = r14 | 0x00000000
	goto l0000F818
	// succ:  l0000F818
l0000F7F8_ds_t:
	r3 = r14 | 0x00000000
	goto l0000F820
	// succ:  l0000F820
l0000F7FC:
	Mem0[r14 + 3:byte] = SLICE(r2, byte, 0)
	Mem0[r14:byte] = SLICE(r3, byte, 0)
	r3 = (word32) Mem0[r14 + 1:byte]
	r3 = r3 & 0x00000003
	F = r3 == 0x00000000
	branch F l0000F7F8_ds_t
	goto l0000F7F8_ds_f
	// succ:  l0000F7F8_ds_f l0000F7F8_ds_t
l0000F818:
	r4 = 0x00000000 + -4000
	CV = cond(r4)
	call fn00008574 (retsize: 0;)
l0000F820:
	r3 = (word32) Mem0[r14 + 1:byte]
	F = r3 != 0x00000000
	branch F l0000F820_ds_t
	// succ:  l0000F820_ds_f l0000F820_ds_t
l0000F820_ds_f:
	F = r2 == 0x00000000
	goto l0000F830
	// succ:  l0000F830
l0000F820_ds_t:
	F = r2 == 0x00000000
	goto l0000F850
	// succ:  l0000F850
l0000F830:
	branch F l0000F830_ds_t
	// succ:  l0000F830_ds_f l0000F830_ds_t
l0000F830_ds_f:
	r3 = r14 | 0x00000000
	goto l0000F838
	// succ:  l0000F838
l0000F830_ds_t:
	r3 = r14 | 0x00000000
	goto l0000F848
	// succ:  l0000F848
l0000F838:
	r4 = 0x00000000 + -4000
	CV = cond(r4)
	call fn00008574 (retsize: 0;)
	goto l0000F850
	// succ:  l0000F850
l0000F848:
	r3 = r14 | 0x00000000
	call fn0000F368 (retsize: 0;)
l0000F850:
	r3 = r16 | 0x00000000
	call fn0000E740 (retsize: 0;)
	r1 = r1 + -16
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000F444_exit
fn0000F444_exit:


// fn0000F874
// Return size: 0
void fn0000F874()
fn0000F874_entry:
	r1 = fp
	// succ:  l0000F874
l0000F874:
	r4 = 0x00000001
	r4 = r4 | 0x00003774
	r11 = Mem0[r4:word32]
	r11 = r3 + r11
	CV = cond(r11)
	return
	// succ:  fn0000F874_exit
fn0000F874_exit:


// fn0000F888
// Return size: 0
void fn0000F888()
fn0000F888_entry:
	r1 = fp
	// succ:  l0000F888
l0000F888:
	r4 = 0x00000001
	r4 = r4 | 0x00003774
	r11 = Mem0[r4:word32]
	r11 = r3 - r11
	CV = cond(r11)
	return
	// succ:  fn0000F888_exit
fn0000F888_exit:


// fn0000F89C
// Return size: 0
void fn0000F89C()
fn0000F89C_entry:
	r1 = fp
	// succ:  l0000F89C
l0000F89C:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r2
	r3 = r3 | 0x00003788
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r1 = r1 - 4
	CV = cond(r1)
	Mem0[r3:word32] = r2
	Mem0[r3 + 12:word32] = r2
	Mem0[r3 + 24:word32] = r2
	Mem0[r3 + 36:word32] = r2
	Mem0[r3 + 48:word32] = r2
	Mem0[r3 + 60:word32] = r2
	Mem0[r3 + 72:word32] = r2
	Mem0[r3 + 84:word32] = r2
	r1 = r1 + -4
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn0000F89C_exit
fn0000F89C_exit:


// fn0000F8E8
// Return size: 0
void fn0000F8E8()
fn0000F8E8_entry:
	r1 = fp
	r1 = fp
	// succ:  l0000F8E8 l0000F8E8
l0000F8E8:
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 8:word32] = r16
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 16
	CV = cond(r1)
	r2 = 0x00000001
	r14 = r3 | 0x00000000
	r16 = r4 | 0x00000000
	call fn0000E718 (retsize: 0;)
	r2 = r2 | 0x00003788
	r3 = r11 | 0x00000000
	r5 = 0x00000000 + 0
	CV = cond(r5)
	goto l0000F918
	// succ:  l0000F918
l0000F8E8_ds_f:
	r5 = r5 + -1
	CV = cond(r5)
	goto l0000F928
	// succ:  l0000F928
l0000F8E8_ds_t:
	r5 = r5 + -1
	CV = cond(r5)
	goto l0000F950
	// succ:  l0000F950
l0000F918:
	r4 = Mem0[r2:word32]
	F = r4 != 0x00000000
	branch F l0000F8E8_ds_t
	goto l0000F8E8_ds_f
	// succ:  l0000F8E8_ds_f l0000F8E8_ds_t
l0000F928:
	r5 = r5 - 1
	CV = cond(r5)
	r2 = r5 + r5
	CV = cond(r2)
	r4 = 0x00000001
	r2 = r2 + r5
	CV = cond(r2)
	r4 = r4 | 0x00003788
	r2 = r2 << 0x00000002
	r2 = r2 + r4
	CV = cond(r2)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	Mem0[r2:word32] = r4
	goto l0000F960
	// succ:  l0000F960
l0000F950:
	F = r5 != 0x00000008
	branch F l0000F950_ds_t
	// succ:  l0000F950_ds_f l0000F950_ds_t
l0000F950_ds_f:
	r2 = r2 + -12
	CV = cond(r2)
	goto l0000F95C
	// succ:  l0000F95C
l0000F950_ds_t:
	r2 = r2 + -12
	CV = cond(r2)
	goto l0000F918
	// succ:  l0000F918
l0000F95C:
	r2 = 0x00000000 + 0
	CV = cond(r2)
	// succ:  l0000F960
l0000F960:
	call fn0000E740 (retsize: 0;)
	F = r2 == 0x00000000
	branch F l0000F960_ds_t
	// succ:  l0000F960_ds_f l0000F960_ds_t
l0000F960_ds_f:
	r11 = 0x00000000 - 28
	CV = cond(r11)
	goto l0000F974
	// succ:  l0000F974
l0000F960_ds_t:
	r11 = 0x00000000 - 28
	CV = cond(r11)
	goto l0000F988
	// succ:  l0000F988
l0000F974:
	r3 = Mem0[r14:word32]
	Mem0[r2 + 4:word32] = r16
	Mem0[r2 + 8:word32] = r3
	Mem0[r14:word32] = r2
	r11 = 0x00000000 + 0
	CV = cond(r11)
	// succ:  l0000F988
l0000F988:
	r1 = r1 + -16
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000F8E8_exit
fn0000F8E8_exit:


// fn0000FA38
// Return size: 0
void fn0000FA38()
fn0000FA38_entry:
	r1 = fp
	// succ:  l0000FA38
l0000FA38:
	Mem0[r1 - 16:word32] = r2
	Mem0[r1 - 12:word32] = r14
	Mem0[r1 - 8:word32] = r16
	Mem0[r1 - 4:word32] = r9
	r16 = r4 | 0x00000000
	r1 = r1 - 16
	CV = cond(r1)
	r14 = r5 | 0x00000000
	r2 = Mem0[r3:word32]
	goto l0000FA6C
	// succ:  l0000FA6C
l0000FA5C:
	r11 = Mem0[r2 + 4:word32]
	r4 = r14 | 0x00000000
	call r11 (retsize: 0;)
	r2 = Mem0[r2 + 8:word32]
	// succ:  l0000FA6C
l0000FA6C:
	F = r2 != 0x00000000
	branch F l0000FA6C_ds_t
	// succ:  l0000FA6C_ds_f l0000FA6C_ds_t
l0000FA6C_ds_f:
	r3 = r16 | 0x00000000
	goto l0000FA78
	// succ:  l0000FA78
l0000FA6C_ds_t:
	r3 = r16 | 0x00000000
	goto l0000FA5C
	// succ:  l0000FA5C
l0000FA78:
	r1 = r1 + -16
	CV = cond(r1)
	r11 = r2 | 0x00000000
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 16:word32]
	r14 = Mem0[r1 - 12:word32]
	r16 = Mem0[r1 - 8:word32]
	return
	// succ:  fn0000FA38_exit
fn0000FA38_exit:


// fn0000FA94
// Return size: 0
void fn0000FA94()
fn0000FA94_entry:
	r1 = fp
	// succ:  l0000FA94
l0000FA94:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r3
	Mem0[r1 - 12:word32] = r4
	Mem0[r1 - 16:word32] = r5
fn0000FA94_exit:


// fn0000FEDC
// Return size: 0
void fn0000FEDC()
fn0000FEDC_entry:
	r1 = fp
	// succ:  l0000FEDC
l0000FEDC:
	r1 = r1 - 4
	CV = cond(r1)
	Mem0[r1:word32] = r9
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r8 = r4 + 0
	CV = cond(r8)
	r5 = r3 + 0
	CV = cond(r5)
	F = r8 != r11
	branch !F l0000FEDC_ds_t
	// succ:  l0000FEDC_ds_f l0000FEDC_ds_t
l0000FEDC_ds_f:
	r7 = 0x00000000 + 0
	CV = cond(r7)
	goto l0000FEFC
	// succ:  l0000FEFC
l0000FEDC_ds_t:
	r7 = 0x00000000 + 0
	CV = cond(r7)
	goto l0000FFCC
	// succ:  l0000FFCC
l0000FEFC:
	F = r8 >u r5
	branch F l0000FEFC_ds_t
	// succ:  l0000FEFC_ds_f l0000FEFC_ds_t
l0000FEFC_ds_f:
	F = r8 == r5
	goto l0000FF08
	// succ:  l0000FF08
l0000FEFC_ds_t:
	F = r8 == r5
	goto l0000FFC8
	// succ:  l0000FFC8
l0000FF08:
	branch F l0000FF08_ds_t
	// succ:  l0000FF08_ds_f l0000FF08_ds_t
l0000FF08_ds_f:
	F = r11 <u r8
	goto l0000FF10
	// succ:  l0000FF10
l0000FF08_ds_t:
	F = r11 <u r8
	goto l0000FFC0
	// succ:  l0000FFC0
l0000FF10:
	branch !F l0000FF10_ds_t
	// succ:  l0000FF10_ds_f l0000FF10_ds_t
l0000FF10_ds_f:
	r13 = 0x00000000 + -32
	CV = cond(r13)
	goto l0000FF18
	// succ:  l0000FF18
l0000FF10_ds_t:
	r13 = 0x00000000 + -32
	CV = cond(r13)
	goto l0000FF44
	// succ:  l0000FF44
l0000FF18:
	r9 = 0x00008000
	r6 = 0x00000000 - 1
	CV = cond(r6)
	// succ:  l0000FF20
l0000FF20:
	r3 = r5 & r9
	r4 = r7 << 0x00000001
	r15 = r5 + 0
	CV = cond(r15)
	r3 = r3 >>u 0x0000001F
	r13 = r13 + r6
	CV = cond(r13)
	r7 = r4 | r3
	F = r7 <u r8
	branch F l0000FF20_ds_t
	// succ:  l0000FF20_ds_f l0000FF20_ds_t
l0000FF20_ds_f:
	r5 = r5 << 0x00000001
	goto l0000FF44
	// succ:  l0000FF44
l0000FF20_ds_t:
	r5 = r5 << 0x00000001
	goto l0000FF20
	// succ:  l0000FF20
l0000FF44:
	r7 = r7 >>u 0x00000001
	r13 = r13 + -1
	CV = cond(r13)
	r9 = 0x00000000 + 0
	CV = cond(r9)
	F = r9 <u r13
	branch !F l0000FF44_ds_t
	// succ:  l0000FF44_ds_f l0000FF44_ds_t
l0000FF44_ds_f:
	r5 = r15 + 0
	CV = cond(r5)
	goto l0000FF5C
	// succ:  l0000FF5C
l0000FF44_ds_t:
	r5 = r15 + 0
	CV = cond(r5)
	goto l0000FFCC
	// succ:  l0000FFCC
l0000FF5C:
	r15 = 0x00008000
	r17 = 0x00000000 + 0
	CV = cond(r17)
	goto l0000FF64
	// succ:  l0000FF64
l0000FF5C_ds_f:
	r3 = r11 << 0x00000001
	goto l0000FF90
	// succ:  l0000FF90
l0000FF5C_ds_t:
	r3 = r11 << 0x00000001
	goto l0000FF94
	// succ:  l0000FF94
l0000FF64:
	r3 = r5 & r15
	r4 = r7 << 0x00000001
	r3 = r3 >>u 0x0000001F
	r7 = r4 | r3
	r6 = r7 - r8
	CV = cond(r6)
	r3 = r6 & r15
	r3 = r3 >>u 0x0000001F
	r4 = 0x00000000 + 0
	CV = cond(r4)
	F = r3 != r4
	branch F l0000FF5C_ds_t
	goto l0000FF5C_ds_f
	// succ:  l0000FF5C_ds_f l0000FF5C_ds_t
l0000FF90:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	// succ:  l0000FF94
l0000FF94:
	r5 = r5 << 0x00000001
	F = r4 != r17
	branch !F l0000FF94_ds_t
	// succ:  l0000FF94_ds_f l0000FF94_ds_t
l0000FF94_ds_f:
	r11 = r3 | r4
	goto l0000FFA4
	// succ:  l0000FFA4
l0000FF94_ds_t:
	r11 = r3 | r4
	goto l0000FFA8
	// succ:  l0000FFA8
l0000FFA4:
	r7 = r6 + 0
	CV = cond(r7)
	// succ:  l0000FFA8
l0000FFA8:
	r9 = r9 + -1
	CV = cond(r9)
	F = r9 <u r13
	branch F l0000FFA8_ds_t
	// succ:  l0000FFA8_ds_f l0000FFA8_ds_t
l0000FFA8_ds_f:
	goto l0000FFB8
	// succ:  l0000FFB8
l0000FFA8_ds_t:
	goto l0000FF64
	// succ:  l0000FF64
l0000FFB8:
	goto l0000FFCC
	// succ:  l0000FFCC
l0000FFC0:
	r11 = 0x00000000 + -1
	CV = cond(r11)
	goto l0000FFCC
	// succ:  l0000FFCC
l0000FFC8:
	r7 = r5 + 0
	CV = cond(r7)
	// succ:  l0000FFCC
l0000FFCC:
	r9 = Mem0[r1:word32]
	r1 = r1 + -4
	CV = cond(r1)
	return
	// succ:  fn0000FEDC_exit
fn0000FEDC_exit:


// fn0000FFD8
// Return size: 0
void fn0000FFD8()
fn0000FFD8_entry:
	r1 = fp
	// succ:  l0000FFD8
l0000FFD8:
	r1 = r1 - 8
	CV = cond(r1)
	Mem0[r1:word32] = r9
	Mem0[r1 + 4:word32] = r14
	r5 = r3 + 0
	CV = cond(r5)
	r14 = 0x00000000 + 0
	CV = cond(r14)
	F = r5 < 0x00000000
	branch !F l0000FFD8_ds_t
	// succ:  l0000FFD8_ds_f l0000FFD8_ds_t
l0000FFD8_ds_f:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l0000FFF8
	// succ:  l0000FFF8
l0000FFD8_ds_t:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l00010000
	// succ:  l00010000
l0000FFF8:
	r14 = 0x00000000 + -1
	CV = cond(r14)
	r5 = 0x00000000 - r5
	CV = cond(r5)
	// succ:  l00010000
l00010000:
	F = r4 < 0x00000000
	branch !F l00010000_ds_t
	// succ:  l00010000_ds_f l00010000_ds_t
l00010000_ds_f:
	goto l0001000C
	// succ:  l0001000C
l00010000_ds_t:
	goto l00010014
	// succ:  l00010014
l0001000C:
	r14 = r14 + -1
	CV = cond(r14)
	r4 = 0x00000000 - r4
	CV = cond(r4)
	// succ:  l00010014
l00010014:
	r3 = r5 + 0
	CV = cond(r3)
	call fn0000FEDC (retsize: 0;)
	F = r14 == 0x00000001
	branch !F l00010014_ds_t
	// succ:  l00010014_ds_f l00010014_ds_t
l00010014_ds_f:
	goto l00010028
	// succ:  l00010028
l00010014_ds_t:
	goto l0001002C
	// succ:  l0001002C
l00010028:
	r11 = 0x00000000 - r11
	CV = cond(r11)
	// succ:  l0001002C
l0001002C:
	r9 = Mem0[r1:word32]
	r14 = Mem0[r1 + 4:word32]
	r1 = r1 + -8
	CV = cond(r1)
	return
	// succ:  fn0000FFD8_exit
fn0000FFD8_exit:


// fn0001003C
// Return size: 0
void fn0001003C()
fn0001003C_entry:
	r1 = fp
	// succ:  l0001003C
l0001003C:
	r1 = r1 - 4
	CV = cond(r1)
	Mem0[r1:word32] = r9
	call fn0000FEDC (retsize: 0;)
	r11 = r7 + 0
	CV = cond(r11)
	r9 = Mem0[r1:word32]
	r1 = r1 + -4
	CV = cond(r1)
	return
	// succ:  fn0001003C_exit
fn0001003C_exit:


// fn0001005C
// Return size: 0
void fn0001005C()
fn0001005C_entry:
	r1 = fp
	// succ:  l0001005C
l0001005C:
	r1 = r1 - 8
	CV = cond(r1)
	Mem0[r1:word32] = r9
	Mem0[r1 + 4:word32] = r14
	r14 = 0x00000000 + 0
	CV = cond(r14)
	F = r3 < 0x00000000
	branch !F l0001005C_ds_t
	// succ:  l0001005C_ds_f l0001005C_ds_t
l0001005C_ds_f:
	goto l00010078
	// succ:  l00010078
l0001005C_ds_t:
	goto l00010080
	// succ:  l00010080
l00010078:
	r14 = 0x00000000 + -1
	CV = cond(r14)
	r3 = 0x00000000 - r3
	CV = cond(r3)
	// succ:  l00010080
l00010080:
	F = r4 < 0x00000000
	branch !F l00010080_ds_t
	// succ:  l00010080_ds_f l00010080_ds_t
l00010080_ds_f:
	goto l0001008C
	// succ:  l0001008C
l00010080_ds_t:
	goto l00010090
	// succ:  l00010090
l0001008C:
	r4 = 0x00000000 - r4
	CV = cond(r4)
	// succ:  l00010090
l00010090:
	call fn0000FEDC (retsize: 0;)
	F = r14 == 0x00000001
	branch !F l00010090_ds_t
	// succ:  l00010090_ds_f l00010090_ds_t
l00010090_ds_f:
	r11 = r7 + 0
	CV = cond(r11)
	goto l000100A4
	// succ:  l000100A4
l00010090_ds_t:
	r11 = r7 + 0
	CV = cond(r11)
	goto l000100A8
	// succ:  l000100A8
l000100A4:
	r11 = 0x00000000 - r11
	CV = cond(r11)
	// succ:  l000100A8
l000100A8:
	r9 = Mem0[r1:word32]
	r14 = Mem0[r1 + 4:word32]
	r1 = r1 + -8
	CV = cond(r1)
	return
	// succ:  fn0001005C_exit
fn0001005C_exit:


// fn000100B8
// Return size: 0
void fn000100B8()
fn000100B8_entry:
	r1 = fp
	// succ:  l000100B8
l000100B8:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r4 = 0x00000000 + -3
	CV = cond(r4)
	r1 = r1 - 12
	CV = cond(r1)
	r3 = 0x00000000 + -4
	CV = cond(r3)
	r2 = 0x000001C2
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = 0x00000000 + -20
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B0B8 (retsize: 0;)
	r4 = 0x00000000 + -3
	CV = cond(r4)
	r3 = 0x00000000 + -10
	CV = cond(r3)
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = r2 | 0x00000054
	r5 = 0x00000000 - 4096
	CV = cond(r5)
	r4 = Mem0[r3:word32]
	r4 = r4 & r5
	r4 = r4 | 0x00000010
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r4 = 0x00000000 + -3
	CV = cond(r4)
	r3 = 0x00000000 + -13
	CV = cond(r3)
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = r2 | 0x00000058
	r5 = 0x0000FF00
	r4 = Mem0[r3:word32]
	r2 = r2 | 0x000000CC
	r4 = r4 & r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -11
	CV = cond(r3)
	r4 = 0x00000000 + -23
	CV = cond(r4)
	call fn0000B610 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = 0x0000FF0F
	Mem0[r1:word32] = r3
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r1:word32]
	r5 = 0x000000A0
	r3 = r3 & r4
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	r3 = r3 | r5
	Mem0[r1:word32] = r3
	r3 = Mem0[r1:word32]
	Mem0[r2:word32] = r3
	r1 = r1 + -12
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000100B8_exit
fn000100B8_exit:


// fn000101A8
// Return size: 0
void fn000101A8()
fn000101A8_entry:
	r1 = fp
	// succ:  l000101A8
l000101A8:
	Mem0[r1 - 40:word32] = r2
	r2 = 0x00000000
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 36:word32] = r14
	Mem0[r1 - 32:word32] = r16
	Mem0[r1 - 28:word32] = r18
	Mem0[r1 - 24:word32] = r20
	Mem0[r1 - 20:word32] = r22
	Mem0[r1 - 16:word32] = r24
	Mem0[r1 - 12:word32] = r26
	Mem0[r1 - 8:word32] = r28
	r2 = r2 | 0x00004358
	r1 = r1 - 40
	CV = cond(r1)
	goto l000101DC
	// succ:  l000101DC
l000101A8_ds_f:
	r3 = 0x00000000
	goto l000101F0
	// succ:  l000101F0
l000101A8_ds_t:
	r3 = 0x00000000
	goto l00010200
	// succ:  l00010200
l000101DC:
	call fn00009B70 (retsize: 0;)
	F = r11 != 0x00000000
	branch F l000101A8_ds_t
	goto l000101A8_ds_f
	// succ:  l000101A8_ds_f l000101A8_ds_t
l000101F0:
	r3 = Mem0[r2:word32]
	r3 = r3 << 0x00000011
	Mem0[r2:word32] = r3
	r3 = 0x00000000
	// succ:  l00010200
l00010200:
	r2 = r2 + -4
	CV = cond(r2)
	r3 = r3 | 0x000043A8
	F = r2 != r3
	branch F l00010200_ds_t
	// succ:  l00010200_ds_f l00010200_ds_t
l00010200_ds_f:
	r3 = 0x00000001
	goto l00010214
	// succ:  l00010214
l00010200_ds_t:
	r3 = 0x00000001
	goto l000101DC
	// succ:  l000101DC
l00010214:
	r16 = r2 - 4
	CV = cond(r16)
	r14 = 0x00000001
	r22 = 0x00000001
	r26 = 0x00000001
	r28 = 0x00000001
	r24 = 0x00000001
	r3 = r3 | 0x00003744
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r5 = 0x00000000 + -23
	CV = cond(r5)
	r14 = r14 | 0x00003544
	r22 = r22 | 0x00003742
	r20 = r16 | 0x00000000
	r18 = 0x00000000 + -19
	CV = cond(r18)
	r26 = r26 | 0x000034D0
	r28 = r28 | 0x00003938
	r24 = r24 | 0x00003934
	call fn0000DFCC (retsize: 0;)
	r2 = Mem0[r26:word32]
fn000101A8_exit:


// fn000103C0
// Return size: 0
void fn000103C0()
fn000103C0_entry:
	r1 = fp
	// succ:  l000103C0
l000103C0:
	Mem0[r1 - 36:word32] = r14
	r14 = 0x00000000
	Mem0[r1 - 24:word32] = r20
	Mem0[r1 - 20:word32] = r22
	Mem0[r1 - 16:word32] = r24
	Mem0[r1 - 12:word32] = r26
	Mem0[r1 - 8:word32] = r28
	r20 = 0x00000001
	r14 = r14 | 0x00004358
	r22 = 0x00000001
	r26 = 0x00000001
	r28 = 0x00000001
	r24 = 0x00000001
	Mem0[r1 - 32:word32] = r16
	Mem0[r1 - 28:word32] = r18
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 40:word32] = r2
	r20 = r20 | 0x000034F8
	r1 = r1 - 40
	CV = cond(r1)
	r22 = r22 | 0x0000371C
	r18 = r14 | 0x00000000
	r16 = 0x00000000 + 0
	CV = cond(r16)
	r26 = r26 | 0x000034D0
	r28 = r28 | 0x00003938
	r24 = r24 | 0x00003934
	r2 = Mem0[r26:word32]
fn000103C0_exit:


// fn00010570
// Return size: 0
void fn00010570()
fn00010570_entry:
	r1 = fp
	// succ:  l00010570
l00010570:
	Mem0[r1 - 16:word32] = r14
	r14 = 0x0000F3F3
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 12:word32] = r16
	Mem0[r1 - 8:word32] = r18
	Mem0[r1 - 20:word32] = r2
	r16 = r3 | 0x00000000
	r1 = r1 - 68
	CV = cond(r1)
	r3 = r14 | 0x00001000
	call fn0000AEDC (retsize: 0;)
	r3 = r1 + -44
	CV = cond(r3)
	r4 = r1 + -40
	CV = cond(r4)
	call fn0000ECC8 (retsize: 0;)
	r18 = Mem0[r1 + 44:word32]
	r3 = r1 + -4
	CV = cond(r3)
	r4 = r18 | 0x00000000
	r5 = 0x00000000 + -32
	CV = cond(r5)
	call fn0000DF10 (retsize: 0;)
	r4 = Mem0[r1 + 40:word32]
	F = r4 <=u 0x00000447
	branch F l00010570_ds_t
	// succ:  l00010570_ds_f l00010570_ds_t
l00010570_ds_f:
	r11 = 0x00000000 - 12
	CV = cond(r11)
	goto l000105C8
	// succ:  l000105C8
l00010570_ds_t:
	r11 = 0x00000000 - 12
	CV = cond(r11)
	goto l000121F8
	// succ:  l000121F8
l000105C8:
	r2 = 0x00000001
	r4 = r4 >>u 0x00000001
	r2 = r2 | 0x000034E4
	r5 = 0x00000000 + -548
	CV = cond(r5)
	r3 = r2 | 0x00000000
	r4 = r4 + r18
	CV = cond(r4)
	call fn0000DF10 (retsize: 0;)
	r3 = Mem0[r16 + 44:word32]
	Mem0[r1 + 16:word32] = r3
	r3 = r14 | 0x00001001
	call fn0000AEDC (retsize: 0;)
	r4 = Mem0[r2 + 16:word32]
	r5 = 0x00000001
	r2 = Mem0[r2 + 12:word32]
	r5 = r5 | 0x000034D0
	r3 = r2 & r4
	r4 = r4 ^ 0x0000FFFF
	Mem0[r5:word32] = r3
	r3 = r3 | r4
	r5 = 0x00000001
	r2 = r3 | r2
	r5 = r5 | 0x000034D4
	Mem0[r5:word32] = r2
	r2 = 0x00000001
	call fn0000AC84 (retsize: 0;)
	r2 = r2 | 0x000034D8
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000AF1C (retsize: 0;)
	Mem0[r2:word32] = r11
	r2 = 0x00000170
	r2 = r2 | 0x00000030
	// succ:  l00010644
l00010644:
	r3 = Mem0[r2:word32]
	r4 = 0x00000001
	r3 = r3 & r4
	F = r3 == 0x00000000
	branch F l00010644_ds_t
	// succ:  l00010644_ds_f l00010644_ds_t
l00010644_ds_f:
	r4 = 0x00000001
	goto l0001065C
	// succ:  l0001065C
l00010644_ds_t:
	r4 = 0x00000001
	goto l00010644
	// succ:  l00010644
l0001065C:
	r2 = 0x00000001
	r2 = r2 | 0x000034E4
	r4 = r4 | 0x00002420
	r2 = Mem0[r2:word32]
	r3 = 0x00000000 + -15
	CV = cond(r3)
	Mem0[r1:word32] = r2
	r2 = 0x0000F3F3
	call fn0000EDF4 (retsize: 0;)
	r3 = r2 | 0x00002000
	call fn0000AEDC (retsize: 0;)
	r3 = r2 | 0x00003001
	call fn0000AEDC (retsize: 0;)
	call fn00008CC8 (retsize: 0;)
	r5 = 0x00003087
	r2 = Mem0[r1 + 4:word32]
	r5 = r5 | 0x0000F000
	r2 = r2 & r5
	F = r2 == 0x00000000
	branch F l0001065C_ds_t
	// succ:  l0001065C_ds_f l0001065C_ds_t
l0001065C_ds_f:
	r3 = 0x00004810
	goto l000106B0
	// succ:  l000106B0
l0001065C_ds_t:
	r3 = 0x00004810
	goto l000106E0
	// succ:  l000106E0
l000106B0:
	call fn00009B70 (retsize: 0;)
	F = r11 != 0x00000001
	branch F l000106B0_ds_t
	// succ:  l000106B0_ds_f l000106B0_ds_t
l000106B0_ds_f:
	goto l000106C4
	// succ:  l000106C4
l000106B0_ds_t:
	goto l000106DC
	// succ:  l000106DC
l000106C4:
	r3 = 0x00004810
	r4 = r1 + -4
	CV = cond(r4)
	r3 = r3 | 0x00000FCC
	call fn0000E4F0 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008B60 (retsize: 0;)
l000106DC:
	r3 = 0x00004810
	// succ:  l000106E0
l000106E0:
	r4 = r1 + -4
	CV = cond(r4)
	r3 = r3 | 0x00000C94
	r2 = 0x0000F3F3
	call fn0000E4F0 (retsize: 0;)
	r3 = r2 | 0x00003002
	call fn0000AEDC (retsize: 0;)
	call fn0000875C (retsize: 0;)
	call fn0000897C (retsize: 0;)
	r3 = r2 | 0x00003003
	call fn0000AEDC (retsize: 0;)
	call fn00004844 (retsize: 0;)
	r3 = r2 | 0x00003004
	call fn0000AEDC (retsize: 0;)
	r3 = 0x000001F0
	r4 = 0x00000001
	r3 = r3 | 0x00002E18
	r4 = r4 | 0x00003708
	r5 = Mem0[r3:word32]
	r6 = 0x00000000 + 0
	CV = cond(r6)
	Mem0[r4:word32] = r5
	Mem0[r3:word32] = r6
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = r2 | 0x00003005
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00004810
	r4 = 0x00000001
	r3 = r3 | 0x00000F2C
	r4 = r4 | 0x000034E4
	call fn0000E4F0 (retsize: 0;)
	r3 = r2 | 0x00003006
	r2 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r2 = r2 | 0x000034E4
	call fn00008000 (retsize: 0;)
	r3 = Mem0[r2 + 100:word32]
	F = r3 == 0x00000000
	branch F l000106E0_ds_t
	// succ:  l000106E0_ds_f l000106E0_ds_t
l000106E0_ds_f:
	r3 = 0x00000001
	goto l00010788
	// succ:  l00010788
l000106E0_ds_t:
	r3 = 0x00000001
	goto l00010804
	// succ:  l00010804
l00010788:
	r4 = Mem0[r2 + 104:word32]
	r3 = r3 | 0x0000375C
	Mem0[r3:word32] = r4
	r3 = 0x00000001
	r4 = Mem0[r2 + 108:word32]
	r3 = r3 | 0x00003104
	Mem0[r3:word32] = r4
	r3 = Mem0[r2 + 112:word32]
	r2 = 0x00000001
	r2 = r2 | 0x00003108
	Mem0[r2:word32] = r3
	call fn0000E5BC (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00010788_ds_t
	// succ:  l00010788_ds_f l00010788_ds_t
l00010788_ds_f:
	goto l000107C4
	// succ:  l000107C4
l00010788_ds_t:
	goto l000107D4
	// succ:  l000107D4
l000107C4:
	r2 = 0x00000001
	call fn0000E5CC (retsize: 0;)
	r2 = r2 | 0x0000396C
	Mem0[r2:word32] = r11
	// succ:  l000107D4
l000107D4:
	r2 = 0x000001C2
	r3 = r2 | 0x00000028
	r2 = r2 | 0x0000015C
	r4 = Mem0[r3:word32]
	r3 = 0x00000001
	r3 = r3 | 0x0000370C
	Mem0[r3:word32] = r4
	r3 = Mem0[r2:word32]
	r2 = 0x00000001
	r2 = r2 | 0x00003710
	Mem0[r2:word32] = r3
	call fn00007E04 (retsize: 0;)
l00010804:
	r2 = 0x0000F3F3
	r3 = r2 | 0x00003007
	call fn0000AEDC (retsize: 0;)
	call fn0000490C (retsize: 0;)
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000B610 (retsize: 0;)
	r3 = r2 | 0x00003008
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00000000 + -1600
	CV = cond(r3)
	call fn0000DB28 (retsize: 0;)
	r3 = r2 | 0x00003009
	r2 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r2 = r2 | 0x000034D0
	r2 = Mem0[r2:word32]
	r2 = r2 & 0x00000010
	F = r2 == 0x00000000
	branch F l00010804_ds_t
	// succ:  l00010804_ds_f l00010804_ds_t
l00010804_ds_f:
	goto l00010858
	// succ:  l00010858
l00010804_ds_t:
	goto l00010860
	// succ:  l00010860
l00010858:
	call fn000100B8 (retsize: 0;)
l00010860:
	r2 = 0x0000F3F3
	r3 = r2 | 0x00003091
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00000000 + -10
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -11
	CV = cond(r3)
	r4 = 0x00000000 + -23
	CV = cond(r4)
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -13
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B610 (retsize: 0;)
	r3 = r2 | 0x00003092
	r2 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000001
	F = r2 != 0x00000000
	branch F l00010860_ds_t
	// succ:  l00010860_ds_f l00010860_ds_t
l00010860_ds_f:
	r2 = 0x00000001
	goto l000108B4
	// succ:  l000108B4
l00010860_ds_t:
	r2 = 0x00000001
	goto l000108D0
	// succ:  l000108D0
l000108B4:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r3 = Mem0[r2:word32]
	r4 = r4 | 0x0000FFFF
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l000108D0
l000108D0:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l000108D0_ds_t
	// succ:  l000108D0_ds_f l000108D0_ds_t
l000108D0_ds_f:
	r3 = 0x0000F3F3
	goto l000108E8
	// succ:  l000108E8
l000108D0_ds_t:
	r3 = 0x0000F3F3
	goto l00010944
	// succ:  l00010944
l000108E8:
	r4 = 0x000001C2
	r6 = 0x0000FFFC
	r5 = Mem0[r4:word32]
	r3 = 0x00000001
	r5 = r5 & r6
	r3 = r3 | 0x00003718
	r6 = Mem0[r2 + 160:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 172:word32]
	r5 = r5 << 0x00000010
	r6 = r6 | r5
	r5 = Mem0[r2 + 168:word32]
	r5 = r5 << 0x00000008
	r6 = r6 | r5
	r5 = Mem0[r2 + 164:word32]
	r5 = r5 << 0x00000004
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010944
l00010944:
	r2 = 0x00000001
	r3 = r3 | 0x00003921
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000004
	F = r2 != 0x00000000
	branch F l00010944_ds_t
	// succ:  l00010944_ds_f l00010944_ds_t
l00010944_ds_f:
	r2 = 0x00000001
	goto l00010968
	// succ:  l00010968
l00010944_ds_t:
	r2 = 0x00000001
	goto l00010988
	// succ:  l00010988
l00010968:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000008
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010988
l00010988:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000004
	F = r3 == 0x00000000
	branch F l00010988_ds_t
	// succ:  l00010988_ds_f l00010988_ds_t
l00010988_ds_f:
	r3 = 0x0000F3F3
	goto l000109A0
	// succ:  l000109A0
l00010988_ds_t:
	r3 = 0x0000F3F3
	goto l00010A00
	// succ:  l00010A00
l000109A0:
	r4 = 0x000001C2
	r6 = 0x0000FFF0
	r4 = r4 | 0x00000008
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 192:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 204:word32]
	r5 = r5 << 0x00000012
	r6 = r6 | r5
	r5 = Mem0[r2 + 200:word32]
	r5 = r5 << 0x00000010
	r6 = r6 | r5
	r5 = Mem0[r2 + 196:word32]
	r5 = r5 << 0x00000008
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010A00
l00010A00:
	r2 = 0x00000001
	r3 = r3 | 0x00003922
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000008
	F = r2 != 0x00000000
	branch F l00010A00_ds_t
	// succ:  l00010A00_ds_f l00010A00_ds_t
l00010A00_ds_f:
	r2 = 0x00000001
	goto l00010A24
	// succ:  l00010A24
l00010A00_ds_t:
	r2 = 0x00000001
	goto l00010A44
	// succ:  l00010A44
l00010A24:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000010
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010A44
l00010A44:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000008
	F = r3 == 0x00000000
	branch F l00010A44_ds_t
	// succ:  l00010A44_ds_f l00010A44_ds_t
l00010A44_ds_f:
	r3 = 0x0000F3F3
	goto l00010A5C
	// succ:  l00010A5C
l00010A44_ds_t:
	r3 = 0x0000F3F3
	goto l00010AA4
	// succ:  l00010AA4
l00010A5C:
	r4 = 0x000001C2
	r6 = 0x00000000 - 32768
	CV = cond(r6)
	r4 = r4 | 0x00000010
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 208:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 212:word32]
	r5 = r5 << 0x00000008
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010AA4
l00010AA4:
	r2 = 0x00000001
	r3 = r3 | 0x00003923
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000010
	F = r2 != 0x00000000
	branch F l00010AA4_ds_t
	// succ:  l00010AA4_ds_f l00010AA4_ds_t
l00010AA4_ds_f:
	r2 = 0x00000001
	goto l00010AC8
	// succ:  l00010AC8
l00010AA4_ds_t:
	r2 = 0x00000001
	goto l00010AE8
	// succ:  l00010AE8
l00010AC8:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000018
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010AE8
l00010AE8:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000010
	F = r3 == 0x00000000
	branch F l00010AE8_ds_t
	// succ:  l00010AE8_ds_f l00010AE8_ds_t
l00010AE8_ds_f:
	r3 = 0x0000F3F3
	goto l00010B00
	// succ:  l00010B00
l00010AE8_ds_t:
	r3 = 0x0000F3F3
	goto l00010B48
	// succ:  l00010B48
l00010B00:
	r4 = 0x000001C2
	r6 = 0x00000000 - 32768
	CV = cond(r6)
	r4 = r4 | 0x00000018
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 224:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 228:word32]
	r5 = r5 << 0x00000008
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010B48
l00010B48:
	r2 = 0x00000001
	r3 = r3 | 0x00003924
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000020
	F = r2 != 0x00000000
	branch F l00010B48_ds_t
	// succ:  l00010B48_ds_f l00010B48_ds_t
l00010B48_ds_f:
	r2 = 0x00000001
	goto l00010B6C
	// succ:  l00010B6C
l00010B48_ds_t:
	r2 = 0x00000001
	goto l00010BA0
	// succ:  l00010BA0
l00010B6C:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000020
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r5 = 0x0000FFEF
	r3 = r3 & r4
	r5 = r5 | 0x0000FFFF
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 & r5
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010BA0
l00010BA0:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000020
	F = r3 == 0x00000000
	branch F l00010BA0_ds_t
	// succ:  l00010BA0_ds_f l00010BA0_ds_t
l00010BA0_ds_f:
	r3 = 0x0000F3F3
	goto l00010BB8
	// succ:  l00010BB8
l00010BA0_ds_t:
	r3 = 0x0000F3F3
	goto l00010C20
	// succ:  l00010C20
l00010BB8:
	r3 = 0x000001C2
	r6 = 0x00000000 - 8192
	CV = cond(r6)
	r3 = r3 | 0x00000020
	r4 = 0x00000001
	r5 = Mem0[r3:word32]
	r4 = r4 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 240:word32]
	Mem0[r4:word32] = r5
	r5 = Mem0[r4:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 248:word32]
	r5 = r5 << 0x00000008
	r6 = r6 | r5
	r5 = Mem0[r2 + 244:word32]
	r5 = r5 << 0x00000004
	r2 = r6 | r5
	r5 = 0x0000FFEF
	Mem0[r4:word32] = r2
	r5 = r5 | 0x0000FFFF
	r2 = Mem0[r3:word32]
	r2 = r2 & r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r4:word32]
	Mem0[r3:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010C20
l00010C20:
	r2 = 0x00000001
	r3 = r3 | 0x00003925
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000040
	F = r2 != 0x00000000
	branch F l00010C20_ds_t
	// succ:  l00010C20_ds_f l00010C20_ds_t
l00010C20_ds_f:
	r2 = 0x00000001
	goto l00010C44
	// succ:  l00010C44
l00010C20_ds_t:
	r2 = 0x00000001
	goto l00010C64
	// succ:  l00010C64
l00010C44:
	r2 = 0x000001C2
	r6 = 0x00007FFF
	r2 = r2 | 0x00000028
	r6 = r6 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r6
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010C64
l00010C64:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000040
	F = r3 == 0x00000000
	branch F l00010C64_ds_t
	// succ:  l00010C64_ds_f l00010C64_ds_t
l00010C64_ds_f:
	r3 = 0x0000F3F3
	goto l00010C7C
	// succ:  l00010C7C
l00010C64_ds_t:
	r3 = 0x0000F3F3
	goto l00010CD0
	// succ:  l00010CD0
l00010C7C:
	r4 = 0x000001C2
	r3 = 0x0000FFFF
	r4 = r4 | 0x00000028
	r6 = Mem0[r2 + 256:word32]
	r5 = Mem0[r4:word32]
	r5 = r5 & r3
	r3 = 0x00000001
	r3 = r3 | 0x00003718
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 264:word32]
	r5 = r5 << 0x00000008
	r6 = r6 | r5
	r5 = Mem0[r2 + 260:word32]
	r5 = r5 << 0x00000004
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010CD0
l00010CD0:
	r2 = 0x00000001
	r3 = r3 | 0x00003926
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000800
	F = r2 != 0x00000000
	branch F l00010CD0_ds_t
	// succ:  l00010CD0_ds_f l00010CD0_ds_t
l00010CD0_ds_f:
	r2 = 0x00000001
	goto l00010CF4
	// succ:  l00010CF4
l00010CD0_ds_t:
	r2 = 0x00000001
	goto l00010D14
	// succ:  l00010D14
l00010CF4:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x0000002C
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010D14
l00010D14:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000800
	F = r3 == 0x00000000
	branch F l00010D14_ds_t
	// succ:  l00010D14_ds_f l00010D14_ds_t
l00010D14_ds_f:
	r3 = 0x0000F3F3
	goto l00010D2C
	// succ:  l00010D2C
l00010D14_ds_t:
	r3 = 0x0000F3F3
	goto l00010D88
	// succ:  l00010D88
l00010D2C:
	r4 = 0x000001C2
	r6 = 0x0000FFFC
	r4 = r4 | 0x0000002C
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r7 = Mem0[r2 + 336:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r2 + 344:word32]
	r6 = Mem0[r3:word32]
	r6 = r6 | r7
	r7 = r5 << 0x00000010
	r5 = r5 << 0x00000008
	r6 = r6 | r7
	r6 = r6 | r5
	r5 = Mem0[r2 + 340:word32]
	r5 = r5 << 0x00000004
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010D88
l00010D88:
	r2 = 0x00000001
	r3 = r3 | 0x00003927
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000400
	F = r2 != 0x00000000
	branch F l00010D88_ds_t
	// succ:  l00010D88_ds_f l00010D88_ds_t
l00010D88_ds_f:
	r2 = 0x00000001
	goto l00010DAC
	// succ:  l00010DAC
l00010D88_ds_t:
	r2 = 0x00000001
	goto l00010DCC
	// succ:  l00010DCC
l00010DAC:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000030
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010DCC
l00010DCC:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000400
	F = r3 == 0x00000000
	branch F l00010DCC_ds_t
	// succ:  l00010DCC_ds_f l00010DCC_ds_t
l00010DCC_ds_f:
	r3 = 0x0000F3F3
	goto l00010DE4
	// succ:  l00010DE4
l00010DCC_ds_t:
	r3 = 0x0000F3F3
	goto l00010E2C
	// succ:  l00010E2C
l00010DE4:
	r4 = 0x000001C2
	r6 = 0x00000000 - 32768
	CV = cond(r6)
	r4 = r4 | 0x00000030
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 320:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 324:word32]
	r5 = r5 << 0x00000008
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010E2C
l00010E2C:
	r2 = 0x00000001
	r3 = r3 | 0x00003928
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000080
	F = r2 != 0x00000000
	branch F l00010E2C_ds_t
	// succ:  l00010E2C_ds_f l00010E2C_ds_t
l00010E2C_ds_f:
	r2 = 0x00000001
	goto l00010E50
	// succ:  l00010E50
l00010E2C_ds_t:
	r2 = 0x00000001
	goto l00010E70
	// succ:  l00010E70
l00010E50:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000038
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010E70
l00010E70:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000080
	F = r3 == 0x00000000
	branch F l00010E70_ds_t
	// succ:  l00010E70_ds_f l00010E70_ds_t
l00010E70_ds_f:
	r3 = 0x0000F3F3
	goto l00010E88
	// succ:  l00010E88
l00010E70_ds_t:
	r3 = 0x0000F3F3
	goto l00010ED0
	// succ:  l00010ED0
l00010E88:
	r4 = 0x000001C2
	r6 = 0x00000000 - 32768
	CV = cond(r6)
	r4 = r4 | 0x00000038
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 272:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 276:word32]
	r5 = r5 << 0x00000008
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010ED0
l00010ED0:
	r2 = 0x00000001
	r3 = r3 | 0x00003929
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00002000
	F = r2 != 0x00000000
	branch F l00010ED0_ds_t
	// succ:  l00010ED0_ds_f l00010ED0_ds_t
l00010ED0_ds_f:
	r2 = 0x00000001
	goto l00010EF4
	// succ:  l00010EF4
l00010ED0_ds_t:
	r2 = 0x00000001
	goto l00010F14
	// succ:  l00010F14
l00010EF4:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000040
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010F14
l00010F14:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00002000
	F = r3 == 0x00000000
	branch F l00010F14_ds_t
	// succ:  l00010F14_ds_f l00010F14_ds_t
l00010F14_ds_f:
	r3 = 0x0000F3F3
	goto l00010F2C
	// succ:  l00010F2C
l00010F14_ds_t:
	r3 = 0x0000F3F3
	goto l00010F80
	// succ:  l00010F80
l00010F2C:
	r4 = 0x000001C2
	r6 = 0x00000000 - 4096
	CV = cond(r6)
	r4 = r4 | 0x00000040
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 368:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 376:word32]
	r5 = r5 << 0x00000008
	r6 = r6 | r5
	r5 = Mem0[r2 + 372:word32]
	r5 = r5 << 0x00000004
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00010F80
l00010F80:
	r2 = 0x00000001
	r3 = r3 | 0x0000392A
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000100
	F = r2 != 0x00000000
	branch F l00010F80_ds_t
	// succ:  l00010F80_ds_f l00010F80_ds_t
l00010F80_ds_f:
	r2 = 0x00000001
	goto l00010FA4
	// succ:  l00010FA4
l00010F80_ds_t:
	r2 = 0x00000001
	goto l00010FC4
	// succ:  l00010FC4
l00010FA4:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000044
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00010FC4
l00010FC4:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000100
	F = r3 == 0x00000000
	branch F l00010FC4_ds_t
	// succ:  l00010FC4_ds_f l00010FC4_ds_t
l00010FC4_ds_f:
	r3 = 0x0000F3F3
	goto l00010FDC
	// succ:  l00010FDC
l00010FC4_ds_t:
	r3 = 0x0000F3F3
	goto l00011024
	// succ:  l00011024
l00010FDC:
	r4 = 0x000001C2
	r6 = 0x00000000 - 32768
	CV = cond(r6)
	r4 = r4 | 0x00000044
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 288:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 292:word32]
	r5 = r5 << 0x00000008
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00011024
l00011024:
	r2 = 0x00000001
	r3 = r3 | 0x0000392B
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00000200
	F = r2 != 0x00000000
	branch F l00011024_ds_t
	// succ:  l00011024_ds_f l00011024_ds_t
l00011024_ds_f:
	r2 = 0x00000001
	goto l00011048
	// succ:  l00011048
l00011024_ds_t:
	r2 = 0x00000001
	goto l00011068
	// succ:  l00011068
l00011048:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x00000048
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011068
l00011068:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00000200
	F = r3 == 0x00000000
	branch F l00011068_ds_t
	// succ:  l00011068_ds_f l00011068_ds_t
l00011068_ds_f:
	r3 = 0x0000F3F3
	goto l00011080
	// succ:  l00011080
l00011068_ds_t:
	r3 = 0x0000F3F3
	goto l000110C8
	// succ:  l000110C8
l00011080:
	r4 = 0x000001C2
	r6 = 0x00000000 - 32768
	CV = cond(r6)
	r4 = r4 | 0x00000048
	r3 = 0x00000001
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 304:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r3:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 308:word32]
	r5 = r5 << 0x00000008
	r2 = r6 | r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r3:word32]
	Mem0[r4:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l000110C8
l000110C8:
	r2 = 0x00000001
	r3 = r3 | 0x0000392C
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 148:word32]
	r2 = r2 & 0x00001000
	F = r2 != 0x00000000
	branch F l000110C8_ds_t
	// succ:  l000110C8_ds_f l000110C8_ds_t
l000110C8_ds_f:
	r2 = 0x00000001
	goto l000110EC
	// succ:  l000110EC
l000110C8_ds_t:
	r2 = 0x00000001
	goto l00011120
	// succ:  l00011120
l000110EC:
	r2 = 0x000001C2
	r4 = 0x00007FFF
	r2 = r2 | 0x0000004C
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r5 = 0x0000BFFF
	r3 = r3 & r4
	r5 = r5 | 0x0000FFFF
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 & r5
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011120
l00011120:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 156:word32]
	r3 = r3 & 0x00001000
	F = r3 == 0x00000000
	branch F l00011120_ds_t
	// succ:  l00011120_ds_f l00011120_ds_t
l00011120_ds_f:
	r3 = 0x0000F3F3
	goto l00011138
	// succ:  l00011138
l00011120_ds_t:
	r3 = 0x0000F3F3
	goto l00011194
	// succ:  l00011194
l00011138:
	r3 = 0x000001C2
	r6 = 0x00000000 - 32768
	CV = cond(r6)
	r3 = r3 | 0x0000004C
	r4 = 0x00000001
	r5 = Mem0[r3:word32]
	r4 = r4 | 0x00003718
	r5 = r5 & r6
	r6 = Mem0[r2 + 352:word32]
	Mem0[r4:word32] = r5
	r5 = Mem0[r4:word32]
	r6 = r5 | r6
	r5 = Mem0[r2 + 356:word32]
	r5 = r5 << 0x00000008
	r2 = r6 | r5
	r5 = 0x0000BFFF
	Mem0[r4:word32] = r2
	r5 = r5 | 0x0000FFFF
	r2 = Mem0[r3:word32]
	r2 = r2 & r5
	Mem0[r3:word32] = r2
	r2 = Mem0[r4:word32]
	Mem0[r3:word32] = r2
	r3 = 0x0000F3F3
	// succ:  l00011194
l00011194:
	r2 = 0x00000001
	r3 = r3 | 0x00003093
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r3 = Mem0[r2 + 384:word32]
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l00011194_ds_t
	// succ:  l00011194_ds_f l00011194_ds_t
l00011194_ds_f:
	r3 = 0x00000000 + -4
	CV = cond(r3)
	goto l000111B8
	// succ:  l000111B8
l00011194_ds_t:
	r3 = 0x00000000 + -4
	CV = cond(r3)
	goto l000111C0
	// succ:  l000111C0
l000111B8:
	r4 = Mem0[r2 + 388:word32]
	call fn0000B610 (retsize: 0;)
l000111C0:
	r2 = 0x00000001
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 384:word32]
	r3 = r3 & 0x00000004
	F = r3 == 0x00000000
	branch F l000111C0_ds_t
	// succ:  l000111C0_ds_f l000111C0_ds_t
l000111C0_ds_f:
	r3 = 0x00000000 + -20
	CV = cond(r3)
	goto l000111DC
	// succ:  l000111DC
l000111C0_ds_t:
	r3 = 0x00000000 + -20
	CV = cond(r3)
	goto l000111E4
	// succ:  l000111E4
l000111DC:
	r4 = Mem0[r2 + 436:word32]
	call fn0000B0B8 (retsize: 0;)
l000111E4:
	r2 = 0x00000001
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 384:word32]
	r3 = r3 & 0x00000010
	F = r3 == 0x00000000
	branch F l000111E4_ds_t
	// succ:  l000111E4_ds_f l000111E4_ds_t
l000111E4_ds_f:
	goto l00011200
	// succ:  l00011200
l000111E4_ds_t:
	goto l000112D4
	// succ:  l000112D4
l00011200:
	r4 = Mem0[r2 + 468:word32]
	r3 = r4 ^ 0x00000003
	r5 = 0x00000000 - r3
	CV = cond(r5)
	r3 = r5 | r3
	F = r3 >= 0
	branch F l00011200_ds_t
	// succ:  l00011200_ds_f l00011200_ds_t
l00011200_ds_f:
	r3 = r4 ^ 0x00000001
	goto l0001121C
	// succ:  l0001121C
l00011200_ds_t:
	r3 = r4 ^ 0x00000001
	goto l00011230
	// succ:  l00011230
l0001121C:
	r5 = 0x00000000 - r3
	CV = cond(r5)
	r3 = r5 | r3
	F = r3 < 0
	branch F l0001121C_ds_t
	// succ:  l0001121C_ds_f l0001121C_ds_t
l0001121C_ds_f:
	F = r4 != 0x0000000B
	goto l00011230
	// succ:  l00011230
l0001121C_ds_t:
	F = r4 != 0x0000000B
	goto l00011280
	// succ:  l00011280
l00011230:
	r3 = 0x00000000 + -10
	CV = cond(r3)
	r2 = 0x000001C2
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r2 | 0x00000054
	call fn0000C768 (retsize: 0;)
	r4 = 0x00000001
	r3 = Mem0[r2:word32]
	r4 = r4 | 0x000034E4
	r6 = 0x00000000 - 49
	CV = cond(r6)
	r4 = Mem0[r4 + 476:word32]
	r3 = r3 & r6
	r4 = r4 << 0x00000004
	r3 = r4 | r3
	r4 = 0x00000001
	r4 = r4 | 0x00003714
	Mem0[r4:word32] = r3
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	goto l000112D8
	// succ:  l000112D8
l00011280:
	branch F l00011280_ds_t
	// succ:  l00011280_ds_f l00011280_ds_t
l00011280_ds_f:
	r3 = 0x000001C2
	goto l00011288
	// succ:  l00011288
l00011280_ds_t:
	r3 = 0x000001C2
	goto l000112D4
	// succ:  l000112D4
l00011288:
	r6 = Mem0[r2 + 476:word32]
	r4 = Mem0[r2 + 472:word32]
	r6 = r6 << 0x00000004
	r4 = r4 << 0x00000006
	r3 = r3 | 0x00000054
	r4 = r6 | r4
	r5 = Mem0[r3:word32]
	r6 = 0x00000000 - 241
	CV = cond(r6)
	r5 = r5 & r6
	r4 = r4 | r5
	r5 = 0x00000001
	r5 = r5 | 0x00003714
	Mem0[r5:word32] = r4
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = 0x00000000 + -10
	CV = cond(r3)
	r4 = Mem0[r2 + 468:word32]
	call fn0000B610 (retsize: 0;)
l000112D4:
	r2 = 0x00000001
	// succ:  l000112D8
l000112D8:
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 384:word32]
	r3 = r3 & 0x00000020
	F = r3 == 0x00000000
	branch F l000112D8_ds_t
	// succ:  l000112D8_ds_f l000112D8_ds_t
l000112D8_ds_f:
	r3 = 0x00000000 + -11
	CV = cond(r3)
	goto l000112F0
	// succ:  l000112F0
l000112D8_ds_t:
	r3 = 0x00000000 + -11
	CV = cond(r3)
	goto l000112F8
	// succ:  l000112F8
l000112F0:
	r4 = Mem0[r2 + 488:word32]
	call fn0000B610 (retsize: 0;)
l000112F8:
	r2 = 0x00000001
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 384:word32]
	r3 = r3 & 0x00000040
	F = r3 == 0x00000000
	branch F l000112F8_ds_t
	// succ:  l000112F8_ds_f l000112F8_ds_t
l000112F8_ds_f:
	r3 = 0x000001C2
	goto l00011314
	// succ:  l00011314
l000112F8_ds_t:
	r3 = 0x000001C2
	goto l00011340
	// succ:  l00011340
l00011314:
	r4 = Mem0[r2 + 516:word32]
	r3 = r3 | 0x00000054
	r6 = 0x00000000 - 769
	CV = cond(r6)
	r5 = Mem0[r3:word32]
	r4 = r4 << 0x00000008
	r2 = r5 & r6
	r2 = r4 | r2
	r4 = 0x00000001
	r4 = r4 | 0x00003714
	Mem0[r4:word32] = r2
	Mem0[r3:word32] = r2
	// succ:  l00011340
l00011340:
	r2 = 0x00000001
	r2 = r2 | 0x000034E4
	r3 = Mem0[r2 + 384:word32]
	r3 = r3 & 0x00000080
	F = r3 == 0x00000000
	branch F l00011340_ds_t
	// succ:  l00011340_ds_f l00011340_ds_t
l00011340_ds_f:
	goto l0001135C
	// succ:  l0001135C
l00011340_ds_t:
	goto l000113A0
	// succ:  l000113A0
l0001135C:
	r4 = Mem0[r2 + 528:word32]
	r3 = 0x00000000 + -13
	CV = cond(r3)
	call fn0000B610 (retsize: 0;)
	r3 = 0x000001C2
	r4 = 0x0000FFFC
	r3 = r3 | 0x00000058
	r5 = Mem0[r3:word32]
	r5 = r5 & r4
	r4 = Mem0[r2 + 544:word32]
	r5 = r5 | r4
	r4 = Mem0[r2 + 540:word32]
	r4 = r4 << 0x00000010
	r2 = r5 | r4
	r4 = 0x00000001
	r4 = r4 | 0x00003714
	Mem0[r4:word32] = r2
	Mem0[r3:word32] = r2
	// succ:  l000113A0
l000113A0:
	r2 = 0x00000001
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 144:word32]
	r3 = r2 & 0x00000008
	F = r3 != 0x00000000
	branch F l000113A0_ds_t
	// succ:  l000113A0_ds_f l000113A0_ds_t
l000113A0_ds_f:
	r4 = 0x00000000 + -2
	CV = cond(r4)
	goto l000113BC
	// succ:  l000113BC
l000113A0_ds_t:
	r4 = 0x00000000 + -2
	CV = cond(r4)
	goto l000113DC
	// succ:  l000113DC
l000113BC:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	call fn0000BAC8 (retsize: 0;)
	r3 = 0x0000F3F3
	goto l00011430
	// succ:  l00011430
l000113DC:
	r2 = r2 & 0x00000003
	F = r2 != 0x00000000
	branch F l000113DC_ds_t
	// succ:  l000113DC_ds_f l000113DC_ds_t
l000113DC_ds_f:
	r5 = 0x0000A700
	goto l000113EC
	// succ:  l000113EC
l000113DC_ds_t:
	r5 = 0x0000A700
	goto l0001142C
	// succ:  l0001142C
l000113EC:
	r2 = 0x000001F0
	r2 = r2 | 0x00001444
	r6 = 0x00000000 - 4
	CV = cond(r6)
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	r3 = r3 & r6
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	Mem0[r2:word32] = r3
	// succ:  l0001142C
l0001142C:
	r3 = 0x0000F3F3
	// succ:  l00011430
l00011430:
	r2 = 0x00000001
	r3 = r3 | 0x0000300A
	r2 = r2 | 0x000034D4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2:word32]
	r2 = r2 & 0x00000010
	F = r2 != 0x00000000
	branch F l00011430_ds_t
	// succ:  l00011430_ds_f l00011430_ds_t
l00011430_ds_f:
	r2 = 0x00000001
	goto l00011454
	// succ:  l00011454
l00011430_ds_t:
	r2 = 0x00000001
	goto l00011470
	// succ:  l00011470
l00011454:
	r3 = 0x00000000 + -11
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B950 (retsize: 0;)
	r3 = 0x00000000 + -12
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B950 (retsize: 0;)
	r2 = 0x00000001
	// succ:  l00011470
l00011470:
	r2 = r2 | 0x000034D4
	r2 = Mem0[r2:word32]
	r2 = r2 & 0x00000008
	F = r2 != 0x00000000
	branch F l00011470_ds_t
	// succ:  l00011470_ds_f l00011470_ds_t
l00011470_ds_f:
	r2 = 0x00000001
	goto l00011488
	// succ:  l00011488
l00011470_ds_t:
	r2 = 0x00000001
	goto l00011498
	// succ:  l00011498
l00011488:
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B950 (retsize: 0;)
	r2 = 0x00000001
	// succ:  l00011498
l00011498:
	r2 = r2 | 0x000034D4
	r4 = Mem0[r2:word32]
	r4 = r4 & 0x00000010
	F = r4 != 0x00000000
	branch F l00011498_ds_t
	// succ:  l00011498_ds_f l00011498_ds_t
l00011498_ds_f:
	goto l000114B0
	// succ:  l000114B0
l00011498_ds_t:
	goto l000114B8
	// succ:  l000114B8
l000114B0:
	r3 = 0x00000000 + -33
	CV = cond(r3)
	call fn0000BC38 (retsize: 0;)
l000114B8:
	r2 = 0x0000F3F3
	r3 = r2 | 0x0000300B
	call fn0000AEDC (retsize: 0;)
	call fn000101A8 (retsize: 0;)
	r3 = r2 | 0x0000300C
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00000001
	r4 = 0x00000000 + 0
	CV = cond(r4)
	r3 = r3 | 0x000034DC
	Mem0[r3:word32] = r4
	r3 = r2 | 0x00004000
	call fn0000AEDC (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x0000242A
	call fn0000EDF4 (retsize: 0;)
	r3 = r2 | 0x00005000
	r2 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r2 = r2 | 0x000034E0
	r5 = 0x00000000 + 0
	CV = cond(r5)
	Mem0[r2:word32] = r5
	r2 = r5 | 0x00000000
	r6 = 0x00003087
	goto l0001151C
	// succ:  l0001151C
l000114B8_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l00011534
	// succ:  l00011534
l000114B8_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l0001156C
	// succ:  l0001156C
l0001151C:
	r3 = Mem0[r1 + 4:word32]
	r6 = r6 | 0x0000F000
	r3 = r3 & r6
	F = r3 == 0x00000000
	branch F l000114B8_ds_t
	goto l000114B8_ds_f
	// succ:  l000114B8_ds_f l000114B8_ds_t
l00011534:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00011534_ds_t
	// succ:  l00011534_ds_f l00011534_ds_t
l00011534_ds_f:
	goto l00011548
	// succ:  l00011548
l00011534_ds_t:
	goto l00011568
	// succ:  l00011568
l00011548:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008CA4 (retsize: 0;)
	r3 = 0x00000001
	r3 = r3 | 0x000034E0
	call fn0000A22C (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00011548_ds_t
	// succ:  l00011548_ds_f l00011548_ds_t
l00011548_ds_f:
	goto l00011568
	// succ:  l00011568
l00011548_ds_t:
	goto l00011734
	// succ:  l00011734
l00011568:
	r3 = Mem0[r1 + 4:word32]
	// succ:  l0001156C
l0001156C:
	r4 = 0x00000080
	r3 = r3 & r4
	F = r3 == 0x00000000
	branch F l0001156C_ds_t
	// succ:  l0001156C_ds_f l0001156C_ds_t
l0001156C_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l00011580
	// succ:  l00011580
l0001156C_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l000115DC
	// succ:  l000115DC
l00011580:
	r3 = 0x00000000 + -13
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 != 0x00000000
	branch F l00011580_ds_t
	// succ:  l00011580_ds_f l00011580_ds_t
l00011580_ds_f:
	r4 = Mem0[r1 + 24:word32]
	goto l00011594
	// succ:  l00011594
l00011580_ds_t:
	r4 = Mem0[r1 + 24:word32]
	goto l000115C0
	// succ:  l000115C0
l00011594:
	r3 = 0x00000000 + -20
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 != 0x00000000
	branch F l00011594_ds_t
	// succ:  l00011594_ds_f l00011594_ds_t
l00011594_ds_f:
	r4 = Mem0[r1 + 24:word32]
	goto l000115A8
	// succ:  l000115A8
l00011594_ds_t:
	r4 = Mem0[r1 + 24:word32]
	goto l000115C0
	// succ:  l000115C0
l000115A8:
	r3 = 0x00000000 + -21
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l000115A8_ds_t
	// succ:  l000115A8_ds_f l000115A8_ds_t
l000115A8_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l000115BC
	// succ:  l000115BC
l000115A8_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l000115DC
	// succ:  l000115DC
l000115BC:
	r4 = Mem0[r1 + 24:word32]
	// succ:  l000115C0
l000115C0:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = r4 & 0x00000FFF
	call fn00009958 (retsize: 0;)
	F = r11 == 0x00000000
	branch !F l000115C0_ds_t
	// succ:  l000115C0_ds_f l000115C0_ds_t
l000115C0_ds_f:
	r3 = 0x00000080
	goto l000115D8
	// succ:  l000115D8
l000115C0_ds_t:
	r3 = 0x00000080
	goto l00011728
	// succ:  l00011728
l000115D8:
	r3 = Mem0[r1 + 4:word32]
	// succ:  l000115DC
l000115DC:
	r5 = 0x00000008
	r3 = r3 & r5
	F = r3 == 0x00000000
	branch F l000115DC_ds_t
	// succ:  l000115DC_ds_f l000115DC_ds_t
l000115DC_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l000115F0
	// succ:  l000115F0
l000115DC_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l00011624
	// succ:  l00011624
l000115F0:
	r3 = 0x00000000 + -5
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l000115F0_ds_t
	// succ:  l000115F0_ds_f l000115F0_ds_t
l000115F0_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l00011604
	// succ:  l00011604
l000115F0_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l00011624
	// succ:  l00011624
l00011604:
	r3 = 0x00000000 + -5
	CV = cond(r3)
	call fn00008CA4 (retsize: 0;)
	call fn000092CC (retsize: 0;)
	F = r11 != 0x00000001
	branch !F l00011604_ds_t
	// succ:  l00011604_ds_f l00011604_ds_t
l00011604_ds_f:
	r3 = 0x00000008
	goto l00011620
	// succ:  l00011620
l00011604_ds_t:
	r3 = 0x00000008
	goto l00011728
	// succ:  l00011728
l00011620:
	r3 = Mem0[r1 + 4:word32]
	// succ:  l00011624
l00011624:
	r6 = 0x00000010
	r3 = r3 & r6
	F = r3 == 0x00000000
	branch F l00011624_ds_t
	// succ:  l00011624_ds_f l00011624_ds_t
l00011624_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l00011638
	// succ:  l00011638
l00011624_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l00011650
	// succ:  l00011650
l00011638:
	r3 = 0x00000000 + -8
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch !F l00011638_ds_t
	// succ:  l00011638_ds_f l00011638_ds_t
l00011638_ds_f:
	r3 = 0x00000010
	goto l0001164C
	// succ:  l0001164C
l00011638_ds_t:
	r3 = 0x00000010
	goto l00011728
	// succ:  l00011728
l0001164C:
	r3 = Mem0[r1 + 4:word32]
	// succ:  l00011650
l00011650:
	r4 = 0x00000020
	r3 = r3 & r4
	F = r3 == 0x00000000
	branch F l00011650_ds_t
	// succ:  l00011650_ds_f l00011650_ds_t
l00011650_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l00011664
	// succ:  l00011664
l00011650_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l0001167C
	// succ:  l0001167C
l00011664:
	r3 = 0x00000000 + -9
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch !F l00011664_ds_t
	// succ:  l00011664_ds_f l00011664_ds_t
l00011664_ds_f:
	r3 = 0x00000020
	goto l00011678
	// succ:  l00011678
l00011664_ds_t:
	r3 = 0x00000020
	goto l00011728
	// succ:  l00011728
l00011678:
	r3 = Mem0[r1 + 4:word32]
	// succ:  l0001167C
l0001167C:
	r5 = 0x00000040
	r3 = r3 & r5
	F = r3 == 0x00000000
	branch F l0001167C_ds_t
	// succ:  l0001167C_ds_f l0001167C_ds_t
l0001167C_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l00011690
	// succ:  l00011690
l0001167C_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l000116BC
	// succ:  l000116BC
l00011690:
	r3 = Mem0[r1 + 20:word32]
	F = r2 >=u r3
	branch F l00011690_ds_t
	// succ:  l00011690_ds_f l00011690_ds_t
l00011690_ds_f:
	goto l000116A0
	// succ:  l000116A0
l00011690_ds_t:
	goto l000116B4
	// succ:  l000116B4
l000116A0:
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r2 + -1
	CV = cond(r2)
	call fn0000C768 (retsize: 0;)
	r3 = Mem0[r1 + 4:word32]
	goto l000116BC
	// succ:  l000116BC
l000116B4:
	r3 = 0x00000040
	goto l00011728
	// succ:  l00011728
l000116BC:
	r6 = 0x00000100
	r3 = r3 & r6
	F = r3 == 0x00000000
	branch F l000116BC_ds_t
	// succ:  l000116BC_ds_f l000116BC_ds_t
l000116BC_ds_f:
	r3 = Mem0[r1 + 4:word32]
	goto l000116D0
	// succ:  l000116D0
l000116BC_ds_t:
	r3 = Mem0[r1 + 4:word32]
	goto l000116FC
	// succ:  l000116FC
l000116D0:
	r3 = 0x00000000 + -27
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 != 0x00000000
	branch F l000116D0_ds_t
	// succ:  l000116D0_ds_f l000116D0_ds_t
l000116D0_ds_f:
	r3 = 0x00000100
	goto l000116E4
	// succ:  l000116E4
l000116D0_ds_t:
	r3 = 0x00000100
	goto l00011728
	// succ:  l00011728
l000116E4:
	r3 = 0x00000000 + -28
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch !F l000116E4_ds_t
	// succ:  l000116E4_ds_f l000116E4_ds_t
l000116E4_ds_f:
	r3 = 0x00000100
	goto l000116F8
	// succ:  l000116F8
l000116E4_ds_t:
	r3 = 0x00000100
	goto l00011728
	// succ:  l00011728
l000116F8:
	r3 = Mem0[r1 + 4:word32]
	// succ:  l000116FC
l000116FC:
	r4 = 0x00000A00
	r3 = r3 & r4
	F = r3 == 0x00000000
	branch F l000116FC_ds_t
	// succ:  l000116FC_ds_f l000116FC_ds_t
l000116FC_ds_f:
	r6 = 0x00003087
	goto l00011710
	// succ:  l00011710
l000116FC_ds_t:
	r6 = 0x00003087
	goto l0001151C
	// succ:  l0001151C
l00011710:
	r3 = 0x00000000 + -22
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00011710_ds_t
	// succ:  l00011710_ds_f l00011710_ds_t
l00011710_ds_f:
	r6 = 0x00003087
	goto l00011724
	// succ:  l00011724
l00011710_ds_t:
	r6 = 0x00003087
	goto l0001151C
	// succ:  l0001151C
l00011724:
	r3 = 0x00000A00
	// succ:  l00011728
l00011728:
	r2 = 0x00000001
	r2 = r2 | 0x000034E0
	Mem0[r2:word32] = r3
	// succ:  l00011734
l00011734:
	r2 = 0x0000F3F3
	r3 = r2 | 0x00006000
	call fn0000AEDC (retsize: 0;)
	r3 = r2 | 0x00007001
	call fn0000AEDC (retsize: 0;)
	call fn000103C0 (retsize: 0;)
	r3 = r2 | 0x00007002
	r2 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r2 = r2 | 0x000034D4
	r2 = Mem0[r2:word32]
	r2 = r2 & 0x00000010
	F = r2 != 0x00000000
	branch F l00011734_ds_t
	// succ:  l00011734_ds_f l00011734_ds_t
l00011734_ds_f:
	r3 = 0x00000000 + -11
	CV = cond(r3)
	goto l00011774
	// succ:  l00011774
l00011734_ds_t:
	r3 = 0x00000000 + -11
	CV = cond(r3)
	goto l00011788
	// succ:  l00011788
l00011774:
	r4 = r2 | 0x00000000
	call fn0000B950 (retsize: 0;)
	r3 = 0x00000000 + -12
	CV = cond(r3)
	r4 = r2 | 0x00000000
	call fn0000B950 (retsize: 0;)
l00011788:
	r2 = 0x00000001
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r2 | 0x000034D4
	call fn0000C768 (retsize: 0;)
	r2 = Mem0[r2:word32]
	r2 = r2 & 0x00000010
	F = r2 != 0x00000000
	branch F l00011788_ds_t
	// succ:  l00011788_ds_f l00011788_ds_t
l00011788_ds_f:
	r3 = 0x00000000 + -33
	CV = cond(r3)
	goto l000117AC
	// succ:  l000117AC
l00011788_ds_t:
	r3 = 0x00000000 + -33
	CV = cond(r3)
	goto l000117BC
	// succ:  l000117BC
l000117AC:
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000BC38 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
l000117BC:
	r3 = 0x0000F3F3
	r2 = 0x00000001
	r3 = r3 | 0x00007003
	r2 = r2 | 0x000034E4
	call fn0000AEDC (retsize: 0;)
	r2 = Mem0[r2 + 144:word32]
	r3 = r2 & 0x00000008
	F = r3 != 0x00000000
	branch F l000117BC_ds_t
	// succ:  l000117BC_ds_f l000117BC_ds_t
l000117BC_ds_f:
	goto l000117E4
	// succ:  l000117E4
l000117BC_ds_t:
	goto l00011808
	// succ:  l00011808
l000117E4:
	r2 = 0x00000001
	call fn0000BB60 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = 0x00000000 + -3
	CV = cond(r4)
	call fn0000B610 (retsize: 0;)
	r2 = r2 | 0x000034E4
	goto l000118B8
	// succ:  l000118B8
l00011808:
	r2 = r2 & 0x00000003
	F = r2 != 0x00000000
	branch F l00011808_ds_t
	// succ:  l00011808_ds_f l00011808_ds_t
l00011808_ds_f:
	r2 = 0x00000001
	goto l00011818
	// succ:  l00011818
l00011808_ds_t:
	r2 = 0x00000001
	goto l000118B4
	// succ:  l000118B4
l00011818:
	r2 = 0x000001F0
	r5 = 0x0000A700
	r2 = r2 | 0x00001444
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	r3 = r3 | 0x00000001
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -2
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r6 = 0x0000A700
	r4 = 0x0000FFF8
	r3 = r3 | r6
	r4 = r4 | 0x0000FFFF
	Mem0[r1 + 36:word32] = r3
	r5 = 0x00000004
	r3 = Mem0[r1 + 36:word32]
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r6
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	r3 = r3 & r4
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	r3 = r3 | r5
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l000118B4
l000118B4:
	r2 = r2 | 0x000034E4
	// succ:  l000118B8
l000118B8:
	r2 = Mem0[r2 + 384:word32]
	r2 = r2 & 0x00000005
	F = r2 == 0x00000000
	branch F l000118B8_ds_t
	// succ:  l000118B8_ds_f l000118B8_ds_t
l000118B8_ds_f:
	r2 = 0x00000001
	goto l000118CC
	// succ:  l000118CC
l000118B8_ds_t:
	r2 = 0x00000001
	goto l000118F0
	// succ:  l000118F0
l000118CC:
	r4 = 0x00000000 + -3
	CV = cond(r4)
	r3 = 0x00000000 + -4
	CV = cond(r3)
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = 0x00000000 + -20
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	call fn0000B0B8 (retsize: 0;)
	r2 = 0x00000001
	// succ:  l000118F0
l000118F0:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 384:word32]
	r2 = r2 & 0x00000050
	F = r2 == 0x00000000
	branch F l000118F0_ds_t
	// succ:  l000118F0_ds_f l000118F0_ds_t
l000118F0_ds_f:
	r4 = 0x00000000 + -3
	CV = cond(r4)
	goto l00011908
	// succ:  l00011908
l000118F0_ds_t:
	r4 = 0x00000000 + -3
	CV = cond(r4)
	goto l00011944
	// succ:  l00011944
l00011908:
	r3 = 0x00000000 + -10
	CV = cond(r3)
	r2 = 0x000001C2
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r2 | 0x00000054
	call fn0000C768 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r6 = 0x00000000 - 4096
	CV = cond(r6)
	r3 = r3 & r6
	r3 = r3 | 0x00000010
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
l00011944:
	r2 = 0x00000001
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 384:word32]
	r2 = r2 & 0x00000020
	F = r2 == 0x00000000
	branch F l00011944_ds_t
	// succ:  l00011944_ds_f l00011944_ds_t
l00011944_ds_f:
	r2 = 0x00000001
	goto l00011960
	// succ:  l00011960
l00011944_ds_t:
	r2 = 0x00000001
	goto l00011970
	// succ:  l00011970
l00011960:
	r3 = 0x00000000 + -11
	CV = cond(r3)
	r4 = 0x00000000 + -23
	CV = cond(r4)
	call fn0000B610 (retsize: 0;)
	r2 = 0x00000001
	// succ:  l00011970
l00011970:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 384:word32]
	r2 = r2 & 0x00000080
	F = r2 == 0x00000000
	branch F l00011970_ds_t
	// succ:  l00011970_ds_f l00011970_ds_t
l00011970_ds_f:
	r4 = 0x00000000 + -3
	CV = cond(r4)
	goto l00011988
	// succ:  l00011988
l00011970_ds_t:
	r4 = 0x00000000 + -3
	CV = cond(r4)
	goto l000119B8
	// succ:  l000119B8
l00011988:
	r3 = 0x00000000 + -13
	CV = cond(r3)
	r2 = 0x000001C2
	call fn0000B610 (retsize: 0;)
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r2 = r2 | 0x00000058
	call fn0000C768 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = 0x0000FF00
	r3 = r3 & r4
	Mem0[r1 + 36:word32] = r3
	r3 = Mem0[r1 + 36:word32]
	Mem0[r2:word32] = r3
	// succ:  l000119B8
l000119B8:
	r2 = 0x00000001
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000001
	F = r2 == 0x00000000
	branch F l000119B8_ds_t
	// succ:  l000119B8_ds_f l000119B8_ds_t
l000119B8_ds_f:
	r2 = 0x00000001
	goto l000119D4
	// succ:  l000119D4
l000119B8_ds_t:
	r2 = 0x00000001
	goto l000119E4
	// succ:  l000119E4
l000119D4:
	r3 = 0x00000000 + -4096
	CV = cond(r3)
	r2 = 0x000001C2
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l000119E4
l000119E4:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000001
	F = r2 == 0x00000000
	branch F l000119E4_ds_t
	// succ:  l000119E4_ds_f l000119E4_ds_t
l000119E4_ds_f:
	r2 = 0x00000001
	goto l000119FC
	// succ:  l000119FC
l000119E4_ds_t:
	r2 = 0x00000001
	goto l00011A14
	// succ:  l00011A14
l000119FC:
	r2 = 0x000001C2
	r5 = 0x00008000
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011A14
l00011A14:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000004
	F = r2 == 0x00000000
	branch F l00011A14_ds_t
	// succ:  l00011A14_ds_f l00011A14_ds_t
l00011A14_ds_f:
	r2 = 0x00000001
	goto l00011A2C
	// succ:  l00011A2C
l00011A14_ds_t:
	r2 = 0x00000001
	goto l00011A44
	// succ:  l00011A44
l00011A2C:
	r3 = 0x00000003
	r2 = 0x000001C2
	r3 = r3 | 0x00005514
	r2 = r2 | 0x00000008
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011A44
l00011A44:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000004
	F = r2 == 0x00000000
	branch F l00011A44_ds_t
	// succ:  l00011A44_ds_f l00011A44_ds_t
l00011A44_ds_f:
	r2 = 0x00000001
	goto l00011A5C
	// succ:  l00011A5C
l00011A44_ds_t:
	r2 = 0x00000001
	goto l00011A78
	// succ:  l00011A78
l00011A5C:
	r2 = 0x000001C2
	r6 = 0x00008000
	r2 = r2 | 0x00000008
	r3 = Mem0[r2:word32]
	r3 = r3 | r6
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011A78
l00011A78:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000008
	F = r2 == 0x00000000
	branch F l00011A78_ds_t
	// succ:  l00011A78_ds_f l00011A78_ds_t
l00011A78_ds_f:
	r2 = 0x00000001
	goto l00011A90
	// succ:  l00011A90
l00011A78_ds_t:
	r2 = 0x00000001
	goto l00011AA8
	// succ:  l00011AA8
l00011A90:
	r3 = 0x00000300
	r2 = 0x000001C2
	r3 = r3 | 0x00006207
	r2 = r2 | 0x00000010
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011AA8
l00011AA8:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000008
	F = r2 == 0x00000000
	branch F l00011AA8_ds_t
	// succ:  l00011AA8_ds_f l00011AA8_ds_t
l00011AA8_ds_f:
	r2 = 0x00000001
	goto l00011AC0
	// succ:  l00011AC0
l00011AA8_ds_t:
	r2 = 0x00000001
	goto l00011ADC
	// succ:  l00011ADC
l00011AC0:
	r2 = 0x000001C2
	r4 = 0x00008000
	r2 = r2 | 0x00000010
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011ADC
l00011ADC:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000010
	F = r2 == 0x00000000
	branch F l00011ADC_ds_t
	// succ:  l00011ADC_ds_f l00011ADC_ds_t
l00011ADC_ds_f:
	r2 = 0x00000001
	goto l00011AF4
	// succ:  l00011AF4
l00011ADC_ds_t:
	r2 = 0x00000001
	goto l00011B0C
	// succ:  l00011B0C
l00011AF4:
	r3 = 0x00000300
	r2 = 0x000001C2
	r3 = r3 | 0x00006207
	r2 = r2 | 0x00000018
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011B0C
l00011B0C:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000010
	F = r2 == 0x00000000
	branch F l00011B0C_ds_t
	// succ:  l00011B0C_ds_f l00011B0C_ds_t
l00011B0C_ds_f:
	r2 = 0x00000001
	goto l00011B24
	// succ:  l00011B24
l00011B0C_ds_t:
	r2 = 0x00000001
	goto l00011B40
	// succ:  l00011B40
l00011B24:
	r2 = 0x000001C2
	r5 = 0x00008000
	r2 = r2 | 0x00000018
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011B40
l00011B40:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000020
	F = r2 == 0x00000000
	branch F l00011B40_ds_t
	// succ:  l00011B40_ds_f l00011B40_ds_t
l00011B40_ds_f:
	r2 = 0x00000001
	goto l00011B58
	// succ:  l00011B58
l00011B40_ds_t:
	r2 = 0x00000001
	goto l00011B7C
	// succ:  l00011B7C
l00011B58:
	r2 = 0x000001C2
	r3 = 0x00000000 + -4096
	CV = cond(r3)
	r2 = r2 | 0x00000020
	r6 = 0x00004000
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r6
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011B7C
l00011B7C:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000020
	F = r2 == 0x00000000
	branch F l00011B7C_ds_t
	// succ:  l00011B7C_ds_f l00011B7C_ds_t
l00011B7C_ds_f:
	r2 = 0x00000001
	goto l00011B94
	// succ:  l00011B94
l00011B7C_ds_t:
	r2 = 0x00000001
	goto l00011BC0
	// succ:  l00011BC0
l00011B94:
	r2 = 0x000001C2
	r4 = 0x00008000
	r2 = r2 | 0x00000020
	r5 = 0x00004000
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011BC0
l00011BC0:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000040
	F = r2 == 0x00000000
	branch F l00011BC0_ds_t
	// succ:  l00011BC0_ds_f l00011BC0_ds_t
l00011BC0_ds_f:
	r2 = 0x00000001
	goto l00011BD8
	// succ:  l00011BD8
l00011BC0_ds_t:
	r2 = 0x00000001
	goto l00011BF0
	// succ:  l00011BF0
l00011BD8:
	r3 = 0x00000004
	r2 = 0x000001C2
	r3 = r3 | 0x00001811
	r2 = r2 | 0x00000028
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011BF0
l00011BF0:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000040
	F = r2 == 0x00000000
	branch F l00011BF0_ds_t
	// succ:  l00011BF0_ds_f l00011BF0_ds_t
l00011BF0_ds_f:
	r2 = 0x00000001
	goto l00011C08
	// succ:  l00011C08
l00011BF0_ds_t:
	r2 = 0x00000001
	goto l00011C24
	// succ:  l00011C24
l00011C08:
	r2 = 0x000001C2
	r6 = 0x00008000
	r2 = r2 | 0x00000028
	r3 = Mem0[r2:word32]
	r3 = r3 | r6
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011C24
l00011C24:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000800
	F = r2 == 0x00000000
	branch F l00011C24_ds_t
	// succ:  l00011C24_ds_f l00011C24_ds_t
l00011C24_ds_f:
	r2 = 0x00000001
	goto l00011C3C
	// succ:  l00011C3C
l00011C24_ds_t:
	r2 = 0x00000001
	goto l00011C54
	// succ:  l00011C54
l00011C3C:
	r3 = 0x00000004
	r2 = 0x000001C2
	r3 = r3 | 0x00001811
	r2 = r2 | 0x0000002C
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011C54
l00011C54:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000800
	F = r2 == 0x00000000
	branch F l00011C54_ds_t
	// succ:  l00011C54_ds_f l00011C54_ds_t
l00011C54_ds_f:
	r2 = 0x00000001
	goto l00011C6C
	// succ:  l00011C6C
l00011C54_ds_t:
	r2 = 0x00000001
	goto l00011C88
	// succ:  l00011C88
l00011C6C:
	r2 = 0x000001C2
	r4 = 0x00008000
	r2 = r2 | 0x0000002C
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011C88
l00011C88:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000400
	F = r2 == 0x00000000
	branch F l00011C88_ds_t
	// succ:  l00011C88_ds_f l00011C88_ds_t
l00011C88_ds_f:
	r2 = 0x00000001
	goto l00011CA0
	// succ:  l00011CA0
l00011C88_ds_t:
	r2 = 0x00000001
	goto l00011CB8
	// succ:  l00011CB8
l00011CA0:
	r3 = 0x00000300
	r2 = 0x000001C2
	r3 = r3 | 0x00006207
	r2 = r2 | 0x00000030
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011CB8
l00011CB8:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000400
	F = r2 == 0x00000000
	branch F l00011CB8_ds_t
	// succ:  l00011CB8_ds_f l00011CB8_ds_t
l00011CB8_ds_f:
	r2 = 0x00000001
	goto l00011CD0
	// succ:  l00011CD0
l00011CB8_ds_t:
	r2 = 0x00000001
	goto l00011CEC
	// succ:  l00011CEC
l00011CD0:
	r2 = 0x000001C2
	r5 = 0x00008000
	r2 = r2 | 0x00000030
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011CEC
l00011CEC:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000080
	F = r2 == 0x00000000
	branch F l00011CEC_ds_t
	// succ:  l00011CEC_ds_f l00011CEC_ds_t
l00011CEC_ds_f:
	r2 = 0x00000001
	goto l00011D04
	// succ:  l00011D04
l00011CEC_ds_t:
	r2 = 0x00000001
	goto l00011D1C
	// succ:  l00011D1C
l00011D04:
	r3 = 0x00000300
	r2 = 0x000001C2
	r3 = r3 | 0x00006207
	r2 = r2 | 0x00000038
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011D1C
l00011D1C:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000080
	F = r2 == 0x00000000
	branch F l00011D1C_ds_t
	// succ:  l00011D1C_ds_f l00011D1C_ds_t
l00011D1C_ds_f:
	r2 = 0x00000001
	goto l00011D34
	// succ:  l00011D34
l00011D1C_ds_t:
	r2 = 0x00000001
	goto l00011D50
	// succ:  l00011D50
l00011D34:
	r2 = 0x000001C2
	r6 = 0x00008000
	r2 = r2 | 0x00000038
	r3 = Mem0[r2:word32]
	r3 = r3 | r6
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011D50
l00011D50:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00002000
	F = r2 == 0x00000000
	branch F l00011D50_ds_t
	// succ:  l00011D50_ds_f l00011D50_ds_t
l00011D50_ds_f:
	r2 = 0x00000001
	goto l00011D68
	// succ:  l00011D68
l00011D50_ds_t:
	r2 = 0x00000001
	goto l00011D7C
	// succ:  l00011D7C
l00011D68:
	r2 = 0x000001C2
	r3 = 0x00000000 + -1301
	CV = cond(r3)
	r2 = r2 | 0x00000040
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011D7C
l00011D7C:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00002000
	F = r2 == 0x00000000
	branch F l00011D7C_ds_t
	// succ:  l00011D7C_ds_f l00011D7C_ds_t
l00011D7C_ds_f:
	r2 = 0x00000001
	goto l00011D94
	// succ:  l00011D94
l00011D7C_ds_t:
	r2 = 0x00000001
	goto l00011DB0
	// succ:  l00011DB0
l00011D94:
	r2 = 0x000001C2
	r4 = 0x00008000
	r2 = r2 | 0x00000040
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011DB0
l00011DB0:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000100
	F = r2 == 0x00000000
	branch F l00011DB0_ds_t
	// succ:  l00011DB0_ds_f l00011DB0_ds_t
l00011DB0_ds_f:
	r2 = 0x00000001
	goto l00011DC8
	// succ:  l00011DC8
l00011DB0_ds_t:
	r2 = 0x00000001
	goto l00011DE0
	// succ:  l00011DE0
l00011DC8:
	r3 = 0x00000300
	r2 = 0x000001C2
	r3 = r3 | 0x00001300
	r2 = r2 | 0x00000044
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011DE0
l00011DE0:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000100
	F = r2 == 0x00000000
	branch F l00011DE0_ds_t
	// succ:  l00011DE0_ds_f l00011DE0_ds_t
l00011DE0_ds_f:
	r2 = 0x00000001
	goto l00011DF8
	// succ:  l00011DF8
l00011DE0_ds_t:
	r2 = 0x00000001
	goto l00011E14
	// succ:  l00011E14
l00011DF8:
	r2 = 0x000001C2
	r5 = 0x00008000
	r2 = r2 | 0x00000044
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011E14
l00011E14:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00000200
	F = r2 == 0x00000000
	branch F l00011E14_ds_t
	// succ:  l00011E14_ds_f l00011E14_ds_t
l00011E14_ds_f:
	r2 = 0x00000001
	goto l00011E2C
	// succ:  l00011E2C
l00011E14_ds_t:
	r2 = 0x00000001
	goto l00011E44
	// succ:  l00011E44
l00011E2C:
	r3 = 0x00000300
	r2 = 0x000001C2
	r3 = r3 | 0x00006207
	r2 = r2 | 0x00000048
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011E44
l00011E44:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00000200
	F = r2 == 0x00000000
	branch F l00011E44_ds_t
	// succ:  l00011E44_ds_f l00011E44_ds_t
l00011E44_ds_f:
	r2 = 0x00000001
	goto l00011E5C
	// succ:  l00011E5C
l00011E44_ds_t:
	r2 = 0x00000001
	goto l00011E78
	// succ:  l00011E78
l00011E5C:
	r2 = 0x000001C2
	r6 = 0x00008000
	r2 = r2 | 0x00000048
	r3 = Mem0[r2:word32]
	r3 = r3 | r6
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011E78
l00011E78:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 156:word32]
	r2 = r2 & 0x00001000
	F = r2 == 0x00000000
	branch F l00011E78_ds_t
	// succ:  l00011E78_ds_f l00011E78_ds_t
l00011E78_ds_f:
	r2 = 0x00000001
	goto l00011E90
	// succ:  l00011E90
l00011E78_ds_t:
	r2 = 0x00000001
	goto l00011EB4
	// succ:  l00011EB4
l00011E90:
	r2 = 0x000001C2
	r3 = 0x00000000 + -4096
	CV = cond(r3)
	r2 = r2 | 0x0000004C
	r4 = 0x00004000
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011EB4
l00011EB4:
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 152:word32]
	r2 = r2 & 0x00001000
	F = r2 == 0x00000000
	branch F l00011EB4_ds_t
	// succ:  l00011EB4_ds_f l00011EB4_ds_t
l00011EB4_ds_f:
	r2 = 0x00000001
	goto l00011ECC
	// succ:  l00011ECC
l00011EB4_ds_t:
	r2 = 0x00000001
	goto l00011EF8
	// succ:  l00011EF8
l00011ECC:
	r2 = 0x000001C2
	r5 = 0x00008000
	r2 = r2 | 0x0000004C
	r6 = 0x00004000
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r2:word32] = r3
	r3 = Mem0[r2:word32]
	r3 = r3 | r6
	Mem0[r2:word32] = r3
	r2 = 0x00000001
	// succ:  l00011EF8
l00011EF8:
	r2 = r2 | 0x000034D0
	r2 = Mem0[r2:word32]
	r2 = r2 & 0x00000010
	F = r2 == 0x00000000
	branch F l00011EF8_ds_t
	// succ:  l00011EF8_ds_f l00011EF8_ds_t
l00011EF8_ds_f:
	goto l00011F10
	// succ:  l00011F10
l00011EF8_ds_t:
	goto l00011F18
	// succ:  l00011F18
l00011F10:
	call fn000100B8 (retsize: 0;)
l00011F18:
	r2 = 0x0000F3F3
	r3 = r2 | 0x00007004
	call fn0000AEDC (retsize: 0;)
	r3 = Mem0[r1 + 16:word32]
	call fn00004A6C (retsize: 0;)
	r3 = r2 | 0x00007005
	r2 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r2 = r2 | 0x000034E4
	r2 = Mem0[r2 + 100:word32]
	F = r2 == 0x00000000
	branch F l00011F18_ds_t
	// succ:  l00011F18_ds_f l00011F18_ds_t
l00011F18_ds_f:
	r16 = 0x000001C2
	goto l00011F4C
	// succ:  l00011F4C
l00011F18_ds_t:
	r16 = 0x000001C2
	goto l00012064
	// succ:  l00012064
l00011F4C:
	r4 = 0x00007FFF
	r2 = r16 | 0x00000028
	r4 = r4 | 0x0000FFFF
	r3 = Mem0[r2:word32]
	r14 = 0x00000001
	r3 = r3 & r4
	r14 = r14 | 0x00003710
	Mem0[r2:word32] = r3
	r3 = 0x00000001
	r3 = r3 | 0x0000370C
	r3 = Mem0[r3:word32]
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -100
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r6 = 0x00008000
	r3 = Mem0[r2:word32]
	r3 = r3 | r6
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -20
	CV = cond(r3)
	r2 = r16 | 0x0000015C
	call fn0000C8A0 (retsize: 0;)
	r3 = Mem0[r14:word32]
	r3 = r3 & 0x00000007
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -200
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r4 = 0x00000300
	r3 = Mem0[r14:word32]
	r4 = r4 | 0x00000007
	r3 = r3 & r4
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -20
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	r5 = 0x00008000
	r3 = Mem0[r2:word32]
	r3 = r3 | r5
	Mem0[r2:word32] = r3
	r3 = 0x00000000 + -10000
	CV = cond(r3)
	call fn0000C8A0 (retsize: 0;)
	call fn00007FAC (retsize: 0;)
	call fn0000E5BC (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00011F4C_ds_t
	// succ:  l00011F4C_ds_f l00011F4C_ds_t
l00011F4C_ds_f:
	goto l00012008
	// succ:  l00012008
l00011F4C_ds_t:
	goto l00012064
	// succ:  l00012064
l00012008:
	r2 = 0x00000001
	r3 = 0x00000000 + -16
	CV = cond(r3)
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r2 = r2 | 0x00003970
	call fn00008030 (retsize: 0;)
	call fn0000E5CC (retsize: 0;)
	Mem0[r2:word32] = r11
	r2 = 0x00000001
	r2 = r2 | 0x0000396C
	r2 = Mem0[r2:word32]
	F = r11 == r2
	branch F l00012008_ds_t
	// succ:  l00012008_ds_f l00012008_ds_t
l00012008_ds_f:
	goto l00012040
	// succ:  l00012040
l00012008_ds_t:
	goto l00012064
	// succ:  l00012064
l00012040:
	r3 = 0x0000F1F1
	r3 = r3 | 0x0000900F
	call fn0000AEDC (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002430
	call fn0000EDF4 (retsize: 0;)
	// succ:  l0001205C
l0001205C:
	goto l0001205C
	// succ:  l0001205C
l00012064:
	r2 = 0x0000F3F3
	call fn00007FD0 (retsize: 0;)
	r3 = r2 | 0x00007006
	r18 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00004810
	r4 = 0x00000001
	r3 = r3 | 0x00000F7C
	r4 = r4 | 0x000034E4
	r16 = 0x00000001
	call fn0000E4F0 (retsize: 0;)
	r3 = r2 | 0x00007007
	r14 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00000001
	r18 = r18 | 0x000034E0
	r3 = r3 | 0x00003708
	r16 = r16 | 0x00003970
	r4 = Mem0[r3:word32]
	r3 = 0x000001F0
	r14 = r14 | 0x0000396C
	r3 = r3 | 0x00002E18
	Mem0[r3:word32] = r4
	r3 = 0x00000000 + -1
	CV = cond(r3)
	call fn0000C768 (retsize: 0;)
	r3 = r2 | 0x00007008
	call fn0000AEDC (retsize: 0;)
	r3 = r2 | 0x00007009
	call fn0000AEDC (retsize: 0;)
	call fn00008788 (retsize: 0;)
	call fn00008998 (retsize: 0;)
	r3 = r2 | 0x0000700A
	call fn0000AEDC (retsize: 0;)
	r3 = Mem0[r1 + 16:word32]
	call fn00004978 (retsize: 0;)
	r3 = r2 | 0x0000700B
	call fn0000AEDC (retsize: 0;)
	r4 = 0x00000001
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002443
	call fn0000EDF4 (retsize: 0;)
	// succ:  l00012110
l00012110:
	call fn00008674 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00012110_ds_t
	// succ:  l00012110_ds_f l00012110_ds_t
l00012110_ds_f:
	r2 = r11 | 0x00000000
	goto l00012124
	// succ:  l00012124
l00012110_ds_t:
	r2 = r11 | 0x00000000
	goto l00012110
	// succ:  l00012110
l00012124:
	r3 = (word32) Mem0[r11 + 2:byte]
	F = r3 != 0x00000011
	branch F l00012124_ds_t
	// succ:  l00012124_ds_f l00012124_ds_t
l00012124_ds_f:
	r6 = 0x00000000 + -5
	CV = cond(r6)
	goto l00012134
	// succ:  l00012134
l00012124_ds_t:
	r6 = 0x00000000 + -5
	CV = cond(r6)
	goto l0001215C
	// succ:  l0001215C
l00012134:
	r3 = Mem0[r18:word32]
	r4 = Mem0[r16:word32]
	Mem0[r11 + 40:word32] = r3
	r3 = Mem0[r14:word32]
	r3 = r4 ^ r3
	Mem0[r11:byte] = SLICE(r6, byte, 0)
	r4 = 0x00000000 - r3
	CV = cond(r4)
	r3 = r4 | r3
	r3 = r3 >>u 0x0000001F
	Mem0[r11 + 44:word32] = r3
	// succ:  l0001215C
l0001215C:
	r3 = (word32) Mem0[r2 + 1:byte]
	r3 = r3 & 0x00000003
	F = r3 == 0x00000000
	branch F l0001215C_ds_t
	// succ:  l0001215C_ds_f l0001215C_ds_t
l0001215C_ds_f:
	r3 = r2 | 0x00000000
	goto l00012170
	// succ:  l00012170
l0001215C_ds_t:
	r3 = r2 | 0x00000000
	goto l00012180
	// succ:  l00012180
l00012170:
	r4 = 0x00000000 + -4000
	CV = cond(r4)
	call fn00008574 (retsize: 0;)
	r2 = (word32) Mem0[r2:byte]
	goto l0001218C
	// succ:  l0001218C
l00012180:
	r3 = r2 | 0x00000000
	call fn0000F368 (retsize: 0;)
	r2 = (word32) Mem0[r2:byte]
	// succ:  l0001218C
l0001218C:
	F = r2 != 0x00000005
	branch F l0001218C_ds_t
	// succ:  l0001218C_ds_f l0001218C_ds_t
l0001218C_ds_f:
	r2 = 0x0000F3F3
	goto l00012198
	// succ:  l00012198
l0001218C_ds_t:
	r2 = 0x0000F3F3
	goto l00012110
	// succ:  l00012110
l00012198:
	r3 = r2 | 0x0000700C
	call fn0000AEDC (retsize: 0;)
	r3 = 0x00004810
	r4 = r1 + -4
	CV = cond(r4)
	r3 = r3 | 0x00000DF4
	call fn0000E4F0 (retsize: 0;)
	r3 = r2 | 0x0000700D
	call fn0000AEDC (retsize: 0;)
	r3 = r2 | 0x00008000
	r2 = 0x00000001
	call fn0000AEDC (retsize: 0;)
	r2 = r2 | 0x000034D8
	r3 = 0x00000000 + -1
	CV = cond(r3)
	r4 = Mem0[r2:word32]
	r2 = 0x00000001
	call fn0000B610 (retsize: 0;)
	r2 = r2 | 0x000034E4
	r4 = 0x00000001
	r2 = Mem0[r2:word32]
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002459
	Mem0[r1:word32] = r2
	call fn0000EDF4 (retsize: 0;)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	// succ:  l000121F8
l000121F8:
	r1 = r1 + -68
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 20:word32]
	r14 = Mem0[r1 - 16:word32]
	r16 = Mem0[r1 - 12:word32]
	r18 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00010570_exit
fn00010570_exit:


// fn00012214
// Return size: 0
void fn00012214()
fn00012214_entry:
	r1 = fp
	// succ:  l00012214
l00012214:
	Mem0[r1 - 12:word32] = r2
	Mem0[r1 - 8:word32] = r14
	Mem0[r1 - 4:word32] = r9
	r14 = Mem0[r3 + 48:word32]
	r1 = r1 - 12
	CV = cond(r1)
	r2 = Mem0[r3 + 40:word32]
	F = r14 != 0x00000000
	branch F l00012214_ds_t
	// succ:  l00012214_ds_f l00012214_ds_t
l00012214_ds_f:
	r5 = Mem0[r3 + 44:word32]
	goto l00012238
	// succ:  l00012238
l00012214_ds_t:
	r5 = Mem0[r3 + 44:word32]
	goto l00012258
	// succ:  l00012258
l00012238:
	r3 = r5 | 0x00000000
	r4 = r2 | 0x00000000
	call fn000049C0 (retsize: 0;)
	r3 = r14 | 0x00000000
	r4 = r2 | 0x00000000
	call fn00004B44 (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	goto l0001228C
	// succ:  l0001228C
l00012258:
	F = r14 != 0x00000003
	branch F l00012258_ds_t
	// succ:  l00012258_ds_f l00012258_ds_t
l00012258_ds_f:
	F = r2 != 0x00000000
	goto l00012264
	// succ:  l00012264
l00012258_ds_t:
	F = r2 != 0x00000000
	goto l00012288
	// succ:  l00012288
l00012264:
	branch F l00012264_ds_t
	// succ:  l00012264_ds_f l00012264_ds_t
l00012264_ds_f:
	goto l0001226C
	// succ:  l0001226C
l00012264_ds_t:
	goto l0001227C
	// succ:  l0001227C
l0001226C:
	call fn00010570 (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	goto l0001228C
	// succ:  l0001228C
l0001227C:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = r2 | 0x00000000
	call fn00004C48 (retsize: 0;)
l00012288:
	r1 = r1 + -12
	CV = cond(r1)
	// succ:  l0001228C
l0001228C:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00012214_exit
fn00012214_exit:


// fn000122B8
// Return size: 0
void fn000122B8()
fn000122B8_entry:
	r1 = fp
	// succ:  l000122B8
l000122B8:
	Mem0[r1 - 8:word32] = r2
	Mem0[r1 - 4:word32] = r9
	r2 = Mem0[r3 + 40:word32]
	F = r2 == 0x00000000
	branch F l000122B8_ds_t
	// succ:  l000122B8_ds_f l000122B8_ds_t
l000122B8_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l000122D0
	// succ:  l000122D0
l000122B8_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l000122E4
	// succ:  l000122E4
l000122D0:
	F = r2 >u 0x00000002
	branch F l000122D0_ds_t
	// succ:  l000122D0_ds_f l000122D0_ds_t
l000122D0_ds_f:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l000122DC
	// succ:  l000122DC
l000122D0_ds_t:
	r11 = 0x00000000 - 22
	CV = cond(r11)
	goto l00012310
	// succ:  l00012310
l000122DC:
	goto l000122FC
	// succ:  l000122FC
l000122E4:
	r3 = 0x00000000 | 0x0000A101
	call fn0000AEDC (retsize: 0;)
	call fn0000AADC (retsize: 0;)
	r11 = r2 | 0x00000000
	goto l00012310
	// succ:  l00012310
l000122FC:
	r3 = 0x00000000 | 0x0000A102
	call fn0000AEDC (retsize: 0;)
	call fn0000AA80 (retsize: 0;)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	// succ:  l00012310
l00012310:
	r1 = r1 + -8
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000122B8_exit
fn000122B8_exit:


// fn00012320
// Return size: 0
void fn00012320()
fn00012320_entry:
	r1 = fp
	// succ:  l00012320
l00012320:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r1 = r1 - 12
	CV = cond(r1)
	call fn0000A664 (retsize: 0;)
	call fn00009290 (retsize: 0;)
	r3 = 0x000001F0
	r4 = 0x00000000 + -15
	CV = cond(r4)
	r3 = r3 | 0x00000108
	call fn0000AF04 (retsize: 0;)
	call fn0000AC14 (retsize: 0;)
	goto l00012350
	// succ:  l00012350
l00012320_ds_f:
	goto l00012364
	// succ:  l00012364
l00012320_ds_t:
	goto l000123A8
	// succ:  l000123A8
l00012350:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l00012320_ds_t
	goto l00012320_ds_f
	// succ:  l00012320_ds_f l00012320_ds_t
l00012364:
	r3 = 0x00000000 + 0
	CV = cond(r3)
	call fn00008CA4 (retsize: 0;)
	r3 = r1 | 0x00000000
	call fn0000A22C (retsize: 0;)
	r4 = 0x00000007
	r3 = Mem0[r1:word32]
	r4 = r4 | 0x00008000
	r3 = r3 & r4
	F = r3 == 0x00000000
	branch F l00012364_ds_t
	// succ:  l00012364_ds_f l00012364_ds_t
l00012364_ds_f:
	goto l00012390
	// succ:  l00012390
l00012364_ds_t:
	goto l000123A0
	// succ:  l000123A0
l00012390:
	call fn0000A300 (retsize: 0;)
	r4 = 0x00000001
	goto l000123EC
	// succ:  l000123EC
l000123A0:
	call fn0000A300 (retsize: 0;)
l000123A8:
	r3 = 0x00000000 + -5
	CV = cond(r3)
	call fn00008C74 (retsize: 0;)
	F = r11 == 0x00000000
	branch F l000123A8_ds_t
	// succ:  l000123A8_ds_f l000123A8_ds_t
l000123A8_ds_f:
	goto l000123BC
	// succ:  l000123BC
l000123A8_ds_t:
	goto l000123D8
	// succ:  l000123D8
l000123BC:
	r3 = 0x00000000 + -5
	CV = cond(r3)
	call fn00008CA4 (retsize: 0;)
	call fn000092CC (retsize: 0;)
	F = r11 == 0x00000001
	branch F l000123BC_ds_t
	// succ:  l000123BC_ds_f l000123BC_ds_t
l000123BC_ds_f:
	r4 = 0x00000001
	goto l000123D8
	// succ:  l000123D8
l000123BC_ds_t:
	r4 = 0x00000001
	goto l000123EC
	// succ:  l000123EC
l000123D8:
	call fn0000A6B0 (retsize: 0;)
	F = r11 != 0x00000001
	branch F l000123D8_ds_t
	// succ:  l000123D8_ds_f l000123D8_ds_t
l000123D8_ds_f:
	r4 = 0x00000001
	goto l000123EC
	// succ:  l000123EC
l000123D8_ds_t:
	r4 = 0x00000001
	goto l00012350
	// succ:  l00012350
l000123EC:
	r3 = 0x00000000 + -15
	CV = cond(r3)
	r4 = r4 | 0x00002464
	r2 = 0x00000000 - 2
	CV = cond(r2)
	call fn0000EDF4 (retsize: 0;)
	r3 = 0x000001F0
	r3 = r3 | 0x0000142C
	r4 = Mem0[r3:word32]
	r4 = r4 & r2
	Mem0[r3:word32] = r4
	call fn0000A708 (retsize: 0;)
	// succ:  l00012418
l00012418:
	goto l00012418
	// succ:  l00012418
fn00012320_exit:


// fn00018000
// Return size: 0
void fn00018000()
fn00018000_entry:
	r1 = fp
	// succ:  l00018000
l00018000:
	r3 = 0x00000001
	r4 = 0x000001C2
	r3 = r3 | 0x0000310C
	r5 = Mem0[r4 + 540:word32]
	r3 = Mem0[r3:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	Mem0[r3 + 2044:word32] = r5
	Mem0[r3 + 1500:word32] = r4
	r5 = Mem0[r4 + 544:word32]
	Mem0[r3 + 2048:word32] = r5
	r5 = Mem0[r4 + 548:word32]
	Mem0[r3 + 2052:word32] = r5
	r5 = Mem0[r4 + 552:word32]
	Mem0[r3 + 2056:word32] = r5
	r5 = Mem0[r4 + 556:word32]
	Mem0[r3 + 2060:word32] = r5
	r5 = Mem0[r4 + 564:word32]
	Mem0[r3 + 2068:word32] = r5
	r5 = Mem0[r4 + 572:word32]
	Mem0[r3 + 2076:word32] = r5
	r5 = Mem0[r4 + 584:word32]
	Mem0[r3 + 2088:word32] = r5
	r5 = Mem0[r4 + 592:word32]
	Mem0[r3 + 2096:word32] = r5
	r5 = Mem0[r4 + 636:word32]
	Mem0[r3 + 2140:word32] = r5
	r5 = Mem0[r4 + 640:word32]
	Mem0[r3 + 2144:word32] = r5
	r5 = Mem0[r4 + 644:word32]
	Mem0[r3 + 2148:word32] = r5
	r5 = Mem0[r4 + 648:word32]
	Mem0[r3 + 2152:word32] = r5
	r5 = Mem0[r4 + 652:word32]
	Mem0[r3 + 2156:word32] = r5
	r5 = Mem0[r4 + 668:word32]
	Mem0[r3 + 2172:word32] = r5
	r5 = Mem0[r4 + 680:word32]
	Mem0[r3 + 2184:word32] = r5
	r5 = Mem0[r4:word32]
	Mem0[r3 + 1504:word32] = r5
	r5 = Mem0[r4 + 8:word32]
	Mem0[r3 + 1512:word32] = r5
	r5 = Mem0[r4 + 16:word32]
	Mem0[r3 + 1520:word32] = r5
	r5 = Mem0[r4 + 24:word32]
	Mem0[r3 + 1528:word32] = r5
	r5 = Mem0[r4 + 40:word32]
	Mem0[r3 + 1544:word32] = r5
	r5 = Mem0[r4 + 68:word32]
	Mem0[r3 + 1572:word32] = r5
	r5 = Mem0[r4 + 56:word32]
	Mem0[r3 + 1560:word32] = r5
	r5 = Mem0[r4 + 72:word32]
	Mem0[r3 + 1576:word32] = r5
	r5 = Mem0[r4 + 80:word32]
	Mem0[r3 + 1584:word32] = r5
	r5 = Mem0[r4 + 84:word32]
	Mem0[r3 + 1588:word32] = r5
	r5 = Mem0[r4 + 88:word32]
	Mem0[r3 + 1592:word32] = r5
	r5 = Mem0[r4 + 92:word32]
	Mem0[r3 + 1596:word32] = r5
	r5 = Mem0[r4 + 96:word32]
	Mem0[r3 + 1600:word32] = r5
	r5 = Mem0[r4 + 100:word32]
	Mem0[r3 + 1604:word32] = r5
	r5 = Mem0[r4 + 104:word32]
	Mem0[r3 + 1608:word32] = r5
	r5 = Mem0[r4 + 108:word32]
	Mem0[r3 + 1612:word32] = r5
	r5 = Mem0[r4 + 112:word32]
	Mem0[r3 + 1616:word32] = r5
	r5 = Mem0[r4 + 116:word32]
	Mem0[r3 + 1620:word32] = r5
	r5 = Mem0[r4 + 128:word32]
	Mem0[r3 + 1632:word32] = r5
	r5 = Mem0[r4 + 136:word32]
	Mem0[r3 + 1640:word32] = r5
	r5 = Mem0[r4 + 140:word32]
	Mem0[r3 + 1644:word32] = r5
	r5 = Mem0[r4 + 144:word32]
	Mem0[r3 + 1648:word32] = r5
	r5 = Mem0[r4 + 152:word32]
	Mem0[r3 + 1656:word32] = r5
	r5 = Mem0[r4 + 156:word32]
	Mem0[r3 + 1660:word32] = r5
	r5 = Mem0[r4 + 160:word32]
	Mem0[r3 + 1664:word32] = r5
	r5 = Mem0[r4 + 164:word32]
	Mem0[r3 + 1668:word32] = r5
	r5 = Mem0[r4 + 176:word32]
	Mem0[r3 + 1680:word32] = r5
	r5 = Mem0[r4 + 180:word32]
	Mem0[r3 + 1684:word32] = r5
	r5 = Mem0[r4 + 184:word32]
	Mem0[r3 + 1688:word32] = r5
	r5 = Mem0[r4 + 192:word32]
	Mem0[r3 + 1696:word32] = r5
	r5 = Mem0[r4 + 204:word32]
	Mem0[r3 + 1708:word32] = r5
	r5 = Mem0[r4 + 256:word32]
	Mem0[r3 + 1760:word32] = r5
	r5 = Mem0[r4 + 260:word32]
	Mem0[r3 + 1764:word32] = r5
	r5 = Mem0[r4 + 280:word32]
	Mem0[r3 + 1784:word32] = r5
	r5 = Mem0[r4 + 288:word32]
	Mem0[r3 + 1792:word32] = r5
	r5 = Mem0[r4 + 292:word32]
	Mem0[r3 + 1796:word32] = r5
	r5 = Mem0[r4 + 304:word32]
	Mem0[r3 + 1808:word32] = r5
	r5 = Mem0[r4 + 308:word32]
	Mem0[r3 + 1812:word32] = r5
	r5 = Mem0[r4 + 316:word32]
	Mem0[r3 + 1820:word32] = r5
	r5 = Mem0[r4 + 320:word32]
	Mem0[r3 + 1824:word32] = r5
	r5 = Mem0[r4 + 324:word32]
	Mem0[r3 + 1828:word32] = r5
	r5 = Mem0[r4 + 336:word32]
	Mem0[r3 + 1840:word32] = r5
	r5 = Mem0[r4 + 340:word32]
	Mem0[r3 + 1844:word32] = r5
	r5 = Mem0[r4 + 416:word32]
	Mem0[r3 + 1920:word32] = r5
	r5 = Mem0[r4 + 512:word32]
	Mem0[r3 + 2016:word32] = r5
	r5 = Mem0[r4 + 516:word32]
	Mem0[r3 + 2020:word32] = r5
	r5 = Mem0[r4 + 704:word32]
	Mem0[r3 + 2208:word32] = r5
	r5 = Mem0[r4 + 708:word32]
	Mem0[r3 + 2212:word32] = r5
	r5 = Mem0[r4 + 712:word32]
	Mem0[r3 + 2216:word32] = r5
	r5 = Mem0[r4 + 720:word32]
	Mem0[r3 + 2224:word32] = r5
	r5 = Mem0[r4 + 728:word32]
	Mem0[r3 + 2232:word32] = r5
	r5 = Mem0[r4 + 752:word32]
	Mem0[r3 + 2256:word32] = r5
	r5 = Mem0[r4 + 768:word32]
	Mem0[r3 + 2272:word32] = r5
	r4 = Mem0[r4 + 772:word32]
	Mem0[r3 + 2276:word32] = r4
	return
	// succ:  fn00018000_exit
fn00018000_exit:


// fn00018250
// Return size: 0
void fn00018250()
fn00018250_entry:
	r1 = fp
	// succ:  l00018250
l00018250:
	Mem0[r1 - 8:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r2 = r2 | 0x0000310C
	r1 = r1 - 12
	CV = cond(r1)
	r4 = Mem0[r2:word32]
	r5 = Mem0[r4 + 2016:word32]
	r3 = Mem0[r4 + 1500:word32]
	Mem0[r3 + 512:word32] = r5
	r5 = Mem0[r4 + 2020:word32]
	Mem0[r3 + 516:word32] = r5
	r5 = Mem0[r4 + 2044:word32]
	Mem0[r3 + 540:word32] = r5
	r5 = Mem0[r4 + 2048:word32]
	Mem0[r3 + 544:word32] = r5
	r5 = Mem0[r4 + 2052:word32]
	Mem0[r3 + 548:word32] = r5
	r5 = Mem0[r4 + 2056:word32]
	Mem0[r3 + 552:word32] = r5
	r5 = Mem0[r4 + 2060:word32]
	Mem0[r3 + 556:word32] = r5
	r5 = Mem0[r4 + 2068:word32]
	Mem0[r3 + 564:word32] = r5
	r5 = Mem0[r4 + 2076:word32]
	Mem0[r3 + 572:word32] = r5
	r5 = Mem0[r4 + 2088:word32]
	Mem0[r3 + 584:word32] = r5
	r5 = Mem0[r4 + 2096:word32]
	Mem0[r3 + 592:word32] = r5
	r5 = Mem0[r4 + 2140:word32]
	Mem0[r3 + 636:word32] = r5
	r5 = Mem0[r4 + 2144:word32]
	Mem0[r3 + 640:word32] = r5
	r5 = Mem0[r4 + 2148:word32]
	Mem0[r3 + 644:word32] = r5
	r5 = Mem0[r4 + 2152:word32]
	Mem0[r3 + 648:word32] = r5
	r5 = Mem0[r4 + 2156:word32]
	Mem0[r3 + 652:word32] = r5
	r5 = Mem0[r4 + 2172:word32]
	Mem0[r3 + 668:word32] = r5
	r5 = Mem0[r4 + 2184:word32]
	Mem0[r3 + 680:word32] = r5
	r5 = Mem0[r4 + 1504:word32]
	Mem0[r3:word32] = r5
	r5 = Mem0[r4 + 1512:word32]
	Mem0[r3 + 8:word32] = r5
	r5 = Mem0[r4 + 1520:word32]
	Mem0[r3 + 16:word32] = r5
	r5 = Mem0[r4 + 1528:word32]
	Mem0[r3 + 24:word32] = r5
	r5 = Mem0[r4 + 1544:word32]
	Mem0[r3 + 40:word32] = r5
	r5 = Mem0[r4 + 1572:word32]
	Mem0[r3 + 68:word32] = r5
	r5 = Mem0[r4 + 1560:word32]
	Mem0[r3 + 56:word32] = r5
	r4 = Mem0[r4 + 1576:word32]
	Mem0[r3 + 72:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -10
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r2 = Mem0[r2:word32]
	r2 = Mem0[r2 + 1500:word32]
	r3 = Mem0[r2:word32]
	r3 = r3 >>u 0x0000001C
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l00018250_ds_t
	// succ:  l00018250_ds_f l00018250_ds_t
l00018250_ds_f:
	r3 = 0x00000000
	goto l0001836C
	// succ:  l0001836C
l00018250_ds_t:
	r3 = 0x00000000
	goto l00018404
	// succ:  l00018404
l0001836C:
	r3 = Mem0[r2 + 8:word32]
	r3 = r3 >>u 0x0000001C
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l0001836C_ds_t
	// succ:  l0001836C_ds_f l0001836C_ds_t
l0001836C_ds_f:
	r3 = 0x00000000
	goto l00018384
	// succ:  l00018384
l0001836C_ds_t:
	r3 = 0x00000000
	goto l00018404
	// succ:  l00018404
l00018384:
	r3 = Mem0[r2 + 16:word32]
	r3 = r3 >>u 0x0000001C
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l00018384_ds_t
	// succ:  l00018384_ds_f l00018384_ds_t
l00018384_ds_f:
	r3 = 0x00000000
	goto l0001839C
	// succ:  l0001839C
l00018384_ds_t:
	r3 = 0x00000000
	goto l00018404
	// succ:  l00018404
l0001839C:
	r3 = Mem0[r2 + 24:word32]
	r3 = r3 >>u 0x0000001C
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l0001839C_ds_t
	// succ:  l0001839C_ds_f l0001839C_ds_t
l0001839C_ds_f:
	r3 = 0x00000000
	goto l000183B4
	// succ:  l000183B4
l0001839C_ds_t:
	r3 = 0x00000000
	goto l00018404
	// succ:  l00018404
l000183B4:
	r3 = Mem0[r2 + 40:word32]
	r3 = r3 >>u 0x0000001C
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l000183B4_ds_t
	// succ:  l000183B4_ds_f l000183B4_ds_t
l000183B4_ds_f:
	r3 = 0x00000000
	goto l000183CC
	// succ:  l000183CC
l000183B4_ds_t:
	r3 = 0x00000000
	goto l00018404
	// succ:  l00018404
l000183CC:
	r3 = Mem0[r2 + 68:word32]
	r3 = r3 >>u 0x0000001C
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l000183CC_ds_t
	// succ:  l000183CC_ds_f l000183CC_ds_t
l000183CC_ds_f:
	r3 = 0x00000000
	goto l000183E4
	// succ:  l000183E4
l000183CC_ds_t:
	r3 = 0x00000000
	goto l00018404
	// succ:  l00018404
l000183E4:
	r3 = Mem0[r2 + 56:word32]
	r3 = r3 >>u 0x0000001C
	r3 = r3 & 0x00000001
	F = r3 == 0x00000000
	branch F l000183E4_ds_t
	// succ:  l000183E4_ds_f l000183E4_ds_t
l000183E4_ds_f:
	goto l000183FC
	// succ:  l000183FC
l000183E4_ds_t:
	goto l00018400
	// succ:  l00018400
l000183FC:
	r2 = Mem0[r2 + 72:word32]
	// succ:  l00018400
l00018400:
	r3 = 0x00000000
	// succ:  l00018404
l00018404:
	r2 = 0x00000001
	r3 = r3 | 0x0000C8A0
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r2 = r2 | 0x0000310C
	call fn00018F10 (retsize: 0;)
	r4 = Mem0[r2:word32]
	r6 = 0x00000000 - 4
	CV = cond(r6)
	r3 = Mem0[r4 + 1500:word32]
	r5 = Mem0[r3 + 80:word32]
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r5 = r5 & r6
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r4 = Mem0[r4 + 1584:word32]
	r4 = r4 & 0x00000003
	r4 = r4 | r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3 + 80:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r4 = Mem0[r2:word32]
	r6 = 0x0000FFFC
	r3 = Mem0[r4 + 1500:word32]
	r6 = r6 | 0x0000FFFF
	r5 = Mem0[r3 + 80:word32]
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r5 = r5 & r6
	r6 = 0x00000003
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r4 = Mem0[r4 + 1584:word32]
	r4 = r4 & r6
	r4 = r4 | r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3 + 80:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r3 = Mem0[r1:word32]
	r4 = 0x00000000 - 769
	CV = cond(r4)
	r3 = r3 & r4
	Mem0[r1:word32] = r3
	r3 = Mem0[r2:word32]
	r5 = Mem0[r1:word32]
	r4 = Mem0[r3 + 1584:word32]
	r3 = Mem0[r3 + 1500:word32]
	r4 = r4 & 0x00000300
	r4 = r4 | r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3 + 80:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r4 = Mem0[r2:word32]
	r6 = 0x00000000 - 1024
	CV = cond(r6)
	r3 = Mem0[r4 + 1500:word32]
	r5 = Mem0[r3 + 84:word32]
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r5 = r5 & r6
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r4 = Mem0[r4 + 1588:word32]
	r4 = r4 & 0x000003FF
	r4 = r4 | r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3 + 84:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r3 = Mem0[r1:word32]
	r4 = 0x00000000 - 12289
	CV = cond(r4)
	r3 = r3 & r4
	Mem0[r1:word32] = r3
	r3 = Mem0[r2:word32]
	r5 = Mem0[r1:word32]
	r4 = Mem0[r3 + 1588:word32]
	r3 = Mem0[r3 + 1500:word32]
	r4 = r4 & 0x00003000
	r4 = r4 | r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3 + 84:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r4 = Mem0[r2:word32]
	r6 = 0x0000FFFE
	r3 = Mem0[r4 + 1500:word32]
	r5 = Mem0[r3 + 88:word32]
	Mem0[r1:word32] = r5
	r5 = Mem0[r1:word32]
	r5 = r5 & r6
	r6 = 0x00000001
	Mem0[r1:word32] = r5
	r6 = r6 | 0x0000FFFF
	r5 = Mem0[r1:word32]
	r4 = Mem0[r4 + 1592:word32]
	r4 = r4 & r6
	r4 = r4 | r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3 + 88:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r4 = 0x0000FCFF
	r3 = Mem0[r1:word32]
	r4 = r4 | 0x0000FFFF
	r6 = 0x00000300
	r3 = r3 & r4
	Mem0[r1:word32] = r3
	r3 = Mem0[r2:word32]
	r5 = Mem0[r1:word32]
	r4 = Mem0[r3 + 1592:word32]
	r3 = Mem0[r3 + 1500:word32]
	r4 = r4 & r6
	r4 = r4 | r5
	Mem0[r1:word32] = r4
	r4 = Mem0[r1:word32]
	Mem0[r3 + 88:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -2
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r3 = Mem0[r2:word32]
	r5 = Mem0[r3 + 1596:word32]
	r4 = Mem0[r3 + 1500:word32]
	Mem0[r4 + 92:word32] = r5
	r5 = Mem0[r3 + 2208:word32]
	Mem0[r4 + 704:word32] = r5
	r5 = Mem0[r3 + 2212:word32]
	Mem0[r4 + 708:word32] = r5
	r5 = Mem0[r3 + 2216:word32]
	Mem0[r4 + 712:word32] = r5
	r5 = Mem0[r3 + 2224:word32]
	Mem0[r4 + 720:word32] = r5
	r3 = Mem0[r3 + 2232:word32]
	Mem0[r4 + 728:word32] = r3
	r3 = 0x00000000
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r4 = Mem0[r2:word32]
	r5 = Mem0[r4 + 1620:word32]
	r3 = Mem0[r4 + 1500:word32]
	Mem0[r3 + 116:word32] = r5
	r5 = Mem0[r4 + 1632:word32]
	Mem0[r3 + 128:word32] = r5
	r5 = Mem0[r4 + 1640:word32]
	Mem0[r3 + 136:word32] = r5
	r5 = Mem0[r4 + 1644:word32]
	Mem0[r3 + 140:word32] = r5
	r5 = Mem0[r4 + 1648:word32]
	Mem0[r3 + 144:word32] = r5
	r5 = Mem0[r4 + 1656:word32]
	Mem0[r3 + 152:word32] = r5
	r5 = Mem0[r4 + 1660:word32]
	Mem0[r3 + 156:word32] = r5
	r5 = Mem0[r4 + 1664:word32]
	Mem0[r3 + 160:word32] = r5
	r5 = Mem0[r4 + 1668:word32]
	Mem0[r3 + 164:word32] = r5
	r5 = Mem0[r4 + 1680:word32]
	Mem0[r3 + 176:word32] = r5
	r5 = Mem0[r4 + 1684:word32]
	Mem0[r3 + 180:word32] = r5
	r5 = Mem0[r4 + 1688:word32]
	Mem0[r3 + 184:word32] = r5
	r5 = Mem0[r4 + 1696:word32]
	Mem0[r3 + 192:word32] = r5
	r5 = Mem0[r4 + 1708:word32]
	Mem0[r3 + 204:word32] = r5
	r5 = Mem0[r3 + 256:word32]
	Mem0[r4 + 1760:word32] = r5
	r5 = Mem0[r4 + 1764:word32]
	Mem0[r3 + 260:word32] = r5
	r5 = Mem0[r4 + 1784:word32]
	Mem0[r3 + 280:word32] = r5
	r5 = Mem0[r4 + 1792:word32]
	Mem0[r3 + 288:word32] = r5
	r5 = Mem0[r4 + 1796:word32]
	Mem0[r3 + 292:word32] = r5
	r5 = Mem0[r4 + 1808:word32]
	Mem0[r3 + 304:word32] = r5
	r5 = Mem0[r4 + 1812:word32]
	Mem0[r3 + 308:word32] = r5
	r5 = Mem0[r4 + 1820:word32]
	Mem0[r3 + 316:word32] = r5
	r5 = Mem0[r4 + 1824:word32]
	Mem0[r3 + 320:word32] = r5
	r5 = Mem0[r4 + 1828:word32]
	Mem0[r3 + 324:word32] = r5
	r5 = Mem0[r4 + 1840:word32]
	Mem0[r3 + 336:word32] = r5
	r5 = Mem0[r4 + 1844:word32]
	Mem0[r3 + 340:word32] = r5
	r4 = Mem0[r4 + 1920:word32]
	Mem0[r3 + 416:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r4 = Mem0[r2:word32]
	r5 = Mem0[r4 + 1600:word32]
	r3 = Mem0[r4 + 1500:word32]
	Mem0[r3 + 96:word32] = r5
	r5 = Mem0[r4 + 1604:word32]
	Mem0[r3 + 100:word32] = r5
	r5 = Mem0[r4 + 1608:word32]
	Mem0[r3 + 104:word32] = r5
	r5 = Mem0[r4 + 1612:word32]
	Mem0[r3 + 108:word32] = r5
	r4 = Mem0[r4 + 1616:word32]
	Mem0[r3 + 112:word32] = r4
	r3 = 0x00000000
	r4 = 0x00000000 + -10
	CV = cond(r4)
	r3 = r3 | 0x0000C8A0
	call fn00018F10 (retsize: 0;)
	r2 = Mem0[r2:word32]
	r3 = Mem0[r2 + 1500:word32]
	r4 = Mem0[r2 + 2256:word32]
	Mem0[r3 + 752:word32] = r4
	r4 = Mem0[r2 + 2272:word32]
	Mem0[r3 + 768:word32] = r4
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r2 = Mem0[r2 + 2276:word32]
	Mem0[r3 + 772:word32] = r2
	r3 = 0x00000000
	r3 = r3 | 0x0000C768
	call fn00018F10 (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00018250_exit
fn00018250_exit:


// fn000187E8
// Return size: 0
void fn000187E8()
fn000187E8_entry:
	r1 = fp
	// succ:  l000187E8
l000187E8:
	r7 = r4 | r3
	Mem0[r1 - 4:word32] = r2
	r7 = r7 & 0x00000003
	r6 = 0x00000000 + 0
	CV = cond(r6)
	F = r7 != r6
	branch F l000187E8_ds_t
	// succ:  l000187E8_ds_f l000187E8_ds_t
l000187E8_ds_f:
	r1 = r1 - 4
	CV = cond(r1)
	goto l00018804
	// succ:  l00018804
l000187E8_ds_t:
	r1 = r1 - 4
	CV = cond(r1)
	goto l00018820
	// succ:  l00018820
l00018804:
	r6 = r5 >>u 0x00000002
	goto l00018834
	// succ:  l00018834
l0001880C:
	r7 = r3 + r6
	CV = cond(r7)
	r8 = (word32) Mem0[r8:byte]
	r6 = r6 + -1
	CV = cond(r6)
	Mem0[r7:byte] = SLICE(r8, byte, 0)
	r5 = r5 - 1
	CV = cond(r5)
	// succ:  l00018820
l00018820:
	F = r5 != 0x00000000
	branch F l00018820_ds_t
	// succ:  l00018820_ds_f l00018820_ds_t
l00018820_ds_f:
	r8 = r4 + r6
	CV = cond(r8)
	goto l0001882C
	// succ:  l0001882C
l00018820_ds_t:
	r8 = r4 + r6
	CV = cond(r8)
	goto l0001880C
	// succ:  l0001880C
l0001882C:
	r1 = r1 + -4
	CV = cond(r1)
	goto l00018898
	// succ:  l00018898
l00018834:
	F = r6 != 0x00000000
	goto l00018854
	// succ:  l00018854
l0001883C:
	r11 = r3 + r7
	CV = cond(r11)
	r8 = Mem0[r8:word32]
	r7 = r7 + -4
	CV = cond(r7)
	Mem0[r11:word32] = r8
	r6 = r6 - 1
	CV = cond(r6)
	F = r6 != 0x00000000
	// succ:  l00018854
l00018854:
	branch F l00018854_ds_t
	// succ:  l00018854_ds_f l00018854_ds_t
l00018854_ds_f:
	r8 = r4 + r7
	CV = cond(r8)
	goto l0001885C
	// succ:  l0001885C
l00018854_ds_t:
	r8 = r4 + r7
	CV = cond(r8)
	goto l0001883C
	// succ:  l0001883C
l0001885C:
	r2 = 0x00000000 - 4
	CV = cond(r2)
	r7 = r5 & r2
	r5 = r5 & 0x00000003
	r4 = r4 + r7
	CV = cond(r4)
	r7 = r3 + r7
	CV = cond(r7)
	goto l00018888
	// succ:  l00018888
l00018874:
	r8 = r7 + r6
	CV = cond(r8)
	r11 = (word32) Mem0[r11:byte]
	r6 = r6 + -1
	CV = cond(r6)
	Mem0[r8:byte] = SLICE(r11, byte, 0)
	r5 = r5 - 1
	CV = cond(r5)
	// succ:  l00018888
l00018888:
	F = r5 != 0x00000000
	branch F l00018888_ds_t
	// succ:  l00018888_ds_f l00018888_ds_t
l00018888_ds_f:
	r11 = r4 + r6
	CV = cond(r11)
	goto l00018894
	// succ:  l00018894
l00018888_ds_t:
	r11 = r4 + r6
	CV = cond(r11)
	goto l00018874
	// succ:  l00018874
l00018894:
	r1 = r1 + -4
	CV = cond(r1)
	// succ:  l00018898
l00018898:
	r11 = r3 | 0x00000000
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn000187E8_exit
fn000187E8_exit:


// fn000188A4
// Return size: 0
void fn000188A4()
fn000188A4_entry:
	r1 = fp
	// succ:  l000188A4
l000188A4:
	r6 = r3 | 0x00000000
	goto l000188B8
	// succ:  l000188B8
l000188AC:
	Mem0[r6:byte] = SLICE(r4, byte, 0)
	r5 = r5 - 1
	CV = cond(r5)
	r6 = r6 + -1
	CV = cond(r6)
	// succ:  l000188B8
l000188B8:
	F = r5 != 0x00000000
	branch F l000188B8_ds_t
	// succ:  l000188B8_ds_f l000188B8_ds_t
l000188B8_ds_f:
	goto l000188C4
	// succ:  l000188C4
l000188B8_ds_t:
	goto l000188AC
	// succ:  l000188AC
l000188C4:
	r11 = r3 | 0x00000000
	return
	// succ:  fn000188A4_exit
fn000188A4_exit:


// fn000188CC
// Return size: 0
void fn000188CC()
fn000188CC_entry:
	r1 = fp
	// succ:  l000188CC
l000188CC:
	r6 = r6 << 0x00000002
	r7 = r5 - 1
	CV = cond(r7)
fn000188CC_exit:


// fn00018918
// Return size: 0
void fn00018918()
fn00018918_entry:
	r1 = fp
	// succ:  l00018918
l00018918:
	r7 = r5 << 0x00000002
	r6 = r6 << 0x00000002
	r7 = r7 - 4
	CV = cond(r7)
	r8 = 0x00000000 - r6
	CV = cond(r8)
	r4 = r4 + r7
	CV = cond(r4)
	r7 = r5 - 1
	CV = cond(r7)
fn00018918_exit:


// fn00018964
// Return size: 0
void fn00018964()
fn00018964_entry:
	r1 = fp
	// succ:  l00018964
l00018964:
	Mem0[r1 - 8:word32] = r2
	r4 = 0x00000080
	r2 = r3 | 0x00000000
	r3 = Mem0[r3:word32]
	Mem0[r1 - 4:word32] = r9
	r3 = r3 & r4
	F = r3 == 0x00000000
	branch F l00018964_ds_t
	// succ:  l00018964_ds_f l00018964_ds_t
l00018964_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l00018988
	// succ:  l00018988
l00018964_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l00018A4C
	// succ:  l00018A4C
l00018988:
	r3 = 0x00000000 + -13
	CV = cond(r3)
	call fn00018C24 (retsize: 0;)
	r3 = Mem0[r2 + 24:word32]
	F = r3 == 0x00000000
	branch F l00018988_ds_t
	// succ:  l00018988_ds_f l00018988_ds_t
l00018988_ds_f:
	goto l000189A0
	// succ:  l000189A0
l00018988_ds_t:
	goto l00018A4C
	// succ:  l00018A4C
l000189A0:
	r3 = r3 & 0x00000002
	F = r3 == 0x00000000
	branch F l000189A0_ds_t
	// succ:  l000189A0_ds_f l000189A0_ds_t
l000189A0_ds_f:
	r3 = 0x000001F0
	goto l000189B0
	// succ:  l000189B0
l000189A0_ds_t:
	r3 = 0x000001F0
	goto l000189C4
	// succ:  l000189C4
l000189B0:
	r5 = 0x00000008
	r3 = r3 | 0x00000CC4
	r4 = Mem0[r3:word32]
	r4 = r4 | r5
	Mem0[r3:word32] = r4
	// succ:  l000189C4
l000189C4:
	r3 = Mem0[r2 + 24:word32]
	r3 = r3 & 0x00000020
	F = r3 == 0x00000000
	branch F l000189C4_ds_t
	// succ:  l000189C4_ds_f l000189C4_ds_t
l000189C4_ds_f:
	r3 = 0x000001F0
	goto l000189D8
	// succ:  l000189D8
l000189C4_ds_t:
	r3 = 0x000001F0
	goto l000189EC
	// succ:  l000189EC
l000189D8:
	r5 = 0x00000020
	r3 = r3 | 0x00000CC4
	r4 = Mem0[r3:word32]
	r4 = r4 | r5
	Mem0[r3:word32] = r4
	// succ:  l000189EC
l000189EC:
	r3 = Mem0[r2 + 24:word32]
	r3 = r3 & 0x00000040
	F = r3 == 0x00000000
	branch F l000189EC_ds_t
	// succ:  l000189EC_ds_f l000189EC_ds_t
l000189EC_ds_f:
	r3 = 0x000001F0
	goto l00018A00
	// succ:  l00018A00
l000189EC_ds_t:
	r3 = 0x000001F0
	goto l00018A14
	// succ:  l00018A14
l00018A00:
	r5 = 0x00000040
	r3 = r3 | 0x00000CC4
	r4 = Mem0[r3:word32]
	r4 = r4 | r5
	Mem0[r3:word32] = r4
	// succ:  l00018A14
l00018A14:
	r2 = Mem0[r2 + 24:word32]
	r2 = r2 & 0x00000080
	F = r2 == 0x00000000
	branch F l00018A14_ds_t
	// succ:  l00018A14_ds_f l00018A14_ds_t
l00018A14_ds_f:
	r4 = 0x00000800
	goto l00018A28
	// succ:  l00018A28
l00018A14_ds_t:
	r4 = 0x00000800
	goto l00018A3C
	// succ:  l00018A3C
l00018A28:
	r2 = 0x000001F0
	r2 = r2 | 0x00000CC4
	r3 = Mem0[r2:word32]
	r3 = r3 | r4
	Mem0[r2:word32] = r3
	// succ:  l00018A3C
l00018A3C:
	r3 = 0x00000000 + -25
	CV = cond(r3)
	call fn00018C24 (retsize: 0;)
	r3 = 0x00000000 + -26
	CV = cond(r3)
	call fn00018C24 (retsize: 0;)
l00018A4C:
	r1 = r1 + -8
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00018964_exit
fn00018964_exit:


// fn00018A60
// Return size: 0
void fn00018A60()
fn00018A60_entry:
	r1 = fp
	// succ:  l00018A60
l00018A60:
	Mem0[r1 - 8:word32] = r2
	r4 = Mem0[r3:word32]
	r2 = 0x00000080
	Mem0[r1 - 4:word32] = r9
	r4 = r4 & r2
	F = r4 == 0x00000000
	branch F l00018A60_ds_t
	// succ:  l00018A60_ds_f l00018A60_ds_t
l00018A60_ds_f:
	r1 = r1 - 8
	CV = cond(r1)
	goto l00018A80
	// succ:  l00018A80
l00018A60_ds_t:
	r1 = r1 - 8
	CV = cond(r1)
	goto l00018AB0
	// succ:  l00018AB0
l00018A80:
	r3 = Mem0[r3 + 24:word32]
	F = r3 == 0x00000000
	branch F l00018A80_ds_t
	// succ:  l00018A80_ds_f l00018A80_ds_t
l00018A80_ds_f:
	goto l00018A90
	// succ:  l00018A90
l00018A80_ds_t:
	goto l00018AB0
	// succ:  l00018AB0
l00018A90:
	r3 = 0x000001F0
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r3 = r3 | 0x00000CC4
	Mem0[r3:word32] = r2
	r3 = 0x00000000 + -25
	CV = cond(r3)
	call fn00018C68 (retsize: 0;)
	r3 = 0x00000000 + -25
	CV = cond(r3)
	call fn00018C68 (retsize: 0;)
l00018AB0:
	r1 = r1 + -8
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00018A60_exit
fn00018A60_exit:


// fn00018AC4
// Return size: 0
void fn00018AC4()
fn00018AC4_entry:
	r1 = fp
	// succ:  l00018AC4
l00018AC4:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r1 = r1 - 16
	CV = cond(r1)
	r2 = r3 | 0x00000000
	r3 = 0x00000000 + 0
	CV = cond(r3)
	r4 = 0x000001C2
	Mem0[r1 + 4:word32] = r3
	r3 = 0x00000001
	r4 = r4 | 0x00000800
	r3 = r3 | 0x0000310C
	r5 = 0x00000000 + -151
	CV = cond(r5)
	r3 = Mem0[r3:word32]
	r6 = 0x00000000 + -1
	CV = cond(r6)
	call fn000188CC (retsize: 0;)
	r3 = 0x00000000
	r4 = 0x00000000 + -1
	CV = cond(r4)
	r3 = r3 | 0x0000C768
	call fn00018F10 (retsize: 0;)
	r3 = 0x00000000 + 0
	CV = cond(r3)
	goto l00018BB8
	// succ:  l00018BB8
l00018B14:
	r3 = Mem0[r1 + 4:word32]
	r4 = r3 + r3
	CV = cond(r4)
	r3 = r4 + r3
	CV = cond(r3)
	r3 = r3 << 0x00000002
	r3 = r2 + r3
	CV = cond(r3)
	r3 = Mem0[r3 + 120:word32]
	r6 = Mem0[r3:word32]
	r5 = Mem0[r1 + 4:word32]
	r3 = Mem0[r1 + 4:word32]
	r7 = r5 + r5
	CV = cond(r7)
	r4 = Mem0[r1 + 4:word32]
	r5 = r7 + r5
	CV = cond(r5)
	r3 = r3 + -1
	CV = cond(r3)
	r5 = r5 << 0x00000002
	r5 = r2 + r5
	CV = cond(r5)
	r5 = Mem0[r5 + 124:word32]
	r5 = r5 ^ 0x0000FFFF
	r5 = r6 & r5
	r6 = r4 + r4
	CV = cond(r6)
	r4 = r6 + r4
	CV = cond(r4)
	r6 = r3 + r3
	CV = cond(r6)
	r4 = r4 << 0x00000002
	r3 = r6 + r3
	CV = cond(r3)
	r3 = r3 << 0x00000002
	r4 = r2 + r4
	CV = cond(r4)
	r3 = r2 + r3
	CV = cond(r3)
	r4 = Mem0[r4 + 124:word32]
	r3 = Mem0[r3 + 116:word32]
	r4 = r4 & r3
	r3 = r5 | r4
	Mem0[r1:word32] = r3
	r3 = Mem0[r1 + 4:word32]
	r4 = r3 + r3
	CV = cond(r4)
	r3 = r4 + r3
	CV = cond(r3)
	r4 = Mem0[r1:word32]
	r3 = r3 << 0x00000002
	r3 = r2 + r3
	CV = cond(r3)
	r3 = Mem0[r3 + 120:word32]
	Mem0[r3:word32] = r4
	r3 = Mem0[r1 + 4:word32]
	r3 = r3 + -1
	CV = cond(r3)
	// succ:  l00018BB8
l00018BB8:
	Mem0[r1 + 4:word32] = r3
	r3 = Mem0[r1 + 4:word32]
	F = r3 <= 1
	branch F l00018BB8_ds_t
	// succ:  l00018BB8_ds_f l00018BB8_ds_t
l00018BB8_ds_f:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00018BCC
	// succ:  l00018BCC
l00018BB8_ds_t:
	r11 = 0x00000000 + 0
	CV = cond(r11)
	goto l00018B14
	// succ:  l00018B14
l00018BCC:
	r1 = r1 + -16
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00018AC4_exit
fn00018AC4_exit:


// fn00018BDC
// Return size: 0
void fn00018BDC()
fn00018BDC_entry:
	r1 = fp
	// succ:  l00018BDC
l00018BDC:
	r3 = 0x000001C2
	Mem0[r1 - 4:word32] = r9
	r4 = r3 | 0x00000068
	r1 = r1 - 4
	CV = cond(r1)
	r5 = Mem0[r4:word32]
	r3 = r3 | 0x00000800
	r5 = r5 | 0x00000020
	r6 = 0x00000000 + -1
	CV = cond(r6)
	Mem0[r4:word32] = r5
	r4 = 0x00000001
	r5 = 0x00000000 + -151
	CV = cond(r5)
	r4 = r4 | 0x0000310C
	r4 = Mem0[r4:word32]
	call fn00018918 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn00018BDC_exit
fn00018BDC_exit:


// fn00018C24
// Return size: 0
void fn00018C24()
fn00018C24_entry:
	r1 = fp
	// succ:  l00018C24
l00018C24:
	F = r3 != 0x00000000
	branch F l00018C24_ds_t
	// succ:  l00018C24_ds_f l00018C24_ds_t
l00018C24_ds_f:
	r4 = 0x000001F0
	goto l00018C30
	// succ:  l00018C30
l00018C24_ds_t:
	r4 = 0x000001F0
	goto l00018C40
	// succ:  l00018C40
l00018C30:
	r4 = r4 | 0x00000C10
	r5 = Mem0[r4:word32]
	r5 = 0x00000000 + -1
	CV = cond(r5)
	Mem0[r4:word32] = r5
	// succ:  l00018C40
l00018C40:
	r4 = 0x000001F0
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r4 = r4 | 0x00000C40
fn00018C24_exit:


// fn00018C68
// Return size: 0
void fn00018C68()
fn00018C68_entry:
	r1 = fp
	// succ:  l00018C68
l00018C68:
	r6 = 0x00000000 + -1
	CV = cond(r6)
	r4 = 0x000001F0
fn00018C68_exit:


// fn00018F10
// Return size: 0
void fn00018F10()
fn00018F10_entry:
	r1 = fp
	// succ:  l00018F10
l00018F10:
	Mem0[r1 - 4:word32] = r9
	r1 = r1 - 4
	CV = cond(r1)
	r5 = r3 | 0x00000000
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r3 = r4 | 0x00000000
	call r5 (retsize: 0;)
	return
	// succ:  fn00018F10_exit
fn00018F10_exit:


// fn000190F8
// Return size: 0
void fn000190F8()
fn000190F8_entry:
	r1 = fp
	// succ:  l000190F8
l000190F8:
	Mem0[r1 - 4:word32] = r9
	Mem0[r1 - 8:word32] = r2
	r3 = 0x00000000 + -54
	CV = cond(r3)
	r1 = r1 - 28
	CV = cond(r1)
	r2 = 0x00000000 + -64
	CV = cond(r2)
	Mem0[r1 + 18:byte] = SLICE(r3, byte, 0)
	Mem0[r1 + 19:byte] = SLICE(r3, byte, 0)
	r3 = r1 + -18
	CV = cond(r3)
	Mem0[r1 + 16:byte] = SLICE(r2, byte, 0)
	Mem0[r1:word32] = r3
	r3 = r1 + -16
	CV = cond(r3)
	r2 = 0x00000000 + -65
	CV = cond(r2)
	Mem0[r1 + 4:word32] = r3
	r3 = 0x00000001
	r4 = r1 | 0x00000000
	r3 = r3 | 0x00003760
	Mem0[r1 + 17:byte] = SLICE(r2, byte, 0)
	Mem0[r1 + 8:word32] = r3
	r3 = 0x00000000 + -2
	CV = cond(r3)
	Mem0[r1 + 12:word32] = r3
	r3 = 0x00000000
	r3 = r3 | 0x0000A1DC
	call fn00018F10 (retsize: 0;)
	r1 = r1 + -28
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000190F8_exit
fn000190F8_exit:


// fn00019168
// Return size: 0
void fn00019168()
fn00019168_entry:
	r1 = fp
	// succ:  l00019168
l00019168:
	Mem0[r1 - 12:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 8:word32] = r14
	r2 = r2 | 0x0000310C
	r14 = 0x000001C1
	r3 = Mem0[r2:word32]
	Mem0[r1 - 4:word32] = r9
	r4 = r14 | 0x0000E000
	r1 = r1 - 12
	CV = cond(r1)
	r3 = r3 + -612
	CV = cond(r3)
	r5 = 0x00000000 + -28
	CV = cond(r5)
	r6 = 0x00000000 + -1
	CV = cond(r6)
	call fn000188CC (retsize: 0;)
	r3 = Mem0[r2:word32]
	r4 = r14 | 0x0000E100
	r3 = r3 + -724
	CV = cond(r3)
	r5 = 0x00000000 + -63
	CV = cond(r5)
	r6 = 0x00000000 + -1
	CV = cond(r6)
	call fn000188CC (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn00019168_exit
fn00019168_exit:


// fn000191CC
// Return size: 0
void fn000191CC()
fn000191CC_entry:
	r1 = fp
	// succ:  l000191CC
l000191CC:
	Mem0[r1 - 12:word32] = r2
	r2 = 0x00000001
	Mem0[r1 - 8:word32] = r14
	r2 = r2 | 0x0000310C
	r14 = 0x000001C1
	r4 = Mem0[r2:word32]
	Mem0[r1 - 4:word32] = r9
	r3 = r14 | 0x0000E000
	r1 = r1 - 12
	CV = cond(r1)
	r4 = r4 + -612
	CV = cond(r4)
	r5 = 0x00000000 + -28
	CV = cond(r5)
	r6 = 0x00000000 + -1
	CV = cond(r6)
	call fn00018918 (retsize: 0;)
	r4 = Mem0[r2:word32]
	r3 = r14 | 0x0000E100
	r4 = r4 + -724
	CV = cond(r4)
	r5 = 0x00000000 + -63
	CV = cond(r5)
	r6 = 0x00000000 + -1
	CV = cond(r6)
	call fn00018918 (retsize: 0;)
	r1 = r1 + -12
	CV = cond(r1)
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r9 = Mem0[r1 - 4:word32]
	r2 = Mem0[r1 - 12:word32]
	r14 = Mem0[r1 - 8:word32]
	return
	// succ:  fn000191CC_exit
fn000191CC_exit:


// fn00019230
// Return size: 0
void fn00019230()
fn00019230_entry:
	r1 = fp
	// succ:  l00019230
l00019230:
	r3 = 0x00000001
	r4 = 0x000001C2
	r3 = r3 | 0x0000310C
	Mem0[r1 - 4:word32] = r9
	r3 = Mem0[r3:word32]
	r1 = r1 - 4
	CV = cond(r1)
	r3 = r3 + -984
	CV = cond(r3)
	r4 = r4 | 0x00003404
	r5 = 0x00000000 + -6
	CV = cond(r5)
	r6 = 0x00000000 + -3
	CV = cond(r6)
	call fn000188CC (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn00019230_exit
fn00019230_exit:


// fn0001926C
// Return size: 0
void fn0001926C()
fn0001926C_entry:
	r1 = fp
	// succ:  l0001926C
l0001926C:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x0000310C
	r1 = r1 - 4
	CV = cond(r1)
	r4 = Mem0[r3:word32]
	r3 = 0x000001C2
	r4 = r4 + -984
	CV = cond(r4)
	r3 = r3 | 0x00003408
	r5 = 0x00000000 + -6
	CV = cond(r5)
	r6 = 0x00000000 + -3
	CV = cond(r6)
	call fn00018918 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn0001926C_exit
fn0001926C_exit:


// fn000192A8
// Return size: 0
void fn000192A8()
fn000192A8_entry:
	r1 = fp
	// succ:  l000192A8
l000192A8:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x0000310C
	r1 = r1 - 4
	CV = cond(r1)
	r3 = Mem0[r3:word32]
	r4 = 0x000001C0
	r3 = r3 + -1212
	CV = cond(r3)
	r5 = 0x00000000 + -61
	CV = cond(r5)
	r6 = 0x00000000 + -1
	CV = cond(r6)
	call fn000188CC (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn000192A8_exit
fn000192A8_exit:


// fn000192E0
// Return size: 0
void fn000192E0()
fn000192E0_entry:
	r1 = fp
	// succ:  l000192E0
l000192E0:
	r3 = 0x00000001
	Mem0[r1 - 4:word32] = r9
	r3 = r3 | 0x0000310C
	r1 = r1 - 4
	CV = cond(r1)
	r4 = Mem0[r3:word32]
	r5 = 0x00000000 + -61
	CV = cond(r5)
	r3 = 0x000001C0
	r4 = r4 + -1212
	CV = cond(r4)
	r6 = 0x00000000 + -1
	CV = cond(r6)
	call fn00018918 (retsize: 0;)
	r1 = r1 + -4
	CV = cond(r1)
	r9 = Mem0[r1 - 4:word32]
	r11 = 0x00000000 + 0
	CV = cond(r11)
	return
	// succ:  fn000192E0_exit
fn000192E0_exit:


// fn00019318
// Return size: 0
void fn00019318()
fn00019318_entry:
	r1 = fp
	// succ:  l00019318
l00019318:
	r4 = 0x00000001
	r3 = 0x00000172
	r4 = r4 | 0x00003764
	r5 = Mem0[r3 + 8:word32]
	Mem0[r4:word32] = r3
	r4 = 0x00000001
	r11 = 0x00000000 + 0
	CV = cond(r11)
	r4 = r4 | 0x0000310C
	r4 = Mem0[r4:word32]
	Mem0[r4 + 1472:word32] = r5
	r5 = Mem0[r3 + 12:word32]
	Mem0[r4 + 1476:word32] = r5
	r3 = Mem0[r3 + 32:word32]
	Mem0[r4 + 1476:word32] = r3
	return
	// succ:  fn00019318_exit
fn00019318_exit:


// fn00019358
// Return size: 0
void fn00019358()
fn00019358_entry:
	r1 = fp
	// succ:  l00019358
l00019358:
	r3 = 0x00000001
	r4 = 0x00000001
	r3 = r3 | 0x00003764
	Mem0[r1 - 4:word32] = r2
	r3 = Mem0[r3:word32]
	r2 = 0x00000000 + 0
	CV = cond(r2)
	r4 = r4 | 0x0000310C
	Mem0[r3:word32] = r2
	r4 = Mem0[r4:word32]
	r1 = r1 - 4
	CV = cond(r1)
	r5 = Mem0[r4 + 1496:word32]
	r11 = r2 | 0x00000000
	Mem0[r3 + 32:word32] = r5
	r5 = Mem0[r4 + 1472:word32]
	Mem0[r3 + 8:word32] = r5
	r4 = Mem0[r4 + 1476:word32]
	Mem0[r3 + 12:word32] = r4
	r4 = 0x00000000 + -1
	CV = cond(r4)
	Mem0[r3:word32] = r4
	r1 = r1 + -4
	CV = cond(r1)
	r2 = Mem0[r1 - 4:word32]
	return
	// succ:  fn00019358_exit
fn00019358_exit:


