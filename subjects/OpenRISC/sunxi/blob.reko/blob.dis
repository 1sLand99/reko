word32 fn000043D0(word32 r3, word32 r4, word32 r5, word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r14 r15
// Trashed: CV r11 r12 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn000043D0_entry:
l000043D0:
	branch r5 == 0 l000043D0_ds_t
l000043D0_ds_t:
l00004480:
	word32 r2_18 = (r3 << 4) + 0x1F01540 + (r4 << 2)
	branch Mem6[r2_18:word32] == 0xFF l00004480_ds_t
l00004480_ds_t:
l00004480_ds_f:
l000044A0:
	Mem26[r2_18:word32] = -255_i
	word32 r2_31 = fn0000C8A0(-30_i, r15, out r14, out r15)
l000044AC:
	branch Mem26[r2_31:word32] != 0xFF l000044AC_ds_t
l000044AC_ds_t:
l000044AC_ds_f:
l000043D0_ds_f:
l000043EC:
	word32 r2_55 = (r3 << 4) + 0x1F01540 + (r4 << 2)
	branch Mem6[r2_55:word32] == 0 l000043EC_ds_t
l000043EC_ds_t:
l000044BC:
l000043EC_ds_f:
l0000440C:
	Mem67[r2_55:word32] = -254_i
	word32 r15_80
	word32 r14_268
	Mem88[fn0000C8A0(-20_i, r15, out r14_268, out r15_80):word32] = -248_i
	word32 r15_101
	word32 r14_269
	Mem109[fn0000C8A0(-10_i, r15_80, out r14_269, out r15_101):word32] = -224_i
	word32 r15_122
	word32 r14_270
	Mem130[fn0000C8A0(-10_i, r15_101, out r14_270, out r15_122):word32] = -192_i
	word32 r15_143
	word32 r14_271
	Mem151[fn0000C8A0(-10_i, r15_122, out r14_271, out r15_143):word32] = -128_i
	word32 r15_164
	word32 r14_272
	Mem172[fn0000C8A0(-10_i, r15_143, out r14_272, out r15_164):word32] = 0_i
	word32 r2_176 = fn0000C8A0(-20_i, r15_164, out r14, out r15)
l00004468:
	branch Mem172[r2_176:word32] != 0 l00004468_ds_t
l00004468_ds_t:
l00004468_ds_f:
l00004478:
l000044C0:
	r15Out = r15
	return r14
fn000043D0_exit:


void fn000044D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn000044D0_entry:
l000044D0:
	Mem9[0x13158:word32] = 0_i
	return
fn000044D0_exit:


word32 fn00004570(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r2 r3 r5 r6 r7 r8
// Preserved:
fn00004570_entry:
l00004570:
	branch Mem5[0x13158:word32] > 3_i l00004570_ds_t
l00004570_ds_t:
l00004570_ds_f:
l00004590:
	Mem28[0x1F01C0C:word32] = -1_i << Mem21[0x13158:word32] | Mem5[0x1F01C0C:word32]
	Mem35[Mem28[0x13158:word32] + 0x3E0382 << 3:word32] = r3
	Mem40[(Mem35[0x13158:word32] << 3) + 0x1F01C14:word32] = r4
	Mem45[0x13158:word32] = Mem40[0x13158:word32] + -1_i
l00004600:
	return dwLoc14
fn00004570_exit:


void fn0000460C(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r1
// Trashed: CV r1 r11 r4 r5 r7
// Preserved:
fn0000460C_entry:
l0000460C:
	word32 r5_11
	word32 r7_15
	branch r3 >>u 2 == 0 l0000460C_ds_t
l0000460C_ds_t:
l00004640:
	r5_11 = 0x1700080
	r7_15 = Mem0[0x1700080:word32]
l0000460C_ds_f:
l00004620:
	r3 = r3 - 4_i
	r5_11 = 0x1700084
	r7_15 = Mem0[0x1700084:word32]
l00004658:
	Mem43[r5_11:word32] = (r4 & 1) << r3 | (-1_i << r3 ^ 0xFFFF) & r7_15
	return
fn0000460C_exit:


word32 fn000046C0(ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r1 r11 r12
// Trashed: CV r1 r11 r12 r3 r4 r5
// Preserved:
fn000046C0_entry:
l000046C0:
	Mem14[0x1F01E80:word32] = Mem0[0x1F01E80:word32] | 2
l000046E8:
	branch (Mem14[0x1F01E80:word32] & 2) != 0 l000046E8_ds_t
l000046E8_ds_t:
l000046E8_ds_f:
l000046FC:
	word32 r11_29 = Mem26[0x1F01E88:word32]
	r12Out = Mem14[0x1F01E84:word32]
	return r11_29
fn000046C0_exit:


word32 fn0000473C(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r2 r4 r5
// Preserved:
fn0000473C_entry:
l0000473C:
	Mem20[0x1700004:word32] = r3 & 1 | Mem5[0x1700004:word32] & 0xFFFFFFFE
	return dwLoc14
fn0000473C_exit:


void fn00004788()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r3 r4
// Preserved: r1
fn00004788_entry:
l00004788:
l00004790:
	branch (Mem0[0x1700030:word32] & 1) == 0 l00004790_ds_t
l00004790_ds_t:
l00004790_ds_f:
l000047A4:
	return
fn00004788_exit:


void fn000047AC(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r1 r2 r4 r5
// Preserved:
fn000047AC_entry:
l000047AC:
	Mem19[0x1700000:word32] = r3 & 0x1F | Mem5[0x1700000:word32] & 0xFFFFFFE0
	return
fn000047AC_exit:


void fn000047F4(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r3 r4 r5
// Preserved: r1
fn000047F4_entry:
l000047F4:
	branch r3 == 0 l000047F4_ds_t
l000047F4_ds_t:
l00004814:
	Mem7[0x1700080:word32] = r3
l000047F4_ds_f:
l00004800:
	branch !(r3 == 1) l00004800_ds_t
l00004800_ds_t:
l00004800_ds_f:
l0000480C:
l00004824:
	Mem16[0x1700080:word32] = 0x11101100
	Mem19[0x1700020:word32] = -15_i
l0000483C:
	return
fn000047F4_exit:


void fn00004844()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r7
// Preserved: r1 r2 r9
fn00004844_entry:
l00004844:
	word32 r2_12 = fn0000473C(-1_i)
	fn0000AEDC(0xB000)
	fn00004788()
	fn0000AEDC(0xB001)
	word32 r1_11 = <invalid>
	Mem26[r1_11:word32] = Mem6[0x1700020:word32]
	Mem29[r1_11:word32] = Mem26[r1_11:word32] & r2_12
	Mem31[0x1700020:word32] = Mem29[r1_11:word32]
	fn0000460C(0_i, 0)
	word32 r1_35 = <invalid>
	Mem45[r1_35:word32] = Mem31[0x1F01C30:word32]
	Mem48[r1_35:word32] = Mem45[r1_35:word32] & r2_12
	Mem50[0x1F01C30:word32] = Mem48[r1_35:word32]
	fn0000460C(0_i, 0)
	fn0000460C(-1_i, 0_i)
	fn0000460C(-2_i, 0_i)
	fn0000460C(-3_i, 0_i)
l00004904_thunk_fn0000AEDC:
	fn0000AEDC(0xB002)
	return
fn00004844_exit:


word32 fn0000490C(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000490C_entry:
l0000490C:
	fn000047F4(0_i)
	fn0000AEDC(0xB003)
	Mem20[0x1F01D40:word32] = 0_i
	fn0000C768(-1_i)
	word32 r2_36 = fn0000B950(-1_i)
	fn0000AEDC(0xB004)
	word32 r15_53
	fn000043D0(r2_36, r2_36, r2_36, r15, out r15_53)
l00004970_thunk_fn0000AEDC:
	fn0000AEDC(0xB005)
	return r15_53
fn0000490C_exit:


void fn00004978()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r7
// Preserved: r1 r9
fn00004978_entry:
l00004978:
	fn0000AEDC(0xB00C)
	Mem13[0x1F01C30:word32] = Mem5[0x1F01C30:word32] | 1
	fn0000460C(0_i, -3_i)
	fn0000AEDC(0xB00D)
	return
fn00004978_exit:


word32 fn000049C0(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r2
// Trashed: CV r1 r2 r4 r5
// Preserved:
fn000049C0_entry:
l000049C0:
	Mem17[r4 + 0x2E0014 << 3:word32] = r3
	Mem18[(r4 << 3) + 0x17000A4:word32] = 0_i
	return dwLoc0C
fn000049C0_exit:


void fn00004A00(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r1 r2 r3 r5 r7
// Preserved:
fn00004A00_entry:
l00004A00:
	word32 r3_9 = (r3 << 4) + 0x1700000
	Mem28[r3_9:word32] = r5 << 0x18 >> 0x18 << r4 + -24_i | (-1_i << r4 + -24_i ^ 0xFFFF) & Mem6[r3_9:word32]
	return
fn00004A00_exit:


word32 fn00004A6C(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn00004A6C_entry:
l00004A6C:
	word32 r15_25
	word32 r14_24 = fn000043D0(0_i, 0, -1_i, r15, out r15_25)
	fn0000AEDC(0xB006)
	fn0000B950(-1_i)
	word32 r2_46 = fn0000C768(-1_i)
	fn0000AEDC(0xB007)
	Mem57[0x1F01D40:word32] = r2_46
	fn0000460C(0_i, 0)
	fn000047F4(0_i)
	fn0000AEDC(0xB008)
	fn000047AC(0_i)
	fn0000AEDC(0xB009)
	word32 r2_90 = fn0000473C(0_i)
	fn0000AEDC(0xB00A)
	fn000047F4(r2_90)
	fn00004A00(0_i, 0, fn000049C0(r14_24, 0_i))
	fn0000AEDC(0xB00B)
	return r15_25
fn00004A6C_exit:


void fn00004B44(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r26 r9
fn00004B44_entry:
l00004B44:
	word32 r14_16 = (r3 << 2) + 0x1700080
	word32 r2_18 = -1_i << r4
	Mem32[r14_16:word32] = (r2_18 ^ 0xFFFF) & Mem15[r14_16:word32]
	word32 r16_37 = (r3 << 2) + 0x1F01C30
	Mem42[r16_37:word32] = (r2_18 ^ 0xFFFF) & Mem32[r16_37:word32]
	fn00004A00(r3, r4, 0xFFFFFFFF)
	word32 r15_62
	fn000043D0(r3, r4, 0xFFFFFFFF, r15, out r15_62)
	word32 r22_71 = (r3 << 2) + 0x1F01500
	Mem75[r22_71:word32] = (r2_18 ^ 0xFFFF) & Mem42[r22_71:word32]
	__csync()
	word32 r14_81
	word32 r15_127
	word32 r2_78 = fn0000C8A0(0xFFFFFFFF, r15_62, out r14_81, out r15_127)
	Mem96[r16_37:word32] = r2_78 | Mem75[r16_37:word32]
	Mem99[r14_81:word32] = Mem96[r14_81:word32] | r2_78
	Mem104[0x1700020:word32] = r2_78 | Mem99[0x1700020:word32]
	return
fn00004B44_exit:


void fn00004C48(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r16 r18 r2 r9
fn00004C48_entry:
l00004C48:
	word32 r5_16 = (r3 << 2) + 0x1700030
	word32 r3_21 = -1_i << r4 + -16_i
l00004C84:
	branch (r3_21 & Mem23[r5_16:word32]) == 0 l00004C84_ds_t
l00004C84_ds_t:
l00004C84_ds_f:
l00004C98:
	word32 r5_36 = -1_i << r4
	Mem41[0x1700020:word32] = (r5_36 ^ 0xFFFF) & Mem23[0x1700020:word32]
	word32 r4_45 = (r3 << 2) + 0x1F01500
	Mem49[r4_45:word32] = Mem41[r4_45:word32] | r5_36
	__csync()
	word32 r14_56
	word32 r15_62
	word32 r2_53 = fn0000C8A0(-1_i, r15, out r14_56, out r15_62)
	Mem78[r14_56 + 0x1700080:word32] = Mem49[r14_56 + 0x1700080:word32] & (r5_36 ^ 0xFFFF)
	Mem84[r14_56 + 0x1F01C30:word32] = Mem78[r14_56 + 0x1F01C30:word32] & (r5_36 ^ 0xFFFF)
l00004D28_thunk_fn000043D0:
	word32 r15_116
	fn000043D0(r3, r2_53, 0_i, r15_62, out r15_116)
	return
fn00004C48_exit:


word32 fn00004D60(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00004D60_entry:
l00004D60:
	word32 r5_5 = Mem0[r3 + 84_i:word32]
	word32 r4_6 = Mem0[r3 + 88_i:word32]
	word32 r3_18 = (r4_6 & 0xF) * 2 | (r5_5 & 0xF) << 9
	word32 r2_22 = 0x1C63310
l00004D9C:
	Mem30[r2_22:word32] = Mem26[r2_22:word32] | r3_18
	r2_22 = r2_22 + -4_i
	branch r2_22 != 0x1C63334 l00004D9C_ds_t
l00004D9C_ds_t:
l00004D9C_ds_f:
l00004DC0:
	word32 r3_42 = (r4_6 & 0xF0) >>u 3 | (r5_5 & 0xF0) << 5
	word32 r2_44 = 0x1C63390
l00004DDC:
	Mem52[r2_44:word32] = Mem46[r2_44:word32] | r3_42
	r2_44 = r2_44 + -4_i
	branch r2_44 != 0x1C633B4 l00004DDC_ds_t
l00004DDC_ds_t:
l00004DDC_ds_f:
l00004E00:
	word32 r3_62 = (r4_6 & 0xF00) >>u 7 | (r5_5 & 0xF00) << 1
	word32 r2_64 = 0x1C63410
l00004E1C:
	Mem72[r2_64:word32] = Mem66[r2_64:word32] | r3_62
	r2_64 = r2_64 + -4_i
	branch r2_64 != 0x1C63434 l00004E1C_ds_t
l00004E1C_ds_t:
l00004E1C_ds_f:
l00004E40:
	word32 r2_84 = (r4_6 & 0xF000) >>u 0xB | (r5_5 & 0xF000) >>u 3
	word32 r6_85 = 0x1C63490
l00004E58:
	Mem93[r6_85:word32] = Mem87[r6_85:word32] | r2_84
	r6_85 = r6_85 + -4_i
	branch r6_85 != 0x1C634B4 l00004E58_ds_t
l00004E58_ds_t:
l00004E58_ds_f:
l00004E7C:
	Mem112[0x1C63100:word32] = Mem93[0x1C63100:word32] & 0xFBFFFFFF
	word32 r12_106 = (r5_5 & 0xF0000) >>u 0x10
	word32 r8_114 = r12_106 << 9 | (r4_6 & 0xF0000) >>u 0x10
	Mem119[0x1C63334:word32] = r8_114 | Mem112[0x1C63334:word32]
	Mem125[0x1C63338:word32] = r8_114 | Mem119[0x1C63338:word32]
	word32 r11_126 = (r5_5 & 0xF00000) >>u 0x14
	word32 r8_133 = r11_126 << 9 | (r4_6 & 0xF00000) >>u 0x14
	Mem135[0x1C633B4:word32] = r8_133 | Mem125[0x1C633B4:word32]
	Mem140[0x1C633B8:word32] = r8_133 | Mem135[0x1C633B8:word32]
	word32 r8_143 = (r5_5 & 0xF000000) >>u 0x18
	word32 r13_149 = r8_143 << 9 | (r4_6 & 0xF000000) >>u 0x18
	Mem153[0x1C63434:word32] = r13_149 | Mem140[0x1C63434:word32]
	Mem158[0x1C63438:word32] = r13_149 | Mem153[0x1C63438:word32]
	word32 r4_162 = r5_5 >>u 0x1C << 9 | r4_6 >>u 0x1C
	Mem164[r6_85:word32] = r4_162 | Mem158[r6_85:word32]
	Mem168[0x1C634B8:word32] = r4_162 | Mem164[0x1C634B8:word32]
	Mem172[0x1C6333C:word32] = r12_106 << 0x19 | Mem168[0x1C6333C:word32]
	Mem176[0x1C633BC:word32] = r11_126 << 0x19 | Mem172[0x1C633BC:word32]
	Mem180[0x1C6343C:word32] = r8_143 << 0x19 | Mem176[0x1C6343C:word32]
	Mem185[0x1C634BC:word32] = r5_5 >>u 0x1C << 0x19 | Mem180[0x1C634BC:word32]
	Mem188[0x1C63100:word32] = Mem185[0x1C63100:word32] | 0x4000000
	word32 r14_195
	word32 r15_201
	word32 r2_192 = fn0000C8A0(-1_i, 0x4000000, out r14_195, out r15_201)
	word32 r3_208 = Mem188[r14_195 + 80_i:word32]
	word32 r4_210 = (r3_208 & 0xF0) << 4
l00004FF0:
	Mem218[r2_192:word32] = Mem212[r2_192:word32] | r4_210
	r2_192 = r2_192 + -4_i
	branch r2_192 != 0x1C63268 l00004FF0_ds_t
l00004FF0_ds_t:
l00004FF0_ds_f:
l00005014:
	Mem231[0x1C63218:word32] = (r3_208 & 0xF) << 8 | Mem218[0x1C63218:word32]
	Mem238[0x1C6321C:word32] = r3_208 & 0xF00 | Mem231[0x1C6321C:word32]
	Mem241[0x1C63280:word32] = (r3_208 & 0xF000) >>u 4 | Mem238[0x1C63280:word32]
	return r15_201
fn00004D60_exit:


void fn00005078()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r12 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn00005078_entry:
l00005078:
	Mem7[0x1C6200C:word32] = -399_i
	Mem11[0x1C62090:word32] = 0x10000
	Mem16[0x1C62098:word32] = -1_i
	Mem21[0x1C62010:word32] = 0x12C000D
	Mem25[0x1C62014:word32] = 0x960104
	Mem28[0x1C62018:word32] = 0x258000D
	Mem31[0x1C6201C:word32] = 0xC80190
	Mem34[0x1C62020:word32] = 0x200000D
	Mem39[0x1C62024:word32] = 0x600100
	Mem44[0x1C62028:word32] = 0x100000D
	Mem47[0x1C6202C:word32] = 0x200080
	Mem51[0x1C62030:word32] = 0x76C000D
	Mem55[0x1C62034:word32] = 0x3E805DC
	Mem57[0x1C62038:word32] = 0x96000D
	Mem61[0x1C6203C:word32] = 0x640078
	Mem64[0x1C62040:word32] = 0x1000009
	Mem68[0x1C62044:word32] = 0x400080
	Mem70[0x1C62048:word32] = 0x100000D
	Mem72[0x1C6204C:word32] = 0x400080
	Mem74[0x1C62050:word32] = 0x100000D
	Mem76[0x1C62054:word32] = 0x400080
	Mem81[0x1C62058:word32] = 0x4000009
	Mem83[0x1C6205C:word32] = 0x400100
	Mem87[0x1C62060:word32] = 0xD48030D
	Mem89[0x1C62064:word32] = 0x4000960
	Mem92[0x1C62068:word32] = 0x258000D
	Mem93[0x1C6206C:word32] = 0xC80190
	return
fn00005078_exit:


void fn000051E8(word32 r3, word32 r15, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r15 r17 r19 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r26 r28 r30 r9
fn000051E8_entry:
l000051E8:
	word32 r24_1817
	word32 r16_1280
	word32 r18_1261
	word32 r14_28 = Mem27[r3:word32]
	word32 r1_1017 = fp - 96_i
	branch (Mem0[r3 + 92_i:word32] & 2) == 0 l000051E8_ds_t
l000051E8_ds_t:
	r24_1817 = Mem27[r3 + 4_i:word32]
l000052D0:
	branch r24_1817 != 3 l000052D0_ds_t
l000052D0_ds_t:
l000054E8:
	branch r24_1817 != 2 l000054E8_ds_t
l000054E8_ds_t:
l000056F8:
	word32 r13_1011
	word32 r22_1012
	branch r24_1817 != 6 l000056F8_ds_t
l000056F8_ds_t:
l000059C4:
	branch r24_1817 != 7 l000059C4_ds_t
l000059C4_ds_t:
l00005C90:
	r18_1261 = 0xFFFFFFFD
	r16_1280 = -8_i
l000059C4_ds_f:
l000059CC:
	word32 r16_68 = (r14_28 >>u 1) *s -50_i
	word32 r11_73
	word32 r15_78
	fn0000FEDC(r16_68, -1000_i, r15, out r11_73, out r15_78)
	word32 r11_89
	word32 r15_91
	fn0001003C(r16_68, -1000_i, r15_78, out r11_89, out r15_91)
	word32 r11_105 = r11_73 + ((0 - r11_89 | r11_89) >>u 0x1F)
	word32 r1_72 = <invalid>
	branch !((r11_105 & 0xFF) <=u 3) l000059CC_ds_t
l000059CC_ds_t:
	Mem109[r1_72 + 20_i:word32] = r11_105 & 0xFF
l000059CC_ds_f:
	Mem110[r1_72 + 20_i:word32] = r11_105 & 0xFF
l00005A10:
	Mem113[r1_72 + 20_i:word32] = -4_i
l00005A18:
	word32 r16_118 = (r14_28 >>u 1) * 2 + ((r14_28 >>u 1) << 3)
	word32 r11_123
	word32 r15_128
	fn0000FEDC(r16_118, -1000_i, r15_91, out r11_123, out r15_128)
	word32 r11_139
	word32 r15_141
	fn0001003C(r16_118, -1000_i, r15_128, out r11_139, out r15_141)
	word32 r5_155 = r11_123 + ((0 - r11_139 | r11_139) >>u 0x1F)
	word32 r1_122 = <invalid>
	branch !((r5_155 & 0xFF) == 0) l00005A18_ds_t
l00005A18_ds_t:
	Mem159[r1_122 + 8_i:word32] = r5_155 & 0xFF
l00005A18_ds_f:
	Mem160[r1_122 + 8_i:word32] = r5_155 & 0xFF
l00005A60:
	Mem163[r1_122 + 8_i:word32] = -1_i
l00005A68:
	word32 r16_167 = (r14_28 >>u 1) * 2 + (r14_28 >>u 1)
	word32 r11_173
	word32 r15_178
	fn0000FEDC(r16_167 << 3, -1000_i, r15_141, out r11_173, out r15_178)
	word32 r11_189
	word32 r15_191
	fn0001003C(r16_167 << 3, -1000_i, r15_178, out r11_189, out r15_191)
	word32 r6_205 = r11_173 + ((0 - r11_189 | r11_189) >>u 0x1F)
	word32 r1_172 = <invalid>
	branch !((r6_205 & 0xFF) <=u 1) l00005A68_ds_t
l00005A68_ds_t:
	Mem209[r1_172 + 4_i:word32] = r6_205 & 0xFF
l00005A68_ds_f:
	Mem210[r1_172 + 4_i:word32] = r6_205 & 0xFF
l00005AB0:
	Mem213[r1_172 + 4_i:word32] = -2_i
l00005AB8:
	word32 r16_218 = (r14_28 >>u 1) *s -70_i
	word32 r11_222
	word32 r15_224
	fn0001003C(r16_218, -1000_i, r15_191, out r11_222, out r15_224)
	word32 r11_243
	word32 r15_248
	fn0000FEDC(r16_218, -1000_i, r15_224, out r11_243, out r15_248)
	word32 r1_242 = <invalid>
	Mem260[r1_242 + 24_i:word32] = ((0 - r11_222 | r11_222) >>u 0x1F) + r11_243 & 0xFF
	word32 r16_241 = r14_28 >>u 1 << 3
	word32 r11_261
	word32 r15_263
	fn0001003C(r16_241, -1000_i, r15_248, out r11_261, out r15_263)
	word32 r11_281
	word32 r15_286
	fn0000FEDC(r16_241, -1000_i, r15_263, out r11_281, out r15_286)
	word32 r11_293 = ((0 - r11_261 | r11_261) >>u 0x1F) + r11_281
	word32 r1_280 = <invalid>
	branch (r11_293 & 0xFF) <=u 1 l00005AB8_ds_t
l00005AB8_ds_t:
	Mem297[r1_280:word32] = r11_293 & 0xFF
l000062A8:
	Mem300[r1_280:word32] = -2_i
	Mem302[r1_280 + 16_i:word32] = -2_i
	r18_1261 = 0xFFFFFFFE
l00005AB8_ds_f:
	Mem303[r1_280:word32] = r11_293 & 0xFF
l00005B2C:
	Mem305[r1_280 + 16_i:word32] = r11_293 & 0xFF
	r18_1261 = r11_293 & 0xFF
l00005B34:
	word32 r20_350
	word32 r20_309 = (r14_28 >>u 1 << 4) - (r14_28 >>u 1)
	word32 r11_314
	word32 r15_319
	fn0000FEDC(r20_309, -1000_i, r15_286, out r11_314, out r15_319)
	word32 r11_330
	word32 r15_332
	fn0001003C(r20_309, -1000_i, r15_319, out r11_330, out r15_332)
	word32 r16_346 = r11_314 + ((0 - r11_330 | r11_330) >>u 0x1F)
	r16_1280 = r16_346 & 0xFF
	branch !((r16_346 & 0xFF) <=u 1) l00005B2C_ds_t
l00005B2C_ds_t:
	r20_350 = (r14_28 >>u 1) * 2
l00005B2C_ds_f:
	r20_350 = (r14_28 >>u 1) * 2
l00005B78:
	r16_1280 = -2_i
l00005B7C:
	word32 r20_359 = r20_350 + (r14_28 >>u 1)
	word32 r11_366
	word32 r15_371
	fn0000FEDC(r20_359 * 9, -1000_i, r15_332, out r11_366, out r15_371)
	word32 r11_382
	word32 r15_384
	fn0001003C(r20_359 * 9, -1000_i, r15_371, out r11_382, out r15_384)
	word32 r7_398 = r11_366 + ((0 - r11_382 | r11_382) >>u 0x1F)
	word32 r1_365 = <invalid>
	branch !((r7_398 & 0xFF) <=u 1) l00005B7C_ds_t
l00005B7C_ds_t:
	Mem402[r1_365 + 12_i:word32] = r7_398 & 0xFF
l00005B7C_ds_f:
	Mem403[r1_365 + 12_i:word32] = r7_398 & 0xFF
l00005BC4:
	Mem406[r1_365 + 12_i:word32] = -2_i
l00005BCC:
	word32 r20_410 = (r14_28 >>u 1) * 2 + (r14_28 >>u 1)
	word32 r20_412 = (r20_410 << 3) - r20_410
	word32 r11_418
	word32 r15_423
	fn0000FEDC(r20_412 * 2, -1000_i, r15_384, out r11_418, out r15_423)
	word32 r11_437
	word32 r15_439
	fn0001003C(r20_412 * 2, -1000_i, r15_423, out r11_437, out r15_439)
	word32 r1_417 = <invalid>
	Mem456[r1_417 + 28_i:word32] = r11_418 + ((0 - r11_437 | r11_437) >>u 0x1F) & 0xFF
	word32 r20_434 = (r14_28 >>u 1) *s -3900_i
	word32 r11_459
	word32 r15_461
	fn0001003C(r20_434, -1000_i, r15_439, out r11_459, out r15_461)
	word32 r11_481
	word32 r15_486
	fn0000FEDC(r20_434, -1000_i, r15_461, out r11_481, out r15_486)
	word32 r1_480 = <invalid>
	Mem499[r1_480 + 32_i:word32] = ((0 - r11_459 | r11_459) >>u 0x1F) + r11_481 >>u 5 & 0xFFFF
	word32 r20_475 = (r14_28 >>u 1) *s -210_i
	word32 r11_501
	word32 r15_506
	fn0000FEDC(r20_475, -1000_i, r15_486, out r11_501, out r15_506)
	word32 r11_517
	word32 r15_3141
	fn0001003C(r20_475, -1000_i, r15_506, out r11_517, out r15_3141)
	r1_1017 = <invalid>
	r22_1012 = r11_501
	r13_1011 = (0 - r11_517 | r11_517) >>u 0x1F
l000056F8_ds_f:
l00005700:
	word32 r16_538 = (r14_28 >>u 1) *s -50_i
	word32 r11_542
	word32 r15_547
	fn0000FEDC(r16_538, -1000_i, r15, out r11_542, out r15_547)
	word32 r11_558
	word32 r15_560
	fn0001003C(r16_538, -1000_i, r15_547, out r11_558, out r15_560)
	word32 r11_574 = r11_542 + ((0 - r11_558 | r11_558) >>u 0x1F)
	word32 r1_541 = <invalid>
	branch !((r11_574 & 0xFF) <=u 3) l00005700_ds_t
l00005700_ds_t:
	Mem578[r1_541 + 20_i:word32] = r11_574 & 0xFF
l00005700_ds_f:
	Mem579[r1_541 + 20_i:word32] = r11_574 & 0xFF
l00005744:
	Mem582[r1_541 + 20_i:word32] = -4_i
l0000574C:
	word32 r16_587 = (r14_28 >>u 1) * 2 + ((r14_28 >>u 1) << 3)
	word32 r11_592
	word32 r15_597
	fn0000FEDC(r16_587, -1000_i, r15_560, out r11_592, out r15_597)
	word32 r11_608
	word32 r15_610
	fn0001003C(r16_587, -1000_i, r15_597, out r11_608, out r15_610)
	word32 r5_624 = r11_592 + ((0 - r11_608 | r11_608) >>u 0x1F)
	word32 r1_591 = <invalid>
	branch !((r5_624 & 0xFF) == 0) l0000574C_ds_t
l0000574C_ds_t:
	Mem628[r1_591 + 8_i:word32] = r5_624 & 0xFF
l0000574C_ds_f:
	Mem629[r1_591 + 8_i:word32] = r5_624 & 0xFF
l00005794:
	Mem632[r1_591 + 8_i:word32] = -1_i
l0000579C:
	word32 r16_636 = (r14_28 >>u 1) * 2 + (r14_28 >>u 1)
	word32 r11_642
	word32 r15_647
	fn0000FEDC(r16_636 << 3, -1000_i, r15_610, out r11_642, out r15_647)
	word32 r11_658
	word32 r15_660
	fn0001003C(r16_636 << 3, -1000_i, r15_647, out r11_658, out r15_660)
	word32 r6_674 = r11_642 + ((0 - r11_658 | r11_658) >>u 0x1F)
	word32 r1_641 = <invalid>
	branch !((r6_674 & 0xFF) <=u 1) l0000579C_ds_t
l0000579C_ds_t:
	Mem678[r1_641 + 4_i:word32] = r6_674 & 0xFF
l0000579C_ds_f:
	Mem679[r1_641 + 4_i:word32] = r6_674 & 0xFF
l000057E4:
	Mem682[r1_641 + 4_i:word32] = -2_i
l000057EC:
	word32 r16_687 = (r14_28 >>u 1) *s -70_i
	word32 r11_691
	word32 r15_693
	fn0001003C(r16_687, -1000_i, r15_660, out r11_691, out r15_693)
	word32 r11_712
	word32 r15_717
	fn0000FEDC(r16_687, -1000_i, r15_693, out r11_712, out r15_717)
	word32 r1_711 = <invalid>
	Mem729[r1_711 + 24_i:word32] = ((0 - r11_691 | r11_691) >>u 0x1F) + r11_712 & 0xFF
	word32 r16_710 = r14_28 >>u 1 << 3
	word32 r11_730
	word32 r15_732
	fn0001003C(r16_710, -1000_i, r15_717, out r11_730, out r15_732)
	word32 r11_750
	word32 r15_755
	fn0000FEDC(r16_710, -1000_i, r15_732, out r11_750, out r15_755)
	word32 r6_762 = ((0 - r11_730 | r11_730) >>u 0x1F) + r11_750
	word32 r1_749 = <invalid>
	branch (r6_762 & 0xFF) == 0 l000057EC_ds_t
l000057EC_ds_t:
	Mem766[r1_749:word32] = r6_762 & 0xFF
l00006294:
	Mem768[r1_749:word32] = -1_i
l000057EC_ds_f:
	Mem771[r1_749:word32] = r6_762 & 0xFF
l00005860:
	branch (r6_762 & 0xFF) <=u 1 l00005860_ds_t
l00005860_ds_t:
l000062A0:
	Mem777[r1_749 + 16_i:word32] = -2_i
	r18_1261 = -2_i
l00005860_ds_f:
l0000586C:
	Mem781[r1_749 + 16_i:word32] = r6_762 & 0xFF
	r18_1261 = r6_762 & 0xFF
l00005874:
	word32 r20_828
	word32 r20_786 = (r14_28 >>u 1 << 4) - (r14_28 >>u 1)
	word32 r11_792
	word32 r15_797
	fn0000FEDC(r20_786, -1000_i, r15_755, out r11_792, out r15_797)
	word32 r11_808
	word32 r15_810
	fn0001003C(r20_786, -1000_i, r15_797, out r11_808, out r15_810)
	word32 r16_824 = r11_792 + ((0 - r11_808 | r11_808) >>u 0x1F)
	r16_1280 = r16_824 & 0xFF
	branch !((r16_824 & 0xFF) <=u 1) l0000586C_ds_t
l0000586C_ds_t:
	r20_828 = (r14_28 >>u 1) * 2
l0000586C_ds_f:
	r20_828 = (r14_28 >>u 1) * 2
l000058B8:
	r16_1280 = -2_i
l000058BC:
	word32 r20_837 = r20_828 + (r14_28 >>u 1)
	word32 r11_844
	word32 r15_849
	fn0000FEDC(r20_837 * 9, -1000_i, r15_810, out r11_844, out r15_849)
	word32 r11_860
	word32 r15_862
	fn0001003C(r20_837 * 9, -1000_i, r15_849, out r11_860, out r15_862)
	word32 r7_876 = r11_844 + ((0 - r11_860 | r11_860) >>u 0x1F)
	word32 r1_843 = <invalid>
	branch !((r7_876 & 0xFF) <=u 1) l000058BC_ds_t
l000058BC_ds_t:
	Mem880[r1_843 + 12_i:word32] = r7_876 & 0xFF
l000058BC_ds_f:
	Mem881[r1_843 + 12_i:word32] = r7_876 & 0xFF
l00005904:
	Mem884[r1_843 + 12_i:word32] = -2_i
l0000590C:
	word32 r20_888 = (r14_28 >>u 1) * 2 + (r14_28 >>u 1)
	word32 r20_890 = (r20_888 << 3) - r20_888
	word32 r11_896
	word32 r15_901
	fn0000FEDC(r20_890 * 2, -1000_i, r15_862, out r11_896, out r15_901)
	word32 r11_915
	word32 r15_917
	fn0001003C(r20_890 * 2, -1000_i, r15_901, out r11_915, out r15_917)
	word32 r1_895 = <invalid>
	Mem934[r1_895 + 28_i:word32] = r11_896 + ((0 - r11_915 | r11_915) >>u 0x1F) & 0xFF
	word32 r20_912 = (r14_28 >>u 1) *s -3900_i
	word32 r11_937
	word32 r15_939
	fn0001003C(r20_912, -1000_i, r15_917, out r11_937, out r15_939)
	word32 r11_959
	word32 r15_964
	fn0000FEDC(r20_912, -1000_i, r15_939, out r11_959, out r15_964)
	word32 r1_958 = <invalid>
	Mem977[r1_958 + 32_i:word32] = ((0 - r11_937 | r11_937) >>u 0x1F) + r11_959 >>u 5 & 0xFFFF
	word32 r20_953 = (r14_28 >>u 1) *s -210_i
	word32 r11_979
	word32 r15_984
	fn0000FEDC(r20_953, -1000_i, r15_964, out r11_979, out r15_984)
	word32 r11_995
	word32 r15_3140
	fn0001003C(r20_953, -1000_i, r15_984, out r11_995, out r15_3140)
	r1_1017 = <invalid>
	r22_1012 = r11_979
	r13_1011 = (0 - r11_995 | r11_995) >>u 0x1F
l00005C80:
	Mem1018[r1_1017 + 36_i:word32] = r22_1012 + r13_1011 & 0xFFFF
l000054E8_ds_f:
l000054F0:
	word32 r16_1022 = (r14_28 >>u 1) *s -50_i
	word32 r11_1026
	word32 r15_1028
	fn0001003C(r16_1022, -1000_i, r15, out r11_1026, out r15_1028)
	word32 r11_1047
	word32 r15_1052
	fn0000FEDC(r16_1022, -1000_i, r15_1028, out r11_1047, out r15_1052)
	word32 r1_1046 = <invalid>
	Mem1065[r1_1046 + 20_i:word32] = ((0 - r11_1026 | r11_1026) >>u 0x1F) + r11_1047 & 0xFF
	word32 r20_1024 = (r14_28 >>u 1) * 2
	word32 r16_1042 = r14_28 >>u 1 << 3
	word32 r18_1060 = r20_1024 + r16_1042
	word32 r11_1066
	word32 r15_1068
	fn0001003C(r18_1060, -1000_i, r15_1052, out r11_1066, out r15_1068)
	word32 r11_1086
	word32 r15_1091
	fn0000FEDC(r18_1060, -1000_i, r15_1068, out r11_1086, out r15_1091)
	word32 r1_1085 = <invalid>
	Mem1104[r1_1085 + 8_i:word32] = ((0 - r11_1066 | r11_1066) >>u 0x1F) + r11_1086 & 0xFF
	word32 r22_1100 = r14_28 >>u 1 << 4
	word32 r18_1103 = (r14_28 >>u 1 << 2) + r22_1100
	word32 r11_1108
	word32 r15_1110
	fn0001003C(r18_1103, -1000_i, r15_1091, out r11_1108, out r15_1110)
	word32 r11_1128
	word32 r15_1133
	fn0000FEDC(r18_1103, -1000_i, r15_1110, out r11_1128, out r15_1133)
	word32 r1_1127 = <invalid>
	Mem1147[r1_1127 + 4_i:word32] = ((0 - r11_1108 | r11_1108) >>u 0x1F) + r11_1128 & 0xFF
	word32 r18_1143 = (r14_28 >>u 1 << 6) + (r14_28 >>u 1)
	word32 r11_1148
	word32 r15_1150
	fn0001003C(r18_1143, -1000_i, r15_1133, out r11_1148, out r15_1150)
	word32 r11_1168
	word32 r15_1173
	fn0000FEDC(r18_1143, -1000_i, r15_1150, out r11_1168, out r15_1173)
	word32 r1_1167 = <invalid>
	Mem1186[r1_1167 + 24_i:word32] = ((0 - r11_1148 | r11_1148) >>u 0x1F) + r11_1168 & 0xFF
	word32 r11_1187
	word32 r15_1189
	fn0001003C(r16_1042, -1000_i, r15_1173, out r11_1187, out r15_1189)
	word32 r11_1207
	word32 r15_1212
	fn0000FEDC(r16_1042, -1000_i, r15_1189, out r11_1207, out r15_1212)
	word32 r22_1106 = r22_1100 - (r14_28 >>u 1)
	word32 r11_1223
	word32 r15_1225
	fn0001003C(r22_1106, -1000_i, r15_1212, out r11_1223, out r15_1225)
	word32 r11_1242
	word32 r15_1247
	fn0000FEDC(r22_1106, -1000_i, r15_1225, out r11_1242, out r15_1247)
	word32 r20_1184 = r20_1024 + (r14_28 >>u 1)
	word32 r20_1257 = (r20_1184 << 4) - r20_1184
	word32 r11_1262
	word32 r15_1264
	fn0001003C(r20_1257, -1000_i, r15_1247, out r11_1262, out r15_1264)
	word32 r11_1285
	word32 r15_1290
	fn0000FEDC(r20_1257, -1000_i, r15_1264, out r11_1285, out r15_1290)
	word32 r1_1284 = <invalid>
	Mem1300[r1_1284 + 28_i:word32] = ((0 - r11_1262 | r11_1262) >>u 0x1F) + r11_1285 & 0xFF
	word32 r20_1278 = (r14_28 >>u 1) *s -7800_i
	word32 r11_1303
	word32 r15_1305
	fn0001003C(r20_1278, -1000_i, r15_1290, out r11_1303, out r15_1305)
	word32 r11_1325
	word32 r15_1330
	fn0000FEDC(r20_1278, -1000_i, r15_1305, out r11_1325, out r15_1330)
	word32 r1_1324 = <invalid>
	Mem1343[r1_1324 + 32_i:word32] = ((0 - r11_1303 | r11_1303) >>u 0x1F) + r11_1325 >>u 5 & 0xFFFF
	word32 r20_1319 = (r14_28 >>u 1) *s -328_i
	word32 r11_1345
	word32 r15_1350
	fn0000FEDC(r20_1319, -1000_i, r15_1330, out r11_1345, out r15_1350)
	word32 r11_1361
	word32 r15_3139
	fn0001003C(r20_1319, -1000_i, r15_1350, out r11_1361, out r15_3139)
	word32 r18_1221 = ((0 - r11_1187 | r11_1187) >>u 0x1F) + r11_1207
	r1_1017 = <invalid>
	Mem1375[r1_1017 + 16_i:word32] = r18_1221 & 0xFF
	word32 r16_1258 = ((0 - r11_1223 | r11_1223) >>u 0x1F) + r11_1242
	Mem1377[r1_1017 + 12_i:word32] = r16_1258 & 0xFF
	Mem1379[r1_1017:word32] = r24_1817
	Mem1383[r1_1017 + 36_i:word32] = r11_1345 + ((0 - r11_1361 | r11_1361) >>u 0x1F) & 0xFFFF
	r18_1261 = r18_1221 & 0xFF
	r16_1280 = r16_1258 & 0xFF
l000052D0_ds_f:
l000052DC:
	word32 r16_1388 = (r14_28 >>u 1) *s -50_i
	word32 r11_1391
	word32 r15_1393
	fn0001003C(r16_1388, -1000_i, r15, out r11_1391, out r15_1393)
	word32 r11_1411
	word32 r15_1416
	fn0000FEDC(r16_1388, -1000_i, r15_1393, out r11_1411, out r15_1416)
	word32 r1_1410 = <invalid>
	Mem1431[r1_1410 + 20_i:word32] = ((0 - r11_1391 | r11_1391) >>u 0x1F) + r11_1411 & 0xFF
	word32 r16_1426 = (r14_28 >>u 1) * 2 + ((r14_28 >>u 1) << 3)
	word32 r11_1432
	word32 r15_1434
	fn0001003C(r16_1426, -1000_i, r15_1416, out r11_1432, out r15_1434)
	word32 r11_1452
	word32 r15_1457
	fn0000FEDC(r16_1426, -1000_i, r15_1434, out r11_1452, out r15_1457)
	word32 r5_1464 = ((0 - r11_1432 | r11_1432) >>u 0x1F) + r11_1452
	word32 r1_1451 = <invalid>
	branch !((r5_1464 & 0xFF) <=u 1) l000052DC_ds_t
l000052DC_ds_t:
	Mem1468[r1_1451 + 8_i:word32] = r5_1464 & 0xFF
l000052DC_ds_f:
	Mem1469[r1_1451 + 8_i:word32] = r5_1464 & 0xFF
l00005358:
	Mem1472[r1_1451 + 8_i:word32] = -2_i
l00005360:
	word32 r16_1476 = (r14_28 >>u 1 << 4) - (r14_28 >>u 1)
	word32 r11_1480
	word32 r15_1482
	fn0001003C(r16_1476, -1000_i, r15_1457, out r11_1480, out r15_1482)
	word32 r11_1502
	word32 r15_1507
	fn0000FEDC(r16_1476, -1000_i, r15_1482, out r11_1502, out r15_1507)
	word32 r1_1501 = <invalid>
	Mem1519[r1_1501 + 4_i:word32] = ((0 - r11_1480 | r11_1480) >>u 0x1F) + r11_1502 & 0xFF
	word32 r16_1496 = (r14_28 >>u 1) *s -53_i
	word32 r11_1520
	word32 r15_1522
	fn0001003C(r16_1496, -1000_i, r15_1507, out r11_1520, out r15_1522)
	word32 r11_1541
	word32 r15_1546
	fn0000FEDC(r16_1496, -1000_i, r15_1522, out r11_1541, out r15_1546)
	word32 r1_1540 = <invalid>
	Mem1558[r1_1540 + 24_i:word32] = ((0 - r11_1520 | r11_1520) >>u 0x1F) + r11_1541 & 0xFF
	word32 r16_1539 = r14_28 >>u 1 << 3
	word32 r11_1559
	word32 r15_1561
	fn0001003C(r16_1539, -1000_i, r15_1546, out r11_1559, out r15_1561)
	word32 r11_1579
	word32 r15_1584
	fn0000FEDC(r16_1539, -1000_i, r15_1561, out r11_1579, out r15_1584)
	word32 r6_1591 = ((0 - r11_1559 | r11_1559) >>u 0x1F) + r11_1579
	word32 r1_1578 = <invalid>
	branch (r6_1591 & 0xFF) <=u 1 l00005360_ds_t
l00005360_ds_t:
	Mem1595[r1_1578:word32] = r6_1591 & 0xFF
l00006280:
	Mem1598[r1_1578:word32] = -2_i
	Mem1600[r1_1578 + 16_i:word32] = -2_i
	r18_1261 = 0xFFFFFFFE
l00005360_ds_f:
	Mem1601[r1_1578:word32] = r6_1591 & 0xFF
l0000540C:
	Mem1603[r1_1578 + 16_i:word32] = r6_1591 & 0xFF
	r18_1261 = r6_1591 & 0xFF
l00005414:
	word32 r4_1606 = Mem1605[r1_1578 + 4_i:word32]
	branch r4_1606 <=u 1 l0000540C_ds_t
l0000540C_ds_t:
	r16_1280 = -2_i
l0000540C_ds_f:
l00005424:
	r16_1280 = r4_1606
l00005428:
	word32 r11_1626
	word32 r15_1628
	fn0001003C((r14_28 >>u 1) * 2 + ((r14_28 >>u 1) << 5) + (r14_28 >>u 1), -1000_i, r15_1584, out r11_1626, out r15_1628)
	word32 r11_1647
	word32 r15_1652
	fn0000FEDC((r14_28 >>u 1) *s -38_i, -1000_i, r15_1628, out r11_1647, out r15_1652)
	word32 r1_1646 = <invalid>
	Mem1662[r1_1646 + 28_i:word32] = ((0 - r11_1626 | r11_1626) >>u 0x1F) + r11_1647 & 0xFF
	word32 r20_1622 = (r14_28 >>u 1) *s -7800_i
	word32 r11_1665
	word32 r15_1667
	fn0001003C(r20_1622, -1000_i, r15_1652, out r11_1665, out r15_1667)
	word32 r11_1687
	word32 r15_1692
	fn0000FEDC(r20_1622, -1000_i, r15_1667, out r11_1687, out r15_1692)
	word32 r1_1686 = <invalid>
	Mem1705[r1_1686 + 32_i:word32] = ((0 - r11_1665 | r11_1665) >>u 0x1F) + r11_1687 >>u 5 & 0xFFFF
	word32 r20_1681 = (r14_28 >>u 1) *s -350_i
	word32 r11_1706
	word32 r15_1708
	fn0001003C(r20_1681, -1000_i, r15_1692, out r11_1706, out r15_1708)
	word32 r11_1726
	word32 r15_3136
	fn0000FEDC(r20_1681, -1000_i, r15_1708, out r11_1726, out r15_3136)
	r1_1017 = <invalid>
	Mem1741[r1_1017 + 12_i:word32] = Mem1705[r1_1017 + 4_i:word32]
	Mem1743[r1_1017 + 36_i:word32] = ((0 - r11_1706 | r11_1706) >>u 0x1F) + r11_1726 & 0xFFFF
l00005CE0:
	word32 r4_1755 = Mem1745[r1_1017 + 12_i:word32]
	word32 r3_1758 = Mem1745[r1_1017 + 16_i:word32]
	word32 r6_1759 = Mem1745[r1_1017 + 28_i:word32]
	Mem1780[r3 + 40_i:word32] = Mem1745[r1_1017 + 24_i:word32] | 0x400000 | Mem1745[r1_1017 + 4_i:word32] << 6 | Mem1745[r1_1017 + 8_i:word32] << 0xB | Mem1745[r1_1017 + 20_i:word32] << 0xF
	word32 r4_1789 = Mem1780[r1_1017:word32]
	word32 r6_1793 = Mem1780[r1_1017 + 36_i:word32]
	word32 r3_1806 = Mem1780[r1_1017 + 32_i:word32]
	Mem1812[r1_1017 + 48_i:word32] = -2_i
	Mem1813[r3 + 44_i:word32] = r4_1755 << 6 | r16_1280 << 0xB | r6_1759 | r3_1758 << 0xF | r18_1261 << 0x14 | r4_1789 << 0x17
	Mem1816[r3 + 48_i:word32] = r6_1793 << 0xC | r3_1806
	r15 = r4_1789 << 0x17
l000051E8_ds_f:
	r24_1817 = Mem27[r3 + 4_i:word32]
l00005238:
	word32 r4_1818 = Mem27[r3 + 44_i:word32]
	r18_1261 = r4_1818 >>u 0x14 & 7
	r16_1280 = r4_1818 >>u 0xB & 0xF
l00005D6C:
	word32 r12_1947
	word32 r14_1953
	word32 r8_1952
	word32 r13_1960
	word32 r5_1961
	word32 r7_1939
	word32 r15_1951
	word32 r17_1945
	word32 r18_1948
	word32 r19_1955
	word32 r25_1959
	word32 r27_1958
	word32 r2_1956
	word32 r22_1946
	word32 r4_1957
	word32 r16_1954
	word32 r20_1962
	word32 r26_1950
	word32 r21_1964
	branch r24_1817 == 3 l00005D6C_ds_t
l00005D6C_ds_t:
l00005E3C:
	word32 r11_1906
	word32 r15_1911
	fn0000FEDC(r14_28 >>u 1, -15_i, r15, out r11_1906, out r15_1911)
	word32 r1_1905 = <invalid>
	Mem1918[r1_1905 + 40_i:word32] = r14_28 *s -500_i + -1_i
	Mem1924[r1_1905 + 44_i:word32] = r11_1906 & 0xFF
	word32 r11_1926
	word32 r15_3134
	fn0000FEDC(r14_28 *s -360_i, -1000_i, r15_1911, out r11_1926, out r15_3134)
	r7_1939 = -4_i
	r17_1945 = -5_i
	r22_1946 = 0_i
	r12_1947 = r14_28 *s -200_i + -1_i
	r18_1948 = r18_1261 + -6_i & 0xFF
	r26_1950 = Mem1924[r3 + 28_i:word32]
	r15_1951 = r24_1817
	r8_1952 = r11_1926 + -1_i
	r14_1953 = r14_28 + -1_i
	r16_1954 = r16_1280 + -6_i & 0xFF
	r19_1955 = 0xFFFFFFFB
	r2_1956 = -12_i
	r4_1957 = 0xFFFFFFFC
	r27_1958 = 0xFFFFFFFC
	r25_1959 = -6_i
	r13_1960 = -2_i
	r5_1961 = 0xFFFFFFFC
	r20_1962 = 0
	r24_1817 = -24_i
	r21_1964 = -7280_i
l00005D6C_ds_f:
	bool F_1966 = r24_1817 >u 3
l00005D78:
	branch F_1966 l00005D78_ds_t
l00005D78_ds_t:
	bool F_1967 = r24_1817 == 6
l00005D94:
	branch F_1967 l00005D94_ds_t
l00005D94_ds_t:
l00005ED4:
	word32 r11_1976
	word32 r15_1981
	fn0000FEDC(r14_28 >>u 1, -30_i, r15, out r11_1976, out r15_1981)
	word32 r1_1975 = <invalid>
	Mem1988[r1_1975 + 40_i:word32] = r14_28 *s -200_i + -1_i
	Mem1994[r1_1975 + 44_i:word32] = r11_1976 & 0xFF
	r20_1962 = Mem1994[r3 + 36_i:word32]
	word32 r11_2002
	word32 r15_3137
	fn0000FEDC(r14_28 * 3 + r14_28 * 0x60 + r14_28, -1000_i, r15_1981, out r11_2002, out r15_3137)
	r22_1946 = -3_i
	r15_1951 = -2_i
	r8_1952 = r11_2002 + -1_i
	r16_1954 = r16_1280 + -5_i & 0xFF
	r12_1947 = r14_28 * 2 + (r14_28 << 3) + r14_28 + -1_i
	r18_1948 = r18_1261 + -5_i & 0xFF
	r19_1955 = -10_i
	r2_1956 = 0xFFFFFFFB
	r27_1958 = 0xFFFFFFFE
	r25_1959 = -4_i
	r13_1960 = -1_i
	r5_1961 = 0xFFFFFFFD
l00005D94_ds_f:
	bool F_2034 = r24_1817 == 7
l00005D9C:
	branch !F_2034 l00005D9C_ds_t
l00005D9C_ds_t:
l00005D9C_ds_f:
l00005DA4:
l00005F70:
	word32 r11_2044
	word32 r15_2049
	fn0000FEDC(r14_28 >>u 1, -30_i, r15, out r11_2044, out r15_2049)
	word32 r1_2043 = <invalid>
	Mem2056[r1_2043 + 40_i:word32] = r14_28 *s -200_i + -1_i
	Mem2062[r1_2043 + 44_i:word32] = r11_2044 & 0xFF
	word32 r11_2070
	word32 r15_3138
	fn0000FEDC(r14_28 * 3 + r14_28 * 0x60 + r14_28, -1000_i, r15_2049, out r11_2070, out r15_3138)
	r18_1948 = r18_1261 + -8_i & 0xFF
	r15_1951 = -3_i
	r20_1962 = Mem2062[r3 + 36_i:word32]
	r8_1952 = r11_2070 + -1_i
	r12_1947 = r14_28 * 2 + (r14_28 << 3) + r14_28 + -1_i
	r16_1954 = r16_1280 + -8_i & 0xFF
	r19_1955 = -13_i
	r2_1956 = -12_i
	r22_1946 = 0xFFFFFFFB
	r27_1958 = 0xFFFFFFFD
	r25_1959 = -6_i
	r13_1960 = -2_i
	r5_1961 = 0xFFFFFFFB
	r24_1817 = -10_i
l00006004:
	r14_1953 = r14_28 + -1_i
	r7_1939 = 0xFFFFFFFB
	r17_1945 = -5_i
	r4_1957 = 0xFFFFFFFB
	r26_1950 = -195_i
	r21_1964 = 0_i
l00005D78_ds_f:
l00005D80:
	branch !(r24_1817 == 2) l00005D80_ds_t
l00005D80_ds_t:
l00006010:
	Mem2119[r1_1017 + 44_i:word32] = -27_i
	Mem2134[r1_1017 + 40_i:word32] = 0_i
	r22_1946 = 0_i
	r7_1939 = -3_i
	r17_1945 = -4_i
	r15_1951 = -2_i
	r13_1960 = -1_i
	r19_1955 = 0xFFFFFFFC
	r18_1948 = -8_i
	r16_1954 = -12_i
	r2_1956 = -6_i
	r4_1957 = 0xFFFFFFFE
	r27_1958 = 0xFFFFFFFD
	r25_1959 = 0xFFFFFFFD
	r5_1961 = 0xFFFFFFFF
	r20_1962 = 0
	r24_1817 = 0
	r26_1950 = 0
	r21_1964 = 0
	r14_1953 = 0
	r12_1947 = 0
	r8_1952 = 0
l00005D80_ds_f:
l00005D8C:
l00005DAC:
	word32 r11_2143
	word32 r15_2148
	fn0000FEDC(r14_28 >>u 1, -15_i, r15, out r11_2143, out r15_2148)
	word32 r1_2142 = <invalid>
	Mem2155[r1_2142 + 40_i:word32] = r14_28 *s -400_i + -1_i
	Mem2161[r1_2142 + 44_i:word32] = r11_2143 & 0xFF
	word32 r11_2163
	word32 r15_3135
	fn0000FEDC(r14_28 *s -500_i, -1000_i, r15_2148, out r11_2163, out r15_3135)
	r19_1955 = -3_i
	r22_1946 = 0_i
	r12_1947 = r14_28 *s -200_i + -1_i
	r13_1960 = -1_i
	r18_1948 = r18_1261 + -5_i & 0xFF
	r4_1957 = r24_1817
	r26_1950 = Mem2161[r3 + 28_i:word32]
	r8_1952 = r11_2163 + -1_i
	r14_1953 = r14_28 + -1_i
	r16_1954 = r16_1280 + -5_i & 0xFF
	r17_1945 = -5_i
	r7_1939 = -4_i
	r15_1951 = 0xFFFFFFFD
	r2_1956 = -12_i
	r27_1958 = 0xFFFFFFFD
	r25_1959 = 0xFFFFFFFD
	r5_1961 = 0xFFFFFFFF
	r20_1962 = 0
	r24_1817 = 0
	r21_1964 = -611_i
l0000606C:
	branch (word32) Mem2203[r3 + 24_i:word16] != 0 l0000606C_ds_t
l0000606C_ds_t:
l0000606C_ds_f:
l0000607C:
	Mem2208[r3 + 24_i:word32] = r21_1964
l00006080:
	branch (word32) Mem2210[r3 + 28_i:word16] != 0 l00006080_ds_t
l00006080_ds_t:
l00006080_ds_f:
l00006090:
	Mem2215[r3 + 28_i:word32] = r26_1950
l00006094:
	branch (word32) Mem2217[r3 + 32_i:word16] != 0 l00006094_ds_t
l00006094_ds_t:
l00006094_ds_f:
l000060A4:
	Mem2224[r3 + 32_i:word32] = r24_1817
l000060A8:
	branch (word32) Mem2226[r3 + 36_i:word16] != 0 l000060A8_ds_t
l000060A8_ds_t:
l000060A8_ds_f:
l000060B8:
	Mem2234[r3 + 36_i:word32] = r20_1962
l000060BC:
	Mem2247[0x1C63030:word32] = (word32) Mem2237[r3 + 26_i:word16]
	Mem2251[0x1C63034:word32] = (word32) Mem2247[r3 + 30_i:word16]
	Mem2255[0x1C63038:word32] = (word32) Mem2251[r3 + 34_i:word16]
	Mem2259[0x1C6303C:word32] = (word32) Mem2255[r3 + 38_i:word16]
	Mem2275[0x1C6302C:word32] = Mem2259[r3 + 12_i:word32] >>u 4 & 3
	Mem2344[0x1C63058:word32] = dwArg74 << 0x10 | dwArg7C | r16_1954 << 0x18 | dwArg8C << 8
	Mem2348[0x1C6305C:word32] = dwArg60 << 0x10 | dwArg70 << 8 | dwArg78
	Mem2350[0x1C63060:word32] = r27_1958 << 0x18 | r25_1959 << 0x10 | r18_1948 | r19_1955 << 8
	Mem2353[0x1C63064:word32] = r22_1946 << 0x10 | r4_1957 << 0xC | r2_1956
	Mem2354[0x1C63068:word32] = dwArg64 << 0x18 | dwArg90 << 0x10 | dwArg6C | dwArg68 << 8
	Mem2398[0x1C6306C:word32] = r17_1945 << 0x18 | r17_1945 << 0x10 | r15_1951 | r7_1939 << 8
	Mem2419[0x1C63078:word32] = Mem2398[0x1C63078:word32] & 0xFFFF0000 | 0x3310
	Mem2423[0x1C63080:word32] = r13_1960 | 0x2000100 | r5_1961 << 0x10
	Mem2424[0x1C63050:word32] = r8_1952 << 0x14 | dwArg88
	Mem2434[0x1C63054:word32] = r14_1953 << 0x14 | r12_1947
	Mem2438[0x1C63090:word32] = dwArg80 << 0x10 | dwArg84
	return
fn000051E8_exit:


word32 fn000062BC(word32 r3, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r9
// Preserved:
fn000062BC_entry:
l000062BC:
	word32 r4_34
	word32 r3_11 = Mem0[r3 + 92_i:word32] >>u 0x14 & 7
	branch r3_11 >u 5 l000062BC_ds_t
l000062BC_ds_t:
l000062BC_ds_f:
l000062DC:
	switch (Mem10[(r3_11 << 2) + 0x12478:word32]) { l00006380 l000062F8 l00006304 l00006310 l00006324 l0000631C l000062F0_thunk_fn0000AF54 l000062F0_thunk_fn0000AF4C }
l000062F0_thunk_fn0000AF4C:
	return fn0000AF4C()
l000062F0_thunk_fn0000AF54:
	return fn0000AF54()
l0000631C:
	r4_34 = 0xF5860000
l00006324:
	r4_34 = 0xF2063333
l00006310:
	r4_34 = 0xED866666
l00006304:
	r4_34 = 0xE9069999
l000062F8:
	r4_34 = 0xE486CCCC
l0000632C:
	Mem47[0x1C20290:word32] = r4_34
	Mem53[0x1C20020:word32] = Mem47[0x1C20020:word32] | 0x1000000
	Mem56[0x1C20020:word32] = Mem53[0x1C20020:word32] | 0x100000
l00006360:
	branch (Mem56[0x1C20020:word32] & 0x100000) != 0 l00006360_ds_t
l00006360_ds_t:
l00006360_ds_f:
l00006378:
	word32 r14_104
	word32 r15_105
	fn0000C8A0(-20_i, r15, out r14_104, out r15_105)
l00006380:
	return dwLoc18
fn000062BC_exit:


word32 fn00006394(word32 r3, word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r11 r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00006394_entry:
l00006394:
	word32 r2_6 = Mem4[r3:word32]
	branch (0 - (r2_6 ^ 0x378) | r2_6 ^ 0x378) >= 0_i l00006394_ds_t
l00006394_ds_t:
l00006394_ds_f:
l000063C4:
	branch (0 - (r2_6 ^ 0x348) | r2_6 ^ 0x348) < 0_i l000063C4_ds_t
l000063C4_ds_t:
l000063C4_ds_f:
l000063DC:
	Mem32[r3:word32] = r2_6 - 24_i
l000063E4:
	word32 r14_131
	word32 r11_44
	word32 r15_116
	fn0000FEDC(Mem34[r3:word32] * 2, -24_i, r15, out r11_44, out r15_116)
	word32 r2_108 = -1_i
	branch r11_44 <=u 0x20 l000063E4_ds_t
l000063E4_ds_t:
	r14_131 = r11_44
l000063E4_ds_f:
l00006404:
	branch r11_44 <=u 0x40 l00006404_ds_t
l00006404_ds_t:
	r2_108 = -2_i
l00006404_ds_f:
l00006410:
	word32 r11_68
	fn0001003C(r11_44, -3_i, r15_116, out r11_68, out r15_116)
	r2_108 = -3_i
	branch r11_68 == 0 l00006410_ds_t
l00006410_ds_t:
l00006410_ds_f:
l0000642C:
	branch (r11_44 & -3_i) == 0 l0000642C_ds_t
l0000642C_ds_t:
	r2_108 = -4_i
l0000642C_ds_f:
l0000643C:
	word32 r11_94
	fn0001003C(r11_44, -5_i, r15_116, out r11_94, out r15_116)
	r2_108 = -5_i
	branch r11_94 == 0 l0000643C_ds_t
l0000643C_ds_t:
l0000643C_ds_f:
l00006458:
	r2_108 = 0_i
l0000645C:
l00006460:
	word32 r11_119
	fn0000FEDC(r11_44, r2_108, r15_116, out r11_119, out r15_116)
	r14_131 = r11_119
l0000646C:
	word32 r4_147 = r14_131 - 1_i << 8 | r2_108 - 1_i << 4
	Mem150[0x1C20020:word32] = r4_147 | 0x80000000
	Mem153[0x1C20020:word32] = r4_147 | 0x80100000
	word32 r15_167
	word32 r14_219
	fn0000C8A0(-20_i, r15_116, out r14_219, out r15_167)
	word32 r11_187 = fn000062BC(r3, r15_167) << 3
	r15Out = r15_167
	return r11_187
fn00006394_exit:


void fn000064DC(word32 r3, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r9
fn000064DC_entry:
l000064DC:
	Mem27[0x1C2015C:word32] = Mem11[0x1C2015C:word32] & 0x7FFFFFFF
	Mem34[0x1C200FC:word32] = Mem27[0x1C200FC:word32] & 0x7FFFFFFF
	Mem40[0x1C20060:word32] = Mem34[0x1C20060:word32] & 0xFFFFBFFF
	Mem44[0x1C202C0:word32] = Mem40[0x1C202C0:word32] & 0xFFFFBFFF
	word32 r3_46 = Mem44[0x1C20020:word32]
	Mem49[0x1C20020:word32] = r3_46 & 0x7FFFFFFF
	Mem51[0x1C20020:word32] = r3_46 & 0x7FFFFFFF | 0x100000
	Mem56[0x1C200F4:word32] = Mem51[0x1C200F4:word32] & 0x7FFFFFFF
	word32 r15_70
	word32 r14_221
	word32 r22_78 = Mem56[fn0000C8A0(-10_i, r15, out r14_221, out r15_70):word32]
	word32 r15_85
	Mem98[r3:word32] = fn00006394(r3, r15_70, out r15_85) >>u 1
	word32 r15_109
	word32 r14_222
	Mem118[fn0000C8A0(-1000_i, r15_85, out r14_222, out r15_109):word32] = r22_78 & 0xFFCFFFFF
	word32 r14_123
	word32 r15_129
	word32 r2_120 = fn0000C8A0(-10_i, r15_109, out r14_123, out r15_129)
	Mem139[r2_120:word32] = r22_78 & 0xFFCFFFFF | 0x10000
	Mem142[0x1C202C0:word32] = Mem139[0x1C202C0:word32] | 0x4000
	Mem145[0x1C20060:word32] = Mem142[0x1C20060:word32] | 0x4000
	Mem149[0x1C62094:word32] = -1_i
	Mem153[0x1C200FC:word32] = Mem149[0x1C200FC:word32] | 0x80000000
	Mem156[r14_123:word32] = Mem153[r14_123:word32] | 0x80000000
	Mem159[r2_120:word32] = Mem156[r2_120:word32] | 0x80000000
	word32 r15_173
	word32 r14_223
	Mem182[0x1C6300C:word32] = fn0000C8A0(-2000_i, r15_129, out r14_223, out r15_173)
	word32 r14_224
	word32 r15_225
	fn0000C8A0(-10_i, r15_173, out r14_224, out r15_225)
	return
fn000064DC_exit:


word32 fn00006678(word32 r3, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r1 r15 r2
// Trashed: CV r1 r11 r12 r13 r15 r2 r3 r4 r5 r6 r7 r8
// Preserved:
fn00006678_entry:
l00006678:
	word32 r7_23
	word32 r6_9 = Mem5[r3 + 4_i:word32]
	word32 r4_20 = Mem5[r3 + 20_i:word32]
	word32 r5_19 = Mem5[0x1C62000:word32] & 0xFF000FFF | 0x400000 | (r6_9 & 7) << 0x10
	branch (r4_20 & 1) == 0 l00006678_ds_t
l00006678_ds_t:
	r7_23 = -4096_i
l00006678_ds_f:
l000066C4:
	r7_23 = 0_i
l000066C8:
	word32 r5_42
	branch r6_9 >u 7 || r6_9 <u 6_i l000066C8_ds_t
l000066C8_ds_t:
	word32 r5_35 = r5_19 | r7_23
l000066E4:
	r5_42 = r5_35 | Mem5[r3 + 92_i:word32] << 0xE & 0x80000
l000066C8_ds_f:
	word32 r5_43 = r5_19 | r7_23
l000066D8:
	r5_42 = r5_43 | 0x80000
l000066F8:
	Mem51[0x1C62000:word32] = r5_42
	word32 r13_195 = -1_i
	branch (r4_20 & 0x100) == 0 l000066F8_ds_t
l000066F8_ds_t:
l000066F8_ds_f:
l00006718:
	r13_195 = -2_i
l0000671C:
	word32 r11_64 = Mem51[r3 + 16_i:word32]
	word32 r15_65 = r4_20 >>u 0xC & 1
	word32 r4_124 = 0_i
	word32 r7_116 = 0x1C62000
	word32 r8_113 = 0
l00006738:
	word32 r5_100
	word32 r6_92 = r11_64 >>u r4_124
	word32 r5_91 = Mem73[r7_116:word32] & 0xFFFFF000 | r15_65 | (r11_64 >>u r4_124 + -12_i & 1) << 2 | (r11_64 >>u r4_124 + -4_i & 0xFF) - 1_i << 4 & 0xFF
	branch (r6_92 & 0xF) == 2 l0000671C_ds_t
l0000671C_ds_t:
l000067C8:
	r5_100 = r5_91 | 0x800
l0000671C_ds_f:
l0000678C:
	branch (r6_92 & 0xF) >u 2 l0000678C_ds_t
l0000678C_ds_t:
l000067A8:
	branch (r6_92 & 0xF) == 4 l000067A8_ds_t
l000067A8_ds_t:
l000067C0:
	r5_100 = r5_91 | 0x900
l000067A8_ds_f:
l000067B0:
	branch !((r6_92 & 0xF) == 8) l000067B0_ds_t
l000067B0_ds_t:
l000067B0_ds_f:
l000067B8:
	r5_100 = r5_91 | 0xA00
l0000678C_ds_f:
l00006794:
	branch !((r6_92 & 0xF) == 1) l00006794_ds_t
l00006794_ds_t:
l000067D0:
	r5_100 = r5_91 | 0x600
l00006794_ds_f:
l000067A0:
	r5_100 = r5_91 | 0x700
l000067D4:
	Mem111[r7_116:word32] = r5_100
	r8_113 = r8_113 + -1_i
	r7_116 = r7_116 + -4_i
	branch r8_113 <u r13_195 l000067D4_ds_t
l000067D4_ds_t:
	r4_124 = r4_124 + -16_i
l000067D4_ds_f:
l000067EC:
	word32 r5_129 = -513_i
	branch (Mem111[0x1C62000:word32] & 1) == 0 l000067EC_ds_t
l000067EC_ds_t:
l000067EC_ds_f:
l0000680C:
	r5_129 = -771_i
l00006810:
	Mem150[0x1C63120:word32] = r5_129
	branch (r4_20 & 1) == 0 l00006810_ds_t
l00006810_ds_t:
l00006810_ds_f:
l00006824:
	Mem156[0x1C63444:word32] = 0_i
	Mem157[0x1C634C4:word32] = 0_i
l00006834:
	word32 r4_164 = Mem163[r3 + 56_i:word32]
	Mem173[0x1C62000:word32] = (r4_164 & 3) << 0x19 | Mem163[0x1C62000:word32]
	Mem179[0x1C62004:word32] = r4_164 << 0xA & 0x1FF000 | Mem173[0x1C62004:word32]
	r15Out = r15_65
	return dwLoc0C
fn00006678_exit:


word32 fn00006E54()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1
fn00006E54_entry:
l00006E54:
	word32 r11_20
	word32 r3_6 = Mem0[0x1C62000:word32]
	word32 r3_14 = r3_6 & 3
	word32 r11_17 = (r3_6 >>u 8 & 0xF) + (r3_6 >>u 4 & 0xF) - 14_i + (r3_6 >>u 2 & 3)
	branch (r3_6 & 3) == 0 l00006E54_ds_t
l00006E54_ds_t:
	r11_20 = -1_i << r11_17
l00006E54_ds_f:
	r11_20 = -1_i << r11_17
l00006E98:
	word32 r4_24 = Mem0[0x1C62004:word32]
	r3_14 = r11_20
	branch (r4_24 & 3) == 0 l00006E98_ds_t
l00006E98_ds_t:
l00006E98_ds_f:
l00006EB4:
	r3_14 = -1_i << (((r4_24 >>u 8 & 0xF) + (r4_24 >>u 4 & 0xF)) - 14_i) + (r4_24 >>u 2 & 3)
l00006ED8:
	return r3_14 + r11_20
fn00006E54_exit:


word32 fn00006EE0(word32 r3, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11 r2
// Trashed: CV r1 r11 r2 r4 r5 r6 r7
// Preserved:
fn00006EE0_entry:
l00006EE0:
	word32 r4_18
	word32 r11_62
	branch (Mem5[0x1C63010:word32] & 0x400000) == 0 l00006EE0_ds_t
l00006EE0_ds_t:
l00006F50:
	r4_18 = Mem5[r3 + 20_i:word32] & 0xFFFFFFF0 | 0x1000
l00006EE0_ds_f:
l00006F04:
	word32 r5_34
	word32 r5_23 = Mem5[0x1C63348:word32]
	word32 r6_29 = Mem5[0x1C633C8:word32] >>u 0x18 & 3
	word32 r7_30 = Mem5[0x1C63448:word32]
	word32 r4_31 = Mem5[0x1C634C8:word32]
	branch r6_29 != 2 l00006F04_ds_t
l00006F04_ds_t:
l00006FB0:
	r5_34 = r6_29 | r5_23 >>u 0x18 & 3
l00006F04_ds_f:
	word32 r5_37 = r5_23 >>u 0x18 & 3
l00006F3C:
	branch (r5_23 >>u 0x18 & 3) == 2 l00006F3C_ds_t
l00006F3C_ds_t:
l00006F64:
	branch (r4_31 >>u 0x18 & 3) != 2 l00006F64_ds_t
l00006F64_ds_t:
l00006F64_ds_f:
l00006F78:
	branch (r7_30 >>u 0x18 & 3) != 2 l00006F78_ds_t
l00006F78_ds_t:
l00006F9C:
	r4_18 = Mem5[r3 + 20_i:word32] & 0xFFFF0FF0 | 1
l00006F78_ds_f:
l00006F8C:
	r4_18 = Mem5[r3 + 20_i:word32] & 0xFFFF0FF0
l00006F3C_ds_f:
	r5_34 = r6_29 | r5_37
l00006F48:
l00006FB8:
	r11_62 = 0_i
	branch r5_34 != 0_i l00006FB8_ds_t
l00006FB8_ds_t:
l00006FB8_ds_f:
l00006FC4:
	r4_18 = Mem5[r3 + 20_i:word32] & 0xFFFFEFF0 | 0x1001
l00006FD4:
	Mem73[r3 + 20_i:word32] = r4_18
	r11_62 = -1_i
l00006FDC:
	r11Out = r11_62
	return dwLoc0C
fn00006EE0_exit:


word32 fn00006FE8(word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut: r11 r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r9
fn00006FE8_entry:
l00006FE8:
	Mem22[0x1C63100:word32] = Mem7[0x1C63100:word32] | 0x2000000
	Mem27[0x40000000:word32] = 0x12345678
	word32 r14_36
	word32 r15_42
	word32 r2_33 = fn0000C8A0(-10_i, r15, out r14_36, out r15_42)
	word32 r1_32 = <invalid>
	branch (Mem27[r2_33 | 0x3010:word32] >>u 0xD & 1) == 0 l00006FE8_ds_t
l00006FE8_ds_t:
l000070C0:
	word32 r3_55 = Mem27[r14_36 + 20_i:word32]
	branch (r3_55 & 0xF) != 0 l000070C0_ds_t
l000070C0_ds_t:
l000070C0_ds_f:
l000070D4:
	Mem65[r14_36 + 20_i:word32] = r3_55 & 0xFFFFFFF0
l00006FE8_ds_f:
l00007058:
	word32 r4_74 = Mem27[r2_33 | 0x3348:word32] >>u 0x1C & 1
	word32 r3_76 = Mem27[r2_33 | 0x33C8:word32] >>u 0x1C & 1
	Mem80[r1_32:word32] = r4_74
	branch r4_74 != 0_i l00007058_ds_t
l00007058_ds_t:
	Mem82[r1_32 + 4_i:word32] = r3_76
l000070E0:
l00007058_ds_f:
	Mem84[r1_32 + 4_i:word32] = r3_76
l00007098:
	branch r3_76 != 0_i l00007098_ds_t
l00007098_ds_t:
l00007098_ds_f:
l000070A4:
	Mem92[r14_36 + 20_i:word32] = Mem84[r14_36 + 20_i:word32] & 0xFFFFFFF0 | 1
l000070E4:
	word32 r20_101 = Mem99[0x1C63100:word32]
	Mem105[0x1C63100:word32] = r20_101 & 0xFBFFFFFF
	word32 r15_118
	word32 r14_380
	fn0000C8A0(-100_i, r15_42, out r14_380, out r15_118)
	Mem129[0x1C63100:word32] = r20_101 & 0xFBFFFFFF | 0x4000000
	Mem133[0x1C63100:word32] = Mem129[0x1C63100:word32] | 0x1000000
	Mem136[0x1C63010:word32] = Mem133[0x1C63010:word32] & 0xFFFFDFFF
	word32 r14_143
	word32 r15_149
	word32 r2_140 = fn0000C8A0(-10_i, r15_118, out r14_143, out r15_149)
	branch r2_140 != 0 l000070E4_ds_t
l000070E4_ds_t:
l00007164:
	branch (Mem136[r14_143 + 20_i:word32] >>u 0xC & 0xF) == 0 l00007164_ds_t
l00007164_ds_t:
	r2_140 = -1_i
l000072F8:
	Mem170[0x1C63100:word32] = Mem136[0x1C63100:word32] & 0xFDFFFFFF
l00007164_ds_f:
l0000717C:
	word32 r3_175 = Mem136[r14_143 + 16_i:word32]
	Mem191[(-1_i << (((r3_175 >>u 0xC & 0xF) + (r3_175 >>u 4 & 0xFF)) + -11_i) + (r3_175 & 0xF) * 2) + 0x40000000:word32] = 0x1234ABCD
	word32 r1_195 = <invalid>
	word32 r14_199
	word32 r15_205
	branch (Mem191[0x1C63010:word32] >>u 0xD & fn0000C8A0(-10_i, r15_149, out r14_199, out r15_205)) == 0 l0000717C_ds_t
l0000717C_ds_t:
l0000728C:
	Mem219[r14_199 + 20_i:word32] = Mem191[r14_199 + 20_i:word32] | 0x1000
l0000717C_ds_f:
l000071E4:
	word32 r2_242
	word32 r2_230 = Mem191[0x1C63348:word32] >>u 0x1C & -1_i
	word32 r5_231 = Mem191[0x1C634C8:word32]
	word32 r3_232 = Mem191[0x1C633C8:word32] >>u 0x1C & -1_i
	word32 r4_233 = Mem191[0x1C63448:word32] >>u 0x1C & -1_i
	Mem235[r1_195:word32] = r2_230
	Mem236[r1_195 + 4_i:word32] = r3_232
	Mem237[r1_195 + 8_i:word32] = r4_233
	branch r2_230 == 0 l000071E4_ds_t
l000071E4_ds_t:
l0000726C:
	branch r3_232 != 0 l0000726C_ds_t
l0000726C_ds_t:
l0000726C_ds_f:
l00007278:
	r2_242 = Mem237[r14_199 + 20_i:word32] | 0x1000
l000071E4_ds_f:
	word32 r5_243 = r5_231 >>u 0x1C & -1_i
l00007234:
	branch r3_232 == 0 l00007234_ds_t
l00007234_ds_t:
l00007234_ds_f:
l00007240:
	branch r4_233 == 0 l00007240_ds_t
l00007240_ds_t:
l00007240_ds_f:
l0000724C:
	branch r5_243 == 0 l0000724C_ds_t
l0000724C_ds_t:
l0000724C_ds_f:
l00007258:
	r2_242 = Mem237[r14_199 + 20_i:word32] & 0xFFFF0FFF
l00007280:
	Mem259[r14_199 + 20_i:word32] = r2_242
l00007298:
	word32 r18_267 = Mem266[0x1C63100:word32]
	Mem271[0x1C63100:word32] = r18_267 & 0xFBFFFFFF
	word32 r14_278
	word32 r15_284
	fn0000C8A0(-100_i, r15_205, out r14_278, out r15_284)
	Mem295[r14_278:word32] = r18_267 & 0xFBFFFFFF | 0x4000000
	Mem298[r14_278:word32] = Mem295[r14_278:word32] | 0x1000000
	Mem302[0x1C63010:word32] = Mem298[0x1C63010:word32] & 0xFFFFDFFF
	word32 r15_382
	word32 r14_381
	fn0000C8A0(-10_i, r15_284, out r14_381, out r15_382)
l000070E4_ds_f:
l0000714C:
	Mem326[0x1C63100:word32] = Mem136[0x1C63100:word32] & 0xFDFFFFFF
l00007318:
	r15Out = r15_149
	return r2_140
fn00006FE8_exit:


word32 fn00007338(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r2 r3 r5 r6 r7 r8
// Preserved:
fn00007338_entry:
l00007338:
	word32 r6_19 = 0x40000000
	word32 r3_9 = r3 >>u 1 << 0x14
	word32 r5_10 = 0_i
l0000737C:
	branch r5_10 <u r4 l0000737C_ds_t
l0000737C_ds_t:
l00007354:
	Mem20[r6_19:word32] = r5_10 + 0x1234567
	Mem26[r6_19 + r3_9:word32] = r5_10 + 0xFEDCBA98
	r6_19 = r6_19 + -4_i
	r5_10 = r5_10 + -1_i
l0000737C_ds_f:
l00007388:
	word32 r6_30 = 0x40000000
	word32 r5_31 = 0_i
l000073D0:
	word32 r11_47
	branch r5_31 <u r4 l000073D0_ds_t
l000073D0_ds_t:
	word32 r7_38 = r6_30 + r3_9
l00007394:
	branch Mem75[r7_38:word32] != r5_31 + 0xFEDCBA98 l00007394_ds_t
l00007394_ds_t:
	r11_47 = -1_i
l00007394_ds_f:
	r11_47 = -1_i
l000073B0:
	branch Mem75[r6_30:word32] != r5_31 + 0x1234567 l000073B0_ds_t
l000073B0_ds_t:
l000073B0_ds_f:
	r6_30 = r6_30 + -4_i
l000073CC:
	r5_31 = r5_31 + -1_i
l000073D0_ds_f:
l000073DC:
	r11_47 = 0_i
l000073E0:
	return r11_47
fn00007338_exit:


word32 fn000073EC(word32 r3, word32 r14, word32 r15, word32 r16, word32 r18, word32 r20, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..31] r15:[0..31] r16:[0..31] r18:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r14 r15 r16 r18 r2 r20
// Trashed: CV r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn000073EC_entry:
l000073EC:
	fn000064DC(r3, r15)
	word32 r15_30
	word32 r2_31 = fn00006678(r3, out r15_30)
	word32 r1_26 = <invalid>
	fn000051E8(r2_31, r15_30, Mem6[r1_26 + 96_i:word32], Mem6[r1_26 + 100_i:word32], Mem6[r1_26 + 104_i:word32], Mem6[r1_26 + 108_i:word32], Mem6[r1_26 + 112_i:word32], Mem6[r1_26 + 116_i:word32], Mem6[r1_26 + 120_i:word32], Mem6[r1_26 + 124_i:word32], Mem6[r1_26 + 128_i:word32], Mem6[r1_26 + 132_i:word32], Mem6[r1_26 + 136_i:word32], Mem6[r1_26 + 140_i:word32], Mem6[r1_26 + 144_i:word32])
	word32 r9_65 = Mem6[r1_26 + -12_i:word32]
	word32 r2_66 = Mem6[r1_26 - 16_i:word32]
l00006880:
	Mem68[r1_26 - 32_i:word32] = r2_66
	Mem71[r1_26 - 28_i:word32] = r14
	word32 r14_72 = Mem71[r2_31 + 92_i:word32]
	word32 r7_80 = Mem71[r2_31 + 12_i:word32] & 1 ^ 1
	word32 r5_81 = Mem71[0x1C63108:word32] & 0xFFFFF0FF | 0x300
	Mem82[r1_26 + -12_i:word32] = r9_65
	Mem84[r1_26 - 24_i:word32] = r16
	Mem86[r1_26 - 20_i:word32] = r18
	Mem88[r1_26 - 16_i:word32] = r20
	Mem92[0x1C63108:word32] = r5_81
	word32 r14_91 = r14_72 >>u 2 & 3
	word32 r6_93 = Mem92[r2_31:word32]
	word32 r3_118 = 0x1C63344
l000068E4:
	word32 r4_108
	word32 r5_106 = Mem98[r3_118:word32] & 0xFFFFFFCF | r7_80 << 5
	branch r6_93 <=u 0x258 l00006880_ds_t
l00006880_ds_t:
	r4_108 = r5_106 & 0xFFFF0FF1
l00006880_ds_f:
l00006904:
	r4_108 = r5_106 & 0xFFFF09F1 | 0x400
l00006914:
	Mem116[r3_118:word32] = r4_108
	r3_118 = r3_118 + -128_i
	branch r3_118 != 0x1C63544 l00006914_ds_t
l00006914_ds_t:
l00006914_ds_f:
l00006930:
	word32 r4_174
	word32 r16_157
	word32 r3_163
	Mem133[0x1C63208:word32] = (Mem116[0x1C63208:word32] | 2) & 0xFFFFF7FF
	word32 r15_140 = fn00004D60(r2_31)
	branch r14_91 == 1 l00006930_ds_t
l00006930_ds_t:
l00006970:
	Mem161[0x1C63108:word32] = Mem133[0x1C63108:word32] & 0xFFFFFF3F
	r16_157 = 0x1C630BC
	r3_163 = Mem161[0x1C630BC:word32] & 0xFFFFFEF8
l00006930_ds_f:
l00006960:
	branch !(r14_91 == 2) l00006960_ds_t
l00006960_ds_t:
l00006A04:
	Mem170[0x1C63108:word32] = Mem133[0x1C63108:word32] & 0xFFFFFFBF
	Mem173[0x1C63108:word32] = Mem170[0x1C63108:word32] | 0xC0
	r4_174 = Mem173[r2_31 + 4_i:word32]
l00006960_ds_f:
l00006968:
l00006998:
	Mem183[0x1C63108:word32] = Mem133[0x1C63108:word32] & 0xFFFFFF3F | 0x80
	Mem197[0x1C630BC:word32] = Mem183[0x1C630BC:word32] & 0xFFFFFEF8 | 0x100 | (Mem183[0x1C63060:word32] >>u 0x10 & 0x1F) - 2_i
	r16_157 = 0x1C6311C
	r3_163 = (Mem197[0x1C6311C:word32] | 0x8000000) & 0x7FFFFFFF
l000069F8:
	Mem203[r16_157:word32] = r3_163
	r4_174 = Mem203[r2_31 + 4_i:word32]
l00006A24:
	branch r4_174 >u 7 || r4_174 <u 6_i l00006A04_ds_t
l00006A04_ds_t:
l00006A04_ds_f:
l00006A34:
	Mem220[0x1C6311C:word32] = Mem215[0x1C6311C:word32] & 0x88FFFFFF | 0x22000000
l00006A54:
	word32 r5_234
	branch (Mem223[r2_31 + 20_i:word32] & 0x1000) == 0 l00006A54_ds_t
l00006A54_ds_t:
l00006A8C:
	r5_234 = Mem223[0x1C630C0:word32] & 0xF0000000 | 0x1003087
l00006A54_ds_f:
l00006A68:
	r5_234 = Mem223[0x1C630C0:word32] & 0xF0000000 | 0x3003087
l00006AA8:
	word32 r15_343
	Mem246[0x1C630C0:word32] = r5_234
	branch (Mem246[0x1F01510:word32] & 3) == 0 l00006AA8_ds_t
l00006AA8_ds_t:
l00006C98:
	word32 r3_272
	Mem268[0x1C63140:word32] = Mem246[r2_31 + 8_i:word32] & 0xFFFFFF | Mem246[0x1C63140:word32] & 0xFF000000
	branch r14_91 != 1 l00006C98_ds_t
l00006C98_ds_t:
	bool F_271 = r4_174 == 3
l00006D18:
	branch F_271 l00006D18_ds_t
l00006D18_ds_t:
	r3_272 = -1522_i
l00006D18_ds_f:
l00006D20:
	r3_272 = -1394_i
l00006C98_ds_f:
l00006CCC:
	Mem282[0x1C63000:word32] = -82_i
	Mem285[0x1C63000:word32] = -83_i
l00006CE4:
	branch (Mem285[0x1C63010:word32] & 1) == 0 l00006CE4_ds_t
l00006CE4_ds_t:
l00006CE4_ds_f:
l00006CF8:
	word32 r14_1020
	branch Mem285[fn0000C8A0(-10_i, r15_140, out r14_1020, out r15_140) + 4_i:word32] == 3 l00006CF8_ds_t
l00006CF8_ds_t:
	r3_272 = -1440_i
l00006CF8_ds_f:
l00006D10:
	r3_272 = -1312_i
l00006D24:
	Mem327[0x1C63000:word32] = r3_272
	Mem329[0x1C63000:word32] = r3_272 | 1
	word32 r14_1021
	fn0000C8A0(-10_i, r15_140, out r14_1021, out r15_343)
l00006D44:
	branch (Mem329[0x1C63010:word32] & 1) == 0 l00006D44_ds_t
l00006D44_ds_t:
l00006D44_ds_f:
l00006AA8_ds_f:
l00006AC8:
	word32 r3_391
	Mem359[0x1F01510:word32] = Mem246[0x1F01510:word32] & 0xFFFFFFFD
	word32 r14_366
	word32 r15_372
	Mem390[0x1C63140:word32] = Mem359[fn0000C8A0(-10_i, r15_140, out r14_366, out r15_372) + 8_i:word32] & 0xFFFFFF | Mem359[0x1C63140:word32] & 0xFF000000
	branch r14_366 != 1 l00006AC8_ds_t
l00006AC8_ds_t:
	r3_391 = -98_i
l00006AC8_ds_f:
l00006B18:
	Mem398[0x1C63000:word32] = -82_i
	Mem401[0x1C63000:word32] = -83_i
l00006B30:
	branch (Mem401[0x1C63010:word32] & 1) == 0 l00006B30_ds_t
l00006B30_ds_t:
l00006B30_ds_f:
l00006B44:
	word32 r14_1016
	fn0000C8A0(-10_i, r15_372, out r14_1016, out r15_372)
	r3_391 = -32_i
l00006B50:
	Mem432[0x1C63000:word32] = r3_391
	Mem434[0x1C63000:word32] = r3_391 | 1
	word32 r14_1015
	word32 r15_448
	fn0000C8A0(-10_i, r15_372, out r14_1015, out r15_448)
l00006B70:
	branch (Mem434[0x1C63010:word32] & 1) == 0 l00006B70_ds_t
l00006B70_ds_t:
l00006B70_ds_f:
l00006B84:
	Mem470[0x1C6310C:word32] = Mem434[0x1C6310C:word32] & 0xF9FFFFFF | 0x4000000
	word32 r14_1017
	word32 r15_484
	fn0000C8A0(-10_i, r15_448, out r14_1017, out r15_484)
	Mem495[0x1C63004:word32] = Mem470[0x1C63004:word32] | 1
l00006BC0:
	branch (Mem495[0x1C63018:word32] & 7) != 3 l00006BC0_ds_t
l00006BC0_ds_t:
l00006BC0_ds_f:
l00006BD4:
	Mem508[0x1F01510:word32] = Mem495[0x1F01510:word32] & 0xFFFFFFFE
	word32 r14_1018
	word32 r15_522
	fn0000C8A0(-10_i, r15_484, out r14_1018, out r15_522)
	Mem535[0x1C63004:word32] = Mem508[0x1C63004:word32] & 0xFFFFFFFE
l00006C0C:
	branch (Mem535[0x1C63018:word32] & 7) != 1 l00006C0C_ds_t
l00006C0C_ds_t:
l00006C0C_ds_f:
l00006C20:
	word32 r14_550
	fn0000C8A0(-15_i, r15_522, out r14_550, out r15_343)
	branch r14_550 != 1 l00006C20_ds_t
l00006C20_ds_t:
l00006D58:
l00006C20_ds_f:
l00006C34:
	Mem574[0x1C63108:word32] = Mem535[0x1C63108:word32] & 0xFFFFFF3F
	Mem580[0x1C6310C:word32] = Mem574[0x1C6310C:word32] & 0xF9FFFFFF | 0x2000000
	word32 r14_1019
	fn0000C8A0(r14_550, r15_343, out r14_1019, out r15_343)
	Mem603[0x1C63000:word32] = -1025_i
l00006C7C:
	branch (Mem603[0x1C63010:word32] & 1) == 0 l00006C7C_ds_t
l00006C7C_ds_t:
l00006C7C_ds_f:
l00006C90:
l00006D60:
	word32 r4_619 = Mem615[0x1C63010:word32] >>u 0x14 & 0xFF
	word32 r20_624 = ((0 - r4_619 | r4_619) ^ 0xFFFF) >>u 0x1F
l00006D80:
	branch (Mem615[0x1C63018:word32] & 1) == 0 l00006D80_ds_t
l00006D80_ds_t:
l00006D80_ds_f:
l00006D94:
	Mem636[0x1C6308C:word32] = Mem615[0x1C6308C:word32] | 0x80000000
	word32 r14_1022
	word32 r15_654
	fn0000C8A0(-10_i, r15_343, out r14_1022, out r15_654)
	Mem665[0x1C6308C:word32] = Mem636[0x1C6308C:word32] & 0x7FFFFFFF
	word32 r14_1023
	word32 r15_678
	fn0000C8A0(-10_i, r15_654, out r14_1023, out r15_678)
	Mem689[0x1C620D0:word32] = Mem665[0x1C620D0:word32] | 0x80000000
	word32 r14_696
	word32 r15_702
	word32 r2_713 = Mem689[fn0000C8A0(-10_i, r15_678, out r14_696, out r15_702) + 4_i:word32]
	Mem717[0x1C6310C:word32] = Mem689[0x1C6310C:word32] & 0xF9FFFFFF
	branch r2_713 >u 7 || r2_713 <u 6_i l00006D94_ds_t
l00006D94_ds_t:
l00006D94_ds_f:
l00006E14:
	branch r14_696 != 1 l00006E14_ds_t
l00006E14_ds_t:
l00006E14_ds_f:
l00006E1C:
	Mem728[0x1C6311C:word32] = Mem717[0x1C6311C:word32] & 0xFFFFFF3F | 0x40
l00006E30:
	r11Out = r20_624
	r14Out = dwLoc14
	r15Out = r15_702
	r16Out = dwLoc10
	r18Out = dwLoc0C
	r20Out = r2
	return dwLoc18
fn000073EC_exit:


word32 fn00007428(word32 r3, word32 r15, word32 r20, ptr32 & r15Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r15 r20
// Trashed: CV r11 r12 r13 r15 r17 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r9
fn00007428_entry:
l00007428:
	word32 r14_10 = Mem7[r3 + 92_i:word32]
	word32 r18_18 = Mem17[r3 + 16_i:word32]
	word32 r16_19 = Mem17[r3 + 20_i:word32]
	Mem20[r3 + 16_i:word32] = 0xB000B0
	Mem24[r3 + 92_i:word32] = r14_10 | 1
	Mem25[r3 + 20_i:word32] = 0_i
	branch ((r14_10 | 1) & 0x10) == 0_i l00007428_ds_t
l00007428_ds_t:
l00007428_ds_f:
l00007478:
	Mem33[r3 + 92_i:word32] = r14_10 | 5
l00007480:
	bool F_114
	Mem38[r3:word32] = Mem35[r3 + 68_i:word32] & 0x3FF
	Mem40[r3 + 4_i:word32] = -7_i
	Mem43[r3 + 8_i:word32] = 0x3B3BF9
	Mem45[r3 + 80_i:word32] = -21765_i
	Mem47[r3 + 84_i:word32] = 0x33330000
	Mem49[r3 + 88_i:word32] = 0xCCCC
	Mem52[r3 + 36_i:word32] = -2_i
	word32 r11_433
	word32 r14_145
	word32 r18_149
	word32 r16_147
	word32 r15_104
	word32 r20_152
	word32 r2_116 = fn000073EC(r3, r14_10, r15, r16_19, r18_18, r20, out r11_433, out r14_145, out r15_104, out r16_147, out r18_149, out r20_152)
	branch (Mem52[r2_116 + 92_i:word32] & 0x10) != 0 l00007480_ds_t
l00007480_ds_t:
l000074EC:
	word32 r11_91
	r2_116 = fn00006EE0(r2_116, out r11_91)
	F_114 = r11_91 != 0
l00007480_ds_f:
l000074DC:
	F_114 = fn00006FE8(r15_104, out r15_104) != 0
l000074F8:
	word32 r11_253
	branch F_114 l000074F8_ds_t
l000074F8_ds_t:
l000074F8_ds_f:
l00007500:
	bool F_180
	Mem121[r2_116:word32] = Mem52[r2_116 + 68_i:word32] >>u 0xA & 0x3FF
	Mem123[r2_116 + 4_i:word32] = -6_i
	Mem126[r2_116 + 8_i:word32] = 0x3B3BF9
	Mem128[r2_116 + 80_i:word32] = -21765_i
	Mem130[r2_116 + 84_i:word32] = 0x33330000
	Mem132[r2_116 + 88_i:word32] = 0xCCCC
	Mem135[r2_116 + 36_i:word32] = -2_i
	word32 r11_434
	r2_116 = fn000073EC(r2_116, r14_145, r15_104, r16_147, r18_149, r20_152, out r11_434, out r14_145, out r15_104, out r16_147, out r18_149, out r20_152)
	branch (Mem135[r2_116 + 92_i:word32] & 0x10) != 0 l00007500_ds_t
l00007500_ds_t:
l00007570:
	word32 r11_172
	r2_116 = fn00006EE0(r2_116, out r11_172)
	F_180 = r11_172 != 0
l00007500_ds_f:
l00007560:
	F_180 = fn00006FE8(r15_104, out r15_104) != 0
l0000757C:
	branch F_180 l0000757C_ds_t
l0000757C_ds_t:
l0000757C_ds_f:
l00007584:
	bool F_261
	Mem202[r2_116:word32] = Mem135[r2_116 + 68_i:word32] >>u 0x14 & 0x3FF
	Mem204[r2_116 + 4_i:word32] = -3_i
	Mem207[r2_116 + 8_i:word32] = 0x3B3BF9
	Mem209[r2_116 + 80_i:word32] = -21765_i
	Mem211[r2_116 + 84_i:word32] = 0x33330000
	Mem213[r2_116 + 88_i:word32] = 0xBBBB
	Mem216[r2_116 + 28_i:word32] = -64_i
	word32 r11_435
	r2_116 = fn000073EC(r2_116, r14_145, r15_104, r16_147, r18_149, r20_152, out r11_435, out r14_145, out r15_104, out r16_147, out r18_149, out r20_152)
	branch (Mem216[r2_116 + 92_i:word32] & 0x10) != 0 l00007584_ds_t
l00007584_ds_t:
l000075F4:
	r2_116 = fn00006EE0(r2_116, out r11_253)
	F_261 = r11_253 == 0
l00007584_ds_f:
l000075E4:
	r11_253 = fn00006FE8(r15_104, out r15_104)
	F_261 = r11_253 == 0
l00007600:
	branch F_261 l00007600_ds_t
l00007600_ds_t:
l00007600_ds_f:
l00007608:
	Mem282[r2_116 + 92_i:word32] = r14_145
	Mem285[r2_116 + 16_i:word32] = r18_149
	Mem288[r2_116 + 20_i:word32] = r16_147
	r11_253 = -1_i
l00007618:
	r15Out = r15_104
	r20Out = r20_152
	return r11_253
fn00007428_exit:


word32 fn00007634(word32 r3, word32 r15, word32 r18, word32 r20, ptr32 & r15Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r18:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r15 r18 r20
// Trashed: CV r11 r12 r13 r15 r17 r18 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00007634_entry:
l00007634:
	word32 r14_10 = Mem7[r3 + 92_i:word32]
	word32 r16_16 = Mem15[r3 + 16_i:word32]
	Mem18[r3 + 16_i:word32] = 0xB000B0
	Mem21[r3 + 92_i:word32] = r14_10 | 1
	Mem22[r3 + 20_i:word32] = -4096_i
	branch ((r14_10 | 1) & 0x10) == 0 l00007634_ds_t
l00007634_ds_t:
l00007634_ds_f:
l0000767C:
	Mem30[r3 + 92_i:word32] = r14_10 | 5
l00007684:
	word32 r14_44
	word32 r16_46
	word32 r18_48
	word32 r20_51
	word32 r11_184
	word32 r15_134
	word32 r2_106 = fn000073EC(r3, r14_10, r15, r16_16, r18, r20, out r11_184, out r14_44, out r15_134, out r16_46, out r18_48, out r20_51)
	word32 r11_110 = 0_i
	branch (Mem71[0x1C63010:word32] & 0x100000) != 0_i l00007684_ds_t
l00007684_ds_t:
l00007684_ds_f:
l000076B0:
	bool F_103
	branch (Mem71[r2_106 + 92_i:word32] & 0x10) != 0_i l000076B0_ds_t
l000076B0_ds_t:
l000076D4:
	r2_106 = fn00006EE0(r2_106, out r11_110)
	F_103 = r11_110 == 0
l000076B0_ds_f:
l000076C4:
	r11_110 = fn00006FE8(r15_134, out r15_134)
	F_103 = r11_110 == 0
l000076E0:
	branch F_103 l000076E0_ds_t
l000076E0_ds_t:
l000076E0_ds_f:
l000076E8:
	Mem107[r2_106 + 92_i:word32] = r14_44
	Mem109[r2_106 + 16_i:word32] = r16_46
	r11_110 = -1_i
l000076F4:
	r15Out = r15_134
	r18Out = r18_48
	r20Out = r20_51
	return r11_110
fn00007634_exit:


word32 fn0000770C(word32 r3, word32 r14, word32 r15, word32 r16, word32 r18, word32 r20, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..31] r15:[0..31] r16:[0..31] r18:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r14 r15 r16 r18 r2 r20
// Trashed: CV r1 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000770C_entry:
l0000770C:
	word32 r20_29
	word32 r16_813
	word32 r14_812
	word32 r18_814
	word32 r15_23
	word32 r11_19
	word32 r2_28 = fn000073EC(r3, r14, r15, r16, r18, r20, out r11_19, out r14_812, out r15_23, out r16_813, out r18_814, out r20_29)
	branch r11_19 == 0 l0000770C_ds_t
l0000770C_ds_t:
l0000770C_ds_f:
	word32 r7_171 = 0_i
l00007738:
	word32 r23_49 = Mem12[r2_28 + 20_i:word32]
	word32 r11_53 = r23_49 >>u 8 & 0xF
	word32 r5_52 = 0x40000000
	word32 r19_54 = 0_i
	r11_19 = r11_53 + -1_i
	word32 r17_428 = 0_i
l000079E0:
	word32 r15_63 = r5_52 ^ 0xFFFF
	word32 r8_64 = r5_52
	word32 r6_65 = r15_63
	word32 r4_66 = 0_i
l0000776C:
	word32 r12_72
	branch (r4_66 & 1) != 0 l0000776C_ds_t
l0000776C_ds_t:
	r12_72 = r8_64
l0000776C_ds_f:
l0000777C:
	r12_72 = r6_65
l00007780:
	Mem78[r8_64:word32] = r12_72
	r4_66 = r4_66 + -1_i
	r8_64 = r8_64 + -4_i
	branch r4_66 != 0x40 l00007780_ds_t
l00007780_ds_t:
	r6_65 = r6_65 - 4_i
l00007780_ds_f:
l00007798:
	Mem97[0x1C62000:word32] = Mem78[0x1C62000:word32] & 0xFFFFF0F3 | 0x6F0
	word32 r6_143 = -11_i
	word32 r14_102 = -22_i
l000077B4:
	word32 r8_100 = 0_i
	word32 r12_105 = r15_63
	word32 r4_106 = 0
	word32 r14_108 = (-1_i << r14_102) + r5_52
l000077C8:
	word32 r21_114
	branch (r4_106 & 1) == 0 l00007798_ds_t
l00007798_ds_t:
	r21_114 = r12_105
l00007798_ds_f:
l000077D8:
	r21_114 = r8_100 + r5_52
l000077DC:
	word32 r4_172
	bool F_144
	branch r21_114 == Mem97[r8_100 + r14_108:word32] l000077DC_ds_t
l000077DC_ds_t:
	r4_106 = r4_106 + -1_i
l0000780C:
	r8_100 = r8_100 + -4_i
	branch r4_106 != 0x40 l0000780C_ds_t
l0000780C_ds_t:
	r12_105 = r12_105 - 4_i
l0000780C_ds_f:
l0000781C:
	F_144 = r6_143 >u 0xF
l000077DC_ds_f:
	word32 r4_145 = r4_106 + -1_i
l000077F0:
	branch !(r4_145 == 0x41) l000077F0_ds_t
l000077F0_ds_t:
	r6_143 = r6_143 + -1_i
l00007824:
	branch r6_143 != 0x11 l00007824_ds_t
l00007824_ds_t:
	r14_102 = r6_143 + -11_i
l00007824_ds_f:
l00007830:
l000077F0_ds_f:
	word32 r6_159 = r6_143 + -1_i
l00007800:
	r6_143 = r6_159 - 1_i
	F_144 = r6_159 >u 0x10 || r6_159 <u 1_i
l00007838:
	branch !F_144 l00007838_ds_t
l00007838_ds_t:
	r4_172 = r7_171 + -4_i
l00007838_ds_f:
l00007840:
l00007844:
	r6_143 = -16_i
	r4_172 = r7_171 + -4_i
l00007848:
	word32 r14_224 = r6_143 << r4_172 | (-255_i << r4_172 ^ 0xFFFF) & Mem97[r2_28 + 16_i:word32]
	Mem233[0x1C62000:word32] = Mem97[0x1C62000:word32] & 0xFFFFF003 | 0x6A4
	word32 r12_214 = r15_63
	word32 r8_231 = r5_52
	word32 r4_234 = 0_i
l00007880:
	word32 r21_240
	branch (r4_234 & 1) != 0 l00007848_ds_t
l00007848_ds_t:
	r21_240 = r8_231
l00007848_ds_f:
l00007890:
	r21_240 = r12_214
l00007894:
	branch r21_240 != Mem233[r8_231 + 2048_i:word32] l00007894_ds_t
l00007894_ds_t:
l00007894_ds_f:
	r8_231 = r8_231 + -4_i
l000078A4:
	r4_234 = r4_234 + -1_i
	branch r4_234 != 0x40 l000078A4_ds_t
l000078A4_ds_t:
	r12_214 = r12_214 - 4_i
l000078A4_ds_f:
l000078B4:
	word32 r4_264 = r4_234 ^ 0x40
	Mem301[0x1C62000:word32] = Mem233[0x1C62000:word32] & 0xFFFFF003 | 0xAA0
	word32 r4_266 = 0 - r4_264 | r4_264
	word32 r4_272 = r7_171 + -12_i
	word32 r14_297 = r4_266 >>u 0x1F << r4_272 | r14_224 & (-15_i << r4_272 ^ 0xFFFF)
	word32 r4_302 = -9_i
	word32 r16_312 = 0_i
l000078F8:
	word32 r12_313 = 0_i
	word32 r21_315 = r15_63
	word32 r16_318 = r16_312 + r5_52
	word32 r8_320 = 0
l00007908:
	word32 r29_325
	branch (r8_320 & 1) == 0 l000078B4_ds_t
l000078B4_ds_t:
	r29_325 = r21_315
l000078B4_ds_f:
l00007918:
	r29_325 = r12_313 + r5_52
l0000791C:
	word32 r12_385
	word32 r12_382
	bool F_355
	branch r29_325 == Mem301[r12_313 + r16_318:word32] l0000791C_ds_t
l0000791C_ds_t:
	r8_320 = r8_320 + -1_i
l0000794C:
	r12_313 = r12_313 + -4_i
	branch r8_320 != 0x40 l0000794C_ds_t
l0000794C_ds_t:
	r21_315 = r21_315 - 4_i
l0000794C_ds_f:
l0000795C:
	F_355 = r4_302 >u 0xC
l0000791C_ds_f:
	word32 r8_356 = r8_320 + -1_i
l00007930:
	branch !(r8_356 == 0x41) l00007930_ds_t
l00007930_ds_t:
	r4_302 = r4_302 + -1_i
l00007964:
	branch r4_302 != 0xE l00007964_ds_t
l00007964_ds_t:
	r16_312 = -1_i << r4_302
l00007964_ds_f:
l00007970:
l00007930_ds_f:
	word32 r4_371 = r4_302 + -1_i
l00007940:
	r4_302 = r4_371 - 1_i
	F_355 = r4_371 >u 0xD || r4_371 <u 1_i
l00007978:
	branch F_355 l00007978_ds_t
l00007978_ds_t:
l00007990:
l00007994:
	r4_302 = -13_i
	r12_382 = -23_i
l00007978_ds_f:
	bool F_384 = r4_302 == 9
l00007980:
	branch F_384 l00007980_ds_t
l00007980_ds_t:
	r12_385 = 0_i
l00007980_ds_f:
l00007988:
	r12_382 = r4_302 - 10_i
l00007998:
	r12_385 = -1_i << r12_382
l0000799C:
	word32 r15_410 = -15_i << r7_171
	r17_428 = r17_428 + -1_i
	r15_23 = r15_410 ^ 0xFFFF
	r7_171 = r7_171 + -16_i
	word32 r8_464 = r12_385 << r7_171 | r14_297 & (r15_410 ^ 0xFFFF)
	branch r17_428 >=u r11_53 + -1_i l0000799C_ds_t
l0000799C_ds_t:
	Mem475[r2_28 + 16_i:word32] = r8_464
l000079F4:
	branch r11_53 == 0xFFFFFFFE l000079F4_ds_t
l000079F4_ds_t:
l000079F4_ds_f:
l00007A00:
	word32 r3_502
	branch !(r8_464 >>u 0x10 != (r8_464 & 0xFFFF)) l00007A00_ds_t
l00007A00_ds_t:
	r3_502 = r23_49 & 0xFFFFF0FF
l00007A00_ds_f:
l00007A14:
	r3_502 = r23_49 & 0xFFFFF0FF | 0x100
l00007A18:
	Mem507[r2_28 + 20_i:word32] = r3_502
	r11_19 = -1_i
l00007A20:
	r11Out = r11_19
	r14Out = dwLoc38
	r15Out = r15_23
	r16Out = dwLoc34
	r18Out = dwLoc30
	r20Out = r20_29
	return dwLoc3C
fn0000770C_exit:
l0000799C_ds_f:
	Mem539[r2_28 + 16_i:word32] = r8_464
l000079C4:
	r19_54 = r19_54 + -2_i + r6_143 + (r4_266 >>u 0x1F) + r4_302
	r5_52 = r5_52 + (-1_i << r19_54 + -1_i)


word32 fn00007A3C(word32 r3, word32 r14, word32 r15, word32 r16, word32 r18, word32 r20, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..31] r15:[0..31] r16:[0..31] r18:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r14 r15 r16 r18 r20
// Trashed: CV r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn00007A3C_entry:
l00007A3C:
	word32 r11_116
	branch (Mem0[r3 + 92_i:word32] & 0x2000) != 0 l00007A3C_ds_t
l00007A3C_ds_t:
l00007A3C_ds_f:
l00007A5C:
	r11_116 = fn00007428(r3, r15, r20, out r15, out r20)
	branch r11_116 == 0 l00007A5C_ds_t
l00007A5C_ds_t:
l00007A5C_ds_f:
l00007A70:
	branch (Mem9[r3 + 92_i:word32] & 0x4000) != 0 l00007A70_ds_t
l00007A70_ds_t:
l00007A70_ds_f:
l00007A84:
	r11_116 = fn00007634(r3, r15, r18, r20, out r15, out r18, out r20)
	branch r11_116 == 0 l00007A84_ds_t
l00007A84_ds_t:
l00007A84_ds_f:
l00007A98:
	word32 r2_94 = fn0000770C(r3, r14, r15, r16, r18, r20, out r11_116, out r14, out r15, out r16, out r18, out r20)
	branch r11_116 == 0 l00007A98_ds_t
l00007A98_ds_t:
l00007A98_ds_f:
l00007AAC:
	word32 r3_113 = Mem9[r2_94 + 92_i:word32]
	branch (r3_113 & 0x8000) != 0 l00007AAC_ds_t
l00007AAC_ds_t:
	r11_116 = -1_i
l00007AAC_ds_f:
	r11_116 = -1_i
l00007AC0:
	Mem124[r2_94 + 92_i:word32] = (r3_113 | 3) & 0xFFFF9FFF
l00007AD0:
	r14Out = r14
	r15Out = r15
	r16Out = r16
	r18Out = r18
	r20Out = r20
	return r11_116
fn00007A3C_exit:


word32 fn00007AE0(word32 r4, word32 r14, word32 r15, word32 r18, word32 r20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..31] r15:[0..31] r18:[0..31] r20:[0..31] r4:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r15 r17 r18 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00007AE0_entry:
l00007AE0:
	word32 r16_9 = Mem8[0x1F01510:word32]
	word32 r16_14 = r16_9 & 3
	branch (r16_9 & 3) != 0 l00007AE0_ds_t
l00007AE0_ds_t:
l00007AE0_ds_f:
l00007B10:
	branch (Mem13[r4 + 92_i:word32] & 1) != 0 l00007B10_ds_t
l00007B10_ds_t:
l00007B10_ds_f:
l00007B24:
	branch fn00007A3C(r4, r14, r15, r16_9 & 3, r18, r20, out r14, out r15, out r16_14, out r18, out r20) == 0 l00007B24_ds_t
l00007B24_ds_t:
l00007B24_ds_f:
l00007B38:
	word32 r11_62
	word32 r16_67
	word32 r18_69
	word32 r20_72
	word32 r14_424
	word32 r2_71 = fn000073EC(r4, r14, r15, r16_14, r18, r20, out r11_62, out r14_424, out r15, out r16_67, out r18_69, out r20_72)
	branch r11_62 == 0 l00007B38_ds_t
l00007B38_ds_t:
l00007B38_ds_f:
l00007B4C:
	word32 r14_103
	word32 r14_91 = Mem13[r2_71 + 20_i:word32]
	branch r14_91 >= 0_i l00007B4C_ds_t
l00007B4C_ds_t:
l00007B64:
	word32 r11_94 = fn00006E54()
	Mem105[r2_71 + 20_i:word32] = r11_94 << 0x10 | (word32) Mem13[r2_71 + 22_i:word16]
	r14_103 = r11_94
l00007B4C_ds_f:
l00007B5C:
	r14_103 = r14_91 >>u 0x10 & 0x7FFF
l00007B80:
	word32 r5_118
	word32 r3_110 = Mem109[r2_71 + 92_i:word32]
	branch (r3_110 & 0x200) == 0 l00007B80_ds_t
l00007B80_ds_t:
l00007BB4:
	r5_118 = Mem109[0x1C63100:word32] & 0xFFFF0FFF
l00007B80_ds_f:
l00007B94:
	r5_118 = Mem109[0x1C63100:word32] & 0xFFFF0FFF | 0x5000
l00007BC8:
	Mem129[0x1C63100:word32] = r5_118
	Mem135[0x1C63140:word32] = Mem129[0x1C63140:word32] | 0x80000000
	branch (r3_110 & 0x100) == 0 l00007BC8_ds_t
l00007BC8_ds_t:
l00007BC8_ds_f:
l00007BF4:
	Mem144[0x1C630B8:word32] = Mem135[0x1C630B8:word32] | 0x300
l00007C08:
	word32 r5_154
	branch (r3_110 & 0x4000000) == 0 l00007C08_ds_t
l00007C08_ds_t:
l00007C2C:
	r5_154 = Mem152[0x1C63108:word32] | 0x2000
l00007C08_ds_f:
l00007C18:
	r5_154 = Mem152[0x1C63108:word32] & 0xFFFFDFFF
l00007C38:
	Mem163[0x1C63108:word32] = r5_154
	branch Mem163[r2_71 + 4_i:word32] != 7 l00007C38_ds_t
l00007C38_ds_t:
l00007C38_ds_f:
l00007C4C:
	Mem179[0x1C6307C:word32] = Mem163[0x1C6307C:word32] & 0xFFF0FFFF | 0x10000
l00007C74:
	branch (r3_110 & 0x8000000) != 0 l00007C74_ds_t
l00007C74_ds_t:
l00007C74_ds_f:
l00007C84:
	fn00005078()
l00007C90:
	branch r16_67 == 0 l00007C90_ds_t
l00007C90_ds_t:
l00007C90_ds_f:
l00007C98:
	branch (Mem208[r2_71 + 92_i:word32] & 0x10000000) == 0 l00007C98_ds_t
l00007C98_ds_t:
l00007C98_ds_f:
l00007CB0:
	Mem226[0x1C62094:word32] = 0xFFFFFFFF
	branch fn00007338(r14_103, -256_i) != 0_i l00007CB0_ds_t
l00007CB0_ds_t:
l00007CB0_ds_f:
l00007CDC:
l00007CE0:
	return r15
fn00007AE0_exit:


void fn00007E04(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn00007E04_entry:
l00007E04:
	Mem12[0x1C62094:word32] = 0_i
	word32 r15_27
	word32 r14_217
	word32 r2_18 = fn0000C8A0(-1_i, r15, out r14_217, out r15_27)
	Mem38[r2_18 | 0x3004:word32] = Mem12[r2_18 | 0x3004:word32] | 0x101
l00007E40:
	branch (Mem38[r2_18 | 0x3018:word32] & 7) != 3 l00007E40_ds_t
l00007E40_ds_t:
l00007E40_ds_f:
l00007E54:
	word32 r15_60
	word32 r14_218
	word32 r2_51 = fn0000C8A0(-1_i, r15_27, out r14_218, out r15_60)
	Mem71[r2_51:word32] = Mem38[r2_51:word32] & 0xFF00FFFF
	word32 r14_78
	word32 r15_84
	fn0000C8A0(-1_i, r15_60, out r14_78, out r15_84)
	word32 r3_104 = r14_78 | 0x3344
l00007E84:
	Mem102[r3_104:word32] = Mem94[r3_104:word32] & 0xFF3F0FF4 | 0x40500A
	r3_104 = r3_104 + -128_i
	branch r3_104 != 0x1C63544 l00007E84_ds_t
l00007E84_ds_t:
l00007E84_ds_f:
l00007EB8:
	Mem117[0x1C63208:word32] = Mem102[0x1C63208:word32] & 0xFFFFFC24 | 0x313
	Mem122[0x1F01510:word32] = Mem117[0x1F01510:word32] | 3
	word32 r15_136
	word32 r14_219
	Mem145[fn0000C8A0(-10_i, r15_84, out r14_219, out r15_136):word32] = 0_i
	word32 r2_149 = Mem145[0x1C20020:word32]
	Mem152[0x1C20020:word32] = r2_149 & 0x7FFFFFFF
	Mem155[0x1C20020:word32] = r2_149 & 0x7FFFFFFF | 0x100000
	Mem161[0x1C200F4:word32] = Mem155[0x1C200F4:word32] & 0x7FFFFFFF
	Mem165[0x1C200F4:word32] = Mem161[0x1C200F4:word32] | 0x10000
	Mem170[0x1C20060:word32] = Mem165[0x1C20060:word32] & 0xFFFFBFFF
	Mem176[0x1C2015C:word32] = Mem170[0x1C2015C:word32] & 0x7FFFFFFF
	Mem180[0x1C202C0:word32] = Mem176[0x1C202C0:word32] & 0xFFFFBFFF
	word32 r15_221
	word32 r14_220
	fn0000C8A0(-1_i, r15_136, out r14_220, out r15_221)
	return
fn00007E04_exit:


word32 fn00007FAC(word32 r14, word32 r15, word32 r18, word32 r20, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..31] r15:[0..31] r18:[0..31] r20:[0..31]
// LiveOut: r15 r9
// Trashed: CV r1 r11 r12 r13 r15 r17 r18 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved:
fn00007FAC_entry:
l00007FAC:
	word32 r4_8 = Mem5[0x12E8C:word32]
l00007FC8_thunk_fn00007AE0:
	r15Out = fn00007AE0(r4_8, r14, r15, r18, r20)
	return dwLoc0C
fn00007FAC_exit:


word32 fn00007FD0(word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut: r15 r2
// Trashed: CV r11 r12 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn00007FD0_entry:
l00007FD0:
	Mem8[0x1C62094:word32] = 0xFFFFFFFF
	word32 r15_23
	word32 r14_39
	word32 r2_14 = fn0000C8A0(-10_i, r15, out r14_39, out r15_23)
l00007FF8_thunk_fn0000AEDC:
	fn0000AEDC(0x9071)
	r15Out = r15_23
	return r2_14
fn00007FD0_exit:


word32 fn00008000(word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut: r15 r2
// Trashed: CV r11 r12 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn00008000_entry:
l00008000:
	Mem8[0x1C62094:word32] = 0x10000
	word32 r15_23
	word32 r14_39
	word32 r2_14 = fn0000C8A0(-10_i, r15, out r14_39, out r15_23)
l00008028_thunk_fn0000AEDC:
	fn0000AEDC(0x9072)
	r15Out = r15_23
	return r2_14
fn00008000_exit:


word32 fn00008030(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn00008030_entry:
l00008030:
	Mem20[0x1C62094:word32] = (-1_i << r3 ^ 0xFFFF) & Mem0[0x1C62094:word32] | ((r4 << 0x18) >> 0x18) << r3
	word32 r15_34
	word32 r14_49
	fn0000C8A0(-10_i, r15, out r14_49, out r15_34)
l00008078_thunk_fn0000AEDC:
	fn0000AEDC(0x9073)
	return r15_34
fn00008030_exit:


word32 fn00008080(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r5 r7
// Preserved:
fn00008080_entry:
l00008080:
	word32 r5_13 = (r3 & 0xFFFFFFFC) + 0x1C17000
	word32 r3_12 = (r3 & 3) << 3
	Mem29[r5_13:word32] = r4 << r3_12 | (-1_i << r3_12 ^ 0xFFFF) & Mem4[r5_13:word32]
	return dwLoc14
fn00008080_exit:


void fn000080EC(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r5 r7
// Preserved:
fn000080EC_entry:
l000080EC:
	word32 r5_13 = (r3 & 0xFFFFFFFC) + 0x1C17000
	word32 r3_12 = (r3 & 3) << 3
	Mem30[r5_13:word32] = r4 << r3_12 + -4_i | (-1_i << r3_12 + -4_i ^ 0xFFFF) & Mem4[r5_13:word32]
	return
fn000080EC_exit:


void fn000082AC(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r4 r6
// Preserved:
fn000082AC_entry:
l000082AC:
	word32 r3_11 = -1_i << r3 * 2
	Mem22[0x1C17040:word32] = r3_11 | (r3_11 ^ 0xFFFF) & Mem0[0x1C17040:word32]
	return
fn000082AC_exit:


word32 fn000082FC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r2
// Trashed: CV r11 r2 r3 r4 r5 r6 r7
// Preserved: r1 r9
fn000082FC_entry:
l000082FC:
	fn0000B320(-17_i)
	fn0000BC38(-17_i)
	fn000080EC(0_i, 0)
	fn00008080(0_i, -1_i)
	fn000080EC(-1_i, 0xFFFFFFFF)
	fn00008080(-1_i, 0_i)
	fn000080EC(-2_i, 0_i)
	fn00008080(-2_i, -1_i)
	fn000080EC(-3_i, -1_i)
	fn00008080(-3_i, 0_i)
	fn000080EC(-4_i, -1_i)
	fn00008080(-4_i, 0_i)
	fn000080EC(-5_i, 0_i)
	word32 r2_139 = fn00008080(-5_i, -1_i)
	word32 r5_146 = Mem4[0x1315C:word32]
	branch r5_146 != 0 l000082FC_ds_t
l000082FC_ds_t:
l000083D8:
	fn000082AC(-1_i)
	fn000082AC(-4_i)
	return r2_139
fn000082FC_exit:
l000082FC_ds_f:
l000083C4:
	fn00008BB8(-17_i, 0x815C, r5_146)
	fn00008B60(-17_i)


word32 fn000083F8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r2
// Trashed: CV r11 r2 r3 r4
// Preserved: r1 r9
fn000083F8_entry:
l000083F8:
	fn0000BC38(-17_i)
	return fn0000B320(-17_i)
fn000083F8_exit:


void fn00008428(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r14 r16 r18 r2 r9
fn00008428_entry:
l00008428:
	word32 r1_17 = fp - 24_i
	branch ((word32) Mem12[r3 + 1_i:byte] & 2) != 0 l00008428_ds_t
l00008428_ds_t:
	word32 r2_21 = r4
l0000847C:
l00008484:
	word32 r3_26 = Mem12[0x1C17108:word32]
	branch r3_26 == 1 l0000847C_ds_t
l0000847C_ds_t:
l00008460:
	branch r2_21 == 0 l00008460_ds_t
l00008460_ds_t:
l00008460_ds_f:
l0000846C:
	r2_21 = fn0000C768(r3_26)
	r1_17 = <invalid>
l0000847C_ds_f:
l00008494:
	Mem54[r1_17:word32] = fn0000F888(r3)
	Mem57[0x1C17188:word32] = Mem54[r1_17:word32]
l000084B0:
	branch Mem57[0x1C1714C:word32] == 0 l000084B0_ds_t
l000084B0_ds_t:
l000084B0_ds_f:
l000084C0:
	branch Mem57[r1_17:word32] == Mem57[0x1C1718C:word32] l000084C0_ds_t
l000084C0_ds_t:
l000084C0_ds_f:
l000084DC:
l00008428_ds_f:
	word32 r2_73 = r4
l00008458:
l000084FC:
l00008500:
	word32 r3_78 = Mem12[0x1C17100:word32]
	branch r3_78 == 1 l000084FC_ds_t
l000084FC_ds_t:
	bool F_81 = r2_73 == 0
l000084E4:
	branch F_81 l000084E4_ds_t
l000084E4_ds_t:
l000084E4_ds_f:
l000084EC:
	r2_73 = fn0000C768(r3_78)
l000084FC_ds_f:
l00008510:
	Mem105[0x1C17180:word32] = fn0000F888(r3)
	branch ((word32) Mem105[r3 + 1_i:byte] & 1) == 0 l00008510_ds_t
l00008510_ds_t:
l00008510_ds_f:
l00008538:
	branch (Mem105[r3 + 32_i:word32] | Mem105[r3 + 36_i:word32]) == 0 l00008538_ds_t
l00008538_ds_t:
l00008538_ds_f:
l00008554:
l00008558:
	return
fn00008428_exit:


word32 fn00008574(word32 r3, word32 r4, ptr32 & r9Out, ptr32 & r14Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r1 r14 r16 r2 r9
// Trashed: CV r1 r11 r14 r16 r2 r3 r4 r5 r6 r9
// Preserved:
fn00008574_entry:
l00008574:
	word32 r1_101
	word32 r3_13 = (word32) Mem10[r3 + 1_i:byte]
	word32 r2_15 = r4
	branch (r3_13 & 2) == 0 l00008574_ds_t
l00008574_ds_t:
l000085EC:
	branch (r3_13 & 1) != 0 l000085EC_ds_t
l000085EC_ds_t:
l000085EC_ds_f:
l000085FC:
	branch !(r3_13 != 0) l000085FC_ds_t
l000085FC_ds_t:
l00008628:
l0000862C:
	word32 r3_31 = Mem10[0x1C17100:word32]
	branch r3_31 == 1 l00008628_ds_t
l00008628_ds_t:
	bool F_34 = r2_15 == 0
l00008610:
	branch F_34 l00008610_ds_t
l00008610_ds_t:
l00008610_ds_f:
l00008618:
	r2_15 = fn0000C768(r3_31)
l00008628_ds_f:
l0000863C:
	fn0000F888(r3)
l000085FC_ds_f:
l00008608:
	r1_101 = fp + -32_i
l00008574_ds_f:
l000085A0:
l000085C4:
l000085C8:
	word32 r3_69 = Mem10[0x1C17114:word32]
	branch r3_69 == 1 l000085C4_ds_t
l000085C4_ds_t:
l000085A8:
	branch fn0000C768(r3_69) == 0 l000085A8_ds_t
l000085A8_ds_t:
l00008658:
l000085A8_ds_f:
l000085BC:
l000085C4_ds_f:
l000085D8:
	word32 r11_89 = fn0000F888(r3)
l0000864C:
	Mem94[0x1C17194:word32] = r11_89
l0000865C:
	r1_101 = fp
l00008660:
	word32 r2_107 = Mem104[r1_101 - 16_i:word32]
	word32 r14_108 = Mem104[r1_101 - 12_i:word32]
	word32 r16_109 = Mem104[r1_101 - 8_i:word32]
	r9Out = Mem104[r1_101 - 4_i:word32]
	r14Out = r14_108
	r16Out = r16_109
	return r2_107
fn00008574_exit:


word32 fn00008674()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: CV r1 r11 r2 r3 r4 r5 r9
// Preserved:
fn00008674_entry:
l00008674:
	word32 r2_14
	word32 r4_42
	word32 r11_25
	branch Mem8[0x1C17144:word32] == 0 l00008674_ds_t
l00008674_ds_t:
l000086DC:
	r2_14 = Mem8[0x1C17150:word32]
	branch r2_14 == 0 l000086DC_ds_t
l000086DC_ds_t:
l000086DC_ds_f:
l000086F0:
	word32 r11_19 = fn0000F874(Mem8[0x1C17190:word32])
	r2_14 = r11_19
	r11_25 = fn0000F154(r11_19)
	branch r11_25 == 0 l000086F0_ds_t
l000086F0_ds_t:
l000086F0_ds_f:
l00008714:
	word32 r3_33
	branch !((word32) Mem8[r11_19:byte] != 5) l00008714_ds_t
l00008714_ds_t:
	r3_33 = -6_i
l00008714_ds_f:
l00008724:
	r3_33 = -3_i
l00008728:
	Mem41[r11_19:byte] = SLICE(r3_33, byte, 0)
	r4_42 = -256_i
l00008674_ds_f:
l00008694:
	word32 r11_48 = fn0000F874(Mem8[0x1C17184:word32])
	r2_14 = r11_48
	r11_25 = fn0000F154(r11_48)
	branch r11_25 == 0 l00008694_ds_t
l00008694_ds_t:
l00008744:
	r2_14 = r11_25
l00008748:
l00008694_ds_f:
l000086BC:
	word32 r3_68
	branch !((word32) Mem8[r11_48:byte] != 5) l000086BC_ds_t
l000086BC_ds_t:
	r3_68 = -6_i
l000086BC_ds_f:
l000086CC:
	r3_68 = -3_i
l000086D0:
	Mem76[r11_48:byte] = SLICE(r3_68, byte, 0)
	r4_42 = -4_i
l00008730:
	Mem82[0x1C17050:word32] = r4_42
l0000874C:
	return r2_14
fn00008674_exit:


word32 fn0000875C(ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r2 r9
// Trashed: CV r1 r11 r2 r3 r4 r9
// Preserved:
fn0000875C_entry:
l0000875C:
	Mem8[0x1315C:word32] = -1_i
	word32 r2_12 = fn000083F8()
	r9Out = dwLoc0C
	return r2_12
fn0000875C_exit:


word32 fn00008788()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r7 r9
// Preserved:
fn00008788_entry:
l00008788:
	Mem22[0x1315C:word32] = fn000082FC()
	return dwLoc18
fn00008788_exit:


void fn000087BC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1 r2 r9
fn000087BC_entry:
l000087BC:
	fn0000B320(-16_i)
	word32 r2_23 = fn0000BC38(-16_i)
	Mem30[0x137EC:word32] = r2_23
	Mem31[0x137F4:word32] = r2_23
	Mem32[0x137FC:word32] = r2_23
	Mem33[0x13804:word32] = r2_23
	Mem34[0x1380C:word32] = r2_23
	Mem35[0x13814:word32] = r2_23
	Mem36[0x1381C:word32] = r2_23
	Mem37[0x13824:word32] = r2_23
	Mem40[0x13160:word32] = r2_23
	return
fn000087BC_exit:


void fn00008834(word32 r4, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r14 r2 r9
fn00008834_entry:
l00008834:
	word32 r11_17
	word32 r2_18 = fn0000E718(VR, out r11_17)
	Mem30[(r2_18 << 3) + 0x137E8:word32] = r11_17
	branch Mem30[0x13160:word32] != 0 l00008834_ds_t
l00008834_ds_t:
l00008834_ds_f:
l00008884:
	word32 r4_40 = r4 *s 0x1E8480
	word32 r5_43 = r2_18 + 0x706040 << 2
l000088B8:
	branch Mem30[r5_43:word32] == 1 l000088B8_ds_t
l000088B8_ds_t:
	bool F_49 = r4_40 != 0
l000088A0:
	branch F_49 l000088A0_ds_t
l000088A0_ds_t:
	r4_40 = r4_40 - 1_i
l000088A0_ds_f:
l000088A8:
	fn0000E740(r11_17, VR)
l000088B8_ds_f:
l000088C8:
	Mem72[(r2_18 << 3) + 0x137EC:word32] = -1_i
l000088E4:
	return
fn00008834_exit:


void fn000088FC(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r9
// Preserved:
fn000088FC_entry:
l000088FC:
	word32 r2_11 = Mem7[0x13160:word32]
	branch r2_11 == 0 l000088FC_ds_t
l000088FC_ds_t:
l0000893C:
	Mem21[r3 + 0x706040 << 2:word32] = r2_11
	word32 r3_22 = (r3 << 3) + 0x137E8
	Mem24[r3_22 + 4_i:word32] = r2_11
	fn0000E740(Mem24[r3_22:word32], VR)
l000088FC_ds_f:
l00008920:
	fn0000E740(Mem7[(r3 << 3) + 0x137E8:word32], VR)
l0000896C:
	return
fn000088FC_exit:


void fn0000897C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1
fn0000897C_entry:
l0000897C:
	Mem8[0x13160:word32] = -1_i
	return
fn0000897C_exit:


void fn00008998()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1 r2 r9
fn00008998_entry:
l00008998:
	fn0000B320(-16_i)
	Mem30[0x13160:word32] = fn0000BC38(-16_i)
	return
fn00008998_exit:


void fn000089E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4
// Preserved:
fn000089E0_entry:
l000089E0:
	Mem10[0x13828:word32] = 0x1F00C00
	Mem11[0x1F00C40:word32] = 0_i
	Mem13[0x1F00C50:word32] = 0_i
	Mem15[0x1F00C10:word32] = 0xFFFFFFFF
	return
fn000089E0_exit:


void fn00008A20()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn00008A20_entry:
l00008A20:
	Mem9[0x13828:word32] = 0_i
	return
fn00008A20_exit:


word32 fn00008AC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: CV r1 r11 r3
// Preserved:
fn00008AC0_entry:
l00008AC0:
	return Mem0[Mem0[0x13828:word32]:word32] >>u 2
fn00008AC0_exit:


void fn00008AF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1 r2 r9
fn00008AF0_entry:
l00008AF0:
	fn000089E0()
	word32 r3_18 = 0x13834
l00008B10:
	Mem23[r3_18:word32] = 0x8AE8
	Mem24[r3_18 + 4_i:word32] = 0_i
	r3_18 = r3_18 + -8_i
	branch r3_18 != 0x13934 l00008B10_ds_t
l00008B10_ds_t:
l00008B10_ds_f:
l00008B34:
	return
fn00008AF0_exit:


word32 fn00008B60(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r3 r4 r5 r6 r9
// Preserved:
fn00008B60_entry:
l00008B60:
l00008A48:
	branch r3 != 0 l00008A48_ds_t
l00008A48_ds_t:
l00008A48_ds_f:
l00008A54:
	Mem17[Mem4[0x13828:word32] + 16_i:word32] = -1_i
l00008A64:
	word32 r4_24 = Mem23[0x13828:word32]
	Mem29[r4_24 + 64_i:word32] = -1_i << r3 | Mem23[r4_24 + 64_i:word32]
	return 0_i
fn00008B60_exit:


word32 fn00008B78(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r3 r4 r5 r6 r9
// Preserved:
fn00008B78_entry:
l00008B78:
l00008A90:
	word32 r4_14 = Mem4[0x13828:word32]
	Mem20[r4_14 + 64_i:word32] = (-1_i << r3 ^ 0xFFFF) & Mem4[r4_14 + 64_i:word32]
	return 0_i
fn00008B78_exit:


word32 fn00008B90(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4
// Preserved: r1
fn00008B90_entry:
l00008B90:
	word32 r4_8 = Mem0[0x13828:word32]
	Mem10[r4_8 + 12_i:word32] = r3
	Mem13[r4_8 + 80_i:word32] = Mem10[r4_8 + 80_i:word32] | 1
	return 0_i
fn00008B90_exit:


void fn00008BB8(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn00008BB8_entry:
l00008BB8:
	word32 r3_10 = (r3 << 3) + 0x13834
	Mem13[r3_10:word32] = r4
	Mem15[r3_10 + 4_i:word32] = r5
	return
fn00008BB8_exit:


word32 fn00008C74(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r1 r11
// Trashed: CV r1 r11 r3 r4 r5
// Preserved:
fn00008C74_entry:
l00008C74:
	return -1_i << r3 & Mem0[Mem0[0x13828:word32] + 16_i:word32]
fn00008C74_exit:


word32 fn00008CA4(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn00008CA4_entry:
l00008CA4:
	Mem12[Mem0[0x13828:word32] + 16_i:word32] = -1_i << r3
	return 0_i
fn00008CA4_exit:


void fn00008CC8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r1
// Trashed: CV r1 r11 r2 r3 r4 r5
// Preserved:
fn00008CC8_entry:
l00008CC8:
	word32 r3_8 = Mem0[0x13828:word32]
	Mem13[0x1382C:word32] = Mem10[r3_8 + 64_i:word32]
	word32 r5_15 = Mem13[r3_8 + 80_i:word32]
	Mem17[r3_8 + 64_i:word32] = 0_i
	Mem19[r3_8 + 80_i:word32] = 0_i
	Mem20[0x13830:word32] = r5_15
	return
fn00008CC8_exit:


word32 fn00008D58(ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11 r2
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r7 r8
// Preserved:
fn00008D58_entry:
l00008D58:
	word32 r11_17
	word32 r7_12 = Mem5[0x1F02030:word32] >>u 8 & 0x7F
	word32 r4_13 = Mem5[0x13374:word32]
	word32 r5_14 = r7_12 + r4_13
	branch r5_14 >u 0xFF l00008D58_ds_t
l00008D58_ds_t:
	r11_17 = 0xFFFFFFE4
l00008D58_ds_f:
l00008D90:
	word32 r4_23 = r4_13 + 0x13370
	word32 r3_24 = 0_i
l00008DB4:
	branch r3_24 != r7_12 l00008DB4_ds_t
l00008DB4_ds_t:
l00008DA4:
	Mem36[r4_23:byte] = Mem32[0x1F02020:byte]
	r3_24 = r3_24 + -1_i
	r4_23 = r4_23 + -1_i
l00008DB4_ds_f:
	r11_17 = 0_i
l00008DC0:
	Mem44[0x13374:word32] = r5_14
l00008DCC:
	r11Out = r11_17
	return dwLoc0C
fn00008D58_exit:


word32 fn00008DD8(word32 r3, ptr32 & r11Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11 r15 r2
// Trashed: CV r1 r11 r15 r2 r3 r4 r5 r6 r7 r8
// Preserved: r12 r13
fn00008DD8_entry:
l00008DD8:
	word32 r5_187 = fp - 564_i
	word32 r4_12 = fp - 564_i
l00008DF0:
	Mem13[r4_12:byte] = 0_8
	r4_12 = r4_12 + -1_i
	branch r4_12 != fp - 604_i l00008DF0_ds_t
l00008DF0_ds_t:
l00008DF0_ds_f:
l00008E04:
	word32 r4_18 = 0_i
l00008E2C:
	branch r4_18 <u r3 l00008E2C_ds_t
l00008E2C_ds_t:
l00008E10:
	Mem35[fp - 309_i + r4_18:byte] = SLICE((word32) Mem32[r4_18 + 0x13378:byte], byte, 0)
	r4_18 = r4_18 + -1_i & 0xFF
l00008E2C_ds_f:
l00008E38:
	word32 r4_117 = 0_i
	word32 r7_164 = 0
l00008F18:
	word32 r8_49
	branch r7_164 <u r3 + -1_i l00008F18_ds_t
l00008F18_ds_t:
	r8_49 = -1_i
l00008F18_ds_f:
l00008F24:
	r8_49 = 0_i
l00008F28:
	branch (r8_49 & 0xFF) == 0 l00008F28_ds_t
l00008F28_ds_t:
l00008F28_ds_f:
	bool F_60 = r7_164 <=u 0x27
l00008F38:
	word32 r8_61
	branch F_60 l00008F38_ds_t
l00008F38_ds_t:
	r8_61 = -1_i
l00008F38_ds_f:
l00008F40:
	r8_61 = 0_i
l00008F44:
	branch (r8_61 & 0xFF) != 0 l00008F44_ds_t
l00008F44_ds_t:
	word32 r8_74 = fp - 308_i + r7_164
l00008E58:
	word32 r12_82
	word32 r11_79 = (word32) Mem78[r8_74:byte]
	branch (r11_79 & 0x7F) <= 19_i l00008E58_ds_t
l00008E58_ds_t:
	r12_82 = 0_i
l00008E58_ds_f:
l00008E6C:
	branch (r11_79 & 0x7F) <= 40_i l00008E6C_ds_t
l00008E6C_ds_t:
	r12_82 = -1_i
l00008E6C_ds_f:
l00008E78:
	r12_82 = 0_i
l00008E7C:
	word32 r8_139
	word32 r2_126
	branch r12_82 == 0 l00008E7C_ds_t
l00008E7C_ds_t:
l00008EB0:
	word32 r13_100
	branch (r11_79 & 0x7F) <= 39_i l00008EB0_ds_t
l00008EB0_ds_t:
	r13_100 = r12_82
l00008EB0_ds_f:
l00008EB8:
	branch (r11_79 & 0x7F) <= 80_i l00008EB8_ds_t
l00008EB8_ds_t:
	r13_100 = -1_i
l00008EB8_ds_f:
l00008EC4:
	r13_100 = r12_82
l00008EC8:
	branch r13_100 << 0x18 == 0 l00008EC8_ds_t
l00008EC8_ds_t:
l00008EC8_ds_f:
l00008ED8:
	word32 r8_118
	word32 r4_125
	branch r11_79 << 0x18 >= 0_i l00008ED8_ds_t
l00008ED8_ds_t:
	r8_118 = r4_117 + -1_i
l00008EF0:
	r4_125 = fp - 564_i + r4_117
	r2_126 = 0_i
l00008ED8_ds_f:
	r8_118 = r4_117 + -1_i
l00008EE4:
	r4_125 = fp - 564_i + r4_117
	r2_126 = -1_i
l00008EF8:
	Mem135[r4_125:byte] = SLICE(r2_126, byte, 0)
	r4_117 = r8_118 & 0xFF
	r8_139 = fp - 564_i + r4_117
l00008E7C_ds_f:
l00008E88:
	branch r11_79 << 0x18 >= 0_i l00008E88_ds_t
l00008E88_ds_t:
l00008EA4:
	r8_139 = fp - 564_i + r4_117
	r2_126 = 0_i
l00008E88_ds_f:
l00008E98:
	r8_139 = fp - 564_i + r4_117
	r2_126 = -1_i
l00008F04:
	Mem155[r8_139:byte] = SLICE(r2_126, byte, 0)
	r4_117 = r4_117 + -1_i & 0xFF
l00008F10:
	r7_164 = r7_164 + -1_i & 0xFF
l00008F44_ds_f:
l00008F54:
	word32 r11_169
	branch r4_117 <=u 0x1A l00008F54_ds_t
l00008F54_ds_t:
	r11_169 = 0xFFFFFFFF
l00008F54_ds_f:
l00008F60:
	word32 r3_185 = 0_i
l00008F68:
	branch (word32) Mem78[r5_187:byte] != 0 l00008F60_ds_t
l00008F60_ds_t:
	r3_185 = r3_185 * 2
l00008F60_ds_f:
	word32 r3_194 = r3_185 * 2
l00008F78:
	r3_185 = r3_194 | 1
l00008F7C:
	r5_187 = r5_187 + -2_i
	branch r5_187 != fp - 592_i l00008F7C_ds_t
l00008F7C_ds_t:
l00008F7C_ds_f:
l00008F8C:
	word32 r4_209
	word32 r11_204 = r3_185 & 0x7C0
	word32 r5_205 = r3_185 & 0x3F
	branch (r3_185 & 0x1000) == 0 l00008F8C_ds_t
l00008F8C_ds_t:
	r4_209 = -64_i
l00008F8C_ds_f:
l00008FA8:
	r4_209 = 0_i
l00008FAC:
	word32 r3_217 = r4_209 + r5_205
	r11_169 = r3_217 << 0x10 | r11_204 >>u 6 | (r3_217 ^ 0xFFFF) << 0x18
l00008FC4:
	r11Out = r11_169
	r15Out = fp - 308_i
	return dwLoc0264
fn00008DD8_exit:


void fn00009290()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r1
// Trashed: CV r1 r11 r14 r16 r18 r2 r20 r3 r4 r5 r6 r7 r9
// Preserved:
fn00009290_entry:
l00009290:
	branch Mem5[0x43B0:word32] == 0 l00009290_ds_t
l00009290_ds_t:
l000092BC:
	return
l00009290_ds_f:
l000092AC:
l00008FD0:
	Mem35[0x13484:word32] = Mem21[0x1F02000:word32]
	Mem41[0x13488:word32] = Mem35[0x1F02010:word32]
	Mem46[0x1348C:word32] = Mem41[0x1F0202C:word32]
	Mem51[0x13490:word32] = Mem46[0x1F02030:word32]
	Mem56[0x13494:word32] = Mem51[0x1F02034:word32]
	word32 r11_60
	fn0000AF1C(-31_i, out r11_60)
	Mem67[0x1347C:word32] = r11_60
	word32 r11_71
	fn0000B250(-31_i, out r11_71)
	Mem80[0x13480:word32] = r11_71
	fn00009744(-1_i, -11_i, -2_i)
	fn000097BC(-1_i, -11_i, 0xFFFFFFFF)
	fn00009834(-1_i, -11_i, 0_i)
	word32 r1_105 = <invalid>
	word32 r14_118
	fn0000B610(-31_i, -1_i, Mem80[r1_105 + 20_i:word32], out r14_118)
	fn0000B320(-31_i)
	fn0000B0B8(-31_i, -1_i)
	fn0000BDC8(-31_i)
	fn0000B320(-31_i)
	word32 r2_163 = fn0000B320(-23_i)
	Mem168[r2_163:word32] = -48_i
	Mem171[0x1F02034:word32] = 0x100032C
	Mem173[0x1F02010:word32] = -4_i
	Mem175[0x1F02030:word32] = -255_i
	Mem177[r14_118:word32] = -7955_i
	Mem180[r2_163:word32] = Mem177[r2_163:word32] | 3
	Mem184[0x13374:word32] = 0_i
	fn00008CA4(-5_i)
	fn00008B60(-5_i)
	return
fn00009290_exit:


word32 fn000092CC(ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11 r15
// Trashed: CV r11 r12 r13 r15 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn000092CC_entry:
l000092CC:
	word32 r11_338
	word32 r3_369
	word32 r14_11 = Mem10[0x13164:word32]
	word32 r2_12 = Mem10[0x1F02030:word32]
	Mem15[0x1F02030:word32] = r2_12
	branch (r2_12 & 0x10) == 0 l000092CC_ds_t
l000092CC_ds_t:
l000092CC_ds_f:
l00009304:
	word32 r11_23
	r2_12 = fn00008D58(out r11_23)
	branch r11_23 == 0 l00009304_ds_t
l00009304_ds_t:
l00009324:
	r3_369 = r2_12 & 2
	branch r3_369 == 0 l00009324_ds_t
l00009324_ds_t:
	r11_338 = r2_12 & 1
l00009668:
	branch r11_338 == 0 l00009668_ds_t
l00009668_ds_t:
l00009668_ds_f:
l00009674:
l00009324_ds_f:
l00009334:
	word32 r11_114
	fn00008D58(out r11_114)
	branch r11_114 == 0 l00009334_ds_t
l00009334_ds_t:
l00009360:
	branch r14_11 != 0x10000000 l00009360_ds_t
l00009360_ds_t:
l00009388:
	word32 r7_63 = Mem15[0x13374:word32]
	word32 r3_118 = r11_114
	word32 r2_65 = 0x13370
	word32 r5_413 = r11_114
l000093D0:
	branch r11_114 <u r7_63 l000093D0_ds_t
l000093D0_ds_t:
l0000939C:
	r3_118 = (word32) Mem15[r2_65:byte]
	branch (r3_118 & 0x80) == 0 l0000939C_ds_t
l0000939C_ds_t:
	bool F_77 = r5_413 >u 0x70
l000093BC:
	branch F_77 l000093BC_ds_t
l000093BC_ds_t:
l000093BC_ds_f:
l000093C4:
	r5_413 = r3_118 & 0x80
l0000939C_ds_f:
l000093B0:
	r5_413 = r5_413 + (r3_118 & 0x7F)
l000093C8:
	r11_114 = r11_114 + -1_i
	r2_65 = r2_65 + -1_i
l000093D0_ds_f:
l000093DC:
	word32 r2_164
	word32 r3_160
	word32 r2_91 = r3_118 >>u 7
	branch (r2_91 & 1) != 0 l000093DC_ds_t
l000093DC_ds_t:
l000093DC_ds_f:
	bool F_96 = r5_413 <=u 0x70
l000093F0:
	word32 r4_101
	branch F_96 l000093F0_ds_t
l000093F0_ds_t:
	r4_101 = -1_i
l000093F0_ds_f:
l000093F8:
	r4_101 = r2_91 & 1
l000093FC:
	word32 r4_103 = r4_101 & 0xFF
	branch r4_103 != 0 l000093FC_ds_t
l000093FC_ds_t:
l000093FC_ds_f:
	bool F_110 = r11_114 <u r7_63
l0000940C:
l00009450:
	branch F_110 l00009450_ds_t
l00009450_ds_t:
l00009414:
	r3_118 = (word32) Mem15[r11_114 + 0x13378:byte]
	branch (r3_118 & 0x80) == 0 l00009414_ds_t
l00009414_ds_t:
l00009440:
	r4_103 = r4_103 + (r3_118 & 0x7F)
l00009414_ds_f:
	bool F_126 = r4_103 >u 0x38
l00009430:
	branch F_126 l00009430_ds_t
l00009430_ds_t:
l00009430_ds_f:
l00009438:
	r4_103 = 0_i
l00009448:
	r11_114 = r11_114 + -1_i
	F_110 = r11_114 <u r7_63
l00009450_ds_f:
l00009458:
	word32 r3_140 = r3_118 & 0x80
	word32 r3_145 = ((0 - r3_140 | r3_140) ^ 0xFFFF) >>u 0x1F
	branch r3_145 != 0 l00009458_ds_t
l00009458_ds_t:
l00009458_ds_f:
	bool F_149 = r4_103 <=u 0x38
l00009478:
	word32 r5_150
	branch F_149 l00009478_ds_t
l00009478_ds_t:
	r5_150 = -1_i
l00009478_ds_f:
l00009480:
	r5_150 = r3_145
l00009484:
	word32 r5_156 = r5_150 & 0xFF
	branch r5_156 != 0 l00009484_ds_t
l00009484_ds_t:
l00009548:
	r3_160 = 0_i
l00009484_ds_f:
	word32 r4_162 = -1_i
l00009494:
	r2_164 = r5_156
	word32 r3_165 = r5_156
l0000952C:
	branch r11_114 <u r7_63 l0000952C_ds_t
l0000952C_ds_t:
	bool F_171 = r4_162 == 0
l000094A4:
	word32 r6_177 = (word32) Mem15[r11_114 + 0x13378:byte]
	branch F_171 l000094A4_ds_t
l000094A4_ds_t:
l000094E4:
	branch (r6_177 & 0x80) == 0 l000094E4_ds_t
l000094E4_ds_t:
l00009520:
	r3_165 = r3_165 + (r6_177 & 0x7F)
l000094E4_ds_f:
	bool F_185 = r3_165 >u 0x4A
l000094F0:
	branch F_185 l000094F0_ds_t
l000094F0_ds_t:
l00009558:
	r3_160 = r4_162
l000094F0_ds_f:
	bool F_188 = r3_165 <=u 0x24
l000094F8:
	branch F_188 l000094F8_ds_t
l000094F8_ds_t:
l000094F8_ds_f:
	word32 r3_192 = -1_i << r5_156
l00009500:
	r2_164 = r2_164 | r3_192
l00009504:
	r5_156 = r5_156 + -1_i
	branch r5_156 == 0x20 l00009504_ds_t
l00009504_ds_t:
l00009504_ds_f:
l00009514:
	r3_165 = r6_177 & 0x7F
l000094A4_ds_f:
l000094BC:
	branch (r6_177 & 0x80) == 0 l000094BC_ds_t
l000094BC_ds_t:
	bool F_203 = r3_165 >u 0x24
l000094D4:
	branch F_203 l000094D4_ds_t
l000094D4_ds_t:
l00009550:
	r3_160 = r6_177 & 0x80
l0000955C:
	branch r3_160 <u r7_63 l0000955C_ds_t
l0000955C_ds_t:
l00009540:
	r3_160 = r3_160 + -1_i
l0000955C_ds_f:
	r2_164 = 0xFFFFFFFF
l00009568:
l000094D4_ds_f:
	r4_162 = r6_177 & 0x80
l000094DC:
	r3_165 = r6_177 & 0x7F
l000094BC_ds_f:
l000094C8:
	r3_165 = r3_165 + (r6_177 & 0x7F)
l00009518:
	r4_162 = -1_i
l00009528:
	r11_114 = r11_114 + -1_i
l0000952C_ds_f:
l00009538:
l0000956C:
	Mem236[0x13478:word32] = r2_164
l00009360_ds_f:
l00009370:
	word32 r11_241
	Mem253[fn00008DD8(Mem15[0x13374:word32], out r11_241, out r15) | 0x3478:word32] = r11_241
l00009574:
	Mem258[0x13374:word32] = 0_i
	word32 r4_263 = Mem258[0x13478:word32]
	word32 r8_270 = Mem258[0x13370:word32]
	word32 r11_272 = Mem258[0x1316C:word32]
	word32 r3_274 = 0x13164
	word32 r7_276 = Mem258[0x13168:word32]
	word32 r12_277 = (r4_263 & 0xFF000000) >>u 8 ^ r4_263 & 0xFF0000
	word32 r5_278 = 0x13164
	word32 r4_279 = 0_i
l00009640:
	branch r4_279 <u r11_272 l00009640_ds_t
l00009640_ds_t:
l000095E0:
	word32 r8_286 = Mem258[r5_278:word32]
	branch (r4_263 & 0xFFFF) != (r8_286 & 0xFFFF) l000095E0_ds_t
l000095E0_ds_t:
l000095E0_ds_f:
l000095F4:
	branch r12_277 != 0xFF0000 l000095F4_ds_t
l000095F4_ds_t:
	r7_276 = 0_i
l00009634:
	r4_279 = r4_279 + -1_i
	r5_278 = r5_278 + -8_i
	r8_270 = r4_263 & 0xFFFF
l000095F4_ds_f:
l00009604:
	Mem310[0x13370:word32] = r4_263 & 0xFFFF
	word32 r6_307 = (r4_263 & 0xFF0000) >>u 0x10
	Mem315[0x13168:word32] = r6_307
	word32 r5_312 = 0x13170
	word32 r4_316 = 0_i
l000096CC:
	branch r4_316 <u r11_272 l000096CC_ds_t
l000096CC_ds_t:
l00009684:
	bool F_331
	branch r14_11 == 0 l00009684_ds_t
l00009684_ds_t:
	word32 r7_325 = Mem315[r5_312:word32]
l000096A4:
	branch r6_307 != r7_325 l000096A4_ds_t
l000096A4_ds_t:
l000096A4_ds_f:
l000096B0:
	F_331 = (r4_263 & 0xFFFF) == Mem315[r3_274:word32]
l00009684_ds_f:
	word32 r7_332 = Mem315[r5_312:word32]
l0000968C:
	branch r6_307 != r7_332 l0000968C_ds_t
l0000968C_ds_t:
l0000968C_ds_f:
l00009698:
	F_331 = (r8_286 & 0xFFFF) == Mem315[r3_274:word32]
l000096B8:
	branch F_331 l000096B8_ds_t
l000096B8_ds_t:
l000096E0:
	r11_338 = -1_i
l000096B8_ds_f:
l000096C0:
	r4_316 = r4_316 + -1_i
	r3_274 = r3_274 + -8_i
	r5_312 = r5_312 + -8_i
l000096CC_ds_f:
l00009640_ds_f:
l0000964C:
	Mem354[0x13370:word32] = r8_270
	Mem359[0x13168:word32] = r7_276
l000096D8:
	r11_338 = 0_i
l00009334_ds_f:
l00009348:
	Mem368[0x13374:word32] = 0_i
	r11_338 = 0
l00009304_ds_f:
	r3_369 = 0_i
l00009318:
l00009678:
	Mem375[0x13374:word32] = r3_369
	r11_338 = r3_369
l000096E4:
	r15Out = r15
	return r11_338
fn000092CC_exit:


void fn000096F8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r2 r3 r4 r5
// Preserved: r1 r9
fn000096F8_entry:
l000096F8:
	fn0000B320(-32_i)
	Mem19[0x1F02E18:word32] = -1_i
	Mem20[0x1F02E38:word32] = -1_i
	return
fn000096F8_exit:


word32 fn00009744(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r2 r3 r7
// Preserved:
fn00009744_entry:
l00009744:
	word32 r3_14 = r3 * 9 + 0x7C0AF7 + (r4 >>u 3)
	word32 r4_17 = (r4 & 7) << 2
	Mem33[r3_14 << 2:word32] = r5 << r4_17 | (-7_i << r4_17 ^ 0xFFFF) & Mem6[r3_14 << 2:word32]
	return dwLoc14
fn00009744_exit:


word32 fn000097BC(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r7
// Preserved:
fn000097BC_entry:
l000097BC:
	word32 r3_14 = r3 * 9 + 0x7C0AFE + (r4 >>u 4)
	word32 r4_17 = (r4 & 0xF) * 2
	Mem33[r3_14 << 2:word32] = r5 << r4_17 | (-3_i << r4_17 ^ 0xFFFF) & Mem6[r3_14 << 2:word32]
	return dwLoc14
fn000097BC_exit:


word32 fn00009834(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r2 r3 r7
// Preserved:
fn00009834_entry:
l00009834:
	word32 r3_14 = r3 * 9 + 0x7C0AFC + (r4 >>u 4)
	word32 r4_17 = (r4 & 0xF) * 2
	Mem33[r3_14 << 2:word32] = r5 << r4_17 | (-3_i << r4_17 ^ 0xFFFF) & Mem6[r3_14 << 2:word32]
	return dwLoc14
fn00009834_exit:


void fn000098AC(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1
// Trashed: CV r1 r11 r2 r3 r5 r7
// Preserved:
fn000098AC_entry:
l000098AC:
	word32 r3_9 = (r3 << 2) + (r3 << 5)
	Mem30[r3_9 + 0x1F02BEC:word32] = (r5 & 1) << r4 | (-1_i << r4 ^ 0xFFFF) & Mem7[r3_9 + 0x1F02BEC:word32]
	return
fn000098AC_exit:


word32 fn00009918(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r2 r4 r5
// Preserved:
fn00009918_entry:
l00009918:
	return Mem7[(r3 << 2) + (r3 << 5) + 0x1F02BEC:word32] >>u r4 & 1
fn00009918_exit:


word32 fn00009958(word32 r3, word32 r4, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r1 r11 r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn00009958_entry:
l00009958:
	r11Out = r4 & Mem4[(r3 << 5) + 0x1F02DF4:word32]
	return dwLoc14
fn00009958_exit:


word32 fn0000998C(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r1 r11 r13 r14 r15 r16 r17 r18 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000998C_entry:
l0000998C:
	word32 r11_16 = fn0000D628()
	branch r11_16 != 0 l0000998C_ds_t
l0000998C_ds_t:
l00009A78:
	Mem26[0x134AC:word32] = 0_i
	fn000098AC(-1_i, -5_i, 0)
	fn000098AC(-1_i, -8_i, 0xFFFFFFFF)
	fn000098AC(-1_i, -9_i, 0xFFFFFFFF)
	fn00009744(-1_i, -5_i, 0xFFFFFFFF)
	fn00009744(-1_i, -8_i, 0xFFFFFFFF)
	fn00009744(-1_i, -9_i, 0xFFFFFFFF)
	fn00009834(-1_i, -5_i, -3_i)
	fn00009834(-1_i, -8_i, -3_i)
	word32 r2_125 = fn00009834(-1_i, -9_i, -3_i)
	Mem134[r2_125:word32] = Mem26[r2_125:word32] | 0x1A0000
	Mem137[0x13938:word32] = -17_i
	Mem141[0x13934:word32] = -22_i
	fn0000EDF4(-15_i, 0x12C16, r15, VR)
l0000998C_ds_f:
l000099C8:
	Mem159[0x134AC:word32] = -1_i
	Mem160[0x13938:word32] = r11_16
	Mem161[0x13934:word32] = -15_i
	word32 r22_282
	word32 r28_283
	fn0000D214(fp - 27_i, fp - 26_i, 0xFFFFFFFF, VR, out r22_282, out r28_283)
	word32 r22_284
	word32 r24_285
	fn0000D298(fp - 27_i, fp - 26_i, 0xFFFFFFFF, VR, out r22_284, out r24_285)
	word32 r15_205 = fn0000EDF4(0xFFFFFFF1, 0x12C08, r15, VR)
	word32 r22_286
	word32 r28_287
	fn0000D214(fp - 27_i, fp - 26_i, 0xFFFFFFFF, VR, out r22_286, out r28_287)
	word32 r22_288
	word32 r24_289
	fn0000D298(fp - 27_i, fp - 26_i, 0xFFFFFFFF, VR, out r22_288, out r24_289)
	Mem253[0x13017:byte] = 0xFF_8
	Mem254[0x1301F:byte] = 0xFF_8
	Mem255[0x13027:byte] = 0xFF_8
	Mem256[0x1302F:byte] = 0xFF_8
l00009B48:
	return r15_205
fn0000998C_exit:


word32 fn00009B70()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn00009B70_entry:
l00009B70:
	return Mem0[0x134AC:word32]
fn00009B70_exit:


void fn00009B80()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009B80_exit:
fn00009B80_entry:
l00009B80:
	Mem10[0x1F01000:word32] = 0_i
	Mem14[0x1F01014:word32] = -257_i
	Mem17[0x1F01018:word32] = 0_i
	word32 r2_21 = fn0000C768(-1_i)
	Mem30[r2_21:word32] = Mem17[r2_21:word32] | 1
l00009BC8:


word32 fn00009C2C(word32 r3, word32 r4, word32 r15, word32 VR, ptr32 & r15Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut: r11 r15 r22
// Trashed: CV r11 r13 r15 r17 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00009C2C_entry:
l00009C2C:
	word32 r11_163
	word32 r1_108 = fp - 20_i
	branch r3 >u 0x16 l00009C2C_ds_t
l00009C2C_ds_t:
	r11_163 = 0xFFFFFFEA
l00009C2C_ds_f:
l00009C54:
	branch r3 >u 0x10 l00009C54_ds_t
l00009C54_ds_t:
	r11_163 = 0_i
l00009C54_ds_f:
l00009C60:
	word32 r4_32 = r3 * 0x18 + 0x12E90
	word32 r3_35 = (word32) Mem10[r4_32 + -4_i:word16]
	branch r4 <u r3_35 l00009C60_ds_t
l00009C60_ds_t:
	r11_163 = 0xFFFFFFEA
l00009C60_ds_f:
	r11_163 = 0xFFFFFFEA
l00009C8C:
	branch r4 >u (word32) Mem10[r4_32 + -10_i:word16] l00009C8C_ds_t
l00009C8C_ds_t:
l00009C8C_ds_f:
l00009CA0:
	word32 r11_73
	branch r4 >u (word32) Mem10[r4_32 + -2_i:word16] l00009CA0_ds_t
l00009CA0_ds_t:
l00009CCC:
	word32 r3_47 = (word32) Mem10[r4_32 + -12_i:word16]
	branch r4 >u r3_47 l00009CCC_ds_t
l00009CCC_ds_t:
l00009CEC:
	word32 r4_51 = (word32) Mem10[r4_32 + 16_i:word16]
	word32 r11_58
	fn0000FEDC(r4_51 - 1_i - r3_47 + r4, r4_51, r15, out r11_58, out r15)
	r1_108 = <invalid>
	r11_73 = r11_58 + (word32) Mem10[r4_32 + -5_i:byte] & 0x7F
l00009CCC_ds_f:
l00009CDC:
l00009CA0_ds_f:
l00009CB0:
	word32 r4_79 = (word32) Mem10[r4_32 + 8_i:word16]
	word32 r11_85
	fn0000FEDC(r4_79 - 1_i - r3_35 + r4, r4_79, r15, out r11_85, out r15)
	r1_108 = <invalid>
	r11_73 = r11_85 & 0x7F
l00009D0C:
	Mem100[r1_108 + 2_i:byte] = SLICE(r11_73, byte, 0)
l00009D10:
	word32 r3_111 = r3 * 0x18 + 0x12E90
	Mem115[r1_108 + 3_i:byte] = SLICE((word32) Mem113[r3_111 + 3_i:byte], byte, 0)
	Mem121[r1_108 + 2_i:byte] = SLICE(Mem115[r3_111 + 20_i:word32] & (word32) Mem115[r1_108 + 2_i:byte], byte, 0)
	word32 r14_109 = r1_108 + -3_i
	word32 r24_261
	word32 r22_259
	word32 r28_260
	word32 r11_156 = fn0000D214(r14_109, r1_108 + -1_i, -1_i, VR, out r22_259, out r28_260) | fn0000D298(r14_109, r1_108 + -2_i, -1_i, VR, out r22, out r24_261)
	branch (word32) Mem121[(r3 << 3) + 0x13017:byte] == 0 l00009D0C_ds_t
l00009D0C_ds_t:
l00009DC0:
	r11_163 = r11_156 & 0xFF
l00009DC4:
	r15Out = r15
	r22Out = r22
	return r11_163
fn00009C2C_exit:
l00009D0C_ds_f:
l00009D8C:
	word32 r2_176
	word32 r2_173 = (word32) Mem121[r1_108 + 2_i:byte]
	word32 r3_174 = (word32) Mem121[r1_108 + 1_i:byte]
	branch r2_173 <u r3_174 l00009D8C_ds_t
l00009D8C_ds_t:
l00009DA8:
	r2_176 = r3_174 - r2_173
l00009D8C_ds_f:
l00009DA0:
	r2_176 = r2_173 - r3_174
l00009DAC:
	Mem182[r1_108 + 2_i:byte] = SLICE(r2_176, byte, 0)
	word32 r15_258
	word32 r14_257
	fn0000C8A0(((word32) Mem182[r1_108 + 2_i:byte] << 4) + -100_i, r15, out r14_257, out r15_258)


word32 fn00009DDC(word32 r3, word32 VR, ptr32 & r11Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11 r2 r22
// Trashed: CV r1 r11 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r9
// Preserved:
fn00009DDC_entry:
l00009DDC:
	word32 r11_114 = 0xFFFFFFEA
	branch r3 >u 0x16 l00009DDC_ds_t
l00009DDC_ds_t:
l00009DDC_ds_f:
l00009DFC:
	branch r3 == 0x11 l00009DFC_ds_t
l00009DFC_ds_t:
	r11_114 = -3300_i
l00009DFC_ds_f:
l00009E08:
	branch r3 == 0x12 l00009E08_ds_t
l00009E08_ds_t:
	r11_114 = -1200_i
l00009E08_ds_f:
	r11_114 = -1200_i
l00009E14:
	branch r3 == 0x13 l00009E14_ds_t
l00009E14_ds_t:
l00009E14_ds_f:
l00009E20:
	branch r3 == 0x14 l00009E20_ds_t
l00009E20_ds_t:
	r11_114 = -1100_i
l00009E20_ds_f:
l00009E28:
	branch r3 == 0x15 l00009E28_ds_t
l00009E28_ds_t:
	r11_114 = -3300_i
l00009E28_ds_f:
	r11_114 = -3300_i
l00009E34:
	branch r3 == 0x16 l00009E34_ds_t
l00009E34_ds_t:
l00009E34_ds_f:
l00009E40:
	word32 r2_81
	word32 r11_79
	word32 r28_144
	fn0000D214(fp - 15_i, fp - 14_i, -1_i, VR, out r22, out r28_144)
	word32 r2_48 = r3 * 0x18 + 0x12E90
	word32 r11_67 = Mem50[r2_48 + 20_i:word32]
	word32 r3_71 = (word32) Mem50[r2_48 + -6_i:word16]
	branch r3_71 <= (r11_67 & 0) l00009E40_ds_t
l00009E40_ds_t:
	bool F_73 = (r11_67 & 0) != r3_71
l00009E9C:
	branch F_73 l00009E9C_ds_t
l00009E9C_ds_t:
l00009EAC:
	r11_79 = ((r11_67 & 0) - r3_71) *s (word32) Mem50[r2_48 + 16_i:word16]
	r2_81 = (word32) Mem50[r2_48 + -12_i:word16]
l00009E9C_ds_f:
l00009EA4:
	r11_114 = (word32) Mem50[r2_48 + -12_i:word16]
l00009E40_ds_f:
l00009E8C:
	r2_81 = (word32) Mem50[r2_48 + 4_i:word16]
	r11_79 = (r11_67 & 0) *s (word32) Mem50[r2_48 + -8_i:word16]
l00009EBC:
	r11_114 = r11_79 + r2_81
l00009EC0:
	r11Out = r11_114
	r22Out = r22
	return dwLoc20
fn00009DDC_exit:


word32 fn00009ED0(word32 r3, word32 r4, word32 VR, ptr32 & r14Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut: r11 r14 r16
// Trashed: CV r1 r11 r14 r16 r18 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r9
// Preserved:
fn00009ED0_entry:
l00009ED0:
	word32 r1_154
	branch r3 >u 0xF l00009ED0_ds_t
l00009ED0_ds_t:
l00009F7C:
	word32 r4_45
	word32 r5_48
	branch (0 - (r3 ^ 0x13) | r3 ^ 0x13) >= 0_i l00009F7C_ds_t
l00009F7C_ds_t:
l00009F7C_ds_f:
l00009F94:
	branch (0 - (r3 ^ 0x11) | r3 ^ 0x11) >= 0_i l00009F94_ds_t
l00009F94_ds_t:
l00009F94_ds_f:
l00009FAC:
	branch r3 != 0x14 l00009FAC_ds_t
l00009FAC_ds_t:
l0000A000:
	branch r3 != 0x12 l0000A000_ds_t
l0000A000_ds_t:
l0000A014:
	branch r3 != 0x15 l0000A014_ds_t
l0000A014_ds_t:
l0000A02C:
	branch r3 != 0x16 l0000A02C_ds_t
l0000A02C_ds_t:
l0000A02C_ds_f:
	word32 r5_41 = 0 - r4
l0000A034:
	r4_45 = -5_i
	r5_48 = ((r5_41 | r4) ^ 0xFFFF) >>u 0x1F
l0000A014_ds_f:
l0000A01C:
	r4_45 = -7_i
l0000A000_ds_f:
l0000A008:
	r4_45 = -9_i
l0000A024:
	r5_48 = r4
l00009FAC_ds_f:
l00009FB4:
l00009FB8:
	Mem77[0x13498:word32] = (-1_i << r3 ^ 0xFFFF) & Mem12[0x13498:word32]
	Mem80[0x13498:word32] = (r4 & -1_i) << r3 | Mem77[0x13498:word32]
	word32 r2_81 = Mem80[0x13498:word32]
	r4_45 = -8_i
	r5_48 = (0 - r2_81 | r2_81) >>u 0x1F
l0000A048:
	fn000098AC(-1_i, r4_45, r5_48)
l00009ED0_ds_f:
l00009EF8:
	Mem112[(r3 << 3) + 0x1300E:byte] = SLICE(r4, byte, 0)
	word32 r22_212
	word32 r28_213
	fn0000D214(fp - 27_i, fp - 26_i, -1_i, VR, out r22_212, out r28_213)
	word32 r22_141
	word32 r24_142
	fn0000D298(fp - 27_i, fp - 26_i, -1_i, VR, out r22_141, out r24_142)
	branch r4 != 1 l00009EF8_ds_t
l00009EF8_ds_t:
l0000A050:
	r1_154 = fp + -48_i
l00009EF8_ds_f:
l00009F6C:
	fn0000C768(r4)
	r1_154 = fp
l0000A054:
	word32 r16_175 = Mem170[r1_154 - 12_i:word32]
	r14Out = Mem170[r1_154 - 16_i:word32]
	r16Out = r16_175
	return 0_i
fn00009ED0_exit:


word32 fn0000A070(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r22 r24 r26 r28 r3 r4 r5 r6 r7
// Preserved: r1 r14 r2 r9
fn0000A070_entry:
l0000A070:
	word32 r11_106
	branch r3 >u 0xF l0000A070_ds_t
l0000A070_ds_t:
l0000A0E4:
	branch (0 - (r3 ^ 0x13) | r3 ^ 0x13) >= 0_i l0000A0E4_ds_t
l0000A0E4_ds_t:
l0000A0E4_ds_f:
l0000A0FC:
	branch (0 - (r3 ^ 0x11) | r3 ^ 0x11) >= 0_i l0000A0FC_ds_t
l0000A0FC_ds_t:
l0000A0FC_ds_f:
l0000A110:
	branch r3 != 0x14 l0000A110_ds_t
l0000A110_ds_t:
l0000A130:
	word32 r4_50
	branch r3 != 0x12 l0000A130_ds_t
l0000A130_ds_t:
l0000A144:
	branch r3 != 0x15 l0000A144_ds_t
l0000A144_ds_t:
l0000A160:
	branch r3 != 0x16 l0000A160_ds_t
l0000A160_ds_t:
	r11_106 = 0xFFFFFFEA
l0000A160_ds_f:
l0000A16C:
	word32 r11_39 = fn00009918(-1_i, -5_i)
	r11_106 = ((0 - r11_39 | r11_39) ^ 0xFFFF) >>u 0x1F
l0000A144_ds_f:
	r4_50 = -7_i
l0000A14C:
l0000A130_ds_f:
l0000A138:
	r4_50 = -9_i
l0000A150:
	r11_106 = fn00009918(-1_i, r4_50)
l0000A110_ds_f:
l0000A118:
	r11_106 = Mem8[0x13498:word32] >>u r3 & 1
l0000A070_ds_f:
l0000A088:
	word32 r2_84 = (r3 << 3) + 0x13010
	word32 r14_90 = (word32) Mem87[r2_84 + -4_i:word16]
	word32 r22_93
	word32 r28_96
	fn0000D214(fp - 19_i, fp - 18_i, -1_i, VR, out r22_93, out r28_96)
	word32 r11_105 = (word32) bLoc0E >> r14_90
	r11_106 = r11_105 & 1
	branch (r11_105 & 1) == 0 l0000A088_ds_t
l0000A088_ds_t:
l0000A0DC:
	Mem110[r2_84 + -2_i:byte] = SLICE(r11_105 & 1, byte, 0)
l0000A088_ds_f:
l0000A0D0:
	Mem115[r2_84 + -2_i:byte] = 0xFF_8
	r11_106 = -1_i
l0000A188:
l0000A18C:
	return r11_106
fn0000A070_exit:


word32 fn0000A22C(word32 r3, word32 VR, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r1 r11 r2
// Trashed: CV r1 r11 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r9
// Preserved:
fn0000A22C_entry:
l0000A22C:
	branch Mem9[0x134AC:word32] != 1 l0000A22C_ds_t
l0000A22C_ds_t:
l0000A22C_ds_f:
l0000A250:
	word32 r22_143
	word32 r28_144
	fn0000D214(fp - 32_i, fp - 24_i, -6_i, VR, out r22_143, out r28_144)
	word32 r3_38 = (word32) bLoc17
	branch (r3_38 & 1) == 0 l0000A250_ds_t
l0000A250_ds_t:
l0000A250_ds_f:
l0000A284:
	Mem46[r3:word32] = Mem20[r3:word32] | 0x40000
l0000A298:
	branch (r3_38 & 2) == 0 l0000A298_ds_t
l0000A298_ds_t:
l0000A298_ds_f:
l0000A2A4:
	Mem58[r3:word32] = Mem54[r3:word32] | 0x20000
l0000A2B8:
	branch (r3_38 & 0x20) == 0 l0000A2B8_ds_t
l0000A2B8_ds_t:
l0000A2B8_ds_f:
l0000A2C4:
	Mem68[r3:word32] = Mem65[r3:word32] | 0x10000
l0000A2D0:
	branch (r3_38 & 0x40) == 0 l0000A2D0_ds_t
l0000A2D0_ds_t:
l0000A2D0_ds_f:
l0000A2E0:
	Mem77[r3:word32] = Mem74[r3:word32] | 0x8000
l0000A2EC:
	r11Out = 0_i
	return dwLoc38
fn0000A22C_exit:


void fn0000A300(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r9
// Preserved:
fn0000A300_entry:
l0000A300:
	branch Mem8[0x134AC:word32] != 1 l0000A300_ds_t
l0000A300_ds_t:
l0000A354:
	return
fn0000A300_exit:
l0000A300_ds_f:
l0000A324:
	word32 r22_56
	word32 r24_57
	fn0000D298(fp - 14_i, fp - 12_i, -2_i, VR, out r22_56, out r24_57)


word32 fn0000A364(word32 r3, word32 VR, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11 r14
// Trashed: CV r1 r11 r14 r2 r3 r5 r9
// Preserved:
fn0000A364_entry:
l0000A364:
	word32 r5_13 = Mem12[0x134AC:word32]
	branch r5_13 != 1 l0000A364_ds_t
l0000A364_ds_t:
l0000A5B8:
	r14Out = dwLocA8
	return 0_i
fn0000A364_exit:
l0000A364_ds_f:
l0000A390:
	word32 r24_293
	word32 r22_292
	fn0000D298(fp - 104_i, fp - 147_i, r5_13, VR, out r22_292, out r24_293)
	word32 r3_47 = fp - 104_i
	word32 r4_48 = -32_i
l0000A3B4:
	Mem52[r3_47:byte] = SLICE(r4_48, byte, 0)
	word32 r4_53 = r4_48 + -1_i
	r4_48 = r4_53 & 0xFF
	branch (r4_53 & 0xFF) != 0x37 l0000A3B4_ds_t
l0000A3B4_ds_t:
	r3_47 = r3_47 + -1_i
l0000A3B4_ds_f:
l0000A3CC:
	word32 r28_295
	word32 r22_294
	fn0000D214(fp - 104_i, fp - 80_i, -23_i, VR, out r22_294, out r28_295)
	word32 r4_162 = fp - 128_i
	word32 r3_165 = 0_i
	word32 r8_168 = Mem164[r3 + 40_i:word32]
	word32 r7_169 = Mem164[r3 + 44_i:word32]
	word32 r6_170 = Mem164[r3 + 48_i:word32]
	word32 r5_171 = Mem164[r3 + 52_i:word32]
l0000A548:
	r8_168 = r8_168 | (word32) Mem164[r4_162:byte] << r3_165
	r7_169 = r7_169 | (word32) Mem164[r4_162 + 4_i:byte] << r3_165
	r6_170 = r6_170 | (word32) Mem164[r4_162 + 8_i:byte] << r3_165
	word32 r11_188 = (word32) Mem164[r4_162 + 12_i:byte] << r3_165
	r3_165 = r3_165 + -8_i
	r4_162 = r4_162 + -1_i
	branch r3_165 != 0x20 l0000A548_ds_t
l0000A548_ds_t:
	r5_171 = r5_171 | r11_188
l0000A548_ds_f:
	word32 r5_195 = r5_171 | r11_188
l0000A588:
	Mem198[r3 + 52_i:word32] = r5_195
	Mem199[r3 + 40_i:word32] = r8_168
	Mem200[r3 + 44_i:word32] = r7_169
	Mem201[r3 + 48_i:word32] = r6_170
	word32 r24_297
	word32 r22_296
	fn0000D298(fp - 104_i, fp - 147_i, -1_i, VR, out r22_296, out r24_297)


word32 fn0000A5D0(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn0000A5D0_entry:
l0000A5D0:
	word32 r4_20
	word32 r3_17
	word32 r4_7 = Mem0[r3 + 40_i:word32]
	branch Mem0[r3 + 48_i:word32] != 1 l0000A5D0_ds_t
l0000A5D0_ds_t:
	word32 r3_8 = Mem0[r3 + 44_i:word32]
l0000A5FC:
	Mem14[0x134A4:word32] = r4_7 * 2 + (r4_7 << 3)
	r3_17 = r3_8 * 2 + (r3_8 << 3)
	r4_20 = 0x134A8
l0000A5D0_ds_f:
	r3_17 = Mem0[r3 + 44_i:word32]
l0000A5E4:
	Mem24[0x1349C:word32] = r4_7
	r4_20 = 0x134A0
l0000A628:
	Mem29[r4_20:word32] = r3_17
	return 0_i
fn0000A5D0_exit:


word32 fn0000A634(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn0000A634_entry:
l0000A634:
	fn0000DF10(0x3CA8, r3 + -40_i, -80_i)
	return 0_i
fn0000A634_exit:


void fn0000A664()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r2 r3 r4 r5 r7 r9
// Preserved: r1
fn0000A664_entry:
l0000A664:
	branch Mem5[0x43B4:word32] == 0 l0000A664_ds_t
l0000A664_ds_t:
l0000A688:
	fn00009744(-1_i, -6_i, 0_i)
l0000A6A8_thunk_fn000097BC:
	fn000097BC(-1_i, -6_i, 0xFFFFFFFF)
	return
fn0000A664_exit:
l0000A664_ds_f:
l0000A680:
	fn00008B60(0_i)


word32 fn0000A6B0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: CV r11 r2 r3 r4 r5
// Preserved: r1 r9
fn0000A6B0_entry:
l0000A6B0:
	word32 r3_16 = 0_i
	branch fn00009918(-1_i, -6_i) != 0_i l0000A6B0_ds_t
l0000A6B0_ds_t:
l0000A6B0_ds_f:
l0000A6D4:
	fn0000DB28(-10_i)
	word32 r11_28 = fn00009918(-1_i, -6_i)
	r3_16 = ((0 - r11_28 | r11_28) ^ 0xFFFF) >>u 0x1F
l0000A6F8:
	return r3_16
fn0000A6B0_exit:


void fn0000A708(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000A708_exit:
fn0000A708_entry:
l0000A708:
	word32 r2_13 = Mem12[0x134AC:word32]
	branch r2_13 != 1 l0000A708_ds_t
l0000A708_ds_t:
l0000A774:
	fn0000EDF4(-15_i, 0x12C28, r15, VR)
	fn000098AC(-1_i, -5_i, 0xFFFFFFFF)
	fn000098AC(-1_i, -9_i, 0_i)
	fn000098AC(-1_i, -8_i, 0_i)
	fn0000C768(-1000_i)
	fn000098AC(-1_i, -8_i, 0xFFFFFFFF)
	fn000098AC(-1_i, -9_i, 0xFFFFFFFF)
	fn0000C768(-10_i)
	fn000098AC(-1_i, -5_i, 0_i)
	fn0000C768(-100_i)
	fn00009B80()
l0000A708_ds_f:
l0000A730:
	word32 r22_184
	word32 r28_185
	fn0000D214(fp - 23_i, fp - 22_i, r2_13, VR, out r22_184, out r28_185)
	word32 r22_186
	word32 r24_187
	fn0000D298(fp - 23_i, fp - 22_i, r2_13, VR, out r22_186, out r24_187)
l0000A76C:


word32 fn0000A92C(word32 r15, word32 VR, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] Stack +0000:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn0000A92C_entry:
l0000A92C:
	fn0000AC84(r15)
	word32 r14_281
	fn0000B610(-1_i, -2_i, dwArg00, out r14_281)
	fn0000C768(-1_i)
	fn0000BAC8(r9)
	fn0000897C()
	fn0000B950(-11_i)
	fn0000B950(-12_i)
	fn0000C768(-1_i)
	fn0000BC38(-33_i)
	word32 r2_88 = Mem10[fn0000C768(-1_i):word32]
	branch r2_88 != 1 l0000A92C_ds_t
l0000A92C_ds_t:
l0000AA20:
	fn000098AC(-1_i, -5_i, 0xFFFFFFFF)
	fn000098AC(-1_i, -9_i, 0_i)
	fn000098AC(-1_i, -8_i, 0_i)
	fn0000C768(-1500_i)
	r15 = fn0000EDF4(-15_i, 0x12C37, r15, VR)
l0000A92C_ds_f:
l0000A9B4:
	word32 r28_283
	word32 r22_282
	fn0000D214(fp + 17_i, fp + 18_i, r2_88, VR, out r22_282, out r28_283)
	word32 r22_284
	word32 r24_285
	fn0000D298(fp + 17_i, fp + 18_i, r2_88, VR, out r22_284, out r24_285)
	word32 r22_286
	word32 r28_287
	fn0000D214(fp + 17_i, fp + 18_i, r2_88, VR, out r22_286, out r28_287)
	word32 r22_222
	word32 r24_223
	fn0000D298(fp + 17_i, fp + 18_i, r2_88, VR, out r22_222, out r24_223)
l0000AA6C:
	return r15
fn0000A92C_exit:


void fn0000AA80(word32 r2, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r2:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000AA80_exit:
fn0000AA80_entry:
l0000AA80:
	branch Mem8[0x134AC:word32] == 1 l0000AA80_ds_t
l0000AA80_ds_t:
l0000AACC:
l0000AAD4_thunk_fn00009B80:
	fn00009B80()
l0000AA80_ds_f:
l0000AAA0:
	word32 r15_25 = fn0000A92C(r15, VR, r2)
	Mem43[0x1F0142C:word32] = Mem8[0x1F0142C:word32] & 0xFFFFFFFE
l0000AAC4_thunk_fn0000A708:
	fn0000A708(r15_25, VR)


void fn0000AADC(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000AADC_exit:
fn0000AADC_entry:
l0000AADC:
	word32 r2_17 = Mem14[0x134AC:word32]
	branch r2_17 != 1 l0000AADC_ds_t
l0000AADC_ds_t:
l0000AB60:
	fn00009744(-1_i, -2_i, 0xFFFFFFFF)
	fn00009744(-1_i, -7_i, 0xFFFFFFFF)
	fn00009834(-1_i, -2_i, -3_i)
	fn00009834(-1_i, -7_i, -3_i)
	fn000098AC(-1_i, -2_i, 0_i)
	fn000098AC(-1_i, -7_i, 0_i)
	word32 r1_80 = <invalid>
	fn0000A92C(r15, VR, Mem14[r1_80:word32])
	Mem110[0x1F00180:word32] = -1956_i
	Mem115[0x1F0142C:word32] = Mem110[0x1F0142C:word32] & 0xFFFFFFFE
	Mem118[0x1F01C00:word32] = 0_i
l0000AADC_ds_f:
l0000AB10:
	fn0000EDF4(-15_i, 0x12C41, r15, VR)
	word32 r22_181
	word32 r28_182
	fn0000D214(fp - 23_i, fp - 22_i, r2_17, VR, out r22_181, out r28_182)
	word32 r22_183
	word32 r24_184
	fn0000D298(fp - 23_i, fp - 22_i, r2_17, VR, out r22_183, out r24_184)
l0000ABF4:


word32 fn0000AC14(word32 r15, word32 VR, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] Stack +0000:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r14 r15 r17 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000AC14_entry:
l0000AC14:
	word32 r2_11 = 0x1700030
l0000AC28:
	branch (Mem7[r2_11:word32] & 0x10000) == 0 l0000AC14_ds_t
l0000AC14_ds_t:
l0000AC74:
	r2_11 = fn0000C768(-1_i)
l0000AC14_ds_f:
l0000AC40:
	word32 r15_41 = fn0000EDF4(-15_i, 0x12C4B, r15, VR)
	fn00004844()
	word32 r15_62 = fn0000490C(r15_41)
l0000AC6C_thunk_fn0000A92C:
	return fn0000A92C(r15_62, VR, dwArg00)
fn0000AC14_exit:


word32 fn0000AC84(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r9
fn0000AC84_entry:
l0000AC84:
	branch Mem20[0x134B0:word32] != 0 l0000AC84_ds_t
l0000AC84_ds_t:
l0000AC84_ds_f:
l0000ACBC:
	word32 r11_31
	fn0000AF1C(-1_i, out r11_31)
	word32 r1_30 = <invalid>
	word32 r14_43
	fn0000B610(-1_i, -3_i, Mem20[r1_30 + 20_i:word32], out r14_43)
	fn0000DB28(-1600_i)
	word32 r12_55
	fn000046C0(out r12_55)
	fn0000DB28(r14_43 | 0x4240)
	word32 r12_68
	fn000046C0(out r12_68)
	word32 r1_66 = <invalid>
	word32 r14_81
	fn0000B610(-1_i, -2_i, Mem20[r1_66 + 20_i:word32], out r14_81)
	fn0000DB28(-1600_i)
	word32 r12_93
	fn000046C0(out r12_93)
	fn0000DB28(r14_81 | 0x4240)
	word32 r12_106
	fn000046C0(out r12_106)
	word32 r1_104 = <invalid>
	word32 r14_236
	word32 r2_120 = fn0000B610(-1_i, r11_31, Mem20[r1_104 + 20_i:word32], out r14_236)
	word32 r11_129
	word32 r15_134
	fn0000FEDC(r12_68 - r12_55, -24000_i, r15, out r11_129, out r15_134)
	word32 r11_147
	word32 r15_152
	fn0000FEDC(r12_106 - r12_93, -24000_i, r15_134, out r11_147, out r15_152)
	word32 r11_162
	fn0000FEDC(r11_129 *s -24000_i, r11_147, r15_152, out r11_162, out r15)
	Mem178[0x13098:word32] = r11_162 *s -1000_i
	Mem182[0x1309C:word32] = r11_162 *s -1000_i >>u 9
	Mem185[r2_120:word32] = -1_i
l0000AD94:
	return r15
fn0000AC84_exit:


word32 fn0000ADBC(word32 r15, word32 dwArg1C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] Stack +001C:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000ADBC_entry:
l0000ADBC:
	Mem11[0x13948:word32] = 0x1F01400
	Mem16[0x13944:word32] = 0x1C20000
	Mem20[0x1393C:word32] = 0x1C20028
	word32 r11_25
	word32 r15_31
	word32 r14_115
	fn0000BF88(-11_i, r15, out r11_25, out r14_115, out r15_31)
	word32 r15_46
	word32 r14_116
	word32 r11_43 = fn0000FFD8(r11_25, 0xBEBC200, r15_31, out r14_116, out r15_46)
	branch !(r11_43 == 0) l0000ADBC_ds_t
l0000ADBC_ds_t:
l0000ADBC_ds_f:
l0000AE20:
	r11_43 = -1_i
l0000AE24:
	word32 r3_66 = Mem20[0x13948:word32]
	Mem74[r3_66:word32] = Mem20[r3_66:word32] & 0xFFFFE0FF | (r11_43 - 1_i & 0x1F) << 8
	word32 r14_117
	Mem89[0x13940:word32] = fn0000B610(-1_i, -11_i, dwArg1C, out r14_117)
	Mem96[0x1C20204:word32] = Mem89[0x1C20204:word32] & 0xFFFF0000 | 0x400
	return r15_46
fn0000ADBC_exit:


void fn0000AEDC(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: r4
// Preserved: r1
fn0000AEDC_entry:
l0000AEDC:
	Mem6[0x1F0010C:word32] = r3
	return
fn0000AEDC_exit:


void fn0000AF04(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed:
// Preserved: r1
fn0000AF04_entry:
l0000AF04:
	Mem5[r3:word32] = r4
	return
fn0000AF04_exit:


word32 fn0000AF1C(word32 r3, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r1 r11 r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000AF1C_entry:
l0000AF1C:
	branch r3 >u 0x20 || r3 <u 1_i l0000AF1C_ds_t
l0000AF1C_ds_t:
l0000B01C:
l0000B028_in_fn0000AF1C:
	r11Out = 0_i
	return dwLoc0C
l0000AF1C_ds_f:
l0000AF30:
	word32 r3_23 = Mem4[(r3 - 1_i << 2) + 0x12490:word32]
	word32 r2_25
	word32 r11_27
	call r3_23 (retsize: 0;)
		uses: r2:0x12490,r3:r3_23,Stack +FFFFFFF8:dwLoc0C
		defs: r11:r11_27,r2:r2_25
	r11Out = r11_27
	return r2_25
fn0000AF1C_exit:


word32 fn0000AF4C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r2
// Trashed: CV r1 r11 r2
// Preserved:
fn0000AF4C_entry:
l0000AF4C:
l0000B028_in_fn0000AF4C:
	return dwLoc08
fn0000AF4C_exit:


word32 fn0000AF54()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000AF54_entry:
l0000AF54:
l0000B010:
l0000B028:
	return dwLoc08
fn0000AF54_exit:


word32 fn0000B034(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r11
// Trashed: CV r1 r11 r2 r3 r6
// Preserved:
fn0000B034_entry:
l0000B034:
	word32 r11_14
	branch r3 >u 0x10 l0000B034_ds_t
l0000B034_ds_t:
l0000B058:
	word32 r6_18
	word32 r3_19
	branch r3 >u 0x20 l0000B058_ds_t
l0000B058_ds_t:
l0000B074:
	branch r3 >u 0x40 l0000B074_ds_t
l0000B074_ds_t:
l0000B088:
	branch r3 >u 0x80 l0000B088_ds_t
l0000B088_ds_t:
	r11_14 = 0xFFFFFFEA
l0000B088_ds_f:
l0000B094:
	Mem22[r4:word32] = -3_i
	r6_18 = -3_i
	r3_19 = r3 + -7_i
l0000B074_ds_f:
	r6_18 = -2_i
l0000B07C:
	Mem27[r4:word32] = -2_i
	r3_19 = r3 + -3_i
l0000B058_ds_f:
l0000B064:
	Mem30[r4:word32] = -1_i
	r6_18 = -1_i
	r3_19 = r3 + -1_i
l0000B0A0:
	Mem40[r5:word32] = r3_19 >>u r6_18
	r11_14 = 0_i
l0000B034_ds_f:
l0000B044:
	Mem45[r4:word32] = 0_i
	Mem46[r5:word32] = r3
	r11_14 = 0
l0000B0AC:
	return r11_14
fn0000B034_exit:


void fn0000B0B8(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r2 r9
fn0000B0B8_entry:
l0000B0B8:
	branch r3 == 3 l0000B0B8_ds_t
l0000B0B8_ds_t:
l0000B144:
	word32 r3_16 = Mem6[0x13948:word32]
	Mem21[r3_16 + 12_i:word32] = Mem6[r3_16 + 12_i:word32] & 0xFFFFFFFC | r4 - 1_i & 3
l0000B0B8_ds_f:
l0000B0CC:
	branch r3 >u 3 l0000B0CC_ds_t
l0000B0CC_ds_t:
l0000B0EC:
	branch r3 == 0x14 l0000B0EC_ds_t
l0000B0EC_ds_t:
l0000B1F4:
	Mem43[0x1C20050:word32] = r4 - 1_i & 3 | Mem6[0x1C20050:word32] & 0xFFFFFFFC
l0000B0EC_ds_f:
l0000B0F4:
	branch !(r3 == 0x1F) l0000B0F4_ds_t
l0000B0F4_ds_t:
l0000B0F4_ds_f:
l0000B0FC:
l0000B174:
	word32 r11_53 = fn0000B034(r4, fp - 20_i, fp - 16_i)
	word32 r1_52 = <invalid>
	branch r11_53 != 0 l0000B174_ds_t
l0000B174_ds_t:
l0000B174_ds_f:
l0000B188:
	word32 r4_65 = Mem6[r1_52 + 4_i:word32]
	word32 r3_67 = Mem6[0x13948:word32]
l0000B1A0:
	branch r4_65 >u 1 l0000B1A0_ds_t
l0000B1A0_ds_t:
	r4_65 = r4_65 >>u 1
l0000B19C:
	r11_53 = r11_53 + -1_i
l0000B1A0_ds_f:
l0000B1AC:
	Mem85[r3_67 + 84_i:word32] = Mem6[r3_67 + 84_i:word32] & 0xFFFCFFFF | (r11_53 & 3) << 0x10
	Mem93[r3_67 + 84_i:word32] = Mem85[r3_67 + 84_i:word32] & 0xFFFFFFF0 | Mem85[r1_52:word32] - 1_i & 0xF
l0000B0CC_ds_f:
l0000B0D8:
	branch !(r3 == 1) l0000B0D8_ds_t
l0000B0D8_ds_t:
l0000B238:
l0000B0D8_ds_f:
l0000B0E4:
l0000B104:
	word32 r5_103 = Mem6[0x13948:word32]
	word32 r3_104 = 0_i
l0000B114:
	branch r4 >u 1 l0000B114_ds_t
l0000B114_ds_t:
	r4 = r4 >>u 1
l0000B110:
	r3_104 = r3_104 + -1_i
l0000B114_ds_f:
l0000B120:
	Mem121[r5_103:word32] = Mem6[r5_103:word32] & 0xFFFFFFCF | (r3_104 & 3) << 4
l0000B23C:
	return
fn0000B0B8_exit:


word32 fn0000B250(word32 r3, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11 r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000B250_entry:
l0000B250:
	branch r3 >u 0x20 || r3 <u 1_i l0000B250_ds_t
l0000B250_ds_t:
l0000B310:
	r11Out = 0xFFFFFFEA
	return dwLoc14
l0000B250_ds_f:
l0000B264:
	word32 r3_22 = Mem4[(r3 - 1_i << 2) + 0x12510:word32]
	word32 r2_24
	word32 r11_26
	call r3_22 (retsize: 0;)
		uses: r2:0x12510,r3:r3_22,Stack +FFFFFFF4:dwLoc14
		defs: r11:r11_26,r2:r2_24
	r11Out = r11_26
	return r2_24
fn0000B250_exit:


word32 fn0000B320(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000B320_entry:
l0000B320:
	branch r3 >u 0x20 || r3 <u 14_i l0000B320_ds_t
l0000B320_ds_t:
l0000B4C4:
	return dwLoc0C
l0000B320_ds_f:
l0000B334:
	word32 r3_22 = Mem4[(r3 - 14_i << 2) + 0x12590:word32]
	word32 r2_24
	call r3_22 (retsize: 0;)
		uses: r2:0x12590,r3:r3_22,Stack +FFFFFFF8:dwLoc0C
		defs: r2:r2_24
	return r2_24
fn0000B320_exit:


void fn0000B4D4(word32 r4, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r9
// Preserved:
fn0000B4D4_entry:
l0000B4D4:
l0000B4E8_thunk_fn0000F8E8:
	fn0000F8E8(0x13940, r4, VR)
	return
fn0000B4D4_exit:


word32 fn0000B4F0(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r5 r6 r7 r9
// Preserved:
fn0000B4F0_entry:
l0000B4F0:
l0000F9A0:
	word32 r6_13 = Mem12[0x13940:word32]
	branch r6_13 == 0 l0000F9A0_ds_t
l0000F9A0_ds_t:
l0000F9A0_ds_f:
l0000F9B8:
	word32 r5_21 = Mem12[r6_13 + 8_i:word32]
	branch r5_21 != 0 l0000F9B8_ds_t
l0000F9B8_ds_t:
l0000F9E8:
	branch Mem12[r5_21 + 4_i:word32] != r4 l0000F9E8_ds_t
l0000F9E8_ds_t:
l0000FA04:
	word32 r3_28 = Mem12[r5_21 + 8_i:word32]
	branch r3_28 != 0 l0000FA04_ds_t
l0000FA04_ds_t:
	r6_13 = r5_21
l0000F9E4:
	r5_21 = r3_28
l0000FA04_ds_f:
l0000FA14:
l0000F9E8_ds_f:
l0000F9F8:
	Mem37[r6_13 + 8_i:word32] = Mem12[r5_21 + 8_i:word32]
l0000F9B8_ds_f:
l0000F9C8:
	branch Mem12[r6_13 + 4_i:word32] != r4 l0000F9C8_ds_t
l0000F9C8_ds_t:
l0000F9C8_ds_f:
l0000F9D8:
	Mem45[0x13940:word32] = r5_21
	r5_21 = r6_13
l0000FA1C:
	Mem50[r5_21:word32] = 0_i
	Mem51[r5_21 + 8_i:word32] = 0_i
l0000FA2C:
	return dwLoc14
fn0000B4F0_exit:


word32 fn0000B610(word32 r3, word32 r4, word32 dwArg14, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] Stack +0014:[0..31]
// LiveOut: r14 r2
// Trashed: CV r11 r14 r2 r3 r4 r5
// Preserved: r1 r9
fn0000B610_entry:
l0000B610:
	word32 r2_109
	word32 r3_112
	branch r3 == 0xA l0000B610_ds_t
l0000B610_ds_t:
l0000B700:
	branch r4 == 3 l0000B700_ds_t
l0000B700_ds_t:
l0000B754:
	r2_109 = 0x1C20054
	r3_112 = Mem6[0x1C20054:word32] & 0xFFFFCFFF | 0x1000
l0000B700_ds_f:
l0000B70C:
	branch r4 >u 3 l0000B70C_ds_t
l0000B70C_ds_t:
l0000B728:
	branch r4 == 4 l0000B728_ds_t
l0000B728_ds_t:
l0000B770:
	r2_109 = 0x1C20054
	r3_112 = Mem6[0x1C20054:word32] & 0xFFFFCFFF | 0x2000
l0000B728_ds_f:
l0000B730:
	branch !(r4 == 0xB) l0000B730_ds_t
l0000B730_ds_t:
l0000B730_ds_f:
l0000B738:
l0000B78C:
	r2_109 = 0x1C20054
	r3_112 = Mem6[0x1C20054:word32] | 0x3000
l0000B70C_ds_f:
l0000B714:
	branch !(r4 == 1) l0000B714_ds_t
l0000B714_ds_t:
l0000B714_ds_f:
l0000B720:
l0000B740:
	r2_109 = 0x1C20054
	r3_112 = Mem6[0x1C20054:word32] & 0xFFFFCFFF
l0000B610_ds_f:
l0000B628:
	word32 r4_263
	word32 r3_262
	word32 r4_242
	word32 r3_241
	branch r3 >u 0xA l0000B628_ds_t
l0000B628_ds_t:
l0000B650:
	branch r3 == 0xD l0000B650_ds_t
l0000B650_ds_t:
l0000B7DC:
	branch r4 == 3 l0000B7DC_ds_t
l0000B7DC_ds_t:
l0000B810:
	r2_109 = 0x1C20058
	r3_241 = Mem6[0x1C20058:word32] & 0xFCFFFFFF
	r4_242 = 0x1000000
l0000B7DC_ds_f:
l0000B7E8:
	branch r4 == 0xB l0000B7E8_ds_t
l0000B7E8_ds_t:
l0000B830:
	r2_109 = 0x1C20058
	r3_241 = Mem6[0x1C20058:word32] & 0xFCFFFFFF
	r4_242 = 0x2000000
l0000B7E8_ds_f:
l0000B7F0:
	branch !(r4 == 1) l0000B7F0_ds_t
l0000B7F0_ds_t:
l0000B7F0_ds_f:
l0000B7F8:
	r2_109 = 0x1C20058
	r3_262 = Mem6[0x1C20058:word32]
	r4_263 = 0xFCFFFFFF
l0000B650_ds_f:
l0000B658:
	branch r3 == 0x1F l0000B658_ds_t
l0000B658_ds_t:
l0000B85C:
	word32 r2_83
	word32 r3_85
	branch r4 == 1 l0000B85C_ds_t
l0000B85C_ds_t:
l0000B878:
	r2_83 = Mem6[0x13948:word32]
	r3_85 = Mem6[r2_83 + 84_i:word32] & 0xFCFFFFFF
l0000B85C_ds_f:
l0000B868:
	branch !(r4 == 3) l0000B868_ds_t
l0000B868_ds_t:
l0000B868_ds_f:
l0000B870:
l0000B898:
	r2_83 = Mem6[0x13948:word32]
	r3_85 = Mem6[r2_83 + 84_i:word32] & 0xFCFFFFFF | 0x1000000
l0000B8B8:
	Mem98[r2_83 + 84_i:word32] = r3_85
l0000B658_ds_f:
l0000B660:
	branch !(r3 == 0xB) l0000B660_ds_t
l0000B660_ds_t:
l0000B660_ds_f:
l0000B668:
l0000B79C:
	branch r4 == 0xB l0000B79C_ds_t
l0000B79C_ds_t:
l0000B7C0:
	r2_109 = 0x1C2005C
	r3_112 = Mem6[0x1C2005C:word32] & 0xFFFFFFFC | 1
l0000B79C_ds_f:
l0000B7A4:
	branch !(r4 == 0x17) l0000B7A4_ds_t
l0000B7A4_ds_t:
l0000B7A4_ds_f:
l0000B7AC:
	r2_109 = 0x1C2005C
	r3_112 = Mem6[0x1C2005C:word32] & 0xFFFFFFFC
l0000B628_ds_f:
l0000B634:
	branch r3 == 1 l0000B634_ds_t
l0000B634_ds_t:
l0000B670:
	word32 r11_126
	word32 r2_127 = fn0000AF1C(r3, out r11_126)
	branch r11_126 == r2_127 l0000B670_ds_t
l0000B670_ds_t:
l0000B8BC:
l0000B670_ds_f:
l0000B684:
l0000B50C:
	word32 r14_148
	word32 r2_151
	branch r2_127 == 2 l0000B50C_ds_t
l0000B50C_ds_t:
l0000B578:
	r14_148 = -3_i
	r2_151 = Mem143[0x13098:word32]
l0000B50C_ds_f:
l0000B524:
	branch r2_127 >u 2 l0000B524_ds_t
l0000B524_ds_t:
l0000B544:
	branch r2_127 == 3 l0000B544_ds_t
l0000B544_ds_t:
l0000B55C:
	r14_148 = -1_i
	r2_151 = 0x16E3600
l0000B544_ds_f:
l0000B54C:
	branch !(r2_127 == 0xB) l0000B54C_ds_t
l0000B54C_ds_t:
l0000B54C_ds_f:
l0000B554:
	r14_148 = -2_i
l0000B58C:
	r2_151 = 0xBEBC200
l0000B524_ds_f:
l0000B530:
	branch !(r2_127 == 1) l0000B530_ds_t
l0000B530_ds_t:
l0000B5F8:
l0000B530_ds_f:
l0000B53C:
	r14_148 = 0_i
l0000B56C:
	r2_151 = Mem143[0x1309C:word32]
l0000B590:
	fn0000FA38(0x13940, 0_i, r2_151, dwArg14)
	word32 r3_196 = Mem143[0x13948:word32]
	Mem200[r3_196 + 12_i:word32] = Mem143[r3_196 + 12_i:word32] & 0xFFFFFFFC
	Mem208[r3_196:word32] = Mem200[r3_196:word32] & 0xFFFCFFFF | r14_148 << 0x10
	fn0000FA38(0x13940, -1_i, r2_151, dwArg14)
l0000B5FC:
	r14Out = r2
	return dwLoc0C
l0000B634_ds_f:
l0000B640:
	branch !(r3 == 4) l0000B640_ds_t
l0000B640_ds_t:
l0000B640_ds_f:
l0000B648:
l0000B694:
	branch r4 == 3 l0000B694_ds_t
l0000B694_ds_t:
l0000B6C0:
	r2_109 = 0x1C20050
	r3_241 = Mem6[0x1C20050:word32] & 0xFFFCFFFF
	r4_242 = 0x10000
l0000B694_ds_f:
l0000B69C:
	branch r4 == 6 l0000B69C_ds_t
l0000B69C_ds_t:
l0000B6E0:
	r2_109 = 0x1C20050
	r3_241 = Mem6[0x1C20050:word32] & 0xFFFCFFFF
	r4_242 = 0x20000
l0000B84C:
	r3_112 = r3_241 | r4_242
l0000B69C_ds_f:
l0000B6A4:
	branch !(r4 == 1) l0000B6A4_ds_t
l0000B6A4_ds_t:
l0000B8C4:
l0000B6A4_ds_f:
l0000B6AC:
	r2_109 = 0x1C20050
	r3_262 = Mem6[0x1C20050:word32]
	r4_263 = 0xFFFCFFFF
l0000B808:
	r3_112 = r3_262 & r4_263
l0000B850:
	Mem271[r2_109:word32] = r3_112
l0000B8C8:
	r14Out = r14
	return r2
fn0000B610_exit:


word32 fn0000B8D8(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000B8D8_entry:
l0000B8D8:
	branch r4 <=u 0x7829B800 l0000B8D8_ds_t
l0000B8D8_ds_t:
l0000B8D8_ds_f:
l0000B8F8:
	r4 = 0x7829B800
l0000B8FC:
	word32 r11_25
	word32 r15_30
	fn0000FEDC(r4, 0x5B8D80, r15, out r11_25, out r15_30)
	word32 r11_40 = (r11_25 << 2) + 0x12624
	Mem44[r3:byte] = SLICE((word32) Mem9[r11_40:byte], byte, 0)
	Mem46[r3 + 1_i:byte] = SLICE((word32) Mem44[r11_40 + 1_i:byte], byte, 0)
	word32 r11_48 = (word32) Mem46[r11_40 + 3_i:byte]
	Mem49[r3 + 2_i:byte] = SLICE((word32) Mem46[r11_40 + 2_i:byte], byte, 0)
	Mem50[r3 + 3_i:byte] = SLICE(r11_48, byte, 0)
	return r15_30
fn0000B8D8_exit:


word32 fn0000B950(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000B950_entry:
l0000B950:
	branch r3 >u 0xF || r3 <u 1_i l0000B950_ds_t
l0000B950_ds_t:
l0000BA98:
	return dwLoc0C
l0000B950_ds_f:
l0000B964:
	word32 r3_22 = Mem4[(r3 - 1_i << 2) + 0x12B68:word32]
	word32 r2_24
	call r3_22 (retsize: 0;)
		uses: r2:0x12B68,r3:r3_22,Stack +FFFFFFF8:dwLoc0C
		defs: r2:r2_24
	return r2_24
fn0000B950_exit:


void fn0000BAA8(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r9
// Preserved:
fn0000BAA8_entry:
l0000BAA8:
l0000BAC0_thunk_fn0000F8E8:
	fn0000F8E8(0x134B4, r3, VR)
	return
fn0000BAA8_exit:


void fn0000BAC8(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r9:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r9
// Preserved:
fn0000BAC8_entry:
l0000BAC8:
	Mem11[0x134B8:word32] = -1_i
	fn0000FA38(0x134B4, -1_i, 0_i, r9)
	Mem27[0x1F01444:word32] = Mem11[0x1F01444:word32] | 0xA7000000
	Mem32[0x1F01444:word32] = (Mem27[0x1F01444:word32] | 0xA7000000) & 0xFFFFFFFC
	fn0000DB28(-20_i)
	Mem42[0x1F01444:word32] = Mem32[0x1F01444:word32] | 0xA7000000
	Mem47[0x1F01444:word32] = (Mem42[0x1F01444:word32] | 0xA7000000) & 0xFFFFFFFB
	return
fn0000BAC8_exit:


void fn0000BB60(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r9:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r2 r9
fn0000BB60_entry:
l0000BB60:
	Mem14[0x1F01444:word32] = Mem9[0x1F01444:word32] | 0xA7000000
	Mem17[0x1F01444:word32] = Mem14[0x1F01444:word32] | 0xA7000004
	word32 r2_21 = fn0000C768(-2_i)
	Mem32[r2_21:word32] = Mem17[r2_21:word32] | 0xA7000000
	Mem35[r2_21:word32] = Mem32[r2_21:word32] | 0xA7000003
	word32 r2_39 = fn0000C768(-2_i)
	Mem50[r2_39:word32] = Mem35[r2_39:word32] | 0xA7000000
	Mem58[r2_39:word32] = Mem50[r2_39:word32] & 0x58F00FFF | 0xA7070000
	fn0000FA38(0x134B4, 0_i, 0, r9)
	Mem71[0x134B8:word32] = 0_i
	return
fn0000BB60_exit:


word32 fn0000BC28()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000BC28_entry:
l0000BC28:
	return Mem0[0x134B8:word32]
fn0000BC28_exit:


word32 fn0000BC38(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000BC38_entry:
l0000BC38:
	branch r3 >u 0x21 || r3 <u 14_i l0000BC38_ds_t
l0000BC38_ds_t:
l0000BDB8:
	return dwLoc0C
l0000BC38_ds_f:
l0000BC4C:
	word32 r3_22 = Mem4[(r3 - 14_i << 2) + 0x12BA4:word32]
	word32 r2_24
	call r3_22 (retsize: 0;)
		uses: r2:0x12BA4,r3:r3_22,Stack +FFFFFFF8:dwLoc0C
		defs: r2:r2_24
	return r2_24
fn0000BC38_exit:


void fn0000BDC8(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1 r2 r9
fn0000BDC8_entry:
l0000BDC8:
	fn0000BC38(fn0000BC38(r3))
	return
fn0000BDC8_exit:


word32 fn0000BE00(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn0000BE00_entry:
l0000BE00:
	branch !(r3 == 6) l0000BE00_ds_t
l0000BE00_ds_t:
l0000BE00_ds_f:
l0000BE1C:
	r15 = fn0000B8D8(fp - 16_i, r4, r15)
	word32 r3_34 = Mem8[0x13944:word32]
	word32 r2_36 = Mem8[r3_34:word32]
	word32 r4_35 = (word32) bLoc0D
	branch (r2_36 >>u 0x10 & 3) >= r4_35 l0000BE1C_ds_t
l0000BE1C_ds_t:
l0000BE6C:
	word32 r3_41 = (word32) bLoc0E
	branch (r2_36 & 3) >= r3_41 l0000BE6C_ds_t
l0000BE6C_ds_t:
l0000BEA4:
	word32 r4_80
	Mem61[Mem8[0x13944:word32]:word32] = (r2_36 & 0xFFFFE0FF | ((word32) bLoc10 & 0x1F) << 8) & 0xFFFFFFCF | ((word32) bLoc0F & 3) << 4
	fn0000DB28(-20_i)
	word32 r2_117 = fn0000C768(-1_i)
	word32 r1_69 = <invalid>
	word32 r3_77 = (word32) Mem61[r1_69 + 2_i:byte]
	branch (r2_117 & 3) <= r3_77 l0000BEA4_ds_t
l0000BEA4_ds_t:
	r4_80 = r2_117 >>u 0x10
l0000BEA4_ds_f:
l0000BF08:
	r2_117 = r2_117 & 0xFFFFFFFC | r3_77 & 3
	Mem87[Mem61[0x13944:word32]:word32] = r2_117
	fn0000DB28(-2000_i)
	r4_80 = r2_117 >>u 0x10
l0000BF2C:
	word32 r3_96 = (word32) Mem95[r1_69 + 3_i:byte]
	branch (r4_80 & 3) <= r3_96 l0000BF2C_ds_t
l0000BF2C_ds_t:
l0000BF70:
	return r15
fn0000BE00_exit:
l0000BF2C_ds_f:
l0000BF40:
	Mem123[Mem95[0x13944:word32]:word32] = r2_117 & 0xFFFCFFFF | (r3_96 & 3) << 0x10
	fn0000DB28(-2000_i)
l0000BE6C_ds_f:
l0000BE80:
	Mem137[Mem8[0x13944:word32]:word32] = r2_36 & 0xFFFFFFFC | r3_41 & 3
	fn0000DB28(-2000_i)
l0000BE1C_ds_f:
l0000BE4C:
	Mem149[r3_34:word32] = r2_36 & 0xFFFCFFFF | (r4_35 & 3) << 0x10
	fn0000DB28(-2000_i)


word32 fn0000BF88(word32 r3, word32 r15, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r11 r14 r15 r2
// Trashed: CV r1 r11 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000BF88_entry:
l0000BF88:
	word32 r11_103
	word32 r1_147
	branch r3 == 0xB l0000BF88_ds_t
l0000BF88_ds_t:
l0000C0DC:
	word32 r2_16 = Mem6[Mem6[0x1393C:word32]:word32]
	r11_103 = ((r2_16 >>u 8 & 0x1F) + -1_i) *s ((r2_16 >>u 4 & 3) + -1_i) *s 0x16E3600 >> 1
l0000BF88_ds_f:
l0000BF9C:
	word32 r2_154
	word32 r4_123
	word32 r3_125
	branch r3 >u 0xB l0000BF9C_ds_t
l0000BF9C_ds_t:
l0000BFCC:
	branch r3 == 0x16 l0000BFCC_ds_t
l0000BFCC_ds_t:
l0000C03C:
l0000BFCC_ds_f:
l0000BFD4:
	branch r3 == 0x19 l0000BFD4_ds_t
l0000BFD4_ds_t:
l0000C0B0:
	word32 r15_265
	word32 r11_263
	word32 r14_264
	fn0000BF88(-22_i, r15, out r11_263, out r14_264, out r15_265)
	word32 r11_51
	r3_125 = fn0000B250(-3_i, out r11_51)
	r4_123 = r11_51
l0000BFD4_ds_f:
l0000BFDC:
	branch !(r3 == 0x11) l0000BFDC_ds_t
l0000BFDC_ds_t:
	r11_103 = 0_i
l0000BFDC_ds_f:
l0000BFE4:
l0000C040:
	word32 r3_70 = Mem6[Mem6[0x13948:word32]:word32] >>u 0x10 & 3
	branch r3_70 == 2 l0000C040_ds_t
l0000C040_ds_t:
l0000C07C:
	r3_125 = r11_81
	word32 r11_81
	word32 r15_267
	word32 r14_266
	r4_123 = (Mem6[Mem6[fn0000BF88(-11_i, r15, out r11_81, out r14_266, out r15_267):word32]:word32] >>u 8 & 0x1F) + -1_i
l0000C040_ds_f:
l0000C060:
	branch r3_70 == 3 l0000C060_ds_t
l0000C060_ds_t:
l0000C0A0:
	r2_154 = 0x13098
l0000C060_ds_f:
l0000C068:
	branch r3_70 == 1 l0000C068_ds_t
l0000C068_ds_t:
l0000C068_ds_f:
l0000C070:
l0000BF9C_ds_f:
l0000BFA8:
	branch r3 == 3 l0000BFA8_ds_t
l0000BFA8_ds_t:
l0000C124:
	r11_103 = 0x16E3600
l0000BFA8_ds_f:
l0000BFB4:
	branch r3 == 6 l0000BFB4_ds_t
l0000BFB4_ds_t:
l0000BFEC:
	word32 r3_109 = Mem6[Mem6[0x13944:word32]:word32]
	r4_123 = (r3_109 & 3) + -1_i << (r3_109 >>u 0x10 & 3)
	r3_125 = ((r3_109 >>u 8 & 0x1F) + -1_i) *s ((r3_109 >>u 4 & 3) + -1_i) *s 0x16E3600
l0000C0CC:
	r11_103 = fn0000FFD8(r3_125, r4_123, r15, out r14, out r15)
	r1_147 = fp
l0000BFB4_ds_f:
l0000BFBC:
	branch !(r3 == 1) l0000BFBC_ds_t
l0000BFBC_ds_t:
l0000C11C:
	r11_103 = 0_i
l0000BFBC_ds_f:
l0000BFC4:
l0000C074:
	r2_154 = 0x1309C
l0000C0A8:
	r11_103 = Mem6[r2_154:word32]
l0000C12C:
	r1_147 = fp + -16_i
l0000C130:
	word32 r2_171 = Mem6[r1_147 - 8_i:word32]
	r11Out = r11_103
	r14Out = r14
	r15Out = r15
	return r2_171
fn0000BF88_exit:


void fn0000C32C(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000C32C_entry:
l0000C32C:
	Mem11[0x13958:word32] = 0x1F00800
	fn0000B320(-28_i)
	word32 r6_32 = Mem11[fn0000BC38(-28_i):word32]
	word32 r4_33 = 0x130BC
	word32 r3_34 = 0_i
l0000C378:
	word32 r2_38 = r3_34 + -1_i
	word32 r3_44 = r6_32 + (r2_38 << 5)
	Mem46[r4_33:word32] = r3_44
	Mem47[r3_44:word32] = 0_i
	Mem52[r3_44:word32] = Mem47[r3_44:word32] & 0xFFFFFFF3
	Mem55[r3_44:word32] = Mem52[r3_44:word32] | 4
	Mem58[r3_44:word32] = Mem55[r3_44:word32] & 0xFFFFFF8F
	Mem60[r3_44:word32] = Mem58[r3_44:word32]
	Mem62[r4_33 - 12_i:word32] = -24000_i
	r3_34 = r2_38
	branch r2_38 != 2 l0000C378_ds_t
l0000C378_ds_t:
	r4_33 = r4_33 + -28_i
l0000C378_ds_f:
l0000C3D8:
	Mem72[0x130A8:word32] = -1_i
	Mem75[0x13954:word32] = 0x130A4
	word32 r3_76 = Mem75[0x130BC:word32]
	Mem79[r3_76:word32] = Mem75[r3_76:word32] | 0x80
	fn0000BAA8(0xC1DC, VR)
	Mem95[0x130A0:word32] = 0_i
	return
fn0000C32C_exit:


word32 fn0000C48C(word32 r3, word32 r4, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r14 r16 r18 r2 r9
fn0000C48C_entry:
l0000C48C:
	word32 r14_13 = Mem12[0x130A0:word32]
	word32 r2_16 = 0_i
	branch r14_13 != 0_i l0000C48C_ds_t
l0000C48C_ds_t:
l0000C48C_ds_f:
l0000C4C4:
	word32 r3_37
	word32 r11_28
	word32 r2_29 = fn0000E718(VR, out r11_28)
	word32 r5_35 = Mem15[(r2_29 | 0x30A4) + 4_i:word32]
	branch r5_35 == 0 l0000C4C4_ds_t
l0000C4C4_ds_t:
	r3_37 = r5_35 << 2
l0000C4C4_ds_f:
l0000C4E0:
	branch Mem15[(r2_29 | 0x30A4) + 32_i:word32] != 0 l0000C4E0_ds_t
l0000C4E0_ds_t:
	r2_16 = r14_13
l0000C4E0_ds_f:
l0000C4F0:
	r5_35 = -1_i
	r3_37 = -4_i
l0000C4F8:
	word32 r2_49 = (r5_35 << 5) - r3_37
	Mem56[r2_49 + 0x130B4:word32] = r3
	Mem57[r2_49 + 0x130A8:word32] = -1_i
	Mem59[r2_49 + 0x130B8:word32] = r4
	r2_16 = r2_49 + 0x130A4
l0000C51C:
	fn0000E740(r11_28, VR)
	branch r2_16 == 0 l0000C51C_ds_t
l0000C51C_ds_t:
l0000C540:
	return r2_16
fn0000C48C_exit:
l0000C51C_ds_f:
l0000C530:
	fn00008BB8(Mem79[r2_16 + 8_i:word32], 0xC13C, r2_16)


void fn0000C588(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r14 r2 r9
fn0000C588_entry:
l0000C588:
	branch Mem12[0x130A0:word32] != 0 l0000C588_ds_t
l0000C588_ds_t:
l0000C588_ds_f:
l0000C5B4:
	word32 r6_22 = Mem12[r3 + 24_i:word32]
	Mem26[r6_22 + 4_i:word32] = r4 *s Mem12[r3 + 12_i:word32]
	Mem29[r6_22:word32] = Mem26[r6_22:word32] | 2
l0000C5D0:
	branch (Mem29[r6_22:word32] & 2) != 0 l0000C5D0_ds_t
l0000C5D0_ds_t:
l0000C5D0_ds_f:
l0000C5E4:
	Mem43[r6_22:word32] = Mem29[r6_22:word32] & 0xFFFFFF7F
	Mem47[r6_22:word32] = r5 << 7 | Mem43[r6_22:word32]
	word32 r4_51 = -1_i << Mem47[r3:word32]
	word32 r3_52 = Mem47[0x13958:word32]
	Mem53[r3_52 + 4_i:word32] = r4_51
	Mem56[r3_52:word32] = r4_51 | Mem53[r3_52:word32]
	fn00008B60(Mem56[r3 + 8_i:word32])
	word32 r2_67 = Mem56[r3 + 24_i:word32]
	Mem71[r2_67:word32] = Mem56[r2_67:word32] | 1
l0000C648:
	return
fn0000C588_exit:


word32 fn0000C768(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r2 r3 r4 r5 r6
// Preserved:
fn0000C768_entry:
l0000C768:
	branch Mem5[0x130A0:word32] != 0 l0000C768_ds_t
l0000C768_ds_t:
l0000C768_ds_f:
l0000C788:
	branch r3 == 0 l0000C788_ds_t
l0000C788_ds_t:
l0000C788_ds_f:
l0000C790:
	word32 r5_17 = Mem5[0x13954:word32]
	word32 r4_19 = Mem5[r5_17 + 24_i:word32]
	Mem22[r4_19 + 4_i:word32] = r3 *s Mem5[r5_17 + 12_i:word32]
	Mem25[r4_19:word32] = Mem22[r4_19:word32] | 2
l0000C7B4:
	branch (Mem25[r4_19:word32] & 2) != 0 l0000C7B4_ds_t
l0000C7B4_ds_t:
l0000C7B4_ds_f:
l0000C7C8:
	word32 r5_38 = -1_i << Mem25[r5_17:word32]
	word32 r3_39 = Mem25[0x13958:word32]
	Mem40[r3_39 + 4_i:word32] = r5_38
	Mem43[r4_19:word32] = Mem40[r4_19:word32] | 1
l0000C7EC:
	branch (r5_38 & Mem43[r3_39 + 4_i:word32]) == 0 l0000C7EC_ds_t
l0000C7EC_ds_t:
l0000C7EC_ds_f:
l0000C800:
	Mem55[r4_19:word32] = Mem43[r4_19:word32] & 0xFFFFFFFE
	Mem56[r3_39 + 4_i:word32] = r5_38
l0000C814:
	return dwLoc0C
fn0000C768_exit:


word32 fn0000C8A0(word32 r3, word32 r15, ptr32 & r14Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r1 r14 r15 r2
// Trashed: CV r1 r11 r12 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000C8A0_entry:
l0000C8A0:
	branch r3 == 0 l0000C8A0_ds_t
l0000C8A0_ds_t:
l0000C914:
	r14Out = r14
	r15Out = r15
	return dwLoc18
l0000C8A0_ds_f:
l0000C8B8:
	branch fn0000BC28() == 0 l0000C8B8_ds_t
l0000C8B8_ds_t:
l0000C904:
l0000C820:
	branch r3 == 0 l0000C820_ds_t
l0000C820_ds_t:
l0000C820_ds_f:
l0000C83C:
	word32 r14_52
	word32 r2_49 = r12_40 + r3 * 0x18
	word32 r12_40
	word32 r11_39 = fn000046C0(out r12_40)
	branch r2_49 <u r12_40 l0000C83C_ds_t
l0000C83C_ds_t:
	r14_52 = r11_39 + -1_i
l0000C83C_ds_f:
l0000C860:
	r14_52 = r11_39
l0000C868:
	word32 r12_61
	word32 r11_60 = fn000046C0(out r12_61)
	branch r14_52 >u r11_60 l0000C868_ds_t
l0000C868_ds_t:
l0000C868_ds_f:
	bool F_70 = r14_52 != r11_60
l0000C87C:
	branch F_70 l0000C87C_ds_t
l0000C87C_ds_t:
l0000C87C_ds_f:
	bool F_73 = r2_49 >u r12_61
l0000C884:
	branch F_73 l0000C884_ds_t
l0000C884_ds_t:
l0000C884_ds_f:
l0000C88C:
	r14Out = r2
	r15Out = r15
	return dwLoc0C
l0000C8B8_ds_f:
l0000C8CC:
	word32 r11_87
	word32 r14_92
	word32 r15_93
	word32 r11_110
	word32 r15_115
	fn0000FEDC(r11_87 *s fn0000BF88(-17_i, r15, out r11_87, out r14_92, out r15_93) + 0xF423F, 0xF4240, r15_93, out r11_110, out r15_115)
l0000C8FC_thunk_fn0000DB28:
	fn0000DB28(r11_110)
	r14Out = r14_92
	r15Out = r15_115
	return r2
fn0000C8A0_exit:


void fn0000C93C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r3 r4
// Preserved: r1
fn0000C93C_entry:
l0000C93C:
	Mem8[0x1F0240C:word32] = Mem0[0x1F0240C:word32] | 8
l0000C954:
	branch (Mem8[0x1F0240C:word32] & 8) != 0 l0000C954_ds_t
l0000C954_ds_t:
l0000C954_ds_f:
l0000C968:
	return
fn0000C93C_exit:


void fn0000C970()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r3 r4
// Preserved: r1
fn0000C970_entry:
l0000C970:
	Mem7[0x1F02418:word32] = -1_i
l0000C980:
	branch Mem7[0x1F02418:word32] != 0 l0000C980_ds_t
l0000C980_ds_t:
l0000C980_ds_f:
l0000C990:
	return
fn0000C970_exit:


void fn0000C998()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r1
// Trashed: CV r1 r2 r3 r4
// Preserved:
fn0000C998_entry:
l0000C998:
	Mem12[0x1F0240C:word32] = (Mem5[0x1F0240C:word32] | 0x20) & 0xFFFFFFF7
	return
fn0000C998_exit:


word32 fn0000C9C8(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r9
fn0000C9C8_entry:
l0000C9C8:
	word32 r2_147
	word32 r14_141
	word32 r14_100
	word32 r11_22
	word32 r15_28
	word32 r14_243
	fn0000BF88(-25_i, r15, out r11_22, out r14_243, out r15_28)
	word32 r15_43
	word32 r14_244
	word32 r11_40 = fn0000FFD8(r11_22, -10_i, r15_28, out r14_244, out r15_43)
	word32 r11_59
	word32 r15_108
	fn0000FEDC(r11_40, 0x61A80, r15_43, out r11_59, out r15_108)
	branch r11_59 == 0 l0000C9C8_ds_t
l0000C9C8_ds_t:
l0000CA94:
	r2_147 = r11_59
	r14_100 = -1_i
l0000C9C8_ds_f:
l0000CA1C:
	r2_147 = 0_i
	word32 r16_177 = -1_i
l0000CA24:
	word32 r11_86
	fn0000FEDC(r11_59, r16_177, r15_108, out r11_86, out r15_108)
	r14_100 = r11_86 - 1_i & 0xFF
l0000CA6C:
	branch r14_100 <=u 0xF l0000CA6C_ds_t
l0000CA6C_ds_t:
	word32 r22_103 = r14_100 + -1_i
l0000CA3C:
	word32 r11_110
	word32 r15_115
	fn0000FEDC(r11_40, r22_103, r15_108, out r11_110, out r15_115)
	word32 r11_126
	fn0000FEDC(r11_110, r16_177, r15_115, out r11_126, out r15_108)
	branch r11_126 <=u 0x61A80 l0000CA3C_ds_t
l0000CA3C_ds_t:
	r14_141 = r14_100 << 3
l0000CA3C_ds_f:
l0000CA68:
	r14_100 = r22_103 & 0xFF
l0000CA6C_ds_f:
l0000CA78:
	word32 r2_148 = r2_147 + -1_i
	r2_147 = r2_148 & 0xFF
	branch (r2_148 & 0xFF) == 8 l0000CA78_ds_t
l0000CA78_ds_t:
l0000CA9C:
	r14_141 = r14_100 << 3
l0000CAA0:
	Mem162[0x1F02414:word32] = r14_141 | r2_147
	return r15_108
fn0000C9C8_exit:
l0000CA78_ds_f:
	word32 r16_175 = r16_177 * 2
l0000CA8C:
	r16_177 = r16_175 & 0xFF


word32 fn0000CB40(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r1 r11 r13 r15 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000CB40_entry:
l0000CB40:
	word32 r2_9 = Mem7[0x4020:word32]
	branch r2_9 == 0 l0000CB40_ds_t
l0000CB40_ds_t:
l0000CB78:
	word32 r2_19 = fn00009744(-1_i, r2_9, -2_i)
	fn00009834(-1_i, fn000097BC(-1_i, r2_19, r2_19), -2_i)
	fn000097BC(-1_i, 0xFFFFFFFF, fn00009744(-1_i, 0xFFFFFFFF, -2_i))
	fn00009834(-1_i, 0xFFFFFFFF, -2_i)
	fn0000B320(-25_i)
	word32 r2_94 = fn0000BC38(-25_i)
	r15 = fn0000C9C8(r15)
	Mem114[r2_94 | 0x240C:word32] = -68_i
	fn0000C970()
	branch Mem114[r2_94 | 0x2420:word32] == 0x3A l0000CB78_ds_t
l0000CB78_ds_t:
l0000CB78_ds_f:
l0000CC24:
	word32 r2_126 = -11_i
l0000CC30:
	r2_126 = r2_126 - 1_i
	branch r2_126 != 0 l0000CC30_ds_t
l0000CC30_ds_t:
l0000CC2C:
	Mem134[r2_94 | 0x2420:word32] = -10_i
l0000CC30_ds_f:
l0000CC40:
	Mem139[0x1F02420:word32] = -10_i
	Mem143[0x1F02418:word32] = -1_i
l0000CC60:
	fn0000B4D4(0xCAD4, VR)
	Mem162[0x134C0:byte] = 0_8
l0000CB40_ds_f:
l0000CB60:
	Mem173[0x134C0:byte] = 0xFF_8
l0000CC90:
	return r15
fn0000CB40_exit:


word32 fn0000CCA8(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 VR, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r20Out, ptr32 & r22Out, ptr32 & r24Out, ptr32 & r28Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] VR:[0..31]
// LiveOut: r11 r14 r16 r18 r2 r20 r22 r24 r28
// Trashed: CV r1 r11 r14 r16 r18 r2 r20 r22 r24 r26 r28 r9
// Preserved:
fn0000CCA8_entry:
l0000CCA8:
	word32 r2_41
	word32 r16_191 = r6
	word32 r20_33 = (word32) Mem23[0x134C0:byte] << 0x18 >> 0x18
	word32 r14_223 = r7
	branch r20_33 != 0 l0000CCA8_ds_t
l0000CCA8_ds_t:
	r2_41 = 0xFFFFFFF3
l0000CCA8_ds_f:
l0000CD08:
	branch r7 >u 4 l0000CD08_ds_t
l0000CD08_ds_t:
	r2_41 = 0xFFFFFFEA
l0000D1E0:
	r11Out = r2_41
	r14Out = dwLoc7C
	r16Out = dwLoc78
	r18Out = dwLoc74
	r20Out = dwLoc70
	r22Out = dwLoc6C
	r24Out = dwLoc68
	r28Out = dwLoc60
	return dwLoc80
fn0000CCA8_exit:
l0000CD08_ds_f:
l0000CD14:
	Mem73[0x1F0240C:word32] = (Mem23[0x1F0240C:word32] | 4) & 0xFFFFFFF7
	word32 r11_78
	word32 r2_79 = fn0000E718(VR, out r11_78)
	Mem86[r2_79 | 0x241C:word32] = r20_33
	word32 r1_77 = <invalid>
	Mem90[r1_77:word32] = Mem86[r2_79 | 0x2410:word32] & 0xFF
	branch Mem90[r1_77:word32] != 0xF8 l0000CD14_ds_t
l0000CD14_ds_t:
l0000CD14_ds_f:
l0000CD70:
	fn0000C998()
	word32 r1_97 = <invalid>
	word32 r6_103 = -2047_i
l0000CD7C:
	branch (Mem90[0x1F0240C:word32] & 8) != 0 l0000CD70_ds_t
l0000CD70_ds_t:
l0000CDA8:
	branch r6_103 == 0 l0000CDA8_ds_t
l0000CDA8_ds_t:
l0000CDA8_ds_f:
l0000CDB4:
	Mem120[r1_97:word32] = Mem90[0x1F02410:word32]
	branch Mem120[r1_97:word32] != 8 l0000CDB4_ds_t
l0000CDB4_ds_t:
l0000CDB4_ds_f:
l0000CDD0:
	word32 r22_126 = (r4 & 0xFF) * 2
	Mem131[0x1F02408:word32] = r22_126 & 0xFF
	fn0000C93C()
	word32 r6_134 = -2047_i
l0000CDF0:
	branch (Mem131[0x1F0240C:word32] & 8) != 0 l0000CDD0_ds_t
l0000CDD0_ds_t:
l0000CE1C:
	branch r6_134 == 0 l0000CE1C_ds_t
l0000CE1C_ds_t:
l0000CE1C_ds_f:
l0000CE28:
	Mem151[r1_97:word32] = Mem131[0x1F02410:word32]
	branch Mem151[r1_97:word32] != 0x18 l0000CE28_ds_t
l0000CE28_ds_t:
l0000CE28_ds_f:
l0000CE44:
	Mem158[0x1F02408:word32] = r5 & 0xFF
	fn0000C93C()
	word32 r5_162 = -2047_i
l0000CE58:
	branch (Mem158[0x1F0240C:word32] & 8) != 0 l0000CE44_ds_t
l0000CE44_ds_t:
l0000CE84:
	branch r5_162 == 0 l0000CE84_ds_t
l0000CE84_ds_t:
l0000CE84_ds_f:
l0000CE90:
	Mem179[r1_97:word32] = Mem158[0x1F02410:word32]
	branch Mem179[r1_97:word32] != 0x28 l0000CE90_ds_t
l0000CE90_ds_t:
l0000CE90_ds_f:
l0000CEAC:
	branch !(r3 != 0) l0000CEAC_ds_t
l0000CEAC_ds_t:
l0000CF30:
	bool F_189 = r7 != 0
l0000CF3C:
	branch F_189 l0000CF30_ds_t
l0000CF30_ds_t:
l0000CEBC:
	Mem195[0x1F02408:word32] = (word32) Mem192[r16_191:byte]
	fn0000C93C()
	word32 r2_196 = -2047_i
l0000CECC:
	branch (Mem195[0x1F0240C:word32] & 8) == 0 l0000CEBC_ds_t
l0000CEBC_ds_t:
	r2_196 = r2_196 - 1_i
l0000CEF8:
	branch r2_196 != 0xFFFFFFFF l0000CEF8_ds_t
l0000CEF8_ds_t:
l0000CEF8_ds_f:
l0000CF04:
l0000CEBC_ds_f:
	word32 r2_213 = r2_196 - 1_i
l0000CEE0:
	branch !(r2_213 == 0) l0000CEE0_ds_t
l0000CEE0_ds_t:
l0000CF0C:
	Mem228[r1_97:word32] = Mem195[0x1F02410:word32]
	r14_223 = r14_223 - 1_i
	branch Mem228[r1_97:word32] != 0x28 l0000CF0C_ds_t
l0000CF0C_ds_t:
l0000CF0C_ds_f:
	r16_191 = r16_191 + -1_i
l0000CF28:
	F_189 = r14_223 != 0
l0000CEE0_ds_f:
l0000CEF0:
l0000CF30_ds_f:
l0000CF44:
l0000CEAC_ds_f:
l0000CEB4:
l0000CF4C:
	fn0000C998()
	fn0000C93C()
	word32 r1_243 = <invalid>
	word32 r5_251 = -2047_i
l0000CF60:
	branch (Mem179[0x1F0240C:word32] & 8) != 0 l0000CF4C_ds_t
l0000CF4C_ds_t:
l0000CF8C:
	branch r5_251 == 0 l0000CF8C_ds_t
l0000CF8C_ds_t:
l0000CF8C_ds_f:
l0000CF98:
	Mem268[r1_243:word32] = Mem179[0x1F02410:word32]
	branch Mem268[r1_243:word32] != 0x10 l0000CF98_ds_t
l0000CF98_ds_t:
l0000CF98_ds_f:
l0000CFB4:
	Mem277[0x1F02408:word32] = r22_126 | 1
	fn0000C93C()
	word32 r4_280 = -2047_i
l0000CFD0:
	branch (Mem277[0x1F0240C:word32] & 8) != 0 l0000CFB4_ds_t
l0000CFB4_ds_t:
l0000CFFC:
	branch r4_280 == 0 l0000CFFC_ds_t
l0000CFFC_ds_t:
l0000CFFC_ds_f:
l0000D008:
	Mem297[r1_243:word32] = Mem277[0x1F02410:word32]
	branch Mem297[r1_243:word32] != 0x40 l0000D008_ds_t
l0000D008_ds_t:
l0000D008_ds_f:
l0000D024:
l0000D0CC:
	bool F_305 = r7 != 0
l0000D0D4:
	branch F_305 l0000D0CC_ds_t
l0000D0CC_ds_t:
	r14_223 = r14_223 - 1_i
l0000D02C:
	branch r14_223 != 0 l0000D02C_ds_t
l0000D02C_ds_t:
l0000D02C_ds_f:
l0000D038:
	Mem315[0x1F0240C:word32] = Mem312[0x1F0240C:word32] & 0xF3
l0000D044:
	fn0000C93C()
	word32 r2_316 = -2047_i
l0000D04C:
	branch (Mem570[0x1F0240C:word32] & 8) == 0 l0000D044_ds_t
l0000D044_ds_t:
	r2_316 = r2_316 - 1_i
l0000D078:
	branch r2_316 != 0xFFFFFFFF l0000D078_ds_t
l0000D078_ds_t:
l0000D078_ds_f:
l0000D084:
l0000D044_ds_f:
	word32 r2_333 = r2_316 - 1_i
l0000D060:
	branch !(r2_333 == 0) l0000D060_ds_t
l0000D060_ds_t:
l0000D08C:
	bool F_359
	Mem349[r16_191:byte] = Mem570[0x1F02408:byte]
	Mem357[r1_243:word32] = Mem349[0x1F02410:word32]
	branch r14_223 == 0 l0000D08C_ds_t
l0000D08C_ds_t:
l0000D0B4:
	F_359 = Mem357[r1_243:word32] != 0x58
l0000D08C_ds_f:
l0000D0A8:
	F_359 = Mem357[r1_243:word32] != 0x50
l0000D0BC:
	branch F_359 l0000D0BC_ds_t
l0000D0BC_ds_t:
l0000D0E8:
l0000D0BC_ds_f:
	r16_191 = r16_191 + -1_i
l0000D0C4:
	F_305 = r14_223 != 0
l0000D060_ds_f:
l0000D070:
l0000D0CC_ds_f:
l0000D0DC:
l0000CFB4_ds_f:
l0000CFE4:
	r4_280 = r4_280 - 1_i
	branch r4_280 != 0 l0000CFE4_ds_t
l0000CFE4_ds_t:
l0000CFE4_ds_f:
l0000CFF4:
l0000CF4C_ds_f:
l0000CF74:
	r5_251 = r5_251 - 1_i
	branch r5_251 != 0 l0000CF74_ds_t
l0000CF74_ds_t:
l0000CF74_ds_f:
l0000CF84:
l0000CE44_ds_f:
l0000CE6C:
	r5_162 = r5_162 - 1_i
	branch r5_162 != 0 l0000CE6C_ds_t
l0000CE6C_ds_t:
l0000CE6C_ds_f:
l0000CE7C:
l0000D0EC:
l0000CDD0_ds_f:
l0000CE04:
	r6_134 = r6_134 - 1_i
	branch r6_134 != 0 l0000CE04_ds_t
l0000CE04_ds_t:
l0000CE04_ds_f:
l0000CE14:
l0000CD70_ds_f:
l0000CD90:
	r6_103 = r6_103 - 1_i
	branch r6_103 != 0 l0000CD90_ds_t
l0000CD90_ds_t:
l0000CD90_ds_f:
l0000CDA0:
l0000D0F0:
l0000D0F4:
	Mem439[0x1F0240C:word32] = (Mem428[0x1F0240C:word32] | 0x10) & 0xFFFFFFF7
	word32 r5_437 = -2047_i
l0000D10C:
	branch (Mem439[0x1F0240C:word32] & 0x10) == 0 l0000D0F0_ds_t
l0000D0F0_ds_t:
l0000D0F0_ds_f:
	r5_437 = r5_437 - 1_i
l0000D120:
	branch r5_437 != 0 l0000D120_ds_t
l0000D120_ds_t:
l0000D120_ds_f:
l0000D12C:
	fn0000C93C()
	word32 r5_454 = -2047_i
l0000D148:
	branch (Mem439[0x1F0240C:word32] & 0x10) == 0 l0000D12C_ds_t
l0000D12C_ds_t:
l0000D12C_ds_f:
	r5_454 = r5_454 - 1_i
l0000D15C:
	branch r5_454 != 0 l0000D15C_ds_t
l0000D15C_ds_t:
l0000D15C_ds_f:
l0000D168:
	word32 r4_472 = -2047_i
l0000D174:
	branch Mem439[0x1F02410:word32] == 0xF8 l0000D168_ds_t
l0000D168_ds_t:
	bool F_480 = r4_472 != 0
l0000D19C:
	branch F_480 l0000D19C_ds_t
l0000D19C_ds_t:
	word32 r5_481 = -2047_i
l0000D1B4:
l0000D1BC:
	branch Mem439[0x1F02420:word32] == 0x3A l0000D1B4_ds_t
l0000D1B4_ds_t:
l0000D1B4_ds_f:
	r5_481 = r5_481 - 1_i
l0000D1CC:
	branch r5_481 != 0 l0000D1CC_ds_t
l0000D1CC_ds_t:
l0000D1CC_ds_f:
l0000D19C_ds_f:
l0000D168_ds_f:
l0000D184:
	r4_472 = r4_472 - 1_i
	branch r4_472 != 0 l0000D184_ds_t
l0000D184_ds_t:
l0000D184_ds_f:
l0000D194:
l0000D1A4:
	fn0000C970()
l0000D1D8:
	fn0000E740(r11_78, VR)


word32 fn0000D214(word32 r3, word32 r4, word32 r5, word32 VR, ptr32 & r22Out, ptr32 & r28Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] VR:[0..31]
// LiveOut: r11 r22 r28
// Trashed: CV r11 r22 r24 r26 r28 r3 r4 r5 r6 r7
// Preserved: r1 r14 r16 r18 r2 r20 r9
fn0000D214_entry:
l0000D214:
	word32 r14_5 = 0_i
	word32 r20_17 = r3
	word32 r18_21 = r4
	word32 r16_23 = r5
	word32 r2_24 = 0
l0000D268:
	branch r2_24 <u r16_23 l0000D268_ds_t
l0000D268_ds_t:
	word32 r6_29 = r18_21 + r2_24
l0000D248:
	word32 r11_42
	word32 r14_43
	word32 r24_99
	r2_24 = fn0000CCA8(-1_i, -54_i, (word32) Mem15[r20_17 + r2_24:byte], r6_29, 0xFFFFFFFF, VR, out r11_42, out r14_43, out r16_23, out r18_21, out r20_17, out r22, out r24_99, out r28)
	r14_5 = r14_43 | r11_42
l0000D268_ds_f:
l0000D274:
	r22Out = r22
	r28Out = r28
	return r14_5
fn0000D214_exit:


word32 fn0000D298(word32 r3, word32 r4, word32 r5, word32 VR, ptr32 & r22Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] VR:[0..31]
// LiveOut: r11 r22 r24
// Trashed: CV r11 r22 r24 r26 r28 r3 r4 r5 r6 r7
// Preserved: r1 r14 r16 r18 r2 r20 r9
fn0000D298_entry:
l0000D298:
	word32 r14_5 = 0_i
	word32 r20_17 = r3
	word32 r18_21 = r4
	word32 r16_23 = r5
	word32 r2_24 = 0
l0000D2EC:
	branch r2_24 <u r16_23 l0000D2EC_ds_t
l0000D2EC_ds_t:
	word32 r6_29 = r18_21 + r2_24
l0000D2CC:
	word32 r11_42
	word32 r14_43
	word32 r28_99
	r2_24 = fn0000CCA8(0_i, -54_i, (word32) Mem15[r20_17 + r2_24:byte], r6_29, -1_i, VR, out r11_42, out r14_43, out r16_23, out r18_21, out r20_17, out r22, out r24, out r28_99)
	r14_5 = r14_43 | r11_42
l0000D2EC_ds_f:
l0000D2F8:
	r22Out = r22
	r24Out = r24
	return r14_5
fn0000D298_exit:


word32 fn0000D31C(word32 r3, word32 VR, ptr32 & r14Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11 r14 r16
// Trashed: CV r1 r11 r14 r16 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r9
// Preserved:
fn0000D31C_entry:
l0000D31C:
	word32 r14_14 = Mem10[r3 + 40_i:word32]
	word32 r3_15 = 0_i
	word32 r6_16 = fp - 40_i
	word32 r4_18 = 0
l0000D378:
	branch r4_18 <u r14_14 l0000D378_ds_t
l0000D378_ds_t:
	bool F_22 = r4_18 >u 3
l0000D348:
	word32 r5_29
	branch F_22 l0000D348_ds_t
l0000D348_ds_t:
l0000D35C:
	r5_29 = Mem27[r3 + 48_i:word32] >>u r3_15 - 32_i
l0000D348_ds_f:
l0000D350:
	r5_29 = Mem27[r3 + 44_i:word32] >>u r3_15
l0000D368:
	Mem35[r6_16:byte] = SLICE(r5_29, byte, 0)
	r4_18 = r4_18 + -1_i
	r3_15 = r3_15 + -8_i
	r6_16 = r6_16 + -1_i
l0000D378_ds_f:
l0000D384:
	word32 r22_150
	word32 r28_151
	word32 r11_52 = fn0000D214(fp - 40_i, fp - 32_i, r14_14, VR, out r22_150, out r28_151)
	word32 r3_64 = 0_i
	word32 r4_66 = fp - 32_i
	word32 r6_67 = 0
l0000D3E4:
	branch r6_67 <u r14_14 l0000D3E4_ds_t
l0000D3E4_ds_t:
l0000D3A4:
	branch r6_67 >u 3 l0000D3A4_ds_t
l0000D3A4_ds_t:
	word32 r5_74 = (word32) Mem73[r4_66:byte]
l0000D3C4:
	Mem82[r3 + 56_i:word32] = Mem73[r3 + 56_i:word32] | r5_74 << r3_64 - 32_i
l0000D3A4_ds_f:
	word32 r5_83 = (word32) Mem73[r4_66:byte]
l0000D3B0:
	Mem87[r3 + 52_i:word32] = Mem73[r3 + 52_i:word32] | r5_83 << r3_64
l0000D3D8:
	r6_67 = r6_67 + -1_i
	r4_66 = r4_66 + -1_i
	r3_64 = r3_64 + -8_i
l0000D3E4_ds_f:
l0000D3F0:
	r14Out = dwLoc4C
	r16Out = dwLoc48
	return r11_52
fn0000D31C_exit:


word32 fn0000D408(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r12 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000D408_entry:
l0000D408:
	word32 r4_17 = 0_i
	word32 r5_8 = Mem4[r3 + 40_i:word32]
	word32 r8_24 = fp - 28_i
	word32 r7_11 = fp - 20_i
	word32 r6_12 = 0
l0000D474:
	branch r6_12 <u r5_8 l0000D474_ds_t
l0000D474_ds_t:
	bool F_16 = r6_12 >u 3
l0000D428:
	word32 r11_27
	branch F_16 l0000D428_ds_t
l0000D428_ds_t:
l0000D448:
	word32 r11_18 = r4_17 - 32_i
	Mem25[r8_24:byte] = SLICE(Mem21[r3 + 48_i:word32] >>u r11_18, byte, 0)
	r11_27 = Mem25[r3 + 56_i:word32] >>u r11_18
l0000D428_ds_f:
l0000D430:
	Mem30[r8_24:byte] = SLICE(Mem21[r3 + 44_i:word32] >>u r4_17, byte, 0)
	r11_27 = Mem30[r3 + 52_i:word32] >>u r4_17
l0000D460:
	Mem36[r7_11:byte] = SLICE(r11_27, byte, 0)
	r6_12 = r6_12 + -1_i
	r4_17 = r4_17 + -8_i
	r8_24 = r8_24 + -1_i
	r7_11 = r7_11 + -1_i
l0000D474_ds_f:
l0000D480:
	word32 r24_81
	word32 r22_80
	return fn0000D298(fp - 28_i, fp - 20_i, r5_8, VR, out r22_80, out r24_81)
fn0000D408_exit:


word32 fn0000D49C(word32 r3, word32 r15, word32 VR, ptr32 & r14Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] VR:[0..31]
// LiveOut: r11 r14 r16
// Trashed: CV r1 r11 r14 r16 r18 r2 r20 r22 r24 r26 r28 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000D49C_entry:
l0000D49C:
	word32 r4_25 = 0_i
	word32 r18_28 = Mem24[r3 + 40_i:word32]
	word32 r30_29 = Mem24[r3 + 68_i:word32]
	word32 r8_30 = fp - 100_i
	word32 r7_31 = fp - 92_i
	word32 r6_32 = fp - 84_i
	word32 r2_34 = 0
l0000D554:
	branch r2_34 <u r18_28 l0000D554_ds_t
l0000D554_ds_t:
	bool F_38 = r2_34 >u 3
l0000D4EC:
	word32 r5_53
	branch F_38 l0000D4EC_ds_t
l0000D4EC_ds_t:
l0000D518:
	word32 r5_40 = r4_25 - 32_i
	Mem47[r8_30:byte] = SLICE(Mem43[r3 + 48_i:word32] >>u r5_40, byte, 0)
	Mem51[r7_31:byte] = SLICE(Mem47[r3 + 56_i:word32] >>u r5_40, byte, 0)
	r5_53 = Mem51[r3 + 64_i:word32] >>u r5_40
l0000D4EC_ds_f:
l0000D4F4:
	Mem56[r8_30:byte] = SLICE(Mem43[r3 + 44_i:word32] >>u r4_25, byte, 0)
	Mem59[r7_31:byte] = SLICE(Mem56[r3 + 52_i:word32] >>u r4_25, byte, 0)
	r5_53 = Mem59[r3 + 60_i:word32] >>u r4_25
l0000D53C:
	Mem65[r6_32:byte] = SLICE(r5_53, byte, 0)
	r2_34 = r2_34 + -1_i
	r4_25 = r4_25 + -8_i
	r8_30 = r8_30 + -1_i
	r7_31 = r7_31 + -1_i
	r6_32 = r6_32 + -1_i
l0000D554_ds_f:
l0000D560:
	word32 r16_147 = 0_i
	word32 r2_150 = fp - 76_i
	word32 r14_148 = 0
l0000D5E4:
	branch r14_148 <u r18_28 l0000D5E4_ds_t
l0000D5E4_ds_t:
l0000D580:
	word32 r28_101
	word32 r22_280
	fn0000D214(fp - 100_i + r14_148, r2_150, -1_i, VR, out r22_280, out r28_101)
	branch r30_29 != 0 l0000D580_ds_t
l0000D580_ds_t:
l0000D580_ds_f:
l0000D598:
	Mem120[r2_150:byte] = SLICE(((word32) Mem115[r28_101 + r14_148:byte] ^ 0xFF) & (word32) Mem115[r2_150:byte], byte, 0)
l0000D5B4:
	word32 r22_130
	word32 r24_131
	word32 r11_129 = fn0000D298(fp - 100_i, fp - 76_i, r18_28, VR, out r22_130, out r24_131)
	word32 r5_145 = (word32) Mem144[r24_131 + r14_148:byte]
	branch r5_145 == 0 l0000D5B4_ds_t
l0000D5B4_ds_t:
	r16_147 = r11_129
l0000D5DC:
	r14_148 = r14_148 + -1_i
	r2_150 = r2_150 + -1_i
l0000D5B4_ds_f:
l0000D5D4:
	word32 r15_282
	word32 r14_281
	fn0000C8A0(r5_145 *s r22_130, r15, out r14_281, out r15_282)
l0000D5E4_ds_f:
l0000D5F0:
	r14Out = dwLocC0
	r16Out = dwLocBC
	return r16_147
fn0000D49C_exit:


word32 fn0000D628()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000D628_entry:
l0000D628:
	return (word32) Mem0[0x134C0:byte] << 0x18 >> 0x18
fn0000D628_exit:


word32 fn0000D640(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn0000D640_entry:
l0000D640:
	word32 r11_11 = fn0000ECE8()
	Mem19[0x134C4:word32] = ((0 - r11_11 | r11_11) ^ 0xFFFF) >>u 0x1F
	branch Mem19[0x134C4:word32] != 0 l0000D640_ds_t
l0000D640_ds_t:
l0000D640_ds_f:
l0000D684:
	Mem31[0x134C8:word32] = 0x1C200
	fn00009744(-1_i, -2_i, 0xFFFFFFFE)
	fn00009744(-1_i, -3_i, -2_i)
	fn0000BC38(-27_i)
	fn0000B320(-27_i)
	word32 r11_74
	word32 r14_79
	word32 r15_80
	word32 r2_75 = fn0000BF88(-25_i, r15, out r11_74, out r14_79, out r15_80)
	word32 r11_96
	fn0000FEDC(r11_74 + (Mem31[r14_79:word32] << 3), Mem31[r14_79:word32] << 4, r15_80, out r11_96, out r15)
	Mem115[0x1F0280C:word32] = Mem31[0x1F0280C:word32] | 0x80
	Mem117[0x1F02800:word32] = r11_96 & 0xFF
	Mem119[0x1F02804:word32] = r11_96 >>u 8 & 0xFF
	Mem122[0x1F028A4:word32] = r2_75
	Mem124[0x1F0280C:word32] = -3_i
	Mem126[0x1F02808:word32] = -7_i
	fn0000B4D4(0xDA70, VR)
	Mem143[0x130DC:word32] = r2_75
l0000D758:
	return r15
fn0000D640_exit:


void fn0000D76C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7
// Preserved: r1 r2 r9
fn0000D76C_entry:
l0000D76C:
	Mem10[0x130DC:word32] = -1_i
	word32 r11_13 = fn0000ECE8()
	Mem23[0x134C4:word32] = ((0 - r11_13 | r11_13) ^ 0xFFFF) >>u 0x1F
	fn00009744(fn00009744(fn0000B4F0(0xDA70), -2_i, -7_i), -3_i, -7_i)
	fn0000B320(-27_i)
	fn0000BC38(-27_i)
	return
fn0000D76C_exit:


void fn0000D804(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn0000D804_entry:
l0000D804:
	branch Mem0[0x130DC:word32] != 0 l0000D804_ds_t
l0000D804_ds_t:
l0000D804_ds_f:
	word32 r3_13 = r3 << 0x18 >> 0x18
l0000D824:
	branch Mem0[0x134C4:word32] != 0 l0000D824_ds_t
l0000D824_ds_t:
l0000D824_ds_f:
l0000D83C:
l0000D840:
	branch (Mem0[0x1F0287C:word32] & 2) == 0 l0000D840_ds_t
l0000D840_ds_t:
l0000D840_ds_f:
l0000D854:
	Mem31[0x1F02800:word32] = r3_13
l0000D864:
	return
fn0000D804_exit:


word32 fn0000D8D8(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r9
// Preserved:
fn0000D8D8_entry:
l0000D8D8:
	branch Mem9[0x130DC:word32] != 0 l0000D8D8_ds_t
l0000D8D8_ds_t:
l0000D8D8_ds_f:
l0000D900:
	branch !(Mem9[0x134C4:word32] != 0) l0000D900_ds_t
l0000D900_ds_t:
l0000D93C:
	word32 r11_23 = (int32) Mem9[r3:int8]
	branch r11_23 != 0 l0000D93C_ds_t
l0000D93C_ds_t:
l0000D920:
	branch r11_23 != 0xA l0000D920_ds_t
l0000D920_ds_t:
l0000D930:
	fn0000D804((int32) Mem9[r3:int8])
l0000D920_ds_f:
l0000D928:
	fn0000D804(-13_i)
l0000D93C_ds_f:
l0000D94C:
l0000D900_ds_f:
l0000D918:
l0000D950:
	return dwLoc18
fn0000D8D8_exit:


word32 fn0000D95C(word32 r3, word32 r15, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r11 r14
// Trashed: CV r11 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000D95C_entry:
l0000D95C:
	word32 r11_104
	branch Mem8[0x134C4:word32] != 0 l0000D95C_ds_t
l0000D95C_ds_t:
	r11_104 = 0xFFFFFFF3
l0000D95C_ds_f:
l0000D980:
	Mem20[0x134C8:word32] = r3
l0000D994:
	branch Mem20[0x1F02880:word32] != 0 l0000D994_ds_t
l0000D994_ds_t:
l0000D994_ds_f:
l0000D9A4:
	word32 r11_32
	word32 r15_38
	fn0000BF88(-25_i, r15, out r11_32, out r14, out r15_38)
	word32 r15_163
	word32 r11_56
	fn0000FEDC(r11_32 + (Mem20[0x134C8:word32] << 3), Mem20[0x134C8:word32] << 4, r15_38, out r11_56, out r15_163)
	word32 r6_71 = Mem20[0x1F0280C:word32]
	branch !(r11_56 == 0) l0000D9A4_ds_t
l0000D9A4_ds_t:
l0000D9A4_ds_f:
l0000D9E4:
	r11_56 = -1_i
l0000D9E8:
	Mem88[0x1F028A4:word32] = Mem20[0x1F028A4:word32] | 2
	Mem91[0x1F0280C:word32] = r6_71 | 0x80
	Mem94[0x1F02800:word32] = r11_56 & 0xFF
	Mem96[0x1F02804:word32] = r11_56 >>u 8 & 0xFF
	Mem97[0x1F0280C:word32] = r6_71 & 0xFFFFFF7F
	Mem100[0x1F028A4:word32] = Mem97[0x1F028A4:word32] | 4
l0000DA38:
	word32 r11_103 = Mem100[0x1F028A4:word32]
	r11_104 = r11_103 & 4
	branch (r11_103 & 4) != 0 l0000DA38_ds_t
l0000DA38_ds_t:
l0000DA38_ds_f:
l0000DA4C:
	Mem111[0x1F028A4:word32] = (Mem100[0x1F028A4:word32] | 4) & 0xFFFFFFFD
l0000DA60:
	r14Out = r14
	return r11_104
fn0000D95C_exit:


void fn0000DB28(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r3
// Preserved: r1
fn0000DB28_entry:
l0000DB28:
	branch r3 != 0 l0000DB28_ds_t
l0000DB28_ds_t:
	r3 = r3 - 1_i
l0000DB28_ds_f:
l0000DB34:
	return
fn0000DB28_exit:


word32 fn0000DB40(word32 r3, word32 r4, word32 r5, word32 r15, ptr32 & r15Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r22Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r15 r16 r18 r2 r22 r24
// Trashed: CV r1 r11 r13 r14 r15 r16 r17 r18 r2 r20 r22 r24 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000DB40_entry:
l0000DB40:
	word32 r2_146 = r3
	branch r3 != 0 l0000DB40_ds_t
l0000DB40_ds_t:
l0000DB88:
	word32 r18_28 = 0_i
	branch r3 >= 0_i l0000DB88_ds_t
l0000DB88_ds_t:
l0000DB88_ds_f:
l0000DB98:
	r2_146 = 0 - r3
	r18_28 = -1_i
l0000DBA0:
	word32 r16_34 = 0_i
l0000DBB0:
	word32 r15_50
	Mem69[fp - 48_i + r16_34:byte] = SLICE((word32) Mem67[fn0001005C(r2_146, r5, r15, out r15_50) + 0x12BF4:byte], byte, 0)
	word32 r14_72
	word32 r11_70 = fn0000FFD8(r2_146, r5, r15_50, out r14_72, out r15)
	word32 r3_84 = r16_34 + -1_i
	branch r11_70 > 0_i l0000DBB0_ds_t
l0000DBB0_ds_t:
	r2_146 = r11_70
l0000DBAC:
	r16_34 = r3_84
l0000DBB0_ds_f:
l0000DBF0:
	word32 r2_104
	branch r18_28 == 0 l0000DBF0_ds_t
l0000DBF0_ds_t:
	r2_104 = r18_28
l0000DBF0_ds_f:
l0000DBFC:
	Mem96[r14_72:byte] = 0xD3_8
	r2_104 = -1_i
l0000DC08:
	word32 r3_102 = fp - 48_i + r16_34
	word32 r4_105 = r14_72 + r2_104
l0000DC28:
	branch r3_102 != fp - 49_i l0000DC28_ds_t
l0000DC28_ds_t:
l0000DC18:
	Mem115[r4_105:byte] = SLICE((word32) Mem111[r3_102:byte], byte, 0)
	r3_102 = r3_102 - 1_i
	r4_105 = r4_105 + -1_i
l0000DC28_ds_f:
l0000DC34:
	Mem125[r14_72 + r2_104 + r16_34 + 1_i:byte] = 0_8
l0000DB40_ds_f:
l0000DB78:
	Mem129[r4 + 1_i:byte] = SLICE(r3, byte, 0)
	Mem130[r4:byte] = 0xD0_8
l0000DC44:
	r15Out = r15
	r16Out = dwLoc78
	r18Out = dwLoc74
	r22Out = dwLoc6C
	r24Out = dwLoc68
	return dwLoc80
fn0000DB40_exit:


word32 fn0000DC70(word32 r3, word32 r4, word32 r5, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r9
fn0000DC70_entry:
l0000DC70:
	word32 r16_17 = 0_i
	word32 r2_21 = r3
	branch r3 != 0_i l0000DC70_ds_t
l0000DC70_ds_t:
l0000DCC0:
	word32 r11_37
	word32 r15_39
	fn0001003C(r2_21, r5, r15, out r11_37, out r15_39)
	word32 r18_34 = fp - 44_i + r16_17
	Mem58[r18_34:byte] = SLICE((word32) Mem56[r11_37 + 0x12BF4:byte], byte, 0)
	word32 r11_60
	fn0000FEDC(r2_21, r5, r15_39, out r11_60, out r15)
	word32 r1_59 = <invalid>
	word32 r3_72 = r16_17 + -1_i
	branch r11_60 != 0 l0000DCC0_ds_t
l0000DCC0_ds_t:
	r2_21 = r11_60
l0000DCBC:
	r16_17 = r3_72
l0000DCC0_ds_f:
l0000DD00:
	word32 r2_78 = r18_34
	word32 r3_80 = r4
l0000DD20:
	branch r2_78 != r1_59 - 1_i l0000DD20_ds_t
l0000DD20_ds_t:
l0000DD10:
	Mem90[r3_80:byte] = SLICE((word32) Mem86[r2_78:byte], byte, 0)
	r2_78 = r2_78 - 1_i
	r3_80 = r3_80 + -1_i
l0000DD20_ds_f:
l0000DD2C:
	Mem98[r4 + r16_17 + 1_i:byte] = 0_8
l0000DC70_ds_f:
l0000DCAC:
	Mem102[r4 + 1_i:byte] = SLICE(r3, byte, 0)
	Mem103[r4:byte] = 0xD0_8
l0000DD38:
	return r15
fn0000DC70_exit:


word32 fn0000DD60(word32 r5, word32 r15, word32 VR, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r5:[0..31] VR:[0..31]
// LiveOut: r1 r14 r15 r16 r2
// Trashed: CV r1 r11 r13 r14 r15 r16 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000DD60_entry:
l0000DD60:
	word32 r14_21 = 0_i
	word32 r15_27 = fn0000EDF4(-15_i, 0x12C6D, r15, VR)
	bool F_37 = r5 >u 0_i
l0000DDDC:
	branch F_37 l0000DDDC_ds_t
l0000DDDC_ds_t:
	word32 r3_40 = r14_21 & 0xF
l0000DD9C:
	branch r3_40 != 0 l0000DD9C_ds_t
l0000DD9C_ds_t:
l0000DDB8:
	r14_21 = r14_21 + -4_i
	r15_27 = fn0000EDF4(-15_i, 0x12C7D, r15_27, VR)
	F_37 = r14_21 <u r5
l0000DD9C_ds_f:
l0000DDA8:
	fn0000EDF4(-15_i, 0x12C73, r15_27, VR)
l0000DDDC_ds_f:
l0000DDE4:
l0000DE00_thunk_fn0000EDF4:
	word32 r15_99 = fn0000EDF4(-15_i, 0x12E0B, r15_27, VR)
	r14Out = dwLoc34
	r15Out = r15_99
	r16Out = dwLoc30
	return dwLoc38
fn0000DD60_exit:


word32 fn0000DE08(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4 r5
// Preserved: r1
fn0000DE08_entry:
l0000DE08:
	word32 r4_4 = r3
l0000DE0C:
	branch (int32) Mem0[r4_4:int8] != 0 l0000DE0C_ds_t
l0000DE0C_ds_t:
	r4_4 = r4_4 + -1_i
l0000DE0C_ds_f:
	word32 r4_11 = r4_4 + -1_i
l0000DE1C:
	return r4_11 - 1_i - r3
fn0000DE08_exit:


void fn0000DE28(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r5 r6 r7
// Preserved: r1
fn0000DE28_entry:
l0000DE28:
	word32 r5_15 = 0_i
l0000DE2C:
	word32 r6_12 = (int32) Mem11[r4 + r5_15:int8]
	Mem13[r3 + r5_15:byte] = SLICE(r6_12, byte, 0)
	branch r6_12 != 0 l0000DE2C_ds_t
l0000DE2C_ds_t:
	r5_15 = r5_15 + -1_i
l0000DE2C_ds_f:
l0000DE48:
	return
fn0000DE28_exit:


void fn0000DE50(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r6 r7 r8
// Preserved:
fn0000DE50_entry:
l0000DE50:
	word32 r6_11 = r3
	branch !(r5 == 0) l0000DE50_ds_t
l0000DE50_ds_t:
l0000DE6C:
	word32 r7_13 = (int32) Mem4[r6_11:int8]
	branch r7_13 != 0 l0000DE6C_ds_t
l0000DE6C_ds_t:
	r6_11 = r6_11 + -1_i
l0000DE6C_ds_f:
	word32 r6_17 = r6_11 + -1_i
l0000DE7C:
	word32 r6_19 = r6_17 - 1_i
	word32 r8_22 = r4 + r7_13
l0000DEA8:
	word32 r8_26 = (int32) Mem25[r8_22:int8]
	branch r8_26 != 0 l0000DEA8_ds_t
l0000DEA8_ds_t:
	Mem29[r6_19:byte] = SLICE(r8_26, byte, 0)
l0000DE88:
	r7_13 = r7_13 + -1_i
	branch r5 != r7_13 l0000DE88_ds_t
l0000DE88_ds_t:
	r6_19 = r6_19 + -1_i
l0000DEA4:
	r8_22 = r4 + r7_13
l0000DE88_ds_f:
	word32 r6_40 = r6_19 + -1_i
l0000DE98:
	Mem44[r6_40:byte] = 0_8
l0000DEA8_ds_f:
	Mem45[r6_19:byte] = SLICE(r8_26, byte, 0)
l0000DEB8:
l0000DE50_ds_f:
l0000DE64:
l0000DEBC:
	return
fn0000DE50_exit:


word32 fn0000DF10(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r2 r4 r5 r6 r7 r8
// Preserved:
fn0000DF10_entry:
l0000DF10:
	word32 r7_5 = r4 | r3
	word32 r7_40 = r7_5 & 3
	word32 r6_17 = 0_i
	branch (r7_5 & 3) != 0_i l0000DF10_ds_t
l0000DF10_ds_t:
l0000DF48:
	branch r5 != 0 l0000DF48_ds_t
l0000DF48_ds_t:
	word32 r8_18 = r4 + r6_17
l0000DF34:
	Mem25[r3 + r6_17:byte] = SLICE((word32) Mem22[r8_18:byte], byte, 0)
	r6_17 = r6_17 + -1_i
	r5 = r5 - 1_i
l0000DF48_ds_f:
l0000DF54:
l0000DF10_ds_f:
l0000DF2C:
	word32 r6_36 = r5 >>u 2
l0000DF5C:
	bool F_37 = r5 >>u 2 != 0
l0000DF7C:
	branch F_37 l0000DF7C_ds_t
l0000DF7C_ds_t:
	word32 r8_41 = r4 + r7_40
l0000DF64:
	Mem48[r3 + r7_40:word32] = Mem45[r8_41:word32]
	r6_36 = r6_36 - 1_i
	r7_40 = r7_40 + -4_i
	F_37 = r6_36 != 0
l0000DF7C_ds_f:
l0000DF84:
	word32 r5_58 = r5 & 3
	word32 r4_59 = r4 + (r5 & 0xFFFFFFFC)
	word32 r7_60 = r3 + (r5 & 0xFFFFFFFC)
l0000DFB0:
	branch r5_58 != 0 l0000DFB0_ds_t
l0000DFB0_ds_t:
	word32 r11_66 = r4_59 + r6_36
l0000DF9C:
	Mem73[r7_60 + r6_36:byte] = SLICE((word32) Mem70[r11_66:byte], byte, 0)
	r6_36 = r6_36 + -1_i
	r5_58 = r5_58 - 1_i
l0000DFB0_ds_f:
l0000DFBC:
l0000DFC0:
	return dwLoc0C
fn0000DF10_exit:


void fn0000DFCC(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..7] r5:[0..31]
// LiveOut:
// Trashed: CV r11 r5 r6
// Preserved: r1
fn0000DFCC_entry:
l0000DFCC:
	word32 r6_11 = r3
l0000DFE0:
	branch r5 != 0 l0000DFE0_ds_t
l0000DFE0_ds_t:
l0000DFD4:
	Mem9[r6_11:byte] = SLICE(r4, byte, 0)
	r5 = r5 - 1_i
	r6_11 = r6_11 + -1_i
l0000DFE0_ds_f:
l0000DFEC:
	return
fn0000DFCC_exit:


word32 fn0000E110(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r14 r15 r17 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000E110_entry:
l0000E110:
	word32 r3_35
	word32 r11_14
	word32 r15_20
	word32 r14_96
	Mem29[fn0000BF88(-6_i, r15, out r11_14, out r14_96, out r15_20):word32] = r11_14
	branch fn00009B70() != 1 l0000E110_ds_t
l0000E110_ds_t:
l0000E14C:
	r3_35 = -20_i
l0000E110_ds_f:
l0000E144:
	r3_35 = 0_i
l0000E150:
	Mem42[0x1395C:word32] = r3_35
	word32 r11_50
	word32 r22_97
	Mem67[(fn00009DDC(Mem42[0x1395C:word32], VR, out r11_50, out r22_97) | 0x3960) + 4_i:word32] = r11_50
	word32 r11_69
	Mem75[fn0000B250(-20_i, out r11_69) + 8_i:word32] = r11_69
	Mem80[0x134CC:word32] = 0x4298
	return r15_20
fn0000E110_exit:


word32 fn0000E1AC(word32 r3, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r13 r15 r17 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r9
fn0000E1AC_entry:
l0000E1AC:
	word32 r18_9 = Mem6[r3 + 40_i:word32]
	word32 r2_120 = Mem22[0x134CC:word32]
l0000E1EC:
	word32 r3_27 = r2_120 + -12_i
	branch Mem22[r3_27:word32] >=u r18_9 *s -1000_i l0000E1EC_ds_t
l0000E1EC_ds_t:
l0000E1E8:
	r2_120 = r3_27
l0000E1EC_ds_f:
l0000E200:
	word32 r16_242
	word32 r14_136
	word32 r20_35 = Mem22[r2_120 + 4_i:word32]
	branch r20_35 <=u Mem22[0x13964:word32] l0000E200_ds_t
l0000E200_ds_t:
	r14_136 = 0_i
l0000E200_ds_f:
l0000E21C:
	r16_242 = 0xFFFFFFDC
	word32 r15_59
	word32 r22_61
	branch fn00009C2C(Mem22[0x1395C:word32], r20_35, r15, VR, out r15_59, out r22_61) != 0 l0000E21C_ds_t
l0000E21C_ds_t:
l0000E21C_ds_f:
	word32 r3_72 = r20_35 - r22_61
l0000E240:
	word32 r11_77
	word32 r15_82
	fn0000FEDC(r3_72, -20_i, r15_59, out r11_77, out r15_82)
	word32 r11_96
	fn0000FEDC((r11_77 << 3) + (r11_77 << 5) + -999_i, -1000_i, r15_82, out r11_96, out r15)
	fn0000C768(r11_96)
	word32 r11_119
	word32 r22_462
	r2_120 = fn00009DDC(Mem22[0x1395C:word32], VR, out r11_119, out r22_462)
	branch r11_119 != Mem22[r2_120 + 4_i:word32] l0000E240_ds_t
l0000E240_ds_t:
l0000E240_ds_f:
	r14_136 = r11_119
l0000E280:
	branch r18_9 *s -1000_i == Mem22[0x13960:word32] l0000E280_ds_t
l0000E280_ds_t:
l0000E280_ds_f:
l0000E298:
	word32 r4_146 = Mem22[r2_120 + 8_i:word32]
	branch r4_146 <=u Mem22[0x13968:word32] l0000E298_ds_t
l0000E298_ds_t:
l0000E298_ds_f:
l0000E2AC:
	fn0000B0B8(-20_i, r4_146)
	word32 r11_161
	fn0000B250(-20_i, out r11_161)
	Mem166[0x13968:word32] = r11_161
l0000E2C0:
	word32 r11_190
	r2_120 = fn0000BF88(-6_i, fn0000BE00(-6_i, r18_9 *s -1000_i, r15), out r11_190, out r14_136, out r15)
	word32 r4_206 = Mem205[r2_120 + 8_i:word32]
	branch r4_206 >=u Mem205[0x13968:word32] l0000E2C0_ds_t
l0000E2C0_ds_t:
	Mem209[0x13960:word32] = r11_190
l0000E2C0_ds_f:
	Mem210[0x13960:word32] = r11_190
l0000E2F0:
	fn0000B0B8(-20_i, r4_206)
	word32 r11_223
	r2_120 = fn0000B250(-20_i, out r11_223)
	Mem228[0x13968:word32] = r11_223
l0000E304:
l0000E308:
	word32 r4_234 = Mem232[r2_120 + 4_i:word32]
	branch r4_234 >=u Mem232[0x13964:word32] l0000E308_ds_t
l0000E308_ds_t:
l0000E308_ds_f:
l0000E320:
	r16_242 = 0xFFFFFFDC
	word32 r22_464
	word32 r15_463
	branch fn00009C2C(Mem232[0x1395C:word32], r4_234, r15, VR, out r15_463, out r22_464) != 0 l0000E320_ds_t
l0000E320_ds_t:
l0000E320_ds_f:
l0000E340:
	fn0000C768(-1_i)
	word32 r11_281
	word32 r22_465
	r2_120 = fn00009DDC(Mem232[0x1395C:word32], VR, out r11_281, out r22_465)
	branch r11_281 != Mem232[r2_120 + 4_i:word32] l0000E340_ds_t
l0000E340_ds_t:
l0000E340_ds_f:
	r14_136 = r11_281
l0000E360:
l0000E364:
	branch Mem232[r2_120 + 4_i:word32] == Mem232[0x13964:word32] l0000E364_ds_t
l0000E364_ds_t:
	r16_242 = 0_i
l0000E364_ds_f:
	r16_242 = 0_i
l0000E37C:
	Mem315[0x13964:word32] = r14_136
l0000E380:
	return r16_242
fn0000E1AC_exit:


void fn0000E3A8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000E3A8_entry:
l0000E3A8:
	Mem9[0x1396C:word32] = 0_i
	Mem13[0x13970:word32] = 0_i
	return
fn0000E3A8_exit:


word32 fn0000E4F0(word32 r3, word32 r4, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r9:[0..31]
// LiveOut: r9
// Trashed: CV r3 r4 r5 r9
// Preserved: r1
fn0000E4F0_entry:
l0000E4F0:
	word32 r9_14
	word32 r5_15
	call r3 (retsize: 0;)
		uses: r3:r4,r4:r4,r5:r5_15,r9:dwLoc0C,Stack +0004:r9,Stack +FFFFFFFC:dwLoc0C
		defs: r5:r5_15,r9:r9_14
	return r9_14
fn0000E4F0_exit:


word32 fn0000E50C(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000E50C_entry:
l0000E50C:
	branch Mem6[r3 + 36_i:word32] != 1 l0000E50C_ds_t
l0000E50C_ds_t:
l0000E55C:
	Mem16[r3 + 40_i:word32] = Mem6[0x130E0:word32]
	Mem18[r3 + 44_i:word32] = Mem16[0x130E4:word32]
	Mem20[r3 + 48_i:word32] = Mem18[0x130E8:word32]
l0000E50C_ds_f:
l0000E528:
	fn0000DF10(0x130E0, fn0000DF10(0x13974, r3 + -40_i, -12_i), -12_i)
l0000E580:
	return 0_i
fn0000E50C_exit:


word32 fn0000E590(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r6
// Preserved: r1
fn0000E590_entry:
l0000E590:
	Mem8[0x1375C:word32] = r3
	Mem12[0x13104:word32] = r4
	Mem16[0x13108:word32] = r5
	return 0_i
fn0000E590_exit:


word32 fn0000E5BC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000E5BC_entry:
l0000E5BC:
	return Mem0[0x1375C:word32]
fn0000E5BC_exit:


word32 fn0000E5CC(word32 r15, word32 VR, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r11 r15 r2 r9
// Trashed: CV r1 r11 r13 r14 r15 r16 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000E5CC_entry:
l0000E5CC:
	word32 r2_19 = Mem13[0x13104:word32]
	word32 r15_45 = fn0000EDF4(-15_i, 0x12C90, fn0000EDF4(-15_i, 0x12C82, r15, VR), VR)
	word32 r14_57 = 0_i
	word32 r3_58 = Mem40[0x13108:word32] + Mem40[0x13104:word32]
l0000E644:
	branch r2_19 <u r3_58 l0000E644_ds_t
l0000E644_ds_t:
l0000E638:
	r2_19 = r2_19 + -4_i
	r14_57 = r14_57 + Mem40[r2_19:word32]
l0000E644_ds_f:
l0000E650:
	word32 r15_78 = fn0000EDF4(-15_i, 0x12C9F, r15_45, VR)
	r9Out = dwLoc34
	r11Out = r14_57
	r15Out = r15_78
	return dwLoc40
fn0000E5CC_exit:


void fn0000E6E4(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r9
fn0000E6E4_entry:
l0000E6E4:
	fn0000E96C(0xE678, VR)
	__mtspr(VR, __mfspr(VR) | 4)
	return
fn0000E6E4_exit:


word32 fn0000E718(word32 VR, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  VR:[0..31]
// LiveOut: r1 r11 r2
// Trashed: CV r1 r11 r2 r3 r4
// Preserved:
fn0000E718_entry:
l0000E718:
	word32 r11_9 = __mfspr(VR)
	__mtspr(VR, r11_9 & 0xFFFFFFF9)
	r11Out = r11_9
	return dwLoc0C
fn0000E718_exit:


void fn0000E740(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r4
// Preserved: r1
fn0000E740_entry:
l0000E740:
	__mtspr(VR, r3)
	return
fn0000E740_exit:


void fn0000E758(word32 r3, word32 r4, word32 r5, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r11 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8 VR
// Preserved: r1 r9
fn0000E758_entry:
l0000E758:
	branch r3 != 8 l0000E758_ds_t
l0000E758_ds_t:
l0000E788:
	word32 r2_45 = -2_i
	word32 r15_49 = fn0000EDF4(-15_i, 0x12CE8, fn0000EDF4(-15_i, 0x12CC1, r15, VR), VR)
l0000E7CC:
	r2_45 = r2_45 + -1_i
	r15_49 = fn0000EDF4(-15_i, 0x12CF8, r15_49, VR)
	branch r2_45 != 0x20 l0000E7CC_ds_t
l0000E7CC_ds_t:
l0000E7CC_ds_f:
l0000E7F8:
	fn0000EDF4(-15_i, 0x12D08, r15_49, VR)
l0000E80C:
l0000E758_ds_f:
l0000E774:
l00008C34:
	word32 r3_124 = (fn00008AC0() << 3) + 0x13834
	call Mem113[r3_124:word32] (retsize: 0;)
		uses: r14:dwLoc38,r15:r15,r2:0x13834,r3:Mem113[r3_124 + 4_i:word32],r4:r4,r5:r5,r9:dwLoc34,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc3C,Stack +FFFFFFCC:dwLoc34,VR:VR
	return
fn0000E758_exit:


word32 fn0000E8BC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000E8BC_entry:
l0000E8BC:
	return Mem0[0x1376C:word32]
fn0000E8BC_exit:


void fn0000E904(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  VR:[0..31]
// LiveOut: r1
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r9
// Preserved:
fn0000E904_entry:
l0000E904:
	word32 r11_13 = fn0000C48C(0xE814, 0_i, VR)
	Mem23[0x13768:word32] = r11_13
	branch r11_13 == 0 l0000E904_ds_t
l0000E904_ds_t:
l0000E904_ds_f:
l0000E93C:
	Mem32[0x1376C:word32] = 0_i
	fn0000C588(r11_13, -10_i, 0)
l0000E95C:
	return
fn0000E904_exit:


void fn0000E96C(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r9
// Preserved:
fn0000E96C_entry:
l0000E96C:
l0000E984_thunk_fn0000F8E8:
	fn0000F8E8(0x13770, r3, VR)
	return
fn0000E96C_exit:


void fn0000E98C(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000E98C_exit:
fn0000E98C_entry:
l0000E98C:
	fn0000F89C()
	fn0000AEDC(0xB000)
	word32 r1_9 = <invalid>
	word32 r15_21 = fn0000ADBC(r15, Mem6[r1_9 + 28_i:word32])
	fn0000AEDC(0xB001)
	fn000096F8()
	fn0000AEDC(0xB002)
	fn000087BC()
	fn0000AEDC(0xB003)
	fn00008AF0()
	fn0000AEDC(0xB004)
	fn0000EC18()
	fn0000AEDC(0xB005)
	word32 r15_90 = fn0000EDF4(-15_i, 0x12E02, fn0000ED78(r15_21, VR), VR)
	fn0000AEDC(0xB006)
	word32 r15_104 = fn0000CB40(r15_90, VR)
	fn0000AEDC(0xB007)
	word32 r15_123 = fn0000998C(r15_104, VR)
	fn0000AEDC(0xB008)
	fn000082FC()
	fn0000AEDC(0xB009)
	fn000044D0()
	fn0000AEDC(0xB00A)
	fn0000F194()
	fn0000C32C(VR)
	word32 r15_183 = fn0000E110(r15_123, VR)
	fn0000E3A8()
	fn0000AEDC(0xB00B)
	fn0000E904(VR)
	fn0000AEDC(0xB00C)
	word32 r15_223 = fn0000EDF4(-15_i, 0x12E0D, r15_183, VR)
	word32 r1_205 = <invalid>
	word32 r11_233 = fn0000F250(VR)
	branch r11_233 == 0 l0000E98C_ds_t
l0000E98C_ds_t:
l0000EB14:
	word32 r15_261
	word32 r14_448
	word32 r16_449
	word32 r2_264 = fn0000EC54(fn0000EDF4(-15_i, 0x12E1E, r15_223, VR), VR, out r14_448, out r15_261, out r16_449)
	word32 r15_279 = fn0000EDF4(-15_i, 0x12E2A, r15_261, VR)
	fn0000AEDC(0xB00D)
	Mem295[r1_205:word32] = r2_264
	word32 r15_298 = fn0000EDF4(-15_i, 0x12E38, r15_279, VR)
	fn0000E6E4(VR)
l0000EB64:
	word32 r11_320
	word32 r9_330 = fn0001003C(fn0000E8BC(), -500_i, r15_298, out r11_320, out r15_298)
	branch r11_320 != 0 l0000EB14_ds_t
l0000EB14_ds_t:
l0000EB14_ds_f:
	word32 r2_335 = r11_320
l0000EB84:
	r15_298 = fn0000EDF4(-15_i, 0x12E4C, r15_298, VR)
	fn0000FA38(0x13770, -256_i, r11_320, r9_330)
l0000EBC0:
	Mem366[r1_205 + 4_i:word32] = r2_335
	branch Mem366[r1_205 + 4_i:word32] <= 0x30D3F l0000EBC0_ds_t
l0000EBC0_ds_t:
l0000EBB0:
	Mem372[r1_205 + 4_i:word32] = Mem366[r1_205 + 4_i:word32]
	r2_335 = Mem372[r1_205 + 4_i:word32] + -1_i
l0000EBC0_ds_f:
l0000EBDC:
	Mem380[r1_205 + 4_i:word32] = 0_i
l0000EC00:
	branch !(Mem382[r1_205 + 4_i:word32] <= 9999_i) l0000EC00_ds_t
l0000EC00_ds_t:
l0000EC00_ds_f:
l0000EC10:
l0000EBEC:
	Mem386[r1_205 + 4_i:word32] = Mem382[r1_205 + 4_i:word32]
	Mem390[r1_205 + 4_i:word32] = Mem386[r1_205 + 4_i:word32] + -1_i
l0000E98C_ds_f:
l0000EAB0:
	Mem394[r11_233 + 2_i:byte] = 0x90_8
	Mem395[r11_233 + 1_i:byte] = 0xFE_8
	Mem398[r11_233 + 32_i:word32] = 0_i
	Mem399[r11_233 + 36_i:word32] = 0_i
	Mem402[r11_233 + 3_i:byte] = 0_8
	Mem404[r11_233 + 40_i:word32] = -120_i
	fn0000DE28(r11_233 + -44_i, 0x12E16)
	fn00008428(r11_233, -4000_i)
	Mem427[0x13980:word32] = Mem404[r11_233 + 40_i:word32]
	word32 r9_450
	word32 r14_451
	fn0000F368(r11_233, VR, out r9_450, out r14_451)


void fn0000EC18()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000EC18_entry:
l0000EC18:
	fn00004570(0x4000, 0x43C4)
	word32 r3_23 = Mem6[0x4008:word32]
	word32 r4_27 = r3_23 + Mem6[0x400C:word32]
l0000EC4C_thunk_fn00004570:
	fn00004570(r3_23, r4_27)
	return
fn0000EC18_exit:


word32 fn0000EC54(word32 r15, word32 VR, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r14 r15 r16 r2
// Trashed: CV r11 r13 r14 r15 r16 r17 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn0000EC54_entry:
l0000EC54:
	word32 r14_17
	word32 r15_18
	word32 r16_19
	word32 r2_21 = fn0000DD60(-964_i, r15, VR, out r14_17, out r15_18, out r16_19)
	word32 r1_14 = <invalid>
	branch Mem6[0x4010:word32] != 0 l0000EC54_ds_t
l0000EC54_ds_t:
l0000EC54_ds_f:
l0000EC8C:
	fn0000D76C()
l0000EC98:
	word32 r9_50 = Mem6[r1_14 - 8_i:word32]
l00009220:
	Mem54[r1_14 - 12_i:word32] = r2_21
	Mem56[r1_14 - 8_i:word32] = r9_50
	word32 r2_65 = fn0000DF10(0x1316C, 0x4034, -516_i)
	word32 r3_73 = Mem56[r2_65:word32]
	Mem79[0x13164:word32] = r3_73 & 0x10000000
	Mem83[r2_65:word32] = r3_73 & 0xFFFFFFF
	r14Out = r14_17
	r15Out = r15_18
	r16Out = r16_19
	return dwLoc08
fn0000EC54_exit:


void fn0000ECA8(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r5 r6
// Preserved: r1
fn0000ECA8_entry:
l0000ECA8:
	Mem10[r3:word32] = Mem0[0x4000:word32]
	Mem13[r4:word32] = Mem10[0x4004:word32]
	return
fn0000ECA8_exit:


void fn0000ECC8(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r5 r6
// Preserved: r1
fn0000ECC8_entry:
l0000ECC8:
	Mem10[r3:word32] = Mem0[0x4008:word32]
	Mem13[r4:word32] = Mem10[0x400C:word32]
	return
fn0000ECC8_exit:


word32 fn0000ECE8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000ECE8_entry:
l0000ECE8:
	return Mem0[0x4010:word32]
fn0000ECE8_exit:


word32 fn0000ECF8(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r3 r9
fn0000ECF8_entry:
l0000ECF8:
	word32 r2_30 = fn0000DF10(fp - 44_i, 0x12E71, -17_i)
	branch r4 >= r5 l0000ECF8_ds_t
l0000ECF8_ds_t:
l0000ED54:
	return r2_30
fn0000ECF8_exit:
l0000ECF8_ds_f:
l0000ED44:
	fn0000DE50(r3, fp + 44_i, r5 - r4)


word32 fn0000ED78(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r1 r11 r13 r15 r17 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000ED78_entry:
l0000ED78:
	return fn0000D640(r15, VR)
fn0000ED78_exit:


word32 fn0000EDF4(word32 r3, word32 r4, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r9
fn0000EDF4_entry:
l0000EDF4:
	branch (-240_i >> Mem10[0x13150:word32] + -1_i & r3) == 0 l0000EDF4_ds_t
l0000EDF4_ds_t:
l0000EDF4_ds_f:
	word32 r16_152 = r4
l0000EE40:
	word32 r1_162 = <invalid>
	word32 r22_172 = r11_36
	word32 r11_36
	branch Mem24[fn0000E718(VR, out r11_36) | 0x3154:word32] == 0 l0000EE40_ds_t
l0000EE40_ds_t:
l0000EF4C:
	word32 r6_137 = r1_162 + -60_i
	word32 r2_138 = 0x13984
l0000F0B4:
	word32 r4_52 = (int32) Mem51[r16_152:int8]
	branch r4_52 != 0 l0000F0B4_ds_t
l0000F0B4_ds_t:
l0000EF5C:
	branch r4_52 != 0x25 l0000EF5C_ds_t
l0000EF5C_ds_t:
l0000F0A8:
	Mem56[r2_138:byte] = SLICE(r4_52, byte, 0)
	r2_138 = r2_138 + -1_i
l0000EF5C_ds_f:
l0000EF64:
	word32 r18_169
	r16_152 = r16_152 + -1_i
	word32 r4_60 = (int32) Mem51[r16_152:int8]
	branch (r4_60 - 49_i & 0xFF) >u 8 l0000EF64_ds_t
l0000EF64_ds_t:
	r18_169 = 0_i
l0000EF64_ds_f:
l0000EF80:
	r18_169 = r4_60 - 48_i
	r16_152 = r16_152 + -1_i
	r4_60 = (int32) Mem51[r16_152 + -1_i:int8]
l0000EF8C:
	word32 r24_173
	word32 r5_101
	word32 r3_83
	branch r4_60 == 0x70 l0000EF8C_ds_t
l0000EF8C_ds_t:
l0000EF8C_ds_f:
	bool F_76 = r4_60 > 112_i
l0000EF98:
	branch F_76 l0000EF98_ds_t
l0000EF98_ds_t:
	bool F_77 = r4_60 == 0x75
l0000EFBC:
	branch F_77 l0000EFBC_ds_t
l0000EFBC_ds_t:
l0000F048:
	r24_173 = r6_137 + -4_i
	r3_83 = Mem51[r6_137:word32]
	r5_101 = -10_i
l0000EFBC_ds_f:
	bool F_89 = r4_60 == 0x78
l0000EFC4:
	branch F_89 l0000EFC4_ds_t
l0000EFC4_ds_t:
l0000EFF4:
	r24_173 = r6_137 + -4_i
	r3_83 = Mem51[r6_137:word32]
	r5_101 = -16_i
l0000F004:
	r15 = fn0000DC70(r3_83, r1_162, r5_101, r15)
l0000EFC4_ds_f:
	bool F_118 = r4_60 == 0x73
l0000EFCC:
	branch !F_118 l0000EFCC_ds_t
l0000EFCC_ds_t:
l0000EFCC_ds_f:
l0000EFD4:
	word32 r18_119 = Mem51[r6_137:word32]
l0000F06C:
	fn0000DE28(r2_138, r18_119)
	r6_137 = r6_137 + -4_i
	r2_138 = r2_138 + fn0000DE08(r18_119)
l0000EF98_ds_f:
l0000EFA0:
	branch r4_60 == 0x63 l0000EFA0_ds_t
l0000EFA0_ds_t:
l0000F05C:
	Mem146[r2_138:byte] = Mem51[r6_137:byte]
	r6_137 = r6_137 + -4_i
l0000EFA0_ds_f:
	bool F_147 = r4_60 == 0x64
l0000EFAC:
	branch !F_147 l0000EFAC_ds_t
l0000EFAC_ds_t:
l0000F090:
	Mem150[r2_138:byte] = 0xDB_8
	Mem154[r2_138 + 1_i:byte] = SLICE((word32) Mem150[r16_152:byte], byte, 0)
	r2_138 = r2_138 + -2_i
l0000EFAC_ds_f:
l0000EFB4:
	word32 r3_157 = Mem51[r6_137:word32]
l0000EFDC:
	r2_138 = fn0000DB40(r3_157, r1_162, -10_i, r15, out r15, out r16_152, out r18_169, out r22_172, out r24_173)
	r1_162 = <invalid>
l0000F00C:
	word32 r11_186 = fn0000DE08(r1_162)
	word32 r20_213 = r11_186 + fn0000ECF8(r1_162, r11_186, r18_169)
	fn0000DE28(r2_138, r1_162)
	r2_138 = r2_138 + r20_213
	r6_137 = r24_173
l0000F0B0:
	r16_152 = r16_152 + -1_i
l0000F0B4_ds_f:
l0000F0C4:
	branch (int32) Mem51[r2_138 - 1_i:int8] != 0xA l0000F0C4_ds_t
l0000F0C4_ds_t:
l0000F0E8:
	Mem237[0x13154:word32] = r4_52
l0000F0C4_ds_f:
l0000F0D8:
	Mem242[0x13154:word32] = -1_i
l0000F0F0:
	Mem247[r2_138:byte] = 0_8
	fn0000D8D8(0x13984)
	fn0000E740(r22_172, VR)
l0000F118:
	return r15
fn0000EDF4_exit:
l0000EE40_ds_f:
l0000EE60:
	word32 r11_297 = fn0000E8BC()
	Mem303[r1_162 + 16_i:byte] = 0xA5_8
	Mem304[r1_162 + 21_i:byte] = 0xD2_8
	Mem307[r1_162 + 24_i:byte] = 0xA3_8
	Mem308[r1_162 + 25_i:byte] = 0xE0_8
	Mem313[r1_162 + 26_i:byte] = 0_8
	word32 r20_302 = r11_297 * 2 + (r11_297 << 3)
	word32 r11_316
	word32 r15_321
	fn0000FEDC(r20_302, -1000_i, r15, out r11_316, out r15_321)
	word32 r1_315 = <invalid>
	word32 r11_332
	word32 r15_334
	fn0001003C(r11_316, -10000_i, r15_321, out r11_332, out r15_334)
	word32 r14_330 = r1_315 + -17_i
	word32 r18_346 = r11_332
	word32 r2_347 = -1000_i
l0000EEC0:
	word32 r11_355
	word32 r15_360
	fn0000FEDC(r18_346, r2_347, r15_334, out r11_355, out r15_360)
	Mem370[r14_330:byte] = SLICE(r11_355 + -48_i, byte, 0)
	word32 r11_374
	word32 r15_376
	fn0001003C(r18_346, r2_347, r15_360, out r11_374, out r15_376)
	word32 r11_392
	fn0000FEDC(r2_347, -10_i, r15_376, out r11_392, out r15_334)
	r14_330 = r14_330 + -1_i
	r18_346 = r11_374
	branch r14_330 != r1_315 + -21_i l0000EEC0_ds_t
l0000EEC0_ds_t:
	r2_347 = r11_392
l0000EEC0_ds_f:
l0000EF00:
	word32 r11_412
	word32 r15_414
	fn0001003C(r20_302, -1000_i, r15_334, out r11_412, out r15_414)
	word32 r11_430
	word32 r15_435
	fn0000FEDC(r11_412, -100_i, r15_414, out r11_430, out r15_435)
	word32 r1_429 = <invalid>
	Mem444[r1_429 + 22_i:byte] = SLICE(r11_430 + -48_i, byte, 0)
	word32 r11_447
	word32 r15_449
	fn0001003C(r11_412, -100_i, r15_435, out r11_447, out r15_449)
	word32 r11_464
	word32 r15_621
	fn0000FEDC(r11_447, -10_i, r15_449, out r11_464, out r15_621)
	word32 r1_463 = <invalid>
	Mem479[r1_463 + 23_i:byte] = SLICE(r11_464 + -48_i, byte, 0)
	fn0000D8D8(r1_463 + -16_i)


word32 fn0000F140(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4
// Preserved: r1
fn0000F140_entry:
l0000F140:
	Mem8[0x13150:word32] = r3
	return 0_i
fn0000F140_exit:


word32 fn0000F154(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4 r5
// Preserved: r1
fn0000F154_entry:
l0000F154:
	word32 r11_23
	branch r3 <u Mem0[0x1377C:word32] l0000F154_ds_t
l0000F154_ds_t:
	r11_23 = 0_i
l0000F154_ds_f:
l0000F16C:
	word32 r4_17
	branch r3 <u Mem0[0x13780:word32] l0000F16C_ds_t
l0000F16C_ds_t:
	r4_17 = -1_i
l0000F16C_ds_f:
l0000F184:
	r4_17 = 0
l0000F188:
	r11_23 = r4_17
l0000F18C:
	return r11_23
fn0000F154_exit:


void fn0000F194()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn0000F194_entry:
l0000F194:
	fn0000ECA8(0x13774, 0x13784)
	word32 r3_23 = Mem11[0x13774:word32]
	word32 r4_30 = r3_23 + Mem11[0x13784:word32]
	Mem33[0x13780:word32] = r4_30
	Mem34[0x1377C:word32] = r3_23
	fn0000DFCC(Mem34[0x1377C:word32], 0_i, Mem34[fn00004570(r3_23, r4_30):word32])
	Mem57[0x13A08:word32] = 0_i
	Mem58[0x13A0C:word32] = 0_i
	Mem59[0x13A10:word32] = 0_i
	Mem60[0x13A14:word32] = 0_i
	Mem61[0x13A04:word32] = 0_i
	Mem66[0x13778:word32] = 0_i
	return
fn0000F194_exit:


word32 fn0000F250(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r2 r9
fn0000F250_entry:
l0000F250:
	word32 r11_11
	fn0000E718(VR, out r11_11)
	word32 r2_20 = Mem6[0x13A04:word32]
	branch r2_20 == 0 l0000F250_ds_t
l0000F250_ds_t:
l0000F250_ds_f:
l0000F27C:
	Mem26[0x13A04:word32] = Mem6[0x13A04:word32] - 1_i
	r2_20 = Mem26[(Mem26[0x13A04:word32] + -1_i << 2) + 0x13A04:word32]
	Mem38[(Mem26[0x13A04:word32] + -1_i << 2) + 0x13A04:word32] = 0_i
l0000F2BC:
	fn0000E740(r11_11, VR)
	branch fn0000F154(r2_20) != 0 l0000F2BC_ds_t
l0000F2BC_ds_t:
l0000F334:
	Mem56[r2_20 + 8_i:word32] = 0_i
	Mem57[r2_20 + 12_i:word32] = 0_i
	Mem58[r2_20 + 32_i:word32] = 0_i
	Mem59[r2_20 + 36_i:word32] = 0_i
	Mem61[r2_20 + 1_i:byte] = 0_8
	return r2_20
fn0000F250_exit:
l0000F2BC_ds_f:
l0000F2D8:
	fn00008834(-100_i, VR)
	word32 r3_82 = Mem81[0x1377C:word32]
	word32 r4_83 = Mem81[0x13780:word32]
l0000F320:
	branch r3_82 <u r4_83 l0000F320_ds_t
l0000F320_ds_t:
l0000F2FC:
	branch (word32) Mem81[r3_82:byte] != 0 l0000F2FC_ds_t
l0000F2FC_ds_t:
	r3_82 = r3_82 + -128_i
l0000F2FC_ds_f:
	word32 r3_92 = r3_82 + -128_i
l0000F30C:
	Mem97[r3_92 - 128_i:byte] = 0xFF_8
l0000F320_ds_f:
l0000F32C:
	fn000088FC(0_i, VR)


word32 fn0000F368(word32 r3, word32 VR, ptr32 & r9Out, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r1 r14 r2 r9
// Trashed: CV r1 r11 r14 r2 r3 r4 r5 r6 r9
// Preserved:
fn0000F368_entry:
l0000F368:
	branch fn0000F154(r3) == 0 l0000F368_ds_t
l0000F368_ds_t:
l0000F430:
	r9Out = dwLoc1C
	r14Out = dwLoc20
	return dwLoc24
l0000F368_ds_f:
l0000F38C:
	word32 r11_26
	word32 r2_27 = fn0000E718(VR, out r11_26)
	branch Mem8[0x13A04:word32] >u 3 l0000F38C_ds_t
l0000F38C_ds_t:
l0000F3EC:
	fn00008834(-100_i, VR)
	Mem51[r2_27:byte] = 0_8
	Mem53[r2_27 + 8_i:word32] = 0_i
	Mem54[r2_27 + 12_i:word32] = 0_i
	fn000088FC(0_i, VR)
l0000F38C_ds_f:
l0000F3B0:
	Mem71[r2_27 + 8_i:word32] = 0_i
	Mem72[r2_27 + 12_i:word32] = 0_i
	Mem74[r2_27:byte] = 0xFF_8
	Mem79[(Mem74[0x13A04:word32] + -1_i << 2) + 0x13A04:word32] = r2_27
	Mem82[0x13A04:word32] = Mem79[0x13A04:word32] + -1_i
l0000F41C:
l0000F428_thunk_fn0000E740:
	fn0000E740(r11_26, VR)
	r9Out = r9
	r14Out = r14
	return r2
fn0000F368_exit:


void fn0000F444(word32 r3, word32 r9, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r9:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7 r8
// Preserved: r1 r12 r13 r14 r15 r16 r17 r18 r2 r20 r22 r24 r26 r28 r30 r9
fn0000F444_entry:
l0000F444:
	word32 r16_121
	word32 r2_113
	word32 r11_18
	word32 r2_19 = fn0000E718(VR, out r11_18)
	word32 r4_24 = (word32) Mem10[r3 + 2_i:byte]
	Mem25[r3:byte] = SLICE(r2_19, byte, 0)
	word32 r14_120 = r3
	branch r4_24 == 0x59 l0000F444_ds_t
l0000F444_ds_t:
	r16_121 = r11_18
l0000F75C:
	r2_113 = fn0000A634(r3)
l0000F444_ds_f:
	r16_121 = r11_18
l0000F478:
	word32 r11_193
	branch r4_24 >u 0x59 l0000F478_ds_t
l0000F478_ds_t:
l0000F52C:
	branch r4_24 == 0x61 l0000F52C_ds_t
l0000F52C_ds_t:
	r2_113 = 0_i
l0000F52C_ds_f:
l0000F534:
	branch r4_24 >u 0x61 l0000F534_ds_t
l0000F534_ds_t:
l0000F588:
	branch r4_24 == 0x67 l0000F588_ds_t
l0000F588_ds_t:
l0000F7D0:
	word32 r15_728
	r2_113 = fn0000EC54(r15, VR, out r14_120, out r15_728, out r16_121)
l0000F588_ds_f:
l0000F590:
	branch r4_24 >u 0x67 l0000F590_ds_t
l0000F590_ds_t:
l0000F5B4:
	branch r4_24 == 0x81 l0000F5B4_ds_t
l0000F5B4_ds_t:
l0000F77C:
	r2_113 = fn0000D408(r3, VR)
l0000F5B4_ds_f:
l0000F5BC:
	branch r4_24 == 0x82 l0000F5BC_ds_t
l0000F5BC_ds_t:
l0000F78C:
	r2_113 = fn0000D49C(r3, r15, VR, out r14_120, out r16_121)
l0000F5BC_ds_f:
l0000F5C4:
	branch !(r4_24 == 0x80) l0000F5C4_ds_t
l0000F5C4_ds_t:
l0000F5C4_ds_f:
l0000F5CC:
l0000F76C:
	r2_113 = fn0000D31C(r3, VR, out r14_120, out r16_121)
l0000F590_ds_f:
l0000F598:
	branch r4_24 == 0x62 l0000F598_ds_t
l0000F598_ds_t:
l0000F7AC:
	r2_113 = fn0000D95C(Mem25[r3 + 40_i:word32], r15, out r14_120)
l0000F598_ds_f:
l0000F5A4:
	branch !(r4_24 == 0x64) l0000F5A4_ds_t
l0000F5A4_ds_t:
l0000F7E0:
l0000F5A4_ds_f:
l0000F5AC:
	word32 r3_156 = Mem25[r3 + 40_i:word32]
l0000F7BC:
	r2_113 = fn0000E590(r3_156, Mem25[r3 + 44_i:word32], Mem25[r3 + 48_i:word32])
l0000F534_ds_f:
l0000F540:
	branch r4_24 == 0x5C l0000F540_ds_t
l0000F540_ds_t:
l0000F714:
	r2_113 = fn00009ED0(Mem25[r3 + 40_i:word32], Mem25[r3 + 44_i:word32], VR, out r14_120, out r16_121)
l0000F540_ds_f:
l0000F54C:
	branch r4_24 >u 0x5C l0000F54C_ds_t
l0000F54C_ds_t:
l0000F570:
	branch r4_24 == 0x5D l0000F570_ds_t
l0000F570_ds_t:
l0000F728:
	r11_193 = fn0000A070(Mem25[r3 + 40_i:word32], VR)
	r2_113 = r11_193
l0000F570_ds_f:
l0000F578:
	branch !(r4_24 == 0x60) l0000F578_ds_t
l0000F578_ds_t:
l0000F578_ds_f:
l0000F580:
l0000F79C:
	r2_113 = fn0000F140(Mem25[r3 + 40_i:word32])
l0000F54C_ds_f:
l0000F554:
	branch r4_24 == 0x5A l0000F554_ds_t
l0000F554_ds_t:
l0000F6C0:
	r2_113 = fn00008CA4(0)
l0000F554_ds_f:
l0000F560:
	branch !(r4_24 == 0x5B) l0000F560_ds_t
l0000F560_ds_t:
l0000F560_ds_f:
l0000F568:
l0000F6D0:
	r2_113 = fn00008B90(Mem25[r3 + 40_i:word32])
l0000F478_ds_f:
l0000F484:
	branch r4_24 == 0x30 l0000F484_ds_t
l0000F484_ds_t:
l0000F5F4:
	r2_113 = fn0000E1AC(r3, r15, VR)
l0000F484_ds_f:
l0000F490:
	branch r4_24 >u 0x30 l0000F490_ds_t
l0000F490_ds_t:
l0000F4E0:
	branch r4_24 == 0x53 l0000F4E0_ds_t
l0000F4E0_ds_t:
l0000F6E0:
	r2_113 = fn0000A364(r3, VR, out r14_120)
l0000F4E0_ds_f:
l0000F4E8:
	branch r4_24 >u 0x53 l0000F4E8_ds_t
l0000F4E8_ds_t:
l0000F50C:
	branch r4_24 == 0x55 l0000F50C_ds_t
l0000F50C_ds_t:
l0000F6F0:
	word32 r15_725
	word32 r22_726
	r2_113 = fn00009C2C(Mem25[r3 + 40_i:word32], Mem25[r3 + 44_i:word32], r15, VR, out r15_725, out r22_726)
l0000F50C_ds_f:
l0000F514:
	branch r4_24 <u 0x55 l0000F514_ds_t
l0000F514_ds_t:
l0000F74C:
	r2_113 = fn0000A5D0(r3)
l0000F514_ds_f:
l0000F51C:
	branch !(r4_24 == 0x56) l0000F51C_ds_t
l0000F51C_ds_t:
l0000F51C_ds_f:
l0000F524:
l0000F704:
	word32 r22_727
	fn00009DDC(Mem25[r3 + 40_i:word32], VR, out r11_193, out r22_727)
	r2_113 = r11_193
l0000F734:
	branch r11_193 < 0_i l0000F734_ds_t
l0000F734_ds_t:
l0000F734_ds_f:
l0000F740:
	Mem329[r3 + 44_i:word32] = r11_193
	r2_113 = 0_i
l0000F4E8_ds_f:
l0000F4F0:
	branch r4_24 == 0x51 l0000F4F0_ds_t
l0000F4F0_ds_t:
l0000F698:
	r2_113 = fn00008B78(0_i)
l0000F4F0_ds_f:
l0000F4FC:
	branch !(r4_24 == 0x52) l0000F4FC_ds_t
l0000F4FC_ds_t:
l0000F4FC_ds_f:
l0000F504:
l0000F6A8:
	fn00008CA4(0_i)
	r2_113 = fn00008B60(0_i)
l0000F490_ds_f:
l0000F498:
	branch r4_24 == 0x20 l0000F498_ds_t
l0000F498_ds_t:
l0000F688:
	r2_113 = fn0000E50C(r3)
l0000F498_ds_f:
l0000F4A4:
	branch r4_24 >u 0x20 l0000F4A4_ds_t
l0000F4A4_ds_t:
l0000F4C8:
	branch r4_24 == 0x22 l0000F4C8_ds_t
l0000F4C8_ds_t:
l0000F5D4:
	r2_113 = fn00012214(r3, r9, r15, VR, out r14_120)
l0000F4C8_ds_f:
l0000F4D0:
	branch !(r4_24 == 0x24) l0000F4D0_ds_t
l0000F4D0_ds_t:
l0000F4D0_ds_f:
l0000F4D8:
l0000F5E4:
	r2_113 = fn000122B8(r3, r15, VR)
l0000F4A4_ds_f:
l0000F4AC:
	branch r4_24 == 0x16 l0000F4AC_ds_t
l0000F4AC_ds_t:
l0000F604:
	branch Mem25[0x13778:word32] == 3 l0000F604_ds_t
l0000F604_ds_t:
l0000F660:
	fn0000AEDC(0xF3F30000)
	r2_113 = fn00010570(r3, r9, r15, VR)
l0000F7F8:
l0000F7FC:
	Mem539[r14_120 + 3_i:byte] = SLICE(r2_113, byte, 0)
	Mem541[r14_120:byte] = 0xFB_8
	branch ((word32) Mem541[r14_120 + 1_i:byte] & 3) == 0 l0000F7F8_ds_t
l0000F7F8_ds_t:
l0000F820:
	branch (word32) Mem541[r14_120 + 1_i:byte] != 0 l0000F820_ds_t
l0000F820_ds_t:
l0000F820_ds_f:
	bool F_549 = r2_113 == 0
l0000F830:
	branch F_549 l0000F830_ds_t
l0000F830_ds_t:
l0000F848:
	word32 r14_722
	word32 r9_721
	fn0000F368(r14_120, VR, out r9_721, out r14_722)
l0000F830_ds_f:
l0000F838:
	word32 r9_723
	word32 r14_724
	fn00008574(r14_120, -4000_i, out r9_723, out r14_724, out r16_121)
l0000F850:
	fn0000E740(r16_121, VR)
	return
fn0000F444_exit:
l0000F7F8_ds_f:
l0000F818:
	word32 r9_716
	word32 r16_718
	word32 r14_717
	fn00008574(r14_120, -4000_i, out r9_716, out r14_717, out r16_718)
l0000F604_ds_f:
l0000F61C:
	Mem459[0x13778:word32] = -3_i
	fn0000DF10(0x100B8, Mem459[0x13980:word32] + 0x100B8, 0x23BE)
	fn0000FA94()
	word32 r14_719
	word32 r15_720
	fn0000C8A0(-1000_i, r15, out r14_719, out r15_720)
l0000F4AC_ds_f:
l0000F4B8:
	branch !(r4_24 == 0x19) l0000F4B8_ds_t
l0000F4B8_ds_t:
l0000F7E4:
	word32 r16_715
	word32 r15_714
	word32 r14_713
	fn0000DD60(-128_i, r15, VR, out r14_713, out r15_714, out r16_715)
l0000F4B8_ds_f:
l0000F4C0:
l0000F678:
	fn00012320(r15, VR)


word32 fn0000F874(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4
// Preserved: r1
fn0000F874_entry:
l0000F874:
	return r3 + Mem0[0x13774:word32]
fn0000F874_exit:


word32 fn0000F888(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4
// Preserved: r1
fn0000F888_entry:
l0000F888:
	return r3 - Mem0[0x13774:word32]
fn0000F888_exit:


void fn0000F89C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r1
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000F89C_entry:
l0000F89C:
	Mem9[0x13788:word32] = 0_i
	Mem10[0x13794:word32] = 0_i
	Mem11[0x137A0:word32] = 0_i
	Mem12[0x137AC:word32] = 0_i
	Mem13[0x137B8:word32] = 0_i
	Mem14[0x137C4:word32] = 0_i
	Mem15[0x137D0:word32] = 0_i
	Mem16[0x137DC:word32] = 0_i
	return
fn0000F89C_exit:


void fn0000F8E8(word32 r3, word32 r4, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r14 r16 r2 r9
fn0000F8E8_entry:
l0000F8E8:
	word32 r11_28
	word32 r2_34 = fn0000E718(VR, out r11_28) | 0x3788
	word32 r5_36 = -1_i
l0000F918:
	word32 r2_50
	branch Mem15[r2_34:word32] != 0 l0000F8E8_ds_t
l0000F8E8_ds_t:
	r5_36 = r5_36 + -1_i
l0000F950:
	branch r5_36 != 9 l0000F950_ds_t
l0000F950_ds_t:
	r2_34 = r2_34 + -12_i
l0000F950_ds_f:
l0000F95C:
	r2_50 = 0_i
l0000F8E8_ds_f:
	word32 r5_52 = r5_36 + 0_i
l0000F928:
	r2_50 = ((r5_52 - 1_i) * 2 + (r5_52 - 1_i) << 2) + 0x13788
	Mem63[r2_50:word32] = -1_i
l0000F960:
	fn0000E740(r11_28, VR)
	branch r2_50 == 0 l0000F960_ds_t
l0000F960_ds_t:
l0000F960_ds_f:
l0000F974:
	word32 r3_80 = Mem79[r3:word32]
	Mem83[r2_50 + 4_i:word32] = r4
	Mem84[r2_50 + 8_i:word32] = r3_80
	Mem85[r3:word32] = r2_50
l0000F988:
	return
fn0000F8E8_exit:


void fn0000FA38(word32 r3, word32 r4, word32 r5, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r14 r16 r2 r9
fn0000FA38_entry:
l0000FA38:
	word32 r16_12 = r4
	word32 r14_16 = r5
	word32 r2_18 = Mem10[r3:word32]
l0000FA6C:
	branch r2_18 != 0 l0000FA6C_ds_t
l0000FA6C_ds_t:
l0000FA5C:
	word32 r2_31
	call Mem10[r2_18 + 4_i:word32] (retsize: 0;)
		uses: r14:r14_25,r16:r16_21,r2:r2_19,r3:r16_21,r4:r14_25,r5:r5_28,r9:r9_27
		defs: r14:r14_32,r16:r16_33,r2:r2_31,r5:r5_36,r9:r9_34
	r2_18 = Mem10[r2_31 + 8_i:word32]
l0000FA6C_ds_f:
l0000FA78:
	return
fn0000FA38_exit:


void fn0000FA94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV
// Preserved: r1 r3 r4 r5 r9
fn0000FA94_entry:
l0000FA94:
	__msync()
	__csync()
	word32 r4_12 = 0_i
l0000FAB8:
	__mtspr(0x2002_u, r4_12)
	branch r4_12 != -4096_i l0000FAB8_ds_t
l0000FAB8_ds_t:
	r4_12 = r4_12 + -16_i
l0000FAB8_ds_f:
l0000FAC8:
	__psync()
	return
fn0000FA94_exit:


word32 fn0000FEDC(word32 r3, word32 r4, word32 r15, ptr32 & r11Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r1 r11 r15 r7
// Trashed: CV r1 r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r9
fn0000FEDC_entry:
l0000FEDC:
	word32 r7_123
	word32 r11_130 = 0_i
	word32 r5_10 = r3
	branch !(r4 != 0_i) l0000FEDC_ds_t
l0000FEDC_ds_t:
	r7_123 = 0_i
l0000FEDC_ds_f:
	r7_123 = 0_i
l0000FEFC:
	branch r4 >u r3 l0000FEFC_ds_t
l0000FEFC_ds_t:
l0000FFC8:
	r7_123 = r3
l0000FEFC_ds_f:
	bool F_21 = r4 == r3
l0000FF08:
	branch F_21 l0000FF08_ds_t
l0000FF08_ds_t:
l0000FFC0:
	r11_130 = -1_i
l0000FF08_ds_f:
l0000FF10:
	word32 r13_26
	branch !(r4 >u 0_i) l0000FF10_ds_t
l0000FF10_ds_t:
	r13_26 = -32_i
l0000FF10_ds_f:
	r13_26 = -32_i
l0000FF18:
l0000FF20:
	r7_123 = r7_123 << 1 | (r5_10 & 0x80000000) >>u 0x1F
	r15 = r5_10
	r13_26 = r13_26 + 0xFFFFFFFF
	branch r7_123 <u r4 l0000FF20_ds_t
l0000FF20_ds_t:
	r5_10 = r5_10 << 1
l0000FF20_ds_f:
l0000FF44:
	r7_123 = r7_123 >>u 1
	word32 r13_52 = r13_26 + -1_i
	word32 r9_53 = 0_i
	branch !(r13_52 >u 0_i) l0000FF44_ds_t
l0000FF44_ds_t:
l0000FF44_ds_f:
	word32 r5_60 = r15
l0000FF5C:
	r15 = 0x80000000
l0000FF64:
	word32 r3_80
	r7_123 = r7_123 << 1 | (r5_60 & 0x80000000) >>u 0x1F
	word32 r6_73 = r7_123 - r4
	word32 r4_76 = 0_i
	branch (r6_73 & 0x80000000) >>u 0x1F != 0_i l0000FF5C_ds_t
l0000FF5C_ds_t:
	r3_80 = r11_130 << 1
l0000FF5C_ds_f:
	r3_80 = r11_130 << 1
l0000FF90:
	r4_76 = -1_i
l0000FF94:
	r5_60 = r5_60 << 1
	branch !(r4_76 != 0_i) l0000FF94_ds_t
l0000FF94_ds_t:
	r11_130 = r3_80 | r4_76
l0000FF94_ds_f:
	r11_130 = r3_80 | r4_76
l0000FFA4:
	r7_123 = r6_73
l0000FFA8:
	r9_53 = r9_53 + -1_i
	branch r9_53 <u r13_52 l0000FFA8_ds_t
l0000FFA8_ds_t:
l0000FFA8_ds_f:
l0000FFB8:
l0000FFCC:
	r11Out = r11_130
	r15Out = r15
	return r7_123
fn0000FEDC_exit:


word32 fn0000FFD8(word32 r3, word32 r4, word32 r15, ptr32 & r14Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r11 r14 r15
// Trashed: CV r11 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000FFD8_entry:
l0000FFD8:
	word32 r5_18 = r3
	word32 r14_10 = 0_i
	branch !(r3 < 0) l0000FFD8_ds_t
l0000FFD8_ds_t:
l0000FFD8_ds_f:
l0000FFF8:
	r14_10 = -1_i
	r5_18 = 0 - r3
l00010000:
	branch !(r4 < 0) l00010000_ds_t
l00010000_ds_t:
l00010000_ds_f:
l0001000C:
	r14_10 = r14_10 + -1_i
	r4 = 0 - r4
l00010014:
	word32 r15_41
	word32 r11_36
	fn0000FEDC(r5_18, r4, r15, out r11_36, out r15_41)
	branch !(r14_10 == 1) l00010014_ds_t
l00010014_ds_t:
l00010014_ds_f:
l00010028:
	r11_36 = 0 - r11_36
l0001002C:
	r14Out = dwArg0C
	r15Out = r15_41
	return r11_36
fn0000FFD8_exit:


word32 fn0001003C(word32 r3, word32 r4, word32 r15, ptr32 & r11Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r11 r15 r9
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0001003C_entry:
l0001003C:
	word32 r15_16
	word32 r11_33
	r11Out = fn0000FEDC(r3, r4, r15, out r11_33, out r15_16)
	r15Out = r15_16
	return dwArg04
fn0001003C_exit:


word32 fn0001005C(word32 r3, word32 r4, word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r11 r15
// Trashed: CV r11 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0001005C_entry:
l0001005C:
	word32 r14_12 = 0_i
	branch !(r3 < 0) l0001005C_ds_t
l0001005C_ds_t:
l0001005C_ds_f:
l00010078:
	r14_12 = -1_i
	r3 = 0 - r3
l00010080:
	branch !(r4 < 0) l00010080_ds_t
l00010080_ds_t:
l00010080_ds_f:
l0001008C:
	r4 = 0 - r4
l00010090:
	word32 r11_42
	word32 r11_79
	word32 r15_32
	word32 r7_29 = fn0000FEDC(r3, r4, r15, out r11_79, out r15_32)
	branch !(r14_12 == 1) l00010090_ds_t
l00010090_ds_t:
	r11_42 = r7_29
l00010090_ds_f:
l000100A4:
	r11_42 = 0 - r7_29
l000100A8:
	r15Out = r15_32
	return r11_42
fn0001005C_exit:


void fn000100B8(word32 dwArg08, word32 dwArg20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0008:[0..31] Stack +0020:[0..31]
// LiveOut:
// Trashed: CV r11 r14 r3 r4 r5 r6
// Preserved: r1 r2 r9
fn000100B8_entry:
l000100B8:
	word32 r14_146
	fn0000B610(-4_i, -3_i, dwArg08, out r14_146)
	fn0000C768(-1_i)
	fn0000B0B8(-20_i, -1_i)
	word32 r1_22 = <invalid>
	word32 r14_147
	fn0000B610(-10_i, -3_i, Mem6[r1_22 + 20_i:word32], out r14_147)
	word32 r2_54 = fn0000C768(-1_i)
	word32 r1_53 = <invalid>
	Mem66[r1_53:word32] = Mem6[r2_54 | 0x54:word32] & 0xFFFFF000 | 0x10
	Mem68[r2_54 | 0x54:word32] = Mem66[r1_53:word32]
	fn0000C768(-1_i)
	word32 r1_71 = <invalid>
	word32 r14_148
	fn0000B610(-13_i, -3_i, Mem68[r1_71 + 20_i:word32], out r14_148)
	word32 r2_93 = fn0000C768(-1_i)
	Mem107[r2_93 | 0x58:word32] = Mem68[r2_93 | 0x58:word32] & 0xFF000000
	word32 r14_149
	word32 r2_115 = fn0000B610(-11_i, -23_i, dwArg20, out r14_149)
	Mem131[r2_115:word32] = Mem107[r2_115:word32] & 0xFF0FFFFF | 0xA00000
	return
fn000100B8_exit:


word32 fn000101A8(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r14 r16 r18 r2 r20 r22 r24 r26 r28 r3 r4 r5 r6 r9
// Preserved:
fn000101A8_entry:
l000101A8:
	word32 r2_24 = 0x4358
l000101DC:
	branch fn00009B70() != 0 l000101A8_ds_t
l000101A8_ds_t:
l000101A8_ds_f:
l000101F0:
	Mem36[r2_24:word32] = Mem33[r2_24:word32] << 0x11
l00010200:
	r2_24 = r2_24 + -4_i
	branch r2_24 != 0x43A8 l00010200_ds_t
l00010200_ds_t:
l00010200_ds_f:
l00010214:
	fn0000DFCC(0x13744, 0_i, -23_i)
	word32 r16_226 = r2_24 - 4_i
	word32 r14_148 = 0x13544
	word32 r20_145 = r2_24 - 4_i
	word32 r18_143 = -19_i
l00010258:
	branch (Mem69[0x134D0:word32] >>u r18_143 & 1) == 0 l00010214_ds_t
l00010214_ds_t:
l00010214_ds_f:
l00010270:
	word32 r2_76 = Mem69[0x13938:word32]
l000102D0:
	branch r2_76 <=u Mem78[0x13934:word32] l000102D0_ds_t
l000102D0_ds_t:
l00010278:
	branch (Mem78[r20_145:word32] >>u r2_76 & 1) == 0 l00010278_ds_t
l00010278_ds_t:
l00010278_ds_f:
l00010290:
	Mem92[r2_76 + 0x13744:byte] = 0xFF_8
	branch Mem92[r14_148:word32] == 0 l00010290_ds_t
l00010290_ds_t:
l000102CC:
	r2_76 = r2_76 + -1_i
l00010290_ds_f:
l000102B4:
	word32 r11_104
	word32 r22_108
	word32 r2_105 = fn00009DDC(r2_76, VR, out r11_104, out r22_108)
	Mem119[r22_108:word16] = SLICE(r11_104, word16, 0)
	word32 r15_447
	word32 r22_448
	fn00009C2C(r2_105, Mem119[r14_148:word32], r15, VR, out r15_447, out r22_448)
l000102D0_ds_f:
l000102E0:
	r18_143 = r18_143 - 1_i
	r20_145 = r20_145 - 4_i
	r14_148 = r14_148 - 4_i
	branch r18_143 != 0xFFFFFFFF l000102E0_ds_t
l000102E0_ds_t:
l000102E0_ds_f:
l000102F8:
	word32 r2_163 = -19_i
l00010314:
	branch (Mem258[0x134D4:word32] >>u r2_163 & 1) != 0 l000102F8_ds_t
l000102F8_ds_t:
l000102F8_ds_f:
l0001032C:
	word32 r14_176 = Mem258[0x13938:word32]
l00010370:
	branch r14_176 <=u Mem258[0x13934:word32] l00010370_ds_t
l00010370_ds_t:
l00010334:
	branch (Mem258[r16_226:word32] >>u r14_176 & 1) == 0 l00010334_ds_t
l00010334_ds_t:
l00010334_ds_f:
l0001034C:
	word32 r4_192 = (int32) Mem258[r14_176 + 0x13744:int8]
	branch r4_192 != 0 l0001034C_ds_t
l0001034C_ds_t:
l0001036C:
	r14_176 = r14_176 + -1_i
l0001034C_ds_f:
l00010364:
	word32 r14_449
	word32 r16_450
	fn00009ED0(r14_176, r4_192, VR, out r14_449, out r16_450)
l00010370_ds_f:
l00010380:
	r2_163 = r2_163 - 1_i
	branch r2_163 != 0xFFFFFFFF l00010380_ds_t
l00010380_ds_t:
	r16_226 = r16_226 - 4_i
l00010380_ds_f:
l00010390:
	return dwLoc78
fn000101A8_exit:


word32 fn000103C0(word32 r15, word32 VR, ptr32 & r9Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r18 r2 r20 r9
// Trashed: CV r1 r14 r16 r18 r2 r20 r22 r24 r26 r28 r9
// Preserved: r3 r4
fn000103C0_entry:
l000103C0:
	word32 r14_17 = 0x4358
	word32 r20_30 = 0x134F8
	word32 r22_32 = 0x1371C
	word32 r18_33 = 0x4358
	word32 r16_34 = 0_i
l00010424:
	branch (Mem29[0x134D0:word32] >>u r16_34 & 1) == 0 l000103C0_ds_t
l000103C0_ds_t:
l000103C0_ds_f:
l0001043C:
	branch Mem29[r20_30:word32] == 0 l0001043C_ds_t
l0001043C_ds_t:
l0001043C_ds_f:
l0001044C:
	word32 r2_50 = Mem29[0x13938:word32]
l0001047C:
	branch r2_50 <=u Mem29[0x13934:word32] l0001047C_ds_t
l0001047C_ds_t:
l00010454:
	branch (Mem29[r18_33:word32] >>u r2_50 & 1) == 0 l00010454_ds_t
l00010454_ds_t:
l00010478:
	r2_50 = r2_50 + -1_i
l00010454_ds_f:
l0001046C:
	word32 r15_330
	word32 r22_331
	fn00009C2C(r2_50, (word32) Mem29[r22_32:word16], r15, VR, out r15_330, out r22_331)
l0001047C_ds_f:
l0001048C:
	r16_34 = r16_34 + -1_i
	r20_30 = r20_30 + -4_i
	r18_33 = r18_33 + -4_i
	branch r16_34 != 0x14 l0001048C_ds_t
l0001048C_ds_t:
	r22_32 = r22_32 + -2_i
l0001048C_ds_f:
l000104A4:
	word32 r16_106 = 0_i
l000104C0:
	branch (Mem29[0x134D4:word32] >>u r16_106 & 1) != 0 l000104A4_ds_t
l000104A4_ds_t:
l000104A4_ds_f:
l000104D8:
	word32 r2_119 = Mem29[0x13938:word32]
l00010520:
	branch r2_119 <=u Mem29[0x13934:word32] l00010520_ds_t
l00010520_ds_t:
l000104E0:
	branch (Mem29[r14_17:word32] >>u r2_119 & 1) == 0 l000104E0_ds_t
l000104E0_ds_t:
l000104E0_ds_f:
l000104F8:
	branch (int32) Mem29[r2_119 + 0x13744:int8] != 0 l000104F8_ds_t
l000104F8_ds_t:
l0001051C:
	r2_119 = r2_119 + -1_i
l000104F8_ds_f:
l00010514:
	word32 r16_333
	word32 r14_332
	fn00009ED0(r2_119, -1_i, VR, out r14_332, out r16_333)
l00010520_ds_f:
l00010530:
	r16_106 = r16_106 + -1_i
	branch r16_106 != 0x14 l00010530_ds_t
l00010530_ds_t:
	r14_17 = r14_17 + -4_i
l00010530_ds_f:
l00010540:
	r9Out = dwLoc54
	r18Out = dwLoc6C
	r20Out = dwLoc68
	return dwLoc78
fn000103C0_exit:


word32 fn00010570(word32 r3, word32 r9, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r9:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r12 r13 r15 r17 r20 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r19 r2 r21 r23 r25 r27 r29 r31 r9
fn00010570_entry:
l00010570:
	word32 r11_3031
	fn0000AEDC(0xF3F31000)
	fn0000ECC8(fp - 112_i, fp - 108_i)
	fn0000DF10(fp - 72_i, dwLoc18, -32_i)
	word32 r1_34 = <invalid>
	word32 r4_44 = Mem13[r1_34 + 40_i:word32]
	branch r4_44 <=u 0x447 l00010570_ds_t
l00010570_ds_t:
	r11_3031 = 0xFFFFFFF4
l00010570_ds_f:
l000105C8:
	word32 r2_59 = fn0000DF10(0x134E4, (r4_44 >>u 1) + dwLoc18, -548_i)
	word32 r1_57 = <invalid>
	Mem68[r1_57 + 16_i:word32] = Mem13[r3 + 44_i:word32]
	fn0000AEDC(0xF3F31001)
	word32 r4_71 = Mem68[r2_59 + 16_i:word32]
	word32 r2_73 = Mem68[r2_59 + 12_i:word32]
	word32 r3_75 = r2_73 & r4_71
	Mem77[0x134D0:word32] = r3_75
	Mem82[0x134D4:word32] = r3_75 | r4_71 ^ 0xFFFF | r2_73
	word32 r15_89 = fn0000AC84(r15)
	word32 r11_102
	Mem107[fn0000AF1C(-1_i, out r11_102):word32] = r11_102
	word32 r1_101 = <invalid>
l00010644:
	branch (Mem107[0x1700030:word32] & 0x10000) == 0 l00010644_ds_t
l00010644_ds_t:
l00010644_ds_f:
l0001065C:
	Mem125[r1_101:word32] = Mem107[0x134E4:word32]
	word32 r15_132 = fn0000EDF4(-15_i, 0x12420, r15_89, VR)
	fn0000AEDC(0xF3F32000)
	fn0000AEDC(0xF3F33001)
	fn00008CC8()
	word32 r1_146 = <invalid>
	branch (Mem125[r1_146 + 4_i:word32] & 0x3087F000) == 0 l0001065C_ds_t
l0001065C_ds_t:
l0001065C_ds_f:
l000106B0:
	branch fn00009B70() != 1 l000106B0_ds_t
l000106B0_ds_t:
l000106DC:
l000106E0:
	fn0000E4F0(0x48100C94, r1_146 + -4_i, r9)
	fn0000AEDC(0xF3F33002)
	word32 r9_186
	word32 r2_183 = fn0000875C(out r9_186)
	fn0000897C()
	fn0000AEDC(r2_183 | 0x3003)
	fn00004844()
	fn0000AEDC(r2_183 | 0x3004)
	Mem212[0x13708:word32] = Mem125[0x1F02E18:word32]
	Mem213[0x1F02E18:word32] = 0_i
	word32 r2_217 = fn0000C768(-1_i)
	fn0000AEDC(r2_217 | 0x3005)
	word32 r9_233 = fn0000E4F0(0x48100F2C, 0x134E4, r9_186)
	fn0000AEDC(r2_217 | 0x3006)
	word32 r15_245
	word32 r2_247 = fn00008000(r15_132, out r15_245)
	word32 r1_1091 = <invalid>
	branch Mem213[r2_247 + 100_i:word32] == 0 l000106E0_ds_t
l000106E0_ds_t:
l00010804:
	fn0000AEDC(0xF3F33007)
	word32 r15_266 = fn0000490C(r15_245)
	word32 r14_4493
	word32 r2_283 = fn0000B610(-1_i, -2_i, Mem213[r1_1091 + 20_i:word32], out r14_4493)
	fn0000AEDC(r2_283 | 0x3008)
	fn0000DB28(-1600_i)
	fn0000AEDC(r2_283 | 0x3009)
	branch (Mem213[0x134D0:word32] & 0x10) == 0 l00010804_ds_t
l00010804_ds_t:
l00010860:
	fn0000AEDC(0xF3F33091)
	word32 r14_4495
	fn0000B610(-10_i, -1_i, Mem213[r1_1091 + 20_i:word32], out r14_4495)
	word32 r14_4496
	fn0000B610(-11_i, -23_i, Mem213[r1_1091 + 20_i:word32], out r14_4496)
	word32 r14_4497
	fn0000AEDC(fn0000B610(-13_i, -1_i, Mem213[r1_1091 + 20_i:word32], out r14_4497) | 0x3092)
	branch (Mem213[0x13578:word32] & 1) != 0 l00010860_ds_t
l00010860_ds_t:
l00010860_ds_f:
l000108B4:
	Mem351[0x1C20000:word32] = Mem213[0x1C20000:word32] & 0x7FFFFFFF
l000108D0:
	branch (Mem355[0x13580:word32] & 1) == 0 l000108D0_ds_t
l000108D0_ds_t:
l000108D0_ds_f:
l000108E8:
	word32 r6_367 = Mem355[0x13584:word32]
	Mem368[0x13718:word32] = Mem355[0x1C20000:word32] & 0xFFFC0000
	Mem380[0x13718:word32] = Mem368[0x13718:word32] | r6_367 | Mem368[0x13590:word32] << 0x10 | Mem368[0x1358C:word32] << 8 | Mem368[0x13588:word32] << 4
	Mem382[0x1C20000:word32] = Mem380[0x13718:word32]
l00010944:
	fn0000AEDC(0xF3F33921)
	branch (Mem389[0x13578:word32] & 4) != 0 l00010944_ds_t
l00010944_ds_t:
l00010944_ds_f:
l00010968:
	Mem401[0x1C20008:word32] = Mem389[0x1C20008:word32] & 0x7FFFFFFF
l00010988:
	branch (Mem405[0x13580:word32] & 4) == 0 l00010988_ds_t
l00010988_ds_t:
l00010988_ds_f:
l000109A0:
	word32 r6_418 = Mem405[0x135A4:word32]
	Mem419[0x13718:word32] = Mem405[0x1C20008:word32] & 0xFFF00000
	Mem431[0x13718:word32] = Mem419[0x13718:word32] | r6_418 | Mem419[0x135B0:word32] << 0x12 | Mem419[0x135AC:word32] << 0x10 | Mem419[0x135A8:word32] << 8
	Mem433[0x1C20008:word32] = Mem431[0x13718:word32]
l00010A00:
	fn0000AEDC(0xF3F33922)
	branch (Mem440[0x13578:word32] & 8) != 0 l00010A00_ds_t
l00010A00_ds_t:
l00010A00_ds_f:
l00010A24:
	Mem452[0x1C20010:word32] = Mem440[0x1C20010:word32] & 0x7FFFFFFF
l00010A44:
	branch (Mem456[0x13580:word32] & 8) == 0 l00010A44_ds_t
l00010A44_ds_t:
l00010A44_ds_f:
l00010A5C:
	word32 r6_470 = Mem456[0x135B4:word32]
	Mem471[0x13718:word32] = Mem456[0x1C20010:word32] & 0xFFFF8000
	Mem477[0x13718:word32] = Mem471[0x13718:word32] | r6_470 | Mem471[0x135B8:word32] << 8
	Mem479[0x1C20010:word32] = Mem477[0x13718:word32]
l00010AA4:
	fn0000AEDC(0xF3F33923)
	branch (Mem486[0x13578:word32] & 0x10) != 0 l00010AA4_ds_t
l00010AA4_ds_t:
l00010AA4_ds_f:
l00010AC8:
	Mem498[0x1C20018:word32] = Mem486[0x1C20018:word32] & 0x7FFFFFFF
l00010AE8:
	branch (Mem502[0x13580:word32] & 0x10) == 0 l00010AE8_ds_t
l00010AE8_ds_t:
l00010AE8_ds_f:
l00010B00:
	word32 r6_516 = Mem502[0x135C4:word32]
	Mem517[0x13718:word32] = Mem502[0x1C20018:word32] & 0xFFFF8000
	Mem523[0x13718:word32] = Mem517[0x13718:word32] | r6_516 | Mem517[0x135C8:word32] << 8
	Mem525[0x1C20018:word32] = Mem523[0x13718:word32]
l00010B48:
	fn0000AEDC(0xF3F33924)
	branch (Mem532[0x13578:word32] & 0x20) != 0 l00010B48_ds_t
l00010B48_ds_t:
l00010B48_ds_f:
l00010B6C:
	Mem546[0x1C20020:word32] = Mem532[0x1C20020:word32] & 0x7FFFFFFF
	Mem549[0x1C20020:word32] = Mem546[0x1C20020:word32] & 0xFFEFFFFF
l00010BA0:
	branch (Mem553[0x13580:word32] & 0x20) == 0 l00010BA0_ds_t
l00010BA0_ds_t:
l00010BA0_ds_f:
l00010BB8:
	word32 r6_567 = Mem553[0x135D4:word32]
	Mem568[0x13718:word32] = Mem553[0x1C20020:word32] & 0xFFFFE000
	Mem578[0x13718:word32] = Mem568[0x13718:word32] | r6_567 | Mem568[0x135DC:word32] << 8 | Mem568[0x135D8:word32] << 4
	Mem582[0x1C20020:word32] = Mem578[0x1C20020:word32] & 0xFFEFFFFF
	Mem584[0x1C20020:word32] = Mem582[0x13718:word32]
l00010C20:
	fn0000AEDC(0xF3F33925)
	branch (Mem591[0x13578:word32] & 0x40) != 0 l00010C20_ds_t
l00010C20_ds_t:
l00010C20_ds_f:
l00010C44:
	Mem603[0x1C20028:word32] = Mem591[0x1C20028:word32] & 0x7FFFFFFF
l00010C64:
	branch (Mem607[0x13580:word32] & 0x40) == 0 l00010C64_ds_t
l00010C64_ds_t:
l00010C64_ds_f:
l00010C7C:
	word32 r6_616 = Mem607[0x135E4:word32]
	Mem621[0x13718:word32] = Mem607[0x1C20028:word32] & 0xFFFF0000
	Mem630[0x13718:word32] = Mem621[0x13718:word32] | r6_616 | Mem621[0x135EC:word32] << 8 | Mem621[0x135E8:word32] << 4
	Mem632[0x1C20028:word32] = Mem630[0x13718:word32]
l00010CD0:
	fn0000AEDC(0xF3F33926)
	branch (Mem639[0x13578:word32] & 0x800) != 0 l00010CD0_ds_t
l00010CD0_ds_t:
l00010CD0_ds_f:
l00010CF4:
	Mem651[0x1C2002C:word32] = Mem639[0x1C2002C:word32] & 0x7FFFFFFF
l00010D14:
	branch (Mem655[0x13580:word32] & 0x800) == 0 l00010D14_ds_t
l00010D14_ds_t:
l00010D14_ds_f:
l00010D2C:
	word32 r7_668 = Mem655[0x13634:word32]
	Mem669[0x13718:word32] = Mem655[0x1C2002C:word32] & 0xFFFC0000
	word32 r5_670 = Mem669[0x1363C:word32]
	Mem680[0x13718:word32] = Mem669[0x13718:word32] | r7_668 | r5_670 << 0x10 | r5_670 << 8 | Mem669[0x13638:word32] << 4
	Mem682[0x1C2002C:word32] = Mem680[0x13718:word32]
l00010D88:
	fn0000AEDC(0xF3F33927)
	branch (Mem689[0x13578:word32] & 0x400) != 0 l00010D88_ds_t
l00010D88_ds_t:
l00010D88_ds_f:
l00010DAC:
	Mem701[0x1C20030:word32] = Mem689[0x1C20030:word32] & 0x7FFFFFFF
l00010DCC:
	branch (Mem705[0x13580:word32] & 0x400) == 0 l00010DCC_ds_t
l00010DCC_ds_t:
l00010DCC_ds_f:
l00010DE4:
	word32 r6_719 = Mem705[0x13624:word32]
	Mem720[0x13718:word32] = Mem705[0x1C20030:word32] & 0xFFFF8000
	Mem726[0x13718:word32] = Mem720[0x13718:word32] | r6_719 | Mem720[0x13628:word32] << 8
	Mem728[0x1C20030:word32] = Mem726[0x13718:word32]
l00010E2C:
	fn0000AEDC(0xF3F33928)
	branch (Mem735[0x13578:word32] & 0x80) != 0 l00010E2C_ds_t
l00010E2C_ds_t:
l00010E2C_ds_f:
l00010E50:
	Mem747[0x1C20038:word32] = Mem735[0x1C20038:word32] & 0x7FFFFFFF
l00010E70:
	branch (Mem751[0x13580:word32] & 0x80) == 0 l00010E70_ds_t
l00010E70_ds_t:
l00010E70_ds_f:
l00010E88:
	word32 r6_765 = Mem751[0x135F4:word32]
	Mem766[0x13718:word32] = Mem751[0x1C20038:word32] & 0xFFFF8000
	Mem772[0x13718:word32] = Mem766[0x13718:word32] | r6_765 | Mem766[0x135F8:word32] << 8
	Mem774[0x1C20038:word32] = Mem772[0x13718:word32]
l00010ED0:
	fn0000AEDC(0xF3F33929)
	branch (Mem781[0x13578:word32] & 0x2000) != 0 l00010ED0_ds_t
l00010ED0_ds_t:
l00010ED0_ds_f:
l00010EF4:
	Mem793[0x1C20040:word32] = Mem781[0x1C20040:word32] & 0x7FFFFFFF
l00010F14:
	branch (Mem797[0x13580:word32] & 0x2000) == 0 l00010F14_ds_t
l00010F14_ds_t:
l00010F14_ds_f:
l00010F2C:
	word32 r6_811 = Mem797[0x13654:word32]
	Mem812[0x13718:word32] = Mem797[0x1C20040:word32] & 0xFFFFF000
	Mem821[0x13718:word32] = Mem812[0x13718:word32] | r6_811 | Mem812[0x1365C:word32] << 8 | Mem812[0x13658:word32] << 4
	Mem823[0x1C20040:word32] = Mem821[0x13718:word32]
l00010F80:
	fn0000AEDC(0xF3F3392A)
	branch (Mem830[0x13578:word32] & 0x100) != 0 l00010F80_ds_t
l00010F80_ds_t:
l00010F80_ds_f:
l00010FA4:
	Mem842[0x1C20044:word32] = Mem830[0x1C20044:word32] & 0x7FFFFFFF
l00010FC4:
	branch (Mem846[0x13580:word32] & 0x100) == 0 l00010FC4_ds_t
l00010FC4_ds_t:
l00010FC4_ds_f:
l00010FDC:
	word32 r6_860 = Mem846[0x13604:word32]
	Mem861[0x13718:word32] = Mem846[0x1C20044:word32] & 0xFFFF8000
	Mem867[0x13718:word32] = Mem861[0x13718:word32] | r6_860 | Mem861[0x13608:word32] << 8
	Mem869[0x1C20044:word32] = Mem867[0x13718:word32]
l00011024:
	fn0000AEDC(0xF3F3392B)
	branch (Mem876[0x13578:word32] & 0x200) != 0 l00011024_ds_t
l00011024_ds_t:
l00011024_ds_f:
l00011048:
	Mem888[0x1C20048:word32] = Mem876[0x1C20048:word32] & 0x7FFFFFFF
l00011068:
	branch (Mem892[0x13580:word32] & 0x200) == 0 l00011068_ds_t
l00011068_ds_t:
l00011068_ds_f:
l00011080:
	word32 r6_906 = Mem892[0x13614:word32]
	Mem907[0x13718:word32] = Mem892[0x1C20048:word32] & 0xFFFF8000
	Mem913[0x13718:word32] = Mem907[0x13718:word32] | r6_906 | Mem907[0x13618:word32] << 8
	Mem915[0x1C20048:word32] = Mem913[0x13718:word32]
l000110C8:
	fn0000AEDC(0xF3F3392C)
	branch (Mem922[0x13578:word32] & 0x1000) != 0 l000110C8_ds_t
l000110C8_ds_t:
l000110C8_ds_f:
l000110EC:
	Mem936[0x1C2004C:word32] = Mem922[0x1C2004C:word32] & 0x7FFFFFFF
	Mem939[0x1C2004C:word32] = Mem936[0x1C2004C:word32] & 0xBFFFFFFF
l00011120:
	branch (Mem943[0x13580:word32] & 0x1000) == 0 l00011120_ds_t
l00011120_ds_t:
l00011120_ds_f:
l00011138:
	word32 r6_957 = Mem943[0x13644:word32]
	Mem958[0x13718:word32] = Mem943[0x1C2004C:word32] & 0xFFFF8000
	Mem965[0x13718:word32] = Mem958[0x13718:word32] | r6_957 | Mem958[0x13648:word32] << 8
	Mem969[0x1C2004C:word32] = Mem965[0x1C2004C:word32] & 0xBFFFFFFF
	Mem971[0x1C2004C:word32] = Mem969[0x13718:word32]
l00011194:
	fn0000AEDC(0xF3F33093)
	branch (Mem978[0x13664:word32] & 1) == 0 l00011194_ds_t
l00011194_ds_t:
l000111C0:
	branch (Mem978[0x13664:word32] & 4) == 0 l000111C0_ds_t
l000111C0_ds_t:
l000111E4:
	branch (Mem978[0x13664:word32] & 0x10) == 0 l000111E4_ds_t
l000111E4_ds_t:
l000111E4_ds_f:
l00011200:
	word32 r4_996 = Mem978[0x136B8:word32]
	branch (0 - (r4_996 ^ 3) | r4_996 ^ 3) >= 0_i l00011200_ds_t
l00011200_ds_t:
l00011200_ds_f:
l0001121C:
	branch (0 - (r4_996 ^ 1) | r4_996 ^ 1) < 0_i l0001121C_ds_t
l0001121C_ds_t:
l00011280:
	branch r4_996 != 0xB l00011280_ds_t
l00011280_ds_t:
l000112D4:
l00011280_ds_f:
l00011288:
	word32 r4_1021 = Mem978[0x136C0:word32] << 4 | Mem978[0x136BC:word32] << 6 | Mem978[0x1C20054:word32] & 0xFFFFFF0F
	Mem1024[0x13714:word32] = r4_1021
	Mem1025[0x1C20054:word32] = r4_1021
	word32 r1_1028 = <invalid>
	word32 r14_4501
	fn0000B610(-10_i, Mem1025[fn0000C768(-1_i) + 468_i:word32], Mem1025[r1_1028 + 20_i:word32], out r14_4501)
l0001121C_ds_f:
l00011230:
	word32 r14_4499
	fn0000B610(-10_i, r4_996, Mem978[r1_1091 + 20_i:word32], out r14_4499)
	word32 r2_1092 = fn0000C768(-1_i)
	word32 r3_1107 = Mem978[0x136C0:word32] << 4 | Mem978[r2_1092:word32] & 0xFFFFFFCF
	Mem1110[0x13714:word32] = r3_1107
	Mem1111[r2_1092:word32] = r3_1107
	r1_1091 = <invalid>
l000112D8:
	branch (Mem1115[0x13664:word32] & 0x20) == 0 l000112D8_ds_t
l000112D8_ds_t:
l000112F8:
	branch (Mem1115[0x13664:word32] & 0x40) == 0 l000112F8_ds_t
l000112F8_ds_t:
l000112F8_ds_f:
l00011314:
	word32 r2_1136 = Mem1115[0x136E8:word32] << 8 | Mem1115[0x1C20054:word32] & 0xFFFFFCFF
	Mem1139[0x13714:word32] = r2_1136
	Mem1140[0x1C20054:word32] = r2_1136
l00011340:
	branch (Mem1143[0x13664:word32] & 0x80) == 0 l00011340_ds_t
l00011340_ds_t:
l00011340_ds_f:
l0001135C:
	word32 r14_4502
	word32 r2_1157 = fn0000B610(-13_i, Mem1143[0x136F4:word32], Mem1143[r1_1091 + 20_i:word32], out r14_4502)
	word32 r2_1170 = Mem1143[0x1C20058:word32] & 0xFFFC0000 | Mem1143[r2_1157 + 544_i:word32] | Mem1143[r2_1157 + 540_i:word32] << 0x10
	Mem1173[0x13714:word32] = r2_1170
	Mem1174[0x1C20058:word32] = r2_1170
l000113A0:
	word32 r2_1178 = Mem1177[0x13574:word32]
	branch (r2_1178 & 8) != 0 l000113A0_ds_t
l000113A0_ds_t:
l000113DC:
	branch (r2_1178 & 3) != 0 l000113DC_ds_t
l000113DC_ds_t:
l000113DC_ds_f:
l000113EC:
	Mem1194[r1_1091 + 36_i:word32] = Mem1177[0x1F01444:word32] | 0xA7000000
	Mem1196[0x1F01444:word32] = Mem1194[r1_1091 + 36_i:word32]
	Mem1199[r1_1091 + 36_i:word32] = Mem1196[0x1F01444:word32] | 0xA7000000
	Mem1202[r1_1091 + 36_i:word32] = Mem1199[r1_1091 + 36_i:word32] & 0xFFFFFFFC
	Mem1204[0x1F01444:word32] = Mem1202[r1_1091 + 36_i:word32]
l0001142C:
l000113A0_ds_f:
l000113BC:
	word32 r14_4503
	fn0000B610(-1_i, -2_i, Mem1177[r1_1091 + 20_i:word32], out r14_4503)
	fn0000C768(-1_i)
	fn0000BAC8(r9_233)
l00011430:
	fn0000AEDC(0xF3F3300A)
	branch (Mem1274[0x134D4:word32] & 0x10) != 0 l00011430_ds_t
l00011430_ds_t:
l00011430_ds_f:
l00011454:
	fn0000B950(-11_i)
	fn0000B950(-12_i)
l00011470:
	branch (Mem1274[0x134D4:word32] & 8) != 0 l00011470_ds_t
l00011470_ds_t:
l00011470_ds_f:
l00011488:
	fn0000B950(-15_i)
l00011498:
	branch (Mem1274[0x134D4:word32] & 0x10) != 0 l00011498_ds_t
l00011498_ds_t:
l000114B8:
	fn0000AEDC(0xF3F3300B)
	word32 r2_1403 = fn000101A8(r15_266, VR)
	fn0000AEDC(r2_1403 | 0x300C)
	Mem1422[0x134DC:word32] = 0_i
	fn0000AEDC(r2_1403 | 0x4000)
	word32 r15_1431 = fn0000EDF4(-15_i, 0x1242A, r15_266, VR)
	fn0000AEDC(r2_1403 | 0x5000)
	Mem1447[0x134E0:word32] = 0_i
	word32 r1_1398 = <invalid>
	word32 r2_1448 = 0
l0001151C:
	word32 r3_1457
	branch (Mem1447[r1_1398 + 4_i:word32] & 0x3087F000) == 0 l000114B8_ds_t
l000114B8_ds_t:
	r3_1457 = Mem1447[r1_1398 + 4_i:word32]
l000114B8_ds_f:
l00011534:
	r1_1398 = <invalid>
	branch fn00008C74(0_i) == 0 l00011534_ds_t
l00011534_ds_t:
l00011534_ds_f:
l00011548:
	fn00008CA4(0_i)
	word32 r11_1481
	r2_1448 = fn0000A22C(0x134E0, VR, out r11_1481)
	r1_1398 = <invalid>
	branch r11_1481 == 0 l00011548_ds_t
l00011548_ds_t:
l00011548_ds_f:
l00011568:
	r3_1457 = Mem1447[r1_1398 + 4_i:word32]
l0001156C:
	word32 r3_1555
	word32 r3_1505
	branch (r3_1457 & 0x800000) == 0 l0001156C_ds_t
l0001156C_ds_t:
	r3_1505 = Mem1447[r1_1398 + 4_i:word32]
l0001156C_ds_f:
l00011580:
	word32 r4_1517
	word32 r1_1509 = <invalid>
	branch fn00008C74(-13_i) != 0 l00011580_ds_t
l00011580_ds_t:
	r4_1517 = Mem1447[r1_1509 + 24_i:word32]
l00011580_ds_f:
l00011594:
	word32 r1_1521 = <invalid>
	branch fn00008C74(-20_i) != 0 l00011594_ds_t
l00011594_ds_t:
	r4_1517 = Mem1447[r1_1521 + 24_i:word32]
l00011594_ds_f:
l000115A8:
	r1_1398 = <invalid>
	branch fn00008C74(-21_i) == 0 l000115A8_ds_t
l000115A8_ds_t:
	r3_1505 = Mem1447[r1_1398 + 4_i:word32]
l000115A8_ds_f:
l000115BC:
	r4_1517 = Mem1447[r1_1398 + 24_i:word32]
l000115C0:
	word32 r11_1549
	r2_1448 = fn00009958(-1_i, r4_1517 & 0xFFF, out r11_1549)
	r1_1398 = <invalid>
	branch !(r11_1549 == 0) l000115C0_ds_t
l000115C0_ds_t:
	r3_1555 = 0x800000
l000115C0_ds_f:
l000115D8:
	r3_1505 = Mem1447[r1_1398 + 4_i:word32]
l000115DC:
	word32 r3_1565
	branch (r3_1505 & 0x80000) == 0 l000115DC_ds_t
l000115DC_ds_t:
	r3_1565 = Mem1447[r1_1398 + 4_i:word32]
l000115DC_ds_f:
l000115F0:
	r1_1398 = <invalid>
	branch fn00008C74(-5_i) == 0 l000115F0_ds_t
l000115F0_ds_t:
	r3_1565 = Mem1447[r1_1398 + 4_i:word32]
l000115F0_ds_f:
l00011604:
	fn00008CA4(-5_i)
	branch !(fn000092CC(out r15_1431) != 1) l00011604_ds_t
l00011604_ds_t:
	r3_1555 = 0x80000
l00011604_ds_f:
l00011620:
	r3_1565 = Mem1447[r1_1398 + 4_i:word32]
l00011624:
	word32 r3_1609
	branch (r3_1565 & 0x100000) == 0 l00011624_ds_t
l00011624_ds_t:
	r3_1609 = Mem1447[r1_1398 + 4_i:word32]
l00011624_ds_f:
l00011638:
	r1_1398 = <invalid>
	branch !(fn00008C74(-8_i) == 0) l00011638_ds_t
l00011638_ds_t:
	r3_1555 = 0x100000
l00011638_ds_f:
l0001164C:
	r3_1609 = Mem1447[r1_1398 + 4_i:word32]
l00011650:
	word32 r3_1630
	branch (r3_1609 & 0x200000) == 0 l00011650_ds_t
l00011650_ds_t:
	r3_1630 = Mem1447[r1_1398 + 4_i:word32]
l00011650_ds_f:
l00011664:
	r1_1398 = <invalid>
	branch !(fn00008C74(-9_i) == 0) l00011664_ds_t
l00011664_ds_t:
	r3_1555 = 0x200000
l00011664_ds_f:
l00011678:
	r3_1630 = Mem1447[r1_1398 + 4_i:word32]
l0001167C:
	word32 r3_1651
	branch (r3_1630 & 0x400000) == 0 l0001167C_ds_t
l0001167C_ds_t:
	r3_1651 = Mem1447[r1_1398 + 4_i:word32]
l0001167C_ds_f:
l00011690:
	branch r2_1448 >=u Mem1447[r1_1398 + 20_i:word32] l00011690_ds_t
l00011690_ds_t:
l000116B4:
	r3_1555 = 0x400000
l00011690_ds_f:
l000116A0:
	r2_1448 = fn0000C768(-1_i)
	r1_1398 = <invalid>
	r3_1651 = Mem1447[r1_1398 + 4_i:word32]
l000116BC:
	word32 r3_1681
	branch (r3_1651 & 0x1000000) == 0 l000116BC_ds_t
l000116BC_ds_t:
	r3_1681 = Mem1447[r1_1398 + 4_i:word32]
l000116BC_ds_f:
l000116D0:
	branch fn00008C74(-27_i) != 0 l000116D0_ds_t
l000116D0_ds_t:
	r3_1555 = 0x1000000
l000116D0_ds_f:
l000116E4:
	r1_1398 = <invalid>
	branch !(fn00008C74(-28_i) == 0) l000116E4_ds_t
l000116E4_ds_t:
	r3_1555 = 0x1000000
l000116E4_ds_f:
l000116F8:
	r3_1681 = Mem1447[r1_1398 + 4_i:word32]
l000116FC:
	branch (r3_1681 & 0xA000000) == 0 l000116FC_ds_t
l000116FC_ds_t:
l000116FC_ds_f:
l00011710:
	r1_1398 = <invalid>
	branch fn00008C74(-22_i) == 0 l00011710_ds_t
l00011710_ds_t:
l00011710_ds_f:
l00011724:
	r3_1555 = 0xA000000
l00011728:
	Mem1730[0x134E0:word32] = r3_1555
l00011734:
	fn0000AEDC(0xF3F36000)
	fn0000AEDC(0xF3F37001)
	word32 r18_1762
	word32 r20_1764
	word32 r9_1769
	fn0000AEDC(fn000103C0(r15_1431, VR, out r9_1769, out r18_1762, out r20_1764) | 0x7002)
	branch (Mem1776[0x134D4:word32] & 0x10) != 0 l00011734_ds_t
l00011734_ds_t:
l00011788:
	word32 r1_1786 = <invalid>
	branch (Mem1776[fn0000C768(-1_i):word32] & 0x10) != 0 l00011788_ds_t
l00011788_ds_t:
l000117BC:
	word32 r2_1859
	fn0000AEDC(0xF3F37003)
	word32 r2_1804 = Mem1776[0x13574:word32]
	branch (r2_1804 & 8) != 0 l000117BC_ds_t
l000117BC_ds_t:
l00011808:
	branch (r2_1804 & 3) != 0 l00011808_ds_t
l00011808_ds_t:
l00011808_ds_f:
l00011818:
	Mem1816[r1_1786 + 36_i:word32] = Mem1776[0x1F01444:word32] | 0xA7000000
	Mem1818[0x1F01444:word32] = Mem1816[r1_1786 + 36_i:word32]
	Mem1821[r1_1786 + 36_i:word32] = Mem1818[0x1F01444:word32] | 0xA7000000
	Mem1824[r1_1786 + 36_i:word32] = Mem1821[r1_1786 + 36_i:word32] | 1
	Mem1826[0x1F01444:word32] = Mem1824[r1_1786 + 36_i:word32]
	word32 r2_1830 = fn0000C768(-2_i)
	r1_1786 = <invalid>
	Mem1842[r1_1786 + 36_i:word32] = Mem1826[r2_1830:word32] | 0xA7000000
	Mem1845[r2_1830:word32] = Mem1842[r1_1786 + 36_i:word32]
	Mem1848[r1_1786 + 36_i:word32] = Mem1845[r2_1830:word32] | 0xA7000000
	Mem1851[r1_1786 + 36_i:word32] = Mem1848[r1_1786 + 36_i:word32] & 0xFFF8FFFF
	Mem1854[r1_1786 + 36_i:word32] = Mem1851[r1_1786 + 36_i:word32] | 0x40000
	Mem1856[r2_1830:word32] = Mem1854[r1_1786 + 36_i:word32]
l000118B4:
	r2_1859 = 0x134E4
l000117BC_ds_f:
l000117E4:
	fn0000BB60(r9_1769)
	fn0000C768(-1_i)
	r1_1786 = <invalid>
	word32 r14_4504
	r2_1859 = fn0000B610(-1_i, -3_i, Mem1776[r1_1786 + 20_i:word32], out r14_4504) | 0x34E4
l000118B8:
	branch (Mem1891[r2_1859 + 384_i:word32] & 5) == 0 l000118B8_ds_t
l000118B8_ds_t:
l000118B8_ds_f:
l000118CC:
	word32 r14_4505
	fn0000B610(-4_i, -3_i, Mem1891[r1_1786 + 20_i:word32], out r14_4505)
	fn0000C768(-1_i)
	fn0000B0B8(-20_i, -1_i)
	r1_1786 = <invalid>
l000118F0:
	branch (Mem1891[0x13664:word32] & 0x50) == 0 l000118F0_ds_t
l000118F0_ds_t:
l00011944:
	branch (Mem1891[0x13664:word32] & 0x20) == 0 l00011944_ds_t
l00011944_ds_t:
l00011944_ds_f:
l00011960:
	word32 r14_4507
	fn0000B610(-11_i, -23_i, Mem1891[r1_1786 + 20_i:word32], out r14_4507)
l00011970:
	branch (Mem1891[0x13664:word32] & 0x80) == 0 l00011970_ds_t
l00011970_ds_t:
l00011970_ds_f:
l00011988:
	word32 r14_4508
	fn0000B610(-13_i, -3_i, Mem1891[r1_1786 + 20_i:word32], out r14_4508)
	word32 r2_1986 = fn0000C768(-1_i)
	r1_1786 = <invalid>
	Mem1996[r1_1786 + 36_i:word32] = Mem1891[r2_1986:word32] & 0xFF000000
	Mem1998[r2_1986:word32] = Mem1996[r1_1786 + 36_i:word32]
l000119B8:
	branch (Mem2001[0x13580:word32] & 1) == 0 l000119B8_ds_t
l000119B8_ds_t:
l000119B8_ds_f:
l000119D4:
	Mem2010[0x1C20000:word32] = -4096_i
l000119E4:
	branch (Mem2014[0x1357C:word32] & 1) == 0 l000119E4_ds_t
l000119E4_ds_t:
l000119E4_ds_f:
l000119FC:
	Mem2024[0x1C20000:word32] = Mem2014[0x1C20000:word32] | 0x80000000
l00011A14:
	branch (Mem2028[0x13580:word32] & 4) == 0 l00011A14_ds_t
l00011A14_ds_t:
l00011A14_ds_f:
l00011A2C:
	Mem2038[0x1C20008:word32] = 0x35514
l00011A44:
	branch (Mem2042[0x1357C:word32] & 4) == 0 l00011A44_ds_t
l00011A44_ds_t:
l00011A44_ds_f:
l00011A5C:
	Mem2053[0x1C20008:word32] = Mem2042[0x1C20008:word32] | 0x80000000
l00011A78:
	branch (Mem2057[0x13580:word32] & 8) == 0 l00011A78_ds_t
l00011A78_ds_t:
l00011A78_ds_f:
l00011A90:
	Mem2067[0x1C20010:word32] = 0x3006207
l00011AA8:
	branch (Mem2071[0x1357C:word32] & 8) == 0 l00011AA8_ds_t
l00011AA8_ds_t:
l00011AA8_ds_f:
l00011AC0:
	Mem2082[0x1C20010:word32] = Mem2071[0x1C20010:word32] | 0x80000000
l00011ADC:
	branch (Mem2086[0x13580:word32] & 0x10) == 0 l00011ADC_ds_t
l00011ADC_ds_t:
l00011ADC_ds_f:
l00011AF4:
	Mem2096[0x1C20018:word32] = 0x3006207
l00011B0C:
	branch (Mem2100[0x1357C:word32] & 0x10) == 0 l00011B0C_ds_t
l00011B0C_ds_t:
l00011B0C_ds_f:
l00011B24:
	Mem2111[0x1C20018:word32] = Mem2100[0x1C20018:word32] | 0x80000000
l00011B40:
	branch (Mem2115[0x13580:word32] & 0x20) == 0 l00011B40_ds_t
l00011B40_ds_t:
l00011B40_ds_f:
l00011B58:
	Mem2126[0x1C20020:word32] = -4096_i
	Mem2129[0x1C20020:word32] = Mem2126[0x1C20020:word32] | 0x40000000
l00011B7C:
	branch (Mem2133[0x1357C:word32] & 0x20) == 0 l00011B7C_ds_t
l00011B7C_ds_t:
l00011B7C_ds_f:
l00011B94:
	Mem2145[0x1C20020:word32] = Mem2133[0x1C20020:word32] | 0x80000000
	Mem2148[0x1C20020:word32] = Mem2145[0x1C20020:word32] | 0x40000000
l00011BC0:
	branch (Mem2152[0x13580:word32] & 0x40) == 0 l00011BC0_ds_t
l00011BC0_ds_t:
l00011BC0_ds_f:
l00011BD8:
	Mem2162[0x1C20028:word32] = 0x41811
l00011BF0:
	branch (Mem2166[0x1357C:word32] & 0x40) == 0 l00011BF0_ds_t
l00011BF0_ds_t:
l00011BF0_ds_f:
l00011C08:
	Mem2177[0x1C20028:word32] = Mem2166[0x1C20028:word32] | 0x80000000
l00011C24:
	branch (Mem2181[0x13580:word32] & 0x800) == 0 l00011C24_ds_t
l00011C24_ds_t:
l00011C24_ds_f:
l00011C3C:
	Mem2191[0x1C2002C:word32] = 0x41811
l00011C54:
	branch (Mem2195[0x1357C:word32] & 0x800) == 0 l00011C54_ds_t
l00011C54_ds_t:
l00011C54_ds_f:
l00011C6C:
	Mem2206[0x1C2002C:word32] = Mem2195[0x1C2002C:word32] | 0x80000000
l00011C88:
	branch (Mem2210[0x13580:word32] & 0x400) == 0 l00011C88_ds_t
l00011C88_ds_t:
l00011C88_ds_f:
l00011CA0:
	Mem2220[0x1C20030:word32] = 0x3006207
l00011CB8:
	branch (Mem2224[0x1357C:word32] & 0x400) == 0 l00011CB8_ds_t
l00011CB8_ds_t:
l00011CB8_ds_f:
l00011CD0:
	Mem2235[0x1C20030:word32] = Mem2224[0x1C20030:word32] | 0x80000000
l00011CEC:
	branch (Mem2239[0x13580:word32] & 0x80) == 0 l00011CEC_ds_t
l00011CEC_ds_t:
l00011CEC_ds_f:
l00011D04:
	Mem2249[0x1C20038:word32] = 0x3006207
l00011D1C:
	branch (Mem2253[0x1357C:word32] & 0x80) == 0 l00011D1C_ds_t
l00011D1C_ds_t:
l00011D1C_ds_f:
l00011D34:
	Mem2264[0x1C20038:word32] = Mem2253[0x1C20038:word32] | 0x80000000
l00011D50:
	branch (Mem2268[0x13580:word32] & 0x2000) == 0 l00011D50_ds_t
l00011D50_ds_t:
l00011D50_ds_f:
l00011D68:
	Mem2278[0x1C20040:word32] = -1301_i
l00011D7C:
	branch (Mem2282[0x1357C:word32] & 0x2000) == 0 l00011D7C_ds_t
l00011D7C_ds_t:
l00011D7C_ds_f:
l00011D94:
	Mem2293[0x1C20040:word32] = Mem2282[0x1C20040:word32] | 0x80000000
l00011DB0:
	branch (Mem2297[0x13580:word32] & 0x100) == 0 l00011DB0_ds_t
l00011DB0_ds_t:
l00011DB0_ds_f:
l00011DC8:
	Mem2307[0x1C20044:word32] = 0x3001300
l00011DE0:
	branch (Mem2311[0x1357C:word32] & 0x100) == 0 l00011DE0_ds_t
l00011DE0_ds_t:
l00011DE0_ds_f:
l00011DF8:
	Mem2322[0x1C20044:word32] = Mem2311[0x1C20044:word32] | 0x80000000
l00011E14:
	branch (Mem2326[0x13580:word32] & 0x200) == 0 l00011E14_ds_t
l00011E14_ds_t:
l00011E14_ds_f:
l00011E2C:
	Mem2336[0x1C20048:word32] = 0x3006207
l00011E44:
	branch (Mem2340[0x1357C:word32] & 0x200) == 0 l00011E44_ds_t
l00011E44_ds_t:
l00011E44_ds_f:
l00011E5C:
	Mem2351[0x1C20048:word32] = Mem2340[0x1C20048:word32] | 0x80000000
l00011E78:
	branch (Mem2355[0x13580:word32] & 0x1000) == 0 l00011E78_ds_t
l00011E78_ds_t:
l00011E78_ds_f:
l00011E90:
	Mem2366[0x1C2004C:word32] = -4096_i
	Mem2369[0x1C2004C:word32] = Mem2366[0x1C2004C:word32] | 0x40000000
l00011EB4:
	branch (Mem2373[0x1357C:word32] & 0x1000) == 0 l00011EB4_ds_t
l00011EB4_ds_t:
l00011EB4_ds_f:
l00011ECC:
	Mem2385[0x1C2004C:word32] = Mem2373[0x1C2004C:word32] | 0x80000000
	Mem2388[0x1C2004C:word32] = Mem2385[0x1C2004C:word32] | 0x40000000
l00011EF8:
	branch (Mem2392[0x134D0:word32] & 0x10) == 0 l00011EF8_ds_t
l00011EF8_ds_t:
l00011F18:
	fn0000AEDC(0xF3F37004)
	word32 r15_2461 = fn00004A6C(r15_1431)
	fn0000AEDC(0xF3F37005)
	branch Mem2392[0x13548:word32] == 0 l00011F18_ds_t
l00011F18_ds_t:
l00011F18_ds_f:
l00011F4C:
	Mem2486[0x1C20028:word32] = Mem2392[0x1C20028:word32] & 0x7FFFFFFF
	Mem2491[0x1C20028:word32] = Mem2486[0x1370C:word32] & 0x7FFFFFFF
	word32 r15_2504
	word32 r14_4509
	word32 r2_2495 = fn0000C8A0(-100_i, r15_2461, out r14_4509, out r15_2504)
	Mem2514[r2_2495:word32] = Mem2491[r2_2495:word32] | 0x80000000
	word32 r14_2522
	word32 r15_2528
	Mem2537[fn0000C8A0(-20_i, r15_2504, out r14_2522, out r15_2528):word32] = Mem2514[r14_2522:word32] & 7
	word32 r14_2544
	word32 r15_2550
	Mem2561[fn0000C8A0(-200_i, r15_2528, out r14_2544, out r15_2550):word32] = Mem2537[r14_2544:word32] & 0x3000007
	word32 r15_2574
	word32 r14_4510
	word32 r2_2565 = fn0000C8A0(-20_i, r15_2550, out r14_4510, out r15_2574)
	Mem2584[r2_2565:word32] = Mem2561[r2_2565:word32] | 0x80000000
	word32 r14_2591
	word32 r15_2597
	fn0000C8A0(-10000_i, r15_2574, out r14_2591, out r15_2597)
	r9_1769 = fn00007FAC(r14_2591, r15_2597, r18_1762, r20_1764, out r15_2461)
	branch fn0000E5BC() == 0 l00011F4C_ds_t
l00011F4C_ds_t:
l00011F4C_ds_f:
l00012008:
	word32 r11_2745
	Mem2761[fn0000E5CC(fn00008030(-16_i, -1_i, r15_2461), VR, out r9_1769, out r11_2745, out r15_2461):word32] = r11_2745
	branch r11_2745 == Mem2761[0x1396C:word32] l00012008_ds_t
l00012008_ds_t:
l00012064:
	word32 r15_2772
	word32 r2_2774 = fn00007FD0(r15_2461, out r15_2772)
	fn0000AEDC(r2_2774 | 0x7006)
	fn0000E4F0(0x48100F7C, 0x134E4, r9_1769)
	fn0000AEDC(r2_2774 | 0x7007)
	Mem2841[0x1F02E18:word32] = Mem2836[0x13708:word32]
	word32 r2_2845 = fn0000C768(-1_i)
	fn0000AEDC(r2_2845 | 0x7008)
	fn0000AEDC(r2_2845 | 0x7009)
	word32 r2_2858 = fn00008788()
	fn00008998()
	fn0000AEDC(r2_2858 | 0x700A)
	fn00004978()
	fn0000AEDC(r2_2858 | 0x700B)
	word32 r16_2835 = 0x13970
	word32 r14_2839 = 0x1396C
	word32 r15_2891 = fn0000EDF4(-15_i, 0x12443, r15_2772, VR)
l00012110:
	word32 r11_2902 = fn00008674()
	branch r11_2902 == 0 l00012110_ds_t
l00012110_ds_t:
l00012110_ds_f:
l00012124:
	branch (word32) Mem2913[r11_2902 + 2_i:byte] != 0x11 l00012124_ds_t
l00012124_ds_t:
l00012124_ds_f:
l00012134:
	word32 r4_2923 = Mem2913[r16_2835:word32]
	Mem2924[r11_2902 + 40_i:word32] = Mem2913[0x134E0:word32]
	word32 r3_2927 = r4_2923 ^ Mem2924[r14_2839:word32]
	Mem2928[r11_2902:byte] = 0xFB_8
	Mem2933[r11_2902 + 44_i:word32] = (0 - r3_2927 | r3_2927) >>u 0x1F
l0001215C:
	word32 r9_2949
	word32 r1_2943
	word32 r2_2954
	branch ((word32) Mem2935[r11_2902 + 1_i:byte] & 3) == 0 l0001215C_ds_t
l0001215C_ds_t:
l00012180:
	r1_2943 = <invalid>
	r2_2954 = (word32) Mem2935[fn0000F368(r11_2902, VR, out r9_2949, out r14_2839):byte]
l0001215C_ds_f:
l00012170:
	r1_2943 = <invalid>
	r2_2954 = (word32) Mem2935[fn00008574(r11_2902, -4000_i, out r9_2949, out r14_2839, out r16_2835):byte]
l0001218C:
	branch r2_2954 != 5 l0001218C_ds_t
l0001218C_ds_t:
l0001218C_ds_f:
l00012198:
	fn0000AEDC(0xF3F3700C)
	fn0000E4F0(0x48100DF4, r1_2943 + -4_i, r9_2949)
	fn0000AEDC(0xF3F3700D)
	fn0000AEDC(0xF3F38000)
	word32 r14_4511
	Mem3014[r1_2943:word32] = Mem2935[fn0000B610(-1_i, Mem2935[0x134D8:word32], Mem2935[r1_2943 + 20_i:word32], out r14_4511) | 0x34E4:word32]
	fn0000EDF4(-15_i, 0x12459, r15_2891, VR)
	r11_3031 = 0_i
l000121F8:
	return r11_3031
fn00010570_exit:
l00012008_ds_f:
l00012040:
	fn0000AEDC(0xF1F1900F)
	fn0000EDF4(-15_i, 0x12430, r15_2461, VR)
l0001205C:
l00011EF8_ds_f:
l00011F10:
	fn000100B8(Mem2392[r1_1786 + 8_i:word32], Mem2392[r1_1786 + 32_i:word32])
l000118F0_ds_f:
l00011908:
	word32 r14_4506
	fn0000B610(-10_i, -3_i, Mem1891[r1_1786 + 20_i:word32], out r14_4506)
	word32 r2_3086 = fn0000C768(-1_i)
	word32 r1_3085 = <invalid>
	Mem3097[r1_3085 + 36_i:word32] = Mem1891[r2_3086:word32] & 0xFFFFF000 | 0x10
	Mem3099[r2_3086:word32] = Mem3097[r1_3085 + 36_i:word32]
	fn0000C768(-1_i)
l00011788_ds_f:
l000117AC:
	fn0000BC38(-33_i)
	fn0000C768(-1_i)
l00011734_ds_f:
l00011774:
	fn0000B950(-11_i)
	fn0000B950(-12_i)
l00011498_ds_f:
l000114B0:
	fn0000BC38(-33_i)
l000112D8_ds_f:
l000112F0:
	word32 r14_4500
	fn0000B610(-11_i, Mem1115[0x136CC:word32], Mem1115[r1_1091 + 20_i:word32], out r14_4500)
l000111C0_ds_f:
l000111DC:
	fn0000B0B8(-20_i, Mem978[0x13698:word32])
l00011194_ds_f:
l000111B8:
	word32 r14_4498
	fn0000B610(-4_i, Mem978[0x13668:word32], Mem978[r1_1091 + 20_i:word32], out r14_4498)
l00010804_ds_f:
l00010858:
	fn000100B8(Mem213[r1_1091 + 8_i:word32], Mem213[r1_1091 + 32_i:word32])
l000106E0_ds_f:
l00010788:
	Mem3199[0x1375C:word32] = Mem213[r2_247 + 104_i:word32]
	Mem3203[0x13104:word32] = Mem3199[r2_247 + 108_i:word32]
	Mem3207[0x13108:word32] = Mem3203[r2_247 + 112_i:word32]
	branch fn0000E5BC() == 0 l00010788_ds_t
l00010788_ds_t:
l00010788_ds_f:
l000107C4:
	word32 r11_3213
	word32 r9_4494
	Mem3230[fn0000E5CC(r15_245, VR, out r9_4494, out r11_3213, out r15_245) | 0x396C:word32] = r11_3213
l000107D4:
	Mem3238[0x1370C:word32] = Mem3234[0x1C20028:word32]
	Mem3242[0x13710:word32] = Mem3238[0x1C2015C:word32]
	fn00007E04(r15_245)
l000106B0_ds_f:
l000106C4:
	fn0000E4F0(0x48100FCC, r1_146 + -4_i, r9)
	fn00008B60(0_i)


word32 fn00012214(word32 r3, word32 r9, word32 r15, word32 VR, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r9:[0..31] VR:[0..31]
// LiveOut: r11 r14
// Trashed: CV r1 r11 r12 r13 r14 r15 r17 r2 r20 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00012214_entry:
l00012214:
	word32 r1_18
	word32 r14_10 = Mem8[r3 + 48_i:word32]
	word32 r2_13 = Mem8[r3 + 40_i:word32]
	branch r14_10 != 0 l00012214_ds_t
l00012214_ds_t:
l00012258:
	branch r14_10 != 3 l00012258_ds_t
l00012258_ds_t:
l00012288:
	r1_18 = fp + -24_i
l00012258_ds_f:
l00012264:
	branch r2_13 != 0 l00012264_ds_t
l00012264_ds_t:
l0001227C:
	fn00004C48(0_i, r2_13, r15)
l00012264_ds_f:
l0001226C:
	fn00010570(r3, r9, r15, VR)
	r1_18 = fp + -24_i
l00012214_ds_f:
	word32 r5_60 = Mem8[r3 + 44_i:word32]
l00012238:
	fn00004B44(r14_10, fn000049C0(r5_60, r2_13), r15)
	r1_18 = fp
l0001228C:
	r14Out = Mem8[r1_18 - 8_i:word32]
	return 0_i
fn00012214_exit:


word32 fn000122B8(word32 r3, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r2 r9
// Preserved:
fn000122B8_entry:
l000122B8:
	word32 r2_8 = Mem6[r3 + 40_i:word32]
	branch r2_8 == 0 l000122B8_ds_t
l000122B8_ds_t:
l000122E4:
	fn0000AEDC(0xA101)
	fn0000AADC(r15, VR)
l000122B8_ds_f:
l000122D0:
	branch r2_8 >u 2 l000122D0_ds_t
l000122D0_ds_t:
l00012310:
	return 0xFFFFFFEA
fn000122B8_exit:
l000122D0_ds_f:
l000122DC:
l000122FC:
	fn0000AEDC(0xA102)
	fn0000AA80(r2_8, r15, VR)


void fn00012320(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00012418:
fn00012320_exit:
fn00012320_entry:
l00012320:
	fn0000A664()
	fn00009290()
	fn0000AF04(0x1F00108, -15_i)
	word32 r1_18 = <invalid>
	word32 r15_164 = fn0000AC14(r15, VR, Mem6[r1_18:word32])
l00012350:
	word32 r1_59 = <invalid>
	branch fn00008C74(0_i) == 0 l00012320_ds_t
l00012320_ds_t:
l000123A8:
	branch fn00008C74(-5_i) == 0 l000123A8_ds_t
l000123A8_ds_t:
l000123A8_ds_f:
l000123BC:
	fn00008CA4(-5_i)
	branch fn000092CC(out r15_164) == 1 l000123BC_ds_t
l000123BC_ds_t:
l000123BC_ds_f:
l000123D8:
	branch fn0000A6B0() != 1 l000123D8_ds_t
l000123D8_ds_t:
l000123D8_ds_f:
l00012320_ds_f:
l00012364:
	fn00008CA4(0_i)
	word32 r11_187
	fn0000A22C(r1_59, VR, out r11_187)
	word32 r1_121 = <invalid>
	branch (Mem6[r1_121:word32] & 0x78000) == 0 l00012364_ds_t
l00012364_ds_t:
l000123A0:
	fn0000A300(VR)
l00012364_ds_f:
l00012390:
	fn0000A300(VR)
l000123EC:
	word32 r15_169 = fn0000EDF4(-15_i, 0x12464, r15_164, VR)
	Mem184[0x1F0142C:word32] = Mem6[0x1F0142C:word32] & 0xFFFFFFFE
	fn0000A708(r15_169, VR)


void fn00018000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn00018000_entry:
l00018000:
	word32 r3_8 = Mem0[0x1310C:word32]
	Mem11[r3_8 + 2044_i:word32] = Mem0[0x1C2021C:word32]
	Mem12[r3_8 + 1500_i:word32] = 0x1C20000
	Mem14[r3_8 + 2048_i:word32] = Mem12[0x1C20220:word32]
	Mem16[r3_8 + 2052_i:word32] = Mem14[0x1C20224:word32]
	Mem18[r3_8 + 2056_i:word32] = Mem16[0x1C20228:word32]
	Mem20[r3_8 + 2060_i:word32] = Mem18[0x1C2022C:word32]
	Mem22[r3_8 + 2068_i:word32] = Mem20[0x1C20234:word32]
	Mem24[r3_8 + 2076_i:word32] = Mem22[0x1C2023C:word32]
	Mem26[r3_8 + 2088_i:word32] = Mem24[0x1C20248:word32]
	Mem28[r3_8 + 2096_i:word32] = Mem26[0x1C20250:word32]
	Mem30[r3_8 + 2140_i:word32] = Mem28[0x1C2027C:word32]
	Mem32[r3_8 + 2144_i:word32] = Mem30[0x1C20280:word32]
	Mem34[r3_8 + 2148_i:word32] = Mem32[0x1C20284:word32]
	Mem36[r3_8 + 2152_i:word32] = Mem34[0x1C20288:word32]
	Mem38[r3_8 + 2156_i:word32] = Mem36[0x1C2028C:word32]
	Mem40[r3_8 + 2172_i:word32] = Mem38[0x1C2029C:word32]
	Mem42[r3_8 + 2184_i:word32] = Mem40[0x1C202A8:word32]
	Mem44[r3_8 + 1504_i:word32] = Mem42[0x1C20000:word32]
	Mem46[r3_8 + 1512_i:word32] = Mem44[0x1C20008:word32]
	Mem48[r3_8 + 1520_i:word32] = Mem46[0x1C20010:word32]
	Mem50[r3_8 + 1528_i:word32] = Mem48[0x1C20018:word32]
	Mem52[r3_8 + 1544_i:word32] = Mem50[0x1C20028:word32]
	Mem54[r3_8 + 1572_i:word32] = Mem52[0x1C20044:word32]
	Mem56[r3_8 + 1560_i:word32] = Mem54[0x1C20038:word32]
	Mem58[r3_8 + 1576_i:word32] = Mem56[0x1C20048:word32]
	Mem60[r3_8 + 1584_i:word32] = Mem58[0x1C20050:word32]
	Mem62[r3_8 + 1588_i:word32] = Mem60[0x1C20054:word32]
	Mem64[r3_8 + 1592_i:word32] = Mem62[0x1C20058:word32]
	Mem66[r3_8 + 1596_i:word32] = Mem64[0x1C2005C:word32]
	Mem68[r3_8 + 1600_i:word32] = Mem66[0x1C20060:word32]
	Mem70[r3_8 + 1604_i:word32] = Mem68[0x1C20064:word32]
	Mem72[r3_8 + 1608_i:word32] = Mem70[0x1C20068:word32]
	Mem74[r3_8 + 1612_i:word32] = Mem72[0x1C2006C:word32]
	Mem76[r3_8 + 1616_i:word32] = Mem74[0x1C20070:word32]
	Mem78[r3_8 + 1620_i:word32] = Mem76[0x1C20074:word32]
	Mem80[r3_8 + 1632_i:word32] = Mem78[0x1C20080:word32]
	Mem82[r3_8 + 1640_i:word32] = Mem80[0x1C20088:word32]
	Mem84[r3_8 + 1644_i:word32] = Mem82[0x1C2008C:word32]
	Mem86[r3_8 + 1648_i:word32] = Mem84[0x1C20090:word32]
	Mem88[r3_8 + 1656_i:word32] = Mem86[0x1C20098:word32]
	Mem90[r3_8 + 1660_i:word32] = Mem88[0x1C2009C:word32]
	Mem92[r3_8 + 1664_i:word32] = Mem90[0x1C200A0:word32]
	Mem94[r3_8 + 1668_i:word32] = Mem92[0x1C200A4:word32]
	Mem96[r3_8 + 1680_i:word32] = Mem94[0x1C200B0:word32]
	Mem98[r3_8 + 1684_i:word32] = Mem96[0x1C200B4:word32]
	Mem100[r3_8 + 1688_i:word32] = Mem98[0x1C200B8:word32]
	Mem102[r3_8 + 1696_i:word32] = Mem100[0x1C200C0:word32]
	Mem104[r3_8 + 1708_i:word32] = Mem102[0x1C200CC:word32]
	Mem106[r3_8 + 1760_i:word32] = Mem104[0x1C20100:word32]
	Mem108[r3_8 + 1764_i:word32] = Mem106[0x1C20104:word32]
	Mem110[r3_8 + 1784_i:word32] = Mem108[0x1C20118:word32]
	Mem112[r3_8 + 1792_i:word32] = Mem110[0x1C20120:word32]
	Mem114[r3_8 + 1796_i:word32] = Mem112[0x1C20124:word32]
	Mem116[r3_8 + 1808_i:word32] = Mem114[0x1C20130:word32]
	Mem118[r3_8 + 1812_i:word32] = Mem116[0x1C20134:word32]
	Mem120[r3_8 + 1820_i:word32] = Mem118[0x1C2013C:word32]
	Mem122[r3_8 + 1824_i:word32] = Mem120[0x1C20140:word32]
	Mem124[r3_8 + 1828_i:word32] = Mem122[0x1C20144:word32]
	Mem126[r3_8 + 1840_i:word32] = Mem124[0x1C20150:word32]
	Mem128[r3_8 + 1844_i:word32] = Mem126[0x1C20154:word32]
	Mem130[r3_8 + 1920_i:word32] = Mem128[0x1C201A0:word32]
	Mem132[r3_8 + 2016_i:word32] = Mem130[0x1C20200:word32]
	Mem134[r3_8 + 2020_i:word32] = Mem132[0x1C20204:word32]
	Mem136[r3_8 + 2208_i:word32] = Mem134[0x1C202C0:word32]
	Mem138[r3_8 + 2212_i:word32] = Mem136[0x1C202C4:word32]
	Mem140[r3_8 + 2216_i:word32] = Mem138[0x1C202C8:word32]
	Mem142[r3_8 + 2224_i:word32] = Mem140[0x1C202D0:word32]
	Mem144[r3_8 + 2232_i:word32] = Mem142[0x1C202D8:word32]
	Mem146[r3_8 + 2256_i:word32] = Mem144[0x1C202F0:word32]
	Mem148[r3_8 + 2272_i:word32] = Mem146[0x1C20300:word32]
	Mem150[r3_8 + 2276_i:word32] = Mem148[0x1C20304:word32]
	return
fn00018000_exit:


void fn00018250(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r9:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r9
// Preserved:
fn00018250_entry:
l00018250:
	word32 r4_10 = Mem7[0x1310C:word32]
	word32 r3_12 = Mem7[r4_10 + 1500_i:word32]
	Mem13[r3_12 + 512_i:word32] = Mem7[r4_10 + 2016_i:word32]
	Mem15[r3_12 + 516_i:word32] = Mem13[r4_10 + 2020_i:word32]
	Mem17[r3_12 + 540_i:word32] = Mem15[r4_10 + 2044_i:word32]
	Mem19[r3_12 + 544_i:word32] = Mem17[r4_10 + 2048_i:word32]
	Mem21[r3_12 + 548_i:word32] = Mem19[r4_10 + 2052_i:word32]
	Mem23[r3_12 + 552_i:word32] = Mem21[r4_10 + 2056_i:word32]
	Mem25[r3_12 + 556_i:word32] = Mem23[r4_10 + 2060_i:word32]
	Mem27[r3_12 + 564_i:word32] = Mem25[r4_10 + 2068_i:word32]
	Mem29[r3_12 + 572_i:word32] = Mem27[r4_10 + 2076_i:word32]
	Mem31[r3_12 + 584_i:word32] = Mem29[r4_10 + 2088_i:word32]
	Mem33[r3_12 + 592_i:word32] = Mem31[r4_10 + 2096_i:word32]
	Mem35[r3_12 + 636_i:word32] = Mem33[r4_10 + 2140_i:word32]
	Mem37[r3_12 + 640_i:word32] = Mem35[r4_10 + 2144_i:word32]
	Mem39[r3_12 + 644_i:word32] = Mem37[r4_10 + 2148_i:word32]
	Mem41[r3_12 + 648_i:word32] = Mem39[r4_10 + 2152_i:word32]
	Mem43[r3_12 + 652_i:word32] = Mem41[r4_10 + 2156_i:word32]
	Mem45[r3_12 + 668_i:word32] = Mem43[r4_10 + 2172_i:word32]
	Mem47[r3_12 + 680_i:word32] = Mem45[r4_10 + 2184_i:word32]
	Mem49[r3_12:word32] = Mem47[r4_10 + 1504_i:word32]
	Mem51[r3_12 + 8_i:word32] = Mem49[r4_10 + 1512_i:word32]
	Mem53[r3_12 + 16_i:word32] = Mem51[r4_10 + 1520_i:word32]
	Mem55[r3_12 + 24_i:word32] = Mem53[r4_10 + 1528_i:word32]
	Mem57[r3_12 + 40_i:word32] = Mem55[r4_10 + 1544_i:word32]
	Mem59[r3_12 + 68_i:word32] = Mem57[r4_10 + 1572_i:word32]
	Mem61[r3_12 + 56_i:word32] = Mem59[r4_10 + 1560_i:word32]
	Mem63[r3_12 + 72_i:word32] = Mem61[r4_10 + 1576_i:word32]
	word32 r9_71 = fn00018F10(0xC8A0, -10_i, r9)
	word32 r2_75 = Mem63[Mem63[0x1310C:word32] + 1500_i:word32]
	branch (Mem63[r2_75:word32] >>u 0x1C & 1) == 0 l00018250_ds_t
l00018250_ds_t:
l00018250_ds_f:
l0001836C:
	branch (Mem63[r2_75 + 8_i:word32] >>u 0x1C & 1) == 0 l0001836C_ds_t
l0001836C_ds_t:
l0001836C_ds_f:
l00018384:
	branch (Mem63[r2_75 + 16_i:word32] >>u 0x1C & 1) == 0 l00018384_ds_t
l00018384_ds_t:
l00018384_ds_f:
l0001839C:
	branch (Mem63[r2_75 + 24_i:word32] >>u 0x1C & 1) == 0 l0001839C_ds_t
l0001839C_ds_t:
l0001839C_ds_f:
l000183B4:
	branch (Mem63[r2_75 + 40_i:word32] >>u 0x1C & 1) == 0 l000183B4_ds_t
l000183B4_ds_t:
l000183B4_ds_f:
l000183CC:
	branch (Mem63[r2_75 + 68_i:word32] >>u 0x1C & 1) == 0 l000183CC_ds_t
l000183CC_ds_t:
l000183CC_ds_f:
l000183E4:
	branch (Mem63[r2_75 + 56_i:word32] >>u 0x1C & 1) == 0 l000183E4_ds_t
l000183E4_ds_t:
l000183E4_ds_f:
l000183FC:
l00018400:
l00018404:
	word32 r9_129 = fn00018F10(0xC8A0, -2_i, r9_71)
	word32 r4_134 = Mem63[0x1310C:word32]
	word32 r3_136 = Mem63[r4_134 + 1500_i:word32]
	Mem150[r3_136 + 80_i:word32] = Mem143[r4_134 + 1584_i:word32] & 3 | Mem63[r3_136 + 80_i:word32] & 0xFFFFFFFC
	word32 r9_158 = fn00018F10(0xC8A0, -2_i, r9_129)
	word32 r4_161 = Mem150[0x1310C:word32]
	word32 r3_163 = Mem150[r4_161 + 1500_i:word32]
	word32 r4_174 = Mem170[r4_161 + 1584_i:word32] & 0x30000 | Mem150[r3_163 + 80_i:word32] & 0xFFFCFFFF
	Mem177[r3_163 + 80_i:word32] = r4_174
	word32 r9_185 = fn00018F10(0xC8A0, -2_i, r9_158)
	word32 r3_192 = Mem191[0x1310C:word32]
	Mem200[Mem191[r3_192 + 1500_i:word32] + 80_i:word32] = Mem191[r3_192 + 1584_i:word32] & 0x300 | r4_174 & 0xFFFFFCFF
	word32 r9_208 = fn00018F10(0xC8A0, -2_i, r9_185)
	word32 r4_211 = Mem200[0x1310C:word32]
	word32 r3_213 = Mem200[r4_211 + 1500_i:word32]
	word32 r4_222 = Mem218[r4_211 + 1588_i:word32] & 0x3FF | Mem200[r3_213 + 84_i:word32] & 0xFFFFFC00
	Mem225[r3_213 + 84_i:word32] = r4_222
	word32 r9_233 = fn00018F10(0xC8A0, -2_i, r9_208)
	word32 r3_240 = Mem239[0x1310C:word32]
	Mem248[Mem239[r3_240 + 1500_i:word32] + 84_i:word32] = Mem239[r3_240 + 1588_i:word32] & 0x3000 | r4_222 & 0xFFFFCFFF
	word32 r9_256 = fn00018F10(0xC8A0, -2_i, r9_233)
	word32 r4_259 = Mem248[0x1310C:word32]
	word32 r3_261 = Mem248[r4_259 + 1500_i:word32]
	word32 r4_272 = Mem267[r4_259 + 1592_i:word32] & 0x1FFFF | Mem248[r3_261 + 88_i:word32] & 0xFFFE0000
	Mem275[r3_261 + 88_i:word32] = r4_272
	word32 r9_283 = fn00018F10(0xC8A0, -2_i, r9_256)
	word32 r3_292 = Mem291[0x1310C:word32]
	Mem300[Mem291[r3_292 + 1500_i:word32] + 88_i:word32] = Mem291[r3_292 + 1592_i:word32] & 0x3000000 | r4_272 & 0xFCFFFFFF
	word32 r9_308 = fn00018F10(0xC8A0, -2_i, r9_283)
	word32 r3_311 = Mem300[0x1310C:word32]
	word32 r4_313 = Mem300[r3_311 + 1500_i:word32]
	Mem314[r4_313 + 92_i:word32] = Mem300[r3_311 + 1596_i:word32]
	Mem316[r4_313 + 704_i:word32] = Mem314[r3_311 + 2208_i:word32]
	Mem318[r4_313 + 708_i:word32] = Mem316[r3_311 + 2212_i:word32]
	Mem320[r4_313 + 712_i:word32] = Mem318[r3_311 + 2216_i:word32]
	Mem322[r4_313 + 720_i:word32] = Mem320[r3_311 + 2224_i:word32]
	Mem324[r4_313 + 728_i:word32] = Mem322[r3_311 + 2232_i:word32]
	word32 r9_332 = fn00018F10(0xC8A0, -1_i, r9_308)
	word32 r4_335 = Mem324[0x1310C:word32]
	word32 r3_337 = Mem324[r4_335 + 1500_i:word32]
	Mem338[r3_337 + 116_i:word32] = Mem324[r4_335 + 1620_i:word32]
	Mem340[r3_337 + 128_i:word32] = Mem338[r4_335 + 1632_i:word32]
	Mem342[r3_337 + 136_i:word32] = Mem340[r4_335 + 1640_i:word32]
	Mem344[r3_337 + 140_i:word32] = Mem342[r4_335 + 1644_i:word32]
	Mem346[r3_337 + 144_i:word32] = Mem344[r4_335 + 1648_i:word32]
	Mem348[r3_337 + 152_i:word32] = Mem346[r4_335 + 1656_i:word32]
	Mem350[r3_337 + 156_i:word32] = Mem348[r4_335 + 1660_i:word32]
	Mem352[r3_337 + 160_i:word32] = Mem350[r4_335 + 1664_i:word32]
	Mem354[r3_337 + 164_i:word32] = Mem352[r4_335 + 1668_i:word32]
	Mem356[r3_337 + 176_i:word32] = Mem354[r4_335 + 1680_i:word32]
	Mem358[r3_337 + 180_i:word32] = Mem356[r4_335 + 1684_i:word32]
	Mem360[r3_337 + 184_i:word32] = Mem358[r4_335 + 1688_i:word32]
	Mem362[r3_337 + 192_i:word32] = Mem360[r4_335 + 1696_i:word32]
	Mem364[r3_337 + 204_i:word32] = Mem362[r4_335 + 1708_i:word32]
	Mem366[r4_335 + 1760_i:word32] = Mem364[r3_337 + 256_i:word32]
	Mem368[r3_337 + 260_i:word32] = Mem366[r4_335 + 1764_i:word32]
	Mem370[r3_337 + 280_i:word32] = Mem368[r4_335 + 1784_i:word32]
	Mem372[r3_337 + 288_i:word32] = Mem370[r4_335 + 1792_i:word32]
	Mem374[r3_337 + 292_i:word32] = Mem372[r4_335 + 1796_i:word32]
	Mem376[r3_337 + 304_i:word32] = Mem374[r4_335 + 1808_i:word32]
	Mem378[r3_337 + 308_i:word32] = Mem376[r4_335 + 1812_i:word32]
	Mem380[r3_337 + 316_i:word32] = Mem378[r4_335 + 1820_i:word32]
	Mem382[r3_337 + 320_i:word32] = Mem380[r4_335 + 1824_i:word32]
	Mem384[r3_337 + 324_i:word32] = Mem382[r4_335 + 1828_i:word32]
	Mem386[r3_337 + 336_i:word32] = Mem384[r4_335 + 1840_i:word32]
	Mem388[r3_337 + 340_i:word32] = Mem386[r4_335 + 1844_i:word32]
	Mem390[r3_337 + 416_i:word32] = Mem388[r4_335 + 1920_i:word32]
	word32 r9_398 = fn00018F10(0xC8A0, -1_i, r9_332)
	word32 r4_401 = Mem390[0x1310C:word32]
	word32 r3_403 = Mem390[r4_401 + 1500_i:word32]
	Mem404[r3_403 + 96_i:word32] = Mem390[r4_401 + 1600_i:word32]
	Mem406[r3_403 + 100_i:word32] = Mem404[r4_401 + 1604_i:word32]
	Mem408[r3_403 + 104_i:word32] = Mem406[r4_401 + 1608_i:word32]
	Mem410[r3_403 + 108_i:word32] = Mem408[r4_401 + 1612_i:word32]
	Mem412[r3_403 + 112_i:word32] = Mem410[r4_401 + 1616_i:word32]
	word32 r9_420 = fn00018F10(0xC8A0, -10_i, r9_398)
	word32 r2_423 = Mem412[0x1310C:word32]
	word32 r3_424 = Mem412[r2_423 + 1500_i:word32]
	Mem426[r3_424 + 752_i:word32] = Mem412[r2_423 + 2256_i:word32]
	Mem428[r3_424 + 768_i:word32] = Mem426[r2_423 + 2272_i:word32]
	Mem432[r3_424 + 772_i:word32] = Mem428[r2_423 + 2276_i:word32]
	fn00018F10(0xC768, -1_i, r9_420)
	return
fn00018250_exit:


void fn000187E8(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r4 r5 r6 r7 r8
// Preserved:
fn000187E8_entry:
l000187E8:
	word32 r7_5 = r4 | r3
	word32 r7_40 = r7_5 & 3
	word32 r6_17 = 0_i
	branch (r7_5 & 3) != 0_i l000187E8_ds_t
l000187E8_ds_t:
l00018820:
	branch r5 != 0 l00018820_ds_t
l00018820_ds_t:
	word32 r8_18 = r4 + r6_17
l0001880C:
	Mem25[r3 + r6_17:byte] = SLICE((word32) Mem22[r8_18:byte], byte, 0)
	r6_17 = r6_17 + -1_i
	r5 = r5 - 1_i
l00018820_ds_f:
l0001882C:
l000187E8_ds_f:
l00018804:
	word32 r6_36 = r5 >>u 2
l00018834:
	bool F_37 = r5 >>u 2 != 0
l00018854:
	branch F_37 l00018854_ds_t
l00018854_ds_t:
	word32 r8_41 = r4 + r7_40
l0001883C:
	Mem48[r3 + r7_40:word32] = Mem45[r8_41:word32]
	r6_36 = r6_36 - 1_i
	r7_40 = r7_40 + -4_i
	F_37 = r6_36 != 0
l00018854_ds_f:
l0001885C:
	word32 r5_58 = r5 & 3
	word32 r4_59 = r4 + (r5 & 0xFFFFFFFC)
	word32 r7_60 = r3 + (r5 & 0xFFFFFFFC)
l00018888:
	branch r5_58 != 0 l00018888_ds_t
l00018888_ds_t:
	word32 r11_66 = r4_59 + r6_36
l00018874:
	Mem73[r7_60 + r6_36:byte] = SLICE((word32) Mem70[r11_66:byte], byte, 0)
	r6_36 = r6_36 + -1_i
	r5_58 = r5_58 - 1_i
l00018888_ds_f:
l00018894:
l00018898:
	return
fn000187E8_exit:


void fn000188A4(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..7] r5:[0..31]
// LiveOut:
// Trashed: CV r11 r5 r6
// Preserved: r1
fn000188A4_entry:
l000188A4:
	word32 r6_11 = r3
l000188B8:
	branch r5 != 0 l000188B8_ds_t
l000188B8_ds_t:
l000188AC:
	Mem9[r6_11:byte] = SLICE(r4, byte, 0)
	r5 = r5 - 1_i
	r6_11 = r6_11 + -1_i
l000188B8_ds_f:
l000188C4:
	return
fn000188A4_exit:


void fn000188CC(word32 r3, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: CV r3 r4 r5 r6 r7 r8
// Preserved: r1
fn000188CC_entry:
l000188CC:
	word32 r4_18 = r4 + (r6 << 2) *s (r5 - 1_i)
	word32 r8_11 = 0 - (r6 << 2)
	word32 r3_14 = r3 + ((r5 << 2) - 4_i)
l00018904:
	branch r5 != 0 l00018904_ds_t
l00018904_ds_t:
	r4_18 = r4_18 + r8_11
l000188F0:
	Mem28[r3_14:word32] = Mem25[r4_18 + (r6 << 2):word32]
	r5 = r5 - 1_i
	r3_14 = r3_14 - 4_i
l00018904_ds_f:
l00018910:
	return
fn000188CC_exit:


void fn00018918(word32 r3, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn00018918_entry:
l00018918:
	word32 r8_8 = 0 - (r6 << 2)
	word32 r4_10 = r4 + ((r5 << 2) - 4_i)
	word32 r3_14 = r3 + (r6 << 2) *s (r5 - 1_i)
l00018950:
	branch r5 != 0 l00018950_ds_t
l00018950_ds_t:
	r3_14 = r3_14 + r8_8
l0001893C:
	Mem28[r3_14 + (r6 << 2):word32] = Mem23[r4_10:word32]
	r5 = r5 - 1_i
	r4_10 = r4_10 - 4_i
l00018950_ds_f:
l0001895C:
	return
fn00018918_exit:


void fn00018964(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r9
// Preserved: r5 r6
fn00018964_entry:
l00018964:
	branch (Mem4[r3:word32] & 0x800000) == 0 l00018964_ds_t
l00018964_ds_t:
l00018964_ds_f:
l00018988:
	fn00018C24(-13_i)
	word32 r3_26 = Mem10[r3 + 24_i:word32]
	branch r3_26 == 0 l00018988_ds_t
l00018988_ds_t:
l00018A4C:
	return
fn00018964_exit:
l00018988_ds_f:
l000189A0:
	branch (r3_26 & 2) == 0 l000189A0_ds_t
l000189A0_ds_t:
l000189A0_ds_f:
l000189B0:
	Mem43[0x1F00CC4:word32] = Mem10[0x1F00CC4:word32] | 0x80000
l000189C4:
	branch (Mem45[r3 + 24_i:word32] & 0x20) == 0 l000189C4_ds_t
l000189C4_ds_t:
l000189C4_ds_f:
l000189D8:
	Mem55[0x1F00CC4:word32] = Mem45[0x1F00CC4:word32] | 0x200000
l000189EC:
	branch (Mem57[r3 + 24_i:word32] & 0x40) == 0 l000189EC_ds_t
l000189EC_ds_t:
l000189EC_ds_f:
l00018A00:
	Mem67[0x1F00CC4:word32] = Mem57[0x1F00CC4:word32] | 0x400000
l00018A14:
	branch (Mem69[r3 + 24_i:word32] & 0x80) == 0 l00018A14_ds_t
l00018A14_ds_t:
l00018A14_ds_f:
l00018A28:
	Mem79[0x1F00CC4:word32] = Mem69[0x1F00CC4:word32] | 0x8000000
l00018A3C:
	fn00018C24(-25_i)
	fn00018C24(-26_i)


void fn00018A60(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r4 r9
// Preserved: r3
fn00018A60_entry:
l00018A60:
	branch (Mem4[r3:word32] & 0x800000) == 0 l00018A60_ds_t
l00018A60_ds_t:
l00018A60_ds_f:
l00018A80:
	branch Mem9[r3 + 24_i:word32] == 0 l00018A80_ds_t
l00018A80_ds_t:
l00018AB0:
	return
fn00018A60_exit:
l00018A80_ds_f:
l00018A90:
	Mem28[0x1F00CC4:word32] = 0_i
	fn00018C68(-25_i)
	fn00018C68(-25_i)


void fn00018AC4(word32 r3, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00018AC4_entry:
l00018AC4:
	fn000188CC(Mem12[0x1310C:word32], 0x1C20800, -151_i, -1_i)
	fn00018F10(0xC768, -1_i, r9)
	word32 r3_38 = 0_i
l00018BB8:
	branch r3_38 <= 1_i l00018BB8_ds_t
l00018BB8_ds_t:
l00018B14:
	Mem86[Mem78[r3 + r3_38 * 0xC + 120_i:word32]:word32] = Mem42[Mem42[r3 + r3_38 * 0xC + 120_i:word32]:word32] & (Mem42[(r3 + r3_38 * 0xC) + 124_i:word32] ^ 0xFFFF) | Mem42[(r3 + r3_38 * 0xC) + 124_i:word32] & Mem42[(r3 + ((r3_38 + -1_i) * 2 + (r3_38 + -1_i) << 2)) + 116_i:word32]
	r3_38 = r3_38 + -1_i
l00018BB8_ds_f:
l00018BCC:
	return
fn00018AC4_exit:


void fn00018BDC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00018BDC_entry:
l00018BDC:
	Mem12[0x1C20068:word32] = Mem5[0x1C20068:word32] | 0x20
	fn00018918(0x1C20800, Mem12[0x1310C:word32], -151_i, -1_i)
	return
fn00018BDC_exit:


void fn00018C24(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1
fn00018C24_entry:
l00018C24:
	branch r3 != 0 l00018C24_ds_t
l00018C24_ds_t:
l00018C24_ds_f:
l00018C30:
	Mem12[0x1F00C10:word32] = -1_i
l00018C40:
	Mem23[0x1F00C40:word32] = -1_i << r3 | Mem18[0x1F00C40:word32]
	return
fn00018C24_exit:


void fn00018C68(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1
fn00018C68_entry:
l00018C68:
	Mem14[0x1F00C40:word32] = (-1_i << r3 ^ 0xFFFF) & Mem0[0x1F00C40:word32]
	return
fn00018C68_exit:


word32 fn00018F10(word32 r3, word32 r4, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r9:[0..31]
// LiveOut: r9
// Trashed: CV r3 r4 r5 r9
// Preserved: r1
fn00018F10_entry:
l00018F10:
	word32 r9_14
	word32 r5_15
	call r3 (retsize: 0;)
		uses: r3:r4,r4:r4,r5:r5_15,r9:dwLoc0C,Stack +0004:r9,Stack +FFFFFFFC:dwLoc0C
		defs: r5:r5_15,r9:r9_14
	return r9_14
fn00018F10_exit:


void fn000190F8(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r9:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r9
// Preserved:
fn000190F8_entry:
l000190F8:
	fn00018F10(0xA1DC, fp - 28_i, r9)
	return
fn000190F8_exit:


void fn00019168()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r14 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00019168_entry:
l00019168:
	fn000188CC(Mem7[0x1310C:word32] + -612_i, 0x1C1E000, -28_i, -1_i)
	fn000188CC(Mem12[0x1310C:word32] + -724_i, 0x1C1E100, -63_i, -1_i)
	return
fn00019168_exit:


void fn000191CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r14 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn000191CC_entry:
l000191CC:
	fn00018918(0x1C1E000, Mem7[0x1310C:word32] + -612_i, -28_i, -1_i)
	fn00018918(0x1C1E100, Mem12[0x1310C:word32] + -724_i, -63_i, -1_i)
	return
fn000191CC_exit:


void fn00019230()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00019230_entry:
l00019230:
	fn000188CC(Mem7[0x1310C:word32] + -984_i, 0x1C23404, -6_i, -3_i)
	return
fn00019230_exit:


void fn0001926C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0001926C_entry:
l0001926C:
	fn00018918(0x1C23408, Mem5[0x1310C:word32] + -984_i, -6_i, -3_i)
	return
fn0001926C_exit:


void fn000192A8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn000192A8_entry:
l000192A8:
	fn000188CC(Mem5[0x1310C:word32] + -1212_i, 0x1C00000, -61_i, -1_i)
	return
fn000192A8_exit:


void fn000192E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn000192E0_entry:
l000192E0:
	fn00018918(0x1C00000, Mem5[0x1310C:word32] + -1212_i, -61_i, -1_i)
	return
fn000192E0_exit:


void fn00019318()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn00019318_entry:
l00019318:
	word32 r5_7 = Mem0[0x1720008:word32]
	Mem8[0x13764:word32] = 0x1720000
	word32 r4_13 = Mem8[0x1310C:word32]
	Mem14[r4_13 + 1472_i:word32] = r5_7
	Mem16[r4_13 + 1476_i:word32] = Mem14[0x172000C:word32]
	Mem18[r4_13 + 1476_i:word32] = Mem16[0x1720020:word32]
	return
fn00019318_exit:


void fn00019358()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5
// Preserved:
fn00019358_entry:
l00019358:
	word32 r3_8 = Mem7[0x13764:word32]
	Mem11[r3_8:word32] = 0_i
	word32 r4_12 = Mem11[0x1310C:word32]
	Mem16[r3_8 + 32_i:word32] = Mem11[r4_12 + 1496_i:word32]
	Mem18[r3_8 + 8_i:word32] = Mem16[r4_12 + 1472_i:word32]
	Mem20[r3_8 + 12_i:word32] = Mem18[r4_12 + 1476_i:word32]
	Mem22[r3_8:word32] = -1_i
	return
fn00019358_exit:


