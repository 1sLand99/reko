int32 main(int32 argc, char * * argv)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32)
main_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00401000:
	test1(Mem0[argv:word32], argc, 0x004020C0, 1.0F)
	return 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:0x00000000 ecx:argv edx:<invalid> -20(fp):<invalid> -16(fp):argc -12(fp):0x004020C0 -8(fp):(real32) rLoc1 -4(fp):ebp 4(fp):argc 8(fp):argv



void test1(char * arg1, int32 arg2, char * arg3, real32 arg4)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
test1_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00401030:
	printf(0x004020C8, arg1, arg2, arg3, (real64) arg4)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:arg2 edx:arg1 -28(fp):0x004020C8 -24(fp):arg1 -20(fp):arg2 -16(fp):arg3 -12(fp):rLoc1 -4(fp):ebp 4(fp):arg1 8(fp):arg2 12(fp):arg3 16(fp):arg4



void test2(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: ebp esp
// Stack args: Stack +0004(32)
test2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401060:
	test1(0x004020D8, 0x00000002, 0x004020D4, Mem0[0x004020E8:real32])
	branch dwArg04 != 0x00000000 l004010A5
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l00401087:
	test1(0x004020E0, 0x00000006, 0x004020DC, Mem0[0x004020E4:real32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 4 -20(fp):0x004020D8 -16(fp):0x00000002 -12(fp):0x004020D4 -8(fp):(real32) rLoc1 -4(fp):ebp

l004010A5:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ebp:fp - 4 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):(real32) rLoc1 -4(fp):ebp

test2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):(real32) rLoc1 -4(fp):ebp



void indirect_call_test3(cdecl_class * c)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
indirect_call_test3_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l004010B0:
	Mem0[Mem0[c:word32] + 0x00000004:word32](c, 0x000003E8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

indirect_call_test3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):c -8(fp):0x000003E8 -4(fp):ebp 4(fp):c



void test4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
test4_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l004010D0:
	word32 ecx_10 = Mem0[0x00403018:word32]
	word32 edx_11 = Mem0[ecx_10:word32]
	word32 eax_12 = Mem0[edx_11:word32]
	word32 esp_13
	word32 ebp_14
	word32 eax_15
	word32 ecx_16
	word32 edx_17
	byte SCZO_18
	call eax_12 (retsize: 4; depth: 12)
		uses: dwLoc04_4,dwLoc08_9,eax_12,ebp_5,ecx_10,edx_11,esp_8
		defs: eax_15,ebp_14,ecx_16,edx_17,esp_13,SCZO_18
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -8(fp):<invalid> -4(fp):ebp



void test5()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
test5_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l004010F0:
	Mem0[Mem0[Mem0[0x00403018:word32]:word32] + 0x00000004:word32](Mem0[0x00403018:word32], 0x000003E7, Mem0[0x004020EC:real32])
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid> edx:<invalid> ebp:ebp -16(fp):<invalid> -12(fp):0x000003E7 -8(fp):(real32) rLoc1 -4(fp):ebp



void test6(cdecl_class * c, int32 a, int32 b)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
test6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401120:
	Mem48[Mem48[c:word32] + 0x00000004:word32](c, Mem0[Mem0[c:word32] + 0x00000008:word32](c, a, b))
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

test6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):c -16(fp):a -12(fp):b -8(fp):<invalid> -4(fp):ebp 4(fp):c 8(fp):a 12(fp):b



void test7(real64 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZOFPUF ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(64)
test7_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(64)

l00401160:
	word32 esp_12 = fp - 4
	branch 1.0 >= rArg04 l00401189
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l0040116F:
	word32 edx_39 = Mem0[Mem0[0x00403024:word32]:word32]
	word32 eax_41 = Mem0[edx_39:word32]
	word32 ebp_43
	real64 rLoc1_44
	bool FPUF_45
	byte SCZO_46
	word32 eax_47
	word32 edx_48
	word32 ecx_49
	call eax_41 (retsize: 4; depth: 16)
		uses: dwLoc04_4,eax_41,ebp_5,ecx_40,edx_39,esp_33,FPUF_8,rLoc0C_36,SCZO_34
		defs: eax_47,ebp_43,ecx_49,edx_48,esp_42,FPUF_45,rLoc1_44,SCZO_46
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 4 ebp:fp - 4 -4(fp):ebp

l00401189:
	word32 esp_13 = esp_12 - 0x00000008
	Mem16[esp_13:real64] = rArg04
	Mem18[esp_13 - 4:word32] = 0x0000000D
	word32 edx_20 = Mem18[Mem18[0x00403024:word32]:word32]
	word32 eax_22 = Mem18[edx_20 + 0x00000004:word32]
	word32 esp_23
	word32 ebp_24
	real64 rLoc1_25
	bool FPUF_26
	byte SCZO_27
	word32 eax_28
	word32 edx_29
	word32 ecx_30
	call eax_22 (retsize: 4; depth: 4)
		uses: dwLoc04_4,eax_22,ebp_5,ecx_21,edx_20,esp_17,FPUF_8,rLoc0C_11,SCZO_14
		defs: eax_28,ebp_24,ecx_30,edx_29,esp_23,FPUF_26,rLoc1_25,SCZO_27
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 4 eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):rLoc1 -4(fp):ebp

test7_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):rLoc1 -4(fp):ebp



void nested_if_blocks_test8(real64 rArg04, real64 rArg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZOFPUF ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(64)
nested_if_blocks_test8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(64)

l004011B0:
	word32 edx_15 = Mem0[Mem0[0x00403024:word32]:word32]
	word32 eax_17 = Mem0[edx_15 + 0x00000004:word32]
	word32 ebp_19
	byte SCZO_20
	real64 rLoc1_21
	word32 eax_22
	word32 edx_23
	word32 ecx_24
	real64 rArg0_25
	bool FPUF_26
	word32 esp_18
	call eax_17 (retsize: 4; depth: 20)
		uses: dwLoc04_4,dwLoc10_12,eax_17,ebp_5,ecx_16,edx_15,esp_11,rLoc0C_10,SCZO_7
		defs: eax_22,ebp_19,ecx_24,edx_23,esp_18,FPUF_26,rArg0_25,rLoc1_21,SCZO_20
	branch Mem0[0x004020F8:real64] == rArg04 l0040120D
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(64)

l004011E2:
	branch Mem0[0x004020F0:real64] <= rArg04 l0040120D
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 4 eax:<invalid> edx:<invalid> ecx:<invalid> -16(fp):0xFFFFFFFF -12(fp):rLoc1 -4(fp):ebp

l004011F2:
	Mem54[esp_18 - 0x00000008:real64] = rArg04
	word32 edx_56 = Mem54[Mem54[0x00403024:word32]:word32]
	word32 eax_58 = Mem54[edx_56:word32]
	word32 ebp_60
	byte SCZO_61
	real64 rLoc1_62
	word32 eax_63
	word32 edx_64
	word32 ecx_65
	real64 rArg0_66
	bool FPUF_67
	call eax_58 (retsize: 4; depth: 4 FPU: -1;)
		uses: dwLoc04_4,dwLoc10_12,eax_58,ebp_19,ecx_57,edx_56,esp_51,FPUF_49,rLoc0C_10,SCZO_52
		defs: eax_63,ebp_60,ecx_65,edx_64,esp_59,FPUF_67,rArg0_66,rLoc1_62,SCZO_61
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 4 eax:<invalid> edx:<invalid> ecx:<invalid> -16(fp):0xFFFFFFFF -12(fp):rLoc1 -4(fp):ebp

l0040120D:
	word32 esp_37 = esp_18 - 4
	Mem38[esp_37:word32] = 0x00000007
	Mem40[esp_37 - 4:word32] = 0x00000006
	Mem43[esp_37 - 8:word32] = Mem40[0x00403018:word32]
	test6(Mem43[esp_37 - 8:(ptr32 cdecl_class)], Mem43[esp_37 - 4:int32], Mem43[esp_37:int32])
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 4 eax:<invalid> edx:<invalid> ecx:<invalid> -16(fp):0xFFFFFFFF -12(fp):rLoc1 -4(fp):ebp

nested_if_blocks_test8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> edx:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):0x00000006 -8(fp):0x00000007 -4(fp):ebp



void loop_test9(real32 rArg04, real64 rArg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZOFPUF ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
loop_test9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401230:
	word32 esp_45 = fp - 0x00000010
	word32 dwLoc08_10 = 0x00000000
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l00401248:
	word32 esp_14 = esp_45 - 0x00000008
	Mem16[esp_14:real64] = (real64) rArg04
	Mem19[esp_14 - 4:word32] = dwLoc08_10
	word32 eax_21 = Mem19[Mem19[0x00403024:word32]:word32]
	word32 edx_23 = Mem19[eax_21 + 0x00000004:word32]
	word32 esp_25
	word32 ebp_26
	byte SCZO_27
	real64 rLoc1_28
	real64 rLoc2_29
	word32 ecx_30
	word32 edx_31
	word32 eax_32
	real64 rArg0_33
	bool FPUF_34
	call edx_23 (retsize: 4; depth: 4)
		uses: dwLoc04_4,dwLoc08_10,eax_21,ebp_5,ecx_22,edx_23,esp_18,rLoc10_24,SCZO_15
		defs: eax_32,ebp_26,ecx_30,edx_31,esp_25,FPUF_34,rArg0_33,rLoc1_28,rLoc2_29,SCZO_27
	branch rArg0_33 <= (real64) dwLoc08_10 l00401294
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 4 ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l00401294:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 4 ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp

loop_test9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp

l00401278:
	Mem40[esp_25 - 0x00000008:real64] = (real64) rArg04
	word32 edx_42 = Mem40[Mem40[0x00403024:word32]:word32]
	word32 eax_44 = Mem40[edx_42:word32]
	word32 ebp_46
	byte SCZO_47
	real64 rLoc1_48
	real64 rLoc2_49
	word32 ecx_50
	word32 edx_51
	word32 eax_52
	real64 rArg0_53
	bool FPUF_54
	call eax_44 (retsize: 4; depth: 4 FPU: -1;)
		uses: dwLoc04_4,dwLoc08_10,eax_44,ebp_26,ecx_43,edx_42,esp_38,FPUF_35,rLoc10_24,SCZO_39
		defs: eax_52,ebp_46,ecx_50,edx_51,esp_45,FPUF_54,rArg0_53,rLoc1_48,rLoc2_49,SCZO_47
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 4 ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l0040123F:
	dwLoc08_10 = dwLoc08_10 + 0x00000001
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 4 ecx:<invalid> edx:<invalid> eax:<invalid> -28(fp):0x00000000 -24(fp):rLoc2 -16(fp):rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)



void const_div_test10(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
const_div_test10_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l004012A0:
	word32 eax_16 = 0x0000000A
	word32 ecx_19 = 0x00000003
	branch dwArg04 == 0x00000000 l004012BA
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp

l004012B4:
	eax_16 = 0x00000003
	ecx_19 = 0x00000001
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp - 4 ebp:fp - 4 eax:0x0000000A ecx:0x00000003 edx:<invalid> -4(fp):ebp

l004012BA:
	Mem20[0x0040301C:word32] = ecx_19
	Mem21[0x00403020:word32] = eax_16
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 4 ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):ebp

const_div_test10_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):ebp



void loop_test11(real64 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZOFPUF ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
loop_test11_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32)

l004012D0:
	word32 dwLoc08_28 = 0x00000005
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l004012DD:
	branch dwLoc08_28 <= 0x00000000 l00401329
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l00401329:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp

loop_test11_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp

l004012E3:
	word32 eax_32 = dwLoc08_28 & 0x80000001
	branch eax_32 >= 0x00000000 l004012F2
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l004012ED:
	eax_32 = (eax_32 - 0x00000001 | 0xFFFFFFFE) + 0x00000001
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l004012F2:
	branch eax_32 != 0x00000000 l0040130D
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l0040130D:
	nested_if_blocks_test8(rArg04, rArg0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l004012F6:
	loop_test9((real32) rArg04, rArg0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l0040131E:
	dwLoc08_28 = dwLoc08_28 - 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebp:fp - 4 eax:<invalid> ecx:<invalid> edx:<invalid> -20(fp):rLoc1 -16(fp):(real32) rLoc1 -12(fp):(real32) rLoc1 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)



void nested_structs_test12(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
nested_structs_test12_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401330:
	Mem8[dwArg04:word32] = 0x00000001
	Mem10[dwArg04 + 0x00000004:word32] = 0x00000002
	Mem12[dwArg04 + 0x00000008:word32] = 0x00000003
	Mem14[dwArg04 + 0x0000000C:word32] = 0x00000004
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

nested_structs_test12_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -4(fp):ebp



void nested_structs_test13(nested_structs_type * str)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp esp
// Stack args: Stack +0004(32)
nested_structs_test13_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l00401360:
	nested_structs_test12(str)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

nested_structs_test13_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -8(fp):str -4(fp):ebp 4(fp):str



