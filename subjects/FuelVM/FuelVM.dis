// fn00401000
// Return size: 4
void fn00401000()
fn00401000_entry:
	// succ:  l00401000
l00401000:
	esp = fp
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	eax = GetModuleHandleA(Mem0[esp:LPCSTR])
	esp = esp + 0x00000004
	Mem0[0x00403180:word32] = eax
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x0040102C
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x000003EC
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403180:word32]
	eax = DialogBoxParamA(Mem0[esp:HINSTANCE], Mem0[esp + 4:LPCSTR], Mem0[esp + 8:HWND], Mem0[esp + 12:DLGPROC], Mem0[esp + 16:LPARAM])
	esp = esp + 0x00000014
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	ExitProcess(Mem0[esp:UINT])
	esp = esp + 0x00000004
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	SCZO = cond(Mem0[ebp + 0x0000000C:word32] - 0x00000110)
	branch Test(NE,Z) l004010EB
	// succ:  l0040103C l004010EB
l0040103C:
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000053
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = SetWindowPos(Mem0[esp:HWND], Mem0[esp + 4:HWND], Mem0[esp + 8:int32], Mem0[esp + 12:int32], Mem0[esp + 16:int32], Mem0[esp + 20:int32], Mem0[esp + 24:UINT])
	esp = esp + 0x0000001C
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x000007D1
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403180:word32]
	eax = LoadBitmapA(Mem0[esp:HINSTANCE], Mem0[esp + 4:LPCSTR])
	esp = esp + 0x00000008
	esp = esp - 0x00000004
	Mem0[esp:word32] = eax
	eax = CreatePatternBrush(Mem0[esp:HBITMAP])
	esp = esp + 0x00000004
	Mem0[0x00403194:word32] = eax
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x0000000A
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x000007D2
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403180:word32]
	eax = FindResourceA(Mem0[esp:HMODULE], Mem0[esp + 4:LPCSTR], Mem0[esp + 8:LPCSTR])
	esp = esp + 0x0000000C
	Mem0[0x00403184:word32] = eax
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403184:word32]
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403180:word32]
	eax = LoadResource(Mem0[esp:HMODULE], Mem0[esp + 4:HRSRC])
	esp = esp + 0x00000008
	Mem0[0x00403188:word32] = eax
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403184:word32]
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403180:word32]
	eax = SizeofResource(Mem0[esp:HMODULE], Mem0[esp + 4:HRSRC])
	esp = esp + 0x00000008
	Mem0[0x00403190:word32] = eax
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403188:word32]
	eax = LockResource(Mem0[esp:HGLOBAL])
	esp = esp + 0x00000004
	Mem0[0x0040318C:word32] = eax
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x0040318C:word32]
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403190:word32]
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	eax = ExtCreateRegion(Mem0[esp:(ptr XFORM)], Mem0[esp + 4:DWORD], Mem0[esp + 8:(ptr RGNDATA)])
	esp = esp + 0x0000000C
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000001
	esp = esp - 0x00000004
	Mem0[esp:word32] = eax
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = SetWindowRgn(Mem0[esp:HWND], Mem0[esp + 4:HRGN], Mem0[esp + 8:BOOL])
	esp = esp + 0x0000000C
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000001
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = ShowWindow(Mem0[esp:HWND], Mem0[esp + 4:int32])
	esp = esp + 0x00000008
	goto l004011BC
	// succ:  l004011BC
l004010EB:
	SCZO = cond(Mem0[ebp + 0x0000000C:word32] - 0x00000136)
	branch Test(NE,Z) l00401102
	// succ:  l004010F4 l00401102
l004010F4:
	eax = Mem0[0x00403194:word32]
	esp = ebp
	ebp = Mem0[esp:word32]
	esp = esp + 0x00000004
	return
	// succ:  fn00401000_exit
l00401102:
	SCZO = cond(Mem0[ebp + 0x0000000C:word32] - 0x0000000F)
	branch Test(NE,Z) l0040112F
	// succ:  l00401108 l0040112F
l00401108:
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000001
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = InvalidateRect(Mem0[esp:HWND], Mem0[esp + 4:(ptr RECT)], Mem0[esp + 8:BOOL])
	esp = esp + 0x0000000C
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = UpdateWindow(Mem0[esp:HWND])
	esp = esp + 0x00000004
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000001
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = ShowWindow(Mem0[esp:HWND], Mem0[esp + 4:int32])
	esp = esp + 0x00000008
	esp = ebp
	ebp = Mem0[esp:word32]
	esp = esp + 0x00000004
	return
	// succ:  fn00401000_exit
l0040112F:
	SCZO = cond(Mem0[ebp + 0x0000000C:word32] - 0x00000111)
	branch Test(NE,Z) l0040118F
	// succ:  l00401138 l0040118F
l00401138:
	eax = Mem0[ebp + 0x00000010:word32]
	SCZO = cond(eax - 0x000003F2)
	branch Test(NE,Z) l00401178
	// succ:  l00401142 l00401178
l00401142:
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x0000000C
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00403198
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x000003F8
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = GetDlgItemTextA(Mem0[esp:HWND], Mem0[esp + 4:int32], Mem0[esp + 8:LPSTR], Mem0[esp + 12:int32])
	esp = esp + 0x00000010
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x0000000C
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x004031B0
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x000003F9
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = GetDlgItemTextA(Mem0[esp:HWND], Mem0[esp + 4:int32], Mem0[esp + 8:LPSTR], Mem0[esp + 12:int32])
	esp = esp + 0x00000010
	Mem0[0x004031CC:byte] = 0x00
	call fn00401238 (retsize: 4;)
	goto l004011BC
	// succ:  l004011BC
l00401178:
	SCZO = cond(eax - 0x000003FA)
	branch Test(NE,Z) l004011BC
	// succ:  l0040117F l004011BC
l0040117F:
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000010
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = SendMessageA(Mem0[esp:HWND], Mem0[esp + 4:UINT], Mem0[esp + 8:WPARAM], Mem0[esp + 12:LPARAM])
	esp = esp + 0x00000010
	goto l004011BC
	// succ:  l004011BC
l0040118F:
	SCZO = cond(Mem0[ebp + 0x0000000C:word32] - 0x00000010)
	branch Test(NE,Z) l004011BC
	// succ:  l00401195 l004011BC
l00401195:
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00090000
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x000003E8
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = AnimateWindow(Mem0[esp:HWND], Mem0[esp + 4:DWORD], Mem0[esp + 8:DWORD])
	esp = esp + 0x0000000C
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[0x00403194:word32]
	eax = DeleteObject(Mem0[esp:HGDIOBJ])
	esp = esp + 0x00000004
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebp + 0x00000008:word32]
	eax = EndDialog(Mem0[esp:HWND], Mem0[esp + 4:INT_PTR])
	esp = esp + 0x00000008
	// succ:  l004011BC
l004011BC:
	eax = eax ^ eax
	SZO = cond(eax)
	C = false
	esp = ebp
	ebp = Mem0[esp:word32]
	esp = esp + 0x00000004
	return
	// succ:  fn00401000_exit
fn00401000_exit:


// fn004011C2
// Return size: 4
void fn004011C2()
fn004011C2_entry:
	// succ:  l004011C2
l004011C2:
	esp = fp
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	edi = Mem0[ebp + 0x00000008:word32]
	ecx = ecx - ecx
	SCZO = cond(ecx)
	al = al - al
	SCZO = cond(al)
	ecx = ~ecx
	D = false
	// succ:  l004011CF
l004011CF:
	branch ecx == 0x00000000 l004011D1
	// succ:  l004011CF_1 l004011D1
l004011CF_1:
	SCZO = cond(al - Mem0[edi:byte])
	edi = edi + 0x00000001
	ecx = ecx - 0x00000001
	branch Test(NE,Z) l004011CF
	// succ:  l004011D1 l004011CF
l004011D1:
	ecx = ~ecx
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	esp = ebp
	ebp = Mem0[esp:word32]
	esp = esp + 0x00000004
	return
	// succ:  fn004011C2_exit
fn004011C2_exit:


// fn004011D8
// Return size: 4
void fn004011D8()
fn004011D8_entry:
	// succ:  l004011D8
l004011D8:
	esp = fp
	ebx = ebx ^ ebx
	SZO = cond(ebx)
	C = false
	eax = ebx
	Mem0[0x004035CF:word32] = 0x00000000
	Mem0[0x004035D7:word32] = 0x00000000
	Mem0[0x004035DF:word32] = 0x00000000
	ecx = 0x004031CC
	bl = Mem0[ecx:byte]
	ebx = ebx + 0x00403198
	SCZO = cond(ebx)
	al = Mem0[ebx:byte]
	Mem0[0x004035E7:word32] = eax
	Mem0[0x004035EF:word32] = 0x00000032
	Mem0[0x004035FF:word32] = 0x00000000
	Mem0[0x00403610:byte] = 0x00
	Mem0[0x0040360F:byte] = 0x00
	v11 = Mem0[0x004031CC:byte] + 0x01
	Mem0[0x004031CC:byte] = v11
	SZO = cond(v11)
	return
	// succ:  fn004011D8_exit
fn004011D8_exit:


// fn00401238
// Return size: 4
void fn00401238()
fn00401238_entry:
	// succ:  l00401238
l00401238:
	esp = fp
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	esp = esp + 0xFFFFFFFC
	SCZO = cond(esp)
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00403198
	call fn004011C2 (retsize: 4;)
	esp = esp + 0x00000004
	SCZO = cond(ecx - 0x00000007)
	branch Test(UGE,C) l0040124F
	// succ:  l0040124D l0040124F
l0040124D:
	esp = ebp
	ebp = Mem0[esp:word32]
	esp = esp + 0x00000004
	return
	// succ:  fn00401238_exit
l0040124F:
	eax = 0x004031CD
	Mem0[eax:word32] = ecx
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x004031B0
	call fn004011C2 (retsize: 4;)
	esp = esp + 0x00000004
	SCZO = cond(ecx - 0x00000007)
	branch Test(UGE,C) l00401268
	// succ:  l00401266 l00401268
l00401266:
	esp = ebp
	ebp = Mem0[esp:word32]
	esp = esp + 0x00000004
	return
	// succ:  fn00401238_exit
l00401268:
	ecx = ecx ^ ecx
	SZO = cond(ecx)
	C = false
	esp = esp - 0x00000004
	Mem0[esp:word32] = edx
	edx = 0x004031CD
	// succ:  l00401271
l00401271:
	eax = ebp - 0x00000004
	ebx = ebx ^ ebx
	SZO = cond(ebx)
	C = false
	eax = 0x00403198
	ebx = Mem0[ecx + eax:word32]
	ebx = ebx ^ ecx
	SZO = cond(ebx)
	C = false
	eax = eax + ecx
	SCZO = cond(eax)
	Mem0[eax:byte] = bl
	eax = 0x00403198
	eax = Mem0[ebp - 0x00000004:word32]
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	SCZO = cond(ecx - Mem0[edx:word32])
	branch Test(LE,SZO) l00401271
	// succ:  l00401293 l00401271
l00401293:
	edx = Mem0[esp:word32]
	esp = esp + 0x00000004
	eax = 0x004031CE
	Mem0[eax:word32] = ecx
	eax = 0x00403000
	ebx = 0x004035FF
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ebx:word32]
	Mem0[0x004031C8:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	call fn004011D8 (retsize: 4;)
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x004012D7
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[fs:0x00000000:word32]
	Mem0[fs:0x00000000:word32] = esp
	call fn004011D8 (retsize: 4;)
	int3()
	eax = eax ^ eax
	SZO = cond(eax)
	C = false
	edx_eax = ecx *u eax
	SCZO = cond(edx_eax)
	esp = esp + 0xFFFFFFFF
	SCZO = cond(esp)
l004012D4:
	call ebx (retsize: 4;)
	return
	// succ:  l004012D4 fn00401238_exit
fn00401238_exit:


