void fn00000E(word16 FSR0, word32 TBLPTR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  FSR0 TBLPTR
// LiveOut:
// Trashed: CDCZOVN BSR FSR0 FSR0H FSR0L STKPTR TBLPTRH TBLPTRL TBLPTRU TOS WREG
// Preserved:
fn00000E_entry:
// DataOut: FSR0 TBLPTR
// DataOut (flags): 
// SymbolicIn: STKPTR:fp
// LocalsOut: fp(32)

l00000E:
	__tblrd(TBLPTR, 0x01)
	Mem12[0x00:0xC5:byte] = TABLAT
	__tblrd(TBLPTR, 0x01)
	Mem17[0x00:0xC6:byte] = TABLAT
	byte TBLPTRL_24 = 0x06
	byte TBLPTRH_25 = 0x00
	byte TBLPTRU_26 = 0x00
	byte Z_15 = cond(TABLAT)
// DataOut: FSR0 TBLPTR TBLPTRH TBLPTRL TBLPTRU
// DataOut (flags): Z
// SymbolicIn: STKPTR:fp
// LocalsOut: fp(32)

l000028:
	branch Z_15 l000030
// DataOut: FSR0 TBLPTR TBLPTRH TBLPTRL TBLPTRU
// DataOut (flags): 
// SymbolicIn: STKPTR:fp WREG:<invalid> TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l00002A:
	branch Mem17[0x00:0xC5:byte] == 0x00 l00002E
// DataOut: FSR0 TBLPTR TBLPTRH TBLPTRL TBLPTRU
// DataOut (flags): 
// SymbolicIn: STKPTR:fp WREG:<invalid> TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l00002E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: STKPTR:fp WREG:<invalid> TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l0000AA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: STKPTR:fp WREG:<invalid> TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>

fn00000E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: STKPTR:fp - 0x01 WREG:<invalid> TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 TOS:Stack[fp - 0x01] FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>

l00002C:
// DataOut: FSR0 TBLPTR TBLPTRH TBLPTRL TBLPTRU
// DataOut (flags): 
// SymbolicIn: STKPTR:fp WREG:<invalid> TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l000030:
	__tblrd(TBLPTR, 0x01)
	Mem35[0x00:0xC0:byte] = TABLAT
	__tblrd(TBLPTR, 0x01)
	Mem37[0x00:0xC1:byte] = TABLAT
	__tblrd(TBLPTR, 0x01)
	Mem39[0x00:0xC2:byte] = TABLAT
	__tblrd(TBLPTR, 0x01)
	__tblrd(TBLPTR, 0x01)
	__tblrd(TBLPTR, 0x01)
	__tblrd(TBLPTR, 0x01)
	__tblrd(TBLPTR, 0x01)
	__tblrd(TBLPTR, 0x01)
	Mem45[0x00:0xC3:byte] = TABLAT
	__tblrd(TBLPTR, 0x01)
	Mem47[0x00:0xC4:byte] = TABLAT
	__tblrd(TBLPTR, 0x01)
	__tblrd(TBLPTR, 0x01)
	Mem48[0x00C7:byte] = TBLPTRL_24
	Mem49[0x00C8:byte] = TBLPTRH_25
	Mem50[0x00C9:byte] = TBLPTRU_26
	Mem55[0x00:0xC3:byte] = Mem50[0x00:0xC3:byte]
	byte Z_57 = cond(Mem55[0x00:0xC3:byte])
// DataOut: FSR0 TBLPTR
// DataOut (flags): Z
// SymbolicIn: STKPTR:fp WREG:<invalid> TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l000080:
	branch Z_57 l000086
// DataOut: FSR0 TBLPTR
// DataOut (flags): 
// SymbolicIn: STKPTR:fp WREG:TABLAT TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l000082:
	Mem76[0x00:0xC4:byte] = Mem55[0x00:0xC4:byte]
	branch Mem76[0x00:0xC4:byte] == 0x00 l000094
// DataOut: FSR0 TBLPTR
// DataOut (flags): 
// SymbolicIn: STKPTR:fp WREG:TABLAT TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l000094:
	TBLPTRL_24 = Mem76[0x00C7:byte]
	TBLPTRH_25 = Mem76[0x00C8:byte]
	TBLPTRU_26 = Mem76[0x00C9:byte]
	Mem83[0x00:0xC5:byte] = Mem76[0x00:0xC5:byte] - 0x01
	Mem87[0x00:0xC6:byte] = Mem83[0x00:0xC6:byte] - !cond(Mem83[0x00:0xC5:byte])
	Z_15 = cond(Mem87[0x00:0xC6:byte]) (alias)
// DataOut: FSR0 TBLPTR TBLPTRH TBLPTRL TBLPTRU
// DataOut (flags): Z
// SymbolicIn: STKPTR:fp WREG:TABLAT TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l000086:
	__tblrd(TBLPTR, 0x01)
	Mem67[FSR0:byte] = TABLAT
	Mem69[0x00:0xC3:byte] = Mem67[0x00:0xC3:byte] - 0x01
	FSR0 = FSR0 + 0x0001
	Z_57 = cond(Mem69[0x00:0xC3:byte]) (alias)
	branch Mem69[0x00:0xC3:byte] <u 0x00 l000080
// DataOut: FSR0 TBLPTR
// DataOut (flags): Z
// SymbolicIn: STKPTR:fp WREG:TABLAT TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)

l000090:
	Mem74[0x00:0xC4:byte] = Mem69[0x00:0xC4:byte] - 0x01
// DataOut: FSR0 TBLPTR
// DataOut (flags): 
// SymbolicIn: STKPTR:fp WREG:TABLAT TBLPTRL:<invalid> TBLPTRH:<invalid> TBLPTRU:<invalid> BSR:0x00 FSR0L:TABLAT FSR0H:TABLAT FSR0:<invalid>
// LocalsOut: fp(32)



void fn0000013A(word16 FSR0, word32 TBLPTR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  FSR0 TBLPTR
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000013A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0000013A_entry:
// DataOut: FSR0 TBLPTR
// DataOut (flags): 
// SymbolicIn: STKPTR:fp
// LocalsOut: fp(32)

l0000013A:
	Mem7[0x0001:byte] = Data[0x0001:byte] & 0xBF
	Stack[fp + 0x01] = 0x00014A
	fn00000E(FSR0, TBLPTR)
// DataOut:
// DataOut (flags): 
// SymbolicIn: STKPTR:fp



