void fn03B0(word32 r6_r5, word32 r9_r8, word16 r4, word16 r11, word32 r12, word32 r13, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11:[0..15] r12:[0..31] r13:[0..31] r4:[0..15] ra:[0..31] Sequence r6:r5:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn03B0_entry:
l000003B0:
	word32 r13_13
	word16 r3_15
	word16 r1_12 = fn0000D578(r13, out r3_15, out r13_13)
	fn0000D974(1<16>, r13_13)
	word32 sp_20 = <invalid>
	Mem25[sp_20 - 4<i32>:word32] = ra
	branch SEQ(r3_15, 1<16>) == 0<32> l000003E2
l000003E2:
	return
l000003CE:
	branch Mem25[SEQ(r3_15, 1<16>) + 0xC<32>:word16] == 0x1C4F<16> l000003DC
l000003DC:
	fn00001B74(r9_r8, r11, r13_13, ra)
	return
l000003D6:
	fn00002D76(r6_r5, r9_r8, r1_12, r4, r12, r13_13, ra, Mem25[sp_20 + 65522<i32>:word32], Mem25[sp_20 + 65526<i32>:word32], Mem25[sp_20 + 65530<i32>:word32], Mem25[sp_20 + 65534<i32>:word16], Mem25[sp_20 + 65536<i32>:word32], Mem25[sp_20 + 65540<i32>:word16], Mem25[sp_20 + 65542<i32>:word32], Mem25[sp_20 + 65586<i32>:word32], Mem25[sp_20 + 65594<i32>:word32], Mem25[sp_20 + 65618<i32>:word32], Mem25[sp_20 + 131074<i32>:word32], Mem25[sp_20 + 131116<i32>:word32], Mem25[sp_20 + 196484<i32>:word16])
	return
fn03B0_exit:


word32 fn00000BEC(word32 r5_r4, word32 r9_r8, word16 r6, word32 r13, ptr32 & r0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001B74
//      fn00002D76
// MayUse:  r13:[0..31] r6:[0..15] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r3:r2
// Trashed: LNZ r0 r1 r10 r11 r12 r2 r3 r4 r5
// Preserved: CF r13 r7 sp
fn00000BEC_entry:
	word16 r4 = SLICE(r5_r4, word16, 0)
	word16 r5 = SLICE(r5_r4, word16, 16)
l00000BEC:
	word32 r3_r2_21 = Mem8[r9_r8 + 0x68<32>:word32]
	word16 r3_153 = SLICE(r3_r2_21, word16, 16)
	word16 r2_154 = SLICE(r3_r2_21, word16, 0)
	branch r3_r2_21 == 0<32> l00000C14
l00000C00:
	branch Mem8[r9_r8 + 0x64<32>:word16] == 0xFFFC<16> l00000C0E
l00000C0A:
	r13 = fn0000D99C(r3_r2_21, r13)
l00000C0E:
	Mem40[r9_r8 + 0x68<32>:word32] = 0<32>
l00000C14:
	branch CONVERT(r4 != 0<16>, bool, int16) == 0<16> l00000C28
l00000C1C:
	branch CONVERT(r4 != 0xFFFB<16>, bool, int16) == 0<16> l00000C28
l00000C26:
	Mem56[r9_r8:word16] = 0<16>
l00000C28:
	Mem61[r9_r8 + 0x64<32>:word16] = r4
	word16 r7_69 = r6 | r5
	word16 r0_147 = CONVERT(r5 == 0<16>, bool, int16)
	branch r0_147 != 0<16> l00000C80
l00000C38:
	r0_147 = CONVERT(r4 == 0xFFFC<16>, bool, int16)
	branch r0_147 != 0<16> l00000C80
l00000C42:
	word32 r13_92 = fn0000DB74(r3_r2_21, r13)
	fn0000DB74(SEQ(r7_69, r5), r13_92)
	word32 r3_r2_109 = SEQ(r7_69, r5) + r13_92
	word32 r13_116 = fn0000D9B0(r3_r2_109 + 3<32>, SEQ(r7_69, r5))
	Mem121[r9_r8 + 0x68<32>:word32] = r13_92
	word16 r3_113 = SLICE(r3_r2_109 + 3<32>, word16, 16)
	word16 r2_114 = SLICE(r3_r2_109, word16, 0) + 3<16>
	branch r13_92 == 0<32> l00000C84
l00000C84:
	Mem126[r9_r8 + 0x64<32>:word16] = 0xFFFC<16>
	r0Out = 0xFFFC<16>
	return SEQ(r3_113, r2_114)
l00000C66:
	word32 r13_141 = fn0000DBF0(r3_r2_109 + 3<32>, r5_r4, r13_116)
	Mem148[r3_r2_109 + 3<32>:word16] = 0x203A<16>
	fn0000DC28(r3_r2_109 + 5<32>, SEQ(r7_69, r5), r13_141)
	r0_147 = SLICE(r3_r2_109, word16, 0) + 3<16> (alias)
	r3_153 = SLICE(r3_r2_109 + 5<32>, word16, 16) (alias)
	r2_154 = SLICE(r3_r2_109, word16, 0) + 5<16> (alias)
l00000C80:
	r0Out = r0_147
	return SEQ(r3_153, r2_154)
fn00000BEC_exit:


void fn00001B74(word32 r9_r8, word16 r11, word32 r13, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn03B0
// MayUse:  r11:[0..15] r13:[0..31] ra:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: LNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Preserved: CF r7 ra sp
fn00001B74_entry:
l00001B74:
	branch r9_r8 == 0<32> l00001BE0
l00001B7E:
	branch Mem8[r9_r8 + 0xC<32>:word16] != 0x1C4F<16> l00001BE0
l00001BE0:
	return
l00001B86:
	word32 r3_r2_209 = r9_r8
	branch Mem8[r9_r8 + 0x14<32>:word16] == 0<16> l00001BA4
l00001B8C:
	word32 r9_r8_208 = fn000089C4(r9_r8, r11, ra)
	word32 r13_61 = fn0000D99C(Mem8[r9_r8_208 + 0x38<32>:word32], r13)
	r3_r2_209 = Mem8[r9_r8_208 + 0x18<32>:word32]
	r13 = fn0000D99C(r3_r2_209, r13_61)
	r9_r8 = r9_r8_208 (alias)
l00001BA4:
	branch Mem8[r9_r8 + 0x64<32>:word16] == 0xFFFB<16> l00001BB0
l00001BAE:
l00001BB0:
	word16 r0_96
	fn00000BEC(0<32>, r3_r2_209, 0<16>, r13, out r0_96)
	word32 r3_r2_109 = Mem8[r3_r2_209 + 0x10<32>:word32]
	word32 r13_112 = fn0000D99C(r3_r2_109, r13)
	word16 r2_116 = Mem8[r3_r2_209 + 0xE<32>:word16]
	fn0000D99C(SEQ(SLICE(r3_r2_109, word16, 16), r2_116), fn0000DDF0(r2_116, r13_112))
	branch r0_96 != 0<16> l00001BD8
l00001BD8:
	return
l00001BD2:
	return
fn00001B74_exit:


void fn00002D76(word32 r6_r5, word32 r9_r8, word16 r1, word16 r4, word32 r12, word32 r13, word32 ra, word32 dwArgFFF6, word32 dwArgFFFA, word32 dwArgFFFE, word16 wArg10002, word32 dwArg10004, word16 wArg10008, word32 dwArg1000A, word32 dwArg10036, word32 dwArg1003E, word32 dwArg10056, word32 dwArg20006, word32 dwArg20030, word16 wArg2FF88)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn03B0
// MayUse:  r1:[0..15] r12:[0..31] r13:[0..31] r4:[0..15] ra:[0..31] Sequence r6:r5:[0..31] Sequence r9:r8:[0..31] Stack +10002:[0..15] Stack +10004:[0..31] Stack +10008:[0..15] Stack +1000A:[0..31] Stack +10036:[0..31] Stack +1003E:[0..31] Stack +10056:[0..31] Stack +20006:[0..31] Stack +20030:[0..31] Stack +2FF88:[0..15] Stack +FFF6:[0..31] Stack +FFFA:[0..31] Stack +FFFE:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn00002D76_entry:
	ptr32 fp
	word16 r8 = SLICE(r9_r8, word16, 0)
	word16 r6 = SLICE(r6_r5, word16, 16)
	word16 r5 = SLICE(r6_r5, word16, 0)
	byte bArgFFFA_553 = SLICE(dwArgFFFA, byte, 0)
	word16 wArgFFFC_554 = SLICE(dwArgFFFA, word16, 16)
l00002D76:
	word32 sp_215 = fp + 0xFFF6<32>
	branch r9_r8 == 0<32> l000030F2
l00002D82_thunk_fn000030F2:
	word32 r9_r8_672
	word16 r7_673
	word32 r12_674
	word32 r13_675
	fn000030F2(r6_r5, r4, r8, r12, r13, dwArgFFF6, dwArgFFFA, dwArgFFFE, wArg10002, dwArg10004, wArg10008, dwArg1000A, dwArg10036, dwArg1003E, dwArg10056, dwArg20006, dwArg20030, wArg2FF88, out r9_r8_672, out r7_673, out r12_674, out r13_675)
	return
l00002D86:
	branch Mem8[r9_r8 + 0xC<32>:word16] != 0x79B1<16> l000030E8
l00002D8C_thunk_fn000030E8:
	fn000030E8()
	return
l00002D90:
	branch Mem8[r9_r8 + 0x60<32>:word16] != 0<16> l0000300E
l00002D96_thunk_fn0000300E:
	fn0000300E(r4, r5, r6, r12, r13, ra, dwArgFFF6, bArgFFFA_553, wArgFFFC_554)
	return
l00002D9A:
	word16 r0_94 = Mem84[r9_r8 + 0x14<32>:word16]
	branch r0_94 == 0<16> l0000304A
l00002DA6_thunk_fn0000304A:
	fn0000304A(SEQ(r1, r0_94), r9_r8)
	return
l00002DAA:
	word32 r3_r2_661
	word32 r3_r2_456
	word32 r3_r2_651
	word32 sp_153
	word16 r0_114 = Mem84[r9_r8 + 0x40<32>:word16]
	branch r0_114 != 0<16> l00002E92
l00002E92:
	word16 r5_118 = Mem84[r9_r8 + 0x78<32>:word16]
	branch r5_118 == 0<16> l00002F40
l00002F40:
	r3_r2_456 = r9_r8 (alias)
	branch Mem84[r9_r8 + 0x14<32>:word16] == 0<16> l00002E66
l00002F46:
l00002E9A:
	word32 r4_r3_126 = Mem84[r9_r8 + 0x70<32>:word32]
l00002EA2:
	word16 r3_148 = SLICE(r4_r3_126, word16, 0)
	branch r5_118 >=u 0x4000<16> l00002EAA
l00002EA8:
	r5_118 = 0x4000<16>
l00002EAA:
	word16 r2_142 = Mem141[r9_r8 + 0xE<32>:word16]
	r13 = fn0000DD90(r4_r3_126, CONVERT(r5_118, word16, word32), r2_142, r13)
	sp_153 = <invalid>
	r3_r2_651 = SEQ(r3_148, r2_142) (alias)
	branch r0_114 > 0<16> l00002E32
l00002EB6:
	r5_118 = Mem141[r9_r8 + 0x78<32>:word16]
	Mem164[r9_r8 + 0x78<32>:word16] = r5_118
	word32 r1_r0_165 = CONVERT(r0_114 - r5_118, word16, int32)
	r4_r3_126 = Mem164[r9_r8 + 0x70<32>:word32] + r1_r0_165
	Mem177[r9_r8 + 0x70<32>:word32] = r4_r3_126
	r0_114 = SLICE(r1_r0_165, word16, 0) (alias)
	word16 r3_174 = SLICE(r4_r3_126, word16, 0)
	branch r5_118 != 0<16> l00002EA2
l00002ED0:
	r3_r2_661 = SEQ(r3_174, r2_142) (alias)
l00002DB2:
	word16 r7_181 = Mem84[r9_r8 + 0x90<32>:word16]
	r13 = SEQ(SLICE(r13, word16, 16), 0x4000<16>)
	word32 r12_185 = SEQ(SLICE(r12, word16, 16), 0<16>)
	word32 r3_r2_638 = r9_r8
	word32 r7_r6_641 = SEQ(r7_181, r6)
	branch CONVERT(r7_181 == 0<16>, bool, int16) != 0<16> l00002DF0
l00002DC4:
	branch CONVERT(r0_114 == 1<16>, bool, int16) != 0<16> l00002DF0
l00002DCC:
	r5 = <invalid>
	r4 = <invalid>
	word16 r7_224
	word32 r9_r8_646
	word32 r3_r2_666
	word32 r11_r10_669
	word32 r5_r4_670
	word16 r6_232 = SLICE(fn00004CD4(r3_r2_638, SEQ(r5, 4<16>), r7_r6_641, r9_r8, r12_185, r13, ra, Mem84[sp_215:word16], Mem84[sp_215 + 65520<i32>:word32], Mem84[sp_215 + 65524<i32>:word16], Mem84[sp_215 + 65526<i32>:word32], Mem84[sp_215 + 65530<i32>:word16], Mem84[sp_215 + 65532<i32>:word32], Mem84[sp_215 + 65536<i32>:word32], Mem84[sp_215 + 65556<i32>:word32], Mem84[sp_215 + 65560<i32>:word32], Mem84[sp_215 + 65564<i32>:word32], Mem84[sp_215 + 65568<i32>:word32], Mem84[sp_215 + 65572<i32>:word32], Mem84[sp_215 + 65576<i32>:word32], Mem84[sp_215 + 65580<i32>:word32], Mem84[sp_215 + 65584<i32>:word32], Mem84[sp_215 + 65588<i32>:word32], Mem84[sp_215 + 65604<i32>:word32], Mem84[sp_215 + 65608<i32>:word32], Mem84[sp_215 + 65612<i32>:word32], Mem84[sp_215 + 65762<i32>:word32], Mem84[sp_215 + 66032<i32>:word16], Mem84[sp_215 + 66036<i32>:word16], Mem84[sp_215 + 131032<i32>:word16], Mem84[sp_215 + 131034<i32>:word32], Mem84[sp_215 + 131038<i32>:word16], Mem84[sp_215 + 131046<i32>:word32], Mem84[sp_215 + 131050<i32>:word32], Mem84[sp_215 + 131068<i32>:word32], Mem84[sp_215 + 131094<i32>:word32], Mem84[sp_215 + 131102<i32>:word32], Mem84[sp_215 + 131110<i32>:word32], Mem84[sp_215 + 131126<i32>:word32], Mem84[sp_215 + 196478<i32>:word16], Mem84[sp_215 + 196546<i32>:word16], Mem84[sp_215 + 196582<i32>:word32], Mem84[sp_215 + 196624<i32>:word32], Mem84[sp_215 + 261992<i32>:word16], out r11_r10_669, out r3_r2_666, out r5_r4_670, out r9_r8_646, out r0_114, out r7_224, out r12_185, out r13, out ra), word16, 0)
	sp_215 = fp
	branch r0_114 == 0xFFFE<16> l00002DD8_thunk_fn00003070
l00002DD8_thunk_fn00003070:
	fn00003070()
	return
l00002DDC:
	word16 r1_255 = Mem84[r9_r8_646 + 0x90<32>:word16]
	branch r7_224 == r1_255 l00002DE2_thunk_fn00003082
l00002DE2_thunk_fn00003082:
	fn00003082()
	return
l00002DE6:
	r9_r8 = r9_r8_646 (alias)
	r3_r2_638 = r3_r2_666 (alias)
	r7_r6_641 = SEQ(r1_255, r6_232) (alias)
	r9_r8 = r9_r8_646 (alias)
	branch CONVERT(r1_255 == 0<16>, bool, int16) == 0<16> l00002DC4
l00002DF0:
	word32 r3_r2_281 = Mem84[r9_r8 + 0x88<32>:word32]
	branch Mem84[r9_r8 + 4<32>:word32] <u r3_r2_281 l00002E10
l00002E10:
	branch r3_r2_281 >= 0x4000<32> l00002E1E
l00002E1A:
	r3_r2_281 = SEQ(SLICE(r12_185, word16, 0), SLICE(r13, word16, 0)) (alias)
l00002E1E:
	word16 r3_312 = SLICE(r3_r2_281, word16, 16)
	word16 r2_323 = Mem322[r9_r8 + 0xE<32>:word16]
	r13 = fn0000DD90(SEQ(r4, r3_312), r3_r2_281 & 0xFFFF<32>, r2_323, r13)
	sp_153 = fp
	r3_r2_651 = SEQ(r3_312, r2_323) (alias)
	branch r3_312 < 0<16> l00002DFE
l00002DFE:
	word32 r1_r0_346 = CONVERT(r3_312, word16, int32) + Mem322[r9_r8 + 4<32>:word32]
	Mem351[r9_r8 + 4<32>:word32] = r1_r0_346
	r3_r2_281 = Mem351[r9_r8 + 0x88<32>:word32]
	branch r1_r0_346 >=u r3_r2_281 l00002E0C_thunk_fn00003000
l00002E0C_thunk_fn00003000:
	fn00003000(r1_r0_346, r3_r2_281)
	return
l00002E32:
	word16 r0_676
	word32 r3_r2_667 = fn00000BEC(0xE4A8FFFF<32>, r3_r2_651, 0<16>, r13, out r0_676)
	Mem408[sp_153:word16] = Mem405[r3_r2_651 + 0x64<32>:word16]
	r9_r8 = r3_r2_651 (alias)
	r3_r2_661 = r3_r2_667 (alias)
l00002E44:
	word16 r3_420 = SLICE(r3_r2_661, word16, 16)
	r3_r2_456 = r3_r2_661 (alias)
	branch Mem412[r9_r8 + 0x14<32>:word16] == 0<16> l00002E66
l00002E4A:
	branch Mem412[r9_r8 + 0x40<32>:word16] != 0<16> l00002E60
l00002E52:
	word32 r9_r8_664
	word16 r1_679
	word16 r2_680
	word16 r3_681
	word16 r4_682
	word16 r5_683
	word16 r6_684
	word16 r7_685
	word32 ra_686
	fn00006134(r9_r8, r3_420, out r9_r8_664, out r1_679, out r2_680, out r3_681, out r4_682, out r5_683, out r6_684, out r7_685, out ra_686)
	r13 = fn0000D99C(Mem412[r9_r8_664 + 0x38<32>:word32], r13)
	r9_r8 = r9_r8_664 (alias)
l00002E60:
	r3_r2_456 = Mem455[r9_r8 + 0x18<32>:word32]
	r13 = fn0000D99C(r3_r2_456, r13)
l00002E66:
	word16 r0_476
	fn00000BEC(0<32>, r3_r2_456, 0<16>, r13, out r0_476)
	word32 r3_r2_489 = Mem488[r3_r2_456 + 0x10<32>:word32]
	word32 r13_492 = fn0000D99C(r3_r2_489, r13)
	word16 r2_496 = Mem488[r3_r2_456 + 0xE<32>:word16]
	word16 r3_490 = SLICE(r3_r2_489, word16, 16)
	word32 r13_497 = fn0000DDF0(r2_496, r13_492)
	branch r0_476 == 0xFFFF<16> l00002E84
l00002E82:
l00002E84:
	fn0000D99C(SEQ(r3_490, r2_496), r13_497)
	return
l00002DFA:
l00002DFA_thunk_fn0000301A:
	fn0000301A()
	return
fn00002D76_exit:


void fn00002F48(word32 r11_r10, word32 r6_r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
// MayUse:  Sequence r11:r10:[0..31] Sequence r6:r5:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00002F48_entry:
l00002F48:
l00002F4A_thunk_fn00002F4C:
	word16 r8_37
	word16 r9_38
	word32 r12_39
	word32 r13_40
	fn00002F4C(r11_r10, r6_r5, out r8_37, out r9_38, out r12_39, out r13_40)
	return
fn00002F48_exit:


word16 fn00002F4C(word32 r11_r10, word32 r6_r5, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F48
//      fn00003338
//      fn00003348
// MayUse:  Sequence r11:r10:[0..31] Sequence r6:r5:[0..31]
// LiveOut: r12 r13 r7 r8 r9
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn00002F4C_entry:
l00002F4C:
	word16 r7_52 = Mem0[r11_r10 + 0xAC<32>:word16]
	word32 r6_r5_61 = r6_r5 + CONVERT(r7_52, word16, word32)
	word16 r9_66 = Mem64[r11_r10 + 0xB8<32>:word16]
	branch r7_52 <=u 0xFEFA<16> l00002F80_thunk_fn00002F8A
l00002F80_thunk_fn00002F8A:
	word32 r12_80
	word32 r13_81
	word16 r8_86
	word16 r7_85 = fn00002F8A(r11_r10, r9_66, r6_r5_61, out r8_86, out r12_80, out r13_81)
	r8Out = r8_86
	r9Out = <invalid>
	r12Out = r12_80
	r13Out = r13_81
	return r7_85
l00002F80_thunk_fn00002F82:
	word32 r12_94
	word32 r13_95
	word16 r8_101
	word16 r7_100 = fn00002F82(r11_r10, r9_66, r6_r5_61, out r8_101, out r12_94, out r13_95)
	r8Out = r8_101
	r9Out = <invalid>
	r12Out = r12_94
	r13Out = r13_95
	return r7_100
fn00002F4C_exit:


word16 fn00002F82(word32 r11_r10, word16 r9, word32 dwArg00, ptr32 & r8Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F48
//      fn00002F4C
// MayUse:  r9:[0..15] Sequence r11:r10:[0..31] Stack +0000:[0..31]
// LiveOut: r12 r13 r7 r8
// Trashed: CFLNZ r12 r13 r2 r3 r5 r6 r7 r8 ra
// Preserved: sp
fn00002F82_entry:
l00002F82:
l00002F88_thunk_fn00002F8A:
	word32 r12_14
	word32 r13_15
	word16 r8_20
	word16 r7_19 = fn00002F8A(r11_r10, r9, dwArg00, out r8_20, out r12_14, out r13_15)
	r8Out = r8_20
	r12Out = r12_14
	r13Out = r13_15
	return r7_19
fn00002F82_exit:


word16 fn00002F8A(word32 r11_r10, word16 r9, word32 dwArg00, ptr32 & r8Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F48
//      fn00002F4C
// MayUse:  r9:[0..15] Sequence r11:r10:[0..31] Stack +0000:[0..31]
// LiveOut: r12 r13 r7 r8
// Trashed: CFLNZ r12 r13 r2 r3 r6 r7 r8 ra
// Preserved: sp
fn00002F8A_entry:
	word32 r12
	word16 r0
	word16 r4
	word16 r6
	word32 r13
l00002F8A:
	branch Mem35[r11_r10 + 0xCC<32>:word16] >u r9 l00002FB8
l00002FB4_thunk_fn00002FB6:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	byte stackArg4 = <invalid>
	word16 stackArg8 = <invalid>
	word16 stackArg10 = <invalid>
	fn00002FB6(SEQ(r11, r10), r0, r4, r6, r12, r13, stackArg0, stackArg4, stackArg8, stackArg10)
	return
l00002FB4_thunk_fn00002FB6:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	byte stackArg4 = <invalid>
	word16 stackArg8 = <invalid>
	word16 stackArg10 = <invalid>
	fn00002FB6(SEQ(r11, r10), r0, r4, r6, r12, r13, stackArg0, stackArg4, stackArg8, stackArg10)
	return
fn00002F8A_exit:


void fn00002FB6(word32 r11_r10, word16 r0, word16 r4, word16 r6, word32 r12, word32 r13, word32 dwArg00, byte bArg04, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F48
//      fn000032CA
// MayUse:  r0:[0..15] r12:[8..23] r13:[0..31] r4:[0..15] r6:[0..7] Sequence r11:r10:[0..31] Stack +0000:[0..31] Stack +0004:[0..7] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r9 ra
// Preserved: sp
fn00002FB6_entry:
l00002FB6:
l00002FB8:
	branch wArg0A <=u Mem0[r11_r10 + 0xB4<32>:word16] l00002FC6
l00002FC4:
l00002FC6:
	word32 r12_21 = SEQ(SLICE(r12, word24, 8), SLICE(r6, byte, 0))
l00002FD2_thunk_fn00002FDA:
	fn00002FDA(r4, r0, r12_21, r13, dwArg00, bArg04)
	return
fn00002FB6_exit:


void fn00002FDA(word16 r4, word16 r6, word32 r12, word32 r13, word32 dwArg00, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002FB6
//      fn0000300E
// MayUse:  r12:[0..7] r13:[0..31] r4:[0..15] r6:[0..15] Stack +0000:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r3 r4 r6 r9
// Preserved: sp
fn00002FDA_entry:
l00002FDA:
	word32 r1_r0_8 = CONVERT(r4, word16, word32) + r13
	word32 r3_r2_15 = CONVERT(r6, word16, int32) + r1_r0_8
	branch SLICE(r12, byte, 0) != Mem0[r3_r2_15:byte] l00003004
l00002FE6_thunk_fn00003004:
	fn00003004()
	return
l00002FE8:
	word16 r3_39 = SLICE(r3_r2_15 + 0xFFFFFFFF<32>, word16, 16)
	word16 r2_40 = SLICE(r3_r2_15, word16, 0) + 0xFFFF<16>
	branch bArg04 != Mem0[r3_r2_15 + 0xFFFFFFFF<32>:byte] l00003004
l00002FF0_thunk_fn00003004:
	fn00003004()
	return
l00002FF2:
	branch Mem0[dwArg00:byte] != Mem0[r1_r0_8:byte] l00003004
l00002FFA_thunk_fn00003004:
	fn00003004()
	return
l00002FFC:
	word16 r3_76 = SEQ(SLICE(r3_39, byte, 8), Mem0[r1_r0_8 + 1<32>:byte])
	word16 r2_78 = SEQ(SLICE(r2_40, byte, 8), Mem0[dwArg00 + 1<32>:byte])
l00002FFE_thunk_fn00003000:
	fn00003000(r1_r0_8, SEQ(r3_76, r2_78))
	return
fn00002FDA_exit:


void fn00003000(word32 r1_r0, word32 r3_r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn00002FDA
// MayUse:  Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r3 r4 r6 r9
// Preserved: sp
fn00003000_entry:
l00003000:
l00003000_thunk_fn00003002:
	fn00003002(r1_r0, r3_r2)
	return
fn00003000_exit:


void fn00003002(word32 r1_r0, word32 r3_r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F48
//      fn00003000
//      fn000032BE
// MayUse:  Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: CF r0 r1 r10 r11 r12 r2 r3 r4 r6 r9
// Preserved: LNZ sp
fn00003002_entry:
	bool Z
l00003002:
	branch Z l00003002_thunk_fn00003024
l00003002_thunk_fn00003024:
	fn00003024(r1_r0, r3_r2)
	return
l00003002_thunk_fn00003004:
	fn00003004()
	return
fn00003002_exit:


void fn00003004()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F48
//      fn00003002
//      fn00003078
// MayUse: 
// LiveOut:
// Trashed: CF r0 r1 r11 r4
// Preserved: sp
fn00003004_entry:
	word16 r5
	word16 r6
	word32 r12
	word32 r13
	word32 ra
l00003004:
l0000300C_thunk_fn0000300E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	byte stackArg4 = <invalid>
	word16 stackArg6 = <invalid>
	fn0000300E(r4, r5, r6, r12, r13, ra, stackArg0, stackArg4, stackArg6)
	return
fn00003004_exit:


void fn0000300E(word16 r4, word16 r5, word16 r6, word32 r12, word32 r13, word32 ra, word32 dwArg00, byte bArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn00002F48
// MayUse:  r12:[0..31] r13:[0..31] r4:[0..15] r5:[0..15] r6:[0..15] ra:[0..15] Stack +0000:[0..31] Stack +0004:[0..7] Stack +0006:[0..15]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r6 r7 r9
// Preserved: sp
fn0000300E_entry:
l0000300E:
	branch r4 >u SLICE(ra, word16, 0) l00002FD4
l00002FD4:
	branch r5 == 0<16> l00003012
l00002FD8_thunk_fn00002FDA:
	fn00002FDA(r4, r6, r12, r13, dwArg00, bArg04)
	return
l00003012:
l00003012_thunk_fn00003014:
	fn00003014(r6, wArg06)
	return
fn0000300E_exit:


void fn00003014(word16 r0, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000300E
//      fn000030EC
// MayUse:  r0:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: CFLNZ r0 r13 r7 r9
// Preserved: sp
fn00003014_entry:
l00003014:
	branch wArg06 >=u r0 l0000301C
l00003018_thunk_fn0000301A:
	fn0000301A()
	return
l00003018_thunk_fn0000301A:
	fn0000301A()
	return
fn00003014_exit:


void fn0000301A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn00003014
// MayUse: 
// LiveOut:
// Trashed: CF r0 r13 r7 sp
// Preserved:
fn0000301A_entry:
l0000301A:
l0000301C:
	return
fn0000301A_exit:


void fn00003024(word32 r1_r0, word32 r3_r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F48
//      fn00003002
// MayUse:  Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r3 r4 r6 r9
// Preserved: sp
fn00003024_entry:
l00003024:
l00003030_thunk_fn00003078:
	fn00003078(r1_r0 + 2<32>, r3_r2 + 2<32>)
	return
fn00003024_exit:


word16 fn0000303E(word32 r1_r0, word32 r3_r2, word16 r4, word16 r9, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003078
//      fn000030F2
// MayUse:  r4:[0..7] r9:[0..7] Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r11 r12 r9
// Trashed: LNZ r0 r1 r11 r12 r2 r3 r4 r6 r9
// Preserved: CF sp
fn0000303E_entry:
l0000303E:
	branch SLICE(r9, byte, 0) != SLICE(r4, byte, 0) l00003040_thunk_fn000030BE
l00003040_thunk_fn000030BE:
	word16 r11_43
	word32 r12_44
	word16 r9_49 = fn000030BE(out r11_43, out r12_44)
	r11Out = r11_43
	r12Out = r12_44
	return r9_49
l00003040_thunk_fn00003042:
	word16 r11_63
	word32 r12_64
	word16 r9_69 = fn00003042(r1_r0, r3_r2, out r11_63, out r12_64)
	r11Out = r11_63
	r12Out = r12_64
	return r9_69
fn0000303E_exit:


word16 fn00003042(word32 r1_r0, word32 r3_r2, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000303E
//      fn00003078
// MayUse:  Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r11 r12 r9
// Trashed: LNZ r0 r1 r11 r12 r2 r3 r4 r6 r9
// Preserved: CF sp
fn00003042_entry:
	word16 r9
	word16 r11
	word32 r12
l00003042:
	byte v8_13 = Mem0[r1_r0 + 4<32>:byte]
	word16 r9_15 = SEQ(SLICE(r9, byte, 8), v8_13)
	branch v8_13 != Mem0[r3_r2 + 4<32>:byte] l000030C6
l000030C6:
l000030CC_thunk_fn000030BE:
	word16 r11_29
	word32 r12_30
	word16 r9_35 = fn000030BE(out r11_29, out r12_30)
	r11Out = r11_29
	r12Out = r12_30
	return r9_35
l00003048_thunk_fn0000304A:
	fn0000304A(SEQ(r1, r0), SEQ(r3, r2))
	r11Out = r11
	r12Out = r12
	return r9_15
fn00003042_exit:


void fn0000304A(word32 r1_r0, word32 r3_r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn00003078
// MayUse:  Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r11 r12 r2 r3 r4 r6 r9
// Preserved: r10 sp
fn0000304A_entry:
l0000304A:
	branch Mem0[r1_r0 + 5<32>:byte] != Mem0[r3_r2 + 5<32>:byte] l000030CE
l000030CE:
l000030D4_thunk_fn00003086:
	word16 r11_162
	word32 r12_163
	fn00003086(out r11_162, out r12_163)
	return
l00003052:
	branch Mem0[r1_r0 + 6<32>:byte] != Mem0[r3_r2 + 6<32>:byte] l000030D6
l000030D6:
l000030DC_thunk_fn00003086:
	word16 r11_164
	word32 r12_165
	fn00003086(out r11_164, out r12_165)
	return
l0000305A:
	branch Mem0[r1_r0 + 7<32>:byte] != Mem0[r3_r2 + 7<32>:byte] l000030DE
l000030DE:
l000030E4_thunk_fn00003086:
	word16 r11_166
	word32 r12_167
	fn00003086(out r11_166, out r12_167)
	return
l00003062:
l0000306E_thunk_fn00003070:
	fn00003070()
	return
fn0000304A_exit:


void fn00003070()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn0000304A
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r11 r12 r2 r3 r4 r6 r9
// Preserved: sp
fn00003070_entry:
	word16 LZ
	word16 r1
	word16 r0
	word16 r3
	word16 r2
l00003070:
	branch CONVERT(Test(ULT,LZ), bool, byte) == 0<8> l000030E6
l000030E6:
l000030E6_thunk_fn000030E8:
	fn000030E8()
	return
l00003076_thunk_fn00003078:
	fn00003078(SEQ(r1, r0), SEQ(r3, r2))
	return
fn00003070_exit:


void fn00003078(word32 r1_r0, word32 r3_r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003024
//      fn00003070
// MayUse:  Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: LNZ r0 r1 r11 r12 r2 r3 r4 r6 r9
// Preserved: CF sp
fn00003078_entry:
	word16 r4
	word16 r9
l00003078:
	branch Mem0[r1_r0 + 1<32>:byte] == Mem0[r3_r2 + 1<32>:byte] l00003032
l00003032:
	branch Mem0[r1_r0 + 2<32>:byte] != Mem0[r3_r2 + 2<32>:byte] l000030B6
l000030B6:
l000030BC_thunk_fn000030BE:
	word16 r11_106
	word32 r12_107
	fn000030BE(out r11_106, out r12_107)
	return
l0000303A:
	word16 r4_53 = SEQ(SLICE(r4, byte, 8), Mem0[r3_r2 + 3<32>:byte])
	word16 r9_56 = SEQ(SLICE(r9, byte, 8), Mem0[r1_r0 + 3<32>:byte])
l0000303C_thunk_fn0000303E:
	word16 r11_108
	word32 r12_109
	fn0000303E(r1_r0, r3_r2, r4_53, r9_56, out r11_108, out r12_109)
	return
l00003080:
l00003080_thunk_fn00003082:
	fn00003082()
	return
fn00003078_exit:


void fn00003082()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn00003078
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r12 r2 r3 r4 r6 r9
// Preserved: sp
fn00003082_entry:
l00003082:
l00003084_thunk_fn00003086:
	word16 r11_41
	word32 r12_42
	fn00003086(out r11_41, out r12_42)
	return
fn00003082_exit:


word16 fn00003086(ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn0000304A
//      fn00003082
//      fn000030BE
// MayUse: 
// LiveOut: r11 r12 r9
// Trashed: CFLNZ r0 r1 r12 r2 r3 r4 r6 r9
// Preserved: sp
fn00003086_entry:
l00003086_thunk_fn000030BE:
	word32 r12_43
	word16 r11_61
	word16 r9_38 = fn000030BE(out r11_61, out r12_43)
	r11Out = <invalid>
	r12Out = r12_43
	return r9_38
fn00003086_exit:


word16 fn000030BE(ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000303E
//      fn00003078
//      fn00003086
// MayUse: 
// LiveOut: r11 r12 r9
// Trashed: CFLNZ r0 r1 r11 r12 r2 r3 r4 r6 r9
// Preserved: sp
fn000030BE_entry:
l000030BE:
l000030C4_thunk_fn00003086:
	word16 r11_14
	word32 r12_20
	word16 r9_16 = fn00003086(out r11_14, out r12_20)
	r11Out = r11_14
	r12Out = r12_20
	return r9_16
fn000030BE_exit:


void fn000030E8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn00003070
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r12 r2 r3 r4 r6 r9
// Preserved: sp
fn000030E8_entry:
l000030E8:
l000030EA_thunk_fn00003086:
	word16 r11_19
	word32 r12_20
	fn00003086(out r11_19, out r12_20)
	return
fn000030E8_exit:


void fn000030EC(word16 r9, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003078
// MayUse:  r9:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: CFLNZ r0 r13 r7 r9
// Preserved: sp
fn000030EC_entry:
l000030EC:
l000030EE_thunk_fn00003014:
	fn00003014(r9, wArg06)
	return
fn000030EC_exit:


word32 fn000030F2(word32 r6_r5, word16 r4, word16 r8, word32 r12, word32 r13, word32 dwArg00, word32 dwArg04, word32 dwArg08, word16 wArg0C, word32 dwArg0E, word16 wArg12, word32 dwArg14, word32 dwArg40, word32 dwArg48, word32 dwArg60, word32 dwArg10010, word32 dwArg1003A, word16 wArg1FF92, ptr32 & r9_r8Out, ptr32 & r7Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn000030F2
//      fn000033F8
// MayUse:  r12:[0..31] r13:[0..31] r4:[0..15] r8:[0..15] Sequence r6:r5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..15] Stack +000E:[0..31] Stack +0012:[0..15] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0060:[0..31] Stack +10010:[0..31] Stack +1003A:[0..31] Stack +1FF92:[0..15]
// LiveOut: r11:r10 r12 r13 r7 r9:r8
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn000030F2_entry:
	word16 r7
	word16 r6 = SLICE(r6_r5, word16, 16)
	word16 r5 = SLICE(r6_r5, word16, 0)
l000030F2:
	word32 dwArg00_1063
	word32 r5_r4_1075
	word16 r6_55
	word16 r7_52
	word32 r13_47
	word16 r7_13 = Mem8[r13 + 0x50<32>:word16]
	word32 r2_r1_19 = CONVERT(r7_13, word16, word32)
	word16 r10_24 = Mem22[r13 + 0x68<32>:word16]
	word16 r0_16 = r7_13
	word16 r2_20 = SLICE(r2_r1_19, word16, 16)
	word16 r11_25 = Mem14[r13 + 0xB4<32>:word16] + 0xFEFA<16> - r10_24
	word16 r3_119 = Mem22[r13 + 0xAC<32>:word16] - r10_24
	word32 dwArg00_1035 = dwArg00
	dwArg00_1035 = dwArg00 (alias)
	branch r10_24 != 0<16> l00003182
l00003122:
	r3_119 = r3_119 | r11_25
	dwArg00_1063 = dwArg00_1035 (alias)
	branch r11_25 != 0<16> l0000312A
l00003128:
	r10_24 = r7_13
	dwArg00_1063 = dwArg00_1035 (alias)
l0000312A:
	dwArg00_1035 = dwArg00_1063 (alias)
	branch r0_16 <=u r3_119 l00003192
l00003132:
	word32 r9_r8_49 = Mem48[r13:word32]
	word16 wArg0E_960 = SLICE(dwArg0E, word16, 0)
	word16 wArg10_965 = SLICE(dwArg0E, word16, 16)
	word16 wArg08_932 = SLICE(dwArg08, word16, 0)
	word16 r2_120 = r2_20
	word32 r12_140 = r12
	r6_55 = r6 (alias)
	r13_47 = r13 (alias)
	r8 = SLICE(r9_r8_49, word16, 0) (alias)
	r7_52 = Mem48[r9_r8_49 + 4<32>:word16]
	branch r7_52 == 0<16> l00003138_thunk_fn00003348
l00003138_thunk_fn00003348:
	word16 r10_60
	word16 r11_61
	word32 r12_62
	word32 r13_63
	word16 r8_69
	word16 r9_70
	word16 r7_68 = fn00003348(r6_r5, r7_52, r13, out r8_69, out r9_70, out r10_60, out r11_61, out r12_62, out r13_63)
	r9_r8Out = <invalid>
	r7Out = r7_68
	r12Out = r12_62
	r13Out = r13_63
	return SEQ(r11_61, r10_60)
l0000313C:
	word16 r11_77 = Mem48[r13 + 0xB4<32>:word16]
	branch r10_24 >=u r7_52 l00003142_thunk_fn000034DE
l00003142_thunk_fn000034DE:
	fn000034DE()
l00003146:
	branch r10_24 != 0<16> l00003698
l00003698:
	branch r10_24 <=u 0<16> l000036AA
l0000369A:
	r2_120 = Mem48[r12 + 0x50<32>:word16]
	branch CONVERT(r2_120, word16, word32) < Mem48[r12 + 0x98<32>:word32] l000036A6_thunk_fn00003A32
l000036A6_thunk_fn00003A32:
	word16 r1_1110
	word16 r2_1111
	word16 r3_1112
	word16 r4_1113
	word16 r5_1114
	word16 r6_1115
	word16 r7_1116
	word16 r8_1117
	word16 r9_1118
	word16 r10_1119
	word16 r11_1120
	word32 r12_1121
	word32 r13_1122
	word32 ra_1123
	fn00003A32(out r1_1110, out r2_1111, out r3_1112, out r4_1113, out r5_1114, out r6_1115, out r7_1116, out r8_1117, out r9_1118, out r10_1119, out r11_1120, out r12_1121, out r13_1122, out ra_1123)
	r9_r8Out = <invalid>
	r7Out = r7_52
	r12Out = r12
	r13Out = r13
	return SEQ(r11_77, r10_24)
l000036AA:
	word16 r7_271
	word16 r0_270
	dwArg08_958 = dwArg08 (alias)
	word32 dwArg0C_961 = SEQ(wArg0E_960, wArg0C)
	word32 dwArg10_962 = SEQ(wArg12, wArg10_965)
	branch r10_24 >=u r7_52 l000036D2
l000036D2:
	branch r7_52 == 0<16> l00003726
l000036D6:
	dwArg10_962 = SEQ(wArg12, wArg10_965) (alias)
	branch r10_24 <=u r7_52 l00003B88
l00003B88:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word16 stackArg12 = <invalid>
	word32 stackArg14 = <invalid>
	word16 stackArg18 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg96 = <invalid>
	word32 stackArg65552 = <invalid>
	word32 stackArg65594 = <invalid>
	word16 stackArg130962 = <invalid>
	word32 r13_128
	word16 r7_129
	word32 r9_r8_1079
	word32 r11_r10_1080 = fn000030F2(r6_r5, r4_136, r8_139, SEQ(r3_119, r2_120), r13, stackArg0, stackArg4, stackArg8, stackArg12, stackArg14, stackArg18, stackArg20, stackArg64, stackArg72, stackArg96, stackArg65552, stackArg65594, stackArg130962, out r9_r8_1079, out r7_129, out r12_140, out r13_128)
	word16 r8_139 = SLICE(r9_r8_1079, word16, 0)
	word16 r0_144 = Mem48[r12_140 + 0xB4<32>:word16]
	branch r0_144 <u 0x105<16> l0000372C
l0000372C:
	branch r0_144 == 0x105<16> l0000372C_thunk_fn00003780
l0000372C_thunk_fn00003780:
	word16 r10_150
	word16 r11_151
	word32 r12_152
	word32 r13_153
	word16 r8_160
	word16 r9_161
	word16 r7_159 = fn00003780(out r8_160, out r9_161, out r10_150, out r11_151, out r12_152, out r13_153)
	r9_r8Out = <invalid>
	r7Out = r7_159
	r12Out = r12_152
	r13Out = r13_153
	return SEQ(r11_151, r10_150)
l0000372C_thunk_fn0000372E:
	word16 r10_170
	word16 r11_171
	word32 r12_172
	word32 r13_173
	word16 r7_178
	word16 r8_179
	word16 r9_180
	word16 r1_1160
	word16 r2_1161
	word16 r3_1162
	word16 r4_1163
	word16 r5_1164
	fn0000372E(out r1_1160, out r2_1161, out r3_1162, out r4_1163, out r5_1164, out r7_178, out r8_179, out r9_180, out r10_170, out r11_171, out r12_172, out r13_173)
	r9_r8Out = <invalid>
	r7Out = r7_178
	r12Out = r12_172
	r13Out = r13_173
	return SEQ(r11_171, r10_170)
l0000372A_thunk_fn0000372E:
	word16 r10_188
	word16 r11_189
	word32 r12_190
	word32 r13_191
	word16 r7_196
	word16 r8_197
	word16 r9_198
	word16 r1_1137
	word16 r2_1138
	word16 r3_1139
	word16 r4_1140
	word16 r5_1141
	fn0000372E(out r1_1137, out r2_1138, out r3_1139, out r4_1140, out r5_1141, out r7_196, out r8_197, out r9_198, out r10_188, out r11_189, out r12_190, out r13_191)
	r9_r8Out = <invalid>
	r7Out = r7_196
	r12Out = r12_190
	r13Out = r13_191
	return SEQ(r11_189, r10_188)
l00003B9A:
	branch wArg08_932 == 0<16> l00003B80_in_fn000030F2
l00003B80_in_fn000030F2:
	r9_r8Out = <invalid>
	r7Out = wArg0C
	r12Out = r12_140
	r13Out = dwArg0E
	return r11_r10_1080
l00003BA0:
	word16 r1_214 = Mem48[r12_140 + 0xAC<32>:word16]
	branch r0_144 == 0<16> l00003C66
l00003C66:
	branch r1_214 <u 2<16> l00003D10
l00003D10:
	Mem221[r12_140 + 0x240C<32>:word16] = 2<16>
	branch wArg08_932 != 4<16> l00003D1A_thunk_fn00003C76
l00003D1A_thunk_fn00003C76:
	word32 r12_225 = fn00003C76()
	r9_r8Out = <invalid>
	r7Out = r7_129
	r12Out = r12_225
	r13Out = r13_128
	return r11_r10_1080
l00003D1A_thunk_fn00003D1C:
	word32 r12_229 = fn00003D1C()
	r9_r8Out = <invalid>
	r7Out = r7_129
	r12Out = r12_229
	r13Out = r13_128
	return r11_r10_1080
l00003C6C:
	Mem240[r12_140 + 0x240C<32>:word16] = r1_214
l00003C6C_thunk_fn00003C70:
	word32 r12_243
	word16 r0_1165
	word16 r1_1166
	word16 r2_1167
	word16 r3_1168
	word16 r4_1169
	word16 r5_1170
	word16 r6_1171
	word16 r7_1172
	word16 r8_1173
	word16 r9_1174
	word16 r10_1175
	word16 r11_1176
	word32 r13_1177
	fn00003C70(out r0_1165, out r1_1166, out r2_1167, out r3_1168, out r4_1169, out r5_1170, out r6_1171, out r7_1172, out r8_1173, out r9_1174, out r10_1175, out r11_1176, out r12_243, out r13_1177)
	r9_r8Out = <invalid>
	r7Out = r7_129
	r12Out = r12_243
	r13Out = r13_128
	return r11_r10_1080
l00003BA8:
	branch r0_144 >=u 2<16> l00003BAA_thunk_fn000037D8
l00003BAA_thunk_fn000037D8:
	word32 r12_257
	word32 r13_258
	word16 r7_263 = fn000037D8(r11_r10_1080, r9_r8_1079, r0_144, r7_129, r13_128, out r12_257, out r13_258)
	r9_r8Out = <invalid>
	r7Out = r7_263
	r12Out = r12_257
	r13Out = r13_258
	return r11_r10_1080
l00003BAE:
l000036E4:
	r7_271 = r7_52 - r10_24
	r0_270 = r10_24
	r10_24 = r7_271
l000036AE:
	branch r10_24 == 0<16> l00003726
l000036B2:
	r7_271 = r10_24
	r0_270 = 0<16>
l000036EA:
	Mem290[r13 + 4<32>:word16] = r0_270
	word32 r5_r4_297 = Mem296[r13:word32]
	word32 r13_309
	fn0000DB24(SEQ(r3_119, r2_120), r5_r4_297, r13, out r13_309)
	word16 r5_304 = SLICE(r5_r4_297, word16, 16)
	word16 r4_305 = SLICE(r5_r4_297, word16, 0)
	word32 r3_r2_302 = SEQ(r3_119, r2_120)
	word16 r0_316 = Mem299[Mem299[r13_309 + 0x38<32>:word32] + 0x18<32>:word16]
	branch r0_316 == 1<16> l00003704_thunk_fn00003B14
l00003704_thunk_fn00003B14:
	word16 r10_325
	word16 r11_326
	word32 r12_327
	word32 r13_328
	word16 r7_334
	word16 r8_335
	word16 r9_336
	word16 r1_1142
	word16 r2_1143
	word16 r3_1144
	word16 r4_1145
	word16 r5_1146
	word16 r6_1147
	word32 ra_1148
	fn00003B14(r3_r2_302, r4_305, r5_304, r10_24, r13_309, dwArg00_1035, dwArg04, dwArg08, dwArg0C_961, dwArg10_962, dwArg14, dwArg40, dwArg48, dwArg60, r10_24, dwArg10010, dwArg1003A, wArg1FF92, out r1_1142, out r2_1143, out r3_1144, out r4_1145, out r5_1146, out r6_1147, out r7_334, out r8_335, out r9_336, out r10_325, out r11_326, out r12_327, out r13_328, out ra_1148)
	r9_r8Out = <invalid>
	r7Out = r7_334
	r12Out = r12_327
	r13Out = r13_328
	return SEQ(r11_326, r10_325)
l00003708:
	branch r0_316 == 2<16> l0000370A_thunk_fn00003B36
l0000370A_thunk_fn00003B36:
	word16 r7_347
	word16 r1_1149
	word16 r2_1150
	word16 r3_1151
	word16 r4_1152
	word16 r5_1153
	word16 r6_1154
	word16 r8_1155
	word16 r9_1156
	word16 r10_1157
	word16 r11_1158
	word32 ra_1159
	fn00003B36(r0_316, r7_271, out r1_1149, out r2_1150, out r3_1151, out r4_1152, out r5_1153, out r6_1154, out r7_347, out r8_1155, out r9_1156, out r10_1157, out r11_1158, out ra_1159)
	r9_r8Out = <invalid>
	r7Out = r7_347
	r12Out = r12
	r13Out = r13_309
	return SEQ(r11_77, r10_24)
l0000370E:
	Mem360[r13_309:word32] = Mem299[r13_309:word32] + dwArg04
	Mem368[r13_309 + 8<32>:word32] = Mem360[r13_309 + 8<32>:word32] + dwArg04
l0000371C:
	Mem376[r12_140 + 0xAC<32>:word16] = Mem371[r12_140 + 0xAC<32>:word16]
l00003726:
l0000314C:
	Mem382[r13 + 0xB4<32>:word16] = r11_77
	word16 r10_381 = r10_24 + r11_77
	branch r11_77 <u 2<16> l000033B0
l000033B0:
	word32 r13_405 = fn0000DB44(SEQ(r3_119, r2_20) + Mem382[r13 + 0x60<32>:word32], SEQ(r11_77, r10_381) & 0xFFFF<32>, 0<16>, r13)
	word32 r11_r10_413 = SEQ(r11_77, r10_381) + Mem382[r13_405 + 0x2418<32>:word32]
	Mem416[r13_405 + 0x2418<32>:word32] = r11_r10_413
	r9_r8Out = <invalid>
	r7Out = r7
	r12Out = r12
	r13Out = r13
	return r11_r10_413
l00003160:
	r5_r4_1075 = SEQ(r5, r4) (alias)
	branch r11_77 <u 0x105<16> l00003240
l00003166:
	r5_r4_1075 = SEQ(r5, r4) (alias)
	branch Mem382[Mem382[r13:word32] + 4<32>:word16] == 0<16> l00003240
l0000316E:
	r10_24 = Mem382[r13 + 0x68<32>:word16]
	r0_16 = Mem382[r13 + 0x50<32>:word16]
	r11_25 = r11_77 - r10_24
	r3_119 = Mem382[r13 + 0xAC<32>:word16] - r10_24
	dwArg08 = dwArg08_958
	dwArg08 = dwArg08_958
	branch r10_24 == 0<16> l00003122
l00003182:
	dwArg00_1063 = dwArg00_1035 (alias)
	branch r10_24 != 0xFFFF<16> l0000312A
l00003186:
	r10_24 = 0xFFFE<16>
	branch r0_16 >u r3_119 l00003132
l00003192:
	word32 r3_r2_457 = Mem456[r13 + 0x60<32>:word32]
	fn0000DB24(r3_r2_457, r2_r1_19 + r3_r2_457, r13, out r13_47)
	Mem486[r13_47 + 0xB0<32>:word16] = Mem476[r13_47 + 0xB0<32>:word16]
	word16 r3_487 = Mem486[r13_47 + 0xAC<32>:word16]
	Mem489[r13_47 + 0xAC<32>:word16] = r3_487
	Mem497[r13_47 + 0x98<32>:word32] = Mem489[r13_47 + 0x98<32>:word32]
	word32 r1_r0_1070 = Mem497[r13_47 + 0x78<32>:word32]
	word32 r5_r4_526 = (CONVERT(Mem497[r13_47 + 0x84<32>:word16], word16, word32) + 1<32>) * 2<32> - r1_r0_1070
	word16 r10_463 = r10_24 - r7_13
	word16 r2_498 = Mem497[r13_47 + 0x50<32>:word16]
	word16 r7_809 = SLICE(r5_r4_526, word16, 16)
l000031EE:
	word16 r0_533 = SLICE(r1_r0_1179, word16, 0)
	word16 r1_536 = SLICE(r1_r0_1179 + 0xFFFE<32>, word16, 16)
	word16 r6_540 = Mem539[r1_r0_1179 + 0xFFFE<32>:word16]
	branch r6_540 <u r2_498 l000031F6_thunk_fn000034CE
l000031F6_thunk_fn000034CE:
	word16 r10_551
	word16 r11_552
	word32 r12_553
	word32 r13_554
	word16 r7_560
	word16 r8_561
	word16 r9_562
	word16 r2_1089
	word16 r3_1090
	word16 r5_1092
	word16 r4_1091
	word16 r6_1093
	word32 ra_1094
	word16 r0_1087
	word16 r1_1088
	fn000034CE(r1_r0_1179 + 0xFFFE<32>, SEQ(r3_487, r2_498), r7_809, r8, r12, out r0_1087, out r1_1088, out r2_1089, out r3_1090, out r4_1091, out r5_1092, out r6_1093, out r7_560, out r8_561, out r9_562, out r10_551, out r11_552, out r12_553, out r13_554, out ra_1094)
	r9_r8Out = <invalid>
	r7Out = r7_560
	r12Out = r12_553
	r13Out = r13_554
	return SEQ(r11_552, r10_551)
l000031FA:
	Mem572[r1_r0_1179 + 0xFFFE<32>:word16] = r6_540
	r2_498 = r2_498 - r6_540
	r1_r0_1070 = SEQ(r1_536, r0_533 + 0xFFFE<16>) (alias)
	r1_r0_1179 = r1_r0_1070
	branch r1_r0_1179 + 0xFFFE<32> != r5_r4_526 l000031EE
l00003202:
	r5_r4_1075 = 0x20000<32> - SEQ(r7_809, r6_540)
	word16 r2_590 = r2_498 + 0xFFFF<16>
	word16 r4_605 = SLICE(r5_r4_1075, word16, 0)
	word16 r7_818 = SLICE(r5_r4_1075, word16, 16)
	word32 r1_r0_1072 = SEQ(r7_809, r6_540)
l0000321E:
	word16 r0_609 = SLICE(r1_r0_1178, word16, 0)
	word16 r1_612 = SLICE(r1_r0_1178 + 0xFFFE<32>, word16, 16)
	r6_55 = Mem615[r1_r0_1178 + 0xFFFE<32>:word16]
	branch r6_55 <u r2_590 l00003226_thunk_fn0000347E
l00003226_thunk_fn0000347E:
	word16 r10_630
	word16 r11_631
	word32 r12_632
	word32 r13_633
	word16 r8_640
	word16 r9_641
	word16 r7_639 = fn0000347E(SEQ(r1_612, r7_818), SEQ(r3_487, r2_590), r8, r10_463, r12, r13_47, out r8_640, out r9_641, out r10_630, out r11_631, out r12_632, out r13_633)
	r9_r8Out = <invalid>
	r7Out = r7_639
	r12Out = r12_632
	r13Out = r13_633
	return SEQ(r11_631, r10_630)
l0000322A:
	Mem650[r1_r0_1178 + 0xFFFE<32>:word16] = r6_55
	r2_590 = r2_590 - r6_55
	r1_r0_1072 = SEQ(r1_612, r0_609 + 0xFFFE<16>) (alias)
	r1_r0_1178 = r1_r0_1072
	branch r1_r0_1178 + 0xFFFE<32> != r5_r4_1075 l0000321E
l00003232:
	word32 r9_r8_661 = Mem650[r13_47:word32]
	word16 r9_662 = SLICE(r9_r8_661, word16, 16)
	r7_52 = Mem650[r9_r8_661 + 4<32>:word16]
	branch r7_52 != 0<16> l0000323C_thunk_fn0000303E
l0000323C_thunk_fn0000303E:
	word16 r11_670
	word32 r12_671
	fn0000303E(r1_r0_1178 + 0xFFFE<32>, SEQ(r3_487, r2_590), r4_605, r9_662, out r11_670, out r12_671)
	r9_r8Out = <invalid>
	r7Out = r7_52
	r12Out = r12_671
	r13Out = r13_47
	return SEQ(r11_670, r10_463)
l00003240:
	word32 r3_r2_682 = Mem681[r13_47 + 0x2418<32>:word32]
	word32 r11_r10_683 = Mem681[r13_47 + 0x68<32>:word32]
	word16 r5_732 = SLICE(r5_r4_1075, word16, 16)
	word16 r2_687 = SLICE(r3_r2_682, word16, 0)
	word16 r11_684 = SLICE(r11_r10_683, word16, 16)
	word16 r10_685 = SLICE(r11_r10_683, word16, 0)
	branch r11_r10_683 <=u r3_r2_682 l00003280
l0000324C:
	word32 r1_r0_693 = CONVERT(Mem681[r13_47 + 0xB4<32>:word16], word16, word32)
	word32 r9_r8_698 = CONVERT(Mem681[r13_47 + 0xAC<32>:word16], word16, word32) + r1_r0_693
	word16 r8_700 = SLICE(r9_r8_698, word16, 0)
	branch r9_r8_698 <=u r3_r2_682 l0000325C_thunk_fn000034C8
l0000325C_thunk_fn000034C8:
	word16 r10_708
	word16 r11_709
	word32 r12_710
	word32 r13_711
	word16 r7_717
	word16 r8_718
	word16 r9_719
	word16 r0_1095
	word16 r1_1096
	word16 r2_1097
	word16 r3_1098
	word16 r4_1099
	word16 r5_1100
	word16 r6_1101
	word32 ra_1102
	fn000034C8(r1_r0_693, r2_687, r7_52, r8_700, r12, out r0_1095, out r1_1096, out r2_1097, out r3_1098, out r4_1099, out r5_1100, out r6_1101, out r7_717, out r8_718, out r9_719, out r10_708, out r11_709, out r12_710, out r13_711, out ra_1102)
	r9_r8Out = <invalid>
	r7Out = r7_717
	r12Out = r12_710
	r13Out = r13_711
	return SEQ(r11_709, r10_708)
l00003260:
	word32 r9_r8_726 = r9_r8_698 - r11_r10_683
	branch r11_r10_683 <u 0x102<32> l00003268_thunk_fn00003540
l00003268_thunk_fn00003540:
	word16 r10_742
	word16 r11_743
	word32 r12_744
	word32 r13_745
	word16 r7_751
	word16 r8_752
	word16 r9_753
	word16 r0_1103
	word16 r1_1104
	word16 r2_1105
	word16 r3_1106
	word16 r4_1107
	word16 r5_1108
	word16 r6_1109
	fn00003540(r11_r10_683, r3_r2_682, r5_r4_1075, r7_52, r12, r13_47, out r0_1103, out r1_1104, out r2_1105, out r3_1106, out r4_1107, out r5_1108, out r6_1109, out r7_751, out r8_752, out r9_753, out r10_742, out r11_743, out r12_744, out r13_745)
	r9_r8Out = <invalid>
	r7Out = r7_751
	r12Out = r12_744
	r13Out = r13_745
	return SEQ(r11_743, r10_742)
l0000326C:
	Mem781[fn0000DB44(Mem681[r13_47 + 0x60<32>:word32] + r9_r8_726, SEQ(r6_55, r5_732), 0<16>, r13_47) + 0x2418<32>:word32] = r9_r8_726 + SEQ(r6_55, r5_732)
	r11_684 = r6_55 (alias)
	r10_685 = r5_732 (alias)
l00003280:
	r9_r8Out = <invalid>
	r7Out = r7
	r12Out = r12
	r13Out = r13
	return SEQ(r11_684, r10_685)
fn000030F2_exit:


void fn000032BE(word32 r1_r0, word32 r3_r2, word32 r8_r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000032CA
// MayUse:  Sequence r1:r0:[0..31] Sequence r3:r2:[0..31] Sequence r8:r7:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r3 r4 r6 r7 r8 r9
// Preserved: sp
fn000032BE_entry:
	word16 r10
	word32 r12
	word32 r13
	word16 r1 = SLICE(r1_r0, word16, 16)
	word16 r8 = SLICE(r8_r7, word16, 16)
	word16 r0 = SLICE(r1_r0, word16, 0)
l000032BE:
	branch r1 == 0<16> l000032C0_thunk_fn00003002
l000032C0_thunk_fn00003002:
	fn00003002(r1_r0, r3_r2)
	return
l000032C4:
l000032C8_thunk_fn000032CA:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	byte stackArg4 = <invalid>
	word16 stackArg8 = <invalid>
	word16 stackArg10 = <invalid>
	fn000032CA(SEQ(r11, r10), r0, r1, r8 + 2<16>, r12, r13, stackArg0, stackArg4, stackArg8, stackArg10)
	return
fn000032BE_exit:


void fn000032CA(word32 r11_r10, word16 r0, word16 r1, word16 r8, word32 r12, word32 r13, word32 dwArg00, byte bArg04, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000032BE
//      fn000033F8
// MayUse:  r0:[0..15] r1:[0..15] r12:[0..31] r13:[0..31] r8:[0..15] Sequence r11:r10:[0..31] Stack +0000:[0..31] Stack +0004:[0..7] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: r13 sp
fn000032CA_entry:
	word16 r7
	word16 r10 = SLICE(r11_r10, word16, 0)
	word16 r11 = SLICE(r11_r10, word16, 16)
l000032CA:
	word16 r0_17 = __a_shift<word16,word16>(r0, r10)
	Mem20[r13 + 0x80<32>:word16] = r0_17
	word32 r5_r4_30 = CONVERT(r0_17, word16, word32) * 2<32> + Mem20[r13 + 0x78<32>:word32]
	word16 r2_34 = Mem20[r13 + 0x58<32>:word16]
	word32 r7_r6_38 = Mem20[r13 + 0x70<32>:word32]
	Mem49[CONVERT(r2_34, word16, word32) * 2<32> + r7_r6_38:word16] = Mem20[r5_r4_30:word16]
	Mem50[r5_r4_30:word16] = r8 & r2_34
	Mem54[r13 + 0x240C<32>:word16] = r1 + 1<16>
	word16 r4_32 = SLICE(r5_r4_30, word16, 0)
	word16 r6_45 = SLICE(r7_r6_38, word16, 0)
	branch r11 <u 2<16> l0000330A_thunk_fn000032BE
l0000330A_thunk_fn000032BE:
	fn000032BE(SEQ(r1, r0), SEQ(r3, r2), SEQ(r8, r7))
	return
l0000330C:
l0000330C_thunk_fn00002FB6:
	fn00002FB6(r11_r10, r0_17, r4_32, r6_45, r12, r13, dwArg00, bArg04, wArg08, wArg0A)
	return
fn000032CA_exit:


void fn00003338(word32 r1_r0, word32 r5_r4, word32 r9_r8, word16 r6, word16 r7, word32 r12, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg08, word16 wArg0C, word32 dwArg26, word32 dwArg2A, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg56, word32 dwArg5A, word32 dwArgF4, word16 wArg0202, word16 wArg0206)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
// MayUse:  r12:[0..31] r13:[0..31] r6:[0..15] r7:[0..15] ra:[0..31] Sequence r1:r0:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +0026:[0..31] Stack +002A:[0..31] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0056:[0..31] Stack +005A:[0..31] Stack +00F4:[0..31] Stack +0202:[0..15] Stack +0206:[0..15]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00003338_entry:
	word16 r0 = SLICE(r1_r0, word16, 0)
	word16 r5 = SLICE(r5_r4, word16, 16)
l00003338:
	word32 r6_r5_120 = SEQ(r6, r5)
	branch r0 == 2<16> l00003380
l00003380:
	word32 r6_r5_123
	word32 r11_r10_124
	word32 r3_r2_125
	word32 r7_r6_126
	word16 r4_127
	word32 ra_128
	Mem46[r9_r8 + 0x60<32>:word32] = fn0000CAF8(r1_r0, r5_r4, r5_r4, r7, r7, r13, ra, wArg00, dwArg02, wArg06, dwArg08, wArg0C, dwArg26, dwArg2A, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg56, dwArg5A, dwArgF4, wArg0202, wArg0206, out r11_r10_124, out r3_r2_125, out r6_r5_123, out r7_r6_126, out r9_r8, out r4_127, out r12, out r13, out ra_128)
	r7 = <invalid>
	r6_r5_120 = r6_r5_123 (alias)
l0000333C:
	Mem60[r9_r8:word32] = Mem50[r9_r8:word32] + r12
	Mem68[r9_r8 + 8<32>:word32] = r12 + Mem60[r9_r8 + 8<32>:word32]
l00003346_thunk_fn00003348:
	word16 r8_129
	word16 r9_130
	word16 r10_131
	word16 r11_132
	word32 r12_133
	word32 r13_134
	fn00003348(r6_r5_120, r7, r13, out r8_129, out r9_130, out r10_131, out r11_132, out r12_133, out r13_134)
	return
fn00003338_exit:


word16 fn00003348(word32 r6_r5, word16 r7, word32 r13, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003338
// MayUse:  r13:[0..31] r7:[0..15] Sequence r6:r5:[0..31]
// LiveOut: r10 r11 r12 r13 r7 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00003348_entry:
l00003348:
	word16 r11_29 = Mem0[r13 + 0xB4<32>:word16]
l0000334E_thunk_fn00002F4C:
	word32 r12_38
	word32 r13_39
	word16 r8_45
	word16 r9_46
	word16 r7_44 = fn00002F4C(SEQ(r11_29, r7), r6_r5, out r8_45, out r9_46, out r12_38, out r13_39)
	r8Out = r8_45
	r9Out = r9_46
	r10Out = r7
	r11Out = r11_29
	r12Out = r12_38
	r13Out = r13_39
	return r7_44
fn00003348_exit:


bool fn000033F8(word16 r4, word16 r6, word16 r9, word16 r11, word32 r12, word16 wArgFFEA, word32 dwArgFFEC, word16 wArgFFF0, word32 dwArgFFF8, word32 dwArgFFFC, word32 dwArg10028, word32 dwArg10030, word32 dwArg10048, word16 wArg1FFD4, word32 dwArg1FFF8, word32 dwArg20022, word16 wArg2FF7A, ptr32 & r3_r6Out, ptr32 & r9_r8Out, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004CD4
// MayUse:  r11:[0..15] r12:[0..31] r4:[0..15] r6:[0..15] r9:[0..15] Stack +10028:[0..31] Stack +10030:[0..31] Stack +10048:[0..31] Stack +1FFD4:[0..15] Stack +1FFF8:[0..31] Stack +20022:[0..31] Stack +2FF7A:[0..15] Stack +FFEA:[0..15] Stack +FFEC:[0..31] Stack +FFF0:[0..15] Stack +FFF8:[0..31] Stack +FFFC:[0..31]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3:r6 r4 r5 r7 r9:r8 ra sp
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn000033F8_entry:
	word32 ra
l000033F8:
	word32 r1_r0_16 = Mem13[r12 + 0xC<32>:word32]
	word32 r3_r2_18 = CONVERT(Mem13[r12 + 0x50<32>:word16], word16, word32)
	word16 r1_22 = SLICE(r1_r0_16 + 0xFFFB<32>, word16, 16)
	word16 r0_23 = SLICE(r1_r0_16, word16, 0) + 0xFFFB<16>
	word32 dwArgFFF0_231 = SEQ(r4, wArgFFF0)
	branch r3_r2_18 >=u r1_r0_16 + 0xFFFB<32> l00003416
l00003414:
	r3_r2_18 = SEQ(SLICE(r1_r0_16 + 0xFFFB<32>, word16, 16), SLICE(r1_r0_16, word16, 0) + 0xFFFB<16>) (alias)
l00003416:
	word32 r13_34 = Mem32[r12:word32]
	word16 r7_35 = Mem32[r13_34 + 4<32>:word16]
	word16 r2_59 = SLICE(r3_r2_18, word16, 0)
	word16 r10_122 = r7_35
	word16 r7_126 = Mem36[r13_34 + 0x10<32>:word16]
	branch Mem36[r12 + 0x2414<32>:word16] >> 0xD<16> >u r7_126 l0000389A
l0000389A:
	word32 r13_50 = Mem36[r12:word32]
	word16 r0_48 = Mem36[r12 + 0x50<32>:word16] + r7_126
	word16 r10_51 = Mem36[r13_50 + 4<32>:word16]
	word16 r8_52 = Mem36[r12 + 0xAC<32>:word16]
	branch r10_51 <u r7_126 l000034B4
l000038AA_thunk_fn00003480:
	word16 r0_62
	word16 r1_63
	word32 r13_64
	word16 r4_65
	word16 r5_66
	word16 r8_67
	word16 r10_68
	word16 r11_69
	word32 r12_70
	word16 r2_71
	word16 r3_72
	word16 r6_73
	word16 r7_74
	word16 r9_75
	word32 ra_76
	bool Z_82 = fn00003480(SEQ(r1_22, r7_126), r3_r2_18, r8_52, r10_51, r12, r13_50, out r0_62, out r1_63, out r2_71, out r3_72, out r4_65, out r5_66, out r6_73, out r7_74, out r8_67, out r9_75, out r10_68, out r11_69, out r12_70, out r13_64, out ra_76)
	r3_r6Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_62
	r1Out = r1_63
	r2Out = r2_71
	r4Out = r4_65
	r5Out = r5_66
	r7Out = r7_74
	r10Out = r10_68
	r11Out = r11_69
	r12Out = r12_70
	r13Out = r13_64
	raOut = ra_76
	return Z_82
l000038AE:
l000038AE_thunk_fn000034F2:
	word16 r0_86
	word16 r1_87
	word16 r10_88
	word16 r11_89
	word32 r12_90
	word32 r13_91
	word16 r2_92
	word16 r3_93
	word16 r4_94
	word16 r5_95
	word16 r6_96
	word16 r7_97
	word16 r8_98
	word16 r9_99
	bool Z_104 = fn000034F2(SEQ(r11 + 0x2A<16>, r10_51), r0_48, r2_59, r7_126, r8_52, r9, r12, r13_50, out r0_86, out r1_87, out r2_92, out r3_93, out r4_94, out r5_95, out r6_96, out r7_97, out r8_98, out r9_99, out r10_88, out r11_89, out r12_90, out r13_91)
	r3_r6Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_86
	r1Out = r1_87
	r2Out = r2_92
	r4Out = r4_94
	r5Out = r5_95
	r7Out = r7_97
	r10Out = r10_88
	r11Out = r11_89
	r12Out = r12_90
	r13Out = r13_91
	raOut = ra
	return Z_104
l00003432:
	word32 r3_r2_110 = CONVERT(r7_35, word16, word32)
	word16 r8_106 = Mem36[r12 + 0xAC<32>:word16]
	word16 r3_113 = SLICE(r3_r2_110, word16, 16)
	word16 r2_114 = SLICE(r3_r2_110, word16, 0)
	branch CONVERT(r8_106, word16, word32) + r3_r2_110 <u 0xFFFE<32> l00003456
l0000344C:
	r10_122 = r7_35 + r8_106
	branch r8_106 >=u r7_126 l00003456
l00003454:
	r7_126 = r8_106
l00003456:
	branch r7_126 >=u r8_106 l0000345C
l0000345A:
	r8_106 = r7_126
l0000345C:
	word32 dwArgFFF4_262 = SEQ(r7_35, r0_23)
	branch r7_126 >=u r0_23 l00003780
l00003460_thunk_fn0000402E:
	word16 r0_156
	word16 r1_157
	word16 r10_158
	word16 r11_159
	word32 r13_160
	word16 r2_161
	word16 r3_162
	word16 r4_163
	word16 r6_164
	word16 r7_165
	word16 r8_166
	word16 r9_167
	word32 ra_168
	word16 r5_169
	word32 r12_170
	bool Z_175 = fn0000402E(SEQ(r9, r8_106), r2_114, r6, r7_126, r10_122, r12, r13_34, wArgFFEA, dwArgFFEC, dwArgFFF0_231, dwArgFFF4_262, dwArgFFF8, dwArgFFFC, dwArg10028, dwArg10030, dwArg10048, wArg1FFD4, dwArg1FFF8, dwArg20022, wArg2FF7A, out r0_156, out r1_157, out r2_161, out r3_162, out r4_163, out r5_169, out r6_164, out r7_165, out r8_166, out r9_167, out r10_158, out r11_159, out r12_170, out r13_160, out ra_168)
	r3_r6Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_156
	r1Out = r1_157
	r2Out = r2_161
	r4Out = r4_163
	r5Out = r5_169
	r7Out = r7_165
	r10Out = r10_158
	r11Out = r11_159
	r12Out = r12_170
	r13Out = r13_160
	raOut = ra_168
	return Z_175
l00003464:
	word16 r1_178 = CONVERT(r7_126 == 0<16>, bool, int16)
	word16 r0_182 = CONVERT(r4 != 4<16>, bool, int16)
	word16 r1_186 = SEQ(SLICE(r1_178, byte, 8), SLICE(r1_178, byte, 0) & SLICE(r0_182, byte, 0))
	branch SLICE(r0_182, byte, 0) != 0<8> l00003856
l00003472_thunk_fn00003480:
	word16 r0_194
	word16 r1_195
	word32 r13_196
	word16 r4_197
	word16 r5_198
	word16 r8_199
	word16 r10_200
	word16 r11_201
	word32 r12_202
	word16 r2_203
	word16 r3_204
	word16 r6_205
	word16 r7_206
	word16 r9_207
	word32 ra_208
	bool Z_214 = fn00003480(SEQ(r1_186, r7_126), SEQ(r3_113, r4), r8_106, r10_122, r12, r13_34, out r0_194, out r1_195, out r2_203, out r3_204, out r4_197, out r5_198, out r6_205, out r7_206, out r8_199, out r9_207, out r10_200, out r11_201, out r12_202, out r13_196, out ra_208)
	r3_r6Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_194
	r1Out = r1_195
	r2Out = r2_203
	r4Out = r4_197
	r5Out = r5_198
	r7Out = r7_206
	r10Out = r10_200
	r11Out = r11_201
	r12Out = r12_202
	r13Out = r13_196
	raOut = ra_208
	return Z_214
fn000033F8_exit:
l00003476:
	branch CONVERT(r4 == 0<16>, bool, int16) != 0<16> l0000384C


word16 fn0000347E(word32 r1_r7, word32 r3_r2, word16 r8, word16 r10, word32 r12, word32 r13, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
// MayUse:  r10:[0..15] r12:[0..31] r13:[0..31] r8:[0..15] Sequence r1:r7:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r10 r11 r12 r13 r7 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000347E_entry:
l0000347E:
l0000347E_thunk_fn00003480:
	word32 ra_119
	word16 r6_118
	word16 r5_117
	word16 r4_116
	word16 r3_115
	word16 r2_114
	word16 r1_113
	word16 r0_112
	word32 r13_82
	word16 r8_85
	word16 r10_86
	word16 r11_87
	word32 r12_88
	word16 r7_92
	word16 r9_93
	fn00003480(r1_r7, r3_r2, r8, r10, r12, r13, out r0_112, out r1_113, out r2_114, out r3_115, out r4_116, out r5_117, out r6_118, out r7_92, out r8_85, out r9_93, out r10_86, out r11_87, out r12_88, out r13_82, out ra_119)
	r8Out = r8_85
	r9Out = r9_93
	r10Out = r10_86
	r11Out = r11_87
	r12Out = r12_88
	r13Out = r13_82
	return r7_92
fn0000347E_exit:


bool fn00003480(word32 r1_r7, word32 r3_r2, word16 r8, word16 r10, word32 r12, word32 r13, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn0000347E
// MayUse:  r10:[0..15] r12:[0..31] r13:[0..31] r8:[0..15] Sequence r1:r7:[0..15] Sequence r3:r2:[0..31]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn00003480_entry:
	word16 r9
	word16 r11
	word16 r6
	word32 ra
	word16 r0
	word16 r7 = SLICE(r1_r7, word16, 0)
	word16 r3 = SLICE(r3_r2, word16, 16)
	word16 r2 = SLICE(r3_r2, word16, 0)
l00003480:
	word16 r8_6 = r8 - r7
	bool Z_10 = SLICE(cond(r10 - r7), bool, 6)
	branch r10 != r7 l00003842
l00003842:
	word32 r5_r4_13 = Mem0[r13:word32]
	word16 r5_16 = SLICE(r5_r4_13, word16, 16)
	word16 r4_17 = SLICE(r5_r4_13, word16, 0)
	word32 r13_29
	word16 r1_28 = fn0000DB24(r3_r2, r5_r4_13, r13, out r13_29)
l0000384E:
	word16 r8_34 = Mem23[r12 + 0x50<32>:word16]
	Mem35[r12 + 0xAC<32>:word16] = r8_34
l00003856:
l0000385A_thunk_fn00003338:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word16 stackArg6 = <invalid>
	word32 stackArg8 = <invalid>
	word16 stackArg12 = <invalid>
	word32 stackArg38 = <invalid>
	word32 stackArg42 = <invalid>
	word32 stackArg46 = <invalid>
	word32 stackArg50 = <invalid>
	word32 stackArg54 = <invalid>
	word32 stackArg58 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg66 = <invalid>
	word32 stackArg86 = <invalid>
	word32 stackArg90 = <invalid>
	word32 stackArg244 = <invalid>
	word16 stackArg514 = <invalid>
	word16 stackArg518 = <invalid>
	fn00003338(SEQ(r1, r0), SEQ(r5, r4), SEQ(r9, r8), r6, r7, r12, r13, ra, stackArg0, stackArg2, stackArg6, stackArg8, stackArg12, stackArg38, stackArg42, stackArg46, stackArg50, stackArg54, stackArg58, stackArg62, stackArg66, stackArg86, stackArg90, stackArg244, stackArg514, stackArg518)
	r0Out = r8_34
	r1Out = r1_28
	r2Out = r2
	r3Out = r3
	r4Out = r4_17
	r5Out = r5_16
	r6Out = r6
	r7Out = r7
	r8Out = r8_34
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13_29
	raOut = ra
	return Z_10
l0000348A:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg12 = <invalid>
	word16 r3_178
	word16 r6_179
	word16 r7_180
	word16 r9_181
	word16 r10_182
	word16 r11_183
	word32 r12_184
	word32 r13_185
	word32 ra_186
	fn0000AF94(SEQ(r5, r4), SEQ(r9, r8), r6, r13, stackArg12, out r3_178, out r6_179, out r7_180, out r9_181, out r10_182, out r11_183, out r12_184, out r13_185, out ra_186)
	Mem67[Mem46[r3_r2 + 8<32>:word32] + Mem46[r3_r2 + 0x14<32>:word32] + 0xFFFC<32>:byte] = SLICE(r7, byte, 0)
	word32 r1_r0_74 = Mem67[r3_r2 + 8<32>:word32] + Mem67[r3_r2 + 0x14<32>:word32]
l000034B4:
	Mem84[r1_r0_74 + 0xFFFD<32>:byte] = SLICE(r7 >>u 8<8>, byte, 0)
	word32 r3_r2_86 = Mem84[r3_r2 + 0x14<32>:word32]
	word32 r1_r0_91 = Mem84[r3_r2 + 8<32>:word32] + r3_r2_86
	word16 r2_100 = SEQ(SLICE(r3_r2_86, byte, 8), SLICE(r7, byte, 0))
l000034C6_thunk_fn000034C8:
	word16 r0_106
	word16 r1_107
	word16 r10_108
	word16 r11_109
	word32 r12_110
	word32 r13_111
	word16 r2_112
	word16 r3_113
	word16 r4_114
	word16 r5_115
	word16 r6_116
	word16 r7_117
	word16 r8_118
	word16 r9_119
	word32 ra_120
	bool Z_125 = fn000034C8(r1_r0_91 + 0xFFFE<32>, r2_100, r7, r8_6, r3_r2, out r0_106, out r1_107, out r2_112, out r3_113, out r4_114, out r5_115, out r6_116, out r7_117, out r8_118, out r9_119, out r10_108, out r11_109, out r12_110, out r13_111, out ra_120)
	r0Out = r0_106
	r1Out = r1_107
	r2Out = r2_112
	r3Out = r3_113
	r4Out = r4_114
	r5Out = r5_115
	r6Out = r6_116
	r7Out = r7_117
	r8Out = r8_118
	r9Out = r9_119
	r10Out = r10_108
	r11Out = r11_109
	r12Out = r12_110
	r13Out = r13_111
	raOut = ra_120
	return Z_125
fn00003480_exit:


bool fn000034C8(word32 r1_r0, word16 r2, word16 r7, word16 r8, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003480
// MayUse:  r12:[0..31] r2:[0..7] r7:[0..15] r8:[0..15] Sequence r1:r0:[0..31]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn000034C8_entry:
l000034C8:
	Mem38[r1_r0:byte] = SLICE(r2, byte, 0)
	word32 r1_r0_40 = Mem38[r12 + 8<32>:word32]
	word32 r3_r2_41 = Mem38[r12 + 0x14<32>:word32]
l000034CC_thunk_fn000034CE:
	word16 r0_48
	word16 r1_49
	word16 r10_50
	word16 r11_51
	word32 r12_52
	word32 r13_53
	word16 r2_54
	word16 r3_55
	word16 r4_56
	word16 r5_57
	word16 r6_58
	word16 r7_59
	word16 r8_60
	word16 r9_61
	word32 ra_62
	bool Z_68 = fn000034CE(r1_r0_40, r3_r2_41, r7, r8, r12, out r0_48, out r1_49, out r2_54, out r3_55, out r4_56, out r5_57, out r6_58, out r7_59, out r8_60, out r9_61, out r10_50, out r11_51, out r12_52, out r13_53, out ra_62)
	r0Out = r0_48
	r1Out = r1_49
	r2Out = r2_54
	r3Out = r3_55
	r4Out = r4_56
	r5Out = r5_57
	r6Out = r6_58
	r7Out = r7_59
	r8Out = r8_60
	r9Out = r9_61
	r10Out = r10_50
	r11Out = r11_51
	r12Out = r12_52
	r13Out = r13_53
	raOut = ra_62
	return Z_68
fn000034C8_exit:


bool fn000034CE(word32 r1_r0, word32 r3_r2, word16 r7, word16 r8, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003480
//      fn000034C8
// MayUse:  r12:[0..31] r7:[0..15] r8:[0..15] Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn000034CE_entry:
	word16 r3 = SLICE(r3_r2, word16, 16)
l000034CE:
	Mem22[r1_r0 + r3_r2 + 0xFFFFFFFF<32>:byte] = SLICE(r7 >>u 8<8>, byte, 0)
	word32 r11_r10_24 = Mem22[r12:word32]
	word16 r11_33
	word16 r7_37
	word32 ra_38
	word16 r4_130
	word16 r5_131
	word16 r6_132
	fn0000B09C(SEQ(r3, r7 >>u 8<8>), SLICE(r11_r10_24, word16, 16), out r4_130, out r5_131, out r6_132, out r7_37, out r11_33, out ra_38)
	word32 r3_r2_28 = SEQ(r3, r7 >>u 8<8>)
	word16 r10_26 = SLICE(r11_r10_24, word16, 0)
	word16 r0_44 = Mem22[r3_r2_28 + 0x14<32>:word16]
	word16 r9_46 = Mem22[SEQ(r11_33, r10_26) + 0x10<32>:word16]
	branch r0_44 >=u r9_46 l000034EE_thunk_fn000034F2
l000034EE_thunk_fn000034F2:
	word16 r0_53
	word16 r1_54
	word16 r10_55
	word16 r11_56
	word32 r12_57
	word32 r13_58
	word16 r2_59
	word16 r3_60
	word16 r4_61
	word16 r5_62
	word16 r6_63
	word16 r7_64
	word16 r8_65
	word16 r9_66
	bool Z_71 = fn000034F2(SEQ(r11_33, r10_26), r0_44, r7 >>u 8<8>, r7_37, r8, r9_46, r12, r3_r2_28, out r0_53, out r1_54, out r2_59, out r3_60, out r4_61, out r5_62, out r6_63, out r7_64, out r8_65, out r9_66, out r10_55, out r11_56, out r12_57, out r13_58)
	r0Out = r0_53
	r1Out = r1_54
	r2Out = r2_59
	r3Out = r3_60
	r4Out = r4_61
	r5Out = r5_62
	r6Out = r6_63
	r7Out = r7_64
	r8Out = r8_65
	r9Out = r9_66
	r10Out = r10_55
	r11Out = r11_56
	r12Out = r12_57
	r13Out = r13_58
	raOut = <invalid>
	return Z_71
l000034EE_thunk_fn000034F0:
	word16 r0_73
	word16 r1_74
	word16 r10_75
	word16 r11_76
	word32 r12_77
	word32 r13_78
	word16 r2_79
	word16 r3_80
	word16 r4_81
	word16 r5_82
	word16 r6_83
	word16 r7_84
	word16 r8_85
	word16 r9_86
	bool Z_91 = fn000034F0(SEQ(r11_33, r10_26), r0_44, r7 >>u 8<8>, r7_37, r8, r12, r3_r2_28, out r0_73, out r1_74, out r2_79, out r3_80, out r4_81, out r5_82, out r6_83, out r7_84, out r8_85, out r9_86, out r10_75, out r11_76, out r12_77, out r13_78)
	r0Out = r0_73
	r1Out = r1_74
	r2Out = r2_79
	r3Out = r3_80
	r4Out = r4_81
	r5Out = r5_82
	r6Out = r6_83
	r7Out = r7_84
	r8Out = r8_85
	r9Out = r9_86
	r10Out = r10_75
	r11Out = r11_76
	r12Out = r12_77
	r13Out = r13_78
	raOut = <invalid>
	return Z_91
fn000034CE_exit:


void fn000034DE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003480
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn000034DE_exit:
fn000034DE_entry:
l000034DE:


bool fn000034F0(word32 r11_r10, word16 r0, word16 r2, word16 r7, word16 r8, word32 r12, word32 r13, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn000034CE
// MayUse:  r0:[0..15] r12:[0..31] r13:[0..31] r2:[0..15] r7:[0..15] r8:[0..15] Sequence r11:r10:[0..31]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn000034F0_entry:
l000034F0:
l000034F0_thunk_fn000034F2:
	word16 r0_13
	word16 r1_14
	word16 r10_15
	word16 r11_16
	word32 r12_17
	word32 r13_18
	word16 r2_19
	word16 r3_20
	word16 r4_21
	word16 r5_22
	word16 r6_23
	word16 r7_24
	word16 r8_25
	word16 r9_26
	bool Z_31 = fn000034F2(r11_r10, r0, r2, r7, r8, r0, r12, r13, out r0_13, out r1_14, out r2_19, out r3_20, out r4_21, out r5_22, out r6_23, out r7_24, out r8_25, out r9_26, out r10_15, out r11_16, out r12_17, out r13_18)
	r0Out = r0_13
	r1Out = r1_14
	r2Out = r2_19
	r3Out = r3_20
	r4Out = r4_21
	r5Out = r5_22
	r6Out = r6_23
	r7Out = r7_24
	r8Out = r8_25
	r9Out = r9_26
	r10Out = r10_15
	r11Out = r11_16
	r12Out = r12_17
	r13Out = r13_18
	return Z_31
fn000034F0_exit:


bool fn000034F2(word32 r11_r10, word16 r0, word16 r2, word16 r7, word16 r8, word16 r9, word32 r12, word32 r13, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn000034CE
// MayUse:  r0:[0..15] r12:[0..31] r13:[0..31] r2:[0..15] r7:[0..15] r8:[0..15] r9:[0..15] Sequence r11:r10:[0..31]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn000034F2_entry:
	word16 r11 = SLICE(r11_r10, word16, 16)
l000034F2:
	branch r9 == 0<16> l00003532
l000034F6:
	word32 r2_r1_6 = CONVERT(r9, word16, word32)
l000034F8:
	word32 r13_26
	fn0000DB24(Mem9[r11_r10 + 0xC<32>:word32], Mem9[r13 + 0x10<32>:word32], r13, out r13_26)
	Mem41[r11_r10 + 0xC<32>:word32] = Mem19[r11_r10 + 0xC<32>:word32] + r2_r1_6
	Mem48[r13_26 + 0x10<32>:word32] = Mem41[r13_26 + 0x10<32>:word32] + r2_r1_6
	Mem57[r11_r10 + 0x14<32>:word32] = Mem48[r11_r10 + 0x14<32>:word32] + r2_r1_6
	Mem62[r11_r10 + 0x10<32>:word16] = Mem57[r11_r10 + 0x10<32>:word16]
	word32 r1_r0_63 = Mem62[r13_26 + 0x14<32>:word32]
	Mem67[r13_26 + 0x14<32>:word32] = r1_r0_63
	r0 = SLICE(r1_r0_63, word16, 0) (alias)
	r2 = SLICE(r2_r1_6 - r1_r0_63, word16, 0) (alias)
	branch r1_r0_63 != 0<32> l00003532
l0000352E:
	word32 r1_r0_72 = Mem67[r13_26 + 8<32>:word32]
	Mem75[r13_26 + 0x10<32>:word32] = r1_r0_72
	r0 = SLICE(r1_r0_72, word16, 0) (alias)
l00003532:
	word32 r13_80 = Mem78[r12:word32]
	branch r8 == 0<16> l0000356E
l00003536_thunk_fn0000356E:
	word16 r0_93
	word16 r1_94
	word16 r10_95
	word16 r11_96
	word32 r13_97
	word16 r2_98
	word16 r3_99
	word16 r4_100
	word16 r5_101
	word16 r6_102
	word16 r8_103
	word16 r9_104
	word16 r7_105
	word32 r12_106
	bool Z_111 = fn0000356E(r0, r2, r7, r11, r12, r13_80, out r0_93, out r1_94, out r2_98, out r3_99, out r4_100, out r5_101, out r6_102, out r7_105, out r8_103, out r9_104, out r10_95, out r11_96, out r12_106, out r13_97)
	r0Out = r0_93
	r1Out = r1_94
	r2Out = r2_98
	r3Out = r3_99
	r4Out = r4_100
	r5Out = r5_101
	r6Out = r6_102
	r7Out = r7_105
	r8Out = r8_103
	r9Out = r9_104
	r10Out = r10_95
	r11Out = r11_96
	r12Out = r12_106
	r13Out = r13_97
	return Z_111
l00003538:
	word32 r11_r10_112 = CONVERT(r8, word16, word32)
	word32 r3_r2_113 = Mem78[r13_80 + 0xC<32>:word32]
	word32 r5_r4_114 = Mem78[r12 + 0x60<32>:word32]
l0000353C_thunk_fn00003540:
	word16 r0_121
	word16 r1_122
	word16 r10_123
	word16 r11_124
	word32 r12_125
	word32 r13_126
	word16 r2_127
	word16 r3_128
	word16 r4_129
	word16 r5_130
	word16 r6_131
	word16 r7_132
	word16 r8_133
	word16 r9_134
	bool Z_139 = fn00003540(r11_r10_112, r3_r2_113, r5_r4_114, r7, r12, r13_80, out r0_121, out r1_122, out r2_127, out r3_128, out r4_129, out r5_130, out r6_131, out r7_132, out r8_133, out r9_134, out r10_123, out r11_124, out r12_125, out r13_126)
	r0Out = r0_121
	r1Out = r1_122
	r2Out = r2_127
	r3Out = r3_128
	r4Out = r4_129
	r5Out = r5_130
	r6Out = r6_131
	r7Out = r7_132
	r8Out = r8_133
	r9Out = r9_134
	r10Out = r10_123
	r11Out = r11_124
	r12Out = r12_125
	r13Out = r13_126
	return Z_139
fn000034F2_exit:


bool fn00003540(word32 r11_r10, word32 r3_r2, word32 r5_r4, word16 r7, word32 r12, word32 r13, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn000034F2
// MayUse:  r12:[0..31] r13:[0..31] r7:[0..15] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00003540_entry:
	word16 r2 = SLICE(r3_r2, word16, 0)
l00003540:
	word32 r13_125
	fn0000DB24(r3_r2, r5_r4 + Mem0[r12 + 0x98<32>:word32], r13, out r13_125)
	word32 r13_53 = Mem42[r12:word32]
	Mem62[r13_53 + 0xC<32>:word32] = Mem42[r13_53 + 0xC<32>:word32] + r11_r10
	Mem66[r13_53 + 0x10<32>:word16] = Mem62[r13_53 + 0x10<32>:word16]
	Mem74[r13_53 + 0x14<32>:word32] = Mem66[r13_53 + 0x14<32>:word32] + r11_r10
	word32 r1_r0_75 = Mem74[r12 + 0x98<32>:word32]
	word32 r11_r10_79 = r11_r10 + r1_r0_75
	Mem82[r12 + 0x98<32>:word32] = r11_r10_79
	word16 r0_78 = SLICE(r1_r0_75, word16, 0)
	word16 r11_80 = SLICE(r11_r10_79, word16, 16)
l0000356C_thunk_fn0000356E:
	word16 r0_87
	word16 r1_88
	word16 r10_89
	word16 r11_90
	word32 r13_91
	word16 r2_92
	word16 r3_93
	word16 r4_94
	word16 r5_95
	word16 r6_96
	word16 r8_97
	word16 r9_98
	word16 r7_99
	word32 r12_100
	bool Z_105 = fn0000356E(r0_78, r2, r7, r11_80, r12, r13_53, out r0_87, out r1_88, out r2_92, out r3_93, out r4_94, out r5_95, out r6_96, out r7_99, out r8_97, out r9_98, out r10_89, out r11_90, out r12_100, out r13_91)
	r0Out = r0_87
	r1Out = r1_88
	r2Out = r2_92
	r3Out = r3_93
	r4Out = r4_94
	r5Out = r5_95
	r6Out = r6_96
	r7Out = r7_99
	r8Out = r8_97
	r9Out = r9_98
	r10Out = r10_89
	r11Out = r11_90
	r12Out = r12_100
	r13Out = r13_91
	return Z_105
fn00003540_exit:


bool fn0000356E(word16 r0, word16 r2, word16 r7, word16 r11, word32 r12, word32 r13, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn00003540
//      fn00003C70
//      fn00003C76
//      fn00003D1C
// MayUse:  r0:[0..15] r11:[0..15] r12:[0..31] r13:[0..31] r2:[0..15] r7:[0..15]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000356E_entry:
	word16 r1
	word16 r3
	word16 r4
	word16 r5
	word16 r6
	word16 r8
	word16 r9
	word16 wLoc06
	word32 dwLoc04
	word16 r10
l0000356E:
	word16 r10_5 = Mem0[r13 + 4<32>:word16]
	bool Z_8 = SLICE(cond(r7 - 0<16>), bool, 6)
	branch r7 != 0<16> l0000360A
l0000360A:
	word32 r9_r8_9 = Mem0[r13 + 0xC<32>:word32]
	word16 r9_64 = SLICE(r9_r8_9, word16, 16)
	word16 r8_65 = SLICE(r9_r8_9, word16, 0)
	branch r10_5 >u r7 l0000362A
l0000362A:
	word16 r6_242
	word16 r2_220
	Mem16[r13 + 4<32>:word16] = r10_5
	word16 r3_14 = r7 - r10_5
	word32 r5_r4_18 = Mem16[r13:word32]
	word32 r13_30
	fn0000DB24(SEQ(r3_14, r2), r5_r4_18, r13, out r13_30)
	word32 r1_r0_34 = Mem21[r13_30 + 0x38<32>:word32]
	word32 r11_r10_17 = CONVERT(r3_14, word16, word32)
	word16 r0_37 = Mem21[r1_r0_34 + 0x18<32>:word16]
	word16 r10_20 = SLICE(r11_r10_17, word16, 0)
	word16 r11_55 = SLICE(r11_r10_17, word16, 16)
	word16 r5_25 = SLICE(r5_r4_18, word16, 16)
	word16 r4_26 = SLICE(r5_r4_18, word16, 0)
	word16 r8_248 = r2
	word16 r9_254 = r3_14
	word16 r1_35 = SLICE(r1_r0_34, word16, 16)
	bool Z_260 = SLICE(cond(r0_37 - 1<16>), bool, 6)
	branch r0_37 == 1<16> l000036C0
l000036C0:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 r3_r2_42 = Mem21[r13_30 + 0x60<32>:word32]
	word32 stackArg65544 = <invalid>
	word32 r3_r2_399
	word32 r9_r8_400
	fn0000C0EE(stackArg65544, out r3_r2_399, out r9_r8_400)
	Mem46[r13_30 + 0x60<32>:word32] = SEQ(r1_35, r0_37)
	r2_220 = SLICE(r3_r2_42, word16, 0) (alias)
	r3_14 = SLICE(r3_r2_42, word16, 16) (alias)
	r6_242 = r7
	r8_248 = SLICE(r5_r4_18, word16, 0) (alias)
	r9_254 = SLICE(r5_r4_18, word16, 16) (alias)
l0000364A:
	Z_260 = SLICE(cond(r0_37 - 2<16>), bool, 6) (alias)
	r2_220 = r2
	r6_242 = r6
	branch r0_37 == 2<16> l00003A04
l0000364C_thunk_fn0000402E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word32 stackArg6 = <invalid>
	word32 stackArg10 = <invalid>
	word32 stackArg14 = <invalid>
	word32 stackArg18 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg70 = <invalid>
	word32 stackArg94 = <invalid>
	word16 stackArg65514 = <invalid>
	word32 stackArg65550 = <invalid>
	word32 stackArg65592 = <invalid>
	word16 stackArg130960 = <invalid>
	word16 r0_382
	word16 r1_383
	word16 r2_384
	word16 r3_385
	word16 r4_386
	word16 r5_387
	word16 r6_388
	word16 r7_389
	word16 r8_390
	word16 r9_391
	word16 r10_392
	word16 r11_393
	word32 r12_394
	word32 r13_395
	word32 ra_396
	fn0000402E(SEQ(r9, r8), r2, r6, r7, r10, r12, r13, stackArg0, stackArg2, stackArg6, stackArg10, stackArg14, stackArg18, stackArg62, stackArg70, stackArg94, stackArg65514, stackArg65550, stackArg65592, stackArg130960, out r0_382, out r1_383, out r2_384, out r3_385, out r4_386, out r5_387, out r6_388, out r7_389, out r8_390, out r9_391, out r10_392, out r11_393, out r12_394, out r13_395, out ra_396)
	r0Out = r0_37
	r1Out = r1_35
	r2Out = r2
	r3Out = r3_14
	r4Out = r4_26
	r5Out = r5_25
	r6Out = r6
	r7Out = r7
	r8Out = r2
	r9Out = r3_14
	r10Out = r10_20
	r11Out = r11_55
	r12Out = r12
	r13Out = r13_30
	return Z_260
l00003650:
	word32 r1_r0_57 = Mem50[r13_30:word32] + r11_r10_17
	word16 r1_58 = SLICE(r1_r0_57, word16, 16)
	word16 r0_59 = SLICE(r1_r0_57, word16, 0)
l00003652_thunk_fn0000402E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word32 stackArg6 = <invalid>
	word32 stackArg10 = <invalid>
	word32 stackArg14 = <invalid>
	word32 stackArg18 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg70 = <invalid>
	word32 stackArg94 = <invalid>
	word16 stackArg65514 = <invalid>
	word32 stackArg65550 = <invalid>
	word32 stackArg65592 = <invalid>
	word16 stackArg130960 = <invalid>
	word16 r0_354
	word16 r1_355
	word16 r2_356
	word16 r3_357
	word16 r4_358
	word16 r5_359
	word16 r6_360
	word16 r7_361
	word16 r8_362
	word16 r9_363
	word16 r10_364
	word16 r11_365
	word32 r12_366
	word32 r13_367
	word32 ra_368
	fn0000402E(SEQ(r9, r8), r2, r6, r7, r10, r12, r13, stackArg0, stackArg2, stackArg6, stackArg10, stackArg14, stackArg18, stackArg62, stackArg70, stackArg94, stackArg65514, stackArg65550, stackArg65592, stackArg130960, out r0_354, out r1_355, out r2_356, out r3_357, out r4_358, out r5_359, out r6_360, out r7_361, out r8_362, out r9_363, out r10_364, out r11_365, out r12_366, out r13_367, out ra_368)
	r0Out = r0_59
	r1Out = r1_58
	r2Out = r2_220
	r3Out = r3_14
	r4Out = r4_26
	r5Out = r5_25
	r6Out = r6_242
	r7Out = r7
	r8Out = r8_248
	r9Out = r9_254
	r10Out = r10_20
	r11Out = r11_55
	r12Out = r12
	r13Out = r13_30
	return Z_260
l00003610:
	bool Z_62 = SLICE(cond(r10_5 - 0<16>), bool, 6)
	branch r10_5 != 0<16> l00003C6E
l00003C6E:
	branch r10_5 == 0<16> l00003CBA
l00003CBA:
	Mem63[0x00049A0A<p32>:byte] = __set_bit<byte,byte>(Mem0[0x00049A0A<p32>:byte], 4<8>)
	word16 r7_66 = Mem63[r9_r8_9 + 0x10<32>:word16]
	branch r0 >=u r7_66 l00003CC8
l00003CC6:
	r7_66 = r0
l00003CC8:
	branch r7_66 == 0<16> l00003D02
l00003CCC:
	word32 r3_r2_80 = Mem63[r9_r8_9 + 0xC<32>:word32]
	word32 r5_r4_85 = Mem63[SEQ(r11, r10_5) + 0x10<32>:word32]
	word32 r13_95
	fn0000DB24(r3_r2_80, r5_r4_85, CONVERT(r7_66, word16, word32), out r13_95)
	Mem105[r9_r8_9 + 0xC<32>:word32] = Mem88[r9_r8_9 + 0xC<32>:word32] + r13_95
	Mem114[SEQ(r11, r10_5) + 0x10<32>:word32] = Mem105[SEQ(r11, r10_5) + 0x10<32>:word32] + r13_95
	Mem121[r9_r8_9 + 0x14<32>:word32] = Mem114[r9_r8_9 + 0x14<32>:word32] + r13_95
	Mem124[r9_r8_9 + 0x10<32>:word16] = Mem121[r9_r8_9 + 0x10<32>:word16]
	word32 r1_r0_126 = Mem124[SEQ(r11, r10_5) + 0x14<32>:word32]
	Mem131[SEQ(r11, r10_5) + 0x14<32>:word32] = r1_r0_126
	r3 = SLICE(r3_r2_80, word16, 16) (alias)
	r2 = SLICE(r3_r2_80, word16, 0) (alias)
	r5 = SLICE(r5_r4_85, word16, 16) (alias)
	r4 = SLICE(r5_r4_85, word16, 0) (alias)
	branch r1_r0_126 != 0<32> l00003D02
l00003CFE:
	Mem141[SEQ(r11, r10_5) + 0x10<32>:word32] = Mem131[SEQ(r11, r10_5) + 8<32>:word32]
l00003D02:
	word32 r1_r0_146 = Mem145[r12:word32]
	word16 r0_149 = Mem145[r1_r0_146 + 0x10<32>:word16]
	r0Out = CONVERT(r0_149 != 0<16>, bool, int16)
	r1Out = SLICE(r1_r0_146, word16, 16)
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = wLoc06
	r8Out = r8_65
	r9Out = r9_64
	r10Out = r10_5
	r11Out = r11
	r12Out = r12
	r13Out = dwLoc04
	return SLICE(cond(r0_149 - 0<16>), bool, 6)
l00003C6E_thunk_fn00003C70:
	word32 r13_161
	word16 r10_162
	word16 r7_163
	word16 r2_164
	word32 r12_165
	word16 r1_166
	word16 r0_167
	word16 r6_168
	word16 r3_169
	word16 r9_170
	word16 r8_171
	word16 r11_172
	word16 r5_173
	word16 r4_174
	bool Z_261 = SLICE(fn00003C70(out r0_167, out r1_166, out r2_164, out r3_169, out r4_174, out r5_173, out r6_168, out r7_163, out r8_171, out r9_170, out r10_162, out r11_172, out r12_165, out r13_161), bool, 6)
	r0Out = r0_167
	r1Out = r1_166
	r2Out = r2_164
	r3Out = r3_169
	r4Out = r4_174
	r5Out = r5_173
	r6Out = r6_168
	r7Out = r7_163
	r8Out = r8_171
	r9Out = r9_170
	r10Out = r10_162
	r11Out = r11_172
	r12Out = r12_165
	r13Out = r13_161
	return Z_261
l00003612_thunk_fn0000402E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word32 stackArg6 = <invalid>
	word32 stackArg10 = <invalid>
	word32 stackArg14 = <invalid>
	word32 stackArg18 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg70 = <invalid>
	word32 stackArg94 = <invalid>
	word16 stackArg65514 = <invalid>
	word32 stackArg65550 = <invalid>
	word32 stackArg65592 = <invalid>
	word16 stackArg130960 = <invalid>
	word16 r0_326
	word16 r1_327
	word16 r2_328
	word16 r3_329
	word16 r4_330
	word16 r5_331
	word16 r6_332
	word16 r7_333
	word16 r8_334
	word16 r9_335
	word16 r10_336
	word16 r11_337
	word32 r12_338
	word32 r13_339
	word32 ra_340
	fn0000402E(SEQ(r9, r8), r2, r6, r7, r10, r12, r13, stackArg0, stackArg2, stackArg6, stackArg10, stackArg14, stackArg18, stackArg62, stackArg70, stackArg94, stackArg65514, stackArg65550, stackArg65592, stackArg130960, out r0_326, out r1_327, out r2_328, out r3_329, out r4_330, out r5_331, out r6_332, out r7_333, out r8_334, out r9_335, out r10_336, out r11_337, out r12_338, out r13_339, out ra_340)
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_65
	r9Out = r9_64
	r10Out = r10_5
	r11Out = r11
	r12Out = r12
	r13Out = r13
	return Z_62
l00003572_thunk_fn0000402E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word32 stackArg6 = <invalid>
	word32 stackArg10 = <invalid>
	word32 stackArg14 = <invalid>
	word32 stackArg18 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg70 = <invalid>
	word32 stackArg94 = <invalid>
	word16 stackArg65514 = <invalid>
	word32 stackArg65550 = <invalid>
	word32 stackArg65592 = <invalid>
	word16 stackArg130960 = <invalid>
	word16 r0_298
	word16 r1_299
	word16 r2_300
	word16 r3_301
	word16 r4_302
	word16 r5_303
	word16 r6_304
	word16 r7_305
	word16 r8_306
	word16 r9_307
	word16 r10_308
	word16 r11_309
	word32 r12_310
	word32 r13_311
	word32 ra_312
	fn0000402E(SEQ(r9, r8), r2, r6, r7, r10, r12, r13, stackArg0, stackArg2, stackArg6, stackArg10, stackArg14, stackArg18, stackArg62, stackArg70, stackArg94, stackArg65514, stackArg65550, stackArg65592, stackArg130960, out r0_298, out r1_299, out r2_300, out r3_301, out r4_302, out r5_303, out r6_304, out r7_305, out r8_306, out r9_307, out r10_308, out r11_309, out r12_310, out r13_311, out ra_312)
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10_5
	r11Out = r11
	r12Out = r12
	r13Out = r13
	return Z_8
fn0000356E_exit:


word16 fn0000372E(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003B3C
// MayUse: 
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r7 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000372E_entry:
	word16 r1
	word16 r2
	word16 r5
l0000372E_thunk_fn00003A36:
	word32 ra_196
	word16 r6_195
	word16 r11_140
	word32 r12_142
	word16 r3_143
	word16 r4_144
	word16 r8_145
	word16 r2_146
	word16 r1_147
	word16 r7_148
	word16 r10_149
	word16 r9_150
	word32 r13_151
	word16 r5_152
	word16 r0_141 = fn00003A36(r0, r1, r2, r5, r12, r13, out r1_147, out r2_146, out r3_143, out r4_144, out r5_152, out r6_195, out r7_148, out r8_145, out r9_150, out r10_149, out r11_140, out r12_142, out r13_151, out ra_196)
	r1Out = r1_147
	r2Out = r2_146
	r3Out = r3_143
	r4Out = r4_144
	r5Out = r5_152
	r7Out = r7_148
	r8Out = r8_145
	r9Out = r9_150
	r10Out = r10_149
	r11Out = r11_140
	r12Out = r12_142
	r13Out = r13_151
	return r0_141
fn0000372E_exit:


word16 fn00003780(ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003B3C
// MayUse: 
// LiveOut: r10 r11 r12 r13 r7 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00003780_entry:
	word16 r0
	word16 r1
	word16 r2
l00003780_thunk_fn00003A36:
	word16 r3_198
	word16 r2_197
	word16 r1_196
	word16 r6_201
	word32 ra_202
	word16 r4_199
	word16 r5_200
	word16 r8_153
	word16 r7_157
	word32 r13_158
	word32 r12_159
	word16 r11_161
	word16 r10_162
	word16 r9_163
	fn00003A36(r0, r1, r2, r5, r12, r13, out r1_196, out r2_197, out r3_198, out r4_199, out r5_200, out r6_201, out r7_157, out r8_153, out r9_163, out r10_162, out r11_161, out r12_159, out r13_158, out ra_202)
	r8Out = r8_153
	r9Out = r9_163
	r10Out = r10_162
	r11Out = r11_161
	r12Out = r12_159
	r13Out = r13_158
	return r7_157
fn00003780_exit:


word16 fn000037D8(word32 r11_r10, word32 r9_r8, word16 r0, word16 r7, word32 r13, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003780
// MayUse:  r0:[0..15] r13:[0..31] r7:[0..15] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r12 r13 r7
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r7 sp
// Preserved:
fn000037D8_entry:
l000037D8:
	branch r0 >=u r7 l000037DC_thunk_fn000037E0
l000037DC_thunk_fn000037E0:
	word16 r1_113
	word32 r13_61
	word16 r7_62
	word32 r12_64
	word16 r2_114
	word16 r3_115
	word16 r4_116
	word16 r5_117
	fn000037E0(r11_r10, r9_r8, r7, r13, out r1_113, out r2_114, out r3_115, out r4_116, out r5_117, out r7_62, out r12_64, out r13_61)
	r12Out = r12_64
	r13Out = r13_61
	return r7_62
l000037DC_thunk_fn000037DE:
	word32 r12_78
	word32 r13_79
	word16 r7_84 = fn000037DE(r11_r10, r9_r8, r0, r13, out r12_78, out r13_79)
	r12Out = r12_78
	r13Out = r13_79
	return r7_84
fn000037D8_exit:


word16 fn000037DE(word32 r11_r10, word32 r9_r8, word16 r0, word32 r13, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000037D8
//      fn00003A36
// MayUse:  r0:[0..15] r13:[0..31] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r12 r13 r7
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r7
// Preserved: sp
fn000037DE_entry:
l000037DE:
l000037DE_thunk_fn000037E0:
	word32 r13_13
	word16 r7_14
	word32 r12_16
	word16 r1_30
	word16 r2_31
	word16 r3_32
	word16 r4_33
	word16 r5_34
	fn000037E0(r11_r10, r9_r8, r0, r13, out r1_30, out r2_31, out r3_32, out r4_33, out r5_34, out r7_14, out r12_16, out r13_13)
	r12Out = r12_16
	r13Out = r13_13
	return r7_14
fn000037DE_exit:


word16 fn000037E0(word32 r11_r10, word32 r9_r8, word16 r7, word32 r13, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r7Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000037D8
//      fn00003A36
// MayUse:  r13:[0..31] r7:[0..15] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r12 r13 r2 r3 r4 r5 r7
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r7
// Preserved: sp
fn000037E0_entry:
l000037E0:
	branch r7 == 0<16> l0000381A
l000037E4:
	word32 r12_6 = CONVERT(r7, word16, word32)
	word32 r3_r2_11 = Mem0[r9_r8 + 0xC<32>:word32]
	word32 r5_r4_15 = Mem0[r11_r10 + 0x10<32>:word32]
l000037EC:
	fn0000DB24(r3_r2_11, r5_r4_15, r13, out r13)
	Mem37[r9_r8 + 0xC<32>:word32] = Mem17[r9_r8 + 0xC<32>:word32] + r12_6
	Mem46[r11_r10 + 0x10<32>:word32] = Mem37[r11_r10 + 0x10<32>:word32] + r12_6
	Mem55[r9_r8 + 0x14<32>:word32] = Mem46[r9_r8 + 0x14<32>:word32] + r12_6
	Mem60[r9_r8 + 0x10<32>:word16] = Mem55[r9_r8 + 0x10<32>:word16]
	word32 r1_r0_62 = Mem60[r11_r10 + 0x14<32>:word32]
	Mem67[r11_r10 + 0x14<32>:word32] = r1_r0_62
	branch r1_r0_62 != 0<32> l0000381A
l00003816:
	Mem77[r11_r10 + 0x10<32>:word32] = Mem67[r11_r10 + 8<32>:word32]
l0000381A:
	branch SLICE(r13, word16, 0) != 0<16> l000038E4
l000038E4:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r7Out = <invalid>
	r12Out = <invalid>
	r13Out = <invalid>
	return 2<16>
l0000381E:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r7Out = <invalid>
	r12Out = <invalid>
	r13Out = <invalid>
	return 0<16>
fn000037E0_exit:


word16 fn00003A32(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003A36
// MayUse: 
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: r0 r1 r2
// Preserved: sp
fn00003A32_entry:
	word32 r1_r0
	word16 r2
	word16 r5
	word32 r12
	word32 r13
	word16 r1 = SLICE(r1_r0, word16, 16)
	word16 r0 = SLICE(r1_r0, word16, 0)
l00003A32:
l00003A32_thunk_fn00003A36:
	word16 r2_13
	word16 r1_14
	word16 r3_38
	word16 r4_39
	word16 r5_40
	word16 r6_41
	word16 r7_42
	word16 r8_43
	word16 r9_44
	word16 r10_45
	word16 r11_46
	word32 r12_47
	word32 r13_48
	word32 ra_49
	word16 r0_15 = fn00003A36(r0, r1, r2, r5, r12, r13, out r1_14, out r2_13, out r3_38, out r4_39, out r5_40, out r6_41, out r7_42, out r8_43, out r9_44, out r10_45, out r11_46, out r12_47, out r13_48, out ra_49)
	r1Out = r1_14
	r2Out = r2_13
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = <invalid>
	r13Out = <invalid>
	raOut = <invalid>
	return r0_15
fn00003A32_exit:


word16 fn00003A36(word16 r0, word16 r1, word16 r2, word16 r5, word32 r12, word32 r13, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000372E
//      fn00003780
//      fn00003A32
//      fn00003B3C
//      fn0000402E
// MayUse:  r0:[0..15] r1:[0..15] r12:[0..31] r13:[0..31] r2:[0..15] r5:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn00003A36_entry:
	word32 dwLoc04
	ptr32 fp
	word16 wLoc0A
	word16 wLoc06
	word16 r11
	word16 r10
	word16 r8
	word16 r3
	word16 r4
	word32 sp_1281 = fp
l00003A36:
	Mem8[SEQ(r1 + 1<16>, r0) + 0x12BC<32>:word16] = r2
	word16 r1_13 = Mem8[r12 + 0x23EC<32>:word16]
	word16 r11_125 = Mem8[r12 + 0xB4<32>:word16]
	word16 r9_1319 = CONVERT(r1_13 == Mem8[r12 + 0x23E8<32>:word16], bool, int16)
	word16 r2_1296 = Mem8[r12 + 0xA0<32>:word16] - r11_125
	Mem21[r12 + 0xB4<32>:word16] = r11_125
	word32 ra_1064 = Mem23[r12 + 0x60<32>:word32]
	word16 r8_1027 = Mem23[r12 + 0x90<32>:word16]
	word16 r10_109 = Mem23[r12 + 0x8C<32>:word16]
	bool v75_1517 = Mem23[r12 + 0xC0<32>:word16] >=u r2_1296
	word32 dwLoc04_1782 = dwLoc04
	r12_1168 = r12
	r5_105 = r5
	r13_1099 = r13
l00003A70:
	word32 dwLoc04_1838
	word32 r11_r10_1835
	word32 r9_r8_165
	word32 r5_r4_1087
	word32 r3_r2_1003
	word32 r11_r10_1796
	word32 dwLoc04_1830
	word16 r6_1008
	word16 r0_1086
	word16 r0_1174
	word16 r2_1607
	word32 r11_r10_1824
	word32 r13_1099
	word16 r5_105
	word32 r12_1168
	word32 dwLoc04_1705 = dwLoc04_1782
	branch CONVERT(v75_1517, bool, int16) == 0<16> l00003DE8
l00003A78:
	dwLoc04_1838 = dwLoc04_1782 (alias)
	branch CONVERT(r11_125 <u 2<16>, bool, int16) == 0<16> l00003DDE
l00003DDE:
	dwLoc04_1830 = dwLoc04_1838 (alias)
l00003DE0:
	r10_109 = Mem44[r12_1168 + 0xB0<32>:word16]
	dwLoc04_1782 = dwLoc04_1830 (alias)
l00003DE8:
	word32 r3_r2_1803
	word32 r3_r2_1806
	word16 r9_1650
	word16 r8_1645
	word16 r6_1639
	word16 r1_1584
	word16 r2_1604
	word16 r0_123
	word16 r3_1611
	word16 r4_1620
	word16 r5_1629
	word16 r2_72 = CONVERT(Mem54[Mem54[r12_1168 + 0x60<32>:word32] + 2<32>:byte], byte, word16)
	Mem74[r12_1168 + 0x80<32>:word16] = r2_72
	word16 r6_88 = Mem74[r12_1168 + 0x58<32>:word16]
	r9_r8_165 = Mem74[r12_1168 + 0x70<32>:word32]
	word32 r3_r2_1821 = CONVERT(r2_72, word16, word32) * 2<32> + Mem74[r12_1168 + 0x78<32>:word32]
	word32 r7_r6_99 = CONVERT(r6_88, word16, word32) * 2<32> + r9_r8_165
	word16 r4_131 = Mem74[r3_r2_1821:word16]
	Mem103[r7_r6_99:word16] = r4_131
	word16 r1_363 = r1_13 + 2<16> & r6_88
	Mem104[r3_r2_1821:word16] = r1_363
	Mem108[r12_1168 + 0xB8<32>:word16] = r5_105
	Mem111[r12_1168 + 0xA4<32>:word16] = r10_109
	Mem112[r12_1168 + 0x50<32>:word16] = 2<16>
	word16 wLoc02_1683 = SLICE(dwLoc04_1782, word16, 16)
	sp_1281 = fp - 14<i32>
	word16 r9_97 = SLICE(r9_r8_165, word16, 16)
	word16 r8_98 = SLICE(r9_r8_165, word16, 0)
	r6_1008 = SLICE(r7_r6_99, word16, 0) (alias)
	branch r4_131 == 0<16> l00003EF4
l00003E3E:
	branch r5_105 >=u Mem112[r12_1168 + 0xC0<32>:word16] l00003EF4
l00003EF4:
	r0_123 = SLICE(r13_1099, word16, 0)
l00003E46:
	word16 v48_128 = SLICE(r13_1099, word16, 0)
	word16 r2_124 = Mem112[r12_1168 + 0x50<32>:word16]
	r11_125 = r11_125 + 0xFEFA<16>
	r0_123 = v48_128
	r4_131 = r4_131 - r1_363
	r3_r2_1821 = SEQ(r1_363, r2_124) (alias)
	branch r2_124 >=u r1_363 l00003EDC
l00003EDC:
	word32 r3_r2_135 = SEQ(r1_363, r2_124)
	fn00002F48(SEQ(r11, r10), SEQ(r6, r5))
	Mem137[r3_r2_135 + 0xA0<32>:word16] = v48_128
	r12_1168 = r3_r2_135
	branch v48_128 >=u 5<16> l00003F50
l00003F50:
	word32 r3_r2_1814
	word16 r2_142 = Mem137[r3_r2_135 + 0xC8<32>:word16]
	word16 r1_140 = Mem137[r3_r2_135 + 0xAC<32>:word16]
	word16 r5_141 = Mem137[r3_r2_135 + 0xB8<32>:word16]
	word32 r3_r2_1811 = SEQ(r1_363, r2_142)
	branch r2_142 == 1<16> l00003F76
l00003F60:
	r3_r2_1814 = SEQ(r1_363, r2_142) (alias)
	branch v48_128 != 3<16> l00003D50
l00003F66:
	word16 r2_149 = Mem137[r3_r2_135 + 0xB0<32>:word16] - r1_140
	r3_r2_1811 = SEQ(r1_140, r2_149) (alias)
	branch r1_140 >=u 0x1000<16> l00003D40
l00003D40:
	Mem157[r3_r2_135 + 0x98<32>:word32] = CONVERT(Mem137[r3_r2_135 + 0xAC<32>:word16], word16, word32)
	r3_r2_1811 = SEQ(r1_140, r2_149) (alias)
l00003F76:
	Mem159[r3_r2_135 + 0x50<32>:word16] = 2<16>
	word16 r2_174 = SLICE(r3_r2_1811, word16, 0)
	word16 r3_171 = SLICE(r3_r2_1811, word16, 16)
	branch r5_141 >=u 2<16> l00003D4A
l00003D4A:
	r9_r8_165 = Mem164[r3_r2_135:word32]
	r3_r2_1814 = r3_r2_1811 (alias)
l00003D50:
	r3_1611 = SLICE(r3_r2_1814, word16, 16) (alias)
	word16 r7_1880
	fn0000B09C(r3_r2_1814, r3_1611, out r4_1620, out r5_1629, out r6_1639, out r7_1880, out r11_125, out ra_1064)
	r2_1604 = SLICE(r3_r2_1814, word16, 0) (alias)
	r8_1645 = SLICE(r9_r8_165, word16, 0) (alias)
	r9_1650 = SLICE(r9_r8_165, word16, 16) (alias)
	r10_109 = r2_1604 (alias)
	word16 r0_195 = Mem194[SEQ(r11_125, r2_1604) + 0x14<32>:word16]
	word16 r7_199 = Mem194[r9_r8_165 + 0x10<32>:word16]
	branch r0_195 >=u r7_199 l00003D62
l00003D60:
	r7_199 = r0_195
l00003D62:
	branch r7_199 == 0<16> l00003D9C
l00003D66:
	word32 r3_r2_219 = Mem194[r9_r8_165 + 0xC<32>:word32]
	word32 r5_r4_223 = Mem194[SEQ(r11_125, r2_1604) + 0x10<32>:word32]
	word32 r13_233
	fn0000DB24(r3_r2_219, r5_r4_223, CONVERT(r7_199, word16, word32), out r13_233)
	Mem245[r9_r8_165 + 0xC<32>:word32] = Mem226[r9_r8_165 + 0xC<32>:word32] + r13_233
	Mem254[SEQ(r11_125, r2_1604) + 0x10<32>:word32] = Mem245[SEQ(r11_125, r2_1604) + 0x10<32>:word32] + r13_233
	Mem263[r9_r8_165 + 0x14<32>:word32] = Mem254[r9_r8_165 + 0x14<32>:word32] + r13_233
	Mem268[r9_r8_165 + 0x10<32>:word16] = Mem263[r9_r8_165 + 0x10<32>:word16]
	word32 r1_r0_270 = Mem268[SEQ(r11_125, r2_1604) + 0x14<32>:word32]
	Mem275[SEQ(r11_125, r2_1604) + 0x14<32>:word32] = r1_r0_270
	r3_1611 = SLICE(r3_r2_219, word16, 16) (alias)
	r2_1604 = SLICE(r3_r2_219, word16, 0) (alias)
	r5_1629 = SLICE(r5_r4_223, word16, 16) (alias)
	r4_1620 = SLICE(r5_r4_223, word16, 0) (alias)
	r13_1099 = r13_233 - r1_r0_270
	branch r1_r0_270 != 0<32> l00003D9C
l00003D98:
	Mem285[SEQ(r11_125, r2_1604) + 0x10<32>:word32] = Mem275[SEQ(r11_125, r2_1604) + 8<32>:word32]
l00003D9C:
	r1_1584 = Mem289[Mem289[r3_r2_135:word32] + 0x10<32>:word16]
	branch r1_1584 != 0<16> l00003962
l00003962:
	word16 r2_322 = CONVERT(Mem289[Mem289[r3_r2_135 + 0x60<32>:word32] + CONVERT(r4_1620, word16, word32):byte], byte, word16)
	word16 r3_318 = Mem289[r3_r2_135 + 0x90<32>:word16]
	Mem324[r3_r2_135 + 0x80<32>:word16] = r2_322
	r3_r2_1803 = SEQ(r3_318, r2_322) (alias)
l00003F80:
	word16 r10_325 = Mem159[r3_r2_135 + 0xB4<32>:word16]
	word32 r7_r6_341 = Mem159[r3_r2_135 + 0x23F0<32>:word32]
	word16 r4_339 = Mem159[r3_r2_135 + 0x23EC<32>:word16]
	Mem357[r3_r2_1811 * 2<32> + r7_r6_341:word16] = 0xFFFF<16>
	word32 r3_r2_358 = Mem357[r3_r2_135 + 0x23E0<32>:word32]
	Mem361[r3_r2_135 + 0x23EC<32>:word16] = r4_339
	word16 r7_350 = SLICE(r7_r6_341, word16, 16)
	word16 r8_354 = r1_140 + r10_325 + 0xFFFF<16>
	word16 r2_1609 = SLICE(r3_r2_358, word16, 0)
	word16 r3_1617 = SLICE(r3_r2_358, word16, 16)
l00003FB4_thunk_fn00003FB8:
	word16 r1_1866
	word16 r2_1867
	word16 r3_1868
	word16 r4_1869
	word16 r5_1870
	word16 r6_1871
	word16 r7_1872
	word16 r8_1873
	word16 r9_1874
	word16 r10_1875
	word16 r11_1876
	word32 r12_1877
	word32 r13_1878
	word32 ra_1879
	fn00003FB8(SEQ(r1, r0), SEQ(r3, r2), SEQ(r9, r8), r5, r7, r12, r13, out r1_1866, out r2_1867, out r3_1868, out r4_1869, out r5_1870, out r6_1871, out r7_1872, out r8_1873, out r9_1874, out r10_1875, out r11_1876, out r12_1877, out r13_1878, out ra_1879)
	r1Out = r3_171 + 1<16>
	r2Out = r2_1609
	r3Out = r3_1617
	r4Out = r4_339
	r5Out = r5_141
	r6Out = 0xFFFF<16>
	r7Out = r7_350
	r8Out = r8_354
	r9Out = r9_97
	r10Out = r10_325
	r11Out = r11_125 + 0xFFFD<16>
	r12Out = r3_r2_135
	r13Out = r13_1099
	raOut = ra_1064
	return r2_174
l00003EEA:
	r5_105 = Mem137[r3_r2_135 + 0xB8<32>:word16]
	r1_363 = Mem137[r3_r2_135 + 0xAC<32>:word16]
	r3_r2_1821 = SEQ(r1_363, r2_124) (alias)
l00003E58:
	word16 r3_371 = SLICE(r3_r2_1821, word16, 16)
	branch r5_105 >=u 2<16> l00003E62
l00003E5C:
	branch r0_123 <=u r5_105 l000040A2
l000040A2:
	Mem377[SEQ(r6_1008, r5_105) + 0xD<32>:byte] = SLICE(r3_371, byte, 0)
	word32 r1_r0_383 = CONVERT(r11_125, word16, word32)
	r0_1086 = SLICE(r1_r0_383, word16, 0) (alias)
	r5_r4_1087 = Mem377[r12_1168 + 0x98<32>:word32] - r1_r0_383
	r3_r2_1003 = r3_r2_1821 (alias)
	r11_r10_1796 = SEQ(r11_125, r10_109) (alias)
	dwLoc04_1705 = dwLoc04_1782 (alias)
	branch r5_r4_1087 > 0<32> l00004378
l00003E62:
	word16 r0_398 = Mem396[r12_1168 + 0xA8<32>:word16]
	branch r0_398 == 0<16> l00003F38
l00003F38:
	Mem401[r12_1168 + 0x54<32>:word16] = 1<16>
	word16 r1_405 = r1_363 + 1<16>
	Mem406[r12_1168 + 0xAC<32>:word16] = r1_405
	word16 r7_407 = Mem406[r12_1168 + 0xB4<32>:word16]
	Mem413[r12_1168 + 0xB4<32>:word16] = r7_407
l00003C5E:
	branch r0_398 == 0<16> l00003654
l00003654:
	Mem417[r13_1099:word32] = SEQ(r1_405, r0_398)
	Mem430[r13_1099 + 8<32>:word32] = Mem417[r13_1099 + 8<32>:word32] + SEQ(r11_125, r10_109)
	r13_1099 = Mem430[r12_1168:word32]
	word32 r9_r8_432 = Mem430[r13_1099 + 0xC<32>:word32]
	word16 r10_433 = Mem430[r13_1099 + 4<32>:word16]
l00003616:
	word32 r1_r0_434 = CONVERT(r7_407, word16, word32)
	word32 r9_r8_439 = r9_r8_432 + r1_r0_434
	Mem442[r13_1099 + 0xC<32>:word32] = r9_r8_439
	Mem445[r13_1099 + 0x10<32>:word16] = Mem442[r13_1099 + 0x10<32>:word16]
	word32 r3_r2_446 = Mem445[r13_1099 + 0x14<32>:word32]
	word32 r1_r0_449 = r1_r0_434 + r3_r2_446
	Mem453[r13_1099 + 0x14<32>:word32] = r1_r0_449
	word16 r9_440 = SLICE(r9_r8_439, word16, 16)
	r8_1027 = SLICE(r9_r8_439, word16, 0) (alias)
	word16 r3_1614 = SLICE(r3_r2_446, word16, 16)
	r2_1607 = SLICE(r3_r2_446, word16, 0) (alias)
	r1_1584 = SLICE(r1_r0_449, word16, 16) (alias)
	word16 r0_451 = SLICE(r1_r0_449, word16, 0)
l00003574:
	branch wLoc0A == 0<16> l00003578_thunk_fn000032CA
l00003578_thunk_fn000032CA:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	byte stackArg4 = <invalid>
	word16 stackArg8 = <invalid>
	word16 stackArg10 = <invalid>
	fn000032CA(SEQ(r11, r10), r0, r1, r8, r12, r13, stackArg0, stackArg4, stackArg8, stackArg10)
	r1Out = r1_1584
	r2Out = r2_1607
	r3Out = r3_1614
	r4Out = r4_131
	r5Out = r5_105
	r6Out = r6_1008
	r7Out = wLoc0A
	r8Out = r8_1027
	r9Out = r9_440
	r10Out = r10_433
	r11Out = r11_125
	r12Out = r12_1168
	r13Out = r13_1099
	raOut = ra_1064
	return r0_451
l0000357C:
	word16 r0_1582
	word16 r10_1592 = r10_433 - wLoc02_1683
	r9_1319 = 1<16>
	dwLoc04_1705 = dwLoc04_1782 (alias)
	branch wLoc02_1683 == 0<16> l000035E6
l00003586:
	word32 r3_r2_467 = Mem453[r12_1168 + 0x60<32>:word32]
	word16 r0_466 = Mem453[r12_1168 + 0x50<32>:word16]
	r2_1607 = SLICE(r3_r2_467, word16, 0) (alias)
	r11_r10_1824 = SEQ(r11_125, r10_1592) (alias)
	branch wLoc02_1683 >=u r0_466 l00003AE8
l00003594:
	word16 r1_470 = Mem453[r12_1168 + 0xAC<32>:word16]
	word32 r5_r4_473 = Mem453[r12_1168 + 0x68<32>:word32]
	word32 r11_r10_472 = CONVERT(wLoc02_1683, word16, word32)
	ra_1064 = CONVERT(r1_470, word16, word32) - r5_r4_473
	branch r11_r10_472 >=u r5_r4_473 l00003BBE
l00003BBE:
	word32 r11_r10_499 = Mem453[r12_1168 + 0x23E0<32>:word32]
	word32 r7_r6_497 = Mem453[r12_1168 + 0x23F0<32>:word32] + r3_r2_467 * 2<32>
	word32 r5_r4_502 = r3_r2_467 + r11_r10_499
	word16 r7_509 = SLICE(r7_r6_497, word16, 16)
	r6_1008 = SLICE(r7_r6_497, word16, 0) (alias)
	word16 r11_500 = SLICE(r11_r10_499, word16, 16)
	r10_1592 = SLICE(r11_r10_499, word16, 0) (alias)
	r5_105 = SLICE(r5_r4_502, word16, 16) (alias)
	r4_131 = SLICE(r5_r4_502, word16, 0) (alias)
	branch r0_466 <u 2<16> l000037EC
l00003BDA_thunk_fn000037E0:
	word32 r13_511
	word16 r7_512
	word16 r1_513
	word32 r12_514
	word16 r2_515
	word16 r3_516
	word16 r4_517
	word16 r5_518
	word16 r0_510 = fn000037E0(r11_r10_499, SEQ(1<16>, r8_1027), r7_509, r13_1099, out r1_513, out r2_515, out r3_516, out r4_517, out r5_518, out r7_512, out r12_514, out r13_511)
	r1Out = r1_513
	r2Out = r2_515
	r3Out = r3_516
	r4Out = r4_517
	r5Out = r5_518
	r6Out = r6_1008
	r7Out = r7_512
	r8Out = r8_1027
	r9Out = 1<16>
	r10Out = r10_1592
	r11Out = r11_500
	r12Out = r12_514
	r13Out = r13_511
	raOut = ra_1064
	return r0_510
l00003BDE:
	word32 r3_r2_525 = Mem453[r12_1168 + 0x60<32>:word32]
	byte v59_533 = Mem453[CONVERT(r1_470 + 1<16>, word16, word32) + r3_r2_525:byte]
	Mem536[r7_r6_497:word16] = 0<16>
	Mem537[r12_1168 + 0x23EC<32>:word16] = r8_1027
	Mem539[r5_r4_502:byte] = v59_533
	word32 r1_r0_549 = (CONVERT(v59_533, byte, word32) << 2<8>) + r12_1168
	Mem555[SEQ(SLICE(r1_r0_549, word16, 16) + 1<16>, SLICE(r1_r0_549, word16, 0)) + 0xD4<32>:word16] = Mem539[r1_r0_549 + 0xD4<32>:word16]
	r0_1582 = Mem555[r12_1168 + 0x23E8<32>:word16]
	word16 r1_558 = Mem555[r12_1168 + 0x23EC<32>:word16]
	r11_125 = Mem555[r12_1168 + 0xB4<32>:word16]
	Mem564[r12_1168 + 0xB4<32>:word16] = r11_125
	r2_1607 = Mem564[r12_1168 + 0xAC<32>:word16]
	Mem568[r12_1168 + 0xAC<32>:word16] = r2_1607
	word16 r9_561 = CONVERT(r1_558 == r0_1582, bool, int16)
	r3_1614 = SLICE(r3_r2_525, word16, 16) (alias)
	r9_1319 = r9_561 + 0xFFFF<16>
	r1_1584 = r1_558 + 1<16>
	branch r9_561 == 1<16> l0000368C
l0000368C:
l00003C2A:
	r3_r2_1806 = SEQ(r3_1614, r2_1607) (alias)
l000035AA:
	word32 r5_r4_572 = Mem453[r13_1099:word32]
	fn0000DB24(r3_r2_467 + ra_1064, r5_r4_572, r13_1099, out r13_1099)
	r8_1027 = Mem580[r12_1168 + 0xAC<32>:word16]
	Mem591[r12_1168 + 0xAC<32>:word16] = r8_1027
	word32 r3_r2_594 = CONVERT(r8_1027, word16, word32)
	word16 r0_592 = Mem591[r12_1168 + 0x50<32>:word16]
	Mem597[r12_1168 + 0x98<32>:word32] = r3_r2_594
	r11_r10_1835 = r11_r10_472 - r5_r4_572
	word32 sp_586 = <invalid>
	r5_105 = SLICE(r5_r4_572, word16, 16) (alias)
	r4_131 = SLICE(r5_r4_572, word16, 0) (alias)
	r11_125 = SLICE(r11_r10_1835, word16, 16) (alias)
	r10_1592 = SLICE(r11_r10_1835, word16, 0) (alias)
	word16 r7_590 = wLoc02_1683 + r8_1027
	sp_1281 = sp_586 + 4<32>
	r3_1614 = SLICE(r3_r2_594, word16, 16) (alias)
	r2_1607 = SLICE(r3_r2_594, word16, 0) (alias)
	word16 r1_599 = Mem597[r12_1168 + 0x240C<32>:word16] - r0_592
	branch r7_590 >=u r0_592 l000035DA
l000035D8:
	r0_592 = r7_590
l000035DA:
	Mem609[r12_1168 + 0x240C<32>:word16] = r0_592
	r1_1584 = r1_599 + r0_592
	branch false l00003AE6
l000035E6:
	r0_1582 = 3<16>
l000035E8:
	r1Out = r1_1584
	r2Out = r2_1607
	r3Out = r3_1614
	r4Out = r4_131
	r5Out = r5_105
	r6Out = r6_1008
	r7Out = wLoc06
	r8Out = r8_1027
	r9Out = r9_1319
	r10Out = r10_1592
	r11Out = r11_125
	r12Out = r12_1168
	r13Out = dwLoc04_1782
	raOut = ra_1064
	return r0_1582
l00003C62:
l00003988:
	r1_1584 = r1_405 & 0x5F22<16> (alias)
	r3_r2_1803 = r3_r2_1821 (alias)
l0000398A:
	word32 r5_r4_629 = Mem628[r12_1168 + 0x78<32>:word32]
	word16 r6_643 = Mem628[r12_1168 + 0x58<32>:word16]
	word32 r9_r8_648 = Mem628[r12_1168 + 0x70<32>:word32]
	r3_r2_1806 = r3_r2_1803 + r5_r4_629
	word32 r7_r6_656 = CONVERT(r6_643, word16, word32) * 2<32> + r9_r8_648
	word16 r4_642 = Mem628[r3_r2_1806:word16]
	Mem660[r7_r6_656:word16] = r4_642
	r1_1584 = r1_1584 & r6_643
	Mem661[r3_r2_1806:word16] = r1_1584
	r5_1629 = SLICE(r5_r4_629, word16, 16) (alias)
	r3_1611 = SLICE(r3_r2_1806, word16, 16) (alias)
	r9_1650 = SLICE(r9_r8_648, word16, 16) (alias)
	r8_1645 = SLICE(r9_r8_648, word16, 0) (alias)
	r6_1639 = SLICE(r7_r6_656, word16, 0) (alias)
	branch r4_642 == 0<16> l000039C0
l000039AE:
	r11_125 = r11_125 + 0xFEFA<16>
	r2_1604 = r1_1584
	r4_1620 = r4_642 - r1_1584
	r3_r2_1806 = SEQ(r3_1611, r1_1584) (alias)
	branch Mem661[r12_1168 + 0x50<32>:word16] >=u r1_1584 l00003DA8
l00003DA8:
	r1Out = r1_1584
	r2Out = r2_1604
	r3Out = r3_1611
	r4Out = r4_1620
	r5Out = r5_1629
	r6Out = r6_1639
	r7Out = wLoc06
	r8Out = r8_1645
	r9Out = r9_1650
	r10Out = r10_109
	r11Out = r11_125
	r12Out = r12_1168
	r13Out = dwLoc04_1782
	raOut = ra_1064
	return 2<16>
l000039C0:
	word32 r11_r10_705 = Mem685[r12_1168 + 0x23E0<32>:word32]
	word32 r5_r4_708 = r3_r2_1806 + r11_r10_705
	word16 r8_687 = Mem685[r12_1168 + 0x23EC<32>:word16]
	word32 r7_r6_702 = Mem685[r12_1168 + 0x23F0<32>:word32] + r3_r2_1806 * 2<32>
	r1_13 = r1_1584 + 1<16>
	r11_125 = SLICE(r11_r10_705, word16, 16) (alias)
	r5_105 = SLICE(r5_r4_708, word16, 16) (alias)
	dwLoc04_1838 = dwLoc04_1782 (alias)
	branch Mem685[r12_1168 + 0xA0<32>:word16] >=u 2<16> l00003DDE
l000039E2:
	Mem724[r7_r6_702:word16] = r1_13
	Mem725[r12_1168 + 0x23EC<32>:word16] = r8_687
	Mem727[r5_r4_708:byte] = 0xFD<8>
	r0_1174 = r1_13
	r3_r2_1003 = 0xF42B<32> (alias)
l00003E6A:
	byte v49_750 = Mem396[Mem396[r12_1168 + 0x60<32>:word32] + CONVERT(r1_363, word16, word32):byte]
	word16 r1_752 = Mem396[r12_1168 + 0x23EC<32>:word16]
	Mem769[Mem396[r12_1168 + 0x23F0<32>:word32] + r7_r6_99 * 2<32>:word16] = 0<16>
	word32 r3_r2_770 = Mem769[r12_1168 + 0x23E0<32>:word32]
	Mem772[r12_1168 + 0x23EC<32>:word16] = r1_752 + 1<16>
	word32 r3_r2_775 = r3_r2_770 + r7_r6_99
	Mem779[r3_r2_775:byte] = v49_750
	word32 r1_r0_789 = (CONVERT(v49_750, byte, word32) << 2<8>) + r12_1168
	word16 r2_792 = Mem779[r1_r0_789 + 0xD4<32>:word16]
	Mem795[SEQ(SLICE(r1_r0_789, word16, 16) + 1<16>, SLICE(r1_r0_789, word16, 0)) + 0xD4<32>:word16] = r2_792
	r5_105 = SLICE(r7_r6_99, word16, 16) (alias)
	word16 r4_760 = SLICE(r7_r6_99, word16, 0)
	word16 r7_764 = SLICE(r7_r6_99 * 2<32>, word16, 16)
	word16 r6_765 = SLICE(r7_r6_99, word16, 0) * 2<16>
	word16 r3_777 = SLICE(r3_r2_775, word16, 16)
	word16 r1_799 = Mem795[r12_1168 + 0x23EC<32>:word16]
	branch Mem795[r12_1168 + 0x23E8<32>:word16] == r1_799 l0000441C
l0000441C:
l0000441C_thunk_fn0000441E:
	word16 r1_810
	word16 r10_811
	word16 r11_812
	word32 r12_813
	word32 r13_814
	word16 r2_815
	word16 r3_816
	word16 r4_817
	word16 r5_818
	word16 r6_819
	word16 r7_820
	word16 r8_821
	word16 r9_822
	word32 ra_823
	word16 r0_809 = fn0000441E(SEQ(r9_97 + 0xFFFE<16>, r8_98), r1_799, r7_764, r13_1099, out r1_810, out r2_815, out r3_816, out r4_817, out r5_818, out r6_819, out r7_820, out r8_821, out r9_822, out r10_811, out r11_812, out r12_813, out r13_814, out ra_823)
	r1Out = r1_810
	r2Out = r2_815
	r3Out = r3_816
	r4Out = r4_817
	r5Out = r5_818
	r6Out = r6_819
	r7Out = r7_820
	r8Out = r8_821
	r9Out = r9_822
	r10Out = r10_811
	r11Out = r11_812
	r12Out = r12_813
	r13Out = r13_814
	raOut = ra_823
	return r0_809
l00003EB8:
	Mem831[r12_1168 + 0xAC<32>:word16] = Mem795[r12_1168 + 0xAC<32>:word16]
	word16 r7_832 = Mem831[r12_1168 + 0xB4<32>:word16]
	Mem835[r12_1168 + 0xB4<32>:word16] = r7_832
	word32 r1_r0_836 = Mem835[r12_1168:word32]
	word16 r1_837 = SLICE(r1_r0_836, word16, 16)
	branch Mem835[r1_r0_836 + 0x10<32>:word16] != 0<16> l00003DD4
l00003DD4:
	branch r7_832 >=u 0x105<16> l00004018
l00004018:
l00004018_thunk_fn0000401A:
	word16 r1_847
	word16 r2_848
	word32 r12_849
	word16 r9_851
	word16 r11_852
	word16 r3_853
	word32 ra_854
	word16 r8_855
	word16 r10_856
	word32 r13_857
	word16 r6_858
	word16 r7_859
	word16 r4_860
	word16 r5_861
	word16 r0_850 = fn0000401A(r12_1168, out r1_847, out r2_848, out r3_853, out r4_860, out r5_861, out r6_858, out r7_859, out r8_855, out r9_851, out r10_856, out r11_852, out r12_849, out r13_857, out ra_854)
	r1Out = r1_847
	r2Out = r2_848
	r3Out = r3_853
	r4Out = r4_860
	r5Out = r5_861
	r6Out = r6_858
	r7Out = r7_859
	r8Out = r8_855
	r9Out = r9_851
	r10Out = r10_856
	r11Out = r11_852
	r12Out = r12_849
	r13Out = r13_857
	raOut = ra_854
	return r0_850
l00003DDC:
	r1_13 = Mem835[r12_1168 + 0xAC<32>:word16]
	dwLoc04_1830 = dwLoc04_1782 (alias)
l00003ED4:
	r1Out = r1_837
	r2Out = r2_792
	r3Out = r3_777
	r4Out = r4_760
	r5Out = r5_105
	r6Out = r6_765
	r7Out = wLoc06
	r8Out = r8_98
	r9Out = r9_97 + 0xFFFD<16>
	r10Out = r10_109
	r11Out = r11_125
	r12Out = r12_1168
	r13Out = dwLoc04_1782
	raOut = ra_1064
	return 0<16>
l00003A82:
	Mem874[r12_1168 + 0xA0<32>:word16] = 0xFFFF<16>
	Mem878[sp_1281 + 4<32>:word32] = Mem874[r12_1168 + 0x78<32>:word32]
	r13_1099 = Mem878[r12_1168 + 0x70<32>:word32]
	Mem881[sp_1281 + 2<32>:word16] = Mem878[r12_1168 + 0x58<32>:word16]
	word16 r0_882 = Mem881[r12_1168 + 0x80<32>:word16]
	word16 r1_884 = Mem881[sp_1281:word16] + 1<16>
	Mem886[sp_1281 + 0xA<32>:word16] = r2_1296 + 0xFFFF<16>
	r6_1008 = 0xFFFF<16>
l00003AA6:
	Mem890[r12_1168 + 0xAC<32>:word16] = r1_884
	r0_882 = __a_shift<word16,word16>(r0_882, r8_1027)
	Mem909[r12_1168 + 0x80<32>:word16] = r0_882
	word32 r5_r4_920 = CONVERT(r0_882, word16, word32) * 2<32> + Mem909[sp_1281 + 4<32>:word32]
	word16 r2_924 = Mem909[sp_1281 + 2<32>:word16]
	Mem936[CONVERT(r2_924, word16, word32) * 2<32> + r13_1099:word16] = Mem909[r5_r4_920:word16]
	word16 r1_925 = r1_884 + 2<16> & r2_924
	Mem937[r5_r4_920:word16] = r1_925
	Mem941[r12_1168 + 0xA0<32>:word16] = 0xFFFF<16>
	r10_109 = r10_109 & r0_882
	r9_1319 = r9_1319 + 0xFFFF<16>
	r1_884 = r1_925 + 1<16>
	branch true l00003AA6
l00003AE4:
	r2_1607 = Mem941[sp_1281 + 0xA<32>:word16]
	r11_r10_1835 = SEQ(r11_125, r10_109) (alias)
l00003AE6:
	r11_r10_1824 = r11_r10_1835 (alias)
l00003AE8:
	Mem958[r12_1168 + 0xAC<32>:word16] = r2_1607
	r10_109 = SLICE(r11_r10_1824, word16, 0) (alias)
	word16 r11_1055 = SLICE(r11_r10_1824, word16, 16)
	branch r9_1319 == 0<16> l000037C2
l00003AF0_thunk_fn00003B3C:
	word16 r1_969
	word16 r2_970
	word32 r12_971
	word16 r9_973
	word16 r11_974
	word16 r3_975
	word32 ra_976
	word16 r8_977
	word16 r10_978
	word32 r13_979
	word16 r6_980
	word16 r7_981
	word16 r4_982
	word16 r5_983
	word16 r0_972 = fn00003B3C(SEQ(r11, r10), SEQ(r9, r8), r7_981, r12_1168, out r1_969, out r2_970, out r3_975, out r4_982, out r5_983, out r6_980, out r7_981, out r8_977, out r9_973, out r10_978, out r11_974, out r12_971, out r13_979, out ra_976)
	r1Out = r1_969
	r2Out = r2_970
	r3Out = r3_975
	r4Out = r4_982
	r5Out = r5_983
	r6Out = r6_980
	r7Out = r7_981
	r8Out = r8_977
	r9Out = r9_973
	r10Out = r10_978
	r11Out = r11_974
	r12Out = r12_971
	r13Out = r13_979
	raOut = ra_976
	return r0_972
l00003AF4:
	word32 r3_r2_986 = CONVERT(r2_1607, word16, word32)
	word16 r2_1005 = SLICE(r3_r2_986, word16, 0)
	branch Mem958[r12_1168 + 0x98<32>:word32] > r3_r2_986 l00004060
l00004060:
	r3_r2_1003 = r3_r2_986 * 2<32> + Mem958[r12_1168 + 0x78<32>:word32]
	word16 r0_1007 = Mem958[r12_1168 + 0x58<32>:word16]
	Mem1024[CONVERT(r0_1007, word16, word32) * 2<32> + Mem958[r12_1168 + 0x70<32>:word32]:word16] = Mem958[r3_r2_1003:word16]
	r6_1008 = r6_1008 & r0_1007
	Mem1025[r3_r2_1003:word16] = r6_1008
	Mem1030[r12_1168 + 0xB8<32>:word16] = r8_1027
	r2_1005 = SLICE(r3_r2_1003, word16, 0) (alias)
	word16 r9_1026 = r9_1319 + 0xFFFF<16>
	branch r8_1027 != 0<16> l0000402E
l00004088_thunk_fn0000402E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word32 stackArg6 = <invalid>
	word32 stackArg10 = <invalid>
	word32 stackArg14 = <invalid>
	word32 stackArg18 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg70 = <invalid>
	word32 stackArg94 = <invalid>
	word16 stackArg65514 = <invalid>
	word32 stackArg65550 = <invalid>
	word32 stackArg65592 = <invalid>
	word16 stackArg130960 = <invalid>
	word16 r1_1036
	word16 r2_1037
	word32 r12_1038
	word16 r0_1039
	word16 r9_1040
	word16 r11_1041
	word16 r3_1042
	word32 ra_1043
	word16 r8_1044
	word16 r10_1045
	word32 r13_1046
	word16 r6_1047
	word16 r7_1048
	word16 r4_1049
	word16 r5_1050
	fn0000402E(SEQ(r9, r8), r2_1005, r6_1047, r7_1048, r10, r12_1168, r13_1046, stackArg0, stackArg2, stackArg6, stackArg10, stackArg14, stackArg18, stackArg62, stackArg70, stackArg94, stackArg65514, stackArg65550, stackArg65592, stackArg130960, out r0_1039, out r1_1036, out r2_1037, out r3_1042, out r4_1049, out r5_1050, out r6_1047, out r7_1048, out r8_1044, out r9_1040, out r10_1045, out r11_1041, out r12_1038, out r13_1046, out ra_1043)
	r1Out = r1_1036
	r2Out = r2_1037
	r3Out = r3_1042
	r4Out = r4_1049
	r5Out = r5_1050
	r6Out = r6_1047
	r7Out = r7_1048
	r8Out = r8_1044
	r9Out = r9_1040
	r10Out = r10_1045
	r11Out = r11_1041
	r12Out = r12_1038
	r13Out = r13_1046
	raOut = ra_1043
	return r0_1039
l0000408A:
	Mem1053[r12_1168 + 0x54<32>:word16] = 0<16>
	Mem1054[r12_1168 + 0x50<32>:word16] = 2<16>
	Mem1062[r12_1168 + 0xAC<32>:word16] = r11_1055
	word16 r9_1059 = r9_1026 + r11_1055
	branch Mem1062[sp_1281:word16] != SLICE(ra_1064, word16, 0) l00003B0A
l000040A4:
	word32 r1_r0_1082 = CONVERT(r11_1055, word16, word32)
	r0_1086 = SLICE(r1_r0_1082, word16, 0) (alias)
	r5_r4_1087 = Mem1062[r12_1168 + 0x98<32>:word32] - r1_r0_1082
	r9_r8_165 = SEQ(r9_1059 + 0xFFFF<16>, r8_1027) (alias)
	r9_r8_165 = SEQ(r9_1059 + 0xFFFF<16>, r8_1027) (alias)
	r11_r10_1796 = r11_r10_1824 (alias)
	branch r5_r4_1087 > 0<32> l00004378
l00004378:
	word32 r13_1105
	fn0000DB24(r3_r2_1003, r5_r4_1087, r13_1099, out r13_1105)
	Mem1120[r9_r8_165 + 0xC<32>:word32] = Mem1112[r9_r8_165 + 0xC<32>:word32] + r13_1105
	Mem1134[r11_r10_1796 + 0x10<32>:word32] = Mem1120[r11_r10_1796 + 0x10<32>:word32] + r13_1105
	Mem1143[r9_r8_165 + 0x14<32>:word32] = Mem1134[r9_r8_165 + 0x14<32>:word32] + r13_1105
	Mem1149[r9_r8_165 + 0x10<32>:word16] = Mem1143[r9_r8_165 + 0x10<32>:word16]
	word32 r1_r0_1151 = Mem1149[r11_r10_1796 + 0x14<32>:word32]
	Mem1156[r11_r10_1796 + 0x14<32>:word32] = r1_r0_1151
	word16 r10_1122 = SLICE(r11_r10_1796, word16, 0)
	word16 r11_1121 = SLICE(r11_r10_1796, word16, 16)
	word16 r8_1110 = SLICE(r9_r8_165, word16, 0)
	word16 r9_1109 = SLICE(r9_r8_165, word16, 16)
	word16 r2_1097 = SLICE(r3_r2_1003, word16, 0)
	word16 r3_1096 = SLICE(r3_r2_1003, word16, 16)
	word16 r4_1094 = SLICE(r5_r4_1087, word16, 0)
	word16 r5_1093 = SLICE(r5_r4_1087, word16, 16)
	branch r1_r0_1151 != 0<32> l000043A6
l000043A2:
	Mem1166[r11_r10_1796 + 0x10<32>:word32] = Mem1156[r11_r10_1796 + 8<32>:word32]
l000043A6:
	word16 r1_1173 = Mem1169[Mem1169[r12_1168:word32] + 0x10<32>:word16]
	r0_1174 = 3<16>
	branch r1_1173 != 0<16> l00003A00
l00003A00:
	byte v41_1183 = Mem1182[r3_r2_1003:byte]
l00003A04:
	word32 r3_r2_1195 = (CONVERT(v41_1183, byte, word32) << 2<8>) + r12_1168
	Mem1201[r3_r2_1195 + 0x8DC<32>:word16] = Mem1182[r3_r2_1195 + 0x8DC<32>:word16] + 1<16>
	branch r0_1174 >=u 0xFF<16> l00003A22
l00003A1C:
l00003A22:
l00003A30_thunk_fn00003A32:
	word16 r1_1243
	word16 r2_1244
	word32 r12_1245
	word16 r9_1247
	word16 r11_1248
	word16 r3_1249
	word32 ra_1250
	word16 r8_1251
	word16 r10_1252
	word32 r13_1253
	word16 r6_1254
	word16 r7_1255
	word16 r4_1256
	word16 r5_1257
	word16 r0_1246 = fn00003A32(out r1_1243, out r2_1244, out r3_1249, out r4_1256, out r5_1257, out r6_1254, out r7_1255, out r8_1251, out r9_1247, out r10_1252, out r11_1248, out r12_1245, out r13_1253, out ra_1250)
	r1Out = r1_1243
	r2Out = r2_1244
	r3Out = r3_1249
	r4Out = r4_1256
	r5Out = r5_1257
	r6Out = r6_1254
	r7Out = r7_1255
	r8Out = r8_1251
	r9Out = r9_1247
	r10Out = r10_1252
	r11Out = r11_1248
	r12Out = r12_1245
	r13Out = r13_1253
	raOut = ra_1250
	return r0_1246
l000043B2:
	r1Out = r1_1173
	r2Out = r2_1097
	r3Out = r3_1096
	r4Out = r4_1094
	r5Out = r5_1093
	r6Out = r6_1008
	r7Out = wLoc06
	r8Out = r8_1110
	r9Out = r9_1109
	r10Out = r10_1122
	r11Out = r11_1121
	r12Out = r12_1168
	r13Out = dwLoc04_1705
	raOut = ra_1064
	return 2<16>
l000040B4:
	word32 r5_r4_1277 = (r5_r4_1087 & 0xFFFF<32>) + Mem1271[r12_1168 + 0x60<32>:word32]
	word32 sp_1282 = sp_1281 - 2<i32>
	Mem1284[sp_1282:word16] = r0_1086
	word32 r3_r2_1790 = fn0000B218(r9_r8_165, SLICE(r5_r4_1277, word16, 0), SLICE(r5_r4_1277, word16, 16), r10_109, r13_1099, Mem1284[sp_1282:word32], Mem1284[sp_1282 + 4<i32>:word32], Mem1284[sp_1282 + 8<i32>:word32], Mem1284[sp_1282 + 12<i32>:word32], Mem1284[sp_1282 + 16<i32>:word32], Mem1284[sp_1282 + 20<i32>:word32], Mem1284[sp_1282 + 64<i32>:word32], Mem1284[sp_1282 + 72<i32>:word32], Mem1284[sp_1282 + 96<i32>:word32], Mem1284[sp_1282 + 65516<i32>:word16], Mem1284[sp_1282 + 65552<i32>:word32], Mem1284[sp_1282 + 65594<i32>:word32], Mem1284[sp_1282 + 130962<i32>:word16], out r12_1168, out r13_1099)
	Mem1317[r12_1168 + 0x98<32>:word32] = CONVERT(Mem1284[r12_1168 + 0xAC<32>:word16], word16, word32)
	word32 r9_r8_1318 = Mem1317[r12_1168:word32]
	word16 r4_1855
	word16 r6_1856
	word16 r7_1857
	fn0000B09C(r3_r2_1790, SLICE(r3_r2_1790, word16, 16), out r4_1855, out r5_105, out r6_1856, out r7_1857, out r11_125, out ra_1064)
	r2_1296 = SLICE(r3_r2_1790, word16, 0) (alias)
	word32 sp_1303 = <invalid>
	r9_1319 = SLICE(r9_r8_1318, word16, 16) (alias)
	r8_1027 = SLICE(r9_r8_1318, word16, 0) (alias)
	r10_109 = r2_1296 (alias)
	word16 r0_1341 = Mem1317[SEQ(r11_125, r2_1296) + 0x14<32>:word16]
	word16 r7_1342 = Mem1317[r9_r8_1318 + 0x10<32>:word16]
	sp_1281 = sp_1303 + 4<32>
	branch r0_1341 >=u r7_1342 l000040EC
l000040EA:
	r7_1342 = r0_1341
l000040EC:
	branch r7_1342 == 0<16> l0000412C
l000040F0:
	Mem1355[sp_1303 + 4<32>:word32] = CONVERT(r7_1342, word16, word32)
	word32 r5_r4_1362 = Mem1355[SEQ(r11_125, r2_1296) + 0x10<32>:word32]
	word32 r3_r2_1358 = Mem1355[r9_r8_1318 + 0xC<32>:word32]
	Mem1366[sp_1303 + 2<32>:word16] = Mem1355[sp_1303 + 4<32>:word16]
	fn0000DB24(r3_r2_1358, r5_r4_1362, r13_1099, out r13_1099)
	word32 sp_1375 = <invalid>
	word32 r3_r2_1379 = Mem1366[sp_1375 + 4<32>:word32]
	Mem1387[r9_r8_1318 + 0xC<32>:word32] = Mem1366[r9_r8_1318 + 0xC<32>:word32] + r3_r2_1379
	Mem1396[SEQ(r11_125, r2_1296) + 0x10<32>:word32] = Mem1387[SEQ(r11_125, r2_1296) + 0x10<32>:word32] + r3_r2_1379
	Mem1403[r9_r8_1318 + 0x14<32>:word32] = Mem1396[r9_r8_1318 + 0x14<32>:word32] + r3_r2_1379
	word16 r0_1404 = Mem1403[r9_r8_1318 + 0x10<32>:word16]
	Mem1406[r9_r8_1318 + 0x10<32>:word16] = r0_1404
	word32 r1_r0_1408 = Mem1406[SEQ(r11_125, r2_1296) + 0x14<32>:word32]
	Mem1413[SEQ(r11_125, r2_1296) + 0x14<32>:word32] = r1_r0_1408
	r5_105 = SLICE(r5_r4_1362, word16, 16) (alias)
	r7_1342 = r7_1342 - r0_1404
	r2_1296 = SLICE(r3_r2_1379 - r1_r0_1408, word16, 0) (alias)
	sp_1281 = sp_1375 + 4<32>
	branch r1_r0_1408 != 0<32> l0000412C
l00004128:
	Mem1423[SEQ(r11_125, r2_1296) + 0x10<32>:word32] = Mem1413[SEQ(r11_125, r2_1296) + 8<32>:word32]
l0000412C:
	word32 r1_r0_1428 = Mem1426[r12_1168:word32]
	word16 r0_1431 = Mem1426[r1_r0_1428 + 0x10<32>:word16]
	r1_13 = SLICE(r1_r0_1428, word16, 16) (alias)
	v75_1517 = r0_1431 >=u 0<16>
	branch r0_1431 == 0<16> l00003C78
l00003C78:
l00003CA4:
	Mem1435[r7_1342 + 0x9F0C<16>:word16] = __set_bit<word16,byte>(Mem1426[r7_1342 + 0x9F0C<16>:word16], 6<8>)
l00004136:
	dwLoc04_1782 = dwLoc04_1705 (alias)
l00003B04:
l00003B0A:
	Mem1460[sp_1281 - 2<i32>:word16] = r2_1005
l00003B12_thunk_fn00003B14:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg96 = <invalid>
	word16 stackArg65516 = <invalid>
	word32 stackArg65552 = <invalid>
	word32 stackArg65594 = <invalid>
	word16 stackArg130962 = <invalid>
	word16 r1_1464
	word16 r2_1465
	word32 r12_1466
	word16 r9_1468
	word16 r11_1469
	word16 r3_1470
	word32 ra_1471
	word16 r8_1472
	word16 r10_1473
	word32 r13_1474
	word16 r6_1475
	word16 r7_1476
	word16 r4_1477
	word16 r5_1478
	word16 r0_1467 = fn00003B14(SEQ(r9, r8), r4, r5_1478, r10, r13_1474, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg64, stackArg72, stackArg96, stackArg65516, stackArg65552, stackArg65594, stackArg130962, out r1_1464, out r2_1465, out r3_1470, out r4_1477, out r5_1478, out r6_1475, out r7_1476, out r8_1472, out r9_1468, out r10_1473, out r11_1469, out r12_1466, out r13_1474, out ra_1471)
	r1Out = r1_1464
	r2Out = r2_1465
	r3Out = r3_1470
	r4Out = r4_1477
	r5Out = r5_1478
	r6Out = r6_1475
	r7Out = r7_1476
	r8Out = r8_1472
	r9Out = r9_1468
	r10Out = r10_1473
	r11Out = r11_1469
	r12Out = r12_1466
	r13Out = r13_1474
	raOut = ra_1471
	return r0_1467
fn00003A36_exit:


word16 fn00003B14(word32 r9_r8, word16 r4, word16 r5, word16 r10, word32 r13, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg48, word32 dwArg60, word16 wArgFFEC, word32 dwArg10010, word32 dwArg1003A, word16 wArg1FF92, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003A36
// MayUse:  r10:[0..15] r13:[0..31] r4:[0..15] r5:[0..15] Sequence r9:r8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0060:[0..31] Stack +10010:[0..31] Stack +1003A:[0..31] Stack +1FF92:[0..15] Stack +FFEC:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00003B14_entry:
l00003B14:
	word32 r12_31
	word32 r13_116
	fn0000B218(r9_r8, r4, r5, r10, r13, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg40, dwArg48, dwArg60, wArgFFEC, dwArg10010, dwArg1003A, wArg1FF92, out r12_31, out r13_116)
	Mem54[r12_31 + 0x98<32>:word32] = CONVERT(Mem0[r12_31 + 0xAC<32>:word16], word16, word32)
l00003B26_thunk_fn00003B2A:
	word32 r12_61
	word16 r7_63
	word16 r3_64
	word16 r2_65
	word16 r9_66
	word16 r8_67
	word32 r13_68
	word16 r4_69
	word16 r5_70
	word16 r10_71
	word16 r1_72
	word32 ra_73
	word16 r6_74
	word16 r11_75
	word16 r0_62 = fn00003B2A(SEQ(r3, r2), out r1_72, out r2_65, out r3_64, out r4_69, out r5_70, out r6_74, out r7_63, out r8_67, out r9_66, out r10_71, out r11_75, out r12_61, out r13_68, out ra_73)
	r1Out = r1_72
	r2Out = r2_65
	r3Out = r3_64
	r4Out = r4_69
	r5Out = r5_70
	r6Out = r6_74
	r7Out = r7_63
	r8Out = r8_67
	r9Out = r9_66
	r10Out = r10_71
	r11Out = r11_75
	r12Out = r12_61
	r13Out = r13_68
	raOut = ra_73
	return r0_62
fn00003B14_exit:


word16 fn00003B2A(word32 r3_r2, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A36
//      fn00003B14
// MayUse:  Sequence r3:r2:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00003B2A_entry:
	word16 r0
	word16 r7
	word16 r3 = SLICE(r3_r2, word16, 16)
l00003B2A:
	word16 r4_70
	word16 r5_71
	word16 r6_72
	word16 r7_73
	word16 r11_74
	word32 ra_75
	fn0000B09C(r3_r2, r3, out r4_70, out r5_71, out r6_72, out r7_73, out r11_74, out ra_75)
l00003B34_thunk_fn00003B36:
	word16 r7_34
	word16 r3_35
	word16 r2_36
	word16 r11_37
	word16 r10_38
	word16 r1_39
	word16 r4_40
	word16 r5_41
	word16 r6_42
	word32 ra_43
	word16 r9_44
	word16 r8_45
	word16 r0_33 = fn00003B36(r0, r7, out r1_39, out r2_36, out r3_35, out r4_40, out r5_41, out r6_42, out r7_34, out r8_45, out r9_44, out r10_38, out r11_37, out ra_43)
	r1Out = r1_39
	r2Out = r2_36
	r3Out = r3_35
	r4Out = r4_40
	r5Out = r5_41
	r6Out = r6_42
	r7Out = r7_34
	r8Out = r8_45
	r9Out = r9_44
	r10Out = r10_38
	r11Out = r11_37
	r12Out = <invalid>
	r13Out = <invalid>
	raOut = ra_43
	return r0_33
fn00003B2A_exit:


word16 fn00003B36(word16 r0, word16 r7, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003B2A
// MayUse:  r0:[0..15] r7:[0..15]
// LiveOut: r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: LNZ r0 r7
// Preserved: sp
fn00003B36_entry:
	word16 r11
	word16 r10
	word16 r9
	word16 r8
	word32 r12
l00003B36:
	branch r0 >=u r7 l00003B38_thunk_fn00003B3C
l00003B38_thunk_fn00003B3C:
	word16 r7_16
	word16 r1_52
	word16 r2_53
	word16 r3_54
	word16 r4_55
	word16 r5_56
	word16 r6_57
	word16 r8_58
	word16 r9_59
	word16 r10_60
	word16 r11_61
	word32 r12_62
	word32 r13_63
	word32 ra_64
	word16 r0_17 = fn00003B3C(SEQ(r11, r10), SEQ(r9, r8), r7, r12, out r1_52, out r2_53, out r3_54, out r4_55, out r5_56, out r6_57, out r7_16, out r8_58, out r9_59, out r10_60, out r11_61, out r12_62, out r13_63, out ra_64)
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_16
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r11Out = <invalid>
	raOut = <invalid>
	return r0_17
l00003B38_thunk_fn00003B3A:
	word16 r7_19 = fn00003B3A()
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_19
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r11Out = <invalid>
	raOut = <invalid>
	return r0
fn00003B36_exit:


word16 fn00003B3A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A36
//      fn00003B36
// MayUse: 
// LiveOut: r7
// Trashed: r7
// Preserved: sp
fn00003B3A_entry:
	word16 r0
	word16 r11
	word16 r10
	word16 r9
	word16 r8
	word16 r7
	word32 r12
l00003B3A:
l00003B3A_thunk_fn00003B3C:
	word16 r1_11
	word16 r2_12
	word16 r3_13
	word16 r4_14
	word16 r5_15
	word16 r6_16
	word16 r7_17
	word16 r8_18
	word16 r9_19
	word16 r10_20
	word16 r11_21
	word32 r12_22
	word32 r13_23
	word32 ra_24
	fn00003B3C(SEQ(r11, r10), SEQ(r9, r8), r7, r12, out r1_11, out r2_12, out r3_13, out r4_14, out r5_15, out r6_16, out r7_17, out r8_18, out r9_19, out r10_20, out r11_21, out r12_22, out r13_23, out ra_24)
	return r0
fn00003B3A_exit:


word16 fn00003B3C(word32 r11_r10, word32 r9_r8, word16 r7, word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A36
//      fn00003B36
// MayUse:  r12:[0..31] r7:[0..15] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: r6 sp
fn00003B3C_entry:
	word16 r2
	word16 r3
	word16 r4
	word16 r5
	word16 wLoc06
	word32 dwLoc04
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
	word16 r11 = SLICE(r11_r10, word16, 16)
	word16 r10 = SLICE(r11_r10, word16, 0)
l00003B3C:
	branch r7 == 0<16> l00003B76
l00003B40:
	word32 r3_r2_11 = Mem0[r9_r8 + 0xC<32>:word32]
	word32 r5_r4_15 = Mem0[r11_r10 + 0x10<32>:word32]
	word32 r13_6 = CONVERT(r7, word16, word32)
	word32 r13_24
	fn0000DB24(r3_r2_11, r5_r4_15, r13_6, out r13_24)
	Mem36[r9_r8 + 0xC<32>:word32] = Mem17[r9_r8 + 0xC<32>:word32] + r13_24
	Mem45[r11_r10 + 0x10<32>:word32] = Mem36[r11_r10 + 0x10<32>:word32] + r13_24
	Mem54[r9_r8 + 0x14<32>:word32] = Mem45[r9_r8 + 0x14<32>:word32] + r13_24
	Mem59[r9_r8 + 0x10<32>:word16] = Mem54[r9_r8 + 0x10<32>:word16]
	word32 r1_r0_61 = Mem59[r11_r10 + 0x14<32>:word32]
	Mem66[r11_r10 + 0x14<32>:word32] = r1_r0_61
	r3 = SLICE(r3_r2_11, word16, 16) (alias)
	r2 = SLICE(r3_r2_11, word16, 0) (alias)
	r5 = SLICE(r5_r4_15, word16, 16) (alias)
	r4 = SLICE(r5_r4_15, word16, 0) (alias)
	dwLoc04 = r13_6
	branch r1_r0_61 != 0<32> l00003B76
l00003B72:
	Mem76[r11_r10 + 0x10<32>:word32] = Mem66[r11_r10 + 8<32>:word32]
l00003B76:
	word32 r1_r0_80 = Mem79[r12:word32]
	word16 r1_81 = SLICE(r1_r0_80, word16, 16)
	branch Mem79[r1_r0_80 + 0x10<32>:word16] != 0<16> l0000372E
l00003B7C_thunk_fn0000372E:
	word16 r7_93
	word32 r13_94
	word32 r12_96
	word16 r11_97
	word16 r3_98
	word16 r4_99
	word16 r8_100
	word16 r2_101
	word16 r1_102
	word16 r9_104
	word16 r10_105
	word16 r5_106
	word16 r0_95 = fn0000372E(out r1_102, out r2_101, out r3_98, out r4_99, out r5_106, out r7_93, out r8_100, out r9_104, out r10_105, out r11_97, out r12_96, out r13_94)
	r1Out = r1_102
	r2Out = r2_101
	r3Out = r3_98
	r4Out = r4_99
	r5Out = r5_106
	r6Out = <invalid>
	r7Out = r7_93
	r8Out = r8_100
	r9Out = r9_104
	r10Out = r10_105
	r11Out = r11_97
	r12Out = r12_96
	r13Out = r13_94
	raOut = <invalid>
	return r0_95
l00003B80:
	r1Out = r1_81
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = <invalid>
	r7Out = wLoc06
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = dwLoc04
	raOut = <invalid>
	return 0<16>
fn00003B3C_exit:


word16 fn00003C70(ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn0000356E
// MayUse: 
// LiveOut: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: CFLNZ r0 r1 r12 r2 r6
// Preserved: sp
fn00003C70_entry:
	word16 r0
	word16 r2
	word16 r7
	word16 r11
	word32 r12
	word32 r13
l00003C70_thunk_fn0000356E:
	word16 r2_23
	word32 r12_24
	word16 r1_25
	word16 r0_26
	word16 r6_27
	word16 r3_57
	word16 r4_58
	word16 r5_59
	word16 r7_60
	word16 r8_61
	word16 r9_62
	word16 r10_63
	word16 r11_64
	word32 r13_65
	fn0000356E(r0, r2, r7, r11, r12, r13, out r0_26, out r1_25, out r2_23, out r3_57, out r4_58, out r5_59, out r6_27, out r7_60, out r8_61, out r9_62, out r10_63, out r11_64, out r12_24, out r13_65)
	r0Out = r0_26
	r1Out = r1_25
	r2Out = r2_23
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = r6_27
	r7Out = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = r12_24
	r13Out = <invalid>
	return <invalid>
fn00003C70_exit:


word32 fn00003C76()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003C70
// MayUse: 
// LiveOut: r12
// Trashed: r12 r2
// Preserved: sp
fn00003C76_entry:
	word16 r0
	word16 r2
	word16 r7
	word16 r11
	word32 r12
	word32 r13
l00003C76_thunk_fn0000356E:
	word32 r12_5
	word16 r0_15
	word16 r1_16
	word16 r2_17
	word16 r3_18
	word16 r4_19
	word16 r5_20
	word16 r6_21
	word16 r7_22
	word16 r8_23
	word16 r9_24
	word16 r10_25
	word16 r11_26
	word32 r13_27
	fn0000356E(r0, r2, r7, r11, r12, r13, out r0_15, out r1_16, out r2_17, out r3_18, out r4_19, out r5_20, out r6_21, out r7_22, out r8_23, out r9_24, out r10_25, out r11_26, out r12_5, out r13_27)
	return r12_5
fn00003C76_exit:


word32 fn00003D1C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn00003C70
// MayUse: 
// LiveOut: r12
// Trashed: CFLNZ r0 r1 r12 r2 r3 r4 r5 r6
// Preserved: sp
fn00003D1C_entry:
	word16 r7
	word16 r11
	word32 r13
l00003D1C_thunk_fn0000356E:
	word16 r1_64
	word16 r0_63
	word32 r12_36
	word16 r2_65
	word16 r3_66
	word16 r4_67
	word16 r5_68
	word16 r6_69
	word16 r7_70
	word16 r8_71
	word16 r9_72
	word16 r10_73
	word16 r11_74
	word32 r13_75
	fn0000356E(r0, r2, r7, r11, r12, r13, out r0_63, out r1_64, out r2_65, out r3_66, out r4_67, out r5_68, out r6_69, out r7_70, out r8_71, out r9_72, out r10_73, out r11_74, out r12_36, out r13_75)
	return r12_36
fn00003D1C_exit:


word16 fn00003FB8(word32 r1_r0, word32 r3_r2, word32 r9_r8, word16 r5, word16 r7, word32 r12, word32 r13, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn00004CD4
// MayUse:  r12:[0..31] r13:[0..31] r5:[0..7] r7:[0..15] Sequence r1:r0:[0..31] Sequence r3:r2:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00003FB8_entry:
	word32 ra
	word16 r10
	word16 r4
	word16 r8 = SLICE(r9_r8, word16, 0)
l00003FB8:
	Mem14[r1_r0 + r3_r2:byte] = SLICE(r5, byte, 0)
	word32 r3_r2_38 = (CONVERT(Mem14[CONVERT(SLICE(r5, byte, 0), byte, int32) + 0xF32E<24>:byte], byte, word32) << 2<8>) + r12
	Mem44[r3_r2_38 + 0x8DC<32>:word16] = Mem14[r3_r2_38 + 0x8DC<32>:word16]
	word16 r3_39 = SLICE(r3_r2_38, word16, 16)
	word16 r2_40 = SLICE(r3_r2_38, word16, 0)
	branch r8 <u 0xFF<16> l00004410
l00004410:
	word16 r1_52 = CONVERT(r2_40 != 0x45<16>, bool, int16)
l0000441A_thunk_fn0000441E:
	word16 r1_63
	word16 r10_64
	word16 r11_65
	word32 r12_66
	word32 r13_67
	word16 r2_68
	word16 r3_69
	word16 r4_70
	word16 r5_71
	word16 r6_72
	word16 r7_73
	word16 r8_74
	word16 r9_75
	word32 ra_76
	word16 r0_62 = fn0000441E(r9_r8, r1_52, r7, r13, out r1_63, out r2_68, out r3_69, out r4_70, out r5_71, out r6_72, out r7_73, out r8_74, out r9_75, out r10_64, out r11_65, out r12_66, out r13_67, out ra_76)
	r1Out = r1_63
	r2Out = r2_68
	r3Out = r3_69
	r4Out = r4_70
	r5Out = r5_71
	r6Out = r6_72
	r7Out = r7_73
	r8Out = r8_74
	r9Out = r9_75
	r10Out = r10_64
	r11Out = r11_65
	r12Out = r12_66
	r13Out = r13_67
	raOut = ra_76
	return r0_62
l00003FE4:
	word32 r1_r0_99 = (CONVERT(Mem44[CONVERT(r8, word16, word32) + 0xF42E<24>:byte], byte, int32) << 2<8>) + r12
	word16 r1_100 = SLICE(r1_r0_99, word16, 16)
	word16 r2_102 = Mem44[r1_r0_99 + 0x12BC<32>:word16]
	Mem105[SEQ(r1_100 + 1<16>, SLICE(r1_r0_99, word16, 0)) + 0x12BC<32>:word16] = r2_102
	word32 ra_108 = SEQ(SLICE(ra, word16, 16), Mem105[r12 + 0x23EC<32>:word16])
	word16 r0_109 = Mem105[r12 + 0x23E8<32>:word16]
	Mem117[r12 + 0xB4<32>:word16] = Mem111[r12 + 0xB4<32>:word16]
l00004016_thunk_fn0000401A:
	word16 r11_118
	word32 r12_119
	word16 r6_120
	word16 r7_121
	word16 r8_122
	word16 r9_123
	word16 r1_169
	word16 r2_170
	word16 r3_171
	word16 r4_172
	word16 r5_173
	word16 r10_174
	word32 r13_175
	word32 ra_176
	fn0000401A(r12, out r1_169, out r2_170, out r3_171, out r4_172, out r5_173, out r6_120, out r7_121, out r8_122, out r9_123, out r10_174, out r11_118, out r12_119, out r13_175, out ra_176)
	r1Out = r1_100 + 2<16>
	r2Out = r2_102
	r3Out = r3_39
	r4Out = r4
	r5Out = r5
	r6Out = r6_120
	r7Out = r7_121
	r8Out = r8_122
	r9Out = r9_123
	r10Out = r10
	r11Out = r11_118
	r12Out = r12_119
	r13Out = r13
	raOut = ra_108
	return r0_109
fn00003FB8_exit:


word16 fn0000401A(word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003FB8
//      fn0000402E
// MayUse:  r12:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CF r11 r12 r6 r7 r8 r9
// Preserved: sp
fn0000401A_entry:
	word16 r7
	word16 r9
	word16 r8
	word16 r2
	word16 r6
	word16 r10
	word32 r13
l0000401A:
	Mem17[r12 + 0xB8<32>:word16] = 0xFFFE<16>
l0000402C_thunk_fn0000402E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word32 stackArg6 = <invalid>
	word32 stackArg10 = <invalid>
	word32 stackArg14 = <invalid>
	word32 stackArg18 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg70 = <invalid>
	word32 stackArg94 = <invalid>
	word16 stackArg65514 = <invalid>
	word32 stackArg65550 = <invalid>
	word32 stackArg65592 = <invalid>
	word16 stackArg130960 = <invalid>
	word16 r8_25
	word16 r11_26
	word32 r12_27
	word16 r9_28
	word16 r6_29
	word16 r7_30
	word16 r0_72
	word16 r1_73
	word16 r2_74
	word16 r3_75
	word16 r4_76
	word16 r5_77
	word16 r10_78
	word32 r13_79
	word32 ra_80
	fn0000402E(SEQ(r9, r8), r2, r6, r7, r10, r12, r13, stackArg0, stackArg2, stackArg6, stackArg10, stackArg14, stackArg18, stackArg62, stackArg70, stackArg94, stackArg65514, stackArg65550, stackArg65592, stackArg130960, out r0_72, out r1_73, out r2_74, out r3_75, out r4_76, out r5_77, out r6_29, out r7_30, out r8_25, out r9_28, out r10_78, out r11_26, out r12_27, out r13_79, out ra_80)
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = r6_29
	r7Out = r7_30
	r8Out = r8_25
	r9Out = r9_28
	r10Out = <invalid>
	r11Out = r11_26
	r12Out = r12_27
	r13Out = <invalid>
	raOut = <invalid>
	return <invalid>
fn0000401A_exit:


bool fn0000402E(word32 r9_r8, word16 r2, word16 r6, word16 r7, word16 r10, word32 r12, word32 r13, word16 wArg00, word32 dwArg02, word32 dwArg06, word32 dwArg0A, word32 dwArg0E, word32 dwArg12, word32 dwArg3E, word32 dwArg46, word32 dwArg5E, word16 wArgFFEA, word32 dwArg1000E, word32 dwArg10038, word16 wArg1FF90, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn00003A36
//      fn0000401A
// MayUse:  r10:[0..15] r12:[0..31] r13:[0..31] r2:[0..15] r6:[0..15] r7:[0..15] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31] Stack +000E:[0..31] Stack +0012:[0..31] Stack +003E:[0..31] Stack +0046:[0..31] Stack +005E:[0..31] Stack +1000E:[0..31] Stack +10038:[0..31] Stack +1FF90:[0..15] Stack +FFEA:[0..15]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000402E_entry:
	word32 r5_r4
	word16 wLoc06
	word16 wLoc04
	word16 r0
	word16 r1
	word16 r5 = SLICE(r5_r4, word16, 16)
	word16 wArg06 = SLICE(dwArg06, word16, 0)
l0000402E:
	Mem5[r12 + 0xAC<32>:word16] = r6
	branch r6 >u r10 l00004248
l00004248:
l00004268:
	branch r2 <u 2<16> l0000431A
l0000431A:
	Mem18[r12 + 0x240C<32>:word16] = 2<16>
	branch wArg06 != 4<16> l0000427E
l00004274:
	Mem22[r12 + 0x240C<32>:word16] = r2
	branch wArg06 == 4<16> l00004326
l00004326:
	word16 r5_49
	word16 r4_50
	word32 r1_r0_30 = CONVERT(r2, word16, word32)
	word16 r0_34 = SLICE(r1_r0_30, word16, 0)
	word32 r5_r4_35 = Mem27[r12 + 0x98<32>:word32] - r1_r0_30
	branch r5_r4_35 > 0<32> l000043C0
l000043C0:
	r4_50 = 0<16> (alias)
	r5_49 = 0<16> (alias)
l00004334:
	word32 r5_r4_48 = (r5_r4_35 & 0xFFFF<32>) + Mem27[r12 + 0x60<32>:word32]
	r5_49 = SLICE(r5_r4_48, word16, 16) (alias)
	r4_50 = SLICE(r5_r4_48, word16, 0) (alias)
l00004340:
	word32 r12_81
	word32 r13_82
	word32 r3_r2_600 = fn0000B218(r9_r8, r4_50, r5_49, r10, r13, SEQ(wArg00, r0_34), dwArg02, dwArg06, dwArg0A, dwArg0E, dwArg12, dwArg3E, dwArg46, dwArg5E, wArgFFEA, dwArg1000E, dwArg10038, wArg1FF90, out r12_81, out r13_82)
	Mem104[r12_81 + 0x98<32>:word32] = CONVERT(Mem56[r12_81 + 0xAC<32>:word16], word16, word32)
	word32 r9_r8_105 = Mem104[r12_81:word32]
	word16 r11_115
	word16 r5_117
	word16 r4_618
	word16 r6_619
	word16 r7_620
	word32 ra_621
	fn0000B09C(r3_r2_600, SLICE(r3_r2_600, word16, 16), out r4_618, out r5_117, out r6_619, out r7_620, out r11_115, out ra_621)
	word16 r2_83 = SLICE(r3_r2_600, word16, 0)
	word32 sp_90 = <invalid>
	word16 r0_128 = Mem104[SEQ(r11_115, r2_83) + 0x14<32>:word16]
	word16 r7_129 = Mem104[r9_r8_105 + 0x10<32>:word16]
	branch r0_128 >=u r7_129 l0000436C
l0000436A:
	r7_129 = r0_128
l0000436C:
	branch r7_129 == 0<16> l000043A6
l0000436E_thunk_fn00003A36:
	word16 r6_150
	word32 r12_151
	word16 r10_152
	word16 r2_153
	word16 r1_154
	word16 r7_156
	word16 r9_157
	word16 r8_158
	word16 r11_159
	word32 ra_160
	word16 r3_161
	word32 r13_162
	word16 r4_163
	word16 r5_164
	r0Out = fn00003A36(r0, r1, r2_83, r5_117, r12_81, r13_82, out r1_154, out r2_153, out r3_161, out r4_163, out r5_164, out r6_150, out r7_156, out r8_158, out r9_157, out r10_152, out r11_159, out r12_151, out r13_162, out ra_160)
	r1Out = r1_154
	r2Out = r2_153
	r3Out = r3_161
	r4Out = r4_163
	r5Out = r5_164
	r6Out = r6_150
	r7Out = r7_156
	r8Out = r8_158
	r9Out = r9_157
	r10Out = r10_152
	r11Out = r11_159
	r12Out = r12_151
	r13Out = r13_162
	raOut = ra_160
	word16 CFLNZ_165 = <invalid>
	return SLICE(CFLNZ_165, bool, 6)
l00004370:
	word32 r13_166 = CONVERT(r7_129, word16, word32)
	word16 r2_175 = Mem104[r9_r8_105 + 0xC<32>:word16]
	word16 r5_173 = Mem104[SEQ(r11_115, r2_83) + 0x12<32>:word16]
	Mem172[sp_90:word32] = r13_166
l00004376_thunk_fn00003A36:
	word16 r6_177
	word32 r12_178
	word16 r10_179
	word16 r2_180
	word16 r1_181
	word16 r7_183
	word16 r9_184
	word16 r8_185
	word16 r11_186
	word32 ra_187
	word16 r3_188
	word32 r13_189
	word16 r4_190
	word16 r5_191
	r0Out = fn00003A36(r0, r1, r2_175, r5_173, r12_81, r13_166, out r1_181, out r2_180, out r3_188, out r4_190, out r5_191, out r6_177, out r7_183, out r8_185, out r9_184, out r10_179, out r11_186, out r12_178, out r13_189, out ra_187)
	r1Out = r1_181
	r2Out = r2_180
	r3Out = r3_188
	r4Out = r4_190
	r5Out = r5_191
	r6Out = r6_177
	r7Out = r7_183
	r8Out = r8_185
	r9Out = r9_184
	r10Out = r10_179
	r11Out = r11_186
	r12Out = r12_178
	r13Out = r13_189
	raOut = ra_187
	word16 CFLNZ_192 = <invalid>
	return SLICE(CFLNZ_192, bool, 6)
l0000427E:
	branch Mem194[r12 + 0x23EC<32>:word16] == 0<16> l00003B28
l00004286_thunk_fn00003A36:
	word16 r6_211
	word32 r12_212
	word16 r10_213
	word16 r2_214
	word16 r1_215
	word16 r7_217
	word16 r9_218
	word16 r8_219
	word16 r11_220
	word32 ra_221
	word16 r3_222
	word32 r13_223
	word16 r4_224
	word16 r5_225
	r0Out = fn00003A36(r0, r1, r2, r5 | 0x9F2C<16>, r12, r13, out r1_215, out r2_214, out r3_222, out r4_224, out r5_225, out r6_211, out r7_217, out r8_219, out r9_218, out r10_213, out r11_220, out r12_212, out r13_223, out ra_221)
	r1Out = r1_215
	r2Out = r2_214
	r3Out = r3_222
	r4Out = r4_224
	r5Out = r5_225
	r6Out = r6_211
	r7Out = r7_217
	r8Out = r8_219
	r9Out = r9_218
	r10Out = r10_213
	r11Out = r11_220
	r12Out = r12_212
	r13Out = r13_223
	raOut = ra_221
	word16 CFLNZ_226 = <invalid>
	return SLICE(CFLNZ_226, bool, 6)
l0000428A:
	word32 r1_r0_228 = CONVERT(r2, word16, word32)
	word16 r0_232 = SLICE(r1_r0_228, word16, 0)
	word32 r5_r4_233 = Mem194[r12 + 0x98<32>:word32] - r1_r0_228
	branch r5_r4_233 > 0<32> l000044DE
l00004296_thunk_fn00004450:
	word16 r0_242
	word16 r1_243
	word32 r13_244
	word16 r5_245
	word16 r7_246
	word16 r2_248
	word16 r3_249
	word16 r4_250
	word16 r10_251
	word16 r11_252
	word32 r12_253
	word16 r6_254
	word16 r8_255
	word16 r9_256
	word32 ra_257
	bool Z_262 = fn00004450(r9_r8, r7, r13, out r0_242, out r1_243, out r2_248, out r3_249, out r4_250, out r5_245, out r6_254, out r7_246, out r8_255, out r9_256, out r10_251, out r11_252, out r12_253, out r13_244, out ra_257)
	r0Out = r0_242
	r1Out = r1_243
	r2Out = r2_248
	r3Out = r3_249
	r4Out = r4_250
	r5Out = r5_245
	r6Out = r6_254
	r7Out = r7_246
	r8Out = r8_255
	r9Out = r9_256
	r10Out = r10_251
	r11Out = r11_252
	r12Out = r12_253
	r13Out = r13_244
	raOut = ra_257
	return Z_262
l0000429A:
	word32 r5_r4_269 = (r5_r4_233 & 0xFFFF<32>) + Mem194[r12 + 0x60<32>:word32]
	word32 r12_280
	word32 r13_616
	word32 r3_r2_597 = fn0000B218(r9_r8, SLICE(r5_r4_269, word16, 0), SLICE(r5_r4_269, word16, 16), r10, r13, SEQ(wArg00, r0_232), dwArg02, dwArg06, dwArg0A, dwArg0E, dwArg12, dwArg3E, dwArg46, dwArg5E, wArgFFEA, dwArg1000E, dwArg10038, wArg1FF90, out r12_280, out r13_616)
	Mem303[r12_280 + 0x98<32>:word32] = CONVERT(Mem274[r12_280 + 0xAC<32>:word16], word16, word32)
	word32 r9_r8_304 = Mem303[r12_280:word32]
	word16 r3_283 = SLICE(r3_r2_597, word16, 16)
	word16 r11_314
	word16 r6_317
	word32 ra_319
	word16 r7_617
	word16 r4_315
	word16 r5_316
	fn0000B09C(r3_r2_597, r3_283, out r4_315, out r5_316, out r6_317, out r7_617, out r11_314, out ra_319)
	word16 r2_282 = SLICE(r3_r2_597, word16, 0)
	word32 sp_289 = <invalid>
	word16 r9_305 = SLICE(r9_r8_304, word16, 16)
	word16 r8_306 = SLICE(r9_r8_304, word16, 0)
	word16 r0_327 = Mem303[SEQ(r11_314, r2_282) + 0x14<32>:word16]
	word16 r7_328 = Mem303[r9_r8_304 + 0x10<32>:word16]
	word32 dwLoc04_592 = SEQ(r0_232, wLoc04)
	branch r0_327 >=u r7_328 l000042D2
l000042D0:
	r7_328 = r0_327
l000042D2:
	word16 r2_352
	r2_352 = r2_282
	branch r7_328 == 0<16> l0000430C
l000042D6:
	word32 r3_r2_341 = Mem303[r9_r8_304 + 0xC<32>:word32]
	word32 r5_r4_345 = Mem303[SEQ(r11_314, r2_282) + 0x10<32>:word32]
	word32 r13_337 = CONVERT(r7_328, word16, word32)
	Mem348[sp_289:word32] = r13_337
	word32 r13_355
	fn0000DB24(r3_r2_341, r5_r4_345, r13_337, out r13_355)
	Mem365[r9_r8_304 + 0xC<32>:word32] = Mem348[r9_r8_304 + 0xC<32>:word32] + r13_355
	Mem374[SEQ(r11_314, r2_282) + 0x10<32>:word32] = Mem365[SEQ(r11_314, r2_282) + 0x10<32>:word32] + r13_355
	Mem381[r9_r8_304 + 0x14<32>:word32] = Mem374[r9_r8_304 + 0x14<32>:word32] + r13_355
	Mem384[r9_r8_304 + 0x10<32>:word16] = Mem381[r9_r8_304 + 0x10<32>:word16]
	word32 r1_r0_386 = Mem384[SEQ(r11_314, r2_282) + 0x14<32>:word32]
	Mem391[SEQ(r11_314, r2_282) + 0x14<32>:word32] = r1_r0_386
	r3_283 = SLICE(r3_r2_341, word16, 16) (alias)
	r2_352 = SLICE(r3_r2_341, word16, 0) (alias)
	r5_316 = SLICE(r5_r4_345, word16, 16) (alias)
	r4_315 = SLICE(r5_r4_345, word16, 0) (alias)
	branch r1_r0_386 != 0<32> l0000430C
l00004308:
	Mem401[SEQ(r11_314, r2_282) + 0x10<32>:word32] = Mem391[SEQ(r11_314, r2_282) + 8<32>:word32]
l0000430C:
	word32 r1_r0_405 = Mem404[r12_280:word32]
	word16 r0_408 = Mem404[r1_r0_405 + 0x10<32>:word16]
	r0Out = CONVERT(r0_408 != 0<16>, bool, int16)
	r1Out = SLICE(r1_r0_405, word16, 16)
	r2Out = r2_352
	r3Out = r3_283
	r4Out = r4_315
	r5Out = r5_316
	r6Out = r6_317
	r7Out = wLoc06
	r8Out = r8_306
	r9Out = r9_305
	r10Out = r2_282
	r11Out = r11_314
	r12Out = r12_280
	r13Out = dwLoc04_592
	raOut = ra_319
	return SLICE(cond(r0_408 - 0<16>), bool, 6)
l00004038:
	word16 r2_439 = CONVERT(Mem5[Mem5[r12 + 0x60<32>:word32] + 2<32>:byte], byte, word16)
	Mem441[r12 + 0x80<32>:word16] = r2_439
l0000405E_thunk_fn00003A36:
	word16 r6_445
	word32 r12_446
	word16 r10_447
	word16 r2_448
	word16 r1_449
	word16 r7_451
	word16 r9_452
	word16 r8_453
	word16 r11_454
	word32 ra_455
	word16 r3_456
	word32 r13_457
	word16 r4_458
	word16 r5_459
	r0Out = fn00003A36(r0, r1, r2_439, r5, r12, r13, out r1_449, out r2_448, out r3_456, out r4_458, out r5_459, out r6_445, out r7_451, out r8_453, out r9_452, out r10_447, out r11_454, out r12_446, out r13_457, out ra_455)
	r1Out = r1_449
	r2Out = r2_448
	r3Out = r3_456
	r4Out = r4_458
	r5Out = r5_459
	r6Out = r6_445
	r7Out = r7_451
	r8Out = r8_453
	r9Out = r9_452
	r10Out = r10_447
	r11Out = r11_454
	r12Out = r12_446
	r13Out = r13_457
	raOut = ra_455
	word16 CFLNZ_460 = <invalid>
	return SLICE(CFLNZ_460, bool, 6)
fn0000402E_exit:


word16 fn0000441E(word32 r9_r8, word16 r1, word16 r7, word32 r13, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003FB8
//      fn0000402E
// MayUse:  r1:[0..7] r13:[0..31] r7:[0..15] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000441E_entry:
l0000441E:
	branch SLICE(r1, byte, 0) == 0<8> l0000443C_thunk_fn00004450
l0000443C_thunk_fn00004450:
	word16 r0_88
	word16 r1_89
	word32 r13_90
	word16 r5_91
	word16 r7_92
	word16 r2_94
	word16 r3_95
	word16 r4_96
	word16 r10_97
	word16 r11_98
	word32 r12_99
	word16 r6_100
	word16 r8_101
	word16 r9_102
	word32 ra_103
	fn00004450(r9_r8, r7, r13, out r0_88, out r1_89, out r2_94, out r3_95, out r4_96, out r5_91, out r6_100, out r7_92, out r8_101, out r9_102, out r10_97, out r11_98, out r12_99, out r13_90, out ra_103)
	r1Out = r1_89
	r2Out = r2_94
	r3Out = r3_95
	r4Out = r4_96
	r5Out = r5_91
	r6Out = r6_100
	r7Out = r7_92
	r8Out = r8_101
	r9Out = r9_102
	r10Out = r10_97
	r11Out = r11_98
	r12Out = r12_99
	r13Out = r13_90
	raOut = ra_103
	return r0_88
l0000443C_thunk_fn0000443E:
	word16 r1_111
	word16 r10_112
	word16 r11_113
	word32 r12_114
	word32 r13_115
	word16 r2_116
	word16 r3_117
	word16 r4_118
	word16 r5_119
	word16 r6_120
	word16 r7_121
	word16 r8_122
	word16 r9_123
	word32 ra_124
	word16 r0_110 = fn0000443E(r9_r8, r7, r13, out r1_111, out r2_116, out r3_117, out r4_118, out r5_119, out r6_120, out r7_121, out r8_122, out r9_123, out r10_112, out r11_113, out r12_114, out r13_115, out ra_124)
	r1Out = r1_111
	r2Out = r2_116
	r3Out = r3_117
	r4Out = r4_118
	r5Out = r5_119
	r6Out = r6_120
	r7Out = r7_121
	r8Out = r8_122
	r9Out = r9_123
	r10Out = r10_112
	r11Out = r11_113
	r12Out = r12_114
	r13Out = r13_115
	raOut = ra_124
	return r0_110
fn0000441E_exit:


word16 fn0000443E(word32 r9_r8, word16 r7, word32 r13, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn0000441E
// MayUse:  r13:[0..31] r7:[0..15] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000443E_entry:
l0000443E:
	branch true l00004402
l0000444E_thunk_fn00004450:
	word16 r0_19
	word16 r1_20
	word32 r13_21
	word16 r5_22
	word16 r7_23
	word16 r2_25
	word16 r3_26
	word16 r4_27
	word16 r10_28
	word16 r11_29
	word32 r12_30
	word16 r6_31
	word16 r8_32
	word16 r9_33
	word32 ra_34
	fn00004450(r9_r8, r7, r13, out r0_19, out r1_20, out r2_25, out r3_26, out r4_27, out r5_22, out r6_31, out r7_23, out r8_32, out r9_33, out r10_28, out r11_29, out r12_30, out r13_21, out ra_34)
	r1Out = r1_20
	r2Out = r2_25
	r3Out = r3_26
	r4Out = r4_27
	r5Out = r5_22
	r6Out = r6_31
	r7Out = r7_23
	r8Out = r8_32
	r9Out = r9_33
	r10Out = r10_28
	r11Out = r11_29
	r12Out = r12_30
	r13Out = r13_21
	raOut = ra_34
	return r0_19
l0000444E_thunk_fn00004450:
	word16 r0_41
	word16 r1_42
	word32 r13_43
	word16 r5_44
	word16 r7_45
	word16 r2_47
	word16 r3_48
	word16 r4_49
	word16 r10_50
	word16 r11_51
	word32 r12_52
	word16 r6_53
	word16 r8_54
	word16 r9_55
	word32 ra_56
	fn00004450(r9_r8, r7, r13, out r0_41, out r1_42, out r2_47, out r3_48, out r4_49, out r5_44, out r6_53, out r7_45, out r8_54, out r9_55, out r10_50, out r11_51, out r12_52, out r13_43, out ra_56)
	r1Out = r1_42
	r2Out = r2_47
	r3Out = r3_48
	r4Out = r4_49
	r5Out = r5_44
	r6Out = r6_53
	r7Out = r7_45
	r8Out = r8_54
	r9Out = r9_55
	r10Out = r10_50
	r11Out = r11_51
	r12Out = r12_52
	r13Out = r13_43
	raOut = ra_56
	return r0_41
fn0000443E_exit:


bool fn00004450(word32 r9_r8, word16 r7, word32 r13, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn0000441E
// MayUse:  r13:[0..31] r7:[0..15] Sequence r9:r8:[0..31]
// LiveOut: Z r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn00004450_entry:
	word16 wArg10
	word32 dwArg12
	word16 r0
	word16 r1
	word16 r10
	word16 r11
	word32 r12
	word16 r2
	word16 r3
	word16 r4
	word16 r5
	word16 r6
	word32 ra
	word32 dwLoc12
	word16 wLoc14
	word16 wLoc06
	word32 dwLoc04
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
l00004450:
	bool Z_7 = SLICE(cond(r9_r8 - 0<32>), bool, 6)
	branch r9_r8 == 0<32> l00004452_thunk_fn000046CA
l00004452_thunk_fn000046CA:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word16 stackArg6 = <invalid>
	word32 stackArg8 = <invalid>
	word16 stackArg12 = <invalid>
	word32 stackArg38 = <invalid>
	word32 stackArg42 = <invalid>
	word32 stackArg46 = <invalid>
	word32 stackArg50 = <invalid>
	word32 stackArg54 = <invalid>
	word32 stackArg58 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg66 = <invalid>
	word32 stackArg86 = <invalid>
	word32 stackArg90 = <invalid>
	word32 stackArg244 = <invalid>
	word16 stackArg514 = <invalid>
	word16 stackArg518 = <invalid>
	word32 stackArg65544 = <invalid>
	word16 r1_473
	word16 r2_474
	word16 r3_475
	word16 r4_476
	word16 r5_477
	word16 r6_478
	word16 r8_479
	word16 r9_480
	word16 r10_481
	word16 r11_482
	word32 r12_483
	word32 r13_484
	word32 ra_485
	fn000046CA(SEQ(r11, r10), r9_r8, r7, r13, ra, stackArg0, stackArg2, stackArg6, stackArg8, stackArg12, stackArg38, stackArg42, stackArg46, stackArg50, stackArg54, stackArg58, stackArg62, stackArg66, stackArg86, stackArg90, stackArg244, stackArg514, stackArg518, stackArg65544, out r1_473, out r2_474, out r3_475, out r4_476, out r5_477, out r6_478, out r8_479, out r9_480, out r10_481, out r11_482, out r12_483, out r13_484, out ra_485)
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = ra
	return Z_7
l00004456:
	word16 r5_10 = Mem0[r13 + 0x18<32>:word16]
	bool Z_13 = SLICE(cond(r5_10 - 2<16>), bool, 6)
	branch r5_10 == 2<16> l0000445C_thunk_fn000046C0
l0000445C_thunk_fn000046C0:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word16 stackArg6 = <invalid>
	word32 stackArg8 = <invalid>
	word16 stackArg12 = <invalid>
	word32 stackArg38 = <invalid>
	word32 stackArg42 = <invalid>
	word32 stackArg46 = <invalid>
	word32 stackArg50 = <invalid>
	word32 stackArg54 = <invalid>
	word32 stackArg58 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg66 = <invalid>
	word32 stackArg86 = <invalid>
	word32 stackArg90 = <invalid>
	word32 stackArg244 = <invalid>
	word16 stackArg514 = <invalid>
	word16 stackArg518 = <invalid>
	word32 stackArg65544 = <invalid>
	word16 r1_441
	word16 r2_442
	word16 r3_443
	word16 r4_444
	word16 r5_445
	word16 r6_446
	word16 r8_447
	word16 r9_448
	word16 r10_449
	word16 r11_450
	word32 r12_451
	word32 r13_452
	word32 ra_453
	fn000046C0(SEQ(r3, r2), r9_r8, r7, r13, ra, stackArg0, stackArg2, stackArg6, stackArg8, stackArg12, stackArg38, stackArg42, stackArg46, stackArg50, stackArg54, stackArg58, stackArg62, stackArg66, stackArg86, stackArg90, stackArg244, stackArg514, stackArg518, stackArg65544, out r1_441, out r2_442, out r3_443, out r4_444, out r5_445, out r6_446, out r8_447, out r9_448, out r10_449, out r11_450, out r12_451, out r13_452, out ra_453)
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5_10
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = ra
	return Z_13
l00004460:
	bool Z_15 = SLICE(cond(r5_10 - 1<16>), bool, 6)
	branch r5_10 == 1<16> l00004462_thunk_fn000046D2
l00004462_thunk_fn000046D2:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg2 = <invalid>
	word16 stackArg6 = <invalid>
	word32 stackArg8 = <invalid>
	word16 stackArg12 = <invalid>
	word32 stackArg38 = <invalid>
	word32 stackArg42 = <invalid>
	word32 stackArg46 = <invalid>
	word32 stackArg50 = <invalid>
	word32 stackArg54 = <invalid>
	word32 stackArg58 = <invalid>
	word32 stackArg62 = <invalid>
	word32 stackArg66 = <invalid>
	word32 stackArg86 = <invalid>
	word32 stackArg90 = <invalid>
	word32 stackArg244 = <invalid>
	word16 stackArg514 = <invalid>
	word16 stackArg518 = <invalid>
	word32 stackArg65544 = <invalid>
	word16 r1_409
	word16 r2_410
	word16 r3_411
	word16 r4_412
	word16 r5_413
	word16 r6_414
	word16 r8_415
	word16 r9_416
	word16 r10_417
	word16 r11_418
	word32 r12_419
	word32 r13_420
	word32 ra_421
	fn000046D2(SEQ(r11, r10), r9_r8, r7, r13, ra, stackArg0, stackArg2, stackArg6, stackArg8, stackArg12, stackArg38, stackArg42, stackArg46, stackArg50, stackArg54, stackArg58, stackArg62, stackArg66, stackArg86, stackArg90, stackArg244, stackArg514, stackArg518, stackArg65544, out r1_409, out r2_410, out r3_411, out r4_412, out r5_413, out r6_414, out r8_415, out r9_416, out r10_417, out r11_418, out r12_419, out r13_420, out ra_421)
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5_10
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = ra
	return Z_15
l00004466:
	word16 r1_16 = Mem11[r13 + 0xB4<32>:word16]
	bool Z_19 = SLICE(cond(r1_16 - 0<16>), bool, 6)
	branch r1_16 != 0<16> l00004402
l00004402:
	r0Out = 0xFFFE<16>
	r1Out = r1_16
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5_10
	r6Out = r6
	r7Out = wArg10
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = dwArg12
	raOut = ra
	return Z_19
l00004472:
	word16 r6_163
	Mem26[r13 + 0x18<32>:word16] = r1_16
	word16 r0_27 = Mem26[r13 + 0x50<32>:word16]
	r6_163 = r6
	branch r7 <u r0_27 l000044B6
l0000447C:
	r6_163 = r6
	branch r5_10 != 0<16> l000044AE
l00004480:
	word32 r6_r5_37 = CONVERT(Mem26[r13 + 0x84<32>:word16], word16, word32)
	Mem50[SEQ(r1_16, r0_27) + r6_r5_37 * 2<32>:word16] = r5_10
	word32 r13_53 = fn0000DB44(SEQ(r1_16, r0_27), r6_r5_37 * 2<32>, r5_10, r13)
	word32 sp_54 = <invalid>
	word16 r5_57 = Mem50[sp_54 + 2<32>:word16]
	Mem58[r13_53 + 0xAC<32>:word16] = r5_57
	Mem62[r13_53 + 0x98<32>:word32] = 0<32>
	Mem63[r13_53 + 0x240C<32>:word16] = r5_57
	r9 = r9 + 0xFFFF<16>
	r6_163 = SLICE(r6_r5_37 * 2<32>, word16, 16) (alias)
	r0_27 = Mem63[r13_53 + 0x50<32>:word16]
l000044AE:
	r9_r8 = SEQ(r9, r8) + CONVERT(r7, word16, word32)
	r7 = r0_27 - r7
l000044B6:
	word32 r4_r3_91 = Mem87[dwLoc12:word32]
	word16 r1_86 = Mem81[dwLoc12 + 4<32>:word16]
	Mem99[dwLoc12 + 4<32>:word16] = r7
	Mem103[dwLoc12:word32] = r9_r8
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word16 stackArg12 = <invalid>
	word32 stackArg14 = <invalid>
	word16 stackArg18 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg96 = <invalid>
	word32 stackArg65552 = <invalid>
	word32 stackArg65594 = <invalid>
	word16 stackArg130962 = <invalid>
	word32 r9_r8_368
	word16 r7_369
	word32 r12_370
	word32 r13_371
	fn000030F2(SEQ(r6, r5), r4, r8, r12, r13, stackArg0, stackArg4, stackArg8, stackArg12, stackArg14, stackArg18, stackArg20, stackArg64, stackArg72, stackArg96, stackArg65552, stackArg65594, stackArg130962, out r9_r8_368, out r7_369, out r12_370, out r13_371)
	word32 r3_r2_104 = SEQ(SLICE(r4_r3_91, word16, 0), SLICE(dwLoc12, word16, 0))
	word16 r3_106 = Mem103[r3_r2_104 + 0xB4<32>:word16]
	word16 r8_101 = SLICE(r9_r8, word16, 0)
	word16 r9_100 = SLICE(r9_r8, word16, 16)
	word16 r5_161 = SLICE(dwLoc12, word16, 16)
	word32 r13_105 = r3_r2_104
	bool Z_300 = SLICE(cond(r3_106 - 2<16>), bool, 6)
	branch r3_106 >=u 2<16> l00004552
l000044D6:
	r9_100 = r3_106
l000044D8:
	word16 r1_112 = Mem111[r13_105 + 0xAC<32>:word16]
	word16 r7_113 = Mem111[r13_105 + 0x90<32>:word16]
l000044DE:
	word32 r11_r10_118 = Mem117[r13_105 + 0x78<32>:word32]
	ra = Mem111[r13_105 + 0x60<32>:word32]
	r11 = SLICE(r11_r10_118, word16, 16) (alias)
	r10 = SLICE(r11_r10_118, word16, 0) (alias)
	r12 = Mem117[r13_105 + 0x70<32>:word32]
	word16 r6_120 = Mem117[r13_105 + 0x58<32>:word16]
	word16 r0_121 = Mem117[r13_105 + 0x80<32>:word16]
	word16 r1_123 = r1_112 + 0xFFFE<16> + 2<16>
	r8_101 = r7_113
l00004506:
	r0_121 = __a_shift<word16,word16>(r0_121, r7_113)
	Mem150[r13_105 + 0x80<32>:word16] = r0_121
	word32 r5_r4_160 = CONVERT(r0_121, word16, word32) * 2<32> + r11_r10_118
	r6_163 = Mem150[r5_r4_160:word16]
	word32 r3_r2_174 = CONVERT(r6_120, word16, word32) * 2<32> + r12
	Mem177[r3_r2_174:word16] = r6_163
	word16 r1_166 = r1_123 + 0<16> & r6_120
	Mem178[r5_r4_160:word16] = r1_166
	r5_161 = SLICE(r5_r4_160, word16, 16) (alias)
	r1_123 = r1_166 + 1<16>
	branch r9_100 != r1_166 + 1<16> l00004506
l0000453A:
	Mem184[r13_105 + 0xAC<32>:word16] = r1_166 + 1<16>
	Mem185[r13_105 + 0x5A<32>:word16] = 2<16>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word16 stackArg12 = <invalid>
	word32 stackArg14 = <invalid>
	word16 stackArg18 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg96 = <invalid>
	word32 stackArg65552 = <invalid>
	word32 stackArg65594 = <invalid>
	word16 stackArg130962 = <invalid>
	word32 r9_r8_386
	word16 r7_387
	word32 r12_388
	word32 r13_389
	fn000030F2(SEQ(r6, r5), r4, r8, r12, r13, stackArg0, stackArg4, stackArg8, stackArg12, stackArg14, stackArg18, stackArg20, stackArg64, stackArg72, stackArg96, stackArg65552, stackArg65594, stackArg130962, out r9_r8_386, out r7_387, out r12_388, out r13_389)
	r9_100 = Mem185[r3_r2_174 + 0xB4<32>:word16]
	r13_105 = r3_r2_174
	Z_300 = SLICE(cond(r9_100 - 2<16>), bool, 6) (alias)
	branch r9_100 <u 2<16> l000044D8
l00004550:
	r3_106 = r9_100
l00004552:
	word16 r0_193 = Mem192[r13_105 + 0xAC<32>:word16]
	Mem196[r13_105 + 0xAC<32>:word16] = r0_193
	Mem200[r13_105 + 0x98<32>:word32] = CONVERT(r0_193, word16, word32)
	Mem201[r13_105 + 0x240C<32>:word16] = r3_106 + r0_193
	Mem202[r13_105 + 0x5A<32>:word16] = 0<16>
	Mem203[r13_105 + 0x5C<32>:word16] = 2<16>
	Mem204[r13_105 + 0x50<32>:word16] = 2<16>
	Mem205[r13_105 + 0x54<32>:word16] = 0<16>
	Mem213[dwLoc12:word32] = r4_r3_91
	Mem215[dwLoc12 + 4<32>:word16] = r1_86
	Mem217[r13_105 + 0x18<32>:word16] = wLoc14
	r0Out = 0<16>
	r1Out = r1_86
	r2Out = wLoc14
	r3Out = SLICE(dwLoc12, word16, 0)
	r4Out = SLICE(dwLoc12, word16, 16)
	r5Out = r5_161
	r6Out = r6_163
	r7Out = wLoc06
	r8Out = r8_101
	r9Out = r9_100
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = dwLoc04
	raOut = ra
	return Z_300
fn00004450_exit:


word32 fn000046AC(word32 r9_r8, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg50, word32 dwArg54, word32 dwArgEE, word16 wArg01FC, word16 wArg0200, word32 dwArg10002, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004CD4
// MayUse:  r13:[0..31] r7:[0..15] ra:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +00EE:[0..31] Stack +01FC:[0..15] Stack +0200:[0..15] Stack +10002:[0..31]
// LiveOut: r0 r1 r11:r10 r12 r13 r2 r3 r4 r5 r6 r8 r9 ra
// Trashed: LNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved: CF
fn000046AC_entry:
	word16 r8 = SLICE(r9_r8, word16, 0)
l000046AC:
	branch r9_r8 == 0<32> l00004786
l000046B4_thunk_fn000046C6:
	word16 r1_20
	word16 r10_21
	word16 r11_22
	word32 r12_23
	word32 r13_24
	word16 r2_25
	word16 r3_26
	word16 r4_27
	word16 r5_28
	word16 r6_29
	word16 r8_31
	word16 r9_32
	word32 ra_33
	r0Out = fn000046C6(r9_r8, r9_r8, r7, r13, ra, r8, ra, wArg00, dwArg02, wArg06, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg50, dwArg54, dwArgEE, wArg01FC, wArg0200, dwArg10002, out r1_20, out r2_25, out r3_26, out r4_27, out r5_28, out r6_29, out r8_31, out r9_32, out r10_21, out r11_22, out r12_23, out r13_24, out ra_33)
	r1Out = r1_20
	r2Out = r2_25
	r3Out = r3_26
	r4Out = r4_27
	r5Out = r5_28
	r6Out = r6_29
	r8Out = r8_31
	r9Out = r9_32
	r12Out = r12_23
	r13Out = r13_24
	raOut = ra_33
	return SEQ(r11_22, r10_21)
l000046B6:
	branch Mem8[r9_r8 + 0x40<32>:word32] == 0<32> l00004786
l000046BC_thunk_fn000046C6:
	word16 r1_44
	word16 r10_45
	word16 r11_46
	word32 r12_47
	word32 r13_48
	word16 r2_49
	word16 r3_50
	word16 r4_51
	word16 r5_52
	word16 r6_53
	word16 r8_55
	word16 r9_56
	word32 ra_57
	r0Out = fn000046C6(r9_r8, r9_r8, r7, r13, ra, r8, ra, wArg00, dwArg02, wArg06, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg50, dwArg54, dwArgEE, wArg01FC, wArg0200, dwArg10002, out r1_44, out r2_49, out r3_50, out r4_51, out r5_52, out r6_53, out r8_55, out r9_56, out r10_45, out r11_46, out r12_47, out r13_48, out ra_57)
	r1Out = r1_44
	r2Out = r2_49
	r3Out = r3_50
	r4Out = r4_51
	r5Out = r5_52
	r6Out = r6_53
	r8Out = r8_55
	r9Out = r9_56
	r12Out = r12_47
	r13Out = r13_48
	raOut = ra_57
	return SEQ(r11_46, r10_45)
l000046BE:
l000046BE_thunk_fn000046C0:
	word16 r1_67
	word16 r10_68
	word16 r11_69
	word32 r12_70
	word32 r13_71
	word16 r2_72
	word16 r3_73
	word16 r4_74
	word16 r5_75
	word16 r6_76
	word16 r8_78
	word16 r9_79
	word32 ra_80
	r0Out = fn000046C0(r9_r8, r9_r8, r7, r13, ra, r8, ra, wArg00, dwArg02, wArg06, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg50, dwArg54, dwArgEE, wArg01FC, wArg0200, dwArg10002, out r1_67, out r2_72, out r3_73, out r4_74, out r5_75, out r6_76, out r8_78, out r9_79, out r10_68, out r11_69, out r12_70, out r13_71, out ra_80)
	r1Out = r1_67
	r2Out = r2_72
	r3Out = r3_73
	r4Out = r4_74
	r5Out = r5_75
	r6Out = r6_76
	r8Out = r8_78
	r9Out = r9_79
	r12Out = r12_70
	r13Out = r13_71
	raOut = ra_80
	return SEQ(r11_69, r10_68)
fn000046AC_exit:


word16 fn000046C0(word32 r3_r2, word32 r9_r8, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg08, word16 wArg0C, word32 dwArg26, word32 dwArg2A, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg56, word32 dwArg5A, word32 dwArgF4, word16 wArg0202, word16 wArg0206, word32 dwArg10008, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn000046AC
// MayUse:  r13:[0..31] r7:[0..15] ra:[0..31] Sequence r3:r2:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +0026:[0..31] Stack +002A:[0..31] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0056:[0..31] Stack +005A:[0..31] Stack +00F4:[0..31] Stack +0202:[0..15] Stack +0206:[0..15] Stack +10008:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn000046C0_entry:
l000046C0:
l000046C0_thunk_fn000046C6:
	word16 r1_79
	word16 r10_80
	word16 r11_81
	word32 r12_82
	word32 r13_83
	word16 r2_84
	word16 r3_85
	word16 r4_86
	word16 r5_87
	word16 r6_88
	word16 r8_90
	word16 r9_91
	word32 ra_92
	word16 r0_78 = fn000046C6(r3_r2, r9_r8, r7, r13, ra, wArg00, dwArg02, wArg06, dwArg08, wArg0C, dwArg26, dwArg2A, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg56, dwArg5A, dwArgF4, wArg0202, wArg0206, dwArg10008, out r1_79, out r2_84, out r3_85, out r4_86, out r5_87, out r6_88, out r8_90, out r9_91, out r10_80, out r11_81, out r12_82, out r13_83, out ra_92)
	r1Out = r1_79
	r2Out = r2_84
	r3Out = r3_85
	r4Out = r4_86
	r5Out = r5_87
	r6Out = r6_88
	r8Out = r8_90
	r9Out = r9_91
	r10Out = r10_80
	r11Out = r11_81
	r12Out = r12_82
	r13Out = r13_83
	raOut = ra_92
	return r0_78
fn000046C0_exit:


word16 fn000046C6(word32 r3_r2, word32 r9_r8, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg08, word16 wArg0C, word32 dwArg26, word32 dwArg2A, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg56, word32 dwArg5A, word32 dwArgF4, word16 wArg0202, word16 wArg0206, word32 dwArg10008, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000046AC
//      fn000046C0
// MayUse:  r13:[0..31] r7:[0..15] ra:[0..31] Sequence r3:r2:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +0026:[0..31] Stack +002A:[0..31] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0056:[0..31] Stack +005A:[0..31] Stack +00F4:[0..31] Stack +0202:[0..15] Stack +0206:[0..15] Stack +10008:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9 ra
// Trashed: LNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn000046C6_entry:
l000046C6:
	word32 r11_r10_7 = Mem0[r3_r2 + 0x38<32>:word32]
l000046C6_thunk_fn000046CA:
	word16 r8_17
	word32 ra_18
	word16 r1_20
	word16 r10_21
	word16 r11_22
	word32 r12_23
	word32 r13_24
	word16 r2_25
	word16 r3_26
	word16 r4_27
	word16 r5_28
	word16 r6_29
	word16 r9_31
	word16 r0_16 = fn000046CA(r11_r10_7, r9_r8, r7, r13, ra, wArg00, dwArg02, wArg06, dwArg08, wArg0C, dwArg26, dwArg2A, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg56, dwArg5A, dwArgF4, wArg0202, wArg0206, dwArg10008, out r1_20, out r2_25, out r3_26, out r4_27, out r5_28, out r6_29, out r8_17, out r9_31, out r10_21, out r11_22, out r12_23, out r13_24, out ra_18)
	r1Out = r1_20
	r2Out = r2_25
	r3Out = r3_26
	r4Out = r4_27
	r5Out = r5_28
	r6Out = r6_29
	r8Out = r8_17
	r9Out = r9_31
	r10Out = r10_21
	r11Out = r11_22
	r12Out = r12_23
	r13Out = r13_24
	raOut = ra_18
	return r0_16
fn000046C6_exit:


word16 fn000046CA(word32 r11_r10, word32 r9_r8, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg08, word16 wArg0C, word32 dwArg26, word32 dwArg2A, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg56, word32 dwArg5A, word32 dwArgF4, word16 wArg0202, word16 wArg0206, word32 dwArg10008, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn000046C6
// MayUse:  r13:[0..31] r7:[0..15] ra:[0..31] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +0026:[0..31] Stack +002A:[0..31] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0056:[0..31] Stack +005A:[0..31] Stack +00F4:[0..31] Stack +0202:[0..15] Stack +0206:[0..15] Stack +10008:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9 ra
// Trashed: LNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn000046CA_entry:
	word16 r1
	word32 r12
	word16 r2
	word16 r3
	word16 r4
	word16 r5
	word16 r6
	word16 r11 = SLICE(r11_r10, word16, 16)
	word16 r10 = SLICE(r11_r10, word16, 0)
	word16 r9 = SLICE(r9_r8, word16, 16)
l000046CA:
	branch r11_r10 == 0<32> l00004786_in_fn000046CA
l00004786_in_fn000046CA:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r8Out = wArg00
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = dwArg02
	return 0xFFFE<16>
l000046CC_thunk_fn000046CE:
	word16 r1_55
	word16 r10_56
	word16 r11_57
	word32 r12_58
	word32 r13_59
	word16 r2_60
	word16 r3_61
	word16 r4_62
	word16 r5_63
	word16 r6_64
	word16 r8_66
	word16 r9_67
	word32 ra_68
	word16 r0_54 = fn000046CE(r11_r10, r9_r8, r7, r13, ra, wArg00, dwArg02, wArg06, dwArg08, wArg0C, dwArg26, dwArg2A, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg56, dwArg5A, dwArgF4, wArg0202, wArg0206, dwArg10008, out r1_55, out r2_60, out r3_61, out r4_62, out r5_63, out r6_64, out r8_66, out r9_67, out r10_56, out r11_57, out r12_58, out r13_59, out ra_68)
	r1Out = r1_55
	r2Out = r2_60
	r3Out = r3_61
	r4Out = r4_62
	r5Out = r5_63
	r6Out = r6_64
	r8Out = r8_66
	r9Out = r9_67
	r10Out = r10_56
	r11Out = r11_57
	r12Out = r12_58
	r13Out = r13_59
	raOut = ra_68
	return r0_54
fn000046CA_exit:


word16 fn000046CE(word32 r11_r10, word32 r9_r8, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg08, word16 wArg0C, word32 dwArg26, word32 dwArg2A, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg56, word32 dwArg5A, word32 dwArgF4, word16 wArg0202, word16 wArg0206, word32 dwArg10008, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000046C6
//      fn000046CA
// MayUse:  r13:[0..31] r7:[0..15] ra:[0..31] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +0026:[0..31] Stack +002A:[0..31] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0056:[0..31] Stack +005A:[0..31] Stack +00F4:[0..31] Stack +0202:[0..15] Stack +0206:[0..15] Stack +10008:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9 ra
// Trashed: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn000046CE_entry:
l000046CE:
l000046D0_thunk_fn000046D2:
	word16 r1_17
	word16 r10_18
	word16 r11_19
	word32 r12_20
	word32 r13_21
	word16 r2_22
	word16 r3_23
	word16 r4_24
	word16 r5_25
	word16 r6_26
	word16 r8_28
	word16 r9_29
	word32 ra_30
	word16 r0_16 = fn000046D2(r11_r10, r9_r8, r7, r13, ra, wArg00, dwArg02, wArg06, dwArg08, wArg0C, dwArg26, dwArg2A, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg56, dwArg5A, dwArgF4, wArg0202, wArg0206, dwArg10008, out r1_17, out r2_22, out r3_23, out r4_24, out r5_25, out r6_26, out r8_28, out r9_29, out r10_18, out r11_19, out r12_20, out r13_21, out ra_30)
	r1Out = r1_17
	r2Out = r2_22
	r3Out = r3_23
	r4Out = r4_24
	r5Out = r5_25
	r6Out = r6_26
	r8Out = r8_28
	r9Out = r9_29
	r10Out = r10_18
	r11Out = r11_19
	r12Out = r12_20
	r13Out = r13_21
	raOut = ra_30
	return r0_16
fn000046CE_exit:


word16 fn000046D2(word32 r11_r10, word32 r9_r8, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg08, word16 wArg0C, word32 dwArg26, word32 dwArg2A, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg56, word32 dwArg5A, word32 dwArgF4, word16 wArg0202, word16 wArg0206, word32 dwArg10008, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn000046CE
// MayUse:  r13:[0..31] r7:[0..15] ra:[0..31] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +0026:[0..31] Stack +002A:[0..31] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0056:[0..31] Stack +005A:[0..31] Stack +00F4:[0..31] Stack +0202:[0..15] Stack +0206:[0..15] Stack +10008:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9 ra
// Trashed: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved: CFLNZ
fn000046D2_entry:
	ptr32 fp
	bool Z
	word16 r0
	word16 r1
	word32 r12
	word16 r2
	word16 r3
	word16 r4
	word16 r5
	word16 r6
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r11 = SLICE(r11_r10, word16, 16)
	word16 r10 = SLICE(r11_r10, word16, 0)
l000046D2:
	Mem69[ra + 0x5728<32>:byte] = SLICE(fp, byte, 0)
	branch Z l000046D6_thunk_fn000046DC
l000046D6_thunk_fn000046DC:
	word16 r1_80
	word16 r10_81
	word16 r11_82
	word32 r13_83
	word16 r2_84
	word16 r3_85
	word16 r4_86
	word16 r5_87
	word16 r6_88
	word16 r8_89
	word16 r9_90
	word32 ra_91
	word32 r12_92
	word16 r0_79 = fn000046DC(r11_r10, r9_r8, r7, r13, ra, wArg00, dwArg02, wArg06, dwArg08, wArg0C, dwArg26, dwArg2A, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg56, dwArg5A, dwArgF4, wArg0202, wArg0206, dwArg10008, out r1_80, out r2_84, out r3_85, out r4_86, out r5_87, out r6_88, out r8_89, out r9_90, out r10_81, out r11_82, out r12_92, out r13_83, out ra_91)
	r1Out = r1_80
	r2Out = r2_84
	r3Out = r3_85
	r4Out = r4_86
	r5Out = r5_87
	r6Out = r6_88
	r8Out = r8_89
	r9Out = r9_90
	r10Out = r10_81
	r11Out = r11_82
	r12Out = r12_92
	r13Out = r13_83
	raOut = ra_91
	return r0_79
l000046D8_in_fn000046D2:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r8Out = wArg00
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = dwArg02
	return r0
fn000046D2_exit:


word16 fn000046DC(word32 r11_r10, word32 r9_r8, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg08, word16 wArg0C, word32 dwArg26, word32 dwArg2A, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg56, word32 dwArg5A, word32 dwArgF4, word16 wArg0202, word16 wArg0206, word32 dwArg10008, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000046C6
//      fn000046D2
// MayUse:  r13:[0..31] r7:[0..15] ra:[0..31] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +0026:[0..31] Stack +002A:[0..31] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0056:[0..31] Stack +005A:[0..31] Stack +00F4:[0..31] Stack +0202:[0..15] Stack +0206:[0..15] Stack +10008:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn000046DC_entry:
	word16 r0
	word32 r12
	word16 r4
	word16 r5
	word16 r6
	word16 wLoc06
	word32 dwLoc04
	word16 r11 = SLICE(r11_r10, word16, 16)
	word16 r10 = SLICE(r11_r10, word16, 0)
	word16 r9 = SLICE(r9_r8, word16, 16)
l000046DC:
	word16 r2_7 = Mem0[r11_r10 + 4<32>:word16]
	word16 r3_37 = CONVERT(r2_7 != 0x29A<16>, bool, int16)
	word16 r1_13 = CONVERT(r2_7 != 0x45<16>, bool, int16)
	word16 r3_41 = SEQ(SLICE(r3_37, byte, 8), SLICE(r3_37, byte, 0) & SLICE(r1_13, byte, 0))
	branch SLICE(r1_13, byte, 0) == 0<8> l00004720
l00004710:
	r11 = r11 + 0xFFC7<16> & 0xFFEF<16>
	word16 r1_50 = CONVERT(r2_7 != 0<16>, bool, int16)
	branch r1_50 != 0<16> l000046D8
l000046D8:
	r1Out = r1_50
	r2Out = r2_7
	r3Out = r3_41
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r8Out = wArg00
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = dwArg02
	return r0
l00004720:
	word32 r3_r2_329
	word32 r11_r10_326
	word32 r9_r8_323
	word32 r13_130
	word32 r1_r0_320
	word16 r6_135
	Mem65[r9_r8 + 0x14<32>:word32] = 0<32>
	Mem67[r9_r8 + 8<32>:word32] = 0<32>
	Mem69[r9_r8 + 0x18<32>:word32] = 0<32>
	Mem71[r9_r8 + 0x2C<32>:word16] = 2<16>
	Mem75[SEQ(r11, r10) + 0x14<32>:word32] = 0<32>
	word32 r1_r0_77 = Mem75[SEQ(r11, r10) + 8<32>:word32]
	Mem81[SEQ(r11, r10) + 0x10<32>:word32] = r1_r0_77
	word16 r1_109 = SLICE(r1_r0_77, word16, 16)
	word16 r0_83 = Mem81[SEQ(r11, r10) + 0x18<32>:word16]
	branch r0_83 > 0<16> l00004764
l00004764:
	Mem90[SEQ(r11, r10) + 0x18<32>:word16] = 0<16>
	r1_109 = 0x2A<16>
	branch r0_83 != 0xFFFE<16> l00004744
l00004738:
	branch r0_83 == 2<16> l00004774
l00004774:
	Mem100[SEQ(r11, r10) + 4<32>:word16] = 0x39<16>
	r6_135 = <invalid>
	word32 r9_r8_335
	word32 r11_r10_336
	word32 r3_r2_338
	word32 r6_r5_352
	word32 r7_r6_353
	word16 r4_354
	r1_r0_320 = fn0000CAF8(SEQ(r1_109, 0x39<16>), SEQ(r11, r10), SEQ(r3_41, r2_7), 0<16>, r7, r13, ra, wArg00, dwArg02, wArg06, dwArg08, wArg0C, dwArg26, dwArg2A, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg56, dwArg5A, dwArgF4, wArg0202, wArg0206, out r11_r10_336, out r3_r2_338, out r6_r5_352, out r7_r6_353, out r9_r8_335, out r4_354, out r12, out r13_130, out ra) (alias)
	r9_r8_323 = r9_r8_335 (alias)
	r11_r10_326 = r11_r10_336 (alias)
	r3_r2_329 = r3_r2_338 (alias)
l0000473C:
	branch r0_83 != 0<16> l0000478E
l0000478E:
	r1_109 = 0x2A<16>
l00004740:
	r1_109 = 0x71<16>
l00004744:
	Mem153[SEQ(r11, r10) + 4<32>:word16] = r1_109
	word32 r9_r8_334
	word32 r3_r2_337
	r1_r0_320 = fn0000C0EE(dwArg10008, out r3_r2_337, out r9_r8_334) (alias)
	r9_r8_323 = r9_r8_334 (alias)
	r11_r10_326 = SEQ(r11, r10) (alias)
	r3_r2_329 = r3_r2_337 (alias)
l00004750:
	Mem182[r9_r8_323 + 0x60<32>:word32] = r1_r0_320
	Mem186[r11_r10_326 + 0x26<32>:word16] = 0<16>
	fn0000AF06(r3_r2_329, ra)
	r1Out = r1_195
	r2Out = r2_196
	r3Out = r3_197
	r4Out = r4_198
	r5Out = r5_199
	r6Out = r6_135
	r8Out = wLoc06
	r9Out = SLICE(r9_r8_323, word16, 16)
	r10Out = SLICE(r3_r2_329, word16, 0)
	r11Out = SLICE(r3_r2_329, word16, 16)
	r12Out = r12
	r13Out = r13_130
	raOut = dwLoc04
	return 0<16>
fn000046DC_exit:


void fn00004A4C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004CD4
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00004A4C_exit:
fn00004A4C_entry:
l00004A4C:


word16 fn00004AAC(word32 r3_r2, word16 r1, word16 r11, word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004CD4
// MayUse:  r1:[0..15] r11:[0..15] r12:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r0 r1 r11 r12 r2 r3 r4 r5 r6 r7 ra
// Trashed: CFLNZ r0 r1 r11 r12 r2 r3 r4 r5 r6 r7 ra
// Preserved: sp
fn00004AAC_entry:
l00004AAC:
l00004AAC_thunk_fn00004ADC:
	word16 r1_10
	word16 r11_11
	word32 r12_12
	word16 r2_13
	word16 r3_14
	word16 r4_15
	word16 r5_16
	word16 r6_17
	word16 r7_18
	word32 ra_19
	word16 r0_9 = fn00004ADC(r3_r2, r1, r11, r12, out r1_10, out r2_13, out r3_14, out r4_15, out r5_16, out r6_17, out r7_18, out r11_11, out r12_12, out ra_19)
	r1Out = r1_10
	r2Out = r2_13
	r3Out = r3_14
	r4Out = r4_15
	r5Out = r5_16
	r6Out = r6_17
	r7Out = r7_18
	r11Out = r11_11
	r12Out = r12_12
	raOut = ra_19
	return r0_9
fn00004AAC_exit:


word16 fn00004AB4(word32 r2_r1, word16 r3, word16 r4, word16 r5, word16 r6, word16 r10, word16 r11, word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004CD4
// MayUse:  r10:[0..15] r11:[0..15] r12:[0..31] r3:[0..15] r4:[0..15] r5:[0..15] r6:[0..15] Sequence r2:r1:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r3 r7 r8 r9 ra
// Preserved: sp
fn00004AB4_entry:
	word32 r3_r2_10 = SEQ(r3, SLICE(r2_r1, word16, 16))
l00004AB4:
	Mem8[r2_r1 + 0xA9F1C<32>:byte] = __clear_bit<byte,byte>(Mem0[r2_r1 + 0xA9F1C<32>:byte], 1<8>)
l00004AB4_thunk_fn00004ABA:
	word32 r12_18
	word16 r7_19
	word32 ra_20
	word16 r1_22
	word16 r2_23
	word16 r3_24
	word16 r11_25
	word16 r10_26
	word16 r8_27
	word16 r9_28
	word16 r0_17 = fn00004ABA(r3_r2_10, r4, r5, r6, r10, r11, r12, out r1_22, out r2_23, out r3_24, out r7_19, out r8_27, out r9_28, out r10_26, out r11_25, out r12_18, out ra_20)
	r1Out = r1_22
	r2Out = r2_23
	r3Out = r3_24
	r7Out = r7_19
	r8Out = r8_27
	r9Out = r9_28
	r10Out = r10_26
	r11Out = r11_25
	r12Out = r12_18
	raOut = ra_20
	return r0_17
fn00004AB4_exit:


word16 fn00004ABA(word32 r3_r2, word16 r4, word16 r5, word16 r6, word16 r10, word16 r11, word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004AB4
// MayUse:  r10:[0..15] r11:[0..15] r12:[0..31] r4:[0..15] r5:[0..15] r6:[0..15] Sequence r3:r2:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r3 r7 r8 r9 ra sp
// Preserved:
fn00004ABA_entry:
	ptr32 fp
	bool Z
	word16 r1
	word16 wArg00
	word32 dwArg02
	word32 dwArg06
	word16 r8
	word16 r9
	word16 r3 = SLICE(r3_r2, word16, 16)
	word16 r2 = SLICE(r3_r2, word16, 0)
l00004ABA:
	branch Z l00004B0E
l00004B0E:
	word16 r7_8 = Mem0[r12 + fp:word16]
	branch r3_r2 == 0<32> l00004B9A
l00004B16:
	word32 r1_r0_15 = Mem0[r3_r2 + 0x40<32>:word32]
	r1 = SLICE(r1_r0_15, word16, 16) (alias)
	branch r1_r0_15 == 0<32> l00004B9A
l00004B1E:
	word32 r1_r0_21 = Mem0[r3_r2 + 0x48<32>:word32]
	r1 = SLICE(r1_r0_21, word16, 16) (alias)
	branch r1_r0_21 == 0<32> l00004B9A
l00004B26:
	word32 ra_27 = Mem0[r3_r2 + 0x38<32>:word32]
	branch ra_27 == 0<32> l00004B9A
l00004B9A:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r7Out = wArg00
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = dwArg02
	raOut = dwArg06
	return 0xFFFE<16>
l00004B2E:
	branch Mem0[ra_27:word32] == r3_r2 l00004B3E
l00004B3E:
	r2 = Mem0[ra_27 + 4<32>:word16]
	word16 r3_74 = CONVERT(r2 != 0x29A<16>, bool, int16)
	r1 = CONVERT(r2 != 0x45<16>, bool, int16)
	r3 = SEQ(SLICE(r3_74, byte, 8), SLICE(r3_74, byte, 0) & SLICE(r1, byte, 0))
	branch SLICE(r1, byte, 0) == 0<8> l00004B82
l00004B72:
	r11 = r11 + 0xFFC7<16> & 0xFFEF<16>
	r1 = CONVERT(r2 != 0<16>, bool, int16)
	branch r1 != 0<16> l00004B38
l00004B82:
	Mem94[ra_27 + 0xCC<32>:word16] = r4
	Mem97[ra_27 + 0xC0<32>:word16] = r5
	Mem100[ra_27 + 0xD0<32>:word16] = r6
	Mem102[ra_27 + 0xBC<32>:word16] = r7_8
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r7Out = wArg00
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = dwArg02
	raOut = dwArg06
	return 0<16>
l00004B38:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r7Out = wArg00
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = dwArg02
	raOut = dwArg06
	return 0xFFFE<16>
l00004ABC:
	branch r10 >= r11 l00004AC4_thunk_fn00004AC8
l00004AC4_thunk_fn00004AC8:
	word16 r1_128
	word16 r10_129
	word16 r11_130
	word32 r12_131
	word16 r2_132
	word16 r7_133
	word16 r8_134
	word16 r9_135
	word32 ra_136
	word16 r0_127 = fn00004AC8(out r1_128, out r2_132, out r7_133, out r8_134, out r9_135, out r10_129, out r11_130, out r12_131, out ra_136)
	r1Out = r1_128
	r2Out = r2_132
	r3Out = r3
	r7Out = r7_133
	r8Out = r8_134
	r9Out = r9_135
	r10Out = r10_129
	r11Out = r11_130
	r12Out = r12_131
	raOut = ra_136
	return r0_127
l00004AC4_thunk_fn00004AC6:
	word16 r1_143
	word16 r10_144
	word16 r11_145
	word32 r12_146
	word16 r2_147
	word16 r7_148
	word16 r8_149
	word16 r9_150
	word32 ra_151
	word16 r0_142 = fn00004AC6(out r1_143, out r2_147, out r7_148, out r8_149, out r9_150, out r10_144, out r11_145, out r12_146, out ra_151)
	r1Out = r1_143
	r2Out = r2_147
	r3Out = r3
	r7Out = r7_148
	r8Out = r8_149
	r9Out = r9_150
	r10Out = r10_144
	r11Out = r11_145
	r12Out = r12_146
	raOut = ra_151
	return r0_142
fn00004ABA_exit:


word16 fn00004AC6(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004ABA
//      fn00004AC8
//      fn00004CD4
// MayUse: 
// LiveOut: r0 r1 r10 r11 r12 r2 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r7 r8 r9 ra
// Preserved: sp
fn00004AC6_entry:
l00004AC6:
l00004AC6_thunk_fn00004AC8:
	word16 r7_8
	word16 r9_9
	word16 r8_10
	word16 r1_11
	word32 r12_12
	word16 r2_13
	word16 r11_14
	word32 ra_15
	word16 r10_16
	word16 r0_7 = fn00004AC8(out r1_11, out r2_13, out r7_8, out r8_10, out r9_9, out r10_16, out r11_14, out r12_12, out ra_15)
	r1Out = r1_11
	r2Out = r2_13
	r7Out = r7_8
	r8Out = r8_10
	r9Out = r9_9
	r10Out = r10_16
	r11Out = r11_14
	r12Out = r12_12
	raOut = ra_15
	return r0_7
fn00004AC6_exit:


word16 fn00004AC8(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004ABA
//      fn00004AC6
// MayUse: 
// LiveOut: r0 r1 r10 r11 r12 r2 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r7 r8 r9 ra
// Preserved: sp
fn00004AC8_entry:
l00004AC8_thunk_fn00004AC6:
	word16 r9_5
	word16 r7_7
	word16 r8_8
	word16 r1_9
	word32 r12_10
	word16 r2_11
	word16 r11_12
	word32 ra_13
	word16 r10_14
	word16 r0_6 = fn00004AC6(out r1_9, out r2_11, out r7_7, out r8_8, out r9_5, out r10_14, out r11_12, out r12_10, out ra_13)
	r1Out = r1_9
	r2Out = r2_11
	r7Out = r7_7
	r8Out = r8_8
	r9Out = r9_5
	r10Out = r10_14
	r11Out = r11_12
	r12Out = r12_10
	raOut = ra_13
	return r0_6
fn00004AC8_exit:


word16 fn00004ADC(word32 r3_r2, word16 r1, word16 r11, word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004AAC
//      fn00004AE8
// MayUse:  r1:[0..15] r11:[0..15] r12:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r0 r1 r11 r12 r2 r3 r4 r5 r6 r7 ra
// Trashed: CFLNZ r0 r1 r11 r12 r2 r3 r4 r5 r6 r7 ra
// Preserved: sp
fn00004ADC_entry:
	word16 r9
	word16 r10
l00004ADC:
	Mem15[r12 + 0x2414<32>:word16] = r1
	word16 r11_24
	word16 r4_67
	word16 r5_68
	word16 r6_69
	word16 r7_70
	word32 ra_71
	fn0000B09C(r3_r2, r11, out r4_67, out r5_68, out r6_69, out r7_70, out r11_24, out ra_71)
l00004AE4_thunk_fn00004AE8:
	word16 r7_36
	word16 r1_37
	word32 r12_38
	word16 r3_39
	word16 r2_40
	word16 r11_41
	word16 r4_43
	word16 r5_44
	word16 r6_45
	word32 ra_46
	word16 r0_42 = fn00004AE8(r9, r10, r11_24, r3_r2, out r1_37, out r2_40, out r3_39, out r4_43, out r5_44, out r6_45, out r7_36, out r11_41, out r12_38, out ra_46)
	r1Out = r1_37
	r2Out = r2_40
	r3Out = r3_39
	r4Out = r4_43
	r5Out = r5_44
	r6Out = r6_45
	r7Out = r7_36
	r11Out = r11_41
	r12Out = r12_38
	raOut = ra_46
	return r0_42
fn00004ADC_exit:


word16 fn00004AE8(word16 r9, word16 r10, word16 r11, word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004ADC
// MayUse:  r10:[0..15] r11:[0..15] r12:[0..31] r9:[0..15]
// LiveOut: r0 r1 r11 r12 r2 r3 r4 r5 r6 r7 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r2 r7 r8 r9 ra sp
// Preserved:
fn00004AE8_entry:
	word16 wArg00
	word32 dwArg02
	word16 r1
	word16 r2
	word16 r3
l00004AE8:
	branch r11 != 0<16> l00004AB8
l00004AB8:
	word16 r1_20 = Mem0[r12 + 0x2414<32>:word16]
l00004ABA:
	word16 r1_23 = r1_20 - r10
	branch r10 >= r11 l00004AC8
l00004AC8:
	Mem37[r12 + 0x2410<32>:word16] = __a_shift<word16,word16>(__a_shift<word16,word16>(r9, r11), r1_23)
l00004AD8_thunk_fn00004ADC:
	word16 r7_40
	word16 r11_42
	word32 ra_43
	word32 r12_44
	word16 r1_45
	word16 r2_48
	word16 r3_115
	word16 r4_116
	word16 r5_117
	word16 r6_118
	word16 r0_39 = fn00004ADC(SEQ(r3, r2), r1_45, r11, r12, out r1_45, out r2_48, out r3_115, out r4_116, out r5_117, out r6_118, out r7_40, out r11_42, out r12_44, out ra_43)
	r1Out = r1_45
	r2Out = r2_48
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_40
	r11Out = r11_42
	r12Out = r12_44
	raOut = ra_43
	return r0_39
l00004AC2_thunk_fn00004AC6:
	word16 r1_51
	word16 r11_53
	word32 r12_54
	word16 r2_55
	word16 r7_56
	word32 ra_59
	word16 r8_111
	word16 r9_112
	word16 r10_113
	word16 r0_50 = fn00004AC6(out r1_51, out r2_55, out r7_56, out r8_111, out r9_112, out r10_113, out r11_53, out r12_54, out ra_59)
	r1Out = r1_51
	r2Out = r2_55
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_56
	r11Out = r11_53
	r12Out = r12_54
	raOut = ra_59
	return r0_50
l00004AF4:
	r1Out = r1
	r2Out = r2
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = wArg00
	r11Out = r11
	r12Out = r12
	raOut = dwArg02
	return r11
fn00004AE8_exit:


word32 fn00004CD4(word32 r11_r10, word32 r5_r4, word32 r7_r6, word32 r9_r8, word32 r12, word32 r13, word32 ra, word16 wArg00, word32 dwArgFFF0, word16 wArgFFF4, word32 dwArgFFF6, word16 wArgFFFA, word32 dwArgFFFC, word32 dwArg10000, word32 dwArg10014, word32 dwArg10018, word32 dwArg1001C, word32 dwArg10020, word32 dwArg10024, word32 dwArg10028, word32 dwArg1002C, word32 dwArg10030, word32 dwArg10034, word32 dwArg10044, word32 dwArg10048, word32 dwArg1004C, word32 dwArg100E2, word16 wArg101F0, word16 wArg101F4, word16 wArg1FFD8, word32 dwArg1FFDA, word16 wArg1FFDE, word32 dwArg1FFE6, word32 dwArg1FFEA, word32 dwArg1FFFC, word32 dwArg20016, word32 dwArg2001E, word32 dwArg20026, word32 dwArg20036, word16 wArg2FF7E, word16 wArg2FFC2, word32 dwArg2FFE6, word32 dwArg30010, word16 wArg3FF68, ptr32 & r11_r10Out, ptr32 & r3_r2Out, ptr32 & r5_r4Out, ptr32 & r9_r8Out, ptr32 & r0Out, ptr32 & r7Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn00004CD4
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..15] Stack +10000:[0..31] Stack +10014:[0..31] Stack +10018:[0..31] Stack +1001C:[0..31] Stack +10020:[0..31] Stack +10024:[0..31] Stack +10028:[0..31] Stack +1002C:[0..31] Stack +10030:[0..31] Stack +10034:[0..31] Stack +10044:[0..31] Stack +10048:[0..31] Stack +1004C:[0..31] Stack +100E2:[0..31] Stack +101F0:[0..15] Stack +101F4:[0..15] Stack +1FFD8:[0..15] Stack +1FFDA:[0..31] Stack +1FFDE:[0..15] Stack +1FFE6:[0..31] Stack +1FFEA:[0..31] Stack +1FFFC:[0..31] Stack +20016:[0..31] Stack +2001E:[0..31] Stack +20026:[0..31] Stack +20036:[0..31] Stack +2FF7E:[0..15] Stack +2FFC2:[0..15] Stack +2FFE6:[0..31] Stack +30010:[0..31] Stack +3FF68:[0..15] Stack +FFF0:[0..31] Stack +FFF4:[0..15] Stack +FFF6:[0..31] Stack +FFFA:[0..15] Stack +FFFC:[0..31]
// LiveOut: r0 r1:r6 r11:r10 r12 r13 r3:r2 r5:r4 r7 r9:r8 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn00004CD4_entry:
	ptr32 fp
	word16 r7 = SLICE(r7_r6, word16, 16)
	word16 r4 = SLICE(r5_r4, word16, 0)
	word16 r11 = SLICE(r11_r10, word16, 16)
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r6 = SLICE(r7_r6, word16, 0)
	word16 r5 = SLICE(r5_r4, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
	word16 r10 = SLICE(r11_r10, word16, 0)
	word16 wArgFFF6_4948 = SLICE(dwArgFFF6, word16, 0)
	word16 wArgFFF8_4953 = SLICE(dwArgFFF6, word16, 16)
l00004CD4:
	word32 dwLoc04_4766 = r13
	word16 wLoc04_6473 = SLICE(r13, word16, 0)
	word16 wLoc06_4767 = r7
	word32 sp_1049 = fp + 0xFFEE<32>
	word32 r11_r10_6719 = r11_r10
	branch r12 == 0<32> l000055EA
l00004CE6:
	branch Mem14[r12 + 0x40<32>:word32] == 0<32> l000055E0
l00004CF0:
	word32 r1_r0_24 = Mem14[r12 + 0x48<32>:word32]
	word16 r1_178 = SLICE(r1_r0_24, word16, 16)
	word16 r0_26 = SLICE(r1_r0_24, word16, 0)
	branch r1_r0_24 == 0<32> l000055D6
l000055D6:
	r7 = r0_26
	branch r0_26 == 0<16> l00004AE8
l000055DA_thunk_fn00004AC6:
	word16 r1_33
	word16 r10_34
	word16 r11_35
	word32 r12_36
	word16 r2_37
	word16 r7_38
	word16 r8_39
	word16 r9_40
	word32 ra_41
	word16 r0_32 = fn00004AC6(out r1_33, out r2_37, out r7_38, out r8_39, out r9_40, out r10_34, out r11_35, out r12_36, out ra_41)
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_32
	r7Out = r7_38
	r12Out = r12_36
	r13Out = r13
	raOut = ra_41
	return SEQ(r1_33, r6)
l00004CFA:
	r13 = Mem14[r12 + 0x38<32>:word32]
	branch r13 == 0<32> l000055CC
l000055CC:
	word16 r0_54
	word16 r10_56
	word16 r11_57
	word32 r12_58
	word16 r2_60
	word16 r4_62
	word16 r5_63
	word16 r7_65
	word32 ra_68
	word32 r9_r8_6993
	word32 r3_r6_6994
	word16 r1_101
	word32 r13_102
	bool Z_74 = fn000033F8(r4, r6, r9, r11, r12, wArg1FFD8, dwArg1FFDA, wArg1FFDE, dwArg1FFE6, dwArg1FFEA, dwArg20016, dwArg2001E, dwArg20036, wArg2FFC2, dwArg2FFE6, dwArg30010, wArg3FF68, out r3_r6_6994, out r9_r8_6993, out r0_54, out r1_101, out r2_60, out r4_62, out r5_63, out r7_65, out r10_56, out r11_57, out r12_58, out r13_102, out ra_68)
	word32 sp_69 = <invalid>
	word16 r6_64 = SLICE(r3_r6_6994, word16, 0)
l00004674:
	branch Z_74 l00004692
l00004676:
	word32 r1_r0_82 = r0_54 + r4_62
	word32 r5_r4_91 = Mem14[ra_68 + 0x60<32>:word32] + r1_r0_82
	Mem97[sp_69 - 2<i32>:word16] = r7_65 - SLICE(r1_r0_82, word16, 0)
	r1_101 = fn0000DB24(r3_r6_6994, r5_r4_91, r13_102, out r13_102)
l00004692:
	branch r9_r8_6993 == 0<32> l000046A6
l000046A6:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0<16>
	r7Out = r7
	r12Out = r12_58
	r13Out = r13_102
	raOut = r13
	return SEQ(r1_101, r6_64)
l00004696:
	Mem122[r9_r8_6993:word16] = r7_65
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0<16>
	r7Out = r7
	r12Out = r12_58
	r13Out = r13_102
	raOut = r13
	return SEQ(r1_101, r6_64)
l00004D04:
	branch Mem14[r13:word32] == r12 l00004D14
l00004D14:
	word16 r2_134 = Mem14[r13 + 4<32>:word16]
	word16 r3_164 = CONVERT(r2_134 != 0x29A<16>, bool, int16)
	word16 r1_140 = CONVERT(r2_134 != 0x45<16>, bool, int16)
	word16 r3_168 = SEQ(SLICE(r3_164, byte, 8), SLICE(r3_164, byte, 0) & SLICE(r1_140, byte, 0))
	branch SLICE(r1_140, byte, 0) == 0<8> l00004D5A
l00004D48:
	r2_134 = r2_134 + 0xFFC7<16>
	r11 = r11 & 0xFFEF<16>
	r1_178 = 1<i16>
	branch true l00004D0E
l00004D5A:
	word32 r11_r10_6741
	word32 r9_r8_6762
	word32 r1_r0_1555
	word32 r7_r6_1462
	word32 r1_r0_4069
	word32 r7_r6_4068
	word32 r5_r4_6778
	word32 r11_r10_6781
	word32 r9_r8_6792
	word32 r9_r8_6795
	word32 r3_r2_6799
	word32 r11_r10_6790
	word32 r9_r8_1799
	word32 r6_r5_6813
	word32 r3_r2_6827
	word32 r3_r2_6835
	word32 r9_r8_1977
	word32 r9_r8_6855
	word32 r11_r10_6862
	word32 r5_r4_6859
	word32 r3_r2_6871
	word32 r5_r4_2422
	word32 r1_r0_6874
	word32 r3_r2_3019
	word32 r11_r10_6901
	word32 r11_r10_6920
	word32 r1_r0_2554
	word32 r3_r2_6932
	word32 r1_r0_1808
	word32 r1_r0_6938
	word32 r3_r2_3289
	word32 r1_r0_3290
	word32 r1_r0_6972
	word32 r11_r10_6969
	word32 r3_r2_537
	word32 r3_r2_7010
	word32 r11_r10_7017
	word32 r9_r8_7015
	word32 r11_r10_7020
	word32 r3_r2_7023
	word32 r1_r0_6865
	word32 r9_r8_6928
	word32 r1_r0_2720
	word32 r11_r10_7065
	word32 r3_r2_7069
	word32 r11_r10_7079
	word16 r7_2879
	bool v147_4752
	bool v150_4755
	word16 r11_1058
	word16 r10_1062
	word16 r1_1071
	word16 r7_1585
	word16 r4_3973
	bool v144_4749
	word16 r1_1972
	word16 r0_2280
	word16 r10_2488
	word16 r11_2474
	word16 r4_1742
	word16 r10_1751
	word16 r11_1747
	word16 r8_2376
	word16 r9_2374
	word16 r4_2357
	word16 r0_2875
	word16 r1_1625
	word16 r1_2530
	word32 r3_r2_6727 = SEQ(r3_168, r2_134)
	branch r4 <u 5<16> l0000556E
l00004D62:
	word32 r1_r0_187 = Mem14[r12 + 0xC<32>:word32]
	word16 r1_188 = SLICE(r1_r0_187, word16, 16)
	branch r1_r0_187 == 0<32> l00006D4A
l00006D4A:
	branch r1_r0_187 == 0<32> l00006E00
l00006D4C:
	branch CONVERT(Mem14[r5_r4:byte] != 0x31<8>, bool, int16) != 0<16> l00006E00
l00006D58:
	branch CONVERT(r6 != 0x38<16>, bool, int16) != 0<16> l00006E00
l00006E00:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFA<16>
	r7Out = r4
	r12Out = r12
	r13Out = r13
	raOut = dwArgFFF0
	return SEQ(r1_188, r6)
l00006D62:
	branch SEQ(r3_168, r2_134) == 0<32> l00006E1A
l00006E1A:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFE<16>
	r7Out = r4
	r12Out = r12
	r13Out = r13
	raOut = dwArgFFF0
	return SEQ(r1_188, r6)
l00006D66:
	Mem233[SEQ(r3_168, r2_134) + 0x18<32>:word32] = 0<32>
	word32 r1_r0_235 = Mem233[SEQ(r3_168, r2_134) + 0x40<32>:word32]
	branch r1_r0_235 == 0<32> l00006DEA
l00006DEA:
	Mem244[SEQ(r3_168, r2_134) + 0x40<32>:word32] = 0x5D6E<32>
	Mem246[SEQ(r3_168, r2_134) + 0x50<32>:word32] = r1_r0_235
l00006D72:
l00006D7A:
	branch Mem260[r9_r8 + 0x48<32>:word32] == 0<32> l00006DDE
l00006DDE:
	Mem270[r9_r8 + 0x48<32>:word32] = 0x5D76<32>
l00006D82:
	word32 ra_306
	word32 r5_r4_7060
	word32 r11_r10_6985
	word32 r12_298
	word32 r13_296
	word16 r6_307
	word32 r3_r2_339
	call r1_r0_235 (retsize: 0;)
		uses: Mem:Mem294,r10:r10_308,r11:r11_287,r12:r12,r13:r13_47,r4:1<16>,r5:0x1BA4<16>,r6:r6,r7:r7,r8:r8,r9:r9,ra:ra_306,Stack +0002:dwArgFFF0,Stack +0006:wArgFFF4,Stack +0008:dwArgFFF6,Stack +000C:wArgFFFA,Stack +000E:dwArgFFFC,Stack +0012:dwArg10000,Stack +0026:dwArg10014,Stack +002A:dwArg10018,Stack +002E:dwArg1001C,Stack +0032:dwArg10020,Stack +0036:dwArg10024,Stack +003A:dwArg10028,Stack +003E:dwArg1002C,Stack +0042:dwArg10030,Stack +0046:dwArg10034,Stack +0056:dwArg10044,Stack +005A:dwArg10048,Stack +005E:dwArg1004C,Stack +00F4:dwArg100E2,Stack +0202:wArg101F0,Stack +0206:wArg101F4,Stack +1000E:dwArg1FFFC,Stack +10028:dwArg20016,Stack +10030:dwArg2001E,Stack +10038:dwArg20026,Stack +10048:dwArg20036,Stack +1FF90:wArg2FF7E,Stack +1FFD4:wArg2FFC2,Stack +1FFF8:dwArg2FFE6,Stack +20022:dwArg30010,Stack +2FF7A:wArg3FF68,Stack +FFEA:wArg1FFD8,Stack +FFEC:dwArg1FFDA,Stack +FFF0:wArg1FFDE,Stack +FFF8:dwArg1FFE6,Stack +FFFC:dwArg1FFEA
		defs: r12:r12_298,r13:r13_296,r6:r6_307,ra:ra_306,Sequence r11:r10:r11_r10_6985,Sequence r5:r4:r5_r4_7060,Sequence r9:r8:r9_r8_6986
	word16 r11_304 = SLICE(r11_r10_6985, word16, 16)
	word16 r10_308 = SLICE(r11_r10_6985, word16, 0)
	branch r11_r10_6985 == 0<32> l00006E10
l00006E10:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFC<16>
	r7Out = r7
	r12Out = r12_298
	r13Out = r13_296
	raOut = r13
	return SEQ(r11_304, r6_307)
l00006D90:
	word32 r5_r4_6988
	word16 r7_348
	word16 r1_355
	Mem325[r3_r2_339 + 0x38<32>:word32] = r11_r10_6985
	Mem327[r11_r10_6985:word32] = r3_r2_339
	Mem332[r11_r10_6985 + 0x48<32>:word32] = 0<32>
	Mem335[r11_r10_6985 + 4<32>:word16] = 0x3F34<16>
	word32 r1_r0_337 = Mem335[r3_r2_339 + 0x48<32>:word32]
	r3_r2_339 = Mem335[r3_r2_339 + 0x40<32>:word32]
	branch r3_r2_339 == 0<32> l00006E0A
l00006DAE:
	branch r1_r0_337 == 0<32> l00006E0A
l00006E0A:
	r7_348 = 0xFFFE<16>
	r5_r4_6988 = r5_r4_7060 (alias)
l00006DB2:
	Mem350[r11_r10_6985 + 8<32>:word16] = 5<16>
	Mem352[r11_r10_6985 + 0x1C<32>:word16] = 0xF<16>
	word16 r0_354
	word16 r11_358
	word32 r5_r4_7059 = fn00006A40(r3_r2_339, r11_304, out r0_354, out r1_355, out r6_307, out r11_358)
	r7_348 = r0_354
	branch r0_354 == 0<16> l00006DD8
l00006DC6:
	r1_r0_337 = Mem352[r3_r2_339 + 0x48<32>:word32]
	r5_r4_6988 = r5_r4_7059 (alias)
l00006DCA:
	word16 r5_379 = SLICE(r5_r4_6988, word16, 16)
	word32 ra_413
	word16 r10_415
	word32 r9_r8_6992
	call r1_r0_337 (retsize: 0;)
		uses: Mem:Mem376,r10:r10_415,r11:r5_379,r12:r12_298,r13:r13_296,r4:SLICE(r5_r4_6990, word16, 0),r5:r5_379,r6:r6_398,r7:r7_394,r8:SLICE(r9_r8_6987, word16, 0),r9:SLICE(r9_r8_6987, word16, 16),ra:ra_413,Stack +0006:wArg00,Stack +10000:wArgFFFA,Stack +10002:dwArgFFFC,Stack +10006:dwArg10000,Stack +1001A:dwArg10014,Stack +1001E:dwArg10018,Stack +10022:dwArg1001C,Stack +10026:dwArg10020,Stack +1002A:dwArg10024,Stack +1002E:dwArg10028,Stack +10032:dwArg1002C,Stack +10036:dwArg10030,Stack +1003A:dwArg10034,Stack +1004A:dwArg10044,Stack +1004E:dwArg10048,Stack +10052:dwArg1004C,Stack +100E8:dwArg100E2,Stack +101F6:wArg101F0,Stack +101FA:wArg101F4,Stack +1FFDE:wArg1FFD8,Stack +1FFE0:dwArg1FFDA,Stack +1FFE4:wArg1FFDE,Stack +1FFEC:dwArg1FFE6,Stack +1FFF0:dwArg1FFEA,Stack +20002:dwArg1FFFC,Stack +2001C:dwArg20016,Stack +20024:dwArg2001E,Stack +2002C:dwArg20026,Stack +2003C:dwArg20036,Stack +2FF84:wArg2FF7E,Stack +2FFC8:wArg2FFC2,Stack +2FFEC:dwArg2FFE6,Stack +30016:dwArg30010,Stack +3FF6E:wArg3FF68,Stack +FFF6:dwArgFFF0,Stack +FFFA:wArgFFF4,Stack +FFFC:dwArgFFF6
		defs: r10:r10_415,r12:r12_405,r13:r13_403,r6:r6_414,r7:r7_404,ra:ra_413,Sequence r9:r8:r9_r8_6992
	Mem423[r9_r8_6992 + 0x38<32>:word32] = 0<32>
	r1_355 = 0<16> (alias)
l00006DD8:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r7_348
	r7Out = r7
	r12Out = r12_298
	r13Out = r13_296
	raOut = r13
	return SEQ(r1_355, r6_307)
l00004D6A:
	word16 r3_432 = Mem14[r12 + 4<32>:word16]
	branch r3_432 == 0<16> l00004D78
l00004D70:
	word32 r1_r0_435 = Mem14[r12:word32]
	word16 r1_436 = SLICE(r1_r0_435, word16, 16)
	branch r1_r0_435 == 0<32> l00006D3C
l00006D3C:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r7
	r7Out = r4
	r12Out = r12
	r13Out = r13
	raOut = dwArgFFF0
	return SEQ(r1_436, r6)
l00004D78:
	byte v37_451 = CONVERT(r4 != 4<16>, bool, byte)
	word16 r1_4407 = SEQ(SLICE(r4, byte, 8), v37_451)
	branch CONVERT(r2_134 == 0x29A<16>, bool, int16) == 0<16> l00004D90
l00004D8A:
	branch v37_451 != 0<8> l00006D24
l00006D24:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFA<16>
	r7Out = r4
	r12Out = r12
	r13Out = r13
	raOut = dwArgFFF0
	return SEQ(r1_4407, r6)
l00004D90:
	word32 r1_r0_4324
	word32 r5_r4_6770
	word16 r7_4385
	word16 r0_4406 = Mem14[r12 + 0x10<32>:word16]
	branch r0_4406 == 0<16> l00006CC4
l00006CC4:
l00004D98:
	word16 r0_482 = Mem14[r13 + 0x4C<32>:word16]
	Mem484[r13 + 0x4C<32>:word16] = r4
	word32 r5_r4_485 = Mem484[r13 + 0x14<32>:word32]
	word16 r5_4292 = SLICE(r5_r4_485, word16, 16)
	word32 dwArgFFF4_4949 = SEQ(wArgFFF6_4948, wArgFFF4)
	branch r5_r4_485 != 0<32> l000054EA
l000054EA:
	word32 r3_r2_7095
	word32 r6_r5_7096
	word32 r9_r8_7058
	word32 r11_r10_7009
	word32 r7_r6_6984
	Mem527[r12 + 0x60<32>:word32] = fn0000CAF8(SEQ(r1_4407, r0_482), SEQ(r11, r10), r5_r4_485, r6, r7, r13, ra, r4, dwArgFFF0, wArgFFF4, dwArgFFF6, wArgFFFA, dwArg10014, dwArg10018, dwArg1001C, dwArg10020, dwArg10024, dwArg10028, dwArg1002C, dwArg10030, dwArg10044, dwArg10048, dwArg100E2, wArg101F0, wArg101F4, out r11_r10_7009, out r3_r2_7095, out r6_r5_7096, out r7_r6_6984, out r9_r8_7058, out r4_3973, out r12, out r13, out ra)
	r1_r0_4069 = Mem527[r13 + 0x38<32>:word32]
	Mem532[r13 + 0x40<32>:word32] = 0<32>
	Mem534[r13 + 4<32>:word16] = 0x49<16>
	word16 r5_515 = <invalid>
	r7_1585 = SLICE(r7_r6_6984, word16, 16) (alias)
	r3_r2_537 = Mem534[r1_r0_4069 + 0x14<32>:word32]
	r6_r5_6813 = SEQ(SLICE(r7_r6_6984, word16, 0), r5_515) (alias)
	r9_r8_1799 = r9_r8_7058 (alias)
	branch r3_r2_537 == 0<32> l00006052
l0000550E:
	r7_r6_4068 = r7_r6_6984 (alias)
	r5_r4_6778 = r7_r6_6984 (alias)
	r11_r10_6781 = r11_r10_7009 (alias)
l00004DAA:
	word32 r3_r2_592
	branch r3_432 != 0<16> l00005158
l00005158:
	branch r7 != 0<16> l0000521E
l0000521E:
	fn0000DB24(Mem484[r12 + 0xC<32>:word32], Mem484[r13 + 0x10<32>:word32], r13, out r13)
	word32 r9_r8_551 = CONVERT(r7, word16, word32)
	Mem574[r12 + 0xC<32>:word32] = Mem556[r12 + 0xC<32>:word32] + r9_r8_551
	Mem581[r13 + 0x10<32>:word32] = Mem574[r13 + 0x10<32>:word32] + r9_r8_551
	Mem588[r12 + 0x14<32>:word32] = Mem581[r12 + 0x14<32>:word32] + r9_r8_551
	r0_482 = Mem588[r12 + 0x10<32>:word16]
	Mem591[r12 + 0x10<32>:word16] = r0_482
	r3_r2_592 = Mem591[r13 + 0x14<32>:word32]
	Mem599[r13 + 0x14<32>:word32] = r3_r2_592
l00004DB0:
	word16 r4_4282 = r4 * 2<16>
	branch r4 != 5<16> l00004DBC
l00004DBA:
	r4_4282 = 1<16>
l00004DBC:
	branch r0_482 * 2<16> >= 4<16> l00004DC8
l00004DC4:
	r11 = r11 + 0xFFF7<16>
l00004DC8:
	word32 r11_r10_6733
	word16 r7_4280
	word16 r0_621 = CONVERT(r0_482 >= r4_4282, bool, int16)
	branch r0_621 == 0<16> l00004DD6
l00004DD0:
	r1_r0_4324 = SEQ(r1_4407, r0_621) (alias)
	r11_r10_6733 = SEQ(r11, r10) (alias)
	r7_4280 = r7
	branch v37_451 != 0<8> l00006C86
l00004DD6:
	word32 dwArgFFF8_4954 = SEQ(wArgFFFA, wArgFFF8_4953)
	branch r2_134 != 0x29A<16> l0000513A
l0000513A:
	Mem639[r13 + 0x4C<32>:word16] = 0xFFFF<16>
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0<16>
	r7Out = wArgFFFA
	r12Out = r12
	r13Out = dwArgFFFC
	raOut = ra
	return SEQ(r1_4407, r6)
l00004DDE:
	word16 r3_656 = Mem484[r12 + 4<32>:word16]
	r11_r10_6733 = SEQ(r11, r10) (alias)
	r7_4280 = r7
	branch r3_656 != 0<16> l00006C76
l00004DE6:
	word32 r7_r6_6738 = r7_r6
	branch Mem484[r13 + 0xB4<32>:word16] == 0<16> l00005E48
l00004DF0:
	word16 r0_662 = Mem484[r13 + 0xC4<32>:word16]
	branch r0_662 == 0<16> l00005D9E
l00005D9E:
	r3_r2_592 = fn0000B218(r9_r8, r4_4282, r5_4292, r10, SEQ(r3_656, r2_134), SEQ(r4, r0_662), dwArgFFF0, dwArgFFF4_4949, dwArgFFF8_4954, dwArgFFFC, dwArg10000, dwArg1002C, dwArg10034, dwArg1004C, wArg1FFD8, dwArg1FFFC, dwArg20026, wArg2FF7E, out r12, out r13)
	Mem713[r13 + 0x98<32>:word32] = CONVERT(Mem666[r13 + 0xAC<32>:word16], word16, word32)
	r9_r8 = Mem713[r13:word32]
	word16 r11_724
	word16 r4_725
	word16 r5_726
	word16 r7_7097
	fn0000B09C(r3_r2_592, SLICE(r3_r2_592, word16, 16), out r4_725, out r5_726, out r6, out r7_7097, out r11_724, out ra)
	word16 r2_692 = SLICE(r3_r2_592, word16, 0)
	word32 sp_699 = <invalid>
	r0_482 = Mem713[SEQ(r11_724, r2_692) + 0x14<32>:word16]
	word16 r7_738 = Mem713[r9_r8 + 0x10<32>:word16]
	branch r0_482 >=u r7_738 l00005DCA
l00005DC8:
	r7_738 = r0_482
l00005DCA:
	branch r7_738 == 0<16> l0000524A
l0000524A:
	branch r3_r2_592 != 0<32> l0000515C
l00005250:
	Mem765[r13 + 0x10<32>:word32] = Mem760[r13 + 8<32>:word32]
l0000515C:
	branch r0_482 == 0<16> l00005212
l00005160:
l00005162_thunk_fn00004A4C:
	fn00004A4C()
l00005DD0:
	Mem777[sp_699 + 8<32>:word32] = CONVERT(r7_738, word16, word32)
	word32 r3_r2_780 = Mem777[r9_r8 + 0xC<32>:word32]
	word32 r5_r4_784 = Mem777[SEQ(r11_724, r2_692) + 0x10<32>:word32]
	word32 r1_r0_785 = Mem777[sp_699 + 8<32>:word32]
l000051D8:
	Mem794[SEQ(r11_724, r2_692) + 0x10<32>:word32] = r1_r0_785 + r3_r2_780
	Mem801[r9_r8 + 0x14<32>:word32] = Mem794[r9_r8 + 0x14<32>:word32] + r3_r2_780
	word16 r0_802 = Mem801[r9_r8 + 0x10<32>:word16]
	Mem804[r9_r8 + 0x10<32>:word16] = r0_802
	word32 r1_r0_806 = Mem804[SEQ(r11_724, r2_692) + 0x14<32>:word32]
	Mem811[SEQ(r11_724, r2_692) + 0x14<32>:word32] = r1_r0_806
	r7_2879 = r7_738 - r0_802
	word32 r3_r2_809 = r3_r2_780 - r1_r0_806
	branch r1_r0_806 != 0<32> l000051FA
l000051F6:
	Mem821[SEQ(r11_724, r2_692) + 0x10<32>:word32] = Mem811[SEQ(r11_724, r2_692) + 8<32>:word32]
l000051FA:
	word32 r1_r0_824 = Mem823[r13:word32]
	r1_2530 = SLICE(r1_r0_824, word16, 16) (alias)
	r0_2875 = Mem823[r1_r0_824 + 0x10<32>:word16]
	branch r0_2875 != 0<16> l00006B18
l00005204:
	Mem831[r13 + 4<32>:word16] = 0x29A<16>
	r0_482 = Mem831[r12 + 0x10<32>:word16]
	branch r0_482 != 0<16> l00005E2E
l00005E2E:
	Mem848[r13 + 0x14<32>:word32] = r5_r4_784 + r3_r2_809
	Mem856[SEQ(r1_2530, r0_482) + r3_r2_809:byte] = SLICE(r6, byte, 0)
	word16 r6_857 = Mem856[r12 + 8<32>:word16]
	word32 r1_r0_858 = Mem856[r13 + 8<32>:word32]
	word32 r3_r2_859 = Mem856[r13 + 0x14<32>:word32]
	Mem868[r13 + 0x14<32>:word32] = r3_r2_859 + 1<32>
	Mem876[r1_r0_858 + r3_r2_859:byte] = SLICE(r6_857, byte, 0)
	r7_r6_6738 = Mem876[r12 + 8<32>:word32]
l00005E48:
	word32 r1_r0_892 = Mem891[r13 + 8<32>:word32]
	word32 r3_r2_893 = Mem891[r13 + 0x14<32>:word32]
	Mem902[r13 + 0x14<32>:word32] = r3_r2_893 + 1<32>
	Mem910[r1_r0_892 + r3_r2_893:byte] = SLICE(r7_r6_6738 >>u 0x18<8>, byte, 0)
	word16 r6_912 = Mem910[r12 + 0xA<32>:word16]
	word32 r1_r0_913 = Mem910[r13 + 8<32>:word32]
	word32 r3_r2_914 = Mem910[r13 + 0x14<32>:word32]
	Mem923[r13 + 0x14<32>:word32] = r3_r2_914 + 1<32>
	Mem930[r1_r0_913 + r3_r2_914:byte] = SLICE(r6_912, byte, 0)
	word32 r3_r2_934 = Mem930[r13 + 0x14<32>:word32]
	word16 r6_931 = Mem930[r12 + 0xA<32>:word16]
	word32 r1_r0_933 = Mem930[r13 + 8<32>:word32]
	Mem943[r13 + 0x14<32>:word32] = r3_r2_934 + 1<32>
	word32 r1_r0_946 = r1_r0_933 + r3_r2_934
	Mem951[r1_r0_946:byte] = SLICE(r6_931 >>u 8<8>, byte, 0)
	word16 r7_957 = SLICE(r7_r6_6738 >>u 0x18<8>, word16, 16)
	word16 r5_941 = SLICE(r3_r2_934 + 1<32>, word16, 16)
l00005E7A_thunk_fn00003FB8:
	word16 r1_959
	word16 r10_960
	word16 r11_961
	word32 r12_962
	word32 r13_963
	word16 r2_964
	word16 r3_965
	word16 r4_966
	word16 r5_967
	word16 r6_968
	word16 r7_969
	word16 r8_970
	word16 r9_971
	word32 ra_972
	word16 r0_958 = fn00003FB8(r1_r0_946, r3_r2_934, r9_r8, r5_941, r7_957, r12, r13, out r1_959, out r2_964, out r3_965, out r4_966, out r5_967, out r6_968, out r7_969, out r8_970, out r9_971, out r10_960, out r11_961, out r12_962, out r13_963, out ra_972)
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_958
	r7Out = r7_969
	r12Out = r12_962
	r13Out = r13_963
	raOut = ra_972
	return SEQ(r1_959, r6_968)
l00005212:
	Mem980[r13 + 0x4C<32>:word16] = 0xFFFF<16>
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_482
	r7Out = r7
	r12Out = r12
	r13Out = r13
	raOut = ra
	return SEQ(0xFFFF<16>, r6)
l00004DFA:
	word16 r1_990 = Mem484[r13 + 0xC8<32>:word16]
	branch r1_990 == 2<16> l00006098
l00006098:
	Mem997[SEQ(r5_4292, r4_4282) + 0xA<32>:word32] = SEQ(r11, r10)
	r3_r2_7010 = SEQ(r3_656, r2_134) (alias)
	r11_r10_7017 = SEQ(r11, r10) (alias)
	r7_1585 = r7
	r9_r8_7015 = r9_r8
l00004E04:
	branch r1_990 == 3<16> l0000657E
l0000657E:
	r12 = 0<32>
	r1_r0_3290 = SEQ(r1_990, r0_662) (alias)
	r3_r2_3289 = SEQ(r3_656, r2_134) (alias)
	r11_r10_6969 = SEQ(r11, r10) (alias)
	branch SEQ(r1_990, r0_662) == 0<32> l00006936
l00006586:
	Mem1006[SEQ(r11, r10) + 0x38<32>:word32] = SEQ(r1_990, r0_662)
	Mem1009[SEQ(r1_990, r0_662):word32] = SEQ(r11, r10)
	Mem1012[r9_r8 + 4<32>:word16] = 0x2A<16>
	Mem1014[r9_r8 + 0x18<32>:word16] = 1<16>
	Mem1016[r9_r8 + 0x38<32>:word32] = 0<32>
	Mem1018[r9_r8 + 0x2A<32>:word16] = 0xF<16>
	r11_r10_6901 = SEQ(r11, r10) (alias)
l00004E0A:
	word32 r3_r2_1020 = SEQ(r3_656, r2_134)
	word32 r1_r0_1041 = Mem484[(r3_r2_1020 + (SEQ(r3_656, r2_134) + r3_r2_1020) << 2<8>) + 0xE5AC<32>:word32]
	word16 r0_1054
	word32 r3_r2_7053
	word32 r7_r6_7034
	word32 r11_r10_7002
	word32 r5_r4_6748
	call r1_r0_1041 (retsize: 0;)
		uses: Mem:Mem484,r0:SLICE(r1_r0_1041, word16, 0),r1:SLICE(r1_r0_1041, word16, 16),r10:r10,r11:r11_994,r12:r12,r13:0xE5A4<32>,r2:0xE5A4<16>,r3:0<16>,r4:r4,r5:r5_486,r6:r6,r7:r7,r8:r8,r9:r9,ra:ra,Stack +0002:dwArgFFF0,Stack +0006:wArgFFF4,Stack +0008:dwArgFFF6,Stack +000C:wArgFFFA,Stack +000E:dwArgFFFC,Stack +0012:dwArg10000,Stack +0026:dwArg10014,Stack +002A:dwArg10018,Stack +002E:dwArg1001C,Stack +0032:dwArg10020,Stack +0036:dwArg10024,Stack +003A:dwArg10028,Stack +003E:dwArg1002C,Stack +0042:dwArg10030,Stack +0046:dwArg10034,Stack +0056:dwArg10044,Stack +005A:dwArg10048,Stack +005E:dwArg1004C,Stack +00F4:dwArg100E2,Stack +0202:wArg101F0,Stack +0206:wArg101F4,Stack +1000E:dwArg1FFFC,Stack +10028:dwArg20016,Stack +10030:dwArg2001E,Stack +10038:dwArg20026,Stack +10048:dwArg20036,Stack +1FF90:wArg2FF7E,Stack +1FFD4:wArg2FFC2,Stack +1FFF8:dwArg2FFE6,Stack +20022:dwArg30010,Stack +2FF7A:wArg3FF68,Stack +FFEA:wArg1FFD8,Stack +FFEC:dwArg1FFDA,Stack +FFF0:wArg1FFDE,Stack +FFF8:dwArg1FFE6,Stack +FFFC:dwArg1FFEA
		defs: r0:r0_1054,r12:r12_1052,r13:r13_1050,ra:ra_1060,Sequence r11:r10:r11_r10_7002,Sequence r3:r2:r3_r2_7053,Sequence r5:r4:r5_r4_6748,Sequence r7:r6:r7_r6_7034,Sequence r9:r8:r9_r8_7035,sp:sp_1049
	word16 r2_1055 = SLICE(r3_r2_7053, word16, 0)
	r7 = SLICE(r7_r6_7034, word16, 16) (alias)
	r6 = SLICE(r7_r6_7034, word16, 0) (alias)
	r11_1058 = SLICE(r11_r10_7002, word16, 16) (alias)
	r10_1062 = SLICE(r11_r10_7002, word16, 0) (alias)
	word16 r5_1063 = SLICE(r5_r4_6748, word16, 16)
	word16 r4_1053 = SLICE(r5_r4_6748, word16, 0)
	v144_4749 = false
	r9_r8 = r9_r8_6855 (alias)
	r3_r2_3019 = r3_r2_7053 (alias)
	branch true l000068CE
l00004E2E:
	r1_1071 = 0xFFFD<16>
	word16 r0_1072 = r0_1054 + 0xFFFE<16> & 0xFFFD<16>
	r9_r8 = r9_r8_6855 (alias)
	branch false l000055DE
l000055DE:
	r11_r10 = CONVERT(r7, word16, word32)
l000055E0:
	word32 r5_r4_1087 = Mem1079[r9_r8 + 0x10<32>:word32]
	r12 = Mem1079[r12 + 0xC<32>:word32]
	Mem1093[sp_1049 - 2<i32>:word16] = SLICE(r11_r10, word16, 0)
	fn0000DB24(r12, r5_r4_1087, r13, out r13)
	r5 = SLICE(r5_r4_1087, word16, 16) (alias)
	r4 = SLICE(r5_r4_1087, word16, 0) (alias)
	r11_r10_6719 = r11_r10 (alias)
l000055EA:
	Mem1119[r12 + 0xC<32>:word32] = Mem1107[r12 + 0xC<32>:word32] + r11_r10_6719
	Mem1131[r9_r8 + 0x10<32>:word32] = Mem1119[r9_r8 + 0x10<32>:word32] + r11_r10_6719
	Mem1139[r12 + 0x14<32>:word32] = Mem1131[r12 + 0x14<32>:word32] + r11_r10_6719
	Mem1144[r12 + 0x10<32>:word16] = Mem1139[r12 + 0x10<32>:word16]
	word32 r1_r0_1146 = Mem1144[r9_r8 + 0x14<32>:word32]
	Mem1152[r9_r8 + 0x14<32>:word32] = r1_r0_1146
	word32 r11_r10_1150 = r11_r10_6719 - r1_r0_1146
	word16 r3_1160 = SLICE(r12, word16, 16)
	word16 r2_1158 = SLICE(r12, word16, 0)
	word16 r1_1148 = SLICE(r1_r0_1146, word16, 16)
	word16 r11_1161 = SLICE(r11_r10_1150, word16, 16)
	word16 r10_1167 = SLICE(r11_r10_1150, word16, 0)
	branch r1_r0_1146 != 0<32> l0000560E_thunk_fn00004AB4
l0000560E_thunk_fn00004AB4:
	word16 r1_1169
	word16 r10_1170
	word16 r11_1171
	word32 r12_1172
	word16 r2_1173
	word16 r3_1174
	word16 r7_1175
	word16 r8_1176
	word16 r9_1177
	word32 ra_1178
	word16 r0_1168 = fn00004AB4(SEQ(r2_1158, r1_1148), r3_1160, r4, r5, r6, r10_1167, r11_1161, r12, out r1_1169, out r2_1173, out r3_1174, out r7_1175, out r8_1176, out r9_1177, out r10_1170, out r11_1171, out r12_1172, out ra_1178)
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_1168
	r7Out = r7_1175
	r12Out = r12_1172
	r13Out = r13
	raOut = ra_1178
	return SEQ(r1_1169, r6)
l00005612:
	word32 r1_r0_1185 = Mem1152[r9_r8 + 8<32>:word32]
	Mem1189[r9_r8 + 0x10<32>:word32] = r1_r0_1185
	word16 r1_1186 = SLICE(r1_r0_1185, word16, 16)
l00005616_thunk_fn00004AAC:
	word16 r1_1192
	word16 r11_1193
	word32 r12_1194
	word16 r2_1195
	word16 r3_1196
	word16 r4_1197
	word16 r5_1198
	word16 r6_1199
	word16 r7_1200
	word32 ra_1201
	word16 r0_1191 = fn00004AAC(r12, r1_1186, r11_1161, r12, out r1_1192, out r2_1195, out r3_1196, out r4_1197, out r5_1198, out r6_1199, out r7_1200, out r11_1193, out r12_1194, out ra_1201)
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_1191
	r7Out = r7_1200
	r12Out = r12_1194
	r13Out = r13
	raOut = ra_1201
	return SEQ(r1_1192, r6_1199)
l00004E3A:
	word32 r7_r6_6893 = r7_r6_7034
	word32 r9_r8_6896 = r9_r8_6855
	branch r0_1072 != 1<16> l00004EB6
l00004E3E:
	word16 r3_1209 = Mem484[sp_1049:word16]
	r11_r10_6741 = r11_r10_7002 (alias)
	r1_r0_2554 = SEQ(0xFFFD<16>, r0_1072) (alias)
	branch r3_1209 == 1<16> l00006C02
l00004E46:
	word32 r3_r2_6745 = SEQ(r3_1209, r2_1055)
	branch r3_1209 == 5<16> l00004E62
l00004E4A:
	Mem1217[sp_1049 - 2<i32>:word16] = 0<16>
	word32 sp_1238 = <invalid>
	word16 r3_1233
	word16 r6_1234
	word16 r7_1235
	word16 r9_1236
	word32 ra_1237
	word32 r2_r1_6749 = fn0000AF94(r5_r4_6748, r5_r4_6748, 0<16>, SEQ(r3_1209, r2_1055), Mem1217[sp_1049 + 10<i32>:word32], out r3_1233, out r6_1234, out r7_1235, out r9_1236, out r10_1062, out r11_1058, out r12, out r13, out ra_1237)
	sp_1049 = sp_1238 + 4<32>
	word16 r4_1246 = Mem1217[sp_1238 + 4<32>:word16]
	r3_r2_6745 = SEQ(r3_1233, SLICE(r2_r1_6749, word16, 16)) (alias)
	branch r4_1246 == 3<16> l00006F76
l00006F76:
	word32 r5_r4_1251 = SEQ(r5_1063, r4_1246) + r2_r1_6749
	word32 r1_r0_1255 = Mem1217[r5_r4_1251:word32]
	word32 r13_1259
	word16 r7_1260
	word32 r12_1261
	word16 r0_1263
	word16 r1_1266
	word32 ra_1269
	word16 r6_1270
	call r1_r0_1255 (retsize: 0;)
		uses: Mem:Mem1217,r0:SLICE(r1_r0_1255, word16, 0),r1:SLICE(r1_r0_1255, word16, 16),r10:r10_1228,r11:r11_1229,r12:r12_1230,r13:r13_1231,r4:SLICE(r5_r4_1251, word16, 0),r5:SLICE(r5_r4_1251, word16, 16),r6:r6_1234,r7:r7_1235,r8:r4_1053,r9:r9_1236,ra:ra_1237
		defs: r0:r0_1263,r1:r1_1266,r12:r12_1261,r13:r13_1259,r6:r6_1270,r7:r7_1260,ra:ra_1269
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_1263
	r7Out = r7_1260
	r12Out = r12_1261
	r13Out = r13_1259
	raOut = ra_1269
	return SEQ(r1_1266, r6_1270)
l00004E62:
	word16 r11_1286
	word16 r4_1287
	word16 r5_1288
	word16 r6_1289
	word16 r7_7098
	r1_1071 = fn0000B09C(r3_r2_6745, r11_1058, out r4_1287, out r5_1288, out r6_1289, out r7_7098, out r11_1286, out ra)
	word16 r2_1279 = SLICE(r3_r2_6745, word16, 0)
	word16 r0_1297 = Mem1276[r12 + 0x10<32>:word16]
	word16 r7_1300 = Mem1276[r3_r2_6745 + 0x14<32>:word16]
	branch r0_1297 >=u r7_1300 l00004E76
l00004E74:
	r7_1300 = r0_1297
l00004E76:
	word32 r11_r10_1359 = SEQ(r11_1286, r10_1062)
	branch r7_1300 == 0<16> l00004EB0
l00004E7A:
	word32 r11_r10_1307 = CONVERT(r7_1300, word16, word32)
	word32 r3_r2_1310 = Mem1276[r12 + 0xC<32>:word32]
	word32 r5_r4_1313 = Mem1276[r3_r2_6745 + 0x10<32>:word32]
	Mem1318[sp_1049 - 2<i32>:word16] = SLICE(r11_r10_1307, word16, 0)
	fn0000DB24(r3_r2_1310, r5_r4_1313, r13, out r13)
	Mem1338[r12 + 0xC<32>:word32] = Mem1318[r12 + 0xC<32>:word32] + r11_r10_1307
	Mem1345[r3_r2_6745 + 0x10<32>:word32] = Mem1338[r3_r2_6745 + 0x10<32>:word32] + r11_r10_1307
	word32 r1_r0_1349 = Mem1345[r12 + 0x14<32>:word32] + r11_r10_1307
	Mem1352[r12 + 0x14<32>:word32] = r1_r0_1349
	r0_1297 = Mem1352[r12 + 0x10<32>:word16]
	Mem1355[r12 + 0x10<32>:word16] = r0_1297
	word32 r3_r2_1356 = Mem1355[r3_r2_6745 + 0x14<32>:word32]
	Mem1360[r3_r2_6745 + 0x14<32>:word32] = r3_r2_1356
	word32 sp_1328 = <invalid>
	r1_1071 = SLICE(r1_r0_1349, word16, 16) (alias)
	r7_1300 = r7_1300 - r0_1297
	r2_1279 = SLICE(r3_r2_1356, word16, 0) (alias)
	r11_r10_1359 = r11_r10_1307 - r3_r2_1356
	sp_1049 = sp_1328 + 4<32>
	branch r3_r2_1356 != 0<32> l00004EB0
l00004EAC:
	word32 r3_r2_1365 = Mem1360[r3_r2_6745 + 8<32>:word32]
	Mem1368[r3_r2_6745 + 0x10<32>:word32] = r3_r2_1365
	r2_1279 = SLICE(r3_r2_1365, word16, 0) (alias)
l00004EB0:
	r11_1058 = SLICE(r11_r10_1359, word16, 16) (alias)
	r10_1062 = SLICE(r11_r10_1359, word16, 0) (alias)
	r7_r6_6893 = SEQ(r7_1300, r6_1289) (alias)
	r9_r8_6896 = r3_r2_6745 (alias)
	branch r0_1297 == 0<16> l00005572
l00005572:
	r12 = SEQ(SLICE(r12, word16, 16), r2_1279)
	r9_r8_6762 = r3_r2_6745 (alias)
	r11_r10_7079 = r11_r10_1359 (alias)
l00005574:
	word16 r0_1382 = Mem1381[r9_r8_6762 + 0x14<32>:word16]
	word16 r7_1384 = Mem1381[r12 + 0x10<32>:word16]
	branch r0_1382 >=u r7_1384 l0000557E
l0000557C:
	r7_1384 = r0_1382
l0000557E:
	word32 r1_r0_1444 = SEQ(r1_1071, r0_1382)
	word32 r11_r10_1447 = r11_r10_7079
	branch r7_1384 == 0<16> l000055B8
l00005582:
	word32 r11_r10_1391 = CONVERT(r7_1384, word16, word32)
	word32 r3_r2_1394 = Mem1381[r12 + 0xC<32>:word32]
	word32 r5_r4_1398 = Mem1381[r9_r8_6762 + 0x10<32>:word32]
	Mem1403[sp_1049 - 2<i32>:word16] = SLICE(r11_r10_1391, word16, 0)
	fn0000DB24(r3_r2_1394, r5_r4_1398, r13, out r13)
	Mem1423[r12 + 0xC<32>:word32] = Mem1403[r12 + 0xC<32>:word32] + r11_r10_1391
	Mem1432[r9_r8_6762 + 0x10<32>:word32] = Mem1423[r9_r8_6762 + 0x10<32>:word32] + r11_r10_1391
	Mem1439[r12 + 0x14<32>:word32] = Mem1432[r12 + 0x14<32>:word32] + r11_r10_1391
	Mem1442[r12 + 0x10<32>:word16] = Mem1439[r12 + 0x10<32>:word16]
	r1_r0_1444 = Mem1442[r9_r8_6762 + 0x14<32>:word32]
	Mem1449[r9_r8_6762 + 0x14<32>:word32] = r1_r0_1444
	r11_r10_1447 = r11_r10_1391 - r1_r0_1444
	branch r1_r0_1444 != 0<32> l000055B8
l000055B4:
	r1_r0_1444 = Mem1449[r9_r8_6762 + 8<32>:word32]
	Mem1459[r9_r8_6762 + 0x10<32>:word32] = r1_r0_1444
l000055B8:
	sp_1049 = fp - 6<i32>
	r7_r6_1462 = Mem1461[r13 + 0x14<32>:word32]
	branch r7_r6_1462 != 0<32> l00004CBA
l00004CBA:
	word16 r6_1522
	branch Mem1461[r9_r8_6762 + 0xAC<32>:word16] == 0<16> l00004C38
l00004C38:
	r6_1522 = 6<16> (alias)
l00004CC2:
	r6_1522 = 0xA<16> (alias)
l00004C3A:
	branch Mem1461[r9_r8_6762 + 0x54<32>:word16] == 0xF<16> l00004C4A
l00004C4A:
	branch Mem1461[r9_r8_6762 + 0x88<32>:word16] != 0xF<16> l00004C42
l00004C52:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	word32 r1_r0_1526 = (r1_r0_1444 >>u 0x14<8>) + ra + (ra >>u 0x12<8>) + (ra >>u 7<8>) + CONVERT(r6_1522, word16, uint32)
	r0Out = SLICE(r1_r0_1526, word16, 0)
	r7Out = r7
	r12Out = r12
	r13Out = r13
	raOut = r13
	return SEQ(SLICE(r1_r0_1526, word16, 16), r6_1522)
l00004C42:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	word32 r1_r0_1545 = r1_r0_1444 + 5<32> + CONVERT(r6_1522, word16, uint32)
	r0Out = SLICE(r1_r0_1545, word16, 0)
	r7Out = r7
	r12Out = r12
	r13Out = r13
	raOut = r13
	return SEQ(SLICE(r1_r0_1545, word16, 16), r6_1522)
l000055C0:
	r1_r0_1555 = Mem1461[r13 + 0x38<32>:word32]
	r5_r4_6778 = 0<32> (alias)
	r11_r10_6781 = r11_r10_1447 (alias)
l00005514:
	word32 r1_r0_1562 = Mem1561[r1_r0_1555 + 0x14<32>:word32]
	word32 r3_r2_1564 = Mem1561[r13 + 0x40<32>:word32]
	Mem1573[r13 + 0x40<32>:word32] = r3_r2_1564 + 1<32>
	byte v72_1579 = Mem1573[r1_r0_1562 + r3_r2_1564:byte]
	word32 r1_r0_1581 = Mem1573[r13 + 8<32>:word32]
	Mem1591[r13 + 0x14<32>:word32] = r7_r6_1462 + 1<32>
	word32 r1_r0_1595 = r1_r0_1581 + r7_r6_1462
	Mem1600[r1_r0_1595:byte] = v72_1579
	word16 r10_3839 = SLICE(r11_r10_6781, word16, 0)
	word16 r4_1629 = SLICE(r5_r4_6778, word16, 0)
	word16 r11_1615 = SLICE(r11_r10_6781, word16, 16)
	r6 = SLICE(r7_r6_1462, word16, 0) (alias)
	r7_1585 = SLICE(r7_r6_1462, word16, 16) (alias)
	word16 r9_1589 = SLICE(r7_r6_1462 + 1<32>, word16, 16)
	word16 r1_1596 = SLICE(r1_r0_1595, word16, 16)
	word16 r0_1597 = SLICE(r1_r0_1595, word16, 0)
	branch v72_1579 == 0<8> l00005FCC
l00005FCC:
	word16 r2_1610 = CONVERT(r1_1596 != 0x29A<16>, bool, int16)
	word16 r1_1621 = CONVERT(r1_1596 != 0<16>, bool, int16)
	word16 r2_1614 = SEQ(SLICE(r2_1610, byte, 8), SLICE(r2_1610, byte, 0) & SLICE(r0_1597, byte, 0))
	word16 r11_1618 = r11_1615 + 0xFFC7<16> & 0xFFEF<16>
	r1_1625 = SEQ(SLICE(r1_1621, byte, 8), SLICE(r1_1621, byte, 0) & SLICE(r0_1597, byte, 0))
	branch SLICE(r0_1597, byte, 0) != 0<8> l00005FA0
l00005FEA:
	branch r4_1629 == 0xFFFF<16> l000060BE
l000060BE:
	r7_1585 = 6<16>
l00005FEE:
	r0_1597 = CONVERT(r4_1629 <u 9<16>, bool, int16)
l00005FF4:
	r1_1625 = CONVERT(SLICE(r12, word16, 0) <u 4<16>, bool, int16)
	branch r1_1625 != 0<16> l00005FA0
l00005FFC:
	branch SLICE(r0_1597, byte, 0) != 0<8> l00005FA0
l00006000:
	branch SLICE(r12, word16, 0) == Mem1600[r7_r6_1462 + 0xC9<32>:word16] l00006092
l00006092:
	ra = 0xE5A4<32>
	r3_r2_7010 = SEQ(Mem1600[r7_r6_1462 + 0xC5<32>:word16], r2_1614) (alias)
	r9_r8_7015 = SEQ(r9_1589, r6 + 1<16>) (alias)
	r11_r10_7017 = SEQ(r11_1618, r10_3839) (alias)
l0000609A:
	word32 r1_r0_1699 = Mem1697[r13 * 0xC<32> + ra + 8<32>:word32]
	r13 = (r13 << 2<8>) + ra
	dwLoc04_4766 = r13
	r1_1625 = SLICE(r1_r0_1699, word16, 16) (alias)
	branch r1_r0_1699 != Mem1697[r13 + 8<32>:word32] l00006008
l000060BC:
	r9_r8_1799 = r9_r8_7015 (alias)
	r11_r10_6790 = r11_r10_7017 (alias)
l00006008:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg65520 = <invalid>
	word16 stackArg65524 = <invalid>
	word32 stackArg65526 = <invalid>
	word16 stackArg65530 = <invalid>
	word32 stackArg65532 = <invalid>
	word32 stackArg65536 = <invalid>
	word32 stackArg65556 = <invalid>
	word32 stackArg65560 = <invalid>
	word32 stackArg65564 = <invalid>
	word32 stackArg65568 = <invalid>
	word32 stackArg65572 = <invalid>
	word32 stackArg65576 = <invalid>
	word32 stackArg65580 = <invalid>
	word32 stackArg65584 = <invalid>
	word32 stackArg65588 = <invalid>
	word32 stackArg65604 = <invalid>
	word32 stackArg65608 = <invalid>
	word32 stackArg65612 = <invalid>
	word32 stackArg65762 = <invalid>
	word16 stackArg66032 = <invalid>
	word16 stackArg66036 = <invalid>
	word16 stackArg131032 = <invalid>
	word32 stackArg131034 = <invalid>
	word16 stackArg131038 = <invalid>
	word32 stackArg131046 = <invalid>
	word32 stackArg131050 = <invalid>
	word32 stackArg131068 = <invalid>
	word32 stackArg131094 = <invalid>
	word32 stackArg131102 = <invalid>
	word32 stackArg131110 = <invalid>
	word32 stackArg131126 = <invalid>
	word16 stackArg196478 = <invalid>
	word16 stackArg196546 = <invalid>
	word32 stackArg196582 = <invalid>
	word32 stackArg196624 = <invalid>
	word16 stackArg261992 = <invalid>
	word16 r0_1743
	word32 r3_r2_7143
	word32 r5_r4_6819
	word32 r1_r6_6842 = fn00004CD4(r11_r10, r5_r4, r7_r6, r9_r8, r12, r13, ra, stackArg0, stackArg65520, stackArg65524, stackArg65526, stackArg65530, stackArg65532, stackArg65536, stackArg65556, stackArg65560, stackArg65564, stackArg65568, stackArg65572, stackArg65576, stackArg65580, stackArg65584, stackArg65588, stackArg65604, stackArg65608, stackArg65612, stackArg65762, stackArg66032, stackArg66036, stackArg131032, stackArg131034, stackArg131038, stackArg131046, stackArg131050, stackArg131068, stackArg131094, stackArg131102, stackArg131110, stackArg131126, stackArg196478, stackArg196546, stackArg196582, stackArg196624, stackArg261992, out r11_r10_6790, out r3_r2_7143, out r5_r4_6819, out r9_r8_1799, out r0_1743, out r7_1585, out r12, out r13, out ra)
	word16 wLoc04_5940 = SLICE(r13, word16, 0)
	wLoc06_4767 = r7
	word16 r2_1744 = <invalid>
	r1_1625 = SLICE(r1_r6_6842, word16, 16) (alias)
	r6 = SLICE(r1_r6_6842, word16, 0) (alias)
	word16 r5_1752 = SLICE(r5_r4_6819, word16, 16)
	r4_1742 = SLICE(r5_r4_6819, word16, 0) (alias)
	r11_1747 = SLICE(r11_r10_6790, word16, 16) (alias)
	r10_1751 = SLICE(r11_r10_6790, word16, 0) (alias)
	sp_1049 = fp - 6<i32>
	branch r0_1743 == 0xFFFE<16> l00005FA0
l00005FA0:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFE<16>
	r7Out = r7
	r12Out = r12
	r13Out = r13
	raOut = ra
	return SEQ(r1_1625, r6)
l00006016:
	branch Mem1737[r11_r10_6790 + 0x10<32>:word16] == 0<16> l0000623E
l0000623E:
	word32 r1_r0_1769 = Mem1768[r12 + 4<32>:word32]
	word16 r3_1770 = Mem1768[r12 + 8<32>:word16]
	word16 r1_1771 = SLICE(r1_r0_1769, word16, 16)
	dwLoc04_4766 = SEQ(r1_1625, wLoc04_5940) (alias)
	word32 r3_r2_1817 = SEQ(r3_1770, r2_1744)
	branch r1_r0_1769 == 0<32> l00006792
l0000624A:
	word16 r0_1780 = CONVERT(Mem1768[r1_r0_1769:byte] != 0x31<8>, bool, int16)
	word16 r2_1783 = CONVERT(r3_1770 != 0x38<16>, bool, int16)
	word16 r0_1787 = SEQ(SLICE(r0_1780, byte, 8), SLICE(r0_1780, byte, 0) | SLICE(r2_1783, byte, 0))
	r3_r2_6932 = SEQ(r3_1770, r2_1783) (alias)
	branch SLICE(r2_1783, byte, 0) != 0<8> l0000677C
l00006260:
	branch r11_r10_6790 == 0<32> l0000676A
l0000676A:
	r1_r0_6938 = SEQ(r1_1771, r0_1787) (alias)
	branch r5_r4_6819 == 0<32> l00006B9E
l00006772:
	r9_r8_1799 = Mem1768[r5_r4_6819 + 0x40<32>:word32]
	r1_r0_1808 = SEQ(r1_1771, r0_1787) (alias)
	r3_r2_6932 = r12
	branch r9_r8_1799 == 0<32> l00006B94
l0000677C:
	r1_r0_1808 = Mem1768[r5_r4_6819 + 0x48<32>:word32]
	r1_1771 = SLICE(r1_r0_1808, word16, 16) (alias)
	v147_4752 = r1_r0_1808 == 0<32>
	branch r1_r0_1808 == 0<32> l00006B8A
l00006786:
	r13 = Mem1768[r5_r4_6819 + 0x38<32>:word32]
	branch r13 == 0<32> l00006B80
l00006790:
	r3_r2_1817 = Mem1768[r13:word32]
l00006792:
	branch r3_r2_1817 == r5_r4_6819 l0000679E
l0000679E:
	word16 r2_1831 = Mem1768[r13 + 4<32>:word16]
	r1_1771 = CONVERT(r2_1831 != 0x45<16>, bool, int16)
	branch SLICE(r1_1771, byte, 0) == 0<8> l000067E2
l000067D2:
	r11_1747 = r11_1747 + 0xFFC7<16> & 0xFFEF<16>
	r1_1771 = CONVERT(r2_1831 != 0<16>, bool, int16)
	branch r1_1771 != 0<16> l0000679A
l000067E2:
	v150_4755 = r12 > 0<32>
	r11_r10_6920 = SEQ(r11_1747, r10_1751) (alias)
	r9_r8_6855 = r9_r8_1799 (alias)
	r1_r0_2554 = SEQ(r1_1771, 0xFFFE<16>) (alias)
	branch r12 == 0<32> l00006B28
l000067E8:
	Mem1891[r12:word32] = Mem1768[r5_r4_6819:word32]
	Mem1896[r12 + 4<32>:word32] = Mem1891[r5_r4_6819 + 4<32>:word32]
	Mem1901[r12 + 8<32>:word32] = Mem1896[r5_r4_6819 + 8<32>:word32]
	Mem1906[r12 + 0xC<32>:word32] = Mem1901[r5_r4_6819 + 0xC<32>:word32]
	Mem1911[r12 + 0x10<32>:word32] = Mem1906[r5_r4_6819 + 0x10<32>:word32]
	Mem1916[r12 + 0x14<32>:word32] = Mem1911[r5_r4_6819 + 0x14<32>:word32]
	Mem1921[r12 + 0x18<32>:word32] = Mem1916[r5_r4_6819 + 0x18<32>:word32]
	Mem1926[r12 + 0x38<32>:word32] = Mem1921[r5_r4_6819 + 0x38<32>:word32]
	Mem1931[r12 + 0x40<32>:word32] = Mem1926[r5_r4_6819 + 0x40<32>:word32]
	Mem1936[r12 + 0x48<32>:word32] = Mem1931[r5_r4_6819 + 0x48<32>:word32]
	Mem1941[r12 + 0x50<32>:word32] = Mem1936[r5_r4_6819 + 0x50<32>:word32]
	Mem1946[r12 + 0x58<32>:word32] = Mem1941[r5_r4_6819 + 0x58<32>:word32]
	Mem1951[r12 + 0x60<32>:word32] = Mem1946[r5_r4_6819 + 0x60<32>:word32]
	Mem1956[r12 + 0x68<32>:word32] = Mem1951[r5_r4_6819 + 0x68<32>:word32]
	r9_r8_6855 = r9_r8_1799 (alias)
l0000679A:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFE<16>
	r7Out = r7_1585
	r12Out = r12
	r13Out = dwLoc04_4766
	raOut = ra
	return SEQ(r1_1771, r6)
l00006266:
	Mem1969[r11_r10_6790 + 0x18<32>:word32] = 0<32>
	word32 r1_r0_1971 = Mem1969[r11_r10_6790 + 0x40<32>:word32]
	r1_1972 = SLICE(r1_r0_1971, word16, 16) (alias)
	word16 r0_1973 = SLICE(r1_r0_1971, word16, 0)
	r3_r2_6827 = SEQ(r3_1770, r2_1783) (alias)
	branch r1_r0_1971 == 0<32> l00006734
l00006274:
	word32 r9_r8_6867
	bool v153_4758
	bool v156_4761
	r9_r8_1977 = Mem1969[r11_r10_6790 + 0x48<32>:word32]
	word16 r9_1978 = SLICE(r9_r8_1977, word16, 16)
	word16 r8_1979 = SLICE(r9_r8_1977, word16, 0)
	word32 r3_r2_6832 = SEQ(r3_1770, r2_1783)
	branch r9_r8_1977 == 0<32> l00006706
l0000627E:
	r3_r2_6835 = SEQ(r3_1770, r2_1783) (alias)
	branch SLICE(r13, word16, 0) == 0xFFFF<16> l000066BC
l00006284:
	branch r6 > 0<16> l000066C6
l000066C6:
	r1_r0_6972 = r1_r0_1971 ^ 0x9020DF28<32> (alias)
l0000628A:
	r7_1585 = 1<16>
	branch r6 < 0xF<16> l000066DA
l00006292:
	r9_1978 = r9_1978 + 0xFFFF<16>
	r9_r8_1799 = SEQ(r9_1978 + 0xFFFF<16>, r8_1979) (alias)
	r3_r2_6827 = SEQ(r7, r2_1783) (alias)
	branch r7 <u 8<16> l00006734
l0000629C:
	word32 r9_r8_6854
	r6 = r6 + 0xFFF8<16>
	branch false l00006722
l00006722:
	word16 r9_2007 = SLICE(SEQ(r9_1978 + 0xFFFF<16>, r8_1979) + 0x552018E0<32>, word16, 16)
l00006728:
	Mem2012[SEQ(1<16>, r6 + 0xFFF8<16>) + r12:byte] = 0<8>
	r9_r8_6854 = SEQ(r9_2007, r8_1979 + 0x18E0<16>) (alias)
l000062AE:
	branch CONVERT(r5_1752 != 8<16>, bool, int16) != 0<16> l00006718
l00006718:
l000062B8:
	word16 r3_2021 = CONVERT(r1_1625 <u 4<16>, bool, int16)
	v156_4761 = r3_2021 == 0<16>
	v153_4758 = r3_2021 != 0<16>
	dwLoc04_4766 = r1_r6_6842 (alias)
	branch r3_2021 != 0<16> l0000670C
l000062C4:
	branch CONVERT(SLICE(r13, word16, 0) <u 9<16>, bool, int16) != 0<16> l00006700
l00006700:
	r3_r2_6832 = 0x5D76<32> (alias)
l00006706:
	Mem2039[r11_r10_6790 + 0x48<32>:word32] = r3_r2_6832
	v156_4761 = r7_1585 == 0xFFFF<16>
	v153_4758 = r7_1585 != 0xFFFF<16>
l0000670C:
	r9_r8_6855 = SEQ(r9_1978, r8_1979) (alias)
	branch v153_4758 l000063C6
l00006710:
	r7_1585 = 6<16>
	r9_r8_6867 = SEQ(r9_1978, r8_1979) (alias)
l000062D0:
	branch CONVERT(r6 == 0x10<16>, bool, int16) == 0<16> l000062DE
l000062D8:
	r9_r8_1977 = SEQ(r9_1978 + 0xFFFF<16>, r8_1979) (alias)
	branch SLICE(r2_1783, byte, 0) != 0<8> l000066F2
l000062DE:
	branch r6 != 0x10<16> l000062E6
l000062E2:
	dwLoc04_4766 = SEQ(r1_1625, 9<16>) (alias)
l000062E6:
	word32 sp_2086
	word32 r13_2087
	word16 r7_2088
	word32 ra_2097
	word16 r6_2098
	word32 r9_r8_6845
	word32 r11_r10_6846
	call r1_r0_1971 (retsize: 0;)
		uses: Mem:Mem2063,r10:r10_1751,r11:r11_1747,r12:r12_1741,r13:r13_1739,r4:1<16>,r5:0x1210<16>,r6:r6_1750 + 0xFFF8<16>,r7:1<16>,r8:r8_1979,r9:r9_1978 + 0xFFFF<16>,ra:ra_1749,Stack +0006:wArg00,Stack +10000:wArgFFFA,Stack +10002:dwArgFFFC,Stack +10006:dwArg10000,Stack +1001A:dwArg10014,Stack +1001E:dwArg10018,Stack +10022:dwArg1001C,Stack +10026:dwArg10020,Stack +1002A:dwArg10024,Stack +1002E:dwArg10028,Stack +10032:dwArg1002C,Stack +10036:dwArg10030,Stack +1003A:dwArg10034,Stack +1004A:dwArg10044,Stack +1004E:dwArg10048,Stack +10052:dwArg1004C,Stack +100E8:dwArg100E2,Stack +101F6:wArg101F0,Stack +101FA:wArg101F4,Stack +1FFDE:wArg1FFD8,Stack +1FFE0:dwArg1FFDA,Stack +1FFE4:wArg1FFDE,Stack +1FFEC:dwArg1FFE6,Stack +1FFF0:dwArg1FFEA,Stack +20002:dwArg1FFFC,Stack +2001C:dwArg20016,Stack +20024:dwArg2001E,Stack +2002C:dwArg20026,Stack +2003C:dwArg20036,Stack +2FF84:wArg2FF7E,Stack +2FFC8:wArg2FFC2,Stack +2FFEC:dwArg2FFE6,Stack +30016:dwArg30010,Stack +3FF6E:wArg3FF68,Stack +FFF6:dwArgFFF0,Stack +FFFA:wArgFFF4,Stack +FFFC:dwArgFFF6
		defs: r13:r13_2087,r6:r6_2098,r7:r7_2088,ra:ra_2097,Sequence r11:r10:r11_r10_6846,Sequence r9:r8:r9_r8_6845,sp:sp_2086
	word16 r11_2095 = SLICE(r11_r10_6846, word16, 16)
	word16 r10_2099 = SLICE(r11_r10_6846, word16, 0)
	word16 r9_2101 = SLICE(r9_r8_6845, word16, 16)
	word16 r8_2096 = SLICE(r9_r8_6845, word16, 0)
	branch r9_r8_6845 == 0<32> l00006720
l00006720:
	Mem2111[r11_r10_6846 + 0x50<32>:word32] = r9_r8_6845
l00006724:
l000062FC:
	Mem2114[r11_r10_6846 + 0x38<32>:word32] = r9_r8_6845
	Mem2116[r9_r8_6845:word32] = r11_r10_6846
	Mem2119[r9_r8_6845 + 4<32>:word16] = 0x2A<16>
	Mem2121[r9_r8_6845 + 0x18<32>:word16] = r7_2088
	Mem2123[r9_r8_6845 + 0x38<32>:word32] = 0<32>
	word16 r0_2124 = Mem2123[sp_2086 + 2<32>:word16]
	Mem2126[r9_r8_6845 + 0x54<32>:word16] = r0_2124
	word16 r7_2128 = __a_shift<word16,word16>(1<16>, r0_2124)
	Mem2130[r9_r8_6845 + 0x50<32>:word16] = r7_2128
	Mem2134[r9_r8_6845 + 0x58<32>:word16] = 0xFFFF<16>
	word16 r0_2135 = Mem2134[sp_2086:word16]
	Mem2138[r9_r8_6845 + 0x88<32>:word16] = r0_2135
	word16 r1_2140 = __a_shift<word16,word16>(1<16>, r0_2135)
	Mem2143[r9_r8_6845 + 0x84<32>:word16] = r1_2140
	Mem2146[SEQ(r9_2101 + 0xFFFF<16>, r8_2096) + 0x8C<32>:word16] = r1_2140
	Mem2161[SEQ(r9_2101 + 0xFFFF<16>, r8_2096) + 0x90<32>:word16] = fn0000D464(Mem2146[sp_2086:word16], 3<16>)
	word32 r1_r0_2165 = Mem2161[SEQ(r11_2095 + 9<16>, r10_2099) + 0x40<32>:word32]
	word32 r13_2171
	word16 r7_2172
	word32 r12_2173
	word32 ra_2181
	word16 r6_2182
	word32 r11_r10_6849
	word32 r1_r0_6847
	word32 r9_r8_6848
	call r1_r0_2165 (retsize: 0;)
		uses: Mem:Mem2161,r0:SLICE(r1_r0_2165, word16, 0),r1:SLICE(r1_r0_2165, word16, 16),r10:r10_2099,r11:r11_2095 + 9<16>,r12:0<32>,r13:r13_2087,r4:r7_2128 + 6<16>,r5:2<16>,r6:r6_2098,r7:r7_2128 + 6<16>,r8:r8_2096,r9:r9_2101 + 0xFFFF<16>,ra:ra_2097
		defs: r12:r12_2173,r13:r13_2171,r6:r6_2182,r7:r7_2172,ra:ra_2181,Sequence r1:r0:r1_r0_6847,Sequence r11:r10:r11_r10_6849,Sequence r9:r8:r9_r8_6848
	Mem2189[r9_r8_6848 + 0x60<32>:word32] = r1_r0_6847
	word32 r1_r0_2195 = Mem2189[r11_r10_6849 + 0x40<32>:word32]
	word32 r13_2200
	word16 r7_2201
	word32 r12_2202
	word32 ra_2210
	word16 r6_2211
	word32 r1_r0_6850
	word32 r9_r8_6851
	word32 r11_r10_6852
	call r1_r0_2195 (retsize: 0;)
		uses: Mem:Mem2189,r0:SLICE(r1_r0_2195, word16, 0),r1:SLICE(r1_r0_2195, word16, 16),r10:SLICE(r11_r10_6849, word16, 0),r11:SLICE(r11_r10_6849, word16, 16),r12:r12_2173,r13:r13_2171,r4:Mem2189[r9_r8_6848 + 0x50<32>:word16],r5:2<16>,r6:r6_2182,r7:r7_2172,r8:SLICE(r9_r8_6848, word16, 0),r9:SLICE(r9_r8_6848, word16, 16),ra:ra_2181
		defs: r12:r12_2202,r13:r13_2200,r6:r6_2211,r7:r7_2201,ra:ra_2210,Sequence r1:r0:r1_r0_6850,Sequence r11:r10:r11_r10_6852,Sequence r9:r8:r9_r8_6851
	Mem2218[r9_r8_6851 + 0x70<32>:word32] = r1_r0_6850
	word32 r1_r0_2224 = Mem2218[r11_r10_6852 + 0x40<32>:word32]
	word32 sp_2228
	word32 r11_r10_7050
	word32 r1_r0_6853
	call r1_r0_2224 (retsize: 0;)
		uses: Mem:Mem2218,r0:SLICE(r1_r0_2224, word16, 0),r1:SLICE(r1_r0_2224, word16, 16),r10:SLICE(r11_r10_6852, word16, 0),r11:SLICE(r11_r10_6852, word16, 16),r12:r12_2202,r13:r13_2200,r4:Mem2218[r9_r8_6851 + 0x84<32>:word16],r5:2<16>,r6:r6_2211,r7:r7_2201,r8:SLICE(r9_r8_6851, word16, 0),r9:SLICE(r9_r8_6851, word16, 16),ra:ra_2210
		defs: r12:r12_2231,r13:r13_2229,r6:r6_2240,r7:r7_2230,ra:ra_2239,Sequence r1:r0:r1_r0_6853,Sequence r11:r10:r11_r10_7050,Sequence r9:r8:r9_r8_6854,sp:sp_2228
	Mem2247[r9_r8_6854 + 0x78<32>:word32] = r1_r0_6853
	Mem2249[r9_r8_6854 + 0x2418<32>:word32] = r12
	r0_1973 = Mem2249[sp_2228:word16]
	r11_r10_6790 = r11_r10_7050 (alias)
l0000638C:
	word16 r4_2256 = __a_shift<word16,word16>(1<16>, r0_1973)
	Mem2260[r9_r8_6854 + 0x23E8<32>:word16] = r4_2256
	word32 r1_r0_2266 = Mem2260[r11_r10_6790 + 0x40<32>:word32]
	word32 r5_r4_6952
	call r1_r0_2266 (retsize: 0;)
		uses: Mem:Mem2260,r0:SLICE(r1_r0_2266, word16, 0),r1:SLICE(r1_r0_2266, word16, 16),r10:SLICE(r11_r10_6950, word16, 0),r11:SLICE(r11_r10_6950, word16, 16),r12:r12_2272,r13:r13_2270,r4:r4_2256,r5:4<16>,r6:r6_2251 + 6<16>,r7:r7_2271,r8:SLICE(r9_r8_6948, word16, 0),r9:SLICE(r9_r8_6948, word16, 16),ra:ra_2273
		defs: r12:r12_2278,r13:r13_2276,r7:r7_2277,ra:ra_2286,Sequence r1:r0:r1_r0_6951,Sequence r11:r10:r11_r10_7068,Sequence r5:r4:r5_r4_6952,Sequence r9:r8:r9_r8_6855,sp:sp_2275
	Mem2294[r9_r8_6855 + 8<32>:word32] = r1_r0_1971
	r6 = Mem2294[r9_r8_6855 + 0x23E8<32>:word16]
	Mem2305[r9_r8_6855 + 0xC<32>:word32] = r5_r4_6952 << 2<8>
	word16 r4_2279 = SLICE(r5_r4_6952, word16, 0)
	r1_1972 = SLICE(r1_r0_1971, word16, 16) (alias)
	r0_2280 = SLICE(r1_r0_1971, word16, 0) (alias)
	word16 r8_2285 = SLICE(r9_r8_6855, word16, 0)
	branch r12 == Mem2305[r9_r8_6855 + 0x60<32>:word32] l0000662E
l0000662E:
	Mem2313[sp_1049 - 2<i32>:word16] = r8_2285
	sp_1049 = sp_1049 - 2<i32>
	r11_r10_7020 = r11_r10_6790 (alias)
	r3_r2_7023 = r5_r4_6952 (alias)
l000063BA:
	branch r12 == Mem2305[r9_r8_6855 + 0x70<32>:word32] l00006624
l00006624:
	Mem2322[sp_1049 - 2<i32>:word16] = r4_2279
	sp_1049 = sp_1049 - 2<i32>
	r11_r10_7065 = r11_r10_6790 (alias)
	r3_r2_7069 = r5_r4_6952 (alias)
l000063C4:
	r4_1742 = Mem2305[r9_r8_6855 + 0x78<32>:word16]
l000063C6:
	r5_1752 = Mem2332[r9_r8_6855 + 0x7C<32>:word16] | r4_1742
	v156_4761 = r4_1742 == 0<16>
	r9_r8_6867 = r9_r8_6855 (alias)
l000063D0:
	word16 r4_2342 = CONVERT(v156_4761, bool, int16)
	r8_2376 = SLICE(r9_r8_6867, word16, 0) (alias)
	r9_2374 = SLICE(r9_r8_6867, word16, 16) (alias)
	word16 r1_2350 = SLICE(r1_r0_1971, word16, 16)
	word16 r0_2345 = SLICE(r1_r0_1971, word16, 0)
	r9_r8_6855 = r9_r8_6867 (alias)
	r5_r4_6859 = SEQ(r5_1752, r4_2342) (alias)
	r1_r0_6865 = r1_r0_1971 (alias)
	branch r4_2342 != 0<16> l00006610
l000063D8:
	word16 r1_2354 = r1_2350 | r0_2345
	r4_2357 = CONVERT(r0_2345 == 0<16>, bool, int16)
	r11_r10_6862 = r11_r10_6790 (alias)
	branch r4_2357 != 0<16> l00006602
l00006602:
	word32 r1_r0_2366 = Mem2363[r11_r10_6862 + 0x40<32>:word32]
	word32 r11_r10_7087
	word32 r5_r4_7026
	word32 r9_r8_6866
	call r1_r0_2366 (retsize: 0;)
		uses: Mem:Mem2363,r0:SLICE(r1_r0_2366, word16, 0),r1:SLICE(r1_r0_2366, word16, 16),r10:SLICE(r11_r10_6864, word16, 0),r11:SLICE(r11_r10_6864, word16, 16),r12:r12_2372,r13:r13_2370,r4:r4_2373,r5:4<16>,r6:r6_2375,r7:r7_2371,r8:r8_2376,r9:r9_2374,ra:ra_2377
		defs: r12:r12_2382,r13:r13_2380,r7:r7_2381,ra:ra_2390,Sequence r1:r0:r1_r0_6865,Sequence r11:r10:r11_r10_7087,Sequence r5:r4:r5_r4_7026,Sequence r9:r8:r9_r8_6866,sp:sp_2379
	Mem2398[r9_r8_6866 + 8<32>:word32] = r1_r0_6865
	r9_r8_6855 = r9_r8_6866 (alias)
	r5_r4_6859 = r5_r4_7026 (alias)
	r11_r10_6790 = r11_r10_7087 (alias)
l00006610:
	r6 = Mem2404[r9_r8_6855 + 0x23E8<32>:word16]
	Mem2420[r9_r8_6855 + 0xC<32>:word32] = r5_r4_6859 << 2<8>
	r0_2280 = SLICE(r1_r0_6865, word16, 0) (alias)
	r1_1972 = SLICE(r1_r0_6865, word16, 16) (alias)
	r10_2488 = SLICE(r11_r10_6790, word16, 0) (alias)
	r11_2474 = SLICE(r11_r10_6790, word16, 16) (alias)
	r5_r4_2422 = Mem2420[r9_r8_6855 + 0x60<32>:word32]
	r3_r2_6871 = r5_r4_6859 (alias)
	r1_r0_6874 = r1_r0_6865 (alias)
	r11_r10_7065 = r11_r10_6790 (alias)
	r3_r2_7069 = r5_r4_6859 (alias)
	branch r12 == r5_r4_2422 l00006846
l00006626:
	r10_1751 = SLICE(r11_r10_7065, word16, 0) (alias)
	r11_1747 = SLICE(r11_r10_7065, word16, 16) (alias)
	r11_r10_7020 = r11_r10_7065 (alias)
	r3_r2_7023 = r3_r2_7069 (alias)
	branch r12 == Mem2435[r9_r8_6855 + 0x70<32>:word32] l0000683C
l0000683C:
	word32 r3_r2_7030
	word32 r5_r4_7033
	word32 r9_r8_6917
	call r9_r8_6855 (retsize: 0;)
		uses: Mem:Mem2510,r10:r10_2483,r11:r11_2471,r12:r12_2470,r13:r13_2453,r4:1<16>,r5:0x1210<16>,r6:r6_2478,r7:r7_2461,r8:SLICE(r9_r8_6916, word16, 0),r9:SLICE(r9_r8_6916, word16, 16),ra:ra_2492
		defs: r10:r10_2524,r11:r11_2520,r12:r12_2514,r13:r13_2512,r6:r6_2523,r7:r7_2513,ra:ra_2522,Sequence r3:r2:r3_r2_7030,Sequence r5:r4:r5_r4_7033,Sequence r9:r8:r9_r8_6917,sp:sp_2511
	r3_r2_6871 = r3_r2_7030 (alias)
	r1_r0_6874 = r9_r8_6917 (alias)
	r5_r4_2422 = r5_r4_7033 (alias)
	r9_r8_6855 = r9_r8_6917 (alias)
l00006846:
	r4_1742 = SLICE(r5_r4_2422, word16, 0) (alias)
	word16 r2_2541 = SLICE(r3_r2_6871, word16, 0)
	word16 r3_2539 = SLICE(r3_r2_6871, word16, 16)
	r1_2530 = SLICE(r1_r0_6874, word16, 16) (alias)
	branch r1_r0_6874 == 0<32> l00006AF0
l00006AF0:
	branch r3_r2_6871 == 0<32> l00006B12
l00006AF4:
	word32 r1_r0_2548 = Mem2547[r3_r2_6871 + 0x40<32>:word32]
	r1_2530 = SLICE(r1_r0_2548, word16, 16) (alias)
	branch r1_r0_2548 == 0<32> l00006B12
l00006AFC:
	r1_r0_2554 = Mem2547[r3_r2_6871 + 0x48<32>:word32]
	r1_2530 = SLICE(r1_r0_2554, word16, 16) (alias)
	branch r1_r0_2554 == 0<32> l00006B12
l00006B04:
	word32 r11_r10_2560 = Mem2547[r3_r2_6871 + 0x38<32>:word32]
	word16 r11_2561 = SLICE(r11_r10_2560, word16, 16)
	word16 r10_2562 = SLICE(r11_r10_2560, word16, 0)
	branch r11_r10_2560 == 0<32> l00006B12
l00006B0C:
	branch Mem2547[r11_r10_2560:word32] == r9_r8_6855 l00006B1A
l00006B1A:
	branch Mem2547[r11_r10_2560 + 4<32>:word16] <u 0x1F<16> l00006B12
l00006B26:
	v150_4755 = r4_1742 > 0<16>
	r11_r10_6920 = SEQ(r11_2561 + 0xC0CC<16>, r10_2562) (alias)
l00006B28:
	r1_2530 = SLICE(r1_r0_2554, word16, 16) (alias)
	word16 r8_2660 = SLICE(r9_r8_6855, word16, 0)
	word16 r9_2657 = SLICE(r9_r8_6855, word16, 16)
	word16 r10_2629 = SLICE(r11_r10_6920, word16, 0)
	word16 r11_2626 = SLICE(r11_r10_6920, word16, 16)
	branch v150_4755 l00006C0A
l00006C0A:
	r7_1585 = 0<16>
	r12 = SEQ(SLICE(r12, word16, 16), 0<16>)
l00006B2A:
	r12 = SEQ(SLICE(r12, word16, 16), r4_1742 >> 0xC<16>)
	branch r4_1742 < 0x2F<16> l00006B3A
l00006B38:
	sp_1049 = SEQ(SLICE(sp_1049, word16, 16), SLICE(sp_1049, word16, 0) & 0xF<16>)
l00006B3A:
	r7 = r7_1585 + 0xFFF8<16>
	branch true l00006B50
l00006B48:
	branch CONVERT(r7 != 0<16>, bool, int16) != 0<16> l00006B12
l00006B50:
	word32 r5_r4_2634 = Mem2633[r11_r10_6920 + 0x48<32>:word32]
	word16 r5_2635 = SLICE(r5_r4_2634, word16, 16)
	word16 r4_2636 = SLICE(r5_r4_2634, word16, 0)
	r11_r10_6741 = r11_r10_6920 (alias)
	branch r5_r4_2634 == 0<32> l00006C02
l00006B58:
	r11_r10_6741 = r11_r10_6920 (alias)
	branch Mem2633[r11_r10_6920 + 0x38<32>:word16] == r7 l00006C02
l00006C02:
	Mem2651[r11_r10_6741 + 8<32>:word16] = SLICE(r12, word16, 0)
	Mem2654[r11_r10_6741 + 0x38<32>:word16] = r7
	r9_r8_6928 = r9_r8_6855 (alias)
	r1_r0_2720 = r1_r0_2554 (alias)
l00006B60:
	word16 r7_2688
	word32 r11_r10_6927
	call r1_r0_2554 (retsize: 0;)
		uses: Mem:Mem2633,r10:r10_2629,r11:r11_2626,r12:r12_2646,r13:r13_2674,r4:r4_2636,r5:r5_2635,r6:r6_2678,r7:r7_2612,r8:r8_2660,r9:r9_2657,ra:ra_2682
		defs: r12:r12_2689,r13:r13_2687,r6:r6_2698,r7:r7_2688,Sequence r11:r10:r11_r10_6927,Sequence r9:r8:r9_r8_6928,sp:sp_2686
	Mem2707[r11_r10_6927 + 0x48<32>:word32] = 0<32>
	word32 r1_r0_2709 = Mem2707[r9_r8_6928 + 0x40<32>:word32]
	r1_2530 = SLICE(r1_r0_2709, word16, 16) (alias)
l00006B70:
	Mem2712[r11_r10_6927 + 8<32>:word16] = SLICE(r12, word16, 0)
	Mem2714[r11_r10_6927 + 0x38<32>:word16] = r7_2688
	branch r1_r0_2709 == 0<32> l00006B12
l00006B7A:
	r1_r0_2720 = Mem2714[r9_r8_6928 + 0x48<32>:word32]
l00006B7E:
	r9_r8_1799 = r9_r8_6928 (alias)
	r3_r2_6932 = 0<32> (alias)
	r1_r0_1808 = r1_r0_2720 (alias)
l00006B80:
	r1_2530 = SLICE(r1_r0_1808, word16, 16) (alias)
	branch r3_r2_6932 == r1_r0_1808 l00006B12
l00006B84:
	r1_r0_1808 = Mem2749[r9_r8_1799 + 0x38<32>:word32]
	v147_4752 = r3_r2_6932 == r1_r0_1808
l00006B8A:
	r1_2530 = SLICE(r1_r0_1808, word16, 16) (alias)
	branch v147_4752 l00006B12
l00006B8C:
	branch Mem2761[r1_r0_1808:word32] != r9_r8_1799 l00006B12
l00006B92:
	r4_1742 = Mem2761[r1_r0_1808 + 4<32>:word16]
	r12 = r3_r2_6932 (alias)
l00006B94:
	r1_2530 = SLICE(r1_r0_1808, word16, 16) (alias)
	r1_r0_6938 = r1_r0_1808 (alias)
	branch r4_1742 <u 0x1F<16> l00006B12
l00006B9E:
	Mem2786[r1_r0_6938 + 0x1E<32>:word16] = 0<16>
	Mem2788[r1_r0_6938 + 0x20<32>:word16] = 0<16>
	Mem2790[r1_r0_6938 + 0x22<32>:word16] = 0<16>
	Mem2799[r1_r0_6938 + 0x14<32>:word32] = r12
	Mem2806[r9_r8_1799 + 0x14<32>:word32] = r12
	Mem2809[r9_r8_1799 + 8<32>:word32] = r12
	Mem2812[r9_r8_1799 + 0x18<32>:word32] = r12
	word16 r0_2783 = SLICE(r1_r0_6938, word16, 0)
	word16 r1_2781 = SLICE(r1_r0_6938, word16, 16)
	word16 r2_2814 = Mem2812[r1_r0_6938 + 8<32>:word16]
	branch r2_2814 == 0<16> l00006BC0
l00006BB8:
	Mem2822[r9_r8_1799 + 0x60<32>:word32] = CONVERT(r2_2814, word16, int32)
	r1_2781 = r1_2781 & 1<16>
l00006BC0:
	Mem2827[SEQ(r1_2781, r0_2783) + 4<32>:word16] = 0x3F34<16>
	Mem2829[SEQ(r1_2781, r0_2783) + 6<32>:word16] = 0<16>
	Mem2831[SEQ(r1_2781, r0_2783) + 0xA<32>:word16] = 0<16>
	Mem2834[SEQ(r1_2781, r0_2783) + 0xE<32>:word16] = 0x8000<16>
	Mem2839[SEQ(r1_2781, r0_2783) + 0x18<32>:word32] = 0<32>
	Mem2841[SEQ(r1_2781, r0_2783) + 0x50<32>:word32] = 0<32>
	Mem2843[SEQ(r1_2781, r0_2783) + 0x2C<32>:word16] = 0<16>
	word32 r1_r0_2847 = SEQ(r1_2781, r0_2783)
	Mem2853[SEQ(r1_2781, r0_2783) + 0x90<32>:word32] = r1_r0_2847 + 0x50C<32>
	Mem2855[SEQ(r1_2781, r0_2783) + 0x70<32>:word32] = r1_r0_2847 + 0x50C<32>
	Mem2857[SEQ(r1_2781, r0_2783) + 0x68<32>:word32] = r1_r0_2847 + 0x50C<32>
	Mem2859[SEQ(r1_2781, r0_2783) + 0x1B9C<32>:word16] = 1<16>
	Mem2862[SEQ(r1_2781, r0_2783) + 0x373C<32>:word16] = 0xFFFF<16>
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0<16>
	r7Out = wLoc06_4767
	r12Out = r12
	r13Out = r13
	raOut = dwLoc04_4766
	return SEQ(r1_2781, r6)
l00006B12:
	r0_2875 = 0xFFFE<16>
	r7_2879 = Mem2877[sp_1049:word16]
l00006B18:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_2875
	r7Out = r7_2879
	r12Out = r12
	r13Out = r13
	raOut = dwLoc04_4766
	return SEQ(r1_2530, r6)
l0000684C:
	Mem2886[r12 + 0x38<32>:word32] = r1_r0_6874
	Mem2890[sp_1049 - 2<i32>:word16] = 0x1210<16>
	word32 r13_2899
	fn0000DB24(r3_r2_6871, r5_r4_2422, r5_r4_2422, out r13_2899)
	Mem2905[r3_r2_6871:word32] = r12
	word32 r1_r0_2908 = Mem2905[r12 + 0x40<32>:word32]
	word32 r13_2915
	word16 r7_2916
	word32 r12_2917
	word16 r11_2923
	word32 ra_2925
	word16 r6_2926
	word16 r10_2927
	word32 r9_r8_6880
	word32 r1_r0_6879
	call r1_r0_2908 (retsize: 0;)
		uses: Mem:Mem2905,r0:SLICE(r1_r0_2908, word16, 0),r1:SLICE(r1_r0_2908, word16, 16),r10:r10_2913,r11:r11_2912,r12:r12_2591,r13:r13_2899,r4:Mem2905[r3_r2_6873 + 0x50<32>:word16],r5:2<16>,r6:r6_2679,r7:r7_2611,r8:r2_2541,r9:r3_2539,ra:ra_2683
		defs: r10:r10_2927,r11:r11_2923,r12:r12_2917,r13:r13_2915,r6:r6_2926,r7:r7_2916,ra:ra_2925,Sequence r1:r0:r1_r0_6879,Sequence r9:r8:r9_r8_6880
	Mem2933[r9_r8_6880 + 0x60<32>:word32] = r1_r0_6879
	word32 r1_r0_2937 = Mem2933[r12_2917 + 0x40<32>:word32]
	word32 r13_2942
	word16 r7_2943
	word32 r12_2944
	word16 r11_2950
	word32 ra_2952
	word16 r6_2953
	word16 r10_2954
	word32 r1_r0_6881
	word32 r9_r8_6882
	call r1_r0_2937 (retsize: 0;)
		uses: Mem:Mem2933,r0:SLICE(r1_r0_2937, word16, 0),r1:SLICE(r1_r0_2937, word16, 16),r10:r10_2927,r11:r11_2923,r12:r12_2917,r13:r13_2915,r4:Mem2933[r9_r8_6880 + 0x50<32>:word16],r5:2<16>,r6:r6_2926,r7:r7_2916,r8:SLICE(r9_r8_6880, word16, 0),r9:SLICE(r9_r8_6880, word16, 16),ra:ra_2925
		defs: r10:r10_2954,r11:r11_2950,r12:r12_2944,r13:r13_2942,r6:r6_2953,r7:r7_2943,ra:ra_2952,Sequence r1:r0:r1_r0_6881,Sequence r9:r8:r9_r8_6882
	Mem2960[r9_r8_6882 + 0x70<32>:word32] = r1_r0_6881
	word32 r1_r0_2964 = Mem2960[r12_2944 + 0x40<32>:word32]
	word32 r13_2969
	word16 r7_2970
	word32 r12_2971
	word16 r11_2977
	word32 ra_2979
	word16 r6_2980
	word16 r10_2981
	word32 r1_r0_6883
	word32 r9_r8_6884
	call r1_r0_2964 (retsize: 0;)
		uses: Mem:Mem2960,r0:SLICE(r1_r0_2964, word16, 0),r1:SLICE(r1_r0_2964, word16, 16),r10:r10_2954,r11:r11_2950,r12:r12_2944,r13:r13_2942,r4:Mem2960[r9_r8_6882 + 0x84<32>:word16],r5:2<16>,r6:r6_2953,r7:r7_2943,r8:SLICE(r9_r8_6882, word16, 0),r9:SLICE(r9_r8_6882, word16, 16),ra:ra_2952
		defs: r10:r10_2981,r11:r11_2977,r12:r12_2971,r13:r13_2969,r6:r6_2980,r7:r7_2970,ra:ra_2979,Sequence r1:r0:r1_r0_6883,Sequence r9:r8:r9_r8_6884
	Mem2987[r9_r8_6884 + 0x78<32>:word32] = r1_r0_6883
	word32 r1_r0_2991 = Mem2987[r12_2971 + 0x40<32>:word32]
	word32 sp_2995
	word32 r11_r10_6885
	call r1_r0_2991 (retsize: 0;)
		uses: Mem:Mem2987,r0:SLICE(r1_r0_2991, word16, 0),r1:SLICE(r1_r0_2991, word16, 16),r10:r10_2981,r11:r11_2977,r12:r12_2971,r13:r13_2969,r4:Mem2987[r9_r8_6884 + 0x23E8<32>:word16],r5:4<16>,r6:r6_2980,r7:r7_2970,r8:SLICE(r9_r8_6884, word16, 0),r9:SLICE(r9_r8_6884, word16, 16),ra:ra_2979
		defs: r12:r12_2998,r13:r13_2996,r6:r6_3007,r7:r7_2997,ra:ra_3006,Sequence r11:r10:r11_r10_6885,Sequence r9:r8:r9_r8_6886,sp:sp_2995
	Mem3017[r9_r8 + 8<32>:word32] = r11_r10_6885
	r11_1058 = SLICE(r11_r10_6885, word16, 16) (alias)
	r10_1062 = SLICE(r11_r10_6885, word16, 0) (alias)
	r3_r2_3019 = Mem3017[r9_r8 + 0x60<32>:word32]
	sp_1049 = sp_2995 + 4<32>
	branch r3_r2_3019 == 0<32> l0000698E
l000068BA:
	branch Mem3017[r9_r8 + 0x70<32>:word32] == 0<32> l0000698E
l000068C2:
	v144_4749 = Mem3017[r9_r8 + 0x78<32>:word16] == 0<16>
l000068CE:
	branch CONVERT(v144_4749, bool, int16) != 0<16> l0000698E
l000068D4:
	r11_1058 = r11_1058 | r10_1062
	branch CONVERT(r10_1062 == 0<16>, bool, int16) != 0<16> l0000698E
l0000698E:
	r12 = r3_r2_3019
	r9_r8 = r9_r8_7036 (alias)
	word16 r5_7152
	word16 r2_7149
	word16 r3_7150
	word16 r4_7151
	word16 r1_7148
	word32 r9_r8_7036
	r11_r10_6901 = fn00006134(r9_r8, r11_1058, out r9_r8_7036, out r1_7148, out r2_7149, out r3_7150, out r4_7151, out r5_7152, out r6, out r7, out ra) (alias)
l0000659E:
	Mem3087[r9_r8 + 0x50<32>:word16] = 0x8000<16>
	Mem3090[r9_r8 + 0x58<32>:word16] = 0x7FFF<16>
	Mem3092[r9_r8 + 0x44<32>:word16] = 0xF<16>
	Mem3094[r9_r8 + 0x84<32>:word16] = 0x8000<16>
	Mem3096[r9_r8 + 0x8C<32>:word16] = 0x7FFF<16>
	Mem3098[r9_r8 + 0x48<32>:word16] = 5<16>
	word32 r1_r0_3104 = Mem3098[r11_r10_6901 + 0x40<32>:word32]
	word32 r13_3117
	word16 r7_3118
	word32 r12_3119
	word32 ra_3127
	word16 r6_3128
	word32 r9_r8_6905
	word32 r11_r10_6906
	word32 r1_r0_6904
	call r1_r0_3104 (retsize: 0;)
		uses: Mem:Mem3098,r0:SLICE(r1_r0_3104, word16, 0),r1:SLICE(r1_r0_3104, word16, 16),r10:SLICE(r11_r10_6903, word16, 0),r11:SLICE(r11_r10_6903, word16, 16),r12:r12_3112,r13:r13_3108,r4:0x8000<16>,r5:2<16>,r6:r6_3113,r7:r7_3111,r8:SLICE(r9_r8_6900, word16, 0),r9:SLICE(r9_r8_6900, word16, 16),ra:ra_3114
		defs: r12:r12_3119,r13:r13_3117,r6:r6_3128,r7:r7_3118,ra:ra_3127,Sequence r1:r0:r1_r0_6904,Sequence r11:r10:r11_r10_6906,Sequence r9:r8:r9_r8_6905
	Mem3135[r9_r8_6905 + 0x60<32>:word32] = r1_r0_6904
	word32 r1_r0_3141 = Mem3135[r11_r10_6906 + 0x40<32>:word32]
	word32 r13_3146
	word16 r7_3147
	word32 r12_3148
	word32 ra_3156
	word16 r6_3157
	word32 r1_r0_6907
	word32 r9_r8_6908
	word32 r11_r10_6909
	call r1_r0_3141 (retsize: 0;)
		uses: Mem:Mem3135,r0:SLICE(r1_r0_3141, word16, 0),r1:SLICE(r1_r0_3141, word16, 16),r10:SLICE(r11_r10_6906, word16, 0),r11:SLICE(r11_r10_6906, word16, 16),r12:r12_3119,r13:r13_3117,r4:Mem3135[r9_r8_6905 + 0x50<32>:word16],r5:2<16>,r6:r6_3128,r7:r7_3118,r8:SLICE(r9_r8_6905, word16, 0),r9:SLICE(r9_r8_6905, word16, 16),ra:ra_3127
		defs: r12:r12_3148,r13:r13_3146,r6:r6_3157,r7:r7_3147,ra:ra_3156,Sequence r1:r0:r1_r0_6907,Sequence r11:r10:r11_r10_6909,Sequence r9:r8:r9_r8_6908
	Mem3164[r9_r8_6908 + 0x70<32>:word32] = r1_r0_6907
	word32 r1_r0_3170 = Mem3164[r11_r10_6909 + 0x40<32>:word32]
	word32 r11_r10_7029
	word32 r1_r0_6910
	word32 r9_r8_6911
	call r1_r0_3170 (retsize: 0;)
		uses: Mem:Mem3164,r0:SLICE(r1_r0_3170, word16, 0),r1:SLICE(r1_r0_3170, word16, 16),r10:SLICE(r11_r10_6909, word16, 0),r11:SLICE(r11_r10_6909, word16, 16),r12:r12_3148,r13:r13_3146,r4:Mem3164[r9_r8_6908 + 0x84<32>:word16],r5:2<16>,r6:r6_3157,r7:r7_3147,r8:SLICE(r9_r8_6908, word16, 0),r9:SLICE(r9_r8_6908, word16, 16),ra:ra_3156
		defs: r12:r12_3177,r13:r13_3175,r6:r6_3186,r7:r7_3176,ra:ra_3185,Sequence r1:r0:r1_r0_6910,Sequence r11:r10:r11_r10_7029,Sequence r9:r8:r9_r8_6911
	Mem3193[r9_r8_6911 + 0x78<32>:word32] = r1_r0_6910
	Mem3195[r9_r8_6911 + 0x2418<32>:word32] = r12
	Mem3198[r9_r8_6911 + 0x23E8<32>:word16] = 0x4000<16>
	r9_2374 = SLICE(r9_r8_6911, word16, 16) (alias)
	r8_2376 = SLICE(r9_r8_6911, word16, 0) (alias)
	r4_2357 = 0x4000<16>
	r11_r10_6862 = r11_r10_7029 (alias)
l000068E0:
	word32 r5_r4_3205 = Mem3200[r13 + 0x60<32>:word32]
	Mem3209[sp_1049 - 2<i32>:word16] = Mem3200[r9_r8 + 0x50<32>:word16] * 2<16>
	word32 r13_3215
	fn0000DB24(r3_r2_3019, r5_r4_3205, r13, out r13_3215)
	word32 sp_3216 = <invalid>
	word32 r3_r2_3220 = Mem3209[r9_r8 + 0x70<32>:word32]
	word32 r5_r4_3230 = Mem3209[r13_3215 + 0x70<32>:word32]
	Mem3232[sp_3216 - 2<i32>:word16] = Mem3209[r9_r8 + 0x50<32>:word16] * 2<16>
	word32 r13_3239
	fn0000DB24(r3_r2_3220, r5_r4_3230, r13_3215, out r13_3239)
	word32 sp_3240 = <invalid>
	word32 r3_r2_3244 = Mem3232[r9_r8 + 0x78<32>:word32]
	word32 r5_r4_3254 = Mem3232[r13_3239 + 0x78<32>:word32]
	Mem3256[sp_3240 - 2<i32>:word16] = Mem3232[r9_r8 + 0x84<32>:word16] * 2<16>
	word32 r13_3263
	fn0000DB24(r3_r2_3244, r5_r4_3254, r13_3239, out r13_3263)
	word32 sp_3264 = <invalid>
	word32 r3_r2_3268 = Mem3256[r9_r8 + 8<32>:word32]
	word32 r5_r4_3274 = Mem3256[r13_3263 + 8<32>:word32]
	Mem3277[sp_3264 - 2<i32>:word16] = Mem3256[r9_r8 + 0xC<32>:word16]
	word32 r13_3284
	fn0000DB24(r3_r2_3268, r5_r4_3274, r13_3263, out r13_3284)
	r3_r2_3289 = Mem3277[r9_r8 + 8<32>:word32]
	r1_r0_3290 = Mem3277[r13_3284 + 0x10<32>:word32]
	r11_r10_6969 = SEQ(r11_1058, r10_1062) (alias)
l00006936:
	Mem3315[r9_r8 + 0x10<32>:word32] = r1_r0_3290 + r3_r2_3289
	word32 r5_r4_3320 = CONVERT(Mem3315[r9_r8 + 0x23E8<32>:word16] >>u 0xF<8>, word16, word32)
	Mem3333[r9_r8 + 0x23F0<32>:word32] = r11_r10_6969 + r5_r4_3320 * 2<32>
	Mem3349[r9_r8 + 0x23E0<32>:word32] = r3_r2_3289 + r5_r4_3320 * 6<32>
	Mem3358[r9_r8 + 0x15E0<32>:word32] = r9_r8 + 0x6A<32>
	Mem3367[r9_r8 + 0x15F8<32>:word32] = r9_r8 + 0x95E<32>
	Mem3376[r9_r8 + 0x1610<32>:word32] = r9_r8 + 0xA52<32>
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0<16>
	r7Out = r7
	r12Out = r12
	r13Out = dwLoc04_4766
	raOut = ra
	return SEQ(SLICE(r9_r8 + 0xA52<32>, word16, 16), r6)
l00006630:
	r9_r8_1799 = r9_r8_6855 (alias)
	r11_r10_6790 = r11_r10_7020 (alias)
	r3_r2_6827 = r3_r2_7023 (alias)
	branch CONVERT(Mem3388[r9_r8_6855 + 0x78<32>:word16] == 0<16>, bool, int16) != 0<16> l00006734
l00006642:
	r1_1972 = r1_1972 | r0_2280
	r9_r8_1799 = r9_r8_6855 (alias)
	r11_r10_6790 = r11_r10_7020 (alias)
	r3_r2_6827 = r3_r2_7023 (alias)
	branch CONVERT(r0_2280 == 0<16>, bool, int16) != 0<16> l00006734
l00006734:
	Mem3413[r9_r8_1799 + 4<32>:word16] = 0x29A<16>
	Mem3422[r11_r10_6790 + 0x18<32>:word32] = SEQ(r1_1972, Mem3413[0x0000FC68<p32>:word32])
	word16 r2_3435
	word16 r3_3436
	word16 r1_3438
	word16 r6_3439
	word16 r4_3442
	word16 r5_3443
	word16 r7_7146
	word32 ra_7147
	word32 r9_r8_7145
	fn00006134(r9_r8_1799, SLICE(r3_r2_6827, word16, 16), out r9_r8_7145, out r1_3438, out r2_3435, out r3_3436, out r4_3442, out r5_3443, out r6_3439, out r7_7146, out ra_7147)
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFC<16>
	r7Out = wLoc06_4767
	r12Out = r12
	r13Out = r13
	raOut = dwLoc04_4766
	return SEQ(r1_3438, r6_3439)
l0000664E:
	word32 r5_r4_3466 = CONVERT(r6 >>u 0xF<8>, word16, word32) * 2<32> + SEQ(r1_1972, r0_2280)
	Mem3470[r9_r8_6855 + 0x23F0<32>:word32] = r5_r4_3466
	Mem3486[r9_r8_6855 + 0x23E0<32>:word32] = SEQ(r1_1972, r0_2280) + r5_r4_3466 * 3<32>
	Mem3489[r9_r8_6855 + 0xC4<32>:word16] = r7_1585
	Mem3491[r9_r8_6855 + 0x64<32>:word16] = 0<16>
	Mem3493[r9_r8_6855 + 0x24<32>:byte] = 8<8>
	word16 r0_3499
	word16 r1_3500
	word32 r13_3504
	word16 r2_3505
	word16 r3_3506
	word16 r4_3507
	word16 r5_3508
	word16 r6_3509
	word16 r8_3511
	word16 r9_3512
	word32 ra_7153
	word32 r11_r10_6919 = fn000046AC(r9_r8_6855, r7_1585, r13, ra, Mem3493[sp_1049:word16], Mem3493[sp_1049 + 2<i32>:word32], Mem3493[sp_1049 + 6<i32>:word16], Mem3493[sp_1049 + 32<i32>:word32], Mem3493[sp_1049 + 36<i32>:word32], Mem3493[sp_1049 + 40<i32>:word32], Mem3493[sp_1049 + 44<i32>:word32], Mem3493[sp_1049 + 48<i32>:word32], Mem3493[sp_1049 + 52<i32>:word32], Mem3493[sp_1049 + 56<i32>:word32], Mem3493[sp_1049 + 60<i32>:word32], Mem3493[sp_1049 + 80<i32>:word32], Mem3493[sp_1049 + 84<i32>:word32], Mem3493[sp_1049 + 238<i32>:word32], Mem3493[sp_1049 + 508<i32>:word16], Mem3493[sp_1049 + 512<i32>:word16], Mem3493[sp_1049 + 65538<i32>:word32], out r0_3499, out r1_3500, out r2_3505, out r3_3506, out r4_3507, out r5_3508, out r6_3509, out r8_3511, out r9_3512, out r12, out r13_3504, out ra_7153)
	r7_1585 = r0_3499
	branch r0_3499 == 0<16> l00006684
l00006684:
	word32 r9_r8_3522 = Mem3493[r11_r10_6919 + 0x38<32>:word32]
	word32 r1_r0_3526 = CONVERT(Mem3493[r9_r8_3522 + 0x50<32>:word16], word16, word32)
	Mem3532[r9_r8_3522 + 0x68<32>:word32] = r1_r0_3526 * 2<32>
	word32 r6_r5_3536 = CONVERT(Mem3532[r9_r8_3522 + 0x84<32>:word16], word16, word32)
	word32 r1_r0_3543 = r1_r0_3526 * 2<32> + r6_r5_3536 * 2<32>
	Mem3547[r1_r0_3543:word16] = r0_3499
	r6 = SLICE(r6_r5_3536 * 2<32>, word16, 16) (alias)
	r13 = fn0000DB44(r1_r0_3526 * 2<32>, r6_r5_3536 * 2<32>, r0_3499, r13_3504)
	r3_r2_6835 = SEQ(SLICE(r1_r0_3543 * 0xC<32>, word16, 16), SLICE(r1_r0_3543, word16, 0) * 0xC<16>) (alias)
	r9_r8_1977 = SEQ(SLICE(r9_r8_3522, word16, 16) + 0xFFFF<16>, SLICE(r9_r8_3522, word16, 0)) (alias)
l000066BC:
	Mem3586[r9_r8_1977 + 0xC0<32>:word16] = Mem3581[r3_r2_6835 + 0xE5A6<32>:word16]
	word16 r2_3574 = SLICE(r3_r2_6835, word16, 0)
	word16 r1_3578 = SLICE(r3_r2_6835 + 0xE5A4<32>, word16, 16)
l000066C8:
	Mem3589[r9_r8_1977 + 0xCC<32>:word16] = Mem3586[r3_r2_6835 + 0xE5A4<32>:word16]
	r1_r0_6972 = SEQ(r1_3578, r2_3574 + 0xE5A4<16>) (alias)
l000066CC:
	Mem3600[r9_r8_1977 + 0xD0<32>:word16] = Mem3595[r1_r0_6972 + 4<32>:word16]
	Mem3604[r9_r8_1977 + 0xBC<32>:word16] = Mem3600[r1_r0_6972 + 6<32>:word16]
	r1_1972 = SLICE(r1_r0_6972, word16, 16) (alias)
l000066DA:
	Mem3611[r9_r8_1977 + 0xAC<32>:word16] = r7_1585
	Mem3616[r9_r8_1977 + 0x98<32>:word32] = r12
	Mem3618[r9_r8_1977 + 0xB4<32>:word16] = r7_1585
	Mem3620[r9_r8_1977 + 0x240C<32>:word16] = r7_1585
	Mem3622[r9_r8_1977 + 0x5C<32>:word16] = 2<16>
	Mem3624[r9_r8_1977 + 0x50<32>:word16] = 2<16>
l000066F2:
	Mem3629[r9_r8_1977 + 0xA8<32>:word16] = r7_1585
	Mem3631[r9_r8_1977 + 0x80<32>:word16] = r7_1585
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r7_1585
	r7Out = wLoc06_4767
	r12Out = r12
	r13Out = r13
	raOut = dwLoc04_4766
	return SEQ(r1_1972, r6)
l0000667E:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_3499
	r7Out = wLoc06_4767
	r12Out = r12
	r13Out = r13_3504
	raOut = dwLoc04_4766
	return SEQ(r1_3500, r6_3509)
l000063E6:
	word32 r7_r6_3658 = CONVERT(r6 >>u 0xF<8>, word16, word32) * 2<32> + SEQ(r1_2354, r0_2345)
	Mem3662[r9_r8_6867 + 0x23F0<32>:word32] = r7_r6_3658
	word32 r5_r4_3663 = SEQ(r5_1752, r4_2357)
	Mem3680[r9_r8_6867 + 0x23E0<32>:word32] = SEQ(r1_2354, r0_2345) + (r5_r4_3663 + (SEQ(r5_1752, r4_2357) + r5_r4_3663))
	Mem3683[r9_r8_6867 + 0xC4<32>:word16] = SLICE(r13, word16, 0)
	Mem3686[r9_r8_6867 + 0xC8<32>:word16] = Mem3683[sp_1049 + 4<32>:word16]
	Mem3688[r9_r8_6867 + 0x24<32>:byte] = 8<8>
	word16 r0_3692
	word16 r1_3693
	word32 r12_3696
	word32 r13_3697
	word16 r2_3698
	word16 r3_3699
	word16 r4_3700
	word16 r5_3701
	word16 r6_3702
	word16 r8_3704
	word16 r9_3705
	word32 ra_3706
	word32 r11_r10_6870 = fn000046AC(r9_r8_6867, SLICE(r7_r6_3658, word16, 16), r13, ra, Mem3688[sp_1049:word16], Mem3688[sp_1049 + 2<i32>:word32], Mem3688[sp_1049 + 6<i32>:word16], Mem3688[sp_1049 + 32<i32>:word32], Mem3688[sp_1049 + 36<i32>:word32], Mem3688[sp_1049 + 40<i32>:word32], Mem3688[sp_1049 + 44<i32>:word32], Mem3688[sp_1049 + 48<i32>:word32], Mem3688[sp_1049 + 52<i32>:word32], Mem3688[sp_1049 + 56<i32>:word32], Mem3688[sp_1049 + 60<i32>:word32], Mem3688[sp_1049 + 80<i32>:word32], Mem3688[sp_1049 + 84<i32>:word32], Mem3688[sp_1049 + 238<i32>:word32], Mem3688[sp_1049 + 508<i32>:word16], Mem3688[sp_1049 + 512<i32>:word16], Mem3688[sp_1049 + 65538<i32>:word32], out r0_3692, out r1_3693, out r2_3698, out r3_3699, out r4_3700, out r5_3701, out r6_3702, out r8_3704, out r9_3705, out r12_3696, out r13_3697, out ra_3706)
	branch r0_3692 == 0<16> l00006420
l00006420:
	word32 r9_r8_3715 = Mem3688[r11_r10_6870 + 0x38<32>:word32]
	word32 r1_r0_3719 = CONVERT(Mem3688[r9_r8_3715 + 0x50<32>:word16], word16, word32)
	Mem3725[r9_r8_3715 + 0x68<32>:word32] = r1_r0_3719 * 2<32>
	word32 r6_r5_3729 = CONVERT(Mem3725[r9_r8_3715 + 0x84<32>:word16], word16, word32)
	word32 r1_r0_3736 = r1_r0_3719 * 2<32> + r6_r5_3729 * 2<32>
	Mem3740[r1_r0_3736:word16] = r0_3692
	fn0000DB44(r1_r0_3719 * 2<32>, r6_r5_3729 * 2<32>, r0_3692, r13_3697)
	word32 r1_r0_3766 = r1_r0_3736 * 0xC<32> + 0xE5A4<32>
	word16 r9_3716 = SLICE(r9_r8_3715, word16, 16)
	word16 r8_3717 = SLICE(r9_r8_3715, word16, 0)
	Mem3771[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0xC0<32>:word16] = Mem3740[r1_r0_3766 + 2<32>:word16]
	Mem3774[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0xCC<32>:word16] = Mem3771[r1_r0_3766:word16]
	Mem3777[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0xD0<32>:word16] = Mem3774[r1_r0_3766 + 4<32>:word16]
	Mem3780[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0xBC<32>:word16] = Mem3777[r1_r0_3766 + 6<32>:word16]
	Mem3782[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0xAC<32>:word16] = r0_3692
	Mem3784[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0x98<32>:word32] = r12_3696
	Mem3786[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0xB4<32>:word16] = r0_3692
	Mem3788[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0x240C<32>:word16] = r0_3692
	Mem3790[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0x5C<32>:word16] = 2<16>
	Mem3792[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0x50<32>:word16] = 2<16>
	Mem3794[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0xA8<32>:word16] = r0_3692
	Mem3796[SEQ(r9_3716 + 0xFFFF<16>, r8_3717) + 0x80<32>:word16] = r0_3692
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_3692
	r7Out = r7
	r12Out = r12_3696
	r13Out = dwLoc04_4766
	raOut = ra_3706
	return SEQ(SLICE(r1_r0_3766, word16, 16), SLICE(r6_r5_3729 * 2<32>, word16, 16))
l00006418:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_3692
	r7Out = r7
	r12Out = r12_3696
	r13Out = dwLoc04_4766
	raOut = ra_3706
	return SEQ(r1_3693, r6_3702)
l0000601E:
	r3_r2_7010 = SEQ(Mem1737[r9_r8_1799 + 0xC4<32>:word16], r2_1744) (alias)
l00006022:
	word16 r3_3813 = SLICE(r3_r2_7010, word16, 16)
	r9_r8_6792 = r9_r8_1799 (alias)
	branch r3_3813 == r7_1585 l00006088
l00006026:
	r9_r8_6795 = r9_r8_1799 (alias)
	r3_r2_6799 = r3_r2_7010 (alias)
	branch r3_3813 != 0<16> l0000605C
l0000602A:
	r6 = Mem3822[r9_r8_1799 + 0x2408<32>:word16]
	r9_r8_6795 = r9_r8_1799 (alias)
	r3_r2_6799 = r3_r2_7010 (alias)
	branch r6 == 0<16> l0000605C
l00006032:
	word32 r3_r2_7054
	word16 r2_3829 = Mem3822[r9_r8_1799 + 0x84<32>:word16]
	word32 r11_r10_3845 = r11_r10_6790 * 2<32>
	branch r6 == 1<16> l000060C2
l000060C2:
	word16 r6_3852 = Mem3822[r9_r8_1799 + 0x50<32>:word16]
	r3_r2_6807 = ra
l000060D6:
	word32 r3_r2_6807
	word16 v91_3882 = Mem3881[r3_r2_7156 + 0xFFFE<32>:word16]
	word16 r2_3875 = SLICE(r3_r2_7156, word16, 0)
	word16 r3_3878 = SLICE(r3_r2_7156 + 0xFFFE<32>, word16, 16)
	r13 = SEQ(SLICE(r13, word16, 16), v91_3882)
	branch r6_3852 >u v91_3882 l0000611C
l0000611C:
	Mem3889[r3_r2_7156 + 0xFFFE<32>:word16] = 0<16>
	r3_r2_6807 = SEQ(r3_3878, r2_3875 + 0xFFFE<16>) (alias)
	r3_r2_7157 = r3_r2_6807
	branch ra != r3_r2_7156 + 0xFFFE<32> l000060D6
l00006122:
l000060E0:
	Mem3897[r3_r2_7156 + 0xFFFE<32>:word16] = v91_3882
	r6_3852 = r6_3852 - v91_3882
	r3_r2_6807 = SEQ(r3_3878, r2_3875 + 0xFFFE<16>) (alias)
	r3_r2_7156 = r3_r2_6807
	branch ra != r3_r2_7156 + 0xFFFE<32> l000060D6
l000060EA:
	word16 r6_3918 = r6_3852 + 0xFFFF<16>
	word16 r5_3931 = SLICE(0x20000<32> - ra, word16, 16)
	r3_r2_6810 = ra
l00006104:
	word32 r3_r2_6810
	word16 v94_3942 = Mem3941[r3_r2_7154 + 0xFFFE<32>:word16]
	word16 r2_3935 = SLICE(r3_r2_7154, word16, 0)
	word16 r3_3938 = SLICE(r3_r2_7154 + 0xFFFE<32>, word16, 16)
	r13 = SEQ(SLICE(r13, word16, 16), v94_3942)
	branch v94_3942 <u r6_3918 l00006124
l00006124:
	Mem3949[r3_r2_7154 + 0xFFFE<32>:word16] = 0<16>
	r3_r2_6810 = SEQ(r3_3938, r2_3935 + 0xFFFE<16>) (alias)
	r3_r2_7155 = r3_r2_6810
	branch r3_r2_7154 + 0xFFFE<32> != ra l00006104
l0000612A:
	r6_r5_6813 = SEQ(r6_3918, r5_3931) (alias)
	r3_r2_7054 = SEQ(r3_3938, r2_3935 + 0xFFFE<16>) (alias)
l0000610E:
	Mem3959[r3_r2_7154 + 0xFFFE<32>:word16] = v94_3942
	r6_3918 = r6_3918 - v94_3942
	r13 = SEQ(SLICE(r13, word16, 16), v94_3942)
	r3_r2_6810 = SEQ(r3_3938, r2_3935 + 0xFFFE<16>) (alias)
	r3_r2_7154 = r3_r2_6810
	branch r3_r2_7154 + 0xFFFE<32> != ra l00006104
l0000611A:
	r6_r5_6813 = SEQ(r6_3918, r5_3931) (alias)
	r3_r2_7054 = SEQ(r3_3938, r2_3935 + 0xFFFE<16>) (alias)
l00006048:
	word32 r5_r4_3963 = r11_r10_6790 + r11_r10_3845
	Mem3967[r5_r4_3963:word16] = r3_3813
	r6_r5_6813 = SEQ(r6, SLICE(r5_r4_3963, word16, 16)) (alias)
	r3_r2_7054 = SEQ(r3_3813, r2_3829 + 0xFFFF<16>) (alias)
l0000604E:
	r4_3973 = 0<16>
	r3_r2_537 = r3_r2_7054 (alias)
l00006052:
	fn0000DB44(r3_r2_537, r6_r5_6813, r4_3973, r13)
	Mem3999[r9_r8_1799 + 0x1204<32>:word16] = 0<16>
	r6 = SLICE(r6_r5_6813, word16, 16) (alias)
	r9_r8_6795 = r9_r8_1799 (alias)
	r3_r2_6799 = r3_r2_537 (alias)
l0000605C:
	Mem4009[r9_r8_6795 + 0xC4<32>:word16] = r7_1585
	word32 r1_r0_4031 = r3_r2_6799 * 0xC<32> + 0xE5A4<32>
	Mem4037[r9_r8_6795 + 0xC0<32>:word16] = Mem4009[r1_r0_4031 + 2<32>:word16]
	Mem4040[r9_r8_6795 + 0xCC<32>:word16] = Mem4037[r1_r0_4031:word16]
	Mem4043[r9_r8_6795 + 0xD0<32>:word16] = Mem4040[r1_r0_4031 + 4<32>:word16]
	Mem4046[r9_r8_6795 + 0xBC<32>:word16] = Mem4043[r1_r0_4031 + 6<32>:word16]
	r1_1625 = SLICE(r1_r0_4031, word16, 16) (alias)
	r9_r8_6792 = r9_r8_6795 (alias)
l00006088:
	Mem4059[r9_r8_6792 + 0xC8<32>:word16] = SLICE(r12, word16, 0)
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0<16>
	r7Out = r7
	r12Out = r12
	r13Out = dwLoc04_4766
	raOut = ra
	return SEQ(r1_1625, r6)
l00005538:
	r7_r6_4068 = Mem1600[r13 + 0x14<32>:word32]
	r1_r0_4069 = Mem1600[r13 + 0x38<32>:word32]
l0000553E:
	r10 = SLICE(r11_r10_6781, word16, 0) (alias)
	r11 = SLICE(r11_r10_6781, word16, 16) (alias)
	word16 r4_4096 = SLICE(r5_r4_6778, word16, 0)
	word16 r5_4094 = SLICE(r5_r4_6778, word16, 16)
	word16 r6_4075 = SLICE(r7_r6_4068, word16, 0)
	word16 r7_4073 = SLICE(r7_r6_4068, word16, 16)
	word32 r3_r2_4072 = Mem4071[r13 + 0xC<32>:word32]
	r1_r0_1555 = r1_r0_4069 (alias)
	r7_r6_1462 = r7_r6_4068 (alias)
	branch r7_r6_4068 != r3_r2_4072 l00005514
l00005544:
	word32 r12_4124
	branch CONVERT(Mem4071[r1_r0_4069 + 0x44<32>:word16] != 0<16>, bool, int16) == 0<16> l0000556A
l00005550:
	branch CONVERT(r7_r6_4068 >u r5_r4_6778, bool, int16) == 0<16> l0000556A
l00005558:
	word32 r1_r0_4105 = Mem4071[r13 + 8<32>:word32]
	word16 r4_7104
	word32 ra_7105
	word32 r6_r5_7101
	word32 r7_r6_7102
	word32 r9_r8_7103
	word32 r11_r10_7100
	word32 r3_r2_7061
	Mem4141[r12_4124 + 0x60<32>:word32] = fn0000CAF8(r1_r0_4105, r11_r10_6781, SEQ(r5_4094, r4_4096 - r6_4075) + r1_r0_4105, r6_4075, r7_4073, r13, ra, Mem4071[sp_1049:word16], Mem4071[sp_1049 + 2<i32>:word32], Mem4071[sp_1049 + 6<i32>:word16], Mem4071[sp_1049 + 8<i32>:word32], Mem4071[sp_1049 + 12<i32>:word16], Mem4071[sp_1049 + 38<i32>:word32], Mem4071[sp_1049 + 42<i32>:word32], Mem4071[sp_1049 + 46<i32>:word32], Mem4071[sp_1049 + 50<i32>:word32], Mem4071[sp_1049 + 54<i32>:word32], Mem4071[sp_1049 + 58<i32>:word32], Mem4071[sp_1049 + 62<i32>:word32], Mem4071[sp_1049 + 66<i32>:word32], Mem4071[sp_1049 + 86<i32>:word32], Mem4071[sp_1049 + 90<i32>:word32], Mem4071[sp_1049 + 244<i32>:word32], Mem4071[sp_1049 + 514<i32>:word16], Mem4071[sp_1049 + 518<i32>:word16], out r11_r10_7100, out r3_r2_7061, out r6_r5_7101, out r7_r6_7102, out r9_r8_7103, out r4_7104, out r12_4124, out r13, out ra_7105)
	r11 = <invalid>
	r10 = <invalid>
	r3_r2_4072 = r3_r2_7061 (alias)
	r12 = r12_4124
l0000556A:
	r3_r2_6727 = r3_r2_4072 (alias)
l0000556E:
	word16 r11_4156
	word16 r4_4157
	word16 r5_4158
	word16 r6_7093
	word16 r7_7094
	r1_1071 = fn0000B09C(r3_r2_6727, r11, out r4_4157, out r5_4158, out r6_7093, out r7_7094, out r11_4156, out ra)
	r9_r8_6762 = r3_r2_6727 (alias)
	r11_r10_7079 = SEQ(r11_4156, r10) (alias)
l00004EB6:
	word16 r9_4180 = SLICE(r9_r8_6896, word16, 16)
	branch wArg00 != 4<16> l00006182
l00004EBA_thunk_fn00006182:
	word16 r1_4201
	word16 r10_4202
	word16 r2_4203
	word16 r3_4204
	word16 r4_4205
	word16 r5_4206
	word16 r6_4207
	word16 r7_4208
	word16 r8_4209
	word16 r9_4210
	word32 ra_4211
	word16 r11_4212
	word16 r0_4200 = fn00006182(r7_r6_6893, r9_r8_6896, r1_1071, r11_1058, ra, out r1_4201, out r2_4203, out r3_4204, out r4_4205, out r5_4206, out r6_4207, out r7_4208, out r8_4209, out r9_4210, out r10_4202, out r11_4212, out ra_4211)
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r0_4200
	r7Out = r7_4208
	r12Out = r12
	r13Out = r13
	raOut = ra_4211
	return SEQ(r1_4201, r6_4207)
l00004EBE:
	word16 r3_4220 = Mem4169[r13 + 0x18<32>:word16]
	branch r3_4220 >= 0<16> l00006B6E
l00006B6E:
l00004EC6:
	word32 r7_r6_4238 = Mem4169[r13 + 8<32>:word32]
	word32 r1_r0_4231 = Mem4169[r13 + 0x14<32>:word32]
	word16 r8_4229 = Mem4169[r12 + 0x60<32>:word16]
	word16 r2_4230 = Mem4169[r12 + 0x64<32>:word16]
	Mem4247[r13 + 0x14<32>:word32] = r1_r0_4231 + 1<32>
	word16 r7_4239 = SLICE(r7_r6_4238, word16, 16)
	word16 r6_4240 = SLICE(r7_r6_4238, word16, 0)
	word32 r1_r0_4241 = r1_r0_4231 + r7_r6_4238
	branch r3_4220 == 2<16> l00006D18
l00006D18:
l00006C5A:
	branch Mem4247[SEQ(r9_4180, r8_4229) + 0x48<32>:word32] == 0<32> l00006CFC
l00006CFC:
	Mem4262[SEQ(r9_4180, r8_4229) + 0x48<32>:word32] = 0x5D76<32>
l00006C62:
	word32 r11_r10_6760
	word32 r9_r8_6761
	call r1_r0_4241 (retsize: 0;)
		uses: Mem:Mem4277,r10:r10_4188,r11:r11_4193,r12:r12_4228,r13:r13_4218,r4:1<16>,r5:0x1BA4<16>,r6:r6_4240,r7:r7_4239,r8:r8_4229,r9:r9_4180,ra:ra_4197,Stack +0000:wArg00,Stack +10000:dwArg10000,Stack +10014:dwArg10014,Stack +10018:dwArg10018,Stack +1001C:dwArg1001C,Stack +10020:dwArg10020,Stack +10024:dwArg10024,Stack +10028:dwArg10028,Stack +1002C:dwArg1002C,Stack +10030:dwArg10030,Stack +10034:dwArg10034,Stack +10044:dwArg10044,Stack +10048:dwArg10048,Stack +1004C:dwArg1004C,Stack +100E2:dwArg100E2,Stack +101F0:wArg101F0,Stack +101F4:wArg101F4,Stack +1FFD8:wArg1FFD8,Stack +1FFDA:dwArg1FFDA,Stack +1FFDE:wArg1FFDE,Stack +1FFE6:dwArg1FFE6,Stack +1FFEA:dwArg1FFEA,Stack +1FFFC:dwArg1FFFC,Stack +20016:dwArg20016,Stack +2001E:dwArg2001E,Stack +20026:dwArg20026,Stack +20036:dwArg20036,Stack +2FF7E:wArg2FF7E,Stack +2FFC2:wArg2FFC2,Stack +2FFE6:dwArg2FFE6,Stack +30010:dwArg30010,Stack +3FF68:wArg3FF68,Stack +FFF0:dwArgFFF0,Stack +FFF4:wArgFFF4,Stack +FFF6:dwArgFFF6,Stack +FFFA:wArgFFFA,Stack +FFFC:dwArgFFFC
		defs: r12:r12_4281,r13:r13_4279,r4:r4_4282,r5:r5_4292,r6:r6_4290,r7:r7_4280,ra:ra_4289,Sequence r11:r10:r11_r10_6760,Sequence r9:r8:r9_r8_6761
	word16 r1_4297 = SLICE(r11_r10_6760, word16, 16)
	branch r11_r10_6760 == 0<32> l00006D2E
l00006D2E:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFC<16>
	r7Out = r7
	r12Out = r12
	r13Out = r13
	raOut = r13
	return SEQ(r1_4297, r6)
l00006C70:
	Mem4308[r9_r8_6761 + 0x38<32>:word32] = r11_r10_6760
	Mem4310[r11_r10_6760:word32] = r9_r8_6761
	r11_r10_6733 = r11_r10_6760 (alias)
	r9_r8 = r9_r8_6761 (alias)
l00006C76:
	Mem4317[r11_r10_6733 + 0x48<32>:word32] = 0<32>
	Mem4320[r11_r10_6733 + 4<32>:word16] = 0x3F34<16>
	r1_r0_4324 = Mem4320[r9_r8 + 0x48<32>:word32]
l00006C86:
	word16 r11_4391 = SLICE(r11_r10_6733, word16, 16)
	branch Mem4328[r9_r8 + 0x40<32>:word32] == 0<32> l00006D1E
l00006C8E:
	branch r1_r0_4324 == 0<32> l00006D1E
l00006C92:
	word32 r3_r2_6754
	word16 r7_4350
	word16 r2_4345
	branch r7_4280 > 0<16> l00006CE4
l00006CE4:
	r2_4345 = 0<16>
	r7_4350 = 0xFFF8<16>
	branch false l00006CB2
l00006CFA:
	r3_r2_6754 = 0<i32> (alias)
l00006C96:
	r2_4345 = r7_4280 >> 0xC<16>
	r5_4292 = r5_4292 + 5<16>
	branch r7_4280 < 0x2F<16> l00006CA4
l00006CA2:
l00006CA4:
	r7_4350 = r7_4280 + 0xFFF8<16>
	r3_r2_6754 = CONVERT(r2_4345, word16, uint32) (alias)
	branch true l00006CBA
l00006CB2:
	word16 r3_4382 = CONVERT(r7_4350 != 0<16>, bool, int16)
	r3_r2_6754 = SEQ(r3_4382, r2_4345) (alias)
	branch r3_4382 != 0<16> l00006D1E
l00006D1E:
	r7_4385 = 0xFFFE<16>
	r5_r4_6770 = SEQ(r5_4292, r4_4282) (alias)
l00006CBA:
	Mem4398[r11_r10_6733 + 8<32>:word16] = SLICE(r3_r2_6754, word16, 0)
	Mem4401[r11_r10_6733 + 0x38<32>:word16] = r7_4350
	r9_r8 = r3_r2_6754 (alias)
	word16 r11_4410
	r5_r4 = fn00006A40(r3_r2_6754, r11_4391, out r0_4406, out r1_4407, out r6, out r11_4410) (alias)
l00006CC6:
	r7_4385 = r0_4406
	branch r0_4406 == 0<16> l00006CDE
l00006CCC:
	r1_r0_4324 = Mem4426[r9_r8 + 0x48<32>:word32]
	r5_r4_6770 = r5_r4 (alias)
l00006CD0:
	word16 r4_4449 = SLICE(r5_r4_6770, word16, 0)
	word16 r5_4442 = SLICE(r5_r4_6770, word16, 16)
	word32 r9_r8_6774
	call r1_r0_4324 (retsize: 0;)
		uses: Mem:Mem4437,r10:r4_4449,r11:r5_4442,r12:r12_4480,r13:r13_4471,r4:r4_4449,r5:r5_4442,r6:r6_4489,r7:r7_4479,r8:SLICE(r9_r8_6769, word16, 0),r9:SLICE(r9_r8_6769, word16, 16),ra:ra_4497
		defs: r12:r12_4514,r13:r13_4512,r6:r6_4523,r7:r7_4513,Sequence r9:r8:r9_r8_6774
	Mem4532[r9_r8_6774 + 0x38<32>:word32] = 0<32>
	r1_4407 = 0<16> (alias)
l00006CDE:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = r7_4385
	r7Out = r7
	r12Out = r12
	r13Out = r13
	raOut = r13
	return SEQ(r1_4407, r6)
l00004EE0:
	Mem4544[r1_r0_4241:byte] = SLICE(r2_4230 >>u 8<8>, byte, 0)
	word32 r1_r0_4545 = Mem4544[r13 + 8<32>:word32]
	word32 r5_r4_4546 = Mem4544[r13 + 0x14<32>:word32]
	Mem4555[r13 + 0x14<32>:word32] = r5_r4_4546 + 1<32>
	Mem4562[r1_r0_4545 + r5_r4_4546:byte] = SLICE(r2_4230, byte, 0)
	word16 r2_4563 = Mem4562[r12 + 0x60<32>:word16]
	word32 r1_r0_4564 = Mem4562[r13 + 8<32>:word32]
	word32 r5_r4_4565 = Mem4562[r13 + 0x14<32>:word32]
	Mem4574[r13 + 0x14<32>:word32] = r5_r4_4565 + 1<32>
	Mem4583[r1_r0_4564 + r5_r4_4565:byte] = SLICE(r2_4563 >>u 8<8>, byte, 0)
	word32 r1_r0_4584 = Mem4583[r13 + 8<32>:word32]
	word32 r5_r4_4585 = Mem4583[r13 + 0x14<32>:word32]
	Mem4594[r13 + 0x14<32>:word32] = r5_r4_4585 + 1<32>
	Mem4602[r1_r0_4584 + r5_r4_4585:byte] = SLICE(r2_4563, byte, 0)
	word16 r11_4609
	word16 r4_4610
	word16 r5_4611
	word16 r6_4612
	word32 ra_4614
	word16 r7_7099
	fn0000B09C(SEQ(r2_4563 >>u 8<8>, r2_4563), r11_1058, out r4_4610, out r5_4611, out r6_4612, out r7_7099, out r11_4609, out ra_4614)
	word32 r3_r2_4604 = SEQ(r2_4563 >>u 8<8>, r2_4563)
	word16 r0_4622 = Mem4602[r3_r2_4604 + 0x14<32>:word16]
	word16 r7_4623 = Mem4602[r12 + 0x10<32>:word16]
	branch r0_4622 >=u r7_4623 l00004F2C
l00004F2A:
	r7_4623 = r0_4622
l00004F2C:
	branch r7_4623 == 0<16> l00004F66
l00004F30:
	fn0000DB24(Mem4602[r12 + 0xC<32>:word32], Mem4602[r3_r2_4604 + 0x10<32>:word32], r13, out r13)
	word32 r11_r10_4630 = CONVERT(r7_4623, word16, word32)
	Mem4659[r12 + 0xC<32>:word32] = Mem4640[r12 + 0xC<32>:word32] + r11_r10_4630
	Mem4666[r3_r2_4604 + 0x10<32>:word32] = Mem4659[r3_r2_4604 + 0x10<32>:word32] + r11_r10_4630
	Mem4673[r12 + 0x14<32>:word32] = Mem4666[r12 + 0x14<32>:word32] + r11_r10_4630
	Mem4676[r12 + 0x10<32>:word16] = Mem4673[r12 + 0x10<32>:word16]
	word32 r1_r0_4677 = Mem4676[r3_r2_4604 + 0x14<32>:word32]
	Mem4681[r3_r2_4604 + 0x14<32>:word32] = r1_r0_4677
	dwLoc04_4766 = SEQ(SLICE(r11_r10_4630, word16, 0), wLoc04_6473) (alias)
	branch r1_r0_4677 != 0<32> l00004F66
l00004F62:
	Mem4689[r3_r2_4604 + 0x10<32>:word32] = Mem4681[r3_r2_4604 + 8<32>:word32]
l00004F66:
	branch Mem4691[r13 + 0x18<32>:word16] >= 0<16> l00004F72
l00004F6C:
	Mem4698[r13 + 0x18<32>:word16] = 0<16>
l00004F72:
	word16 r0_4701 = Mem4700[r13 + 0x14<32>:word16]
	word16 r1_4703 = Mem4700[r13 + 0x16<32>:word16] | r0_4701
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = CONVERT(r0_4701 == 0<16>, bool, int16)
	r7Out = r7
	r12Out = r12
	r13Out = dwLoc04_4766
	raOut = ra_4614
	return SEQ(r1_4703, r6_4612)
l00004D0E:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r5_r4Out = <invalid>
	r9_r8Out = <invalid>
	r0Out = 0xFFFE<16>
	r7Out = wArgFFFA
	r12Out = r12
	r13Out = dwArgFFFC
	raOut = ra
	return SEQ(r1_178, r6)
fn00004CD4_exit:


word32 fn00006134(word32 r9_r8, word16 r11, ptr32 & r9_r8Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
//      fn00004CD4
// MayUse:  r11:[0..15] Sequence r9:r8:[0..31]
// LiveOut: r1 r11:r10 r2 r3 r4 r5 r6 r7 r9:r8 ra
// Trashed: LNZ r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved: CF
fn00006134_entry:
	word32 ra
	word16 r7
	word16 r1
	word16 r10
	word16 r4
	word16 r5
	word16 r6
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
l00006134:
	branch r9_r8 == 0<32> l0000621C
l0000613E:
	word32 r1_r0_17 = Mem8[r9_r8 + 0x40<32>:word32]
	r1 = SLICE(r1_r0_17, word16, 16) (alias)
	branch r1_r0_17 == 0<32> l0000621C
l00006146:
	word32 r7_r6_22 = Mem8[r9_r8 + 0x48<32>:word32]
	r6 = SLICE(r7_r6_22, word16, 0) (alias)
	branch r7_r6_22 == 0<32> l0000621C
l0000614E:
	word32 ra_27 = Mem8[r9_r8 + 0x38<32>:word32]
	branch ra_27 == 0<32> l0000621C
l0000621C:
	r9_r8Out = <invalid>
	r1Out = r1
	r2Out = r8
	r3Out = r9
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	raOut = ra
	return SEQ(r11, r10)
l00006156:
	word32 r3_r2_37 = Mem8[ra_27:word32]
	word16 r3_39 = SLICE(r3_r2_37, word16, 16)
	word16 r2_40 = SLICE(r3_r2_37, word16, 0)
	branch r3_r2_37 == r9_r8 l00006164
l00006164:
	word16 r1_50 = CONVERT(Mem8[ra_27 + 4<32>:word16] != 0x45<16>, bool, int16)
l00006180_thunk_fn00006182:
	word16 r1_66
	word16 r10_67
	word16 r2_68
	word16 r3_69
	word16 r4_70
	word16 r5_71
	word16 r6_72
	word16 r7_73
	word16 r8_74
	word16 r9_75
	word32 ra_76
	word16 r11_77
	fn00006182(r7_r6_22, r9_r8, r1_50, r11, ra_27, out r1_66, out r2_68, out r3_69, out r4_70, out r5_71, out r6_72, out r7_73, out r8_74, out r9_75, out r10_67, out r11_77, out ra_76)
	r9_r8Out = <invalid>
	r1Out = r1_66
	r2Out = r2_68
	r3Out = r3_69
	r4Out = r4_70
	r5Out = r5_71
	r6Out = r6_72
	r7Out = r7_73
	raOut = ra_76
	return SEQ(r11_77, r10_67)
l00006160_in_fn00006134:
	r9_r8Out = <invalid>
	r1Out = r1
	r2Out = r2_40
	r3Out = r3_39
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	raOut = ra
	return SEQ(r11, r10)
fn00006134_exit:


word16 fn00006182(word32 r7_r6, word32 r9_r8, word16 r1, word16 r11, word32 ra, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004CD4
//      fn00006134
// MayUse:  r1:[0..7] r11:[0..15] ra:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00006182_entry:
l00006182:
	branch SLICE(r1, byte, 0) == 0<8> l000061AA
l00006198:
	r11 = r11 & 0xFFEF<16>
	branch true l00006160
l000061A8_thunk_fn000061C2:
	word16 r1_43
	word16 r10_44
	word16 r2_45
	word16 r3_46
	word16 r4_47
	word16 r5_48
	word16 r6_49
	word16 r7_50
	word16 r8_51
	word16 r9_52
	word32 ra_53
	word16 r0_42 = fn000061C2(r7_r6, r9_r8, ra, out r1_43, out r2_45, out r3_46, out r4_47, out r5_48, out r6_49, out r7_50, out r8_51, out r9_52, out r10_44, out ra_53)
	r1Out = r1_43
	r2Out = r2_45
	r3Out = r3_46
	r4Out = r4_47
	r5Out = r5_48
	r6Out = r6_49
	r7Out = r7_50
	r8Out = r8_51
	r9Out = r9_52
	r10Out = r10_44
	r11Out = r11 & 0xFFEF<16>
	raOut = ra_53
	return r0_42
l000061AA:
l000061B0_thunk_fn000061B2:
	word16 r1_73
	word16 r10_74
	word16 r2_75
	word16 r3_76
	word16 r4_77
	word16 r5_78
	word16 r6_79
	word16 r7_80
	word16 r8_81
	word16 r9_82
	word32 ra_83
	word16 r0_72 = fn000061B2(r7_r6, r9_r8, ra, out r1_73, out r2_75, out r3_76, out r4_77, out r5_78, out r6_79, out r7_80, out r8_81, out r9_82, out r10_74, out ra_83)
	r1Out = r1_73
	r2Out = r2_75
	r3Out = r3_76
	r4Out = r4_77
	r5Out = r5_78
	r6Out = r6_79
	r7Out = r7_80
	r8Out = r8_81
	r9Out = r9_82
	r10Out = r10_74
	r11Out = r11
	raOut = ra_83
	return r0_72
fn00006182_exit:


word16 fn000061B2(word32 r7_r6, word32 r9_r8, word32 ra, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006182
//      fn00009C04
// MayUse:  ra:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: LNZ r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn000061B2_entry:
	bool Z
l000061B2:
	branch Z l000061B2_thunk_fn000061C2
l000061B2_thunk_fn000061C2:
	word16 r1_55
	word16 r10_56
	word16 r2_57
	word16 r3_58
	word16 r4_59
	word16 r5_60
	word16 r6_61
	word16 r7_62
	word16 r8_63
	word16 r9_64
	word32 ra_65
	word16 r0_54 = fn000061C2(r7_r6, r9_r8, ra, out r1_55, out r2_57, out r3_58, out r4_59, out r5_60, out r6_61, out r7_62, out r8_63, out r9_64, out r10_56, out ra_65)
	r1Out = r1_55
	r2Out = r2_57
	r3Out = r3_58
	r4Out = r4_59
	r5Out = r5_60
	r6Out = r6_61
	r7Out = r7_62
	r8Out = r8_63
	r9Out = r9_64
	r10Out = r10_56
	raOut = ra_65
	return r0_54
l000061B2_thunk_fn000061B4:
	word16 r1_72
	word16 r10_73
	word16 r2_74
	word16 r3_75
	word16 r4_76
	word16 r5_77
	word16 r6_78
	word16 r7_79
	word16 r8_80
	word16 r9_81
	word32 ra_82
	word16 r0_71 = fn000061B4(r7_r6, r9_r8, out r1_72, out r2_74, out r3_75, out r4_76, out r5_77, out r6_78, out r7_79, out r8_80, out r9_81, out r10_73, out ra_82)
	r1Out = r1_72
	r2Out = r2_74
	r3Out = r3_75
	r4Out = r4_76
	r5Out = r5_77
	r6Out = r6_78
	r7Out = r7_79
	r8Out = r8_80
	r9Out = r9_81
	r10Out = r10_73
	raOut = ra_82
	return r0_71
fn000061B2_exit:


word16 fn000061B4(word32 r7_r6, word32 r9_r8, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006182
//      fn000061B2
// MayUse:  Sequence r7:r6:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: LNZ r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn000061B4_entry:
	word16 r7 = SLICE(r7_r6, word16, 16)
	word16 r6 = SLICE(r7_r6, word16, 0)
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
l000061B4:
	call r7_r6 (retsize: 0;)
		uses: Mem:Mem0,r6:r6,r7:r7,r8:r8,r9:r9
	word32 ra_14 = Mem0[r9_r8 + 0x38<32>:word32]
	word32 r7_r6_16 = Mem0[r9_r8 + 0x48<32>:word32]
l000061BE_thunk_fn000061C2:
	word16 r1_23
	word16 r10_24
	word16 r2_25
	word16 r3_26
	word16 r4_27
	word16 r5_28
	word16 r6_29
	word16 r7_30
	word16 r8_31
	word16 r9_32
	word32 ra_33
	word16 r0_22 = fn000061C2(r7_r6_16, r9_r8, ra_14, out r1_23, out r2_25, out r3_26, out r4_27, out r5_28, out r6_29, out r7_30, out r8_31, out r9_32, out r10_24, out ra_33)
	r1Out = r1_23
	r2Out = r2_25
	r3Out = r3_26
	r4Out = r4_27
	r5Out = r5_28
	r6Out = r6_29
	r7Out = r7_30
	r8Out = r8_31
	r9Out = r9_32
	r10Out = r10_24
	raOut = ra_33
	return r0_22
fn000061B4_exit:


word16 fn000061C2(word32 r7_r6, word32 r9_r8, word32 ra, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006182
//      fn000061B2
// MayUse:  ra:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: LNZ r0 r1 r10 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn000061C2_entry:
	word16 r7 = SLICE(r7_r6, word16, 16)
	word16 r6 = SLICE(r7_r6, word16, 0)
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
l000061C2:
	branch Mem0[ra + 0x78<32>:word32] == 0<32> l000061D8
l000061CA:
	call r7_r6 (retsize: 0;)
		uses: Mem:Mem0,r6:r6,r7:r7,r8:r8,r9:r9,ra:ra
	ra = Mem0[r9_r8 + 0x38<32>:word32]
	r7_r6 = Mem0[r9_r8 + 0x48<32>:word32]
l000061D8:
	word16 r6_39 = SLICE(r7_r6, word16, 0)
	word16 r7_37 = SLICE(r7_r6, word16, 16)
	branch Mem0[ra + 0x70<32>:word32] == 0<32> l000061EE
l000061E0:
	word32 r9_r8_178
	call r7_r6 (retsize: 0;)
		uses: Mem:Mem0,r6:r6_39,r7:r7_37,r8:r8,r9:r9,ra:ra_30
		defs: Sequence r9:r8:r9_r8_178
	r9 = SLICE(r9_r8_178, word16, 16) (alias)
	r8 = SLICE(r9_r8_178, word16, 0) (alias)
	ra = Mem0[r9_r8_178 + 0x38<32>:word32]
	r7_r6 = Mem0[r9_r8_178 + 0x48<32>:word32]
l000061EE:
	word16 r6_73 = SLICE(r7_r6, word16, 0)
	word16 r7_71 = SLICE(r7_r6, word16, 16)
	word32 r5_r4_181 = Mem0[ra + 0x60<32>:word32]
	branch r5_r4_181 == 0<32> l00006204
l000061F6:
	word32 r9_r8_180
	word32 r5_r4_185
	call r7_r6 (retsize: 0;)
		uses: Mem:Mem0,r6:r6_73,r7:r7_71,r8:r8_77,r9:r9_76,ra:ra_64
		defs: Sequence r5:r4:r5_r4_185,Sequence r9:r8:r9_r8_180
	r9 = SLICE(r9_r8_180, word16, 16) (alias)
	r8 = SLICE(r9_r8_180, word16, 0) (alias)
	r7_r6 = Mem0[r9_r8_180 + 0x48<32>:word32]
	r5_r4_181 = r5_r4_185 (alias)
l00006204:
	word16 r10_113
	word32 r9_r8_184
	call r7_r6 (retsize: 0;)
		uses: Mem:Mem0,r6:SLICE(r7_r6_183, word16, 0),r7:SLICE(r7_r6_183, word16, 16),r8:r8_108,r9:r9_107,ra:r5_r4_182
		defs: r10:r10_113,Sequence r9:r8:r9_r8_184
	Mem128[r9_r8_184 + 0x38<32>:word32] = 0<32>
	branch r10_113 != 0x71<16> l00006160
l00006160:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	raOut = <invalid>
	return 0<16>
l00006214:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	raOut = <invalid>
	return 0xFFFD<16>
fn000061C2_exit:


word32 fn00006A40(word32 r3_r2, word16 r11, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r6Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004CD4
//      fn0000A416
// MayUse:  r11:[0..15] Sequence r3:r2:[0..31]
// LiveOut: r0 r1 r11 r5:r4 r6
// Trashed: CFLNZ r0 r1 r11 r4 r5 r6
// Preserved: r7 ra sp
fn00006A40_entry:
	word16 r1
	word16 r4
	word16 r5
	word16 r6
l00006A40:
	branch r3_r2 == 0<32> l00006AE0
l00006A4A:
	word32 r1_r0_16 = Mem8[r3_r2 + 0x40<32>:word32]
	r1 = SLICE(r1_r0_16, word16, 16) (alias)
	branch r1_r0_16 == 0<32> l00006AE0
l00006A52:
	word32 r1_r0_22 = Mem8[r3_r2 + 0x48<32>:word32]
	r1 = SLICE(r1_r0_22, word16, 16) (alias)
	branch r1_r0_22 == 0<32> l00006AE0
l00006A5A:
	word32 r5_r4_28 = Mem8[r3_r2 + 0x38<32>:word32]
	r5 = SLICE(r5_r4_28, word16, 16) (alias)
	r4 = SLICE(r5_r4_28, word16, 0) (alias)
	branch r5_r4_28 == 0<32> l00006AE0
l00006AE0:
	r0Out = 0xFFFE<16>
	r1Out = r1
	r6Out = r6
	r11Out = r11
	return SEQ(r5, r4)
l00006A62:
	word32 r7_r6_40 = Mem8[r5_r4_28:word32]
	word16 r6_43 = SLICE(r7_r6_40, word16, 0)
	branch r7_r6_40 == r3_r2 l00006A70
l00006A70:
	r1 = Mem8[r5_r4_28 + 4<32>:word16]
	r11 = r11 + 0xC0CC<16>
	branch r1 <u 0x1F<16> l00006A6C
l00006A7C:
	Mem53[r5_r4_28 + 0x1E<32>:word16] = 0<16>
	Mem54[r5_r4_28 + 0x20<32>:word16] = 0<16>
	Mem55[r5_r4_28 + 0x22<32>:word16] = 0<16>
	Mem56[r5_r4_28 + 0x14<32>:word32] = 0<32>
	Mem58[r3_r2 + 0x14<32>:word32] = 0<32>
	Mem60[r3_r2 + 8<32>:word32] = 0<32>
	Mem62[r3_r2 + 0x18<32>:word32] = 0<32>
	word16 r0_63 = Mem62[r5_r4_28 + 8<32>:word16]
	branch r0_63 == 0<16> l00006A9E
l00006A96:
	Mem70[r3_r2 + 0x60<32>:word32] = CONVERT(r0_63, word16, int32)
l00006A9E:
	Mem74[r5_r4_28 + 4<32>:word16] = 0x3F34<16>
	Mem75[r5_r4_28 + 6<32>:word16] = 0<16>
	Mem76[r5_r4_28 + 0xA<32>:word16] = 0<16>
	Mem78[r5_r4_28 + 0xE<32>:word16] = 0x8000<16>
	Mem82[r5_r4_28 + 0x18<32>:word32] = 0<32>
	Mem83[r5_r4_28 + 0x50<32>:word32] = 0<32>
	Mem84[r5_r4_28 + 0x2C<32>:word16] = 0<16>
	Mem92[r5_r4_28 + 0x90<32>:word32] = r5_r4_28 + 0x50C<32>
	Mem93[r5_r4_28 + 0x70<32>:word32] = r5_r4_28 + 0x50C<32>
	Mem94[r5_r4_28 + 0x68<32>:word32] = r5_r4_28 + 0x50C<32>
	Mem95[r5_r4_28 + 0x1B9C<32>:word16] = 1<16>
	Mem97[r5_r4_28 + 0x373C<32>:word16] = 0xFFFF<16>
	r0Out = 0<16>
	r1Out = SLICE(r5_r4_28 + 0x50C<32>, word16, 16)
	r6Out = r6_43
	r11Out = r11 + 0xC0CC<16>
	return r5_r4_28
l00006A6C:
	r0Out = 0xFFFE<16>
	r1Out = r1
	r6Out = r6_43
	r11Out = r11
	return r5_r4_28
fn00006A40_exit:


word32 fn000089C4(word32 r9_r8, word16 r11, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001B74
// MayUse:  r11:[0..15] ra:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r9:r8
// Trashed: CFLNZ r0 r1 r11 r2 r3 r4 r5 r6 r8 r9
// Preserved: r7 ra sp
fn000089C4_entry:
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
l000089C4:
	branch r9_r8 == 0<32> l00008A28
l000089CE:
	branch Mem8[r9_r8 + 0x40<32>:word32] == 0<32> l00008A28
l000089D6:
	word32 r7_r6_205 = Mem8[r9_r8 + 0x48<32>:word32]
	word16 r7_23 = SLICE(r7_r6_205, word16, 16)
	branch r7_r6_205 == 0<32> l00008A28
l000089DE:
	word32 r5_r4_27 = Mem8[r9_r8 + 0x38<32>:word32]
	branch r5_r4_27 == 0<32> l00008A28
l00008A28:
	return r9_r8
l000089E6:
	branch Mem8[r5_r4_27:word32] == r9_r8 l000089F4
l000089F4:
	word16 r11_48 = r11 + 0xC0CC<16>
	branch Mem8[r5_r4_27 + 4<32>:word16] <u 0x1F<16> l000089F0
l00008A00:
	branch Mem8[r5_r4_27 + 0x48<32>:word32] == 0<32> l00008A1C
l00008A0C:
	word16 r1_64
	word32 r9_r8_207
	call r7_r6_205 (retsize: 0;)
		uses: Mem:Mem8,r1:r1_64,r11:r11 + 0xC0CC<16>,r4:r4_199,r5:r5_200,r6:r6_83,r7:r7_23,r8:r8,r9:r9,ra:ra
		defs: r1:r1_64,r11:r11_65,ra:ra_61,Sequence r9:r8:r9_r8_207
	r7_r6_205 = Mem8[r9_r8_207 + 0x48<32>:word32]
	word32 r5_r4_77 = Mem8[r9_r8_207 + 0x38<32>:word32]
	r9 = SLICE(r9_r8_207, word16, 16) (alias)
	r8 = SLICE(r9_r8_207, word16, 0) (alias)
	word16 r6_83 = SLICE(r7_r6_205, word16, 0)
	word16 r4_199 = SLICE(r5_r4_77, word16, 0)
	word16 r5_200 = SLICE(r5_r4_77, word16, 16)
l00008A1C:
	word16 r6_101
	word16 r5_102
	word16 r4_103
	word32 r9_r8_206
	call r7_r6_205 (retsize: 0;)
		uses: Mem:Mem8,r1:0<16>,r11:r11_88,r4:r4_103,r5:r5_102,r6:r6_101,r7:SLICE(r7_r6_205, word16, 16),r8:r8_87,r9:r9_86,ra:ra_85
		defs: r4:r4_103,r5:r5_102,r6:r6_101,Sequence r9:r8:r9_r8_206
	Mem109[r9_r8_206 + 0x38<32>:word32] = 0<32>
	return r9_r8_206
l000089F0:
	return r9_r8
fn000089C4_exit:


void fn00008B96(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word16 r6, word16 r7, word16 r10, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008DC0
//      fn00009C04
// MayUse:  r0:[0..15] r10:[0..15] r13:[0..31] r6:[0..15] r7:[0..15] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r12 r13 r2 r3 r4 r5 r7
// Preserved: sp
fn00008B96_entry:
l00008B96:
	branch r6 >=u r7 l00008B98_thunk_fn00008B9C
l00008B98_thunk_fn00008B9C:
	fn00008B9C(r3_r2, r5_r4, r9_r8, r0, r7, r10, r13)
	return
l00008B98_thunk_fn00008B9A:
	fn00008B9A(r3_r2, r5_r4, r9_r8, r0, r6, r7, r13)
	return
fn00008B96_exit:


void fn00008B9A(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word16 r6, word16 r7, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008B96
//      fn0000A57A
// MayUse:  r0:[0..15] r13:[0..31] r6:[0..15] r7:[0..15] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r12 r13 r2 r3 r4 r5 r7
// Preserved: sp
fn00008B9A_entry:
l00008B9A:
l00008B9A_thunk_fn00008B9C:
	fn00008B9C(r3_r2, r5_r4, r9_r8, r0, r7, r6, r13)
	return
fn00008B9A_exit:


void fn00008B9C(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word16 r7, word16 r10, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008B96
//      fn0000A57A
// MayUse:  r0:[0..15] r10:[0..15] r13:[0..31] r7:[0..15] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r12 r13 r2 r3 r4 r5 r7
// Preserved: sp
fn00008B9C_entry:
l00008B9C:
	word32 r13_27
	fn0000DB24(r3_r2 + CONVERT(r0, word16, word32), r5_r4, r13, out r13_27)
	word32 sp_28 = <invalid>
	word16 r10_32 = r10 - r7
	branch r7 != 0<16> l00008C52
l00008C52:
	word32 r5_r4_42 = Mem18[sp_28 + 4<32>:word32]
	word32 r3_r2_41 = Mem18[r9_r8 + 0x48<32>:word32]
	Mem52[sp_28 + 2<32>:word16] = r7 - SLICE(r5_r4_42, word16, 0)
	word32 r13_57
	fn0000DB24(r3_r2_41, r5_r4_42, r13_27, out r13_57)
	Mem62[r9_r8 + 0x44<32>:word16] = r7
l00008C68:
	word16 r0_64 = Mem62[r9_r8 + 0x3C<32>:word16]
l00008C6C:
	Mem66[r9_r8 + 0x40<32>:word16] = r0_64
	Mem69[r13_57 + 0xA<32>:word16] = 1<16>
l00008C72_thunk_fn00008C74:
	fn00008C74()
	return
l00008BB2:
	word16 r0_77 = Mem18[r9_r8 + 0x44<32>:word16]
	Mem81[r9_r8 + 0x44<32>:word16] = r0_77
	word16 r10_78 = r10_32 + r0_77
	word16 r1_83 = Mem81[r9_r8 + 0x3C<32>:word16]
	branch r1_83 == r0_77 l00008C7A
l00008C7A:
	Mem87[r9_r8 + 0x44<32>:word16] = r7
	branch Mem87[r9_r8 + 0x40<32>:word16] <u r1_83 l00008BCC
l00008C86:
l00008BC4:
	branch Mem81[r9_r8 + 0x40<32>:word16] >=u r1_83 l00008BD2
l00008BCC:
	Mem103[r9_r8 + 0x40<32>:word16] = r10_78
l00008BD2:
	Mem106[r13_27 + 0xA<32>:word16] = 1<16>
l00008BD6_thunk_fn00008C74:
	fn00008C74()
	return
fn00008B9C_exit:


void fn00008C74()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008B9C
//      fn00009C04
// MayUse: 
// LiveOut:
// Trashed: CF r0 r13 r7 sp
// Preserved:
fn00008C74_entry:
l00008C74:
	__invalidate_cache("i")
l00008BD8_in_fn00008C74:
	return
fn00008C74_exit:


void fn00008DC0(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word16 r1, word16 r6, word16 r7, word16 r11, word32 ra, word32 dwArg12, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009A3E
//      fn00009C04
// MayUse:  r0:[0..15] r1:[0..15] r11:[0..15] r6:[0..15] r7:[0..15] ra:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0012:[0..31] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
l00008DC0:
	v5_5 = Mem0[r3_r2_60:byte]
	r7_r6_9 = CONVERT(v5_5, byte, word32)
	r6_17 = SLICE(r7_r6_9, word16, 0) (alias)
	r7_67 = SLICE(r7_r6_9, word16, 16) (alias)
	branch r0_79 >=u 1<16> l00008E6A
	def r10
l00008E6A:
	branch r9 != r6_17 l00008DCE
l00008DCA:
	branch r8 == r6_17 l00008E70
l00008E70:
	r1_24 = r1_53 + 1<16>
	r6_29 = CONVERT(r0_79 >=u 3<16>, bool, int16)
l00008DCE:
	branch v5_5 != 0<8> l00008E8C
l00008E8C:
	r6_39 = SEQ(SLICE(r6_17, byte, 8), SLICE(r10, byte, 0))
	r0_40 = 0<16>
l00008DD2:
	r0_47 = r11
	r6_50 = CONVERT(r11 >=u 3<16>, bool, int16)
l00008DDC:
	r0_79 = PHI((r0_47, l00008DD2), (r0_79, l00008E70), (r0_40, l00008E8C))
	r6_74 = PHI((r6_50, l00008DD2), (r6_29, l00008E70), (r6_39, l00008E8C))
	r1_51 = PHI((r1_53, l00008DD2), (r1_24, l00008E70), (r1_53, l00008E8C))
	r1_53 = r1_51 + 1<16>
	r3_r2_60 = r3_r2_60 (alias)
	branch CONVERT(r1_53 <u r7_67, bool, int16) == 0<16> l00008DEC
	def r13
	def r12
	def sp
	r12_16_16_212 = SLICE(r12, word16, 16) (alias)
l00008DE8:
	branch SLICE(r6_74, byte, 0) != 0<8> l00008DC0
l00008DEC:
	Mem85[r13 + 0x8C<32>:word16] = r0_79
	r8_91 = Mem85[r12 + 4<32>:word16]
	r5_r4_92 = Mem85[r12:word32]
	r1_100 = 0<16>
	branch SLICE(r6_74, byte, 0) == 0<8> l00008EA8
l00008EA8:
	r9_r8_456 = 0<32> (alias)
l00008E00:
	r10_106 = 0<16>
	r7_107 = 4<16>
l00008E08:
	r0_126 = PHI((r0_79, l00008E00), (r0_199, l00008E32))
	r1_108 = PHI((r1_100, l00008E00), (r1_165, l00008E32))
	r3_r2_115 = CONVERT(r1_108, word16, word32) + r5_r4_92
	v31_120 = Mem85[r3_r2_115:byte]
	r12_l_r11_123 = CONVERT(v31_120, byte, word32)
	r2_117 = SLICE(r3_r2_115, word16, 0) (alias)
	r11_131 = SLICE(r12_l_r11_123, word16, 0) (alias)
	r12_215 = SEQ(r12_16_16_212, SLICE(r12_l_r11_123, word16, 16)) (alias)
	branch r0_126 >=u 1<16> l00008E78
l00008E78:
	branch r11_131 != 0<16> l00008E1A
l00008E16:
	branch r11_131 == 0xFF<16> l00008E7E
l00008E7E:
	r1_137 = r1_108 + 1<16>
	r2_142 = CONVERT(r0_126 >=u 3<16>, bool, int16)
l00008E1A:
	branch v31_120 != 0<8> l00008E86
l00008E86:
	r2_151 = SEQ(SLICE(r2_117, byte, 8), SLICE(r6_74, byte, 0))
	r0_152 = 0<16>
l00008E1E:
	r0_159 = 4<16>
	r2_162 = 1<i16>
l00008E28:
	r0_199 = PHI((r0_159, l00008E1E), (r0_126, l00008E7E), (r0_152, l00008E86))
	r2_176 = PHI((r2_162, l00008E1E), (r2_142, l00008E7E), (r2_151, l00008E86))
	r1_163 = PHI((r1_108, l00008E1E), (r1_137, l00008E7E), (r1_108, l00008E86))
	r1_165 = r1_163 + 1<16>
	branch CONVERT(r1_165 <u r8_91, bool, int16) == 0<16> l00008E36
l00008E32:
	branch SLICE(r2_176, byte, 0) != 0<8> l00008E08
l00008E36:
	r9_r8_181 = CONVERT(r1_165, word16, word32)
	r5_r4_193 = r5_r4_92 + r9_r8_181
l00008E3A:
	r9_r8_457 = PHI((r9_r8_181, l00008E36), (r9_r8_456, l00008EA8))
	r5_r4_455 = PHI((r5_r4_193, l00008E36), (r5_r4_92, l00008EA8))
	r10_291 = PHI((r10_106, l00008E36), (r10, l00008EA8))
	r7_248 = PHI((r7_107, l00008E36), (r7_67, l00008EA8))
	r12_207 = PHI((r12_215, l00008E36), (r12, l00008EA8))
	r0_197 = PHI((r0_199, l00008E36), (r0_79, l00008EA8))
	Mem206[r13 + 0x8C<32>:word16] = r0_197
	Mem220[r12_207 + 4<32>:word16] = Mem206[r12_207 + 4<32>:word16]
	Mem226[r12_207:word32] = r5_r4_455
	r3_r2_227 = Mem226[r12_207 + 8<32>:word32]
	r9_r8_235 = r9_r8_457 + r3_r2_227
	Mem239[r12_207 + 8<32>:word32] = r9_r8_235
	branch r0_197 != 4<16> l00008EC4
l00008EC4:
l00008B7A:
	r6_244 = __a_shift<word16,word16>(1<16>, 0xFFFD<16>)
	Mem245[r9_r8_235 + 0x3C<32>:word16] = r6_244
	Mem246[r9_r8_235 + 0x22<32>:word16] = 0<16>
	Mem247[r9_r8_235 + 0x20<32>:word16] = 0<16>
	branch r6_244 <=u r7_248 l00008C24
l00008C24:
	r5_r4_267 = Mem247[sp:word32]
	r7_r6_272 = CONVERT(r6_244, word16, word32) - r5_r4_267
	Mem277[sp - 2<i32>:word16] = SLICE(r7_r6_272, word16, 0)
	fn0000DB24(r3_r2_227, r5_r4_267, r13, out r13_280)
	Mem284[r9_r8_235 + 0x22<32>:word16] = 0<16>
	Mem286[r9_r8_235 + 0x40<32>:word16] = Mem284[r9_r8_235 + 0x3C<32>:word16]
	Mem289[r13_280 + 0xA<32>:word16] = 1<16>
	r7_273 = SLICE(r7_r6_272, word16, 16) (alias)
l00008C46_thunk_fn00008B9C:
	fn00008B9C(r3_r2_227, r5_r4_267, r9_r8_235, 0<16>, r7_273, r10_291, r13_280)
	return
l00008B8E:
	r0_315 = Mem247[r9_r8_235 + 0x44<32>:word16] - r6_244
l00008B94_thunk_fn00008B96:
	fn00008B96(r3_r2_227, r5_r4_455, r9_r8_235, r0_315, r6_244, r7_248, r7_248, r13)
	return
l00008E50:
	r11_r10_334 = Mem239[r12_207 + 0x14<32>:word32]
	fn00006A40(SEQ(r3, r2), r11, out r0_459, out r1_460, out r6_461, out r11_462)
	Mem336[r3_r2_227 + 8<32>:word32] = r9_r8_235
	Mem339[r3_r2_227 + 0x14<32>:word32] = r11_r10_334
	Mem341[r13 + 4<32>:word16] = 0x3F3F<16>
	return
fn00008DC0_entry:
	def r3_r2
	def r5_r4
	def r9_r8
	def r0
	def r6
	def r7
	def r1
	def ra
	def r11
	def Mem0
	def dwArg12
	def dwArgA0
	r9 = SLICE(r9_r8, word16, 16)
	r8 = SLICE(r9_r8, word16, 0)
l00008DC0_thunk_fn0000A48C:
	fn0000A48C(r3_r2, r5_r4, r9_r8, r0, r1, r6, r7, r11, r12, r13, ra, dwArg12, dwArgA0)
	return
fn00008DC0_exit:


void fn00009A3E(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word16 r1, word16 r6, word16 r7, word16 r11, word32 r12, word32 r13, word32 ra, word32 dwArg12, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000AA58
// MayUse:  r0:[0..15] r1:[0..15] r11:[0..15] r12:[0..31] r13:[0..31] r6:[0..15] r7:[0..15] ra:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0012:[0..31] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn00009A3E_entry:
l00009A3E_thunk_fn0000A48C:
	fn0000A48C(r3_r2, r5_r4, r9_r8, r0, r1, r6, r7, r11, r12, r13, ra, dwArg12, dwArgA0)
	return
fn00009A3E_exit:


word16 fn00009C04(word32 r5_r4, word16 r6, word16 r10, word16 r11, word32 r12, word32 dwArgFFF2, word32 dwArg10004, word32 dwArg10024, word32 dwArg1002C, word16 wArg10032, word16 wArg10036, word16 wArg1003A, word16 wArg1003E, word16 wArg10040, word32 dwArg10042, word16 wArg10046, word32 dwArg1004A, word16 wArg1004E, word32 dwArg10052, word16 wArg10056, word16 wArg1005A, word16 wArg1005E, word16 wArg10062, word16 wArg10066, word32 dwArg1006A, word16 wArg1006E, word32 dwArg1007A, word32 dwArg10082, word32 dwArg1008A, word32 dwArg10092, word32 dwArg1009A, word32 dwArg100A2, word16 wArg100AA, word16 wArg100AE, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
// MayUse:  r10:[0..15] r11:[0..15] r12:[0..31] r6:[0..15] Sequence r5:r4:[0..31] Stack +10004:[0..31] Stack +10024:[0..31] Stack +1002C:[0..31] Stack +10032:[0..15] Stack +10036:[0..15] Stack +1003A:[0..15] Stack +1003E:[0..15] Stack +10040:[0..15] Stack +10042:[0..31] Stack +10046:[0..15] Stack +1004A:[0..31] Stack +1004E:[0..15] Stack +10052:[0..31] Stack +10056:[0..15] Stack +1005A:[0..15] Stack +1005E:[0..15] Stack +10062:[0..15] Stack +10066:[0..15] Stack +1006A:[0..31] Stack +1006E:[0..15] Stack +1007A:[0..31] Stack +10082:[0..31] Stack +1008A:[0..31] Stack +10092:[0..31] Stack +1009A:[0..31] Stack +100A2:[0..31] Stack +100AA:[0..15] Stack +100AE:[0..15] Stack +FFF2:[0..31]
// LiveOut: r10 r11 r12 sp
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn00009C04_entry:
	word32 r13
	word16 wArgFFF4 = SLICE(dwArgFFF2, word16, 16)
l00009C04:
	word16 v10_16 = Mem8[r5_r4 + 2<32>:word16]
	word32 r13_17 = SEQ(SLICE(r13, word16, 16), v10_16)
	branch v10_16 == 0<16> l00009C12_thunk_fn0000A426
l00009C12_thunk_fn0000A426:
	word16 r3_133
	word16 r4_134
	word16 r5_135
	fn0000A426(r5_r4, r12, wArgFFF4, out r3_133, out r4_134, out r5_135)
	r11Out = r11
	r12Out = r12
	return r10
l00009C16:
	branch r6 > 0<16> l0000A1AC
l00009C1C_thunk_fn0000A19A:
	fn0000A19A(r6, r10, r12)
l00009C20:
l00009C26_thunk_fn0000A110:
	word16 r10_54
	word16 r11_55
	word32 r12_56
	word16 r2_136
	word16 r3_137
	word16 r4_138
	word16 r5_139
	word16 r6_140
	word16 r7_141
	word16 r8_142
	word16 r9_143
	word32 r13_144
	word32 ra_145
	fn0000A110(r5_r4, r6 << 2<16>, r10, r11, r12, r13_17, dwArgFFF2, dwArg10004, dwArg10024, dwArg1002C, wArg10032, wArg10036, wArg1003A, wArg1003E, wArg10040, dwArg10042, wArg10046, dwArg1004A, wArg1004E, dwArg10052, wArg10056, wArg1005A, wArg1005E, wArg10062, wArg10066, dwArg1006A, wArg1006E, dwArg1007A, dwArg10082, dwArg1008A, dwArg10092, dwArg1009A, dwArg100A2, wArg100AA, wArg100AE, out r2_136, out r3_137, out r4_138, out r5_139, out r6_140, out r7_141, out r8_142, out r9_143, out r10_54, out r11_55, out r12_56, out r13_144, out ra_145)
	r11Out = r11_55
	r12Out = r12_56
	return r10_54
fn00009C04_exit:


word32 fn0000A0E8(word32 r12, word32 r13, word32 dwArg10008, word32 dwArg10010, word32 dwArg10028, word32 dwArg10030, word16 wArg10036, word16 wArg1003A, word16 wArg1003E, word16 wArg10042, word16 wArg10044, word32 dwArg10046, word16 wArg1004A, word32 dwArg1004E, word16 wArg10052, word32 dwArg10056, word16 wArg1005A, word16 wArg1005E, word16 wArg10062, word16 wArg10066, word16 wArg1006A, word32 dwArg1006E, word16 wArg10072, word32 dwArg1007E, word32 dwArg10086, word32 dwArg1008E, word32 dwArg10096, word32 dwArg1009E, word32 dwArg100A6, word16 wArg100AE, word16 wArg100B2, ptr32 & r9_r8Out, ptr32 & r0Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
// MayUse:  r12:[0..31] r13:[0..31] Stack +10008:[0..31] Stack +10010:[0..31] Stack +10028:[0..31] Stack +10030:[0..31] Stack +10036:[0..15] Stack +1003A:[0..15] Stack +1003E:[0..15] Stack +10042:[0..15] Stack +10044:[0..15] Stack +10046:[0..31] Stack +1004A:[0..15] Stack +1004E:[0..31] Stack +10052:[0..15] Stack +10056:[0..31] Stack +1005A:[0..15] Stack +1005E:[0..15] Stack +10062:[0..15] Stack +10066:[0..15] Stack +1006A:[0..15] Stack +1006E:[0..31] Stack +10072:[0..15] Stack +1007E:[0..31] Stack +10086:[0..31] Stack +1008E:[0..31] Stack +10096:[0..31] Stack +1009E:[0..31] Stack +100A6:[0..31] Stack +100AE:[0..15] Stack +100B2:[0..15]
// LiveOut: r0 r12 r13 r3:r2 r4 r5 r6 r7 r9:r8 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A0E8_entry:
l0000A0E8:
	word16 r6_24 = Mem23[r12 + 0x2414<32>:word16]
	word16 r10_25 = Mem23[r12 + 0x2410<32>:word16]
	branch Mem23[r12 + 0x23EC<32>:word16] == 0<16> l0000A10C_thunk_fn0000A19A
l0000A10C_thunk_fn0000A19A:
	fn0000A19A(r6_24, r10_25, r12)
l0000A10E:
l0000A10E_thunk_fn0000A110:
	word32 r12_36
	word32 r13_37
	word16 r2_38
	word16 r3_39
	word16 r4_40
	word16 r5_41
	word16 r6_42
	word16 r7_43
	word16 r8_44
	word16 r9_45
	word32 ra_46
	word16 r10_93
	word16 r11_94
	word16 r0_32 = fn0000A110(r13, r6_24, r10_25, 0<16>, r12, r13, dwArg10010, dwArg10008, dwArg10028, dwArg10030, wArg10036, wArg1003A, wArg1003E, wArg10042, wArg10044, dwArg10046, wArg1004A, dwArg1004E, wArg10052, dwArg10056, wArg1005A, wArg1005E, wArg10062, wArg10066, wArg1006A, dwArg1006E, wArg10072, dwArg1007E, dwArg10086, dwArg1008E, dwArg10096, dwArg1009E, dwArg100A6, wArg100AE, wArg100B2, out r2_38, out r3_39, out r4_40, out r5_41, out r6_42, out r7_43, out r8_44, out r9_45, out r10_93, out r11_94, out r12_36, out r13_37, out ra_46)
	r9_r8Out = <invalid>
	r0Out = r0_32
	r4Out = r4_40
	r5Out = r5_41
	r6Out = r6_42
	r7Out = r7_43
	r12Out = r12_36
	r13Out = r13_37
	raOut = ra_46
	return SEQ(r3_39, r2_38)
fn0000A0E8_exit:


word16 fn0000A110(word32 r5_r4, word16 r6, word16 r10, word16 r11, word32 r12, word32 r13, word32 dwArg00, word32 dwArg12, word32 dwArg32, word32 dwArg3A, word16 wArg40, word16 wArg44, word16 wArg48, word16 wArg4C, word16 wArg4E, word32 dwArg50, word16 wArg54, word32 dwArg58, word16 wArg5C, word32 dwArg60, word16 wArg64, word16 wArg68, word16 wArg6C, word16 wArg70, word16 wArg74, word32 dwArg78, word16 wArg7C, word32 dwArg88, word32 dwArg90, word32 dwArg98, word32 dwArgA0, word32 dwArgA8, word32 dwArgB0, word16 wArgB8, word16 wArgBC, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A0E8
// MayUse:  r10:[0..15] r11:[0..15] r12:[0..31] r13:[0..31] r6:[0..15] Sequence r5:r4:[0..31] Stack +0000:[0..31] Stack +0012:[0..31] Stack +0032:[0..31] Stack +003A:[0..31] Stack +0040:[0..15] Stack +0044:[0..15] Stack +0048:[0..15] Stack +004C:[0..15] Stack +004E:[0..15] Stack +0050:[0..31] Stack +0054:[0..15] Stack +0058:[0..31] Stack +005C:[0..15] Stack +0060:[0..31] Stack +0064:[0..15] Stack +0068:[0..15] Stack +006C:[0..15] Stack +0070:[0..15] Stack +0074:[0..15] Stack +0078:[0..31] Stack +007C:[0..15] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B8:[0..15] Stack +00BC:[0..15]
// LiveOut: r0 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn0000A110_entry:
	ptr32 fp
	word32 ra
	word16 wLoc0E
	word32 dwLoc0A
	word32 dwArgC0
	word16 wLoc06
	word32 dwLoc04
	word32 r5_r4_1938 = r5_r4
	word32 dwArg50_8998 = dwArg50
	word32 dwArg00_9209 = dwArg00
l0000A110:
	word32 r3_r2_7 = Mem6[r12 + 0x23F0<32>:word32]
	word32 r5_r4_8526 = r5_r4_1938
	word32 dwArg50_8947 = dwArg50_8998
	word32 dwArg00_9203 = dwArg00_9209
l0000A114:
	word16 r0_1187
	word16 v10_25 = Mem24[r3_r2_7 + r5_r4_8526 * 2<32>:word16]
	ra = SEQ(SLICE(ra, word16, 16), v10_25)
	byte v13_38 = Mem24[SEQ(SLICE(r5_r4_8526, word16, 16) + 1<16>, SLICE(r5_r4_8526, word16, 0)) + Mem24[r12 + 0x23E0<32>:word32]:byte]
	branch v10_25 != 0<16> l0000A1C6
l0000A1C6:
	word32 r10_r9_45 = CONVERT(v13_38, byte, word32)
	word16 r9_1528 = SLICE(r10_r9_45, word16, 0)
	r10 = SLICE(r10_r9_45, word16, 16) (alias)
	word32 dwArg50_8845 = dwArg50_8947
	word32 dwArg00_8640 = dwArg00_9203
l0000A1C8:
	word32 r1_r0_47 = CONVERT(r9_1528, word16, int32)
	word32 dwArg50_8712 = dwArg50_8845
	word32 dwArg00_9188 = dwArg00_8640
l0000A1CA:
	word32 dwLoc04_5400
	word32 r9_r8_59 = CONVERT(Mem54[r1_r0_47 + 0xF32E<24>:byte], byte, word32)
	word32 r3_r2_70 = r13 + 0x404<32>
	word32 dwArg50_8535 = dwArg50_8712
	word32 r9_r8_8699 = SEQ(SLICE(r9_r8_59, word16, 16), SLICE(r9_r8_59, word16, 0) + 0x101<16>)
	word32 dwArg00_9178 = dwArg00_9188
l0000A1DE:
	word16 r0_78 = Mem77[r3_r2_70 + 2<32>:word16]
	word16 r1_1020 = Mem77[r3_r2_70:word16]
	Mem89[r12 + 0x2410<32>:word16] = r10
	word16 wArg52_5052 = SLICE(dwArg50_8535, word16, 16)
	word16 wArg50_5050 = SLICE(dwArg50_8535, word16, 0)
	word32 sp_1221 = fp
	word16 r8_97 = SLICE(r9_r8_8699, word16, 0)
	word16 r9_95 = SLICE(r9_r8_8699, word16, 16)
	r0_1187 = r0_78 - 0x10<16>
	word32 dwArg50_5060 = dwArg50_8535
	branch r6 < 0x10<16> l0000A1F4_thunk_fn0000A570
l0000A1F4_thunk_fn0000A570:
	fn0000A570(SEQ(r1_1020, r0_78 - 0x10<16>), 0x10<16>, r8_97, r9_95, r10, r11, r12, r13, ra, wArg40, wArg48, wArg50_5050, wArg52_5052, dwArg58, dwArg60, wArg68, wArg70, wArg74, dwArg78, dwArg88, dwArg90)
	r2Out = r2_105
	r3Out = r3_106
	r4Out = r4_107
	r5Out = r5_108
	r6Out = r6_109
	r7Out = r7_110
	r8Out = r8_111
	r9Out = r9_112
	r10Out = r10_101
	r11Out = r11_102
	r12Out = r12_103
	r13Out = r13_104
	raOut = ra_113
	return r0_99
l0000A1F8:
	word32 r3_r2_119 = Mem89[r12 + 8<32>:word32]
	word32 r5_r4_120 = Mem89[r12 + 0x14<32>:word32]
	Mem129[r12 + 0x14<32>:word32] = r5_r4_120 + 1<32>
	word32 r3_r2_132 = r3_r2_119 + r5_r4_120
	word32 r9_r8_9029 = r9_r8_8699
	word32 dwArg00_8966 = dwArg00_9178
l0000A204:
	Mem141[r3_r2_132:byte] = SLICE(r10, byte, 0)
	word32 r5_r4_146 = Mem141[r12 + 0x14<32>:word32]
	word16 r10_143 = Mem141[r12 + 0x2410<32>:word16]
	word32 r3_r2_145 = Mem141[r12 + 8<32>:word32]
	Mem155[r12 + 0x14<32>:word32] = r5_r4_146 + 1<32>
	word32 r3_r2_158 = r3_r2_145 + r5_r4_146
	Mem162[r3_r2_158:byte] = SLICE(r10_143 >>u 8<8>, byte, 0)
	byte v35_164 = Mem162[r12 + 0x2414<32>:byte]
	r10 = __l_shift<word16,word16>(r1_1020, SEQ(SLICE(r3_r2_158, byte, 24), v35_164))
	Mem176[r12 + 0x2410<32>:word16] = r10
	Mem183[r12 + 0x2414<32>:word16] = r0_1187
	word16 r7_1032 = SLICE(r5_r4_146 + 1<32>, word16, 16)
	r11 = r11 + 0xFFF0<16>
	r6 = r0_1187
	r9_r8_8699 = r9_r8_9029 (alias)
	word32 r5_r4_9125 = SEQ(SLICE(r5_r4_146, word24, 8), 0x10<8> - v35_164)
	word32 dwArg00_9160 = dwArg00_8966
l0000A23A:
	word32 r1_r0_185 = CONVERT(SLICE(r9_r8_8699, word16, 0), word16, word32)
	word32 r3_r2_194 = r1_r0_185 * 2<32> + 0xFB9C<32>
	word32 r1_r0_8540 = SEQ(SLICE(r1_r0_185 * 2<32>, word16, 16), SLICE(r1_r0_185, word16, 0) * 2<16>)
	word32 r3_r2_8848 = SEQ(SLICE(r3_r2_194, word16, 16), Mem198[r3_r2_194:word16])
	word32 r5_r4_9112 = r5_r4_9125
	word32 dwArg00_9149 = dwArg00_9160
l0000A246:
	word32 r1_r0_8543
	word32 r9_r8_8841
	word32 r5_r4_9115
	word32 r5_r4_281
	word32 dwArg00_9152
	word32 dwArg00_9171
	word16 r1_1062
	word16 r3_1570 = SLICE(r3_r2_8848, word16, 16)
	word16 r4_1589 = SLICE(r5_r4_9112, word16, 0)
	word16 r0_204 = SLICE(r1_r0_8540, word16, 0)
	word16 r2_1555 = SLICE(r3_r2_8848, word16, 0)
	word32 r3_r2_8718 = r3_r2_8848
	word32 r5_r4_9100 = r5_r4_9112
	word32 dwArg00_9141 = dwArg00_9149
	branch r2_1555 == 0<16> l0000A2AA
l0000A24A:
	r1_r0_8543 = SEQ(SLICE(r1_r0_8540 + 0xF2F4<24>, word16, 16), r0_204 + 0xF2F4<16>) (alias)
	r9_r8_8841 = r9_r8_8699 (alias)
l0000A24E:
	r1_1062 = SLICE(r1_r0_8543, word16, 16) (alias)
	r9_r8_8699 = r9_r8_8841 (alias)
	dwArg00_9171 = dwArg00_9149 (alias)
l0000A250:
	Mem227[r12 + 0x2410<32>:word16] = r10
	sp_1221 = fp
	r9_1528 = SLICE(r9_r8_8699, word16, 16) (alias)
	r2_1555 = r2_1555 - 0x10<16>
	branch r6 < 0x10<16> l0000A264_thunk_fn0000A534
l0000A264_thunk_fn0000A534:
	fn0000A534(SEQ(r3_1570, r2_1555), r9_r8_8699, r1_1062, r4_1589, r7_1032, r11, r12, r13, wArg40, wArg48, dwArg50_5060, dwArg58, dwArg60, wArg74, dwArg78, dwArg88, dwArg90)
	r2Out = r2_246
	r3Out = r3_247
	r4Out = r4_248
	r5Out = r5_249
	r6Out = r6_250
	r7Out = r7_251
	r8Out = r8_252
	r9Out = r9_253
	r10Out = r10_242
	r11Out = r11_243
	r12Out = r12_244
	r13Out = r13_245
	raOut = ra_254
	return r0_240
l0000A268:
	word32 r1_r0_260 = Mem227[r12 + 8<32>:word32]
	word32 r5_r4_261 = Mem227[r12 + 0x14<32>:word32]
	Mem270[r12 + 0x14<32>:word32] = r5_r4_261 + 1<32>
	Mem277[r1_r0_260 + r5_r4_261:byte] = SLICE(r10, byte, 0)
	word16 r3_278 = Mem277[r12 + 0x2410<32>:word16]
	word32 r1_r0_280 = Mem277[r12 + 8<32>:word32]
	r5_r4_281 = Mem277[r12 + 0x14<32>:word32]
	Mem290[r12 + 0x14<32>:word32] = r5_r4_281 + 1<32>
	word32 r1_r0_293 = r1_r0_280 + r5_r4_281
	Mem297[r1_r0_293:byte] = SLICE(r3_278 >>u 8<8>, byte, 0)
	r3_1570 = Mem297[r12 + 0x2414<32>:word16]
	r0_1187 = SEQ(SLICE(r1_r0_293, byte, 8), SLICE(r3_1570, byte, 0))
	dwArg00_8966 = dwArg00_9171 (alias)
l0000A296:
	r10 = __l_shift<word16,word16>(r9_1528, r0_1187)
	Mem314[r12 + 0x2410<32>:word16] = r10
	r6 = 0xFFF0<16>
	r5_r4_9115 = r5_r4_281 (alias)
	dwArg00_9152 = dwArg00_8966 (alias)
l0000A2A0:
	Mem323[r12 + 0x2414<32>:word16] = r6
	r3_r2_8718 = SEQ(r3_1570 + r6, r2_1555 + r6) (alias)
	r5_r4_9100 = r5_r4_9115 (alias)
	dwArg00_9141 = dwArg00_9152 (alias)
l0000A2AA:
	word32 r3_r2_8546
	word32 r5_r4_9091
	word32 dwArg00_9134
	word16 v50_327 = SLICE(ra, word16, 0)
	r9_1528 = v50_327 + 0xFFFF<16>
	branch v50_327 <u 0x100<16> l0000A39E
l0000A39E:
l0000A2B4:
	r3_r2_8546 = r3_r2_8718 (alias)
	r5_r4_9091 = r5_r4_9100 (alias)
	dwArg00_9134 = dwArg00_9141 (alias)
l0000A2BE:
	word32 r3_r2_362 = (r3_r2_8546 << 2<8>) + Mem356[sp_1221:word32]
	ra = r3_r2_8546
	r3_1570 = SLICE(r3_r2_362, word16, 16) (alias)
	r1_1020 = Mem356[r3_r2_362 + 2<32>:word16]
	word32 r5_r4_9077 = r5_r4_9091
	r9_r8_8699 = SEQ(r9_1528, Mem356[r3_r2_362:word16]) (alias)
	dwArg00_8640 = dwArg00_9134 (alias)
l0000A2CC:
	word32 r5_r4_9060 = r5_r4_9077
	word32 dwArg00_9109 = dwArg00_8640
l0000A2CE:
	word32 r7_r6_8549
	word32 r5_r4_383
	word32 r3_r2_382
	word32 r5_r4_413
	word32 r7_r6_8556
	word32 r3_r2_412
	word32 r3_r2_8575
	word32 r1_r0_4093
	word32 r5_r4_8582
	word32 r11_r10_8598
	word32 r3_r2_3158
	word32 r11_r10_8595
	word32 r3_r2_8572
	word32 r7_r6_3159
	word32 r5_r4_8606
	word32 r5_r4_3284
	word32 r1_r0_8616
	word32 r5_r4_3319
	word32 r3_r2_8727
	word32 r11_r10_8743
	word32 r11_r10_8740
	word32 r5_r4_8737
	word32 r3_r2_8749
	word32 r5_r4_8755
	word32 r5_r4_8771
	word32 r1_r0_3281
	word32 r7_r6_8761
	word32 r11_r10_8858
	word32 r11_r10_8855
	word32 r7_r6_8866
	word32 r5_r4_8956
	word32 r5_r4_9008
	word32 dwArg00_9063
	word32 dwArg00_9080
	word32 dwArg00_9094
	word32 dwArg00_9083
	word32 dwArg00_9106
	word32 dwArg00_9120
	word32 dwArg00_9155
	word32 dwArg00_9166
	word32 dwArg00_9175
	word32 dwArg00_9193
	word32 dwArg00_9185
	word16 r9_2520
	word16 r8_1554
	word16 r6_2543
	word16 r5_1845
	word16 r4_1199
	word16 r8_1217
	word16 r7_3429
	word16 r1_2545
	word16 r3_2598
	word16 r3_1193
	word16 r4_3127
	word16 r7_3597
	word16 r7_3380
	word16 r11_3382
	word16 r3_1447
	word16 r0_2876
	word16 r2_2501
	bool v281_4655
	word16 r2_2599
	word16 r3_2495
	word16 r4_2563
	word16 r0_2873
	word16 r3_1881
	Mem379[r12 + 0x2410<32>:word16] = r10
	r1_1062 = r1_1020 - 0x10<16>
	bool v250_4624 = r6 == 0x10<16>
	word32 r5_r4_9036 = r5_r4_9060
	word32 r9_r8_9050 = r9_r8_8699
	word32 dwArg00_9097 = dwArg00_9109
	branch r6 < 0x10<16> l0000A396
l0000A2E0:
	r3_r2_382 = Mem379[r12 + 8<32>:word32]
	r5_r4_383 = Mem379[r12 + 0x14<32>:word32]
	r7_r6_8549 = 1<32> (alias)
l0000A2E6:
	Mem395[r12 + 0x14<32>:word32] = r7_r6_8549 + r5_r4_383
	Mem406[r3_r2_382 + r5_r4_383:byte] = SLICE(r10, byte, 0)
	r0_1187 = Mem406[r12 + 0x2410<32>:word16]
	dwArg00_9106 = dwArg00_9109 (alias)
l0000A2F0:
	r0_2873 = r0_1187 >>u 8<8>
	r3_r2_412 = Mem411[r12 + 8<32>:word32]
	r5_r4_413 = Mem411[r12 + 0x14<32>:word32]
	r7_r6_8556 = 1<32> (alias)
	dwArg00_9094 = dwArg00_9106 (alias)
l0000A2FA:
	word32 r7_r6_421 = r7_r6_8556 + r5_r4_413
	Mem425[r12 + 0x14<32>:word32] = r7_r6_421
	word32 r3_r2_430 = r3_r2_412 + r5_r4_413
	Mem435[r3_r2_430:byte] = SLICE(r0_2873, byte, 0)
	byte v57_437 = Mem435[r12 + 0x2414<32>:byte]
	r0_2876 = SEQ(SLICE(r0_2873, byte, 8), v57_437)
	r10 = __l_shift<word16,word16>(SLICE(r9_r8_8699, word16, 0), r0_2876)
	Mem449[r12 + 0x2410<32>:word16] = r10
	Mem456[r12 + 0x2414<32>:word16] = r1_1062
	r7_1032 = SLICE(r7_r6_421, word16, 16) (alias)
	r3_1570 = SEQ(SLICE(r3_r2_430, byte, 24), 0x10<8> - v57_437)
	r11 = r11 + 0xFFF0<16>
	r6 = r1_1062
	dwArg00_9080 = dwArg00_9094 (alias)
l0000A320:
	r5_1845 = SLICE(r5_r4_413, word16, 16) (alias)
	r9_1528 = SLICE(r9_r8_8699, word16, 16) (alias)
	r4_1589 = SLICE(r5_r4_413, word16, 0) (alias)
	r5_r4_8956 = r5_r4_413 (alias)
	dwArg00_9063 = dwArg00_9080 (alias)
	branch v250_4624 l0000A374
l0000A322:
	word32 r7_r6_8563
	word32 r1_r0_3167
	word32 r5_r4_3168
	word32 r1_r0_3223
	word32 r5_r4_8959
	word32 dwArg00_9066
	word32 dwArg00_9198
	word32 dwArg00_9206
	word16 r0_3000
	ra = ra * 2<32>
	r2_1555 = Mem467[ra * 2<32> + 0xFB60<32>:word16]
	r1_1062 = SLICE(ra + 0xFB60<32>, word16, 16) (alias)
	word32 r3_r2_8871 = SEQ(r3_1570, r2_1555)
	word32 r5_r4_8875 = r5_r4_8956
	word32 dwArg00_9039 = dwArg00_9063
	branch r2_1555 == 0<16> l0000A388
l0000A330:
	ra = ra + 0xF2B8<24>
l0000A336:
	Mem486[r12 + 0x2410<32>:word16] = r10
	r0_3000 = 0x10<16>
	r2_1555 = r2_1555 - 0x10<16>
	r5_r4_8959 = r5_r4_8956 (alias)
	dwArg00_9066 = dwArg00_9063 (alias)
l0000A346:
	r9_1528 = SLICE(r9_r8_8699, word16, 16) (alias)
	branch r6 < r0_3000 l0000A382
l0000A382:
	Mem495[r12 + 0x2414<32>:word16] = r6
	r3_r2_8871 = SEQ(r3_1570, r2_1555 + r6) (alias)
	r5_r4_8875 = r5_r4_8959 (alias)
	dwArg00_9039 = dwArg00_9066 (alias)
l0000A388:
	r7_1032 = Mem497[r12 + 0x23EC<32>:word16]
	bool v259_4633 = r11 <u r7_1032
	word32 r3_r2_8768 = r3_r2_8871
	r5_r4_8771 = r5_r4_8875 (alias)
	dwArg00_8640 = dwArg00_9039 (alias)
l0000A38E:
	r2_1555 = SLICE(r3_r2_8768, word16, 0) (alias)
	r3_1570 = SLICE(r3_r2_8768, word16, 16) (alias)
	r8_1554 = SLICE(r9_r8_8699, word16, 0) (alias)
	word32 r3_r2_2099 = r3_r2_8768
	word32 r5_r4_2100 = r5_r4_8771
	word32 r9_r8_8705 = r9_r8_8699
	dwArg00_8966 = dwArg00_8640 (alias)
	branch v259_4633 l00009E94
l00009E94:
	word32 r3_r2_8715
	Mem513[r3_r2_2099 + r5_r4_2100:byte] = SLICE(r9_r8_8705, byte, 16)
	word32 r5_r4_518 = Mem513[r12 + 0x14<32>:word32]
	word16 r0_515 = Mem513[r12 + 0x2410<32>:word16]
	word32 r3_r2_517 = Mem513[r12 + 8<32>:word32]
	Mem527[r12 + 0x14<32>:word32] = r5_r4_518 + 1<32>
	word32 r3_r2_530 = r3_r2_517 + r5_r4_518
	Mem534[r3_r2_530:byte] = SLICE(r0_515 >>u 8<8>, byte, 0)
	word16 r0_535 = Mem534[r12 + 0x2414<32>:word16]
	word16 r2_538 = SEQ(SLICE(r3_r2_530, byte, 8), SLICE(r0_535, byte, 0))
	r1_1020 = __l_shift<word16,word16>(r1_1062, r2_538)
	Mem546[r12 + 0x2410<32>:word16] = r1_1020
	Mem550[r12 + 0x2414<32>:word16] = r0_535
	word16 r8_556 = SLICE(r9_r8_8705, word16, 0)
	sp_1221 = fp - 14<i32>
	word16 r5_522 = SLICE(r5_r4_518, word16, 16)
	r4_3127 = SLICE(r5_r4_518, word16, 0) (alias)
	r7_3597 = SLICE(r5_r4_518 + 1<32>, word16, 16) (alias)
	branch wLoc0E != 0<16> l00009C28
l00009C28:
	r7_3597 = SLICE(r5_r4_518 + 0xB<32>, word16, 16) (alias)
	dwLoc0A = r9_r8_8705 + (r5_r4_518 + 0xB<32>)
	r10 = SLICE(r13, word16, 0)
l00009EEE:
	word16 r8_572 = Mem566[r12 + 0x1530<32>:word16]
	word16 r5_573 = Mem566[r12 + 0x152C<32>:word16]
	word16 r9_575 = __a_shift<word16,word16>(r5_573, r7_3597)
	Mem580[r12 + 0x2410<32>:word16] = r9_575
	r0_1187 = 0x10<16>
	r3_r2_8715 = SEQ(wLoc0E | r9_575, r2_538) (alias)
	dwLoc0A = SEQ(r9_575, r8_572 - 0x10<16>) (alias)
	r5_r4_518 = SEQ(r5_573, r8_556) (alias)
l00009ECE:
	r11 = 0<16>
	r0_1187 = 0x8A<16>
	r10 = wLoc0E
	ra = ra + 4<32>
	word16 r9_591 = SLICE(dwLoc0A, word16, 16)
	r8_1217 = SLICE(dwLoc0A, word16, 0) (alias)
	branch ra != dwLoc0A l00009C46
l00009C46:
	branch ra == dwLoc0A l00009C96
l00009C48:
	r3_r2_8715 = SEQ(wLoc0E, 3<16>) (alias)
	branch r1_1020 > 3<16> l00009F06
l00009F06:
	r2_1555 = SLICE(r3_r2_8715, word16, 0) (alias)
	r9_1528 = SLICE(dwLoc0A, word16, 16) (alias)
	r11 = 0<16>
	word16 r8_601 = SLICE(dwLoc0A, word16, 0)
	r3_r2_132 = r3_r2_8715 (alias)
	r9_r8_9029 = dwLoc0A (alias)
	branch r7_3597 > r0_1187 l0000A204
l00009F0C:
	Mem604[r12 + 0x2414<32>:word16] = r8_601
	r3_1570 = __a_shift<word16,word16>(0xFFFE<16>, r8_601) | r9_1528
	Mem612[r12 + 0x2410<32>:word16] = r9_1528
	word16 r7_602 = r7_3597 + r8_601
	r11 = 0xFFFE<16>
	r5_r4_281 = r5_r4_518 (alias)
	branch r8_601 >= 0xD<16> l0000A296
l00009F26:
	word32 r1_r0_615 = Mem612[r12 + 8<32>:word32]
	word32 r3_r2_616 = Mem612[r12 + 0x14<32>:word32]
	Mem625[r12 + 0x14<32>:word32] = r3_r2_616 + 1<32>
	Mem632[r1_r0_615 + r3_r2_616:byte] = SLICE(r9_1528, byte, 0)
	word32 r3_r2_636 = Mem632[r12 + 0x14<32>:word32]
	word16 r6_633 = Mem632[r12 + 0x2410<32>:word16]
	word32 r1_r0_635 = Mem632[r12 + 8<32>:word32]
	Mem645[r12 + 0x14<32>:word32] = r3_r2_636 + 1<32>
	word32 r1_r0_648 = r1_r0_635 + r3_r2_636
	Mem652[r1_r0_648:byte] = SLICE(r6_633 >>u 8<8>, byte, 0)
	r0_1187 = Mem652[r12 + 0x2414<32>:word16]
	byte v131_654 = SLICE(r0_1187, byte, 0)
	r1_1062 = SEQ(SLICE(r1_r0_648, byte, 24), v131_654)
	word16 r11_663 = __l_shift<word16,word16>(0xFFFE<16>, r1_1062)
	Mem664[r12 + 0x2410<32>:word16] = r11_663
	Mem667[r12 + 0x2414<32>:word16] = r0_1187
	r2_1555 = SLICE(r3_r2_636, word16, 0) (alias)
	r5_1845 = SLICE(r3_r2_636 + 1<32>, word16, 16) (alias)
	r4_1589 = SLICE(r3_r2_636, word16, 0) + 1<16> (alias)
	word16 r8_662 = SEQ(SLICE(r8_601, byte, 8), 0x10<8> - v131_654)
	r11 = r11_663 + 0xFFF3<16>
l00009B80:
	word32 r7_r6_8626
	word32 r11_r10_8623
	word32 r9_r8_8629
	r13 = SEQ(SLICE(r13, word16, 16), 4<16>)
	bool v262_4636 = r0_1187 <=u 0<16>
	word32 dwArg00_8891 = dwArg00_8966
	word32 r9_r8_8661 = SEQ(r9_1528, r8_662)
	word32 r7_r6_8981 = SEQ(r7_602, r6_633 >>u 8<8>)
	branch r0_1187 == 0<16> l000098DA
l000098DA:
	word32 r9_r8_8702
	word32 r7_r6_8820
	word32 dwArg00_8888
	word32 r7_r6_8984
	word32 r7_r6_8987
	word16 r1_1186
	word16 r4_2054
	word16 r7_4566 = SLICE(r7_r6_8981, word16, 16)
	word16 r6_693 = SLICE(r7_r6_8981, word16, 0)
	word32 dwArg00_8783 = dwArg00_8891
	word32 r7_r6_8920 = r7_r6_8981
	branch v262_4636 l00009990
l000098DC:
	r2_1555 = Mem685[CONVERT(r2_1555, word16, word32) * 2<32> + sp_1221 + 0x40<32>:word16] - r1_1062
	dwArg00_8783 = dwArg00_8891 (alias)
	r7_r6_8920 = r7_r6_8981 (alias)
	branch r1_1062 >= 0<16> l00009990
l000098EC:
	r4_2054 = 0xB<16>
	dwArg00_8888 = dwArg00_8891 (alias)
	r7_r6_8984 = SEQ(r7_4566, r6_693 + 0xB<16>) (alias)
l000098F2:
	word16 r7_4565 = SLICE(r7_r6_8984, word16, 16)
	word16 r6_724 = SLICE(r7_r6_8984, word16, 0)
	word16 r1_697 = r1_1062 * 2<16>
	r2_1555 = r10
	r4_1589 = r4_2054 + r10
	dwArg00_8783 = dwArg00_8888 (alias)
	r7_r6_8920 = r7_r6_8984 (alias)
	branch SLICE(r13, word16, 0) <=u r10 l00009990
l000098FC:
	r2_1555 = Mem717[CONVERT(r10, word16, word32) * 2<32> + sp_1221 + 0x40<32>:word16] - r1_697
	dwArg00_8783 = dwArg00_8888 (alias)
	r7_r6_8920 = r7_r6_8984 (alias)
	branch r1_697 >= 0<16> l00009990
l0000990C:
	r1_1186 = r1_697 * 2<16>
	r2_1555 = r10
	r4_1589 = r10 + 0xC<16>
	dwArg00_8783 = dwArg00_8888 (alias)
	r7_r6_8920 = SEQ(r7_4565, r6_724 + 0xC<16>) (alias)
	branch SLICE(r13, word16, 0) <=u r10 l00009990
l0000991A:
	r2_1555 = Mem717[CONVERT(r10, word16, word32) * 2<32> + sp_1221 + 0x40<32>:word16] - r1_697 * 2<16>
	dwArg00_8783 = dwArg00_8888 (alias)
	r7_r6_8987 = SEQ(r7_4565, r6_724 + 0xC<16>) (alias)
l00009926:
	word16 r8_4574 = SLICE(r9_r8_8661, word16, 0)
	word16 r7_4564 = SLICE(r7_r6_8987, word16, 16)
	word16 r6_749 = SLICE(r7_r6_8987, word16, 0)
	r7_r6_8920 = r7_r6_8987 (alias)
	branch r1_1186 >= 0<16> l00009990
l0000992A:
	word16 r1_751 = r1_1186 * 2<16>
	r2_1555 = r10
	r4_1589 = r10 + 0xD<16>
	r7_r6_8920 = SEQ(r7_4564, r6_749 + 0xD<16>) (alias)
	branch SLICE(r13, word16, 0) <=u r10 l00009990
l00009938:
	r2_1555 = Mem770[CONVERT(r10, word16, word32) * 2<32> + sp_1221 + 0x40<32>:word16] - r1_751
	r7_r6_8920 = SEQ(r7_4564, r6_749 + 0xD<16>) (alias)
	branch r1_751 >= 0<16> l00009990
l00009948:
	r2_1555 = r10
	r4_1589 = r10 + 0xE<16>
	r7_r6_8920 = SEQ(r7_4564, r6_749 + 0x1B<16>) (alias)
	branch SLICE(r13, word16, 0) <=u r10 l00009990
l00009956:
	r2_1555 = Mem770[CONVERT(r10, word16, word32) * 2<32> + sp_1221 + 0x40<32>:word16] - r1_751 * 2<16>
	r7_r6_8920 = SEQ(r7_4564, r6_749 + 0x1B<16>) (alias)
	branch r1_751 * 2<16> >= 0<16> l00009990
l00009966:
	r2_1555 = r10
	r4_1589 = r10 + 0xF<16>
	r7_r6_8920 = SEQ(r7_4564, r6_749 + 0x2A<16>) (alias)
	branch SLICE(r13, word16, 0) <=u r10 l00009990
l00009974:
	r2_1555 = Mem770[CONVERT(r10, word16, word32) * 2<32> + sp_1221 + 0x40<32>:word16] - r1_751 * 4<16>
	r7_r6_8920 = SEQ(r7_4564, r6_749 + 0x2A<16>) (alias)
	branch r1_751 * 4<16> >= 0<16> l00009990
l00009984:
	Mem825[sp_1221 + 0x84<32>:word16] = 0x10<16>
	dwArg00_8640 = dwArg00_8783 (alias)
	r9_r8_8702 = SEQ(0x10<16>, r8_4574) (alias)
	r7_r6_8820 = SEQ(r7_4564, r6_749 + 0x3A<16>) (alias)
l00009994:
	word32 r1_r0_8632
	word32 r9_r8_8823
	word16 r5_1905
	bool F_3050
	byte v143_830 = Mem829[sp_1221 + 0x42<32>:byte]
	r3_1570 = Mem829[sp_1221 + 0xA4<32>:word16]
	Mem837[sp_1221 + 0xA4<32>:word16] = r3_1570
	word16 wArg3A_5603 = SLICE(dwArg3A, word16, 0)
	word16 wArgC2_5502 = SLICE(dwArgC0, word16, 16)
	word16 wArg02_5187 = SLICE(dwArg00_8640, word16, 16)
	word16 wLoc04_5398 = SLICE(dwLoc04, word16, 0)
	word16 wArg00_5119 = SLICE(dwArg00_8640, word16, 0)
	word16 wArgA2_5922 = SLICE(dwArgA0, word16, 16)
	byte bArg44_5274 = SLICE(wArg44, byte, 0)
	byte bArg45_7222 = SLICE(wArg44, byte, 8)
	r6 = SLICE(r7_r6_8820, word16, 0) (alias)
	word16 r8_850 = SLICE(r9_r8_8702, word16, 0)
	word16 r9_849 = SLICE(r9_r8_8702, word16, 16)
	r2_1555 = SEQ(SLICE(r2_1555, byte, 8), v143_830)
	word16 r1_840 = CONVERT(r3_1570 <u 0x354<16>, bool, int16)
	branch r1_840 == 0<16> l000099BA
l000099B0:
	byte v144_843 = Mem837[sp_1221 + 0x6D<32>:byte]
	r4_1589 = SEQ(SLICE(r4_1589, byte, 8), v144_843)
	branch v144_843 != 0<8> l00009228
l00009228:
	r1_r0_8632 = SEQ(r1_840, r0_1187) (alias)
	r9_r8_8823 = r9_r8_8702 | 0xA4EC5400<32> (alias)
l000099BA:
	r5_1845 = Mem837[sp_1221 + 0xA4<32>:word16]
	wArg3A_5603 = SLICE(dwArg3A, word16, 0) (alias)
	r1_1062 = CONVERT(r5_1845 <u 0x250<16>, bool, int16)
	branch r1_1062 == 0<16> l000099D2
l000099C8:
	byte v146_861 = Mem837[sp_1221 + 0x6C<32>:byte]
	word16 r8_863 = SEQ(SLICE(r8_850, byte, 8), v146_861)
	branch v146_861 != 0<8> l00009210
l00009210:
	word32 sp_867 = sp_1221 + 0xFF90<32>
	Mem874[sp_867 + 0x98<32>:word32] = SEQ(r4_1589, r3_1570)
	r1_r0_8632 = Mem874[sp_867 + 0x86<32>:word32]
	Mem878[sp_867 + 0xA8<32>:word32] = r1_r0_8632
	word32 r4_r3_879 = Mem878[sp_867 + 0x8A<32>:word32]
	Mem882[sp_867 + 0xB0<32>:word32] = r4_r3_879
	r12 = sp_867 + 0x86<32>
	r4_1589 = SLICE(r4_r3_879, word16, 16) (alias)
	r3_1570 = SLICE(r4_r3_879, word16, 0) (alias)
	r9_r8_8823 = SEQ(r9_849, r8_863) (alias)
l0000922A:
	word16 r1_883 = SLICE(r1_r0_8632, word16, 16)
	word16 r0_884 = SLICE(r1_r0_8632, word16, 0)
	sp_1221 = fp
	byte bArg42_5294 = SLICE(r1_883, byte, 0)
	wArg40 = r0_884 (alias)
	wArg48 = r0_884 (alias)
	byte bArg4A_5253 = SLICE(r1_883, byte, 0)
	word16 wArg50_5127 = r0_884
	wArg68 = r0_884 (alias)
	wArg70 = r0_884 (alias)
	word32 r7_r6_8696 = r7_r6_8820
	r9_r8_8699 = r9_r8_8823 (alias)
	r1_1062 = r1_883
	branch r5_1845 == 0<16> l0000927A
l00009252:
	r5_1845 = r5_1845 + 0xFFFF<16>
	word16 r9_922 = SLICE(dwArg98 + 0x20000<32>, word16, 16)
	word16 r8_923 = SLICE(dwArg98, word16, 0)
	r7_r6_8634 = dwArg98
l00009262:
	word32 r7_r6_8634
	word32 r1_r0_937 = CONVERT(Mem928[r7_r6_9229:word16], word16, word32) * 2<32> + fp
	word16 r1_938 = SLICE(r1_r0_937, word16, 16)
	r3_1570 = Mem928[r1_r0_937 + 0x40<32>:word16]
	Mem943[SEQ(r1_938 + 1<16>, SLICE(r1_r0_937, word16, 0)) + 0x40<32>:word16] = r3_1570
	word16 r6_926 = SLICE(r7_r6_9229, word16, 0)
	word16 r7_946 = SLICE(r7_r6_9229 + 2<32>, word16, 16)
	r1_1062 = r1_938 + 1<16>
	r7_r6_8634 = SEQ(r7_946, r6_926 + 2<16>) (alias)
	r7_r6_8696 = SEQ(r7_946, r6_926 + 2<16>) (alias)
	r9_r8_8699 = SEQ(r9_922, r8_923) (alias)
	r7_r6_9229 = r7_r6_8634
	branch dwArg98 + 0x20000<32> != r7_r6_9229 + 2<32> l00009262
l0000927A:
	word16 wArg8A_6263 = SLICE(dwArg88, word16, 16)
	word16 wArg92_6380 = SLICE(dwArg90, word16, 16)
	r6 = SLICE(r7_r6_8696, word16, 0) (alias)
	r7_1032 = SLICE(r7_r6_8696, word16, 16) (alias)
	word16 r8_1936 = SLICE(r9_r8_8699, word16, 0)
	r9_1528 = SLICE(r9_r8_8699, word16, 16) (alias)
	r10 = wArg7C
	dwArg50_8845 = r1_r0_8632 (alias)
	dwArg60 = dwArg60_6105
	dwArg78 = dwArg78_5124
	dwArg58 = dwArg58_6213
	branch wArg7C != 0<16> l0000A1C8
l00009284:
	word32 r5_r4_2909
	word32 r7_r6_2910
	bool v265_4639
	word16 r0_2911
	dwArg78_5124 = r1_r0_8632 (alias)
	branch r0_884 != 0<16> l00009338
l00009338:
	r0_1187 = wArg44
	branch wArg44 != 0<16> l0000933E_thunk_fn0000A44A
l0000933E_thunk_fn0000A44A:
	fn0000A44A(SEQ(r3_1570, r2_1555), SEQ(r5_1845, r4_1589), r9_r8_8699, wArg7C, r12, r13, ra, dwArg12, r0_884, dwArgA0)
	r2Out = r2_1006
	r3Out = r3_1007
	r4Out = r4_1008
	r5Out = r5_1009
	r6Out = r6_1010
	r7Out = r7_1011
	r8Out = r8_1012
	r9Out = r9_1013
	r10Out = r10_1002
	r11Out = r11_1003
	r12Out = r12_1004
	r13Out = r13_1005
	raOut = ra_1014
	return r0_1000
l00009342:
	r1_1020 = r0_884
	r5_r4_9077 = SEQ(r5_1845, r4_1589) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_5124
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch r0_884 != 0<16> l0000A2CC
l0000934C:
	word32 r1_r0_1937
	word32 r7_r6_8689
	word32 r1_r0_1923
	word32 r1_r0_1060
	word32 r5_r4_1061
	r13 = SEQ(SLICE(r13, word16, 16), 0xE<16>)
	branch wArg4C != 0<16> l0000A14C
l0000A14C:
l0000A14C_thunk_fn0000A62E:
	fn0000A62E(SEQ(r3_1570, wArg00_5119), r11, r1_r0_8632)
	r2Out = r2_1048
	r3Out = r3_1049
	r4Out = r4_1050
	r5Out = r5_1051
	r6Out = r6_1052
	r7Out = r7_1053
	r8Out = r8_1936
	r9Out = r9_1054
	r10Out = wArg7C
	r11Out = r11
	r12Out = r12_1047
	r13Out = r13
	raOut = ra
	return r0_1045
l0000A14E:
	r1_r0_1060 = Mem955[r12 + 8<32>:word32]
	r5_r4_1061 = Mem955[r12 + 0x14<32>:word32]
	wArg44 = wArg44_7224
l00009358:
	r1_1062 = r0_884
	v259_4633 = r0_884 <u 0<16>
	r3_r2_8768 = SEQ(r3_1570, r2_1555) (alias)
	r5_r4_8771 = SEQ(r5_1845, r4_1589) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch r0_884 != 0<16> l0000A38E
l00009362:
	branch false l0000A1B8
l0000A1B8:
l0000A1B6_thunk_fn0000A5F6:
	fn0000A5F6(SEQ(r3_1570, r2_1555), r11, r12, wArg4E)
	r2Out = r2_1076
	r3Out = r3_1077
	r4Out = r4_1078
	r5Out = r5_1079
	r6Out = r6_1080
	r7Out = r7_1081
	r8Out = r8_1936
	r9Out = r9_1082
	r10Out = wArg7C
	r11Out = r11
	r12Out = r12_1074
	r13Out = r13_1075
	raOut = ra
	return r0_1072
l0000A1BA:
	Mem1089[r12 + 0x2414<32>:word16] = r0_884
	r2Out = r2_1555
	r3Out = r3_1570
	r4Out = r4_1589
	r5Out = r5_1845
	r6Out = r6 + r0_884
	r7Out = wLoc06
	r8Out = r8_1936
	r9Out = r9_1528
	r10Out = wArg7C
	r11Out = r11
	r12Out = r12
	r13Out = dwLoc04
	raOut = ra
	return wArg00_5119
l00009368:
	r1_1062 = wArg54
	branch wArg54 != 0<16> l0000A1AE
l0000936E_thunk_fn0000A19A:
	fn0000A19A(r6, wArg7C, r12)
l00009372:
	dwArg00_9171 = dwArg00_8640 (alias)
	dwArg60 = dwArg60_6105
	dwArg90 = dwArg90_6381
	dwArg88 = dwArg88_6264
	dwArg58 = dwArg58_6213
	dwArg50_5060 = dwArg50_6549
	dwArg78 = dwArg78_6161
	dwArgA0 = dwArgA0_5924
	wArg44 = wArg44_7224
	branch false l0000A250
l00009378:
	r1_r0_8540 = SEQ(r0_884, wArg44) (alias)
	r3_r2_8848 = SEQ(r3_1570, r2_1555) (alias)
	r5_r4_9112 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9149 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch r0_884 != 0<16> l0000A246
l00009382:
	r5_r4_9115 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9152 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch false l0000A2A0
l00009388:
	r1_1062 = wArg5C
	r5_r4_281 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_8966 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch wArg5C != 0<16> l0000A296
l00009392:
	v250_4624 = false
	dwArg00_9106 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch false l0000A2F0
l00009398:
	r1_1062 = r0_884
	v250_4624 = r0_884 == 0<16>
	r7_r6_8549 = r7_r6_8696 (alias)
	r5_r4_383 = SEQ(r5_1845, r4_1589) (alias)
	r3_r2_382 = SEQ(r3_1570, r2_1555) (alias)
	dwArg00_9109 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch r0_884 != 0<16> l0000A2E6
l000093A2:
	r7_r6_8689 = r7_r6_8696 (alias)
	r1_r0_1937 = SEQ(r0_884, wArg44) (alias)
	r5_r4_1938 = SEQ(r5_1845, r4_1589) (alias)
	wArg44 = wArg44_7224
	branch false l0000A16A
l000093AA:
	r3_r2_8718 = SEQ(r3_1570, r2_1555) (alias)
	r5_r4_9100 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9141 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch wArg64 != 0<16> l0000A3A0
l000093B4:
	r1_r0_1923 = SEQ(wArg64, wArg44) (alias)
	wArg44 = wArg44_7224
	branch false l0000A15A
l000093BA:
	r3_r2_8718 = SEQ(r3_1570, r2_1555) (alias)
	r5_r4_9100 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9141 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch r0_884 != 0<16> l0000A3A0
l0000A3A0:
	r11 = r11 + 0x100<16>
	r3_r2_8546 = r3_r2_8718 (alias)
	r5_r4_9091 = r5_r4_9100 (alias)
	dwArg00_9134 = dwArg00_9141 (alias)
l000093C4:
	branch false l0000A148
l000093CC:
	r1_1062 = wArg6C
	v265_4639 = wArg6C == 0<16>
	dwArgA0 = dwArgA0_5924
	wArg44 = wArg44_7224
	branch wArg6C != 0<16> l0000A39A
l000093D6:
	branch false l0000A138
l000093DC:
	r1_1062 = r0_884
	v265_4639 = r0_884 == 0<16>
	dwArgA0 = dwArgA0_5924
	wArg44 = wArg44_7224
	branch r0_884 != 0<16> l0000A39A
l000093E6:
	dwArg00_9206 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch false l0000A35C
l000093EC:
	r7_r6_8563 = r7_r6_8696 (alias)
	r5_r4_3168 = SEQ(r5_1845, r4_1589) (alias)
	r1_r0_3167 = SEQ(wArg74, wArg44) (alias)
	dwArg00_9066 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch wArg74 != 0<16> l0000A352
l000093F6:
	r5_r4_8526 = SEQ(r5_1845, r4_1589) (alias)
	r3_r2_7 = SEQ(r3_1570, r2_1555) (alias)
	dwArg50_8947 = r1_r0_8632 (alias)
	dwArg00_9203 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg60 = dwArg60_6105
	dwArg78 = dwArg78_6161
	dwArg58 = dwArg58_6213
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	wArg44 = wArg44_7224
	branch true l0000A114
l000093FC:
	word16 r9_1174 = 0xE<16>
	branch r0_884 != 0<16> l0000A394
l0000A394:
	Mem1179[SEQ(r3_1570, r2_1555) + r13:byte] = SLICE(wArg44, byte, 0)
	r5_r4_9036 = SEQ(r5_1845, r4_1589) (alias)
	r9_r8_9050 = SEQ(0xE<16>, r8_1936) (alias)
	dwArg00_9097 = dwArg00_8640 (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
l0000A396:
	Mem1185[r12 + 0x2414<32>:word16] = r6
	r5_r4_9008 = r5_r4_9036 (alias)
	r9_r8_8699 = r9_r8_9050 (alias)
	dwArg00_9083 = dwArg00_9097 (alias)
l00009408:
	word32 r3_r2_8724
	word32 r11_r10_8746
	word32 r5_r4_8752
	word32 r7_r6_8863
	bool v275_4649
	r1_1186 = 2<16>
	r0_1187 = wArg44 - 2<16>
	r9_r8_8661 = SEQ(0xE<16>, r8_1936) (alias)
	word32 r5_r4_8758 = SEQ(r5_1845, r4_1589)
	r11_r10_8858 = SEQ(r11, wArg7C) (alias)
	dwArg90 = dwArg90_6381
	branch true l000097F6
l00009412:
	word32 r5_r4_8667
	word32 r5_r4_8805
	word16 r9_2098
	word16 r1_1192 = 4<16>
	r3_1193 = r0_884 - 4<16>
	r9_r8_8661 = SEQ(0xE<16>, r8_1936) (alias)
	word32 r11_r10_8953 = SEQ(r11, wArg7C)
	dwArg90 = dwArg90_6381
	branch true l000097E8
l00009420:
	r1_1192 = 8<16>
	r4_1199 = wArg4C - 8<16>
	word32 r3_r2_2427 = SEQ(r0_884 - 4<16>, r2_1555)
	word32 r9_r8_8894 = SEQ(0xE<16>, r8_1936)
	word32 r5_r4_8897 = SEQ(r5_1845, wArg4C - 8<16>)
	word32 r11_r10_9003 = SEQ(r11, wArg7C)
	dwArg90 = dwArg90_6381
	branch true l000097DA
l0000942E:
	word32 r3_r2_8672
	word32 r7_r6_2285
	word32 r5_r4_8675
	word32 r5_r4_8814
	word32 r3_r2_8811
	word32 r7_r6_8808
	word32 r5_r4_8914
	bool v278_4652
	r1_1192 = 0x10<16>
	word32 r7_r6_8903 = SEQ(r7_1032, r0_884 - 0x10<16>)
	word32 r3_r2_8909 = SEQ(r0_884 - 4<16>, r2_1555)
	word32 r9_r8_8969 = SEQ(0xE<16>, r8_1936)
	word32 r11_r10_9033 = SEQ(r11, wArg7C)
	dwArg90 = dwArg90_6381
	branch true l000097CC
l0000943C:
	word16 r1_1210 = 0x20<16>
	word16 r7_1211 = wArg54 - 0x20<16>
	word32 r7_r6_8900 = SEQ(wArg54 - 0x20<16>, r0_884 - 0x10<16>)
	word32 r3_r2_8906 = SEQ(r0_884 - 4<16>, r2_1555)
	word32 r5_r4_8975 = SEQ(r5_1845, wArg4C - 8<16>)
	word32 r9_r8_9015 = SEQ(0xE<16>, r8_1936)
	word32 r11_r10_9057 = SEQ(r11, wArg7C)
	dwArg90 = dwArg90_6381
	branch true l000097BE
l0000944A:
	word32 r9_r8_8780
	word32 r11_r10_8774
	word32 r7_r6_8972
	word32 r5_r4_9018
	r1_1210 = 0x40<16>
	r8_1217 = r0_884 - 0x40<16>
	branch true l000097B0
l000097B0:
	sp_1221 = fp - 2<i32>
	dwLoc04 = SEQ(r2_1555, wLoc04_5398) (alias)
	r7_r6_8972 = SEQ(wArg54 - 0x20<16>, r0_884 - 0x10<16>) (alias)
	r5_r4_9018 = SEQ(r5_1845, wArg4C - 8<16>) (alias)
	r9_r8_8780 = SEQ(0xE<16>, r0_884 - 0x40<16>) (alias)
	r11_r10_8774 = SEQ(r11, wArg7C) (alias)
	dwArgC0 = dwArgC0_5503
	dwArg90 = dwArg90_6381
l00009458:
	word32 r3_r2_8678
	word32 r5_r4_2049
	word16 r6_2057
	word16 r1_1225 = 0x80<16>
	bool v269_4643 = true
	dwArgC0_5503 = SEQ(wArgC2_5502, wArg5C) (alias)
	r11_r10_8774 = SEQ(wArg5C - 0x80<16>, wArg7C) (alias)
	word32 r7_r6_8777 = SEQ(wArg54 - 0x20<16>, r0_884 - 0x10<16>)
	r9_r8_8780 = SEQ(0xE<16>, r0_884 - 0x40<16>) (alias)
	dwArgC0 = dwArgC0_5503
	dwArg90 = dwArg90_6381
	branch true l0000979E
l0000946A:
	word16 wArg80_5180 = r0_884
	word16 r1_1232 = 0x100<16>
	word32 r11_r10_8879 = SEQ(r0_884 - 0x100<16>, wArg7C)
	word32 r7_r6_8882 = SEQ(wArg54 - 0x20<16>, r0_884 - 0x10<16>)
	word32 r9_r8_8885 = SEQ(0xE<16>, r0_884 - 0x40<16>)
	dwArgC0 = dwArgC0_5503
	dwArg90 = dwArg90_6381
	branch true l00009788
l00009480:
	word32 r9_r8_8963
	r11 = 0x200<16>
	branch true l00009770
l00009770:
	ra = dwArg00_8640
	sp_1221 = fp + 4<i32>
	r9_r8_8963 = SEQ(0xE<16>, r0_884 - 0x40<16>) (alias)
	dwArgC0 = dwArgC0_5503
	dwArg90 = dwArg90_6381
l00009498:
	r11 = 0x400<16>
	r1_1020 = r0_884 - 0x400<16>
	word16 wArg94_5191 = 0x400<16>
	bool v272_4646 = false
	dwArgC0 = dwArgC0_5503
	branch true l0000975A
l000094AE:
	r1_1020 = 0x800<16>
	word32 r3_r2_2111 = SEQ(r0_884 - 4<16>, r2_1555)
	dwArgC0 = dwArgC0_5503
	branch true l00009742
l000094C6:
	word32 r1_r0_1615
	word32 r5_r4_8817
	word32 r5_r4_8917
	wArg94_5191 = r0_884
	r11 = r0_884 - 0x1000<16>
	word32 r3_r2_1760 = SEQ(r0_884 - 4<16>, r2_1555)
	word32 r5_r4_8978 = SEQ(r5_1845, wArg4C - 8<16>)
	dwArgC0 = dwArgC0_5503
	branch true l0000972C
l000094DC:
	word32 r5_r4_9021
	word16 wArgA0_5196 = wArg74
	r11 = 0x2000<16>
	wArgB8 = 0x2000<16>
	dwArgC0 = dwArgC0_5503
	branch true l00009714
l000094F4:
	r11 = 0x4000<16>
	wArgB8 = 0x4000<16>
	dwArg78_6161 = r1_r0_8632 (alias)
	word32 r5_r4_9045 = SEQ(r5_1845, wArg4C - 8<16>)
	dwArgC0 = dwArgC0_5503
	branch true l000096FE
l0000950A:
	branch true l00009602
l00009514:
	branch false l00009528
l00009518:
	branch CONVERT(r2_1555 == 0<16>, bool, int16) != 0<16> l00009602
l00009520:
	branch true l00009602
l00009602:
	r2Out = r2_1555
	r3Out = r0_884 - 4<16>
	r4Out = wArg4C - 8<16>
	r5Out = r5_1845
	r6Out = r0_884 - 0x10<16>
	r7Out = wLoc06
	r8Out = r0_884 - 0x40<16>
	r9Out = 0xE<16>
	r10Out = wArg7C - 0x4000<16>
	r11Out = 0x8000<16>
	r12Out = r12
	r13Out = dwLoc04
	raOut = ra
	return 0xFFFF<16>
l00009528:
	r12 = dwArgB0
	r10 = Mem1288[dwArgB0:word16]
	wArg02_5187 = 0<16>
	r6 = r0_884 + (wArg44 - 2<16>)
	word16 r8_1357 = r0_884 + (wArg44 - 2<16>)
	r11 = wArg74 + (wArg44 - 2<16>)
	word16 r1_1363 = r0_884 + (wArg44 - 2<16>)
	dwArg3A = SEQ(wArg44 - 2<16>, wArg3A_5603) (alias)
	dwArg12 = SEQ(wArg44 - 2<16>, wArg44 - 2<16>) (alias)
	dwArg88_6264 = SEQ(wArg8A_6263, r0_884) (alias)
	dwArg90_6381 = SEQ(wArg92_6380, wArg6C) (alias)
	branch r5_1845 == 0<16> l000095BA
l00009590:
	r7_r6_8643 = dwArg98
l00009596:
	word32 r7_r6_8643
	word16 r6_1372 = SLICE(r7_r6_8643, word16, 0)
	word16 r0_1375 = Mem1374[r7_r6_8643:word16]
	branch r0_1375 == 0<16> l000095F8
l000095F8:
	r1_1363 = r1_1363 + 1<16>
	r6 = r6_1372 + 2<16> (alias)
	r7_r6_8643 = SEQ(SLICE(r7_r6_8643 + 2<32>, word16, 16), r6_1372 + 2<16>) (alias)
	branch r5_1845 != 0<16> l00009596
l00009600:
l0000959C:
	word32 r1_r0_1396 = CONVERT(r0_1375, word16, word32) * 2<32> + fp
	word16 r4_1399 = Mem1374[r1_r0_1396:word16]
	Mem1402[r1_r0_1396:word16] = 1<16>
	word32 r1_r0_1410 = CONVERT(r4_1399 + 1<16>, word16, word32) * 2<32> + CONVERT(r3_1881 <u 0xFFFD<16>, bool, word32)
	Mem1413[r1_r0_1410:word16] = 0<16>
	r8_1357 = 1<16>
	r1_1363 = SLICE(r1_r0_1410, word16, 16) + 1<16>
	r6 = r6_1372 + 2<16> (alias)
	r7_r6_8643 = SEQ(SLICE(r7_r6_8643 + 2<32>, word16, 16), r6_1372 + 2<16>) (alias)
	branch r5_1845 != 0<16> l00009596
l000095BA:
	branch r10 <=u 0xE<16> l000095C0
l000095BE:
	r10 = 0xE<16>
l000095C0:
	wArg94_5191 = r10
	branch r10 >=u 0xE<16> l000095CC
l000095C8:
	wArg94_5191 = 0xE<16>
l000095CC:
	byte bArg6C_5258
	word32 dwArgD0_5256
	word32 dwArgC8_5255
	word32 r5_r4_1448 = Mem1444[dwArgA8:word32]
	word16 r5_1449 = SLICE(r5_r4_1448, word16, 16)
	word16 r5_1454 = SEQ(SLICE(r5_1449, byte, 8), bArg4A_5253)
	r3_1447 = SLICE(dwArgA8, word16, 0) (alias)
	word16 r4_1450 = SLICE(r5_r4_1448, word16, 0)
	dwArgC0 = r5_r4_1448
	word16 r0_1455 = __a_shift<word16,word16>(1<16>, r5_1454)
	branch r2_1555 == 0<16> l0000963C
l0000963C:
	dwArgC8_5255 = ra
	dwArgD0_5256 = ra
	wArgA0_5196 = 0x14<16>
	bArg6C_5258 = v143_830
l000095E2:
	branch r2_1555 != 1<16> l0000960C
l0000960C:
	byte v177_1478 = CONVERT(r2_1555 == 2<16>, bool, byte)
	bArg6C_5258 = v177_1478
	branch CONVERT(r0_1455 <u 0x250<16>, bool, int16) == 0<16> l00009626
l0000961E:
	branch v177_1478 != 0<8> l000095EE
l00009626:
	wArg50_5127 = 0<16>
	dwArgC8_5255 = 0xF15A<32>
	r3_1447 = 0xF19A<16> (alias)
	dwArgD0_5256 = 0xF19A<32>
l00009650:
	word16 r1_1549 = Mem1537[ra:word16]
	r12 = r5_r4_1448
	wArgB8 = 0xFFFF<16>
	r6 = 0xE<16>
	r7_1211 = 1<16>
	wArgBC = r0_1455
	wArg80_5180 = 0<16>
	r11 = 0xD<16>
	r9_1528 = 0<16>
	r10 = 0xF3<16>
	bArg44_5274 = 0xD<8>
	r0_1187 = 1<16>
	word16 r1_1551 = r1_1549 + 1<16>
	r8_1554 = SEQ(SLICE(wArg94_5191, byte, 8), 0<8>)
	r2_1555 = wArgA0_5196
	dwArgA0_5924 = SEQ(wArgA2_5922, wArgA0_5196) (alias)
	wArg6C = SEQ(CONVERT(r2_1555 == 1<16>, bool, byte), bArg6C_5258) (alias)
	branch wArgA0_5196 >u 1<16> l000096BE
l000096A2:
	wArg44_7224 = SEQ(bArg45_7222, 0xD<8>) (alias)
	branch wArgA0_5196 >u r1_1549 + 1<16> l00009D90
l00009D90:
	sp_1221 = fp - 2<i32>
	dwArg00_9185 = CONVERT(wArg00_5119, word16, uint32) (alias)
	dwArgA0 = dwArgA0_5924
	dwLoc04 = dwLoc04_5400
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
l00009D92:
	r9_1528 = Mem1561[ra:word16]
	r1_1062 = 1<16>
	r11 = 0xE<16>
	v275_4649 = true
	dwLoc04_5400 = SEQ(r9_1528, wLoc04_5398) (alias)
	r3_r2_8724 = SEQ(r3_1447, wArgA0_5196) (alias)
	r11_r10_8746 = 0xE00F3<32> (alias)
	r5_r4_8752 = SEQ(r5_1454, 0<16>) (alias)
	r7_r6_8863 = 0x1000E<32> (alias)
	dwLoc04 = dwLoc04_5400
	dwArg90 = dwArg90_6381
	wArg44 = wArg44_7224
	branch false l00009ADA
l00009DA0:
	r7_1032 = Mem1563[r5_r4_1448 + 0x2414<32>:word16]
	r3_1570 = Mem1563[r5_r4_1448 + 0x2410<32>:word16]
	r5_r4_3284 = SEQ(r5_1454, 0<16>) (alias)
	r1_r0_8616 = 0x10001<32> (alias)
	dwArg00_9193 = CONVERT(wArg00_5119, word16, uint32) (alias)
	dwArgA0 = dwArgA0_5924
	dwLoc04 = dwLoc04_5400
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch false l0000A02A
l00009DAE:
	r5_r4_8817 = SEQ(r5_1454, 0<16>) (alias)
	dwLoc04 = dwLoc04_5400
	wArg44 = wArg44_7224
	branch false l00009E1A
l00009DB2:
	word16 r4_1584 = Mem1563[r5_r4_1448 + 0x1874<32>:word16]
	word16 r5_1585 = Mem1563[r5_r4_1448 + 0x1870<32>:word16]
	Mem1591[r5_r4_1448 + 0x2410<32>:word16] = r3_1570
	r4_1589 = r4_1584 - 0x10<16>
	r1_r0_8543 = SEQ(SLICE(r5_r4_1448 + 0x3CC<32>, word16, 16), 0x10<16>) (alias)
	r9_r8_8841 = SEQ(r9_1528, r8_1554) (alias)
	dwArg00_9149 = CONVERT(wArg00_5119, word16, uint32) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	dwLoc04 = dwLoc04_5400
	branch r7_1032 < 0x10<16> l0000A24E
l00009DD6:
	word32 r1_r0_1594 = Mem1591[r5_r4_1448 + 8<32>:word32]
	word32 r7_r6_1595 = Mem1591[r5_r4_1448 + 0x14<32>:word32]
	Mem1604[r5_r4_1448 + 0x14<32>:word32] = r7_r6_1595 + 1<32>
	Mem1612[r1_r0_1594 + r7_r6_1595:byte] = SLICE(r3_1570, byte, 0)
	r8_1217 = Mem1612[r5_r4_1448 + 0x2410<32>:word16] >>u 8<8>
	r1_r0_1615 = Mem1612[r5_r4_1448 + 8<32>:word32]
	r5_r4_8917 = SEQ(r5_1585, r4_1584 - 0x10<16>) (alias)
	dwLoc04 = dwLoc04_5400
	wArg44 = wArg44_7224
l000096A8:
	word32 r1_r0_1617 = CONVERT(r1_1549 + 1<16>, word16, word32)
	word32 r1_r0_1634 = r1_r0_1617 * 2<32> + dwArgD0_5256
	r8_1554 = SEQ(SLICE(wArg94_5191, byte, 8), Mem1537[dwArgC8_5255 + r1_r0_1617 * 2<32>:byte])
	r0_1187 = SLICE(r1_r0_1634, word16, 0) (alias)
	r1_1551 = Mem1537[r1_r0_1634:word16]
l000096BE:
	word16 r9_1652 = __a_shift<word16,word16>(1<16>, SEQ(SLICE(r5_1449, byte, 8), bArg42_5294))
	word32 r9_r8_1668 = CONVERT(SLICE(r8_1554, byte, 0), byte, word32)
	r10 = 0xF3<16>
	word16 r5_1664 = __l_shift<word16,word16>(0<16>, SEQ(SLICE(r0_1187, byte, 8), 0<8>))
	word16 r0_1665 = r9_1652
	word16 r8_1673 = SLICE(r9_r8_1668, word16, 0)
	r9_1174 = SLICE(r9_r8_1668, word16, 16) (alias)
l000096E0:
	word32 r3_r2_1688 = (CONVERT(r5_1664, word16, word32) << 2<8>) + r5_r4_1448
	Mem1693[r3_r2_1688:word16] = r8_1673
	Mem1695[r3_r2_1688 + 2<32>:word16] = r1_1551
	r0_1665 = r0_1665 + r5_1664
	branch r0_1665 != 0<16> l000096E0
l000096F4:
	r11 = 0xC<16>
	r0_1187 = __a_shift<word16,word16>(1<16>, 0xFFFF<16>)
	r5_r4_9045 = SEQ(r5_1664, 0<16>) (alias)
	dwLoc04 = dwLoc04_5400
l000096FE:
	r5_1845 = SLICE(r5_r4_9045, word16, 16) (alias)
	r4_1199 = SLICE(r5_r4_9045, word16, 0) (alias)
	branch r4_1199 == 0<16> l00009710
l00009706:
	r0_1187 = r0_1187 >>u 0xF<8> & r4_1199
	branch r4_1199 != 0<16> l00009706
l00009710:
	r5_r4_9021 = r5_r4_9045 (alias)
	branch r0_1187 == 0<16> l0000971C
l00009714:
	r0_1187 = r0_1187 + 0xFFFF<16>
	r5_r4_9021 = SEQ(r5_1845, r4_1199 + r0_1187) (alias)
l0000971C:
	r8_1217 = wArg80_5180
	r3_r2_1760 = CONVERT(r11, word16, word32) * 2<32> + fp
	r5_r4_8978 = r5_r4_9021 (alias)
l0000972C:
	r1_1020 = Mem1767[r3_r2_1760 + 0x40<32>:word16]
	Mem1780[r3_r2_1760 + 0x40<32>:word16] = r1_1020
	r4_1199 = SLICE(r5_r4_8978, word16, 0) (alias)
	r3_1193 = SLICE(r3_r2_1760, word16, 16) (alias)
	r9_1174 = r9_1174 + 0xFFFF<16>
	branch r1_1020 != 0<16> l00009754
l0000973A:
	wArg44 = SEQ(bArg45_7222, bArg44_5274) (alias)
	r1_r0_1615 = SEQ(r1_1020, r0_1187) (alias)
	r5_r4_8917 = r5_r4_8978 (alias)
	branch r11 == 0xE<16> l00009DEC
l00009DEC:
	word32 r3_r2_1807 = Mem1806[r12 + 0x14<32>:word32]
	Mem1816[r12 + 0x14<32>:word32] = r3_r2_1807 + 1<32>
	word32 r1_r0_1824 = r1_r0_1615 + r3_r2_1807
	Mem1830[r1_r0_1824:byte] = SLICE(r8_1217, byte, 0)
	Mem1850[r12 + 0x2410<32>:word16] = __l_shift<word16,word16>(SLICE(r5_r4_8917, word16, 16), SEQ(SLICE(r1_r0_1824, byte, 8), Mem1830[r12 + 0x2414<32>:byte]))
	word16 r4_1853 = SLICE(r5_r4_8917, word16, 0)
	Mem1859[r12 + 0x2414<32>:word16] = r4_1853
	r11 = r11 + 0xFFF0<16>
	r6 = SLICE(r3_r2_1807, word16, 0) + 1<16> (alias)
	r7_1032 = r4_1853
	r1_1062 = r11
	r5_r4_8817 = r5_r4_8917 (alias)
l00009E1A:
	word16 r0_1863 = Mem1862[r12 + 0x1528<32>:word16]
	r8_1554 = Mem1862[r12 + 0x1524<32>:word16]
	r9_1528 = __a_shift<word16,word16>(r8_1554, r7_1032)
	Mem1873[r12 + 0x2410<32>:word16] = r9_1528
	r5_1905 = SLICE(r5_r4_8817, word16, 16) (alias)
	r2_1555 = 0x10<16>
	r0_1187 = r0_1863 - 0x10<16>
	branch r7_1032 < 0x10<16> l0000A0C8
l0000A0C8:
	r11 = r11 + 0xFFFE<16>
	r3_1881 = __a_shift<word16,word16>(r11, r8_1554) | r9_1528
	Mem1882[r12 + 0x2410<32>:word16] = r9_1528
	branch r8_1554 < 0xD<16> l00009D76
l00009D76:
	sp_1221 = sp_1221 - 2<i32>
	Mem1898[sp_1221:word16] = r10
	r1_r0_3281 = SEQ(r1_1062, r0_1863 - 0x10<16>) (alias)
	dwArg00_9080 = SEQ(wArg02_5187, wArg00_5119) (alias)
	r3_1570 = r3_1881
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
l00009D78:
	r5_r4_1061 = r5_r4_8817 (alias)
	r1_r0_1060 = SEQ(r1_1062, r0_1863 - 0x10<16>) (alias)
	r3_1570 = r3_1881
	branch r10 == r3_1881 l0000A152
l0000A152:
	Mem1915[r12 + 0x14<32>:word32] = r5_r4_1061 + 1<32>
	r1_r0_1923 = r1_r0_1060 + r5_r4_1061
l0000A15A:
	Mem1933[r1_r0_1923:byte] = SLICE(r10, byte, 0)
	r5_r4_1938 = Mem1933[r12 + 0x14<32>:word32]
	r8_1936 = Mem1933[r12 + 0x2410<32>:word16] >>u 8<8>
	r1_r0_1937 = Mem1933[r12 + 8<32>:word32]
	r7_r6_8689 = SEQ(SLICE(r5_r4_1938 + 1<32>, word16, 16), SLICE(r5_r4_1938, word16, 0) + 1<16>) (alias)
l0000A16A:
	Mem1952[r12 + 0x14<32>:word32] = r7_r6_8689
	Mem1966[r1_r0_1937 + r5_r4_1938:byte] = SLICE(r8_1936, byte, 0)
	r10 = __l_shift<word16,word16>(r3_1570, SEQ(SLICE(r9_1528, byte, 8), SLICE(ra, byte, 0)))
	Mem1998[r12 + 0x2410<32>:word16] = r10
	Mem2006[r12 + 0x2414<32>:word16] = 0xFFF0<16>
	dwArg78 = r1_r0_8632
	r6 = 0xFFF0<16>
	dwArg50_8998 = SEQ(r1_883, wArg50_5127) (alias)
	dwArg00_9209 = SEQ(wArg02_5187, wArg00_5119) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg60 = dwArg60_6105
	dwArg58 = dwArg58_6213
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	branch r11 <u Mem2006[r12 + 0x23EC<32>:word16] l0000A110
l0000A198_thunk_fn0000A19A:
	fn0000A19A(0xFFF0<16>, r10, r12)
l00009D7E:
	branch ra + 4<32> == Mem1898[sp_1221 + 4<32>:word32] l0000A03A
l0000A0DC:
	Mem2027[r12 + 0x2414<32>:word16] = r8_1554
	r3_1570 = r3_1881 + 3<16>
	F_3050 = SLICE(cond(r3_1881 + 3<16>), bool, 5) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
l00009E38:
	word32 r3_r2_2028 = Mem1873[r12 + 8<32>:word32]
	word32 r5_r4_2029 = Mem1873[r12 + 0x14<32>:word32]
	Mem2038[r12 + 0x14<32>:word32] = r5_r4_2029 + 1<32>
	Mem2045[r3_r2_2028 + r5_r4_2029:byte] = SLICE(r9_1528, byte, 0)
	r5_r4_2049 = Mem2045[r12 + 0x14<32>:word32]
	word16 r9_2046 = Mem2045[r12 + 0x2410<32>:word16]
	word32 r3_r2_2048 = Mem2045[r12 + 8<32>:word32]
	Mem2058[r12 + 0x14<32>:word32] = r5_r4_2049 + 1<32>
	word32 r3_r2_2061 = r3_r2_2048 + r5_r4_2049
	Mem2065[r3_r2_2061:byte] = SLICE(r9_2046 >>u 8<8>, byte, 0)
	word16 r7_2066 = Mem2065[r12 + 0x2414<32>:word16]
	word16 r2_2069 = SEQ(SLICE(r3_r2_2061, byte, 8), SLICE(r7_2066, byte, 0))
	word16 r9_2076 = __l_shift<word16,word16>(r8_1554, r2_2069)
	Mem2077[r12 + 0x2410<32>:word16] = r9_2076
	Mem2080[r12 + 0x2414<32>:word16] = r0_1863 - 0x10<16>
	word16 r3_2085 = __a_shift<word16,word16>(r1_1062, r0_1863 - 0x10<16>) | r9_2076
	Mem2086[r12 + 0x2410<32>:word16] = r9_2076
	r5_1845 = SLICE(r5_r4_2049, word16, 16) (alias)
	r4_2054 = SLICE(r5_r4_2049, word16, 0) (alias)
	r6_2057 = SLICE(r5_r4_2049, word16, 0) + 1<16> (alias)
	word16 r7_2079 = r7_2066 + (r0_1863 - 0x10<16>)
	r11 = r11 + 0xFFED<16>
	branch r0_1863 >= 0x1E<16> l00009F74
l00009F74:
	Mem2091[r12 + 0x2414<32>:word16] = r0_1863 - 0x10<16>
l00009B68:
	r13 = SEQ(SLICE(r13, word16, 16), 5<16>)
	dwArg00_8888 = SEQ(wArg02_5187, wArg00_5119) (alias)
	r9_r8_8661 = SEQ(r9_2076, r8_1554) (alias)
	r7_r6_8984 = SEQ(r7_2079, r6_2057) (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	dwArgA0 = dwArgA0_5924
	branch r0_1863 == 0x10<16> l000098F2
l00009B70:
	r9_2098 = 1<16>
	r3_r2_8678 = SEQ(r3_2085, r2_2069 + 2<16>) (alias)
l00009E8A:
	r3_r2_2099 = Mem2086[r12 + 8<32>:word32]
	r5_r4_2100 = Mem2086[r12 + 0x14<32>:word32]
	Mem2110[r12 + 0x14<32>:word32] = r5_r4_2100 + 1<32>
	r9_r8_8705 = SEQ(r9_2076, r8_1554) (alias)
	dwArg00_8966 = SEQ(wArg02_5187, wArg00_5119) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
l00009740:
	r3_r2_2111 = CONVERT(r8_1217, word16, word32)
l00009742:
	word32 r3_r2_2137 = CONVERT(Mem2125[r3_r2_2111 * 2<32> + CONVERT(r3_1881 <u 0xFFFD<16>, bool, word32):word16], word16, word32) * 2<32> + dwArg98
	r4_1199 = SLICE(dwArg98, word16, 0) (alias)
	r3_1193 = SLICE(r3_r2_2137, word16, 16) (alias)
	r11 = Mem2125[r3_r2_2137:word16]
l00009754:
	r5_1845 = wArg94_5191
	v272_4646 = r11 <=u wArg94_5191
l0000975A:
	dwArg00_9120 = SEQ(wArg02_5187, wArg00_5119) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6421
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch v272_4646 l00009CBE
l0000975E:
	r0_1187 = r0_1187 & wArgBC
	r8_1217 = wArgB8
	dwArg90_6421 = SEQ(wArg92_6380, wArgBC) (alias)
	r9_r8_8963 = SEQ(r9_1174, wArgB8) (alias)
	dwArg00_8966 = SEQ(wArg02_5187, wArg00_5119) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6421
	dwArg90 = dwArg90_6421
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	branch wArgB8 == wArgBC l00009CAA
l00009772:
	word16 r9_2171 = SLICE(r9_r8_8963, word16, 16)
	branch r10 != 0<16> l00009778
l00009776:
	r10 = r5_1845
l00009778:
	Mem2196[sp_1221 + 0x84<32>:word16] = r11
	word32 r3_r2_2175 = CONVERT(r9_2171, word16, word32)
	r3_1193 = SLICE(r3_r2_2175 << 2<8>, word16, 16) (alias)
	r2_1555 = SLICE(r3_r2_2175, word16, 0) << 2<16> (alias)
	r12 = r12 + (r3_r2_2175 << 2<8>)
	r1_1232 = r7_1211
	r11_r10_8879 = SEQ(r11, r10 - r11) (alias)
	r7_r6_8882 = SEQ(r7_1211, r11) (alias)
	r9_r8_8885 = r9_r8_8963 (alias)
l00009788:
	word16 r6_2210 = SLICE(r7_r6_8882, word16, 0)
	word16 r8_2765 = SLICE(r9_r8_8885, word16, 0)
	word16 r10_2253 = SLICE(r11_r10_8879, word16, 0)
	word16 r11_2219 = SLICE(r11_r10_8879, word16, 16)
	r1_1225 = __a_shift<word16,word16>(r1_1232, r6_2210)
	branch r11_2219 >=u 0xE<16> l00009B9C
l00009B9C:
l00009B9E_thunk_fn00008C74:
	fn00008C74()
	r2Out = r2_1555
	r3Out = r3_1193
	r4Out = r4_1199
	r5Out = r5_1845
	r6Out = r6_2210
	r7Out = r7_2225
	r8Out = r8_2765
	r9Out = 1<16>
	r10Out = r10_2253
	r11Out = r11_2219
	r12Out = r12
	r13Out = r13_2224
	raOut = ra
	return r0_2223
l00009790:
	r3_1193 = SLICE(CONVERT(r11_2219, word16, word32) * 2<32> + sp_1221, word16, 16) (alias)
	v269_4643 = r1_1225 >= 0<16>
	r11_r10_8774 = r11_r10_8879 (alias)
	r7_r6_8777 = r7_r6_8882 (alias)
	r9_r8_8780 = r9_r8_8885 (alias)
l0000979E:
	r8_1554 = SLICE(r9_r8_8780, word16, 0) (alias)
	r9_2098 = SLICE(r9_r8_8780, word16, 16) (alias)
	r11 = SLICE(r11_r10_8774, word16, 16) (alias)
	word16 r7_2342 = SLICE(r7_r6_8777, word16, 16)
	r10 = SLICE(r11_r10_8774, word16, 0) (alias)
	word16 r6_2248 = SLICE(r7_r6_8777, word16, 0)
	r11_r10_8623 = r11_r10_8774 (alias)
	r7_r6_8626 = r7_r6_8777 (alias)
	r9_r8_8629 = r9_r8_8780 (alias)
	branch v269_4643 l00009B8A
l000097A2:
	r6_2057 = r6_2248 + 1<16>
	r1_1210 = r1_1225 * 2<16>
	r2_1555 = r10
	r3_r2_8678 = SEQ(r3_1193, r10) (alias)
	r5_r4_2049 = SEQ(r5_1845, r10 + 1<16>) (alias)
	r7_r6_8972 = SEQ(r7_2342, r6_2248 + 1<16>) (alias)
	r5_r4_9018 = SEQ(r5_1845, r10 + 1<16>) (alias)
	branch r10 >=u 0xE<16> l00009B72
l00009B72:
	word16 r4_2406 = SLICE(r5_r4_2049, word16, 0)
	word16 r5_2396 = SLICE(r5_r4_2049, word16, 16)
	word16 r2_2263 = SLICE(r3_r2_8678, word16, 0)
	word16 r3_2261 = SLICE(r3_r2_8678, word16, 16)
l00008CA0:
	branch Mem2265[r3_r2_8678 + 0x48<32>:word32] == 0<32> l00008CDE
l00008CA8:
	ra = Mem2265[r3_r2_8678 + 0x38<32>:word32]
	branch ra == 0<32> l00008CDE
l00008CDE:
	r2Out = r2_2263
	r3Out = r3_2261
	r4Out = r4_2406
	r5Out = r5_2396
	r6Out = r6_2057
	r7Out = wLoc06
	r8Out = r8_1554
	r9Out = r9_2098
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = dwLoc04
	return 0xFFFE<16>
l00008CB0:
	r7_r6_2285 = Mem2265[ra:word32]
	r3_r2_8672 = r3_r2_8678 (alias)
	r5_r4_8814 = r5_r4_2049 (alias)
l000097B2:
	word32 r3_r2_2294 = CONVERT(r2_1555, word16, word32) * 2<32> + sp_1221
	r7_r6_8900 = r7_r6_8972 (alias)
	r3_r2_8906 = SEQ(SLICE(r3_r2_2294, word16, 16), Mem2297[r3_r2_2294 + 0x40<32>:word16] - r1_1210) (alias)
	r5_r4_8975 = r5_r4_9018 (alias)
	r9_r8_9015 = r9_r8_8780 (alias)
	r11_r10_9057 = r11_r10_8774 (alias)
l000097BE:
	r8_1554 = SLICE(r9_r8_9015, word16, 0) (alias)
	r9_2098 = SLICE(r9_r8_9015, word16, 16) (alias)
	r5_1845 = SLICE(r5_r4_8975, word16, 16) (alias)
	r11 = SLICE(r11_r10_9057, word16, 16) (alias)
	word16 r3_2352 = SLICE(r3_r2_8906, word16, 16)
	word16 r7_2340 = SLICE(r7_r6_8900, word16, 16)
	r10 = SLICE(r11_r10_9057, word16, 0) (alias)
	word16 r6_2306 = SLICE(r7_r6_8900, word16, 0)
	r7_r6_8808 = r7_r6_8900 (alias)
	r3_r2_8811 = r3_r2_8906 (alias)
	r5_r4_8914 = r5_r4_8975 (alias)
	branch r1_1210 >= 0<16> l00009B60
l000097C4:
	r4_1199 = 2<16>
	r1_1192 = r1_1210 * 2<16>
	r7_r6_8903 = SEQ(r7_2340, r6_2306 + 2<16>) (alias)
	r3_r2_8909 = SEQ(r3_2352, r10) (alias)
	r9_r8_8969 = r9_r8_9015 (alias)
	r11_r10_9033 = r11_r10_9057 (alias)
l000097CC:
	r2_1555 = SLICE(r3_r2_8909, word16, 0) (alias)
	r8_1554 = SLICE(r9_r8_8969, word16, 0) (alias)
	r10 = SLICE(r11_r10_9033, word16, 0) (alias)
	r11 = SLICE(r11_r10_9033, word16, 16) (alias)
	r3_1193 = SLICE(r3_r2_8909, word16, 16) (alias)
	r6 = SLICE(r7_r6_8903, word16, 0) (alias)
	r7_1032 = SLICE(r7_r6_8903, word16, 16) (alias)
	word16 r4_2316 = r4_1199 + r2_1555
	branch r2_1555 >=u 0xE<16> l00009B50
l00009B50:
	word16 r1_2328 = Mem2326[sp_1221 + 0x48<32>:word16]
	r13 = SEQ(SLICE(r13, word16, 16), 3<16>)
	r9_2098 = 3<16>
	v278_4652 = r1_2328 == 0<16>
	r5_r4_8675 = SEQ(r5_1845, r4_2316) (alias)
	branch r1_2328 == 0<16> l00008CB8
l00009B5E:
	r9_2098 = 2<16>
	r7_r6_8808 = r7_r6_8903 (alias)
	r3_r2_8811 = r3_r2_8909 (alias)
	r5_r4_8914 = SEQ(r5_1845, r4_2316) (alias)
l00009B60:
	r7_r6_2285 = r7_r6_8808 (alias)
	r3_r2_8672 = r3_r2_8811 (alias)
	r5_r4_8814 = r5_r4_8914 (alias)
l00008CB2:
	r2_1555 = SLICE(r3_r2_8672, word16, 0) (alias)
	r3_1193 = SLICE(r3_r2_8672, word16, 16) (alias)
	r6 = SLICE(r7_r6_2285, word16, 0) (alias)
	r0_1187 = 0xFFFE<16>
	v278_4652 = r7_r6_2285 == r3_r2_8672
	r5_r4_8675 = r5_r4_8814 (alias)
l00008CB8:
	word16 r4_2404 = SLICE(r5_r4_8675, word16, 0)
	word16 r5_2394 = SLICE(r5_r4_8675, word16, 16)
	branch v278_4652 l00008CBE
l00008CBE:
	r11 = r11 + 0xC0CC<16>
	branch Mem2373[ra + 4<32>:word16] <u 0x1F<16> l00008CBA
l00008CCA:
	r2_1555 = r2_1555 & 2<16>
	branch Mem2373[ra + 8<32>:word16] == 0<16> l00008CBA
l00008CD2:
	Mem2411[ra + 0x18<32>:word32] = r5_r4_8675
	r5_r4_8667 = r5_r4_8675 (alias)
l00008CBA:
	r2Out = r2_1555
	r3Out = r3_1193
	r4Out = r4_2404
	r5Out = r5_2394
	r6Out = r6
	r7Out = wLoc06
	r8Out = r8_1554
	r9Out = r9_2098
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = dwLoc04
	return r0_1187
l000097D4:
	r3_r2_2427 = CONVERT(r2_1555, word16, word32) * 2<32> + sp_1221
	r9_r8_8894 = r9_r8_8969 (alias)
	r5_r4_8897 = SEQ(r5_1845, r4_2316) (alias)
	r11_r10_9003 = r11_r10_9033 (alias)
l000097DA:
	r8_1554 = SLICE(r9_r8_8894, word16, 0) (alias)
	r9_2098 = SLICE(r9_r8_8894, word16, 16) (alias)
	r11 = SLICE(r11_r10_9003, word16, 16) (alias)
	r5_1845 = SLICE(r5_r4_8897, word16, 16) (alias)
	r10 = SLICE(r11_r10_9003, word16, 0) (alias)
	r3_1193 = SLICE(r3_r2_2427, word16, 16) (alias)
	r2_1555 = Mem2434[r3_r2_2427 + 0x40<32>:word16] - r1_1192
	r5_r4_8805 = r5_r4_8897 (alias)
	branch r1_1192 >= 0<16> l00009B3E
l000097E6:
	r4_1589 = 3<16>
	r9_r8_8661 = r9_r8_8894 (alias)
	r11_r10_8953 = r11_r10_9003 (alias)
l000097E8:
	r10 = SLICE(r11_r10_8953, word16, 0) (alias)
	r4_1589 = r4_1589 + r10
	r6 = r6 + r4_1589
	r8_1554 = SLICE(r9_r8_8661, word16, 0) (alias)
	r11 = SLICE(r11_r10_8953, word16, 16) (alias)
	r1_1186 = r1_1192 * 2<16>
	r2_1555 = r10
	r5_r4_8758 = SEQ(r5_1845, r4_1589) (alias)
	r11_r10_8858 = r11_r10_8953 (alias)
	r7_r6_8696 = SEQ(r7_1032, r6) (alias)
	branch r10 >=u 0xE<16> l00009B2E
l00009B2E:
	Mem2461[r13 + 8<32>:byte] = 0xE<8>
	r0_1187 = Mem2461[sp_1221 + 0x44<32>:word16]
	r13 = SEQ(SLICE(r13, word16, 16), 6<16>)
	dwArg00_8783 = SEQ(wArg02_5187, wArg00_5119) (alias)
	r7_r6_8987 = SEQ(r7_1032, r6) (alias)
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7224
	dwArgA0 = dwArgA0_5924
	branch r0_1187 == 0<16> l00009926
l00009B3C:
	r9_2098 = 1<16>
	r5_r4_8805 = SEQ(r5_1845, r4_1589) (alias)
l00009B3E:
	r5_r4_8667 = r5_r4_8805 (alias)
l00008CD4:
	Mem2478[r5_r4_8667 + 0x24<32>:word16] = 0<16>
	r2Out = r2_1555
	r3Out = r3_1193
	r4Out = SLICE(r5_r4_8667, word16, 0)
	r5Out = SLICE(r5_r4_8667, word16, 16)
	r6Out = r6
	r7Out = wLoc06
	r8Out = r8_1554
	r9Out = r9_2098
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	raOut = dwLoc04
	return 0<16>
l000097F6:
	word32 r3_r2_8664
	word32 r5_r4_8950
	word32 r3_r2_2494 = CONVERT(r2_1555, word16, word32) * 2<32> + fp
	word16 wLoc04_6042 = SLICE(dwLoc04, word16, 0)
	word16 r7_2772 = SLICE(r7_r6_8696, word16, 16)
	r8_1554 = SLICE(r9_r8_8661, word16, 0) (alias)
	word16 r9_2747 = SLICE(r9_r8_8661, word16, 16)
	r11 = SLICE(r11_r10_8858, word16, 16) (alias)
	r4_2563 = SLICE(r5_r4_8758, word16, 0) (alias)
	r5_1845 = SLICE(r5_r4_8758, word16, 16) (alias)
	r10 = SLICE(r11_r10_8858, word16, 0) (alias)
	r6_2543 = SLICE(r7_r6_8696, word16, 0) (alias)
	sp_1221 = fp
	r3_2495 = SLICE(r3_r2_2494, word16, 16) (alias)
	r2_2501 = Mem2497[r3_r2_2494 + 0x40<32>:word16] - r1_1186
	branch r1_1186 >= 0<16> l00009B1C
l00009B1C:
	r13 = SEQ(SLICE(r13, word16, 16), 8<16>)
	r3_r2_3158 = SEQ(r3_2495, r2_2501) (alias)
	r5_r4_8606 = r5_r4_8758 (alias)
	r7_r6_8761 = r7_r6_8696 (alias)
	dwArg00_9155 = SEQ(wArg02_5187, wArg00_5119) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7263
	branch r0_1187 == 0<16> l00009A2E
l00009B22:
	r9_2520 = 1<16>
l00008CEE:
	Mem2530[r12 + 0x552C<32>:byte] = SLICE(fp, byte, 0)
	branch SEQ(r3_2495, r2_2501) == 0<32> l00009064
l00008CF8:
	r11_r10_8740 = r11_r10_8858 (alias)
	branch Mem2530[SEQ(r3_2495, r2_2501) + 0x40<32>:word32] == 0<32> l0000905A
l00008D02:
	r1_2545 = Mem2530[SEQ(r3_2495, r2_2501) + 0x4A<32>:word16] (alias)
l00009808:
	r6_2543 = r6_2543 + 4<16>
	r1_2545 = r1_1186 * 2<16>
	r2_2501 = r10
	branch r10 >=u 0xE<16> l00009B0C
l00009B0C:
	r9_2520 = 2<16>
l00008D04:
	r5_r4_8758 = SEQ(SLICE(SEQ(r5_1845, r10 + 4<16>) + 0x56001800<32>, word16, 16), r10 + 0x1804<16>) (alias)
l00008D06:
	sp_1221 = fp - 2<i32>
	dwLoc04 = SEQ(SLICE(r5_r4_8758, word16, 0), wLoc04_6042) (alias)
	r3_r2_8664 = SEQ(r3_2495, r2_2501) (alias)
	r5_r4_8950 = r5_r4_8758 (alias)
l00009818:
	word32 r3_r2_2571 = CONVERT(r10, word16, word32) * 2<32> + fp
	word16 r3_2572 = SLICE(r3_r2_2571, word16, 16)
	word16 r2_2575 = Mem2497[r3_r2_2571 + 0x40<32>:word16] - r1_2545
	branch r1_2545 >= 0<16> l00009AFA
l00009AFA:
	word16 r3_2581 = SLICE(SEQ(r3_2572, r2_2575) + 0x5ABD0009<32>, word16, 16)
	r3_r2_3158 = SEQ(r3_2581, r2_2575 + 9<16>) (alias)
	r5_r4_8606 = SEQ(r5_1845, r10 + 4<16>) (alias)
	r7_r6_8761 = SEQ(r7_2772, r6_2543 + 4<16>) (alias)
	dwArg00_9155 = SEQ(wArg02_5187, wArg00_5119) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7263
	branch r0_1187 == 0<16> l00009A2E
l00009B04:
	r9_2520 = 1<16>
	r3_r2_8664 = SEQ(r3_2581, r2_2575 + 9<16>) (alias)
	r5_r4_8950 = SEQ(r5_1845, r10 + 4<16>) (alias)
l00008D0C:
	r13 = Mem2592[r3_r2_8664 + 0x38<32>:word32]
	r11_r10_8855 = r11_r10_8858 (alias)
	branch r13 == 0<32> l00009046
l00008D16:
	word32 r3_r2_2596 = Mem2592[r13:word32]
	r3_2598 = SLICE(r3_r2_2596, word16, 16) (alias)
	r2_2599 = SLICE(r3_r2_2596, word16, 0) (alias)
	r0_1187 = 0xFFFE<16>
	v281_4655 = r3_r2_2596 == r12
	r11_r10_8743 = r11_r10_8858 (alias)
	r5_r4_8755 = r5_r4_8950 (alias)
l0000982A:
	r1_1062 = r1_2545 * 2<16>
	r3_r2_8749 = SEQ(r3_2572, r10) (alias)
	r5_r4_8755 = SEQ(r5_1845, r10 + 5<16>) (alias)
	r7_r6_8866 = SEQ(r7_2772, r6_2543 + 9<16>) (alias)
	dwArg00_9166 = SEQ(wArg02_5187, wArg00_5119) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7263
	branch r10 >=u 0xE<16> l00009AEA
l0000983A:
	word32 r3_r2_2618 = CONVERT(r10, word16, word32) * 2<32> + fp
	word16 r3_2619 = SLICE(r3_r2_2618, word16, 16)
	word16 r2_2622 = Mem2497[r3_r2_2618 + 0x40<32>:word16] - r1_2545 * 2<16>
	wArg44_7263 = SEQ(bArg45_7222, bArg44_5274) (alias)
	branch r1_2545 * 2<16> >= 0<16> l00009AD8
l00009AD8:
	v275_4649 = r0_1187 == 0<16>
	r3_r2_8724 = SEQ(r3_2619, r2_2622) (alias)
	r11_r10_8746 = r11_r10_8858 (alias)
	r5_r4_8752 = SEQ(r5_1845, r10 + 5<16>) (alias)
	r7_r6_8863 = SEQ(r7_2772, r6_2543 + 9<16>) (alias)
	wArg44 = wArg44_7263
l00009ADA:
	r10 = SLICE(r11_r10_8746, word16, 0) (alias)
	r11 = SLICE(r11_r10_8746, word16, 16) (alias)
	r6_2543 = SLICE(r7_r6_8863, word16, 0) (alias)
	r3_r2_3158 = r3_r2_8724 (alias)
	r5_r4_8606 = r5_r4_8752 (alias)
	r7_r6_8761 = r7_r6_8863 (alias)
	dwArg00_9155 = SEQ(wArg02_5187, wArg00_5119) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch v275_4649 l00009A2E
l00009ADC:
	r9_2520 = 1<16>
	r3_r2_8572 = r3_r2_8724 (alias)
	r11_r10_8598 = r11_r10_8746 (alias)
	r5_r4_8737 = r5_r4_8752 (alias)
l0000984C:
	word16 r6_2632 = r6_2543 + 0xF<16>
	word32 r5_r4_8655 = SEQ(r5_1845, r10 + 6<16>)
	word32 r3_r2_8658 = SEQ(r3_2619, r10)
	branch r10 >=u 0xE<16> l00009AC8
l0000985C:
	word32 r5_r4_8652
	word32 r3_r2_2646 = CONVERT(r10, word16, word32) * 2<32> + fp
	word16 r3_2647 = SLICE(r3_r2_2646, word16, 16)
	word16 r2_2650 = Mem2497[r3_r2_2646 + 0x40<32>:word16] - r1_2545 * 4<16>
	branch r1_2545 * 4<16> >= 0<16> l00009AB6
l00009AB6:
	r5_r4_8652 = SEQ(r5_1845, r10 + 6<16>) (alias)
	dwArgC0 = SEQ(r3_2647, r2_2650) (alias)
l0000986E:
	word32 r5_r4_8796
	r6_2632 = r6_2543 + 0x16<16>
	branch r10 >=u 0xE<16> l00009AA6
l00009AA6:
	r5_r4_8796 = SEQ(r5_1845, r10 + 7<16>) & 0xF1BCD11C<32> (alias)
l0000987E:
	branch r1_2545 * 8<16> >= 0<16> l00009A94
l00009A94:
	r5_r4_8796 = SEQ(r5_1845, r10 + 7<16>) (alias)
	branch r0_1187 == 0<16> l00009AAC
l00009A98:
	word32 r12_2689 = r12 + (CONVERT(r0_1187, word16, word32) << 2<8>)
	Mem2694[r12_2689:byte] = 0x40<8>
	r11 = SEQ(SLICE(r11, byte, 8), bArg44_5274)
l00009AA8:
	Mem2701[r12_2689 + 1<32>:byte] = bArg44_5274
	Mem2702[r12_2689 + 2<32>:word16] = r1_2545 * 8<16>
	r5_r4_8796 = SEQ(r5_1845, r10 + 7<16>) (alias)
l00009AAC:
	r5_r4_8652 = r5_r4_8796 (alias)
l00009AB8:
	r10 = r10 & 0x58<16> (alias)
	r11 = r11 & 0xAF4F<16> (alias)
	r5_r4_8655 = r5_r4_8652 | 0xE0039F6F<32> (alias)
	r3_r2_8658 = dwArgC0 (alias)
l00009AC8:
	Mem2736[r5_r4_8655:word16] = r6_2632
l00009ACC_thunk_fn00008B96:
	fn00008B96(r3_r2_8658, r5_r4_8655, r9_r8_8661, 0<16>, r6_2632, r7_2772, r10, r13)
	r2Out = r2_2787
	r3Out = r3_2788
	r4Out = r4_2789
	r5Out = r5_2790
	r6Out = r6_2632
	r7Out = r7_2791
	r8Out = r8_1554
	r9Out = r9_2747
	r10Out = r10_2784
	r11Out = r11
	r12Out = r12_2785
	r13Out = r13_2786
	raOut = ra
	return r0_2782
l00009890:
	r2_1555 = r10
	r4_1589 = r10 + 8<16>
	dwArg00_8783 = SEQ(wArg02_5187, wArg00_5119) (alias)
	r7_r6_8920 = SEQ(r7_2772, r6_2543 + 0x1E<16>) (alias)
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7263
	dwArgA0 = dwArgA0_5924
	branch r10 >=u 0xE<16> l00009990
l0000989E:
	r2_1555 = Mem2497[CONVERT(r10, word16, word32) * 2<32> + fp + 0x40<32>:word16] - r1_2545 * 0x10<16>
	dwArg00_8783 = SEQ(wArg02_5187, wArg00_5119) (alias)
	r7_r6_8920 = SEQ(r7_2772, r6_2543 + 0x1E<16>) (alias)
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7263
	dwArgA0 = dwArgA0_5924
	branch r1_2545 * 0x10<16> >= 0<16> l00009990
l000098AE:
	r2_1555 = r10
	r4_1589 = r10 + 9<16>
	dwArg00_8783 = SEQ(wArg02_5187, wArg00_5119) (alias)
	r7_r6_8920 = SEQ(r7_2772, r6_2543 + 0x27<16>) (alias)
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7263
	dwArgA0 = dwArgA0_5924
	branch r10 >=u 0xE<16> l00009990
l000098BE:
	r2_1555 = Mem2497[CONVERT(r10, word16, word32) * 2<32> + fp + 0x40<32>:word16] - r1_2545 * 0x20<16>
	dwArg00_8783 = SEQ(wArg02_5187, wArg00_5119) (alias)
	r7_r6_8920 = SEQ(r7_2772, r6_2543 + 0x27<16>) (alias)
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7263
	dwArgA0 = dwArgA0_5924
	branch r1_2545 * 0x20<16> >= 0<16> l00009990
l00009990:
	Mem2847[sp_1221 + 0x84<32>:word16] = r4_1589
	dwArg00_8640 = dwArg00_8783 (alias)
	r9_r8_8702 = r9_r8_8661 (alias)
	r7_r6_8820 = r7_r6_8920 (alias)
l000098CE:
	r1_1062 = r1_2545 * 0x40<16>
	r2_1555 = r10
	r4_1589 = r10 + 0xA<16>
	v262_4636 = r10 >=u 0xE<16>
	dwArg00_8891 = SEQ(wArg02_5187, wArg00_5119) (alias)
	r7_r6_8981 = SEQ(r7_2772, r6_2543 + 0x31<16>) (alias)
	dwArg88 = dwArg88_6264
	dwArg78 = dwArg78_6161
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	wArg44 = wArg44_7263
	dwArgA0 = dwArgA0_5924
l000095E6:
	r1_r0_47 = SEQ(r1_1363, r0_1455) (alias)
	dwArg50_8712 = r1_r0_8632 (alias)
	dwArg00_9188 = CONVERT(wArg00_5119, word16, uint32) (alias)
	dwArgA0 = dwArgA0_5924
	dwArg60 = dwArg60_6105
	dwArg78 = dwArg78_6161
	dwArg58 = dwArg58_6213
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	wArg44 = wArg44_7224
	dwLoc04 = dwLoc04_5400
	branch r0_1455 >=u 0x354<16> l0000A1CA
l000095EE:
	r2Out = r2_1555
	r3Out = r3_1447
	r4Out = r4_1450
	r5Out = r5_1454
	r6Out = r6
	r7Out = wLoc06
	r8Out = r8_1357
	r9Out = 0xE<16>
	r10Out = r10
	r11Out = r11
	r12Out = dwArgB0
	r13Out = dwLoc04_5400
	raOut = ra
	return 1<16>
l0000928C:
	r5_r4_9125 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9160 = dwArg00_8640 (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_5124
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch wArg74 != 0<16> l0000A23A
l00009296:
	dwArg50_6549 = r1_r0_8632 (alias)
	dwArg00_9171 = dwArg00_8640 (alias)
	dwArg60 = dwArg60_6105
	dwArg58 = dwArg58_6213
	dwArg50_5060 = dwArg50_6549
	dwArg78 = dwArg78_5124
	branch r0_884 != 0<16> l0000A250
l000092A0:
	r0_2873 = wArg6C
	v250_4624 = wArg6C == 0<16>
	r7_r6_8556 = r7_r6_8696 (alias)
	r5_r4_413 = SEQ(r5_1845, r4_1589) (alias)
	r3_r2_412 = SEQ(r3_1570, r2_1555) (alias)
	dwArg00_9094 = dwArg00_8640 (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_5124
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch wArg6C != 0<16> l0000A2FA
l000092AA:
	r0_2876 = r0_884
	v250_4624 = r0_884 == 0<16>
	r5_r4_413 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9080 = dwArg00_8640 (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_5124
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch r0_884 != 0<16> l0000A320
l000092B4:
	r5_r4_8956 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9063 = dwArg00_8640 (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_5124
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch wArg64 != 0<16> l0000A336
l000092BE:
	dwArg60_6105 = r1_r0_8632 (alias)
	r1_r0_3223 = SEQ(r1_1062, r0_884) (alias)
	dwArg00_9198 = dwArg00_8640 (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_5124
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch r0_884 != 0<16> l0000A36C
l000092C8:
	dwArg58_6213 = r1_r0_8632 (alias)
	r3_r2_70 = SEQ(r3_1570, r2_1555) (alias)
	dwArg50_8535 = r1_r0_8632 (alias)
	dwArg00_9178 = dwArg00_8640 (alias)
	dwArg58 = dwArg58_6213
	dwArg78 = dwArg78_5124
	dwArg60 = dwArg60_6105
	branch wArg5C != 0<16> l0000A1DE
l000092D2:
	r3_r2_8871 = SEQ(r3_1570, r2_1555) (alias)
	r5_r4_8875 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9039 = dwArg00_8640 (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_5124
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch r0_884 != 0<16> l0000A388
l000092DC:
	r0_1187 = wArg54
	branch wArg54 != 0<16> l0000A3E6
l0000A3E6:
	branch wArg54 == 0<16> l0000A436
l0000A436:
l0000A436_thunk_fn0000A438:
	word16 r2_2898
	word16 r3_2899
	word32 r13_2900
	word16 r4_2901
	word16 r5_2902
	word16 r0_2896 = fn0000A438(wArg54, r2_1555, r12, wArg02_5187, out r2_2898, out r3_2899, out r4_2901, out r5_2902, out r13_2900)
	r2Out = r2_2898
	r3Out = r3_2899
	r4Out = r4_2901
	r5Out = r5_2902
	r6Out = r6
	r7Out = r7_1032
	r8Out = r8_1936
	r9Out = r9_1528
	r10Out = wArg7C
	r11Out = r11
	r12Out = r12
	r13Out = r13_2900
	raOut = ra
	return r0_2896
l0000A3E8:
	r3_1570 = r3_1570 >>u 8<8>
	r5_r4_2909 = Mem955[r12 + 8<32>:word32]
	r7_r6_2910 = Mem955[r12 + 0x14<32>:word32]
l000092E6:
	r0_2911 = r0_884
	branch r0_884 != 0<16> l0000A40C
l000092F0:
	r0_1187 = wArg4C
	v265_4639 = wArg4C == 0<16>
	branch wArg4C != 0<16> l0000A39A
l0000A39A:
	dwArg78 = r1_r0_8632
	r7_r6_2910 = r7_r6_8696 (alias)
	r5_r4_2909 = SEQ(r5_1845, r4_1589) (alias)
	r5_r4_9008 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9083 = dwArg00_8640 (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch v265_4639 l0000A3EE
l0000A3EE:
	Mem2933[r12 + 0x14<32>:word32] = r7_r6_2910 + 1<32>
	word32 r5_r4_2942 = r5_r4_2909 + r7_r6_2910
	Mem2948[r5_r4_2942:byte] = SLICE(r3_1570, byte, 0)
	word16 r6_2949 = Mem2948[r12 + 0x2414<32>:word16]
	byte v156_2950 = SLICE(r6_2949, byte, 0)
	r3_1570 = SEQ(SLICE(r3_1570, byte, 8), v156_2950)
	r0_2911 = __l_shift<word16,word16>(r0_1187, r3_1570)
	Mem2962[r12 + 0x2410<32>:word16] = r0_2911
	r9_1528 = SLICE(r7_r6_2910 + 1<32>, word16, 16) (alias)
	r8_1936 = SLICE(r7_r6_2910, word16, 0) + 1<16> (alias)
	r5_1845 = SLICE(r5_r4_2942, word16, 16) (alias)
	r4_1589 = SLICE(r5_r4_2942, word16, 0) (alias)
	r2_1555 = SEQ(SLICE(r2_1555, byte, 8), v143_830 - v156_2950)
	r11 = r11 + 0xFFF0<16>
	r6 = r6_2949 + r1_1062
l0000A40C:
	Mem2973[r12 + 0x2414<32>:word16] = r1_1062
	r2Out = r2_1555
	r3Out = r3_1570
	r4Out = r4_1589
	r5Out = r5_1845
	r6Out = r6
	r7Out = wLoc06
	r8Out = r8_1936
	r9Out = r9_1528
	r10Out = wArg7C
	r11Out = r11
	r12Out = r12
	r13Out = dwLoc04
	raOut = ra
	return r0_2911
l0000A39C:
	r5_r4_8956 = r5_r4_9008 (alias)
	dwArg00_9063 = dwArg00_9083 (alias)
l000092FA:
	branch r0_884 != 0<16> l00009300_thunk_fn0000A41C
l00009300_thunk_fn0000A41C:
	word16 r3_2991
	word16 r4_2992
	word16 r5_2993
	r2Out = fn0000A41C(SEQ(r5_1845, r4_1589), wArg7C, r12, wArg02_5187, out r3_2991, out r4_2992, out r5_2993)
	r3Out = r3_2991
	r4Out = r4_2992
	r5Out = r5_2993
	r6Out = r6
	r7Out = r7_1032
	r8Out = r8_1936
	r9Out = r9_1528
	r10Out = wArg7C
	r11Out = r11
	r12Out = r12
	r13Out = r13_2989
	raOut = ra_2994
	return r0_2987
l00009304:
	r0_3000 = wArg44
	r5_r4_8959 = SEQ(r5_1845, r4_1589) (alias)
	dwArg00_9066 = dwArg00_8640 (alias)
	dwArg88 = dwArg88_6264
	dwArg90 = dwArg90_6381
	dwArg78 = dwArg78_5124
	dwArg50_5060 = dwArg50_6549
	dwArg58 = dwArg58_6213
	dwArg60 = dwArg60_6105
	branch wArg44 != 0<16> l0000A346
l000099D2:
	word32 r5_r4_3010 = Mem837[sp_1221 + 0xC0<32>:word32]
	word32 r3_r2_3015 = (CONVERT(Mem837[sp_1221 + 0x90<32>:word16], word16, word32) << 2<8>) + r5_r4_3010
	byte v148_3016 = Mem837[sp_1221 + 0x42<32>:byte]
	Mem3021[r3_r2_3015:byte] = v148_3016
	Mem3026[r3_r2_3015 + 1<32>:byte] = Mem3021[sp_1221 + 0x4A<32>:byte]
	word16 r4_3014 = SLICE(r5_r4_3010, word16, 0)
	word16 r5_3017 = SEQ(SLICE(r5_r4_3010, byte, 24), v148_3016)
	word32 r9_r8_3033 = Mem3026[sp_1221 + 0xC0<32>:word32] - SEQ(r5_3017, r4_3014)
	word32 r5_r4_3037 = SEQ(r5_3017, r4_3014)
	Mem3040[r3_r2_3015 + 2<32>:word16] = SLICE(r5_r4_3037 >> 0x1E<32>, word16, 0)
	Mem3042[sp_1221 + 0xB8<32>:word16] = Mem3040[sp_1221 + 0x90<32>:word16]
	r3_1570 = SLICE(r3_r2_3015, word16, 16) (alias)
	r2_1555 = SLICE(r3_r2_3015, word16, 0) (alias)
	r12 = SEQ(r5_3017, r4_3014)
	r8_1554 = SLICE(r9_r8_3033, word16, 0) (alias)
	F_3050 = SLICE(cond(r9_r8_3033), bool, 5) (alias)
	r5_1905 = SLICE(r5_r4_3037 >> 0x1E<32>, word16, 16) (alias)
l00009A00:
	r9_1528 = Mem3048[sp_1221 + 0x80<32>:word16]
l00009302:
	ra = CONVERT(F_3050, bool, int32)
	r0_3000 = Mem3048[sp_1221 + 0x44<32>:word16]
	r5_r4_8959 = SEQ(r5_1905, r0_1187) (alias)
	r9_r8_8699 = SEQ(r9_1528, r8_1554) (alias)
	dwArg00_9066 = SEQ(wArg02_5187, wArg00_5119) (alias)
	branch r0_3000 != 0<16> l0000A346
l0000930E:
	word32 r3_r2_3062 = Mem3058[dwArg32:word32]
	Mem3066[r3_r2_3062:word16] = 0x140<16>
	Mem3068[r3_r2_3062 + 2<32>:word16] = r0_3000
	Mem3078[dwArg32:word32] = r3_r2_3062 + 8<32>
	Mem3079[r3_r2_3062 + 4<32>:word16] = 0x140<16>
	Mem3080[r3_r2_3062 + 6<32>:word16] = r0_3000
	Mem3084[dwArg3A:word16] = 1<16>
	r2Out = SLICE(r3_r2_3062, word16, 0)
	r3Out = SLICE(r3_r2_3062, word16, 16)
	r4Out = SLICE(r3_r2_3062, word16, 0) + 8<16>
	r5Out = SLICE(r3_r2_3062 + 8<32>, word16, 16)
	r6Out = SLICE(dwArg32, word16, 0)
	r7Out = wLoc06
	r8Out = SLICE(dwArg3A, word16, 16)
	r9Out = r9_1528
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = dwLoc04
	raOut = ra
	return r0_3000
l00009B88:
	r11_r10_8623 = SEQ(r11_663 + 0xFFF3<16>, r10) (alias)
	r7_r6_8626 = SEQ(r7_602, r6_633 >>u 8<8>) (alias)
	r9_r8_8629 = SEQ(1<16>, r8_662) (alias)
l00009B8A:
	word16 r11_3093 = SLICE(r11_r10_8623, word16, 16)
l00008C88:
l000089B2:
l000089B4_thunk_fn000061B2:
	word16 r10_3110
	word16 r2_3111
	word16 r3_3112
	word16 r4_3113
	word16 r5_3114
	word16 r6_3115
	word16 r7_3116
	word16 r8_3117
	word16 r9_3118
	word32 ra_3119
	word16 r1_9228
	word16 r0_3108 = fn000061B2(r7_r6_8626, r9_r8_8629, ra, out r1_9228, out r2_3111, out r3_3112, out r4_3113, out r5_3114, out r6_3115, out r7_3116, out r8_3117, out r9_3118, out r10_3110, out ra_3119)
	r2Out = r2_3111
	r3Out = r3_3112
	r4Out = r4_3113
	r5Out = r5_3114
	r6Out = r6_3115
	r7Out = r7_3116
	r8Out = r8_3117
	r9Out = r9_3118
	r10Out = r10_3110
	r11Out = r11_3093
	r12Out = r12
	r13Out = r13
	raOut = ra_3119
	return r0_3108
l00009C4E:
	r13 = (CONVERT(wLoc0E, word16, int32) << 2<8>) + r12
	word16 r1_3126 = Mem550[r13 + 0x14A8<32>:word16]
	r4_3127 = Mem550[r13 + 0x14A4<32>:word16]
	r5_1845 = __a_shift<word16,word16>(r4_3127, r7_3597)
	Mem3134[r12 + 0x2410<32>:word16] = r5_1845
	r1_1020 = r1_3126 - 0x10<16>
	branch r7_3597 < 0x10<16> l00009CAA
l00009C70:
	word32 r3_r2_3137 = Mem3134[r12 + 8<32>:word32]
	word32 r7_r6_3138 = Mem3134[r12 + 0x14<32>:word32]
	Mem3147[r12 + 0x14<32>:word32] = r7_r6_3138 + 1<32>
	Mem3155[r3_r2_3137 + r7_r6_3138:byte] = SLICE(r5_1845, byte, 0)
	r0_1187 = Mem3155[r12 + 0x2410<32>:word16] >>u 8<8>
	r3_r2_3158 = Mem3155[r12 + 8<32>:word32]
	r7_r6_3159 = Mem3155[r12 + 0x14<32>:word32]
l00009EE4:
	r2Out = 3<16>
	r3Out = wLoc0E
	r4Out = r4_3127
	r5Out = r5_522
	r6Out = r10
	r7Out = wLoc06
	r8Out = r8_1217
	r9Out = r9_591
	r10Out = wLoc0E
	r11Out = 0<16>
	r12Out = r12
	r13Out = dwLoc04
	raOut = ra
	return 0x8A<16>
l0000A392:
l0000A34C:
	r1_r0_3167 = Mem3166[r12 + 8<32>:word32]
	r5_r4_3168 = Mem3166[r12 + 0x14<32>:word32]
	r7_r6_8563 = 1<32> (alias)
l0000A352:
	Mem3184[r12 + 0x14<32>:word32] = r7_r6_8563 + r5_r4_3168
	Mem3204[r1_r0_3167 + r5_r4_3168:byte] = SLICE(r10, byte, 0)
	r3_1570 = Mem3204[r12 + 0x2410<32>:word16]
	dwArg00_9206 = dwArg00_9066 (alias)
l0000A35C:
	word32 r5_r4_3211 = Mem3209[r12 + 0x14<32>:word32]
	word32 r1_r0_3210 = Mem3209[r12 + 8<32>:word32]
	Mem3220[r12 + 0x14<32>:word32] = r5_r4_3211 + 1<32>
	r3_1570 = r3_1570 >>u 8<8>
	r5_1845 = SLICE(r5_r4_3211, word16, 16) (alias)
	r4_1589 = SLICE(r5_r4_3211, word16, 0) (alias)
	r7_1032 = SLICE(r5_r4_3211 + 1<32>, word16, 16) (alias)
	r1_r0_3223 = r1_r0_3210 + r5_r4_3211
	dwArg00_9198 = dwArg00_9206 (alias)
l0000A36C:
	Mem3232[r1_r0_3223:byte] = SLICE(r3_1570, byte, 0)
	r0_2876 = SEQ(SLICE(r1_r0_3223, byte, 8), Mem3232[r12 + 0x2414<32>:byte])
	dwArg00_9080 = dwArg00_9198 (alias)
l0000A374:
	word16 r4_3248 = SEQ(SLICE(r4_1589, byte, 8), 0x10<8> - SLICE(r0_2876, byte, 0))
	r10 = __l_shift<word16,word16>(r9_1528, r0_2876)
l00009F88:
	r2_1555 = Mem3264[r12 + 0x1534<32>:word16]
	r8_1554 = Mem3264[r12 + 0x1538<32>:word16] - 0x10<16>
	Mem3278[r12 + 0x2410<32>:word16] = r3_1570
	r5_r4_8771 = SEQ(r5_1845, r4_3248) (alias)
	dwArg00_8640 = dwArg00_9080 (alias)
	branch r7_1032 > 0x10<16> l0000A026
l0000A026:
	r1_r0_3281 = Mem3278[r12 + 8<32>:word32]
l0000A028:
	r5_r4_3284 = Mem3283[r12 + 0x14<32>:word32]
	r1_r0_8616 = r1_r0_3281 (alias)
	dwArg00_9193 = dwArg00_9080 (alias)
l0000A02A:
	Mem3297[r12 + 0x14<32>:word32] = r5_r4_3284 + 1<32>
	Mem3313[r1_r0_8616 + r5_r4_3284:byte] = SLICE(r3_1570, byte, 0)
	r3_1447 = Mem3313[r12 + 0x2410<32>:word16] >>u 8<8>
	dwArg00_9185 = dwArg00_9193 (alias)
l0000A03A:
	word32 r1_r0_3318 = Mem3317[r12 + 8<32>:word32]
	r5_r4_3319 = Mem3317[r12 + 0x14<32>:word32]
	Mem3328[r12 + 0x14<32>:word32] = r5_r4_3319 + 1<32>
	Mem3337[r1_r0_3318 + r5_r4_3319:byte] = SLICE(r3_1447, byte, 0)
	word16 r7_3338 = Mem3337[r12 + 0x2414<32>:word16]
	word16 r3_3358 = __l_shift<word16,word16>(r2_1555, SEQ(SLICE(r9_1528, byte, 8), SLICE(r10, byte, 0)))
	Mem3359[r12 + 0x2410<32>:word16] = r3_3358
	Mem3381[r12 + 0x2414<32>:word16] = r8_1554
	word16 r11_3376 = r11 + 0xFFF0<16>
	r6_2543 = __a_shift<word16,word16>(r11_3376 + 0xFFF6<16>, r8_1554)
	Mem3387[r12 + 0x2410<32>:word16] = r6_2543
	r7_3380 = r7_3338 - 0x10<16> + r8_1554
	r11_3382 = r11_3376 + 0xFFF6<16>
	r3_r2_8727 = SEQ(r3_3358 | r6_2543, r2_1555) (alias)
	dwArg00_9175 = dwArg00_9185 (alias)
	branch r8_1554 < 9<16> l00009FBE
l00009FA4:
	Mem3407[r12 + 0x2414<32>:word16] = r8_1554
	r11_3382 = r11 + 0xFFF6<16>
	r6_2543 = __a_shift<word16,word16>(r11_3382, r8_1554)
	Mem3425[r12 + 0x2410<32>:word16] = r6_2543
	r7_3380 = r7_1032 + r8_1554
	r3_r2_8727 = SEQ(r3_1570 | r6_2543, r2_1555) (alias)
	r5_r4_3319 = r5_r4_8771 (alias)
	dwArg00_9175 = dwArg00_8640 (alias)
	branch r8_1554 >= 9<16> l0000A07C
l0000A07C:
	Mem3433[r12 + 0x2414<32>:word16] = r8_1554
	r7_3429 = r7_3380 + 7<16>
l00009A60:
	r3_r2_8575 = r3_r2_8727 (alias)
	r5_r4_8582 = r5_r4_3319 (alias)
l00009FBE:
	word32 r1_r0_3437 = Mem3436[r12 + 8<32>:word32]
	word32 r3_r2_3438 = Mem3436[r12 + 0x14<32>:word32]
	Mem3447[r12 + 0x14<32>:word32] = r3_r2_3438 + 1<32>
	Mem3455[r1_r0_3437 + r3_r2_3438:byte] = SLICE(r6_2543, byte, 0)
	word32 r3_r2_3459 = Mem3455[r12 + 0x14<32>:word32]
	word16 r6_3456 = Mem3455[r12 + 0x2410<32>:word16]
	word32 r1_r0_3458 = Mem3455[r12 + 8<32>:word32]
	Mem3468[r12 + 0x14<32>:word32] = r3_r2_3459 + 1<32>
	word32 r1_r0_3471 = r1_r0_3458 + r3_r2_3459
	Mem3475[r1_r0_3471:byte] = SLICE(r6_3456 >>u 8<8>, byte, 0)
	word16 r0_3476 = Mem3475[r12 + 0x2414<32>:word16]
	byte v75_3477 = SLICE(r0_3476, byte, 0)
	word16 r11_3487 = __l_shift<word16,word16>(r11_3382, SEQ(SLICE(r1_r0_3471, byte, 24), v75_3477))
	Mem3488[r12 + 0x2410<32>:word16] = r11_3487
	Mem3491[r12 + 0x2414<32>:word16] = r0_3476
	word16 r3_3463 = SLICE(r3_r2_3459, word16, 16)
	word16 r5_3466 = SLICE(r3_r2_3459 + 1<32>, word16, 16)
	word16 r4_3467 = SLICE(r3_r2_3459, word16, 0) + 1<16>
	word16 r2_3485 = SEQ(SLICE(r3_r2_3459, byte, 8), 0x10<8> - v75_3477)
l00009AE8:
	r0_1187 = Mem3491[sp_1221 + 0x44<32>:word16]
	r3_r2_8749 = SEQ(r3_3463, r2_3485) (alias)
	r5_r4_8755 = SEQ(r5_3466, r4_3467) (alias)
	r11_r10_8858 = SEQ(r11_3487 + 0xFFF7<16>, r10) (alias)
	r7_r6_8866 = SEQ(r7_3380, r6_3456 >>u 8<8>) (alias)
	dwArg00_9166 = dwArg00_9175 (alias)
l00009AEA:
	r10 = SLICE(r11_r10_8858, word16, 0) (alias)
	r11 = SLICE(r11_r10_8858, word16, 16) (alias)
	r2_2599 = SLICE(r3_r2_8749, word16, 0) (alias)
	r3_2598 = SLICE(r3_r2_8749, word16, 16) (alias)
	r6_2543 = SLICE(r7_r6_8866, word16, 0) (alias)
	r13 = SEQ(SLICE(r13, word16, 16), 0xA<16>)
	v281_4655 = r0_1187 == 0<16>
	r3_r2_3158 = r3_r2_8749 (alias)
	r5_r4_8606 = r5_r4_8755 (alias)
	r7_r6_8761 = r7_r6_8866 (alias)
	dwArg00_9155 = dwArg00_9166 (alias)
	branch r0_1187 == 0<16> l00009A2E
l00009A2E:
	r4_3127 = SLICE(r5_r4_8606, word16, 0) (alias)
	word16 r6_3563 = SLICE(r7_r6_8761, word16, 0)
	word16 r7_3557 = SLICE(r7_r6_8761, word16, 16)
	sp_1221 = fp
	r1_1020 = wArg48
	r7_r6_3159 = r7_r6_8761 (alias)
	dwArg00_8966 = dwArg00_9155 (alias)
	branch wArg48 != 0<16> l00009C88
l00009C88:
	Mem3575[r12 + 0x14<32>:word32] = r7_r6_3159 + 1<32>
	Mem3596[r3_r2_3158 + r7_r6_3159:byte] = SLICE(r0_1187, byte, 0)
	r8_1217 = SLICE(r7_r6_3159, word16, 0) + 1<16> (alias)
	r7_3597 = Mem3596[r12 + 0x2414<32>:word16]
l00009C96:
	r5_1845 = __l_shift<word16,word16>(r4_3127, SEQ(SLICE(r0_1187, byte, 8), SLICE(r7_3597, byte, 0)))
	Mem3618[r12 + 0x2410<32>:word16] = r5_1845
	r11 = r11 + 0xFFF0<16>
l00009CAA:
	Mem3636[r12 + 0x2414<32>:word16] = r1_1020
	branch r11 == 0<16> l00009D70
l00009CB4:
	r4_1199 = Mem3636[r13 + 0x14A4<32>:word16]
	r3_1193 = r4_1199
	dwArg00_9120 = dwArg00_8966 (alias)
l00009CBE:
	word16 r3_3652 = __a_shift<word16,word16>(r3_1193, r1_1020)
	Mem3663[r12 + 0x2410<32>:word16] = r3_3652
	word16 r5_3655 = r5_1845 | r3_3652
	branch r1_1020 < 0x10<16> l00009D0A
l00009CD0:
	word32 r1_r0_3666 = Mem3663[r12 + 8<32>:word32]
	word32 r7_r6_3667 = Mem3663[r12 + 0x14<32>:word32]
	Mem3676[r12 + 0x14<32>:word32] = r7_r6_3667 + 1<32>
	Mem3683[r1_r0_3666 + r7_r6_3667:byte] = SLICE(r3_3652, byte, 0)
	word32 r7_r6_3687 = Mem3683[r12 + 0x14<32>:word32]
	word16 r3_3684 = Mem3683[r12 + 0x2410<32>:word16]
	word32 r1_r0_3686 = Mem3683[r12 + 8<32>:word32]
	Mem3696[r12 + 0x14<32>:word32] = r7_r6_3687 + 1<32>
	word32 r1_r0_3699 = r1_r0_3686 + r7_r6_3687
	Mem3703[r1_r0_3699:byte] = SLICE(r3_3684 >>u 8<8>, byte, 0)
	r1_1020 = Mem3703[r12 + 0x2414<32>:word16]
	r3_3652 = __l_shift<word16,word16>(r4_1199, SEQ(SLICE(r1_r0_3699, byte, 8), SLICE(r1_1020, byte, 0)))
	Mem3718[r12 + 0x2410<32>:word16] = r3_3652
	r8_1217 = SLICE(r7_r6_3687, word16, 0) + 1<16> (alias)
	r11 = r11 + 0xFFF0<16>
l00009D0A:
	Mem3727[r12 + 0x2414<32>:word16] = r1_1020
	branch r11 == 1<16> l00009D70
l00009D14:
	word16 r6_3733 = Mem3727[r13 + 0x14A8<32>:word16]
	word16 r9_3734 = Mem3727[r13 + 0x14A4<32>:word16]
	r11 = __a_shift<word16,word16>(r9_3734, r1_1020)
	Mem3742[r12 + 0x2410<32>:word16] = r11
	r3_1570 = r3_3652 | r11
	r6 = r6_3733 - 0x10<16>
	r5_r4_9060 = SEQ(r5_3655, r4_1199) (alias)
	r9_r8_8699 = SEQ(r9_3734, r8_1217) (alias)
	dwArg00_9109 = dwArg00_9120 (alias)
	branch r1_1020 < 0x10<16> l0000A2CE
l00009D32:
	word32 r1_r0_3745 = Mem3742[r12 + 8<32>:word32]
	word32 r3_r2_3746 = Mem3742[r12 + 0x14<32>:word32]
	Mem3755[r12 + 0x14<32>:word32] = r3_r2_3746 + 1<32>
	Mem3762[r1_r0_3745 + r3_r2_3746:byte] = SLICE(r11, byte, 0)
	word16 r7_3763 = Mem3762[r12 + 0x2410<32>:word16]
	word32 r1_r0_3765 = Mem3762[r12 + 8<32>:word32]
	word32 r3_r2_3766 = Mem3762[r12 + 0x14<32>:word32]
	Mem3775[r12 + 0x14<32>:word32] = r3_r2_3766 + 1<32>
	word32 r1_r0_3778 = r1_r0_3765 + r3_r2_3766
	Mem3782[r1_r0_3778:byte] = SLICE(r7_3763 >>u 8<8>, byte, 0)
	Mem3794[r12 + 0x2410<32>:word16] = __l_shift<word16,word16>(r9_3734, SEQ(SLICE(r1_r0_3778, byte, 8), Mem3782[r12 + 0x2414<32>:byte]))
	Mem3798[r12 + 0x2414<32>:word16] = r6_3733 - 0x10<16>
l00009D70:
	branch Mem3805[sp_1221:word16] == 0<16> l0000A028
l00009A38:
l00009A3C_thunk_fn00009A3E:
	fn00009A3E(r3_r2_3158, r5_r4_8606, SEQ(3<16>, r8_1554), r0_1187, wArg4C, r6_3563, r7_3557, r11, r12, r13, ra, dwArg12, dwArgA0)
	r2Out = r2_3857
	r3Out = r3_3858
	r4Out = r4_3859
	r5Out = r5_3860
	r6Out = r6_3861
	r7Out = r7_3862
	r8Out = r8_3863
	r9Out = r9_3864
	r10Out = r10_3853
	r11Out = r11_3854
	r12Out = r12_3855
	r13Out = r13_3856
	raOut = ra_3865
	return r0_3851
l00009AF2:
	r9_2520 = 1<16>
	r11_r10_8743 = r11_r10_8858 (alias)
l00008D1E:
	word16 r4_4001 = SLICE(r5_r4_8755, word16, 0)
	word16 r5_3995 = SLICE(r5_r4_8755, word16, 16)
	sp_1221 = fp - 10<i32>
	word16 r10_3908 = SLICE(r11_r10_8743, word16, 0)
	word16 r11_3903 = SLICE(r11_r10_8743, word16, 16)
	branch v281_4655 l00008D26
l00008D26:
	r2_2599 = 0xC0CC<16>
	r1_1062 = Mem3875[r13 + 4<32>:word16] + 0xC0CC<16>
	r3_r2_8572 = SEQ(r3_2598, 0xC0CC<16>) (alias)
	r11_r10_8598 = r11_r10_8743 (alias)
	r5_r4_8737 = r5_r4_8755 (alias)
	branch false l00008D20
l00008D34:
	word32 r9_r8_4081
	r2_2501 = SLICE(r3_r2_8572, word16, 0) (alias)
	r3_2495 = SLICE(r3_r2_8572, word16, 16) (alias)
	r4_2563 = SLICE(r5_r4_8737, word16, 0) (alias)
	r5_1845 = SLICE(r5_r4_8737, word16, 16) (alias)
	word16 r10_3907 = SLICE(r11_r10_8598, word16, 0)
	word16 r11_3902 = SLICE(r11_r10_8598, word16, 16)
	word16 r8_3885 = Mem3884[r12 + 4<32>:word16]
	branch r8_3885 != 0<16> l00008D44
l00008D3A:
	r0_1187 = Mem3884[r13 + 0x58<32>:word16]
	r9_r8_4081 = SEQ(r9_2520, r8_3885) (alias)
	branch r0_1187 >=u 7<16> l00009038
l00008D44:
	word32 r5_r4_3963
	word32 r1_r0_3949
	branch r1_1062 == 0x3F53<16> l00008FDC
l00008FDC:
	Mem3923[r11_r10_8598 + 0x40<32>:word32] = SEQ(r1_1062, r0_1187)
	Mem3935[r11_r10_8598 + 0x48<32>:word32] = Mem3923[SEQ(r9_2520, r8_3885) + 0x48<32>:word32]
	Mem3941[r11_r10_8598 + 0x50<32>:word32] = Mem3935[SEQ(r9_2520, r8_3885) + 0x50<32>:word32]
	Mem3947[r11_r10_8598 + 0x58<32>:word32] = Mem3941[SEQ(r9_2520, r8_3885) + 0x58<32>:word32]
	r1_r0_3949 = Mem3947[SEQ(r9_2520, r8_3885) + 0x60<32>:word32]
	Mem3953[r11_r10_8598 + 0x60<32>:word32] = r1_r0_3949
	r5_r4_3963 = r5_r4_8737 (alias)
l00008D4C:
	Mem3956[r13 + 4<32>:word16] = 0x3F53<16>
	word16 r0_3957 = Mem3956[r13 + 0x58<32>:word16]
	r5_r4_3963 = __a_shift<word32,word16>(Mem3956[r13 + 0x50<32>:word32], 7<16>)
	Mem3966[r13 + 0x50<32>:word32] = r5_r4_3963
	Mem3968[r13 + 0x58<32>:word16] = r0_3957 & 7<16>
	word16 r4_3965 = SLICE(r5_r4_3963, word16, 0)
	r11_3902 = r11_3902 & 0xFFF8<16>
	branch (r0_3957 & 7<16>) >=u 7<16> l00008FFE
l00008FFE:
	r1_r0_3949 = SEQ(SLICE(SEQ(7<16>, r0_3957 & 7<16>) - 0xAF080034<32>, word16, 16), (r0_3957 & 7<16>) - 0x34<16>) (alias)
l00009000:
	Mem3982[SEQ(r11_3902, r10_3907) + 0x68<32>:word32] = r1_r0_3949
	Mem3991[sp_1221 - 2<i32>:word16] = 0x1BA4<16>
	fn0000DB24(r3_r2_8572, r5_r4_3963, r3_r2_8572, out r13)
	Mem4023[r13:word32] = SEQ(r11_3902, r10_3907)
	word32 sp_4019 = <invalid>
	r4_2563 = SLICE(r5_r4_3963, word16, 0) (alias)
	word16 r3_4035 = SLICE(r5_r4_3963 + 0x50C<32>, word16, 16)
	r5_1845 = SLICE(r5_r4_3963, word16, 16) (alias)
	r12 = r5_r4_3963
	word32 r1_r0_4024 = Mem4023[r5_r4_3963 + 0x68<32>:word32]
	sp_1221 = sp_4019 + 4<32>
	word32 r3_r2_4062 = SEQ(r3_4035, r4_2563 + 0x50C<16>)
	branch r5_r4_3963 + 0x50C<32> <=u r1_r0_4024 l0000906C
l0000906C:
	r5_1845 = SLICE(r5_r4_3963 + 0x1B98<32>, word16, 16) (alias)
	r4_2563 = r4_2563 + 0x1B98<16> (alias)
	r3_r2_4062 = SEQ(r3_4035, r4_2563 + 0x50C<16>) (alias)
	branch r5_r4_3963 + 0x1B98<32> <u r1_r0_4024 l0000902E
l00009076:
	Mem4056[r13 + 0x68<32>:word32] = r1_r0_4024 + (r13 + 0x50C<32>)
	word32 r1_r0_4057 = Mem4056[r5_r4_3963 + 0x70<32>:word32]
	Mem4067[r13 + 0x70<32>:word32] = r1_r0_4057 + (r13 + 0x50C<32>)
	r3_r2_4062 = r5_r4_3963 + 0x50C<32> - r1_r0_4024 - r1_r0_4057
l0000902E:
	word32 r1_r0_4070 = Mem4069[r5_r4_3963 + 0x90<32>:word32]
	word32 r3_r2_4078 = r3_r2_4062 - r1_r0_4070
	r2_2501 = SLICE(r3_r2_4078, word16, 0) (alias)
	r3_2495 = SLICE(r3_r2_4078, word16, 16) (alias)
	r9_r8_4081 = r13 + 0x50C<32> + r1_r0_4070
l00009038:
	Mem4090[r13 + 0x90<32>:word32] = r9_r8_4081
	r8_1554 = SLICE(r9_r8_4081, word16, 0) (alias)
	r9_2520 = SLICE(r9_r8_4081, word16, 16) (alias)
	r1_r0_4093 = Mem4090[sp_1221:word32]
	r11_r10_8595 = SEQ(r11_3902, r10_3907) (alias)
	branch r1_r0_4093 == 0<32> l0000905C
l00009042:
	r1_2545 = Mem4090[r12 + 0x38<32>:word16]
	r11_r10_8855 = SEQ(r11_3902, r10_3907) (alias)
l00009046:
	word16 r0_4112 = __a_shift<word16,word16>(1<16>, r1_2545)
	word32 r5_r4_4109 = Mem4108[r12 + 0x48<32>:word32]
	word32 sp_4111 = sp_1221 - 2<i32>
	Mem4113[sp_4111:word16] = r0_4112
	word32 r3_r2_4114 = Mem4113[sp_4111 + 4<32>:word32]
	fn0000DB24(r3_r2_4114, r5_r4_4109, r13, out r13)
	word32 sp_4123 = <invalid>
	r5_1845 = SLICE(r5_r4_4109, word16, 16) (alias)
	r4_2563 = SLICE(r5_r4_4109, word16, 0) (alias)
	r3_2495 = SLICE(r3_r2_4114, word16, 16) (alias)
	r2_2501 = SLICE(r3_r2_4114, word16, 0) (alias)
	sp_1221 = sp_4123 + 4<32>
	r11_r10_8740 = r11_r10_8855 (alias)
l0000905A:
	r1_r0_4093 = Mem4129[sp_1221:word32]
	r11_r10_8595 = r11_r10_8740 (alias)
l0000905C:
	Mem4138[r13 + 0x48<32>:word32] = r1_r0_4093
	Mem4150[r11_r10_8595 + 0x38<32>:word32] = r13
	r10 = SLICE(r11_r10_8595, word16, 0) (alias)
	r11 = SLICE(r11_r10_8595, word16, 16) (alias)
l00009064:
	r2Out = r2_2501
	r3Out = r3_2495
	r4Out = r4_2563
	r5Out = r5_1845
	r6Out = r6_2543
	r7Out = wLoc06
	r8Out = r8_1554
	r9Out = r9_2520
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = dwLoc04
	raOut = ra
	return 0<16>
l00008D72:
	Mem4162[sp_1221:byte] = SLICE(r4_3965, byte, 0)
	word16 r2_4172 = SLICE(r3_r2_8572 >>u 0x18<8>, word16, 0)
	word16 r0_4168 = (r0_3957 & 7<16>) + 0xFFF8<16>
	r3_r2_8575 = r3_r2_8572 >>u 0x18<8> (alias)
	word32 r5_r4_8732 = r3_r2_8572
	branch true l00008DA4
l00008D82:
	Mem4174[sp_1221 + 1<32>:byte] = SLICE(r2_4172, byte, 0)
	word16 r2_4183 = SLICE(r3_r2_8572 >>u 0x28<8>, word16, 0)
	r3_r2_8575 = r3_r2_8572 >>u 0x28<8> (alias)
	r5_r4_8732 = r3_r2_8572 >>u 0x18<8> (alias)
	branch true l00008DA4
l00008D92:
	Mem4185[sp_1221 + 2<32>:byte] = SLICE(r2_4183, byte, 0)
	word16 r2_4193 = SLICE(r3_r2_8572 >>u 0x30<8>, word16, 0)
	r3_r2_8575 = r3_r2_8572 >>u 0x30<8> (alias)
	r5_r4_8732 = r3_r2_8572 >>u 0x28<8> (alias)
	branch r0_4168 >=u 0x17<16> l00008DA4
l00008DA0:
	Mem4195[sp_1221 + 3<32>:byte] = SLICE(r2_4193, byte, 0)
	r3_r2_8575 = 0<32> (alias)
	r5_r4_8732 = r3_r2_8572 >>u 0x28<8> (alias)
l00008DA4:
	Mem4209[r13 + 0x50<32>:word32] = r3_r2_8575
	Mem4210[r13 + 0x2C<32>:word16] = 0<16>
	r7_3429 = 7<16>
	r5_r4_8582 = r5_r4_8732 (alias)
l00008DB0:
l00008DBE_thunk_fn00008DC0:
	fn00008DC0(r3_r2_8575, r5_r4_8582, 0xFF<32>, 0<16>, 0<16>, r6_2543, r7_3429, 4<16>, ra, Mem4306[r3_r2_8575 + 18<i32>:word32], Mem4306[r3_r2_8575 + 160<i32>:word32])
	r2Out = r2_4313
	r3Out = r3_4314
	r4Out = r4_4315
	r5Out = r5_4316
	r6Out = r6_4317
	r7Out = r7_4318
	r8Out = r8_4319
	r9Out = r9_4320
	r10Out = r10_4309
	r11Out = r11_4310
	r12Out = r12_4311
	r13Out = r13_4312
	raOut = ra_4321
	return r0_4307
l00008D20:
	r2Out = r2_2599
	r3Out = r3_2598
	r4Out = r4_4001
	r5Out = r5_3995
	r6Out = r6_2543
	r7Out = wLoc06
	r8Out = r8_1554
	r9Out = r9_2520
	r10Out = r10_3908
	r11Out = r11_3903
	r12Out = r12
	r13Out = dwLoc04
	raOut = ra
	return r0_1187
fn0000A110_exit:
l0000A12C:
l0000A138:
	Mem4372[r12 + 0x2410<32>:word16] = r10
	r0_1187 = 0x10<16>
l0000A148:
	branch r6 < r0_1187 l0000A62E


void fn0000A19A(word16 r6, word16 r10, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A0E8
// MayUse:  r10:[0..15] r12:[0..31] r6:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000A19A_exit:
fn0000A19A_entry:
l0000A19A:
l0000A1AC:
l0000A1AE:
	Mem17[r12 + 0x2410<32>:word16] = r10
	branch r6 > 0x10<16> l0000A1B6_thunk_fn0000A5F6


word32 fn0000A416(word32 r5_r4, word16 r10, word32 r12, word16 wArgFFA8, ptr32 & r4Out, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B218
//      fn0000B29A
// MayUse:  r10:[0..15] r12:[0..31] Sequence r5:r4:[0..31] Stack +FFA8:[0..15]
// LiveOut: r3:r2 r4 r5 sp
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 ra sp
// Preserved:
fn0000A416_entry:
l0000A416:
l0000A41A_thunk_fn0000A41C:
	word16 r3_20
	word16 r4_21
	word16 r5_22
	word16 r2_19 = fn0000A41C(r5_r4, r10, r12, wArgFFA8, out r3_20, out r4_21, out r5_22)
	r4Out = r4_21
	r5Out = r5_22
	return SEQ(r3_20, r2_19)
fn0000A416_exit:


word16 fn0000A41C(word32 r5_r4, word16 r10, word32 r12, word16 wArg02, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A416
// MayUse:  r10:[0..7] r12:[0..31] Sequence r5:r4:[0..31] Stack +0002:[0..15]
// LiveOut: r2 r3 r4 r5
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 ra
// Preserved: sp
fn0000A41C_entry:
l0000A41C:
	Mem25[r12 + 0x552C<32>:byte] = SLICE(r10, byte, 0)
l0000A424_thunk_fn0000A426:
	word16 r3_37
	word16 r4_38
	word16 r5_39
	word16 r2_36 = fn0000A426(r5_r4, r12, wArg02, out r3_37, out r4_38, out r5_39)
	r3Out = r3_37
	r4Out = r4_38
	r5Out = r5_39
	return r2_36
fn0000A41C_exit:


word16 fn0000A426(word32 r5_r4, word32 r12, word16 wArg02, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A41C
// MayUse:  r12:[0..31] Sequence r5:r4:[0..31] Stack +0002:[0..15]
// LiveOut: r2 r3 r4 r5
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 ra
// Preserved: sp
fn0000A426_entry:
l0000A426:
	word16 r2_26 = Mem0[Mem0[r5_r4 + 8<32>:word32] + 0xA<32>:word16]
	Mem29[r12 + 0xFAE<32>:word16] = 0<16>
l0000A434_thunk_fn0000A438:
	word16 r2_33
	word16 r3_34
	word16 r4_36
	word16 r5_37
	word32 r13_51
	fn0000A438(0x23D<16>, r2_26, r12, wArg02, out r2_33, out r3_34, out r4_36, out r5_37, out r13_51)
	r3Out = r3_34
	r4Out = r4_36
	r5Out = r5_37
	return r2_33
fn0000A426_exit:


word16 fn0000A438(word16 r0, word16 r2, word32 r12, word16 wArg02, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A426
// MayUse:  r0:[0..15] r12:[0..31] r2:[0..15] Stack +0002:[0..15]
// LiveOut: r0 r13 r2 r3 r4 r5
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5
// Preserved: sp
fn0000A438_entry:
	word32 r13
	word16 r3
	word16 r4
	word16 r5
l0000A438:
	Mem20[r12 + 0x1F60<32>:word16] = r0
	branch r2 >= 0<16> l0000A43E_thunk_fn0000B9B2
l0000A43E_thunk_fn0000B9B2:
	word16 r2_26
	word16 r3_27
	word16 r0_24 = fn0000B9B2(r2, wArg02, out r2_26, out r3_27)
	r2Out = r2_26
	r3Out = r3_27
	r4Out = r4
	r5Out = r5
	r13Out = r13
	return r0_24
l0000A43E_thunk_fn0000A442:
	word32 r13_30
	word16 r5_32
	word16 r4_31 = fn0000A442(r12, out r5_32, out r13_30)
	r2Out = r2
	r3Out = r3
	r4Out = r4_31
	r5Out = r5_32
	r13Out = r13_30
	return r0
fn0000A438_exit:


word16 fn0000A442(word32 r12, ptr32 & r5Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A416
//      fn0000A438
// MayUse:  r12:[0..31]
// LiveOut: r13 r4 r5
// Trashed: CF r13 r4 r5
// Preserved: sp
fn0000A442_entry:
	word32 r3_r2
	word16 r5
	word16 r4
	word16 r9
	word16 r8
	word16 r10
	word32 r13
	word32 ra
l0000A442:
	word16 r5_12 = SLICE(r12 + 0xFB2<32>, word16, 16)
	word16 r4_13 = SLICE(r12, word16, 0) + 0xFB2<16>
l0000A448_thunk_fn0000A44A:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word16 stackArg88 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000A44A(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r10, r12, r13, ra, stackArg18, stackArg88, stackArg160)
	r5Out = r5_12
	r13Out = r3_r2
	return r4_13
fn0000A442_exit:


void fn0000A44A(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r10, word32 r12, word32 r13, word32 ra, word32 dwArg12, word16 wArg58, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A416
// MayUse:  r10:[0..15] r12:[0..31] r13:[0..31] ra:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0012:[0..31] Stack +0058:[0..15] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A44A_entry:
l0000A44A:
	word16 r0_90 = Mem83[r3_r2:word16]
	branch r0_90 == 0<16> l0000A45E_thunk_fn0000A48C
l0000A45E_thunk_fn0000A48C:
	fn0000A48C(r3_r2, r5_r4, r9_r8, r0_90, 0xFFFF<16>, 0<16>, wArg58, 0<16>, r12, r13, ra, dwArg12, dwArgA0)
	return
l0000A45E_thunk_fn0000A460:
	fn0000A460(CONVERT(r10, word16, uint32), r9_r8)
	return
fn0000A44A_exit:


void fn0000A460(word32 r11_r10, word32 r9_r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A44A
//      fn0000A48C
// MayUse:  Sequence r11:r10:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
l0000A460:
	Mem5[r12 + 0x1F5C<32>:word16] = r11
	Mem20[(CONVERT(r11, word16, int32) + 0x59A<32>) * 2<32> + r12:word16] = 1<16>
	r11 = SLICE(r11_r10, word16, 16)
l0000A472:
	Mem24[r5_r4_31:byte] = 0<8>
	r5_r4_31 = r5_r4_31 (alias)
	r3_r2_29 = r3_r2_29 (alias)
	r4_34 = SLICE(r5_r4_31, word16, 0) (alias)
	branch r7 == 1<16> l0000A47E_thunk_fn0000B726
l0000A47E_thunk_fn0000B726:
	fn0000B726(r11_r10, r9_r8, 1<16>, r4_34, r7, r12, r13, Mem24[sp + 64<i32>:word16], Mem24[sp + 72<i32>:word16], Mem24[sp + 80<i32>:word32], Mem24[sp + 88<i32>:word32], Mem24[sp + 96<i32>:word32], Mem24[sp + 116<i32>:word16], Mem24[sp + 120<i32>:word32], Mem24[sp + 136<i32>:word32], Mem24[sp + 144<i32>:word32])
	return
l0000A482:
l0000A484:
	branch Mem24[r3_r2_29:word16] != 0<16> l0000A460
l0000A48A_thunk_fn0000A48C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg18 = <invalid>
	stackArg160 = <invalid>
	fn0000A48C(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
fn0000A460_entry:
l0000A460_thunk_fn0000A48C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg18 = <invalid>
	stackArg160 = <invalid>
	fn0000A48C(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
fn0000A460_exit:


void fn0000A48C(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word16 r1, word16 r6, word16 r7, word16 r11, word32 r12, word32 r13, word32 ra, word32 dwArg12, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008DC0
//      fn00009A3E
//      fn0000A416
//      fn0000A44A
//      fn0000A460
//      fn0000A664
//      fn0000AA58
// MayUse:  r0:[0..15] r1:[0..15] r11:[0..15] r12:[0..31] r13:[0..31] r6:[0..15] r7:[0..15] ra:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0012:[0..31] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A48C_entry:
	word16 r10
l0000A48C:
	Mem7[r3_r2 + 2<32>:word16] = r0
	branch r7 != 1<16> l0000A484
l0000A498_thunk_fn0000A460:
	fn0000A460(SEQ(r11, r10), SEQ(r9, r8))
	return
l0000A49A:
	branch ra == 0<32> l0000A4A0_thunk_fn0000B718
l0000A4A0_thunk_fn0000B718:
	fn0000B718(r5_r4 + 1<32>, r9_r8, r1, r6 + 1<16>, r13, dwArg12)
	return
l0000A4A4:
l0000A4AC_thunk_fn0000A4AE:
	fn0000A4AE(r5_r4 + 1<32>, r12 + 2<32>, r11 + 1<16>, r12, r1, dwArgA0)
	return
fn0000A48C_exit:


void fn0000A4AE(word32 r5_r4, word32 r7_r6, word16 r11, word32 r12, word16 wArg98, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A48C
//      fn0000A8CA
// MayUse:  r11:[0..15] r12:[0..31] Sequence r5:r4:[0..31] Sequence r7:r6:[0..31] Stack +0098:[0..15] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r12 r2 r3 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A4AE_entry:
l0000A4AE:
	branch r11 < 1<16> l0000A4B6_thunk_fn0000A500
l0000A4B6_thunk_fn0000A500:
	fn0000A500(wArg98, dwArgA0)
	return
l0000A4B6_thunk_fn0000A4B8:
	fn0000A4B8(r5_r4, r7_r6, 0<16>, r11, r12, wArg98)
	return
fn0000A4AE_exit:


void fn0000A4B8(word32 r5_r4, word32 r7_r6, word16 r10, word16 r11, word32 r12, word16 wArg98)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A48C
//      fn0000A4AE
//      fn0000A4D6
// MayUse:  r10:[0..15] r11:[0..15] r12:[0..31] Sequence r5:r4:[0..31] Sequence r7:r6:[0..31] Stack +0098:[0..15]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r12 r2 r3 r6 r7 ra
// Preserved: r11 r13 r4 r5 r8 r9 sp
fn0000A4B8_entry:
	word16 r0
l0000A4B8:
	branch wArg98 >= 1<16> l0000AC0A
l0000A4BE_thunk_fn0000A59C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg64 = <invalid>
	word16 stackArg72 = <invalid>
	word16 stackArg80 = <invalid>
	word16 stackArg82 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg96 = <invalid>
	word16 stackArg104 = <invalid>
	word16 stackArg112 = <invalid>
	word16 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg144 = <invalid>
	fn0000A59C(r0, r1, r2, r8, r9, r11, r12, r13, ra, stackArg64, stackArg72, stackArg80, stackArg82, stackArg88, stackArg96, stackArg104, stackArg112, stackArg116, stackArg120, stackArg136, stackArg144)
	return
l0000A4C2:
	Mem22[r12 + 0x1F5C<32>:word16] = r11
	Mem26[r7_r6 + 0x1668<32>:word16] = r10
	Mem28[r5_r4:word16] = 1<16>
l0000A4D4_thunk_fn0000A4D6:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg160 = <invalid>
	fn0000A4D6(r0, r11, r12, wArg98, stackArg160)
	return
fn0000A4B8_exit:


void fn0000A4D6(word16 r0, word16 r11, word32 r12, word16 wArg98, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A4B8
//      fn0000A8CA
// MayUse:  r0:[0..15] r11:[0..15] r12:[0..31] Stack +0098:[0..15] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r12 r2 r3 r6 r7 ra
// Preserved: r11 sp
fn0000A4D6_entry:
	word16 r5
	word16 r4
	word16 r10
l0000A4D6:
	Mem33[CONVERT(r0, word16, int32) + r12 + 0xFB2<32>:byte] = 0<8>
	Mem40[r12 + 0x23F8<32>:word32] = Mem33[r12 + 0x23F8<32>:word32] + 0xFFFFFFFF<32>
	Mem56[r12 + 0x2400<32>:word32] = Mem40[r12 + 0x2400<32>:word32]
	branch r11 >= 1<16> l0000A4FE_thunk_fn0000A4B8
l0000A4FE_thunk_fn0000A4B8:
	fn0000A4B8(SEQ(r5, r4), SEQ(r7, r6), r10, r11, r12, wArg98)
	return
l0000A4FE_thunk_fn0000A500:
	fn0000A500(wArg98, dwArgA0)
	return
fn0000A4D6_exit:


void fn0000A500(word16 wArg98, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A48C
//      fn0000A4AE
//      fn0000A4D6
// MayUse:  Stack +0098:[0..15] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CF r0 r1 r10 r12 r2 r3 r7
// Preserved: sp
fn0000A500_entry:
	word16 r0
	word16 r1
	word16 r2
	word16 r8
	word16 r9
	word32 r12
	word32 r13
	word32 ra
l0000A500:
	Mem8[dwArgA0 + 4<32>:word16] = wArg98
l0000A524_thunk_fn0000A59C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg64 = <invalid>
	word16 stackArg72 = <invalid>
	word16 stackArg80 = <invalid>
	word16 stackArg82 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg96 = <invalid>
	word16 stackArg104 = <invalid>
	word16 stackArg112 = <invalid>
	word16 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg144 = <invalid>
	fn0000A59C(r0, r1, r2, r8, r9, r11, r12, r13, ra, stackArg64, stackArg72, stackArg80, stackArg82, stackArg88, stackArg96, stackArg104, stackArg112, stackArg116, stackArg120, stackArg136, stackArg144)
	return
fn0000A500_exit:


void fn0000A534(word32 r3_r2, word32 r9_r8, word16 r1, word16 r4, word16 r7, word16 r11, word32 r12, word32 r13, word16 wArg40, word16 wArg48, word32 dwArg50, word32 dwArg58, word32 dwArg60, word16 wArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A59C
// MayUse:  r1:[0..15] r11:[0..15] r12:[0..31] r13:[0..31] r4:[0..15] r7:[0..15] Sequence r3:r2:[0..31] Sequence r9:r8:[0..31] Stack +0040:[0..15] Stack +0048:[0..15] Stack +0050:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0074:[0..15] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A534_entry:
	word16 wArg50 = SLICE(dwArg50, word16, 0)
	word16 wArg78 = SLICE(dwArg78, word16, 0)
l0000A534:
	branch wArg78 < wArg50 l0000A53E_thunk_fn0000B732
l0000A53E_thunk_fn0000B732:
	fn0000B732(SEQ(r11, wArg50), r3_r2, SEQ(wArg78, r4), r9_r8, r1, r7, r12, r13, wArg40, wArg48, dwArg50, dwArg58, dwArg60, wArg74, dwArg78, dwArg88, dwArg90)
	return
l0000A53E_thunk_fn0000A542:
	fn0000A542()
	return
fn0000A534_exit:


void fn0000A542()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A534
//      fn0000A59C
// MayUse: 
// LiveOut:
// Trashed: CF r0 r1 r11 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A542_entry:
l0000A542:
l0000A560:
l0000A56C_thunk_fn0000A57A:
	fn0000A57A()
	return
fn0000A542_exit:


void fn0000A570(word32 r1_r0, word16 r2, word16 r8, word16 r9, word16 r10, word16 r11, word32 r12, word32 r13, word32 ra, word16 wArg40, word16 wArg48, word16 wArg50, word16 wArg52, word32 dwArg58, word32 dwArg60, word16 wArg68, word16 wArg70, word16 wArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
// MayUse:  r10:[0..15] r11:[0..15] r12:[0..31] r13:[0..31] r2:[0..15] r8:[0..15] r9:[0..15] ra:[0..31] Sequence r1:r0:[0..31] Stack +0040:[0..15] Stack +0048:[0..15] Stack +0050:[0..15] Stack +0052:[0..15] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0068:[0..15] Stack +0070:[0..15] Stack +0074:[0..15] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A570_entry:
l0000A570:
	word16 r1_12 = Mem0[r1_r0 + r13:word16]
	branch SLICE(ra, word16, 0) < r10 l0000A578_thunk_fn0000A59C
l0000A578_thunk_fn0000A59C:
	fn0000A59C(r10, r1_12, r2, r8, r9, r11, r12, r13, ra, wArg40, wArg48, wArg50, wArg52, dwArg58, dwArg60, wArg68, wArg70, wArg74, dwArg78, dwArg88, dwArg90)
	return
l0000A578_thunk_fn0000A57A:
	fn0000A57A()
	return
fn0000A570_exit:


void fn0000A57A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A570
//      fn0000A59C
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A57A_entry:
	word16 r0
	word16 r1
	word16 r2
	word16 r8
	word16 r9
	word16 r11
	word32 r12
	word32 r13
	word32 ra
l0000A57A_thunk_fn0000A59C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg64 = <invalid>
	word16 stackArg72 = <invalid>
	word16 stackArg80 = <invalid>
	word16 stackArg82 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg96 = <invalid>
	word16 stackArg104 = <invalid>
	word16 stackArg112 = <invalid>
	word16 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg144 = <invalid>
	fn0000A59C(r0, r1, r2, r8, r9, r11, r12, r13, ra, stackArg64, stackArg72, stackArg80, stackArg82, stackArg88, stackArg96, stackArg104, stackArg112, stackArg116, stackArg120, stackArg136, stackArg144)
	return
fn0000A57A_exit:


void fn0000A59C(word16 r0, word16 r1, word16 r2, word16 r8, word16 r9, word16 r11, word32 r12, word32 r13, word32 ra, word16 wArg40, word16 wArg48, word16 wArg50, word16 wArg52, word32 dwArg58, word32 dwArg60, word16 wArg68, word16 wArg70, word16 wArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A48C
//      fn0000A570
//      fn0000A57A
// MayUse:  r0:[0..15] r1:[0..15] r11:[0..15] r12:[0..31] r13:[0..31] r2:[0..15] r8:[0..15] r9:[0..15] ra:[0..15] Stack +0040:[0..15] Stack +0048:[0..15] Stack +0050:[0..15] Stack +0052:[0..15] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0068:[0..15] Stack +0070:[0..15] Stack +0074:[0..15] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A59C_entry:
	word16 r3
	word16 wArg78_181 = SLICE(dwArg78, word16, 0)
l0000A59C:
	word16 r2_109
	r2_109 = r2
	branch r1 >u r9 l0000A5BC
l0000A5A0:
	branch r1 == r9 l0000AC3E
l0000A5A2_thunk_fn0000A57A:
	fn0000A57A()
	return
l0000A5A6:
	word32 r3_r2_38 = (CONVERT(r11, word16, int32) + 0x59A<32>) * 2<32> + r12
	Mem42[r3_r2_38:word16] = r8
	r2_109 = SLICE(r3_r2_38, word16, 0) (alias)
	r11 = r0 * 2<16>
	branch SLICE(ra, word16, 0) >= r0 l0000A560
l0000A5BA_thunk_fn0000A542:
	fn0000A542()
	return
l0000A5BC:
	word32 r1_r0_78 = (CONVERT(r11, word16, int32) + 0x59A<32>) * 2<32> + r12
	Mem84[r1_r0_78:word16] = wArg68
	word16 r1_82 = SLICE(r1_r0_78, word16, 16)
	word32 dwArg50_168 = SEQ(wArg52, wArg50 + 0xFFFE<16>)
	branch wArg70 != 0<16> l0000A528
l0000A528:
	word16 r3_104 = SLICE(dwArg60, word16, 0) + 0xFFFE<16>
	word16 r4_105 = Mem99[dwArg60 + 0x11666<32>:word16]
l0000A530_thunk_fn0000A534:
	fn0000A534(SEQ(r3_104, r2_109), SEQ(r9 + 0xFFFF<16>, r8), r1_82, r4_105, wArg70, wArg50 + 0xFFFE<16>, r12, r13, wArg40, wArg48, dwArg50_168, dwArg58, dwArg60 + 0xFFFE<32>, wArg74, dwArg78, dwArg88, dwArg90)
	return
l0000A5F2:
l0000A5F2_thunk_fn0000A5F6:
	fn0000A5F6(SEQ(r3, r2), wArg78_181, r12, SLICE(dwArg58, word16, 0))
	return
fn0000A59C_exit:


void fn0000A5F6(word32 r3_r2, word16 r11, word32 r12, word16 wArg58)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A59C
// MayUse:  r11:[0..15] r12:[0..31] Sequence r3:r2:[0..31] Stack +0058:[0..15]
// LiveOut:
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r6 r7 r9
// Preserved: sp
fn0000A5F6_entry:
l0000A5F6:
	word32 r3_r2_43 = r3_r2 + CONVERT(r11, word16, int32) * 2<32>
	word32 r3_r2_51 = SEQ(wArg58, SLICE(r3_r2_43, word16, 0))
l0000A62C_thunk_fn0000A62E:
	fn0000A62E(r3_r2_51 << 2<8>, r11, r3_r2_43)
	return
fn0000A5F6_exit:


void fn0000A62E(word32 r3_r2, word16 r11, word32 dwArg78)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A5F6
// MayUse:  r11:[0..15] Sequence r3:r2:[0..31] Stack +0078:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r12 r2 r3 r4 r5 r6 r7 r9
// Preserved: sp
fn0000A62E_entry:
	word16 r5
	word16 r4
	word16 r9
	word16 r8
	word32 r12
	word32 r13
	word32 ra
l0000A62E:
	Mem37[r3_r2 + 0x166C<32>:word16] = Mem29[dwArg78 + 0x1668<32>:word16]
	branch r11 == 2<16> l0000A660_thunk_fn0000AA58
l0000A660_thunk_fn0000AA58:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000AA58(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
l0000A660_thunk_fn0000A664:
	fn0000A664()
	return
fn0000A62E_exit:


void fn0000A664()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A5F6
// MayUse: 
// LiveOut:
// Trashed: CF r10 r11 r13 r5 ra
// Preserved: sp
fn0000A664_entry:
	word16 r3
	word16 r2
	word16 r5
	word16 r4
	word16 r9
	word16 r8
	word16 r0
	word16 r1
	word16 r6
	word16 r7
	word16 r11
	word32 r12
	word32 r13
	word32 ra
l0000A664_thunk_fn0000A48C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000A48C(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
fn0000A664_exit:


void fn0000A6C8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A8CA
//      fn0000A8D6
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A6C8_entry:
l0000A6C8_thunk_fn0000A8D6:
	fn0000A8D6()
	return
fn0000A6C8_exit:


void fn0000A8CA(word32 r3_r2, word32 r5_r4, word32 r7_r6, word16 r0, word16 r11, word32 r12, word16 wArg98, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
// MayUse:  r0:[0..15] r11:[0..15] r12:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r7:r6:[0..31] Stack +0098:[0..15] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A8CA_entry:
	word16 r2 = SLICE(r3_r2, word16, 0)
	word16 r4 = SLICE(r5_r4, word16, 0)
l0000A8CA:
	branch r2 != 0<16> l0000A8E2
l0000A8E2:
	branch Mem0[r3_r2 + 0xFB2<32>:byte] <u SLICE(r4, byte, 0) l0000A8E8_thunk_fn0000A4AE
l0000A8E8_thunk_fn0000A4AE:
	fn0000A4AE(r5_r4, r7_r6, r11, r12, wArg98, dwArgA0)
	return
l0000A8EC:
l0000A8EC_thunk_fn0000A4D6:
	fn0000A4D6(r0, r11, r12, wArg98, dwArgA0)
	return
l0000A8CC:
	branch Mem0[r3_r2 + 0xFB2<32>:byte] <u SLICE(r4, byte, 0) l0000A8D2_thunk_fn0000A6C8
l0000A8D2_thunk_fn0000A6C8:
	fn0000A6C8()
	return
l0000A8D2_thunk_fn0000A8D6:
	fn0000A8D6()
	return
fn0000A8CA_exit:


void fn0000A8D6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A6C8
//      fn0000A8CA
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000A8D6_entry:
l0000A8D6:
l0000A8D6_thunk_fn0000A6C8:
	fn0000A6C8()
	return
fn0000A8D6_exit:


void fn0000AA58(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word16 r1, word16 r6, word16 r7, word16 r11, word32 r12, word32 r13, word32 ra, word32 dwArg12, word32 dwArgA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C04
//      fn0000A6C8
// MayUse:  r0:[0..15] r1:[0..15] r11:[0..15] r12:[0..31] r13:[0..31] r6:[0..15] r7:[0..15] ra:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0012:[0..31] Stack +00A0:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
l0000AA5E:
	r3_r2_12 = CONVERT(r2_125, word16, word32)
	r6_181 = r6_144
	Mem8 = Mem148
	r2_15 = SLICE(r3_r2_12, word16, 0) (alias)
	r3_16 = SLICE(r3_r2_12, word16, 16) (alias)
l0000AA66:
	Mem31[r12 + 0x23F8<32>:word32] = fn0000D358(r2_15, r3_16, r4_100, r5_99, out r5_r4_485) + Mem8[r12 + 0x23F8<32>:word32]
	r3_r2_46 = CONVERT(Mem31[Mem31[sp + 0x88<32>:word32] + Mem31[sp + 0x40<32>:word32] + 2<32>:word16], word16, word32)
	r1_r0_486 = fn0000D358(SLICE(r3_r2_46, word16, 0), SLICE(r3_r2_46, word16, 16), SLICE(r5_r4_485, word16, 0), SLICE(r5_r4_485, word16, 16), out r5_r4_493)
	r3_r2_57 = Mem31[r12 + 0x2400<32>:word32]
	r1_r0_61 = r1_r0_486 + r3_r2_57
	Mem65[r12 + 0x2400<32>:word32] = r1_r0_61
	r1_62 = SLICE(r1_r0_61, word16, 16) (alias)
	r0_63 = SLICE(r1_r0_61, word16, 0) (alias)
	r5_r4_487 = r5_r4_493 (alias)
l0000AA94:
	r3_r2_492 = PHI((r3_r2_491, l0000AA28), (r3_r2_57, l0000AA66))
	r5_r4_488 = PHI((r5_r4_98, l0000AA28), (r5_r4_487, l0000AA66))
	r6_179 = PHI((r6_110, l0000AA28), (r6_181, l0000AA66))
	r0_178 = PHI((r0_81, l0000AA28), (r0_63, l0000AA66))
	r1_69 = PHI((r1_401, l0000AA28), (r1_62, l0000AA66))
	Mem67 = PHI((Mem128, l0000AA28), (Mem65, l0000AA66))
	r7_68 = Mem67[sp + 0x48<32>:word16]
	Mem71[sp + 0x48<32>:word16] = r7_68
	r11_r10_74 = r11_r10_74 (alias)
	r1_70 = r1_69 + 1<16>
	r11_76 = SLICE(r11_r10_74, word16, 16) (alias)
	branch r7_68 != 0x23D<16> l0000A9EC
l0000A9EC:
	r0_81 = Mem71[r11_r10_74 + 0x1668<32>:word16]
	Mem91[sp + 0x40<32>:word32] = r5_r4_488 << 2<8>
	r5_r4_98 = Mem91[sp + 0x60<32>:word32] + Mem91[sp + 0x40<32>:word32]
	r7_r6_106 = Mem91[sp + 0x60<32>:word32]
	r3_r2_111 = (CONVERT(Mem91[r5_r4_98 + 2<32>:word16], word16, word32) << 2<8>) + r7_r6_106
	r5_99 = SLICE(r5_r4_98, word16, 16) (alias)
	r4_100 = SLICE(r5_r4_98, word16, 0) (alias)
	r6_110 = SLICE(r7_r6_106, word16, 0) (alias)
	r3_112 = SLICE(r3_r2_111, word16, 16) (alias)
	r2_114 = Mem91[r3_r2_111 + 2<32>:word16]
	r1_115 = r1_70 + 1<16>
	r7_117 = Mem91[sp + 0x68<32>:word16]
	branch r2_114 < r7_117 l0000AA28
l0000AA1C:
	Mem124[sp + 0x58<32>:word16] = Mem91[sp + 0x58<32>:word16]
	r2_120 = r7_117
	r1_122 = r1_70 + 2<16>
l0000AA28:
	r1_401 = PHI((r1_122, l0000AA1C), (r1_115, l0000A9EC))
	r2_125 = PHI((r2_120, l0000AA1C), (r2_114, l0000A9EC))
	Mem128[r5_r4_98 + 2<32>:word16] = r2_125
	r3_r2_491 = SEQ(r3_112, r2_125) (alias)
	branch r0_81 > Mem128[sp + 0x50<32>:word16] l0000AA94
l0000AA32:
	r7_r6_142 = CONVERT(r2_125, word16, int32) * 2<32> + r12
	Mem148[r7_r6_142 + 0x1628<32>:word16] = Mem128[r7_r6_142 + 0x1628<32>:word16] + 1<16>
	r6_144 = SLICE(r7_r6_142, word16, 0) (alias)
	branch r0_81 < Mem148[sp + 0x78<32>:word16] l0000AA5E
l0000AA4E:
l0000AAA6:
	r7_162 = Mem71[sp + 0x68<32>:word16]
	r10_163 = Mem71[sp + 0x58<32>:word16]
	branch r10_163 == 0<16> l0000AEFC
l0000AEFC:
	Mem166[sp + 0x98<32>:word16] = r10_163
l0000AF00_thunk_fn00009A3E:
	fn00009A3E(r3_r2_492, r5_r4_488, r5_r4_485, r0_178, r1_70, r6_179, r7_162, r11_76, r12, r13, ra, Mem166[sp + 18<i32>:word32], Mem166[sp + 160<i32>:word32])
	return
l0000AAB4:
	Mem214[sp + 0x70<32>:word16] = 0xFFFF<16>
	Mem236[sp + 0x48<32>:word16] = 0xFFFA<16>
	Mem237[sp + 0x40<32>:word16] = 0xFFFC<16>
l0000AAEA:
	Mem240[sp + 0x58<32>:word16] = 0xFFFB<16>
l0000AD28:
	Mem243[sp + 0x12<32>:word16] = 0xFFF6<16>
	Mem247[sp + 0x14<32>:word16] = 0xFFEC<16>
	Mem251[sp + 0x16<32>:word16] = 0xFFD8<16>
	Mem255[sp + 0x18<32>:word16] = 0xFFB0<16>
	Mem259[sp + 0x1A<32>:word16] = 0xFF60<16>
	Mem263[sp + 0x38<32>:word16] = 0xFEC0<16>
	Mem268[sp + 0x3C<32>:word16] = 0xFD80<16>
	r7_269 = Mem268[sp + 0x98<32>:word16]
	branch r7_269 == 0xFFFF<16> l0000ADB8
l0000AD76:
	r5_r4_281 = (CONVERT(r7_269, word16, int32) + 1<32> << 2<8>) + r13
	r7_r6_286 = Mem268[sp + 0x80<32>:word32]
l0000AD84:
	r7_r6_490 = PHI((r7_r6_286, l0000AD76), (r7_r6_489, l0000ADB2))
	Mem290 = PHI((Mem268, l0000AD76), (Mem351, l0000ADB2))
	r6_288 = SLICE(r7_r6_490, word16, 0) (alias)
	r1_291 = Mem290[r7_r6_490 + 2<32>:word16]
	branch r1_291 == 0<16> l0000ADB2
l0000AD8A:
	Mem308[CONVERT(r1_291, word16, int32) * 2<32> + sp:word16] = 1<16>
l0000AD9A:
	branch r1_291 < 0<16> l0000AD9A
l0000ADAC:
	Mem328[r7_r6_490:word16] = 2<16>
l0000ADB2:
	Mem351 = PHI((Mem328, l0000ADAC), (Mem290, l0000AD84))
	r7_r6_489 = SEQ(SLICE(r7_r6_490 + 4<32>, word16, 16), r6_288 + 4<16>) (alias)
	branch r7_r6_490 + 4<32> != r5_r4_281 l0000AD84
l0000ADB8:
	return
fn0000AA58_entry:
	def r3_r2
	def r5_r4
	def r9_r8
	def r0
	def r6
	def r7
	def r1
	def ra
	def r13
	def r11
	def r12
	def dwArg12
	def dwArgA0
l0000AA58_thunk_fn0000A48C:
	fn0000A48C(r3_r2, r5_r4, r9_r8, r0, r1, r6, r7, r11, r12, r13, ra, dwArg12, dwArgA0)
	return
fn0000AA58_exit:


void fn0000AE66(word32 r11_r10, word32 r9_r8, word16 r7, word32 r12, word32 r13, word16 wArg40, word16 wArg48, word32 dwArg50, word32 dwArg58, word32 dwArg60, word16 wArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B73A
// MayUse:  r12:[0..31] r13:[0..31] r7:[0..15] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31] Stack +0040:[0..15] Stack +0048:[0..15] Stack +0050:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0074:[0..15] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000AE66_entry:
	ptr32 fp
	word32 ra
	word16 wArg6A
	word16 wArg80
	word16 wArg70
	word16 r2
	word16 r3
	word16 r4
	word16 r5
	word16 r0
	word16 r1
	word16 r6
	word32 sp_1041 = fp
	word32 r9_r8_1776 = r9_r8
	word32 r11_r10_1779 = r11_r10
	word32 dwArg58_1548 = dwArg58
	r12_1077 = r12
	r7_1204 = r7
	dwArg58_1564 = ra
	r13_110 = r13
l0000AE66:
	word32 r13_110
	word32 dwArg58_1564
	word16 r7_1204
	word32 r12_1077
	word16 r5_7 = Mem6[r9_r8_1776 + 0x1668<32>:word16]
	word32 r1_r0_17 = (CONVERT(r5_7, word16, int32) << 2<8>) + r11_r10_1779
	word16 r1_18 = SLICE(r1_r0_17, word16, 16)
	word16 r0_1008 = SLICE(r1_r0_17, word16, 0)
	word16 r4_31 = Mem6[(CONVERT(Mem6[r1_r0_17 + 2<32>:word16], word16, word32) << 2<8>) + r11_r10_1779 + 2<32>:word16]
	word16 r1_1002 = r1_18 + 1<16>
	word16 r2_35 = Mem6[sp_1041 + 0x40<32>:word16]
	branch r4_31 < r2_35 l0000AE90
l0000AE84:
	Mem41[sp_1041 + 0x58<32>:word16] = Mem6[sp_1041 + 0x58<32>:word16]
	r1_1002 = r1_18 + 2<16>
	r4_31 = r2_35
l0000AE90:
	Mem47[SEQ(r1_1002, r0_1008) + 2<32>:word16] = r4_31
	branch r5_7 > Mem47[sp_1041 + 0x50<32>:word16] l0000AED6
l0000AED6:
	word16 r9_59 = SLICE(r9_r8_1776 + 2<32>, word16, 16)
	word16 wArg58_1684 = SLICE(dwArg58_1548, word16, 0)
	word16 r10_1193 = SLICE(r11_r10_1779, word16, 0)
	word16 r11_155 = SLICE(r11_r10_1779, word16, 16)
	word16 r1_54 = r1_1002 + 1<16>
	r9_r8_1776 = SEQ(r9_59, SLICE(r9_r8_1776, word16, 0) + 2<16>) (alias)
	branch r7_1204 != 0x23D<16> l0000AE66
l0000AEE0:
l0000A672:
	word32 r1_r0_71 = SEQ(r1_54, r0_1008) + r12_1077
	Mem81[sp_1041 + 0x68<32>:word32] = r1_r0_71 + 0xFB2<32>
	word16 r9_146 = SLICE(dwArg58_1564, word16, 0)
	dwArg58_1564 = SEQ(SLICE(dwArg58_1564, word16, 16), r9_59)
	word32 r1_r0_1784 = SEQ(SLICE(r1_r0_71, word16, 16), r9_59)
l0000A684:
	word32 r11_r10_1805
	word32 r5_r4_1795
	word32 dwArg68_1533
	word16 r6_1131
	word16 r8_1006
	word16 r4_1036
	word16 r9_1005
	word16 r2_1116
	word32 r5_r4_1814 = CONVERT(r10_1193, word16, int32) * 2<32> + r12_1077
	word16 r3_227 = SLICE(r1_r0_1784, word16, 16)
	word16 r1_115 = Mem99[(r1_r0_1784 << 2<8>) + r13_110:word16]
	branch r10_1193 >= SLICE(dwArg58_1564, word16, 0) l0000A6C0
l0000A69E:
	word32 r5_r4_130 = (r5_r4_1814 << 2<8>) + r13_110
	r1_115 = r1_115 + 1<16>
	wArg40 = Mem99[r5_r4_1814 + 0x166C<32>:word16]
	r7_1204 = SLICE(r5_r4_1814, word16, 16) (alias)
	r6_1131 = SLICE(r5_r4_1814, word16, 0) (alias)
	word16 r5_131 = SLICE(r5_r4_130, word16, 16)
	word16 r4_134 = Mem124[r5_r4_130:word16]
	branch r1_115 + 1<16> >u r4_134 l0000AB70
l0000AB70:
	Mem140[r5_r4_1814 + 0x3371<32>:byte] = SLICE(fp, byte, 0)
	r5_r4_1795 = SEQ(r5_131, r4_134) (alias)
l0000A6B8:
	branch r1_115 + 1<16> == r4_134 l0000AA66
l0000A6BA_thunk_fn0000AA58:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000AA58(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
l0000A6BE:
	r5_r4_1814 = SEQ(r5_131, r4_134) (alias)
l0000A6C0:
	word32 r5_r4_1787 = r5_r4_1814
	branch r1_115 >u r9_146 l0000A6E0
l0000A6E0:
	word32 r3_r2_1807
	Mem169[(CONVERT(r11_155, word16, int32) + 0x59A<32>) * 2<32> + r12_1077:word16] = wArg48
	word16 r2_170 = Mem169[r12_1077 + 0x166C<32>:word16]
	Mem175[dwArg88 + 0x1668<32>:word16] = wArg80
	Mem179[r12_1077 + 0x1F60<32>:word16] = wArg74
	Mem183[dwArg90 + 0x1668<32>:word16] = r2_170
	word32 r7_r6_192 = (SEQ(wArg74, wArg48) << 2<8>) + r13_110
	Mem216[dwArg60:word16] = Mem203[r7_r6_192:word16]
	word32 r1_r0_219 = SEQ(wArg74, wArg48) + r12_1077
	r5_r4_1795 = (r5_r4_1787 << 2<8>) + r13_110
	byte v36_222 = Mem216[r1_r0_219 + 0xFB2<32>:byte]
	word32 r3_r2_226 = r5_r4_1787 + r12_1077
	word16 v34_150 = SLICE(dwArg58_1564, word16, 0)
	wArg48 = wArg74
	r7_1204 = SLICE(r7_r6_192, word16, 16) (alias)
	word16 r4_210 = SLICE(r5_r4_1795, word16, 0)
	wArg80 = SLICE(r13_110, word16, 0) (alias)
	dwArg58_1564 = dwArg60
	r13_110 = r13_110 - dwArg60
	r11_155 = SLICE(dwArg60, word16, 16) (alias)
	word16 r10_215 = SLICE(dwArg60, word16, 0)
	word16 r0_223 = SEQ(SLICE(r1_r0_219, byte, 8), v36_222)
	r3_227 = SLICE(r3_r2_226, word16, 16) (alias)
	word16 r2_228 = SLICE(r3_r2_226, word16, 0)
	branch Mem216[r3_r2_226 + 0xFB2<32>:byte] >u v36_222 l0000AAFC
l0000AAFC:
	branch r2_228 != 0<16> l0000AB00_thunk_fn0000B094
l0000AB00_thunk_fn0000B094:
	word32 ra_1920
	word16 r11_1918
	word32 r13_1919
	word16 r9_1916
	word16 r10_1917
	word16 r2_1912
	word16 r3_1913
	word16 r7_1915
	word16 r6_1914
	fn0000B094(SEQ(r11, r10), SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r6, r7, r13, ra, out r2_1912, out r3_1913, out r6_1914, out r7_1915, out r9_1916, out r10_1917, out r11_1918, out r13_1919, out ra_1920)
	return
l0000AB04:
	r0_1008 = r11_155
	r2_1116 = Mem216[r5_r4_1795 + 0x161C<32>:word16]
	r6_1131 = r10_215
	branch r2_1116 != 0<16> l0000ABDE
l0000AB10:
	r0_1008 = wArg40
	r2_1116 = Mem216[r5_r4_1795 + 0x1618<32>:word16]
	r6_1131 = r11_155
	branch r2_1116 != 0<16> l0000ABDE
l0000AB1E:
	r0_223 = wArg58_1684
	r3_r2_1807 = SEQ(r3_227, Mem216[r5_r4_1795 + 0x1614<32>:word16]) (alias)
l0000A754:
	Mem260[dwArg50 + 0xFB2<32>:byte] = v36_222
	Mem262[r5_r4_1795 + 2<32>:word16] = wArg58_1684
	Mem263[r7_r6_192 + 2<32>:word16] = wArg58_1684
	Mem268[r12_1077 + 0x166C<32>:word16] = wArg58_1684
	word16 r1_259 = SLICE(dwArg50, word16, 0)
	r3_r2_1807 = SEQ(wArg58_1684, wArg58_1684) (alias)
	branch v34_150 == 1<16> l0000AB26
l0000AB26:
	r3_227 = SLICE(r3_r2_1807, word16, 16) (alias)
	branch SLICE(r3_r2_1807, word16, 0) != 0<16> l0000B158
l0000B158:
	Mem278[r3_r2_1807 + 0x2410<32>:word16] = r4_210
	Mem284[r3_r2_1807 + 0x2414<32>:word16] = r0_223
	word16 r1_275 = r4_210
	branch r0_223 < 9<16> l0000B1B0
l0000B1B0:
	word32 r5_r4_288 = Mem284[r3_r2_1807 + 8<32>:word32]
	word32 r7_r6_290 = Mem284[r3_r2_1807 + 0x14<32>:word32]
	Mem300[r3_r2_1807 + 0x14<32>:word32] = r7_r6_290 + 1<32>
	Mem307[r5_r4_288 + r7_r6_290:byte] = SLICE(r4_210, byte, 0)
	word16 r4_309 = Mem307[r3_r2_1807 + 0x2410<32>:word16]
	word32 r1_r0_312 = Mem307[r3_r2_1807 + 8<32>:word32]
	word32 r7_r6_314 = Mem307[r3_r2_1807 + 0x14<32>:word32]
	Mem324[r3_r2_1807 + 0x14<32>:word32] = r7_r6_314 + 1<32>
	Mem331[r1_r0_312 + r7_r6_314:byte] = SLICE(r4_309 >>u 8<8>, byte, 0)
	r0_223 = Mem331[r3_r2_1807 + 0x2414<32>:word16]
	Mem335[r3_r2_1807 + 0x1208<32>:word16] = 0<16>
	Mem339[r3_r2_1807 + 0x2414<32>:word16] = r0_223
	r1_275 = 0<16>
	branch r0_223 != 0x10<16> l0000B178
l0000B16C:
	Mem347[r3_r2_1807 + 0x2414<32>:word16] = r0_223
	branch r0_223 == 0x10<16> l0000B1EA
l0000B1EA:
	word32 r5_r4_354 = Mem353[r3_r2_1807 + 8<32>:word32]
	word32 r7_r6_356 = Mem353[r3_r2_1807 + 0x14<32>:word32]
	Mem366[r3_r2_1807 + 0x14<32>:word32] = r7_r6_356 + 1<32>
	Mem374[r5_r4_354 + r7_r6_356:byte] = SLICE(r1_275, byte, 0)
	word16 r4_376 = Mem374[r3_r2_1807 + 0x2410<32>:word16]
	word32 r1_r0_379 = Mem374[r3_r2_1807 + 8<32>:word32]
	word32 r7_r6_381 = Mem374[r3_r2_1807 + 0x14<32>:word32]
	Mem391[r3_r2_1807 + 0x14<32>:word32] = r7_r6_381 + 1<32>
	Mem399[r1_r0_379 + r7_r6_381:byte] = SLICE(r4_376 >>u 8<8>, byte, 0)
	Mem401[r3_r2_1807 + 0x1208<32>:word16] = 0<16>
	Mem403[r3_r2_1807 + 0x120A<32>:word16] = 0<16>
	return
l0000B178:
	branch r0_223 >= 7<16> l0000B1A0
l0000B17C:
	word32 r5_r4_417 = Mem416[r3_r2_1807 + 8<32>:word32]
	word32 r7_r6_419 = Mem416[r3_r2_1807 + 0x14<32>:word32]
	Mem429[r3_r2_1807 + 0x14<32>:word32] = r7_r6_419 + 1<32>
	Mem437[r5_r4_417 + r7_r6_419:byte] = SLICE(r1_275, byte, 0)
	Mem442[r3_r2_1807 + 0x2410<32>:word16] = Mem437[r3_r2_1807 + 0x2410<32>:word16] >>u 8<8>
	Mem449[r3_r2_1807 + 0x2414<32>:word16] = Mem442[r3_r2_1807 + 0x2414<32>:word16]
l0000B1A0:
	return
l0000AB2C:
	branch Mem457[r5_r4_1795 + 0x1610<32>:word16] != 0<16> l0000AB36_thunk_fn0000B29A
l0000AB36_thunk_fn0000B29A:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg96 = <invalid>
	fn0000B29A(r7, r12, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg64, stackArg72, stackArg96)
	return
l0000AB3A:
	r6_1131 = 0xFFF9<16>
	branch Mem457[r5_r4_1795 + 0x160C<32>:word16] != 0<16> l0000AB48_thunk_fn0000B298
l0000AB48_thunk_fn0000B298:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg96 = <invalid>
	word32 r12_1901
	word32 r13_1902
	word16 r3_1900
	fn0000B298(r1, r7, r12, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg64, stackArg72, stackArg96, out r3_1900, out r12_1901, out r13_1902)
	return
l0000AB4C:
	r0_1008 = 0xFFF8<16>
	r7_1204 = r7_1204 + 0xFFF1<16>
	r1_1002 = 0xFFF8<16>
	r2_1116 = Mem457[r5_r4_1795 + 0x1608<32>:word16]
l0000A77A:
	word16 v45_478 = Mem268[dwArg60:word16]
	word16 r11_480 = 1<16>
	r9_146 = v45_478
	dwArg58_1564 = SEQ(SLICE(dwArg60, word16, 16), v34_150)
	word32 r1_r0_1790 = SEQ(r1_259 + 1<16>, v34_150)
l0000A78A:
	word32 r5_r4_495 = r12_1077 + 4<32>
	word16 r4_497 = SLICE(r5_r4_495, word16, 0)
	r8_1006 = Mem498[r5_r4_495 + 0x1668<32>:word16]
	word16 r1_514 = Mem498[(r1_r0_1790 << 2<8>) + r13_110:word16]
	branch v34_150 <= 2<16> l0000A7C4
l0000A7A4:
	word16 r6_521 = Mem498[r5_r4_495 + 0x166C<32>:word16]
	r1_514 = r1_514 + 1<16>
	wArg40 = r6_521
	r4_497 = Mem523[(r5_r4_495 << 2<8>) + r13_110:word16]
	branch r1_514 + 1<16> >u r4_497 l0000AA56
l0000AA56:
l0000AA56_thunk_fn0000AA58:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000AA58(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
l0000AA56_thunk_fn0000AA58:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000AA58(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
l0000A7BE:
	branch r1_514 + 1<16> == r4_497 l0000A8AA
l0000A8AA:
	byte v63_552 = Mem523[r5_r4_495 + r12_1077 + 0xFB2<32>:byte]
	r4_497 = SEQ(SLICE(r4_497, byte, 8), v63_552)
	branch Mem523[r1_r0_1790 + r12_1077 + 0xFB2<32>:byte] <u v63_552 l0000A7C2
l0000A8BA:
	r8_1006 = r6_521
l0000A7C2:
l0000A7C4:
	branch r1_514 >u v45_478 l0000A7E2
l0000A7C8:
	branch r1_514 == v45_478 l0000A8C0
l0000A8C0:
	byte v57_589 = Mem584[dwArg50 + 0xFB2<32>:byte]
	word32 r3_r2_578 = CONVERT(r8_1006, word16, int32) + r12_1077
	word16 r5_588 = SLICE(dwArg50, word16, 0)
	word16 r4_592 = SEQ(SLICE(r4_497, byte, 8), v57_589)
l0000A8CA:
	byte v58_593 = Mem584[r3_r2_578 + 0xFB2<32>:byte]
	word16 r1_594 = SEQ(SLICE(r1_514, byte, 8), v58_593)
	branch v58_593 <u v57_589 l0000A6C8
l0000A6C8:
l0000A6C8_thunk_fn0000AA58:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000AA58(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
l0000A6CA:
	Mem616[(CONVERT(r11_480, word16, int32) + 0x59A<32>) * 2<32> + r12_1077:word16] = r8_1006
	r10_1193 = 2<16>
	r11_155 = 4<16>
	r1_r0_1784 = SEQ(r1_594, 4<16>) (alias)
	r5_r4_1787 = SEQ(r5_588, r4_592) (alias)
	branch v34_150 > 2<16> l0000A684
l0000A8D0_thunk_fn0000A8D6:
	fn0000A8D6()
	return
l0000A7CC:
	Mem639[(CONVERT(r11_480, word16, int32) + 0x59A<32>) * 2<32> + r12_1077:word16] = r8_1006
	r11_480 = 4<16>
	r1_r0_1790 = SEQ(r1_514, 4<16>) (alias)
	branch v34_150 > 2<16> l0000A78A
l0000A7E2:
	Mem667[(CONVERT(r11_480, word16, int32) + 0x59A<32>) * 2<32> + r12_1077:word16] = wArg58_1684
	dwArg78 = dwArg78 + 0xFFFE<32>
	r3_227 = Mem706[r12_1077 + 0x166C<32>:word16]
	word16 r5_714 = Mem708[dwArg78 + 0x1668<32>:word16]
	Mem716[r12_1077 + 0x166C<32>:word16] = r5_714
	word16 r0_673 = SLICE(dwArg78, word16, 0) + 0xFFFE<16>
	word16 r1_680 = SLICE(dwArg60, word16, 0) + 4<16>
	dwArg60 = dwArg60 + 4<32>
	r2_1116 = SLICE(dwArg50, word16, 0) + 1<16> (alias)
	dwArg50 = dwArg50 + 1<32>
	dwArg88 = dwArg88 + 0xFFFC<32>
	dwArg90 = dwArg90 + 0xFFFC<32>
	wArg80 = r3_227
	r9_1005 = v34_150 + 0xFFFF<16>
	word16 r4_713 = SLICE(dwArg78, word16, 0)
	wArg48 = r5_714
	dwArg68_1533 = SEQ(wArg6A, wArg58_1684) (alias)
	branch v34_150 != 2<16> l0000A472
l0000A858_thunk_fn0000A460:
	fn0000A460(SEQ(r11, r10), SEQ(r9, r8))
	return
l0000A85C:
	r11_155 = 1<16>
l0000A56E:
	word32 r1_r0_721 = SEQ(r1_680, r0_673)
l0000A570:
	word16 r1_732 = Mem716[(r1_r0_721 << 2<8>) + r13_110:word16]
	r0_1008 = wArg58_1684
	branch v34_150 < wArg58_1684 l0000A59C
l0000A578_thunk_fn0000A59C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg64 = <invalid>
	word16 stackArg72 = <invalid>
	word16 stackArg80 = <invalid>
	word16 stackArg82 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg96 = <invalid>
	word16 stackArg104 = <invalid>
	word16 stackArg112 = <invalid>
	word16 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg144 = <invalid>
	fn0000A59C(r0, r1, r2, r8, r9, r11, r12, r13, ra, stackArg64, stackArg72, stackArg80, stackArg82, stackArg88, stackArg96, stackArg104, stackArg112, stackArg116, stackArg120, stackArg136, stackArg144)
	return
l0000A57A:
	word32 r5_r4_748 = (SEQ(r5_714, r4_713) << 2<8>) + r13_110
	r1_1002 = r1_732 + 1<16>
	r7_1204 = r5_714 (alias)
	r6_1131 = r4_713 (alias)
	word16 r5_749 = SLICE(r5_r4_748, word16, 16)
	r4_1036 = Mem740[r5_r4_748:word16]
	r11_r10_1805 = SEQ(1<16>, wArg58_1684) (alias)
	branch r1_732 + 1<16> >u r4_1036 l0000ACA8
l0000A594:
	branch r1_732 + 1<16> == r4_1036 l0000AB56
l0000AB56:
	r5_r4_1795 = SEQ(r5_749, SLICE(r4_1036, byte, 0) *s32 SLICE(wArg58_1684, byte, 0)) (alias)
l0000AB58:
	branch r2_1116 != 0<16> l0000ABDE
l0000AB5C:
	word16 r7_766 = r7_1204 + 0xFFF7<16>
	r6_1131 = 0xFFF7<16>
	word16 r2_773 = Mem772[r5_r4_1795 + 0x1604<32>:word16]
	branch r2_773 != 0<16> l0000B0E2_in_fn0000A416
l0000B0E2_in_fn0000A416:
	Mem781[SEQ(r3_227, r2_773) + 0x14<32>:word32] = r5_r4_1795 + 1<32>
	Mem789[SEQ(r1_1002, 0xFFF7<16>) + r5_r4_1795:byte] = 0xF7<8>
	word16 r4_791 = Mem789[SEQ(r3_227, r2_773) + 0x2410<32>:word16]
	word32 r1_r0_794 = Mem789[SEQ(r3_227, r2_773) + 8<32>:word32]
	word32 ra_796 = Mem789[SEQ(r3_227, r2_773) + 0x14<32>:word32]
	Mem804[SEQ(r3_227, r2_773) + 0x14<32>:word32] = ra_796 + 1<32>
	Mem812[r1_r0_794 + ra_796:byte] = SLICE(r4_791 >>u 8<8>, byte, 0)
	Mem814[SEQ(r3_227, r2_773) + 0x1208<32>:word16] = 0<16>
	Mem816[SEQ(r3_227, r2_773) + 0x120A<32>:word16] = 0<16>
	return
l0000AB6E:
	r1_115 = 0xFFF6<16>
l0000AB72:
	r7_1204 = r7_766 + 0xFFF6<16>
l0000AB74:
	r0_1008 = r1_115
	r2_1116 = Mem830[r5_r4_1795 + 0x1600<32>:word16]
	branch r2_1116 != 0<16> l0000ABDE
l0000AB7E:
	word16 r7_836 = r7_1204 + 0xFFF5<16>
	r6_1131 = 0xFFF5<16>
	word16 r2_840 = Mem830[r5_r4_1795 + 0x15FC<32>:word16]
	branch r2_840 != 0<16> l0000AB8C_thunk_fn0000B0C0
l0000AB8C_thunk_fn0000B0C0:
	word16 r11_1871
	word32 ra_1872
	fn0000B0C0(SEQ(r3_227, r2_840), r11_155, out r11_1871, out ra_1872)
	return
l0000AB90:
	r0_1008 = 0xFFF4<16>
	r7_1204 = r7_836 + 0xFFF4<16>
	r2_1116 = Mem830[r5_r4_1795 + 0x15F8<32>:word16]
	branch r2_1116 != 0<16> l0000ABDE
l0000ABA0:
	r6_1131 = 0xFFF3<16>
	word16 r2_870 = Mem830[r5_r4_1795 + 0x15F4<32>:word16]
	branch r2_870 != 0<16> l0000ABAE_thunk_fn0000B09E
l0000ABAE_thunk_fn0000B09E:
	word16 r11_1869
	word32 ra_1870
	word16 r7_1868
	word16 r4_1865
	word16 r5_1866
	word16 r6_1867
	fn0000B09E(SEQ(r3_227, r2_870), r11_155, out r4_1865, out r5_1866, out r6_1867, out r7_1868, out r11_1869, out ra_1870)
	return
l0000ABB2:
	r0_1008 = 0xFFF2<16>
	r7_1204 = r7_836 + 0xFFD9<16>
	r2_1116 = Mem830[r5_r4_1795 + 0x15F0<32>:word16]
	branch r2_1116 != 0<16> l0000ABDE
l0000ABC2:
	r6_1131 = 0xFFF1<16>
	branch Mem830[r5_r4_1795 + 0x15EC<32>:word16] != 0<16> l0000ABD0_thunk_fn0000B07C
l0000ABD0_thunk_fn0000B07C:
	word16 r9_1860
	word16 r10_1861
	word16 r11_1862
	word32 r13_1863
	word32 ra_1864
	word16 r7_1859
	word16 r2_1856
	word16 r6_1858
	word16 r3_1857
	fn0000B07C(SEQ(r11, r10), SEQ(r5, r4), SEQ(r9, r8), r2, r6, r13, out r2_1856, out r3_1857, out r6_1858, out r7_1859, out r9_1860, out r10_1861, out r11_1862, out r13_1863, out ra_1864)
	return
l0000ABD4:
	r0_1008 = 0xFFF0<16>
	r7_1204 = r7_836 + 0xFFBA<16>
	r2_1116 = Mem830[r5_r4_1795 + 0x15E8<32>:word16]
l0000ABDE:
	Mem926[(CONVERT(r0_1008, word16, int32) + 0x58A<32>) * 2<32> + r12_1077:word16] = r2_1116
	word32 r1_r0_934 = CONVERT(r6_1131, word16, int32) * 2<32> + r12_1077
	Mem939[r1_r0_934 + 0x1628<32>:word16] = Mem926[r1_r0_934 + 0x1628<32>:word16] + 2<16>
	Mem946[r5_r4_1795 + 0x1628<32>:word16] = Mem939[r5_r4_1795 + 0x1628<32>:word16]
l0000AC0A:
	branch r3_227 >= 0<16> l0000AC22
l0000AC22:
	branch r7_1204 == 0<16> l0000ACD6
l0000AC2A:
	dwArg68_1533 = r5_r4_1795
	wArg48 = 0x23D<16>
l0000AC36:
	word16 wArg50_1541 = SLICE(dwArg50, word16, 0)
	word16 wArg58_1538 = SLICE(dwArg58_1564, word16, 0)
	word16 r10_967 = SLICE(dwArg68_1533, word16, 0)
	word16 r11_968 = Mem964[dwArg68_1533 + 0x1628<32>:word16]
l0000AC3E:
	dwArg58_1548 = dwArg58_1544
	branch r11_968 == 0<16> l0000ACB8
l0000AC46:
	word32 r11_r10_979 = SEQ(r11_968, r10_967)
	r11_r10_1805 = SEQ(r11_968, r10_967) + CONVERT(wArg48, word16, int32) * 2<32>
	r7_1204 = wArg48
	r12_1077 = r11_r10_979
	wArg70 = wArg58_1538
	word16 r0_991 = Mem990[r11_r10_1805 + 0x1668<32>:word16]
	dwArg58_1544 = dwArg58_1564 (alias)
	branch r0_991 > wArg50_1541 l0000AC6A_thunk_fn0000AF16
l0000AC6A_thunk_fn0000AF16:
	fn0000AF16(SEQ(r1, r0), SEQ(r3, r2), ra)
	return
l0000AC6E:
	word32 r1_r0_995 = CONVERT(r0_991, word16, int32)
	word32 r9_r8_1004 = dwArg60 + (r1_r0_995 << 2<8>)
	r1_1002 = SLICE(r1_r0_995 << 2<8>, word16, 16) (alias)
	r9_1005 = SLICE(r9_r8_1004, word16, 16) (alias)
	r8_1006 = SLICE(r9_r8_1004, word16, 0) (alias)
	r0_1008 = Mem990[r9_r8_1004 + 2<32>:word16]
	branch wArg58_1538 == r0_1008 l0000ACA4
l0000AC82:
	word32 r5_r4_1853
	fn0000D358(r2, r3, r4, r5, out r5_r4_1853)
	word32 r1_r0_1027 = CONVERT(r0_1008, word16, word32) - dwArg58_1564 + Mem990[r11_r10_979 + 0x23F8<32>:word32]
	Mem1031[r11_r10_979 + 0x23F8<32>:word32] = r1_r0_1027
	Mem1033[r9_r8_1004 + 2<32>:word16] = wArg58_1538
	r1_1002 = SLICE(r1_r0_1027, word16, 16) (alias)
	r0_1008 = SLICE(r1_r0_1027, word16, 0) (alias)
l0000ACA4:
	r4_1036 = r11_968
	dwArg58_1548 = dwArg58_1544
l0000ACA8:
	wArg6A = SLICE(dwArg68_1533, word16, 16) (alias)
	word16 r10_1045 = SLICE(r11_r10_1805, word16, 0)
	sp_1041 = fp
	word16 r9_1039 = r9_1005 + 0xFFFF<16>
	wArg40 = r4_1036
	word16 r11_1049 = SLICE(r11_r10_1805 + 0xFFFE<32>, word16, 16)
	branch r4_1036 != 0<16> l0000AED4
l0000AED4:
	r9_r8_1776 = SEQ(r9_1039, r8_1006) (alias)
	r11_r10_1779 = SEQ(r11_1049, r10_1045 + 0xFFFE<16>) (alias)
l0000AED4_thunk_fn0000AF0C:
	fn0000AF0C(SEQ(r1, r0), SEQ(r3, r2), ra)
	return
l0000ACB8:
	dwArg58_1564 = dwArg58_1548 + 0xFFFFFFFF<32>
	dwArg68_1533 = dwArg68_1533 + 0xFFFE<32>
	branch SLICE(dwArg58_1564, word16, 0) != 0<16> l0000AC36
l0000ACD6:
l0000AD24_thunk_fn0000AA58:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000AA58(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
l0000AC0E:
	r2_1116 = Mem946[r5_r4_1795 + 0x1624<32>:word16]
	branch r2_1116 == 0<16> l0000A9DC
l0000A9DC:
l0000A9E8_thunk_fn0000AA58:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg18 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000AA58(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r0, r1, r6, r7, r11, r12, r13, ra, stackArg18, stackArg160)
	return
l0000AC1A:
	r6_1131 = r7_1204
	r0_1008 = wArg70
l0000A59A:
l0000A59A_thunk_fn0000A59C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg64 = <invalid>
	word16 stackArg72 = <invalid>
	word16 stackArg80 = <invalid>
	word16 stackArg82 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg96 = <invalid>
	word16 stackArg104 = <invalid>
	word16 stackArg112 = <invalid>
	word16 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg144 = <invalid>
	fn0000A59C(r0, r1, r2, r8, r9, r11, r12, r13, ra, stackArg64, stackArg72, stackArg80, stackArg82, stackArg88, stackArg96, stackArg104, stackArg112, stackArg116, stackArg120, stackArg136, stackArg144)
	return
fn0000AE66_exit:
l0000A6C4:
	branch r1_115 == r9_146 l0000AAEA
l0000AE9A:
	word32 r3_r2_1145 = CONVERT(r4_31, word16, int32) * 2<32> + r12_1077
	Mem1151[r3_r2_1145 + 0x1628<32>:word16] = Mem47[r3_r2_1145 + 0x1628<32>:word16]
	word16 r1_1149 = r1_1002 + 1<16>
	branch r5_7 < Mem1151[sp_1041 + 0x78<32>:word16] l0000AEC2
l0000AEB2:
l0000AEC2:
	word32 r5_r4_1834
	fn0000D358(r2, r3, r4, r5, out r5_r4_1834)
	Mem1188[r12_1077 + 0x23F8<32>:word32] = SEQ(r1_1149, r0_1008) + Mem1151[r12_1077 + 0x23F8<32>:word32]


void fn0000AF06(word32 r3_r2, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000046AC
// MayUse:  ra:[0..31] Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r2 r3 r4 r5 ra sp
// Preserved:
fn0000AF06_entry:
l0000AF06:
l0000AF08_thunk_fn0000AF0C:
	fn0000AF0C(0x6A<32>, r3_r2, ra)
	return
fn0000AF06_exit:


void fn0000AF0C(word32 r1_r0, word32 r3_r2, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
//      fn0000AF06
// MayUse:  ra:[0..31] Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r2 r3 r4 r5 ra
// Preserved: sp
fn0000AF0C_entry:
l0000AF0C:
	Mem33[r3_r2 + 0x15E0<32>:word32] = r1_r0 + r3_r2
l0000AF12_thunk_fn0000AF16:
	fn0000AF16(0xF2A8<32>, r3_r2, ra)
	return
fn0000AF0C_exit:


void fn0000AF16(word32 r1_r0, word32 r3_r2, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
//      fn0000AF06
//      fn0000AF0C
// MayUse:  ra:[0..31] Sequence r1:r0:[0..31] Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r2 r3 r4 r5 ra
// Preserved: sp
fn0000AF16_entry:
l0000AF16:
	Mem32[r3_r2 + 0x15F0<32>:word32] = r1_r0
	Mem41[r3_r2 + 0x15F8<32>:word32] = r3_r2 + 0x95E<32>
	Mem46[r3_r2 + 0x1608<32>:word32] = 0xF298<32>
	Mem55[r3_r2 + 0x1610<32>:word32] = r3_r2 + 0xA52<32>
	Mem60[r3_r2 + 0x1620<32>:word32] = 0xF288<32>
	Mem62[r3_r2 + 0x1208<32>:word16] = 0<16>
	Mem64[r3_r2 + 0x120A<32>:word16] = 0<16>
l0000AF4E_thunk_fn0000AF50:
	fn0000AF50(0xF288<32>, 0xF288<32>, ra + 0x478<32>, ra)
	return
fn0000AF16_exit:


void fn0000AF50(word32 r1_r0, word32 r3_r2, word32 r5_r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AF06
//      fn0000AF16
// MayUse:  ra:[0..31] Sequence r1:r0:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r2 r3 r4 r5 ra sp
// Preserved:
fn0000AF50_entry:
	word32 r1_r0_97 = r1_r0
l0000AF50:
	Mem6[r1_r0_106 + 0x6A<32>:word16] = 0<16>
	word16 r0_4 = SLICE(r1_r0_106, word16, 0)
	word16 r1_9 = SLICE(r1_r0_106 + 4<32>, word16, 16)
	r1_r0_97 = SEQ(r1_9, r0_4 + 4<16>) (alias)
	r1_r0_106 = r1_r0_97
	branch r5_r4 != r1_r0_106 + 4<32> l0000AF50
l0000AF5A:
	word32 r1_r0_101 = SEQ(r1_9, r0_4 + 4<16>)
l0000AF62:
	Mem33[r1_r0_105 + 0x95E<32>:word16] = 0<16>
	r1_r0_101 = SEQ(SLICE(r1_r0_105 + 4<32>, word16, 16), SLICE(r1_r0_105, word16, 0) + 4<16>) (alias)
	r1_r0_105 = r1_r0_101
	branch r3_r2 + 0x78<32> != r1_r0_105 + 4<32> l0000AF62
l0000AF6C:
l0000AF72:
	Mem56[ra + 0xA52<32>:word16] = 0<16>
	ra = ra + 4<32>
	branch ra != r1_r0_106 + 0x50<32> l0000AF72
l0000AF7C:
	Mem66[r1_r0_106 + 0x46E<32>:word16] = 1<16>
	Mem70[r1_r0_106 + 0x2404<32>:word32] = 0<32>
	Mem71[r1_r0_106 + 0x23FC<32>:word32] = 0<32>
	Mem72[r1_r0_106 + 0x1208<32>:word16] = 0<16>
	Mem73[r1_r0_106 + 0x11FA<32>:word16] = 0<16>
	return
fn0000AF50_exit:


word32 fn0000AF94(word32 r5_r4, word32 r9_r8, word16 r6, word32 r13, word32 dwArg0C, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn00004CD4
// MayUse:  r13:[0..31] r6:[0..15] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +000C:[0..31]
// LiveOut: r10 r11 r12 r13 r2:r1 r3 r6 r7 r9 ra sp
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r6 r7 r9 ra sp
// Preserved:
fn0000AF94_entry:
l0000AF94:
l0000AF96_thunk_fn0000AF98:
	word16 r10_19
	word16 r11_20
	word32 r12_21
	word32 r13_22
	word16 r2_23
	word16 r3_24
	word16 r6_25
	word16 r7_26
	word16 r9_27
	word32 ra_28
	word16 r1_18 = fn0000AF98(r5_r4, r9_r8, r6, r13, dwArg0C, out r2_23, out r3_24, out r6_25, out r7_26, out r9_27, out r10_19, out r11_20, out r12_21, out r13_22, out ra_28)
	r3Out = r3_24
	r6Out = r6_25
	r7Out = r7_26
	r9Out = r9_27
	r10Out = r10_19
	r11Out = r11_20
	r12Out = r12_21
	r13Out = r13_22
	raOut = ra_28
	return SEQ(r2_23, r1_18)
fn0000AF94_exit:


word16 fn0000AF98(word32 r5_r4, word32 r9_r8, word16 r6, word32 r13, word32 dwArg12, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AF94
//      fn0000B718
// MayUse:  r13:[0..31] r6:[0..15] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0012:[0..31]
// LiveOut: r1 r10 r11 r12 r13 r2 r3 r6 r7 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r6 r7 r9 ra
// Preserved: sp
fn0000AF98_entry:
	ptr32 fp
l0000AF98:
	word32 r3_r2_79 = Mem0[r9_r8 + 0x14<32>:word32]
	word16 v9_77 = Mem0[r9_r8 + 0x2414<32>:word16]
	word32 r1_r0_88 = Mem0[r9_r8 + 8<32>:word32] + r3_r2_79
	word16 r7_97 = __a_shift<word16,word16>(r6, SEQ(SLICE(r3_r2_79, byte, 8), SLICE(v9_77, byte, 0)))
	Mem102[r9_r8 + 0x2410<32>:word16] = r7_97
	word32 r12_78 = SEQ(SLICE(fp + 0x12<32>, word16, 16), v9_77)
	branch v9_77 < 0xD<16> l0000AFC2_thunk_fn0000B058
l0000AFC2_thunk_fn0000B058:
	word16 r10_115
	word16 r11_116
	word32 r13_117
	word16 r2_118
	word16 r3_119
	word16 r6_120
	word16 r7_121
	word16 r9_122
	word32 ra_123
	word16 r1_114 = fn0000B058(r1_r0_88, dwArg12, r5_r4, r9_r8, r6, r7_97, r13, r3_r2_79 + 1<32>, out r2_118, out r3_119, out r6_120, out r7_121, out r9_122, out r10_115, out r11_116, out r13_117, out ra_123)
	r2Out = r2_118
	r3Out = r3_119
	r6Out = r6_120
	r7Out = r7_121
	r9Out = r9_122
	r10Out = r10_115
	r11Out = r11_116
	r12Out = <invalid>
	r13Out = r13_117
	raOut = ra_123
	return r1_114
l0000AFC2_thunk_fn0000AFC4:
	word16 r10_133
	word16 r11_134
	word32 r13_135
	word16 r2_136
	word16 r3_137
	word16 r6_138
	word16 r7_139
	word16 r9_140
	word32 ra_141
	word16 r1_132 = fn0000AFC4(r1_r0_88, dwArg12, r5_r4, r9_r8, r7_97, r12_78, r13, r3_r2_79 + 1<32>, out r2_136, out r3_137, out r6_138, out r7_139, out r9_140, out r10_133, out r11_134, out r13_135, out ra_141)
	r2Out = r2_136
	r3Out = r3_137
	r6Out = r6_138
	r7Out = r7_139
	r9Out = r9_140
	r10Out = r10_133
	r11Out = r11_134
	r12Out = <invalid>
	r13Out = r13_135
	raOut = ra_141
	return r1_132
fn0000AF98_exit:


word16 fn0000AFC4(word32 r1_r0, word32 r11_r10, word32 r5_r4, word32 r9_r8, word16 r7, word32 r12, word32 r13, word32 ra, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AF94
//      fn0000AF98
// MayUse:  r12:[0..15] r13:[0..31] r7:[0..15] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Preserved: sp
fn0000AFC4_entry:
l0000AFC4:
	word16 v5_4 = SLICE(r12, word16, 0)
	Mem12[r9_r8 + 0x2414<32>:word16] = v5_4
l0000AFC8_thunk_fn0000B058:
	word16 r10_28
	word16 r11_29
	word32 r13_30
	word16 r2_31
	word16 r3_32
	word16 r6_33
	word16 r7_34
	word16 r9_35
	word32 ra_36
	word16 r1_27 = fn0000B058(r1_r0, r11_r10, r5_r4, r9_r8, v5_4, r7, r13, ra, out r2_31, out r3_32, out r6_33, out r7_34, out r9_35, out r10_28, out r11_29, out r13_30, out ra_36)
	r2Out = r2_31
	r3Out = r3_32
	r6Out = r6_33
	r7Out = r7_34
	r9Out = r9_35
	r10Out = r10_28
	r11Out = r11_29
	r13Out = r13_30
	raOut = ra_36
	return r1_27
fn0000AFC4_exit:


word16 fn0000AFCC(word32 r1_r0, word32 r11_r10, word32 r5_r4, word32 r9_r8, word16 r6, word16 r7, word32 r13, word32 ra, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B058
//      fn0000B094
// MayUse:  r13:[0..31] r6:[0..15] r7:[0..7] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Preserved: sp
fn0000AFCC_entry:
	word16 wLoc06
	word16 wLoc04
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
	word16 r10 = SLICE(r11_r10, word16, 0)
l0000AFCC:
	branch r6 < 8<16> l0000B03E
l0000B03E:
	Mem10[r9_r8 + 0x14<32>:word32] = ra
	Mem16[r1_r0:byte] = SLICE(r7, byte, 0)
	word16 r6_18 = Mem16[r9_r8 + 0x2410<32>:word16]
	word32 r1_r0_21 = Mem16[r9_r8 + 8<32>:word32]
	word32 r3_r2_23 = Mem16[r9_r8 + 0x14<32>:word32]
	Mem29[r9_r8 + 0x14<32>:word32] = r3_r2_23 + 1<32>
	Mem37[r1_r0_21 + r3_r2_23:byte] = SLICE(r6_18 >>u 8<8>, byte, 0)
	r6 = r6_18 >>u 8<8>
l0000AFD0:
	branch r6 >= 0<16> l0000AFE2
l0000AFD4:
	Mem41[r9_r8 + 0x14<32>:word32] = ra
	Mem44[r1_r0:byte] = SLICE(r7, byte, 0)
l0000AFD8:
	word32 r3_r2_49 = Mem48[r9_r8 + 0x14<32>:word32]
	ra = r3_r2_49 + 1<32>
	r1_r0 = Mem48[r9_r8 + 8<32>:word32] + r3_r2_49
l0000AFE2:
	Mem65[r9_r8 + 0x1208<32>:word16] = 0<16>
	Mem67[r9_r8 + 0x120A<32>:word16] = 0<16>
	Mem70[r9_r8 + 0x14<32>:word32] = ra
	Mem78[r1_r0:byte] = SLICE(r10, byte, 0)
	word32 r1_r0_80 = Mem78[r9_r8 + 8<32>:word32]
	word32 r3_r2_82 = Mem78[r9_r8 + 0x14<32>:word32]
	Mem88[r9_r8 + 0x14<32>:word32] = r3_r2_82 + 1<32>
	Mem97[r1_r0_80 + r3_r2_82:byte] = SLICE(r10 >>u 8<8>, byte, 0)
	word32 r1_r0_99 = Mem97[r9_r8 + 8<32>:word32]
	word32 r3_r2_101 = Mem97[r9_r8 + 0x14<32>:word32]
	Mem107[r9_r8 + 0x14<32>:word32] = r3_r2_101 + 1<32>
	Mem121[r1_r0_99 + r3_r2_101:byte] = SLICE(r10, byte, 0)
	word16 r9_117 = SEQ(SLICE(r9, byte, 8), ~SLICE(r9, byte, 0))
	word32 r1_r0_123 = Mem121[SEQ(r9_117, r8) + 8<32>:word32]
	word32 r3_r2_125 = Mem121[SEQ(r9_117, r8) + 0x14<32>:word32]
	Mem131[SEQ(r9_117, r8) + 0x14<32>:word32] = r3_r2_125 + 1<32>
	Mem141[r1_r0_123 + r3_r2_125:byte] = SLICE(r10 >>u 8<8>, byte, 0)
	word16 r9_136 = ~r9_117
	word32 r3_r2_150 = Mem141[SEQ(r9_136, r8) + 8<32>:word32] + Mem141[SEQ(r9_136, r8) + 0x14<32>:word32]
	word32 r13_170
	fn0000DB24(r3_r2_150, r5_r4, r13, out r13_170)
	word32 r1_r0_175 = Mem157[SEQ(r9_136, r8) + 0x14<32>:word32]
	word32 r11_r10_182 = r11_r10 + r1_r0_175
	Mem186[SEQ(r9_136, r8) + 0x14<32>:word32] = r11_r10_182
	r2Out = SLICE(r3_r2_150, word16, 0)
	r3Out = SLICE(r3_r2_150, word16, 16)
	r6Out = r6
	r7Out = wLoc06
	r9Out = r9_136
	r10Out = SLICE(r11_r10_182, word16, 0)
	r11Out = SLICE(r11_r10_182, word16, 16)
	r13Out = r13_170
	raOut = SEQ(r10, wLoc04)
	return SLICE(r1_r0_175, word16, 16)
fn0000AFCC_exit:


word16 fn0000B058(word32 r1_r0, word32 r11_r10, word32 r5_r4, word32 r9_r8, word16 r6, word16 r7, word32 r13, word32 ra, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AF94
//      fn0000AF98
// MayUse:  r13:[0..31] r6:[0..15] r7:[0..7] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Preserved: sp
fn0000B058_entry:
l0000B058:
	Mem7[r9_r8 + 0x14<32>:word32] = ra
	Mem13[r1_r0:byte] = SLICE(r7, byte, 0)
	word32 r3_r2_20 = Mem13[r9_r8 + 0x14<32>:word32]
	word16 r7_15 = Mem13[r9_r8 + 0x2410<32>:word16]
	word32 r1_r0_18 = Mem13[r9_r8 + 8<32>:word32]
	Mem26[r9_r8 + 0x14<32>:word32] = r3_r2_20 + 1<32>
	Mem33[r1_r0_18 + r3_r2_20:byte] = SLICE(r7_15 >>u 8<8>, byte, 0)
	word16 r2_39 = SEQ(SLICE(r3_r2_20, byte, 8), Mem33[r9_r8 + 0x2414<32>:byte])
l0000B07A_thunk_fn0000B07C:
	word16 r10_56
	word16 r11_57
	word32 r13_58
	word16 r2_59
	word16 r3_60
	word16 r6_61
	word16 r7_62
	word16 r9_63
	word32 ra_64
	word16 r1_55 = fn0000B07C(r11_r10, r5_r4, r9_r8, r2_39, r6, r13, out r2_59, out r3_60, out r6_61, out r7_62, out r9_63, out r10_56, out r11_57, out r13_58, out ra_64)
	r2Out = r2_59
	r3Out = r3_60
	r6Out = r6_61
	r7Out = r7_62
	r9Out = r9_63
	r10Out = r10_56
	r11Out = r11_57
	r13Out = r13_58
	raOut = ra_64
	return r1_55
fn0000B058_exit:


word16 fn0000B07C(word32 r11_r10, word32 r5_r4, word32 r9_r8, word16 r2, word16 r6, word32 r13, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
//      fn0000B058
// MayUse:  r13:[0..31] r2:[0..15] r6:[0..15] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Preserved: sp
fn0000B07C_entry:
l0000B07C:
	word16 r7_38 = __l_shift<word16,word16>(r6, r2)
	Mem42[r9_r8 + 0x2410<32>:word16] = r7_38
	Mem47[r9_r8 + 0x2414<32>:word16] = 0xFFF3<16>
	word32 r3_r2_49 = Mem47[r9_r8 + 0x14<32>:word32]
l0000B092_thunk_fn0000B094:
	word16 r10_65
	word16 r11_66
	word32 r13_67
	word16 r2_68
	word16 r3_69
	word16 r6_70
	word16 r7_71
	word16 r9_72
	word32 ra_73
	word16 r1_64 = fn0000B094(r11_r10, r3_r2_49, r5_r4, r9_r8, 0xFFF3<16>, r7_38, r13, r3_r2_49 + 1<32>, out r2_68, out r3_69, out r6_70, out r7_71, out r9_72, out r10_65, out r11_66, out r13_67, out ra_73)
	r2Out = r2_68
	r3Out = r3_69
	r6Out = r6_70
	r7Out = r7_71
	r9Out = r9_72
	r10Out = r10_65
	r11Out = r11_66
	r13Out = r13_67
	raOut = ra_73
	return r1_64
fn0000B07C_exit:


word16 fn0000B094(word32 r11_r10, word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r6, word16 r7, word32 r13, word32 ra, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
//      fn0000B058
//      fn0000B07C
// MayUse:  r13:[0..31] r6:[0..15] r7:[0..15] ra:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Trashed: CFLNZ r0 r1 r10 r11 r13 r2 r3 r6 r7 r9 ra
// Preserved: sp
fn0000B094_entry:
l0000B094:
	word32 r1_r0_45 = Mem0[r9_r8 + 8<32>:word32] + r3_r2
l0000B098_thunk_fn0000AFCC:
	word16 r10_62
	word16 r11_63
	word32 r13_64
	word16 r2_65
	word16 r3_66
	word16 r6_67
	word16 r7_68
	word16 r9_69
	word32 ra_70
	word16 r1_61 = fn0000AFCC(r1_r0_45, r11_r10, r5_r4, r9_r8, r6, r7, r13, ra, out r2_65, out r3_66, out r6_67, out r7_68, out r9_69, out r10_62, out r11_63, out r13_64, out ra_70)
	r2Out = r2_65
	r3Out = r3_66
	r6Out = r6_67
	r7Out = r7_68
	r9Out = r9_69
	r10Out = r10_62
	r11Out = r11_63
	r13Out = r13_64
	raOut = ra_70
	return r1_61
fn0000B094_exit:


word16 fn0000B09C(word32 r3_r2, word16 r11, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn000034CE
//      fn00003B2A
//      fn00004ADC
//      fn00004CD4
// MayUse:  r11:[0..15] Sequence r3:r2:[0..31]
// LiveOut: r1 r11 r4 r5 r6 r7 ra
// Trashed: CFLNZ r0 r1 r11 r4 r5 r6 r7 ra
// Preserved: sp
fn0000B09C_entry:
l0000B09C:
l0000B09C_thunk_fn0000B09E:
	word16 r4_12
	word16 r5_13
	word16 r6_14
	word16 r7_15
	word32 ra_16
	word16 r11_18
	word16 r1_11 = fn0000B09E(r3_r2, r11, out r4_12, out r5_13, out r6_14, out r7_15, out r11_18, out ra_16)
	r4Out = r4_12
	r5Out = r5_13
	r6Out = r6_14
	r7Out = r7_15
	r11Out = r11_18
	raOut = ra_16
	return r1_11
fn0000B09C_exit:


word16 fn0000B09E(word32 r3_r2, word16 r11, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
//      fn0000B09C
// MayUse:  r11:[0..15] Sequence r3:r2:[0..31]
// LiveOut: r1 r11 r4 r5 r6 r7 ra
// Trashed: CFLNZ r0 r1 r11 r4 r5 r6 r7 ra sp
// Preserved:
fn0000B09E_entry:
l0000B09E:
	word16 r0_40 = Mem36[r3_r2 + 0x2414<32>:word16]
	branch r0_40 == 0x10<16> l0000B0A8_thunk_fn0000B0DA
l0000B0A8_thunk_fn0000B0DA:
	word16 r4_46
	word16 r5_47
	word16 r6_48
	word16 r7_49
	word32 ra_50
	word16 r1_45 = fn0000B0DA(r3_r2, out r4_46, out r5_47, out r6_48, out r7_49, out ra_50)
	r4Out = r4_46
	r5Out = r5_47
	r6Out = r6_48
	r7Out = r7_49
	r11Out = r11
	raOut = ra_50
	return r1_45
l0000B0A8_thunk_fn0000B0AA:
	word16 r11_57
	word16 r7_58
	word32 ra_59
	word16 r4_61
	word16 r5_62
	word16 r6_63
	word16 r1_60 = fn0000B0AA(r3_r2, r0_40, r11, out r4_61, out r5_62, out r6_63, out r7_58, out r11_57, out ra_59)
	r4Out = r4_61
	r5Out = r5_62
	r6Out = r6_63
	r7Out = r7_58
	r11Out = r11_57
	raOut = ra_59
	return r1_60
fn0000B09E_exit:


word16 fn0000B0AA(word32 r3_r2, word16 r0, word16 r11, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B09C
//      fn0000B09E
// MayUse:  r0:[0..15] r11:[0..15] Sequence r3:r2:[0..31]
// LiveOut: r1 r11 r4 r5 r6 r7 ra
// Trashed: CFLNZ r0 r1 r11 r4 r5 r6 r7 ra
// Preserved: sp
fn0000B0AA_entry:
	word16 r1
	word16 r4
	word16 r5
	word16 r6
l0000B0AA:
	branch r0 >= 7<16> l0000B0D6
l0000B0AC_thunk_fn0000B0C0:
	word16 r11_11
	word32 ra_13
	word16 r7_12 = fn0000B0C0(r3_r2, r11, out r11_11, out ra_13)
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7_12
	r11Out = r11_11
	raOut = ra_13
	return r1
l0000B0AE:
	word32 r5_r4_23 = Mem0[r3_r2 + 0x14<32>:word32]
	word16 r6_19 = Mem0[r3_r2 + 0x2410<32>:word16]
	word32 r1_r0_21 = Mem0[r3_r2 + 8<32>:word32]
	Mem29[r3_r2 + 0x14<32>:word32] = r5_r4_23 + 1<32>
	word32 r1_r0_32 = r1_r0_21 + r5_r4_23
	Mem37[r1_r0_32:byte] = SLICE(r6_19, byte, 0)
	word16 r5_25 = SLICE(r5_r4_23, word16, 16)
	word16 r4_26 = SLICE(r5_r4_23, word16, 0)
	word16 r1_33 = SLICE(r1_r0_32, word16, 16)
l0000B0BE_thunk_fn0000B0C0:
	word16 r11_40
	word32 ra_42
	word16 r7_41 = fn0000B0C0(r3_r2, r11, out r11_40, out ra_42)
	r4Out = r4_26
	r5Out = r5_25
	r6Out = r6_19
	r7Out = r7_41
	r11Out = r11_40
	raOut = ra_42
	return r1_33
fn0000B0AA_exit:


word16 fn0000B0C0(word32 r3_r2, word16 r11, ptr32 & r11Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
//      fn0000B0AA
// MayUse:  r11:[0..15] Sequence r3:r2:[0..31]
// LiveOut: r11 r7 ra
// Trashed: CF r0 r11 r7 ra sp
// Preserved:
fn0000B0C0_entry:
	word16 wArg00
	word32 dwArg02
l0000B0C0:
	Mem16[r3_r2 + 0x2410<32>:word16] = Mem0[r3_r2 + 0x2410<32>:word16] >>u 8<8>
	Mem23[r3_r2 + 0x2414<32>:word16] = Mem16[r3_r2 + 0x2414<32>:word16]
l0000B0D6_in_fn0000B0C0:
	r11Out = r11 + 0xFFF8<16>
	raOut = dwArg02
	return wArg00
fn0000B0C0_exit:


word16 fn0000B0DA(word32 r3_r2, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B09C
//      fn0000B09E
// MayUse:  Sequence r3:r2:[0..31]
// LiveOut: r1 r4 r5 r6 r7 ra
// Trashed: CF r0 r1 r4 r5 r6 r7 ra sp
// Preserved:
fn0000B0DA_entry:
	word16 wArg00
	word32 dwArg02
l0000B0DA:
	word32 r5_r4_11 = Mem0[r3_r2 + 0x14<32>:word32]
	word16 r6_7 = Mem0[r3_r2 + 0x2410<32>:word16]
	word32 r1_r0_9 = Mem0[r3_r2 + 8<32>:word32]
	word16 r5_13 = SLICE(r5_r4_11, word16, 16)
l0000B0E2:
	Mem17[r3_r2 + 0x14<32>:word32] = r5_r4_11 + 1<32>
	Mem24[r1_r0_9 + r5_r4_11:byte] = SLICE(r6_7, byte, 0)
	word16 r4_26 = Mem24[r3_r2 + 0x2410<32>:word16]
	word32 ra_31 = Mem24[r3_r2 + 0x14<32>:word32]
	word32 r1_r0_29 = Mem24[r3_r2 + 8<32>:word32]
	Mem39[r3_r2 + 0x14<32>:word32] = ra_31 + 1<32>
	word32 r1_r0_42 = r1_r0_29 + ra_31
	Mem47[r1_r0_42:byte] = SLICE(r4_26 >>u 8<8>, byte, 0)
	Mem49[r3_r2 + 0x1208<32>:word16] = 0<16>
	Mem51[r3_r2 + 0x120A<32>:word16] = 0<16>
	r4Out = r4_26 >>u 8<8>
	r5Out = r5_13
	r6Out = SLICE(ra_31, word16, 0) + 1<16>
	r7Out = wArg00
	raOut = dwArg02
	return SLICE(r1_r0_42, word16, 16)
fn0000B0DA_exit:


word32 fn0000B218(word32 r9_r8, word16 r4, word16 r5, word16 r10, word32 r13, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg48, word32 dwArg60, word16 wArgFFEC, word32 dwArg10010, word32 dwArg1003A, word16 wArg1FF92, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn00003B14
//      fn00004CD4
// MayUse:  r10:[0..15] r13:[0..31] r4:[0..15] r5:[0..15] Sequence r9:r8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0060:[0..31] Stack +10010:[0..31] Stack +1003A:[0..31] Stack +1FF92:[0..15] Stack +FFEC:[0..15]
// LiveOut: r12 r13 r3:r2 sp
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn0000B218_entry:
	word16 wArg00_239 = SLICE(dwArg00, word16, 0)
l0000B218:
	word16 r5_32 = r5 | r4
	word16 r0_40 = Mem37[r9_r8 + 0xC4<32>:word16]
	word32 dwArgFFEA_207 = SEQ(wArgFFEC, r4)
	branch r0_40 >= 0<16> l0000B246_thunk_fn0000BCFA
l0000B246_thunk_fn0000BCFA:
	word32 r13_47
	word16 r2_48
	word16 r3_49
	word16 r1_251
	word16 r4_252
	word16 r5_253
	word16 r8_254
	word16 r9_255
	fn0000BCFA(r9_r8, SEQ(r5_32, r4), r9_r8, r0_40, r13, dwArgFFEA_207, out r1_251, out r2_48, out r3_49, out r4_252, out r5_253, out r8_254, out r9_255, out r13_47)
	r12Out = dwArg10010
	r13Out = r13_47
	return SEQ(r3_49, r2_48)
l0000B24A:
	branch Mem37[Mem37[r9_r8:word32] + 0x58<32>:word16] == 2<16> l0000B252_thunk_fn0000BB06
l0000B252_thunk_fn0000BB06:
	word32 r13_64 = fn0000BB06(dwArg1003A)
	r12Out = dwArg10010
	r13Out = r13_64
	return r9_r8
l0000B256:
	word16 r4_256
	word16 r5_257
	word32 r3_r2_248 = fn0000A416(r9_r8 + 0xAF0<32>, r10, dwArg10010, wArg1FF92, out r4_256, out r5_257)
	word32 sp_86 = <invalid>
	word16 r4_108
	word16 r5_109
	fn0000A416(r9_r8 + 0xAFC<32>, r10, dwArg10010, Mem37[sp_86 + 65448<i32>:word16], out r4_108, out r5_109)
	word16 r6_119 = Mem37[r3_r2_248 + 0x15E8<32>:word16]
	branch Mem37[r3_r2_248 + 0xD8<32>:word16] == 0<16> l0000BAC6
l0000BAC6:
	word32 r3_r2_128 = CONVERT(r4_108, word16, word32)
	word32 r13_133 = fn0000D984(r3_r2_128, CONVERT(r5_109, word16, word32), r3_r2_248 + 0x6A<32>)
	r12Out = dwArg10010
	r13Out = r13_133
	return r3_r2_128
l0000B282:
	word32 r3_r2_153 = (CONVERT(r6_119, word16, int32) + 1<32> << 2<8>) + (r3_r2_248 + 0x6A<32>)
	Mem158[r3_r2_153 + 2<32>:word16] = 0xFFFF<16>
	word16 r3_154 = SLICE(r3_r2_153, word16, 16)
	branch r6_119 > 0<16> l0000B296_thunk_fn0000B2F2
l0000B296_thunk_fn0000B2F2:
	word32 r13_164
	word16 r3_166
	word32 r12_259
	word16 r2_165 = fn0000B2F2(0x4FFFF<32>, r3_r2_248, r3_154, r3_r2_248 + 0x6A<32>, dwArg00, out r3_166, out r12_259, out r13_164)
	r12Out = dwArg10010
	r13Out = r13_164
	return SEQ(r3_166, r2_165)
l0000B296_thunk_fn0000B298:
	word32 r12_183
	word32 r13_184
	word16 r3_186
	word16 r2_185 = fn0000B298(7<16>, r5, dwArg10010, wArg00_239, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg40, dwArg48, dwArg60, out r3_186, out r12_183, out r13_184)
	r12Out = r12_183
	r13Out = r13_184
	return SEQ(r3_186, r2_185)
fn0000B218_exit:


word16 fn0000B298(word16 r1, word16 r7, word32 r12, word16 wArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg48, word32 dwArg60, ptr32 & r3Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
//      fn0000B218
// MayUse:  r1:[0..15] r12:[0..31] r7:[0..15] Stack +0000:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0060:[0..31]
// LiveOut: r12 r13 r2 r3
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000B298_entry:
l0000B298:
l0000B298_thunk_fn0000B29C:
	word32 r12_20
	word32 r13_21
	word16 r3_23
	word16 r2_22 = fn0000B29C(r1, r7, r12, wArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg40, dwArg48, dwArg60, out r3_23, out r12_20, out r13_21)
	r3Out = r3_23
	r12Out = r12_20
	r13Out = r13_21
	return r2_22
fn0000B298_exit:


void fn0000B29A(word16 r7, word32 r12, word16 wArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg48, word32 dwArg60)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
// MayUse:  r12:[0..31] r7:[0..15] Stack +0000:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0060:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000B29A_entry:
l0000B29A:
l0000B29A_thunk_fn0000B29C:
	word16 r3_49
	word32 r12_50
	word32 r13_51
	fn0000B29C(0x6182<16>, r7, r12, wArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg40, dwArg48, dwArg60, out r3_49, out r12_50, out r13_51)
	return
fn0000B29A_exit:


word16 fn0000B29C(word16 r1, word16 r7, word32 r12, word16 wArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg48, word32 dwArg60, ptr32 & r3Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B298
//      fn0000B29A
// MayUse:  r1:[0..15] r12:[0..31] r7:[0..15] Stack +0000:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0060:[0..31]
// LiveOut: r12 r13 r2 r3
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000B29C_entry:
l0000B29C:
	word32 dwArg00_92 = SEQ(r7, wArg00)
l0000B2AE_thunk_fn0000B2B0:
	word32 r12_70
	word32 r13_71
	word16 r3_73
	word16 r2_72 = fn0000B2B0(r1, 0<16>, r12, dwArg00_92, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg40, dwArg48, dwArg60, out r3_73, out r12_70, out r13_71)
	r3Out = r3_73
	r12Out = r12_70
	r13Out = r13_71
	return r2_72
fn0000B29C_exit:


word16 fn0000B2B0(word16 r1, word16 r6, word32 r12, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg48, word32 dwArg60, ptr32 & r3Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000B29C
//      fn0000B308
// MayUse:  r1:[0..15] r12:[0..31] r6:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0060:[0..31]
// LiveOut: r12 r13 r2 r3
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000B2B0_entry:
	word16 r9
	word16 r8
	word16 r0
	word16 r7
	word32 r13
l0000B2B0:
	branch r1 + 1<16> < r6 l0000B2B6_thunk_fn0000BB8E
l0000B2B6_thunk_fn0000BB8E:
	fn0000BB8E(r12, dwArg48)
	r3Out = r3_25
	r12Out = r12_22
	r13Out = r13_23
	return r2_24
l0000B2B6_thunk_fn0000B308:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg24 = <invalid>
	word16 stackArg56 = <invalid>
	word16 stackArg58 = <invalid>
	word32 stackArg80 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg65522 = <invalid>
	word32 stackArg65540 = <invalid>
	word32 stackArg65548 = <invalid>
	word32 stackArg65572 = <invalid>
	word32 stackArg65580 = <invalid>
	word16 stackArg65586 = <invalid>
	word16 stackArg65590 = <invalid>
	word16 stackArg65594 = <invalid>
	word16 stackArg65598 = <invalid>
	word16 stackArg65600 = <invalid>
	word32 stackArg65602 = <invalid>
	word16 stackArg65606 = <invalid>
	word32 stackArg65610 = <invalid>
	word16 stackArg65614 = <invalid>
	word32 stackArg65618 = <invalid>
	word16 stackArg65622 = <invalid>
	word16 stackArg65626 = <invalid>
	word16 stackArg65630 = <invalid>
	word16 stackArg65634 = <invalid>
	word16 stackArg65638 = <invalid>
	word32 stackArg65642 = <invalid>
	word16 stackArg65646 = <invalid>
	word32 stackArg65658 = <invalid>
	word32 stackArg65666 = <invalid>
	word32 stackArg65674 = <invalid>
	word32 stackArg65682 = <invalid>
	word32 stackArg65690 = <invalid>
	word32 stackArg65698 = <invalid>
	word16 stackArg65706 = <invalid>
	word16 stackArg65710 = <invalid>
	word32 r12_49
	word16 r3_50
	word32 r13_51
	word16 r2_48 = fn0000B308(SEQ(r9, r8), r0, r6, r7, r12, r13, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, stackArg24, stackArg56, stackArg58, dwArg40, dwArg48, stackArg80, stackArg88, dwArg60, stackArg104, stackArg65522, stackArg65540, stackArg65548, stackArg65572, stackArg65580, stackArg65586, stackArg65590, stackArg65594, stackArg65598, stackArg65600, stackArg65602, stackArg65606, stackArg65610, stackArg65614, stackArg65618, stackArg65622, stackArg65626, stackArg65630, stackArg65634, stackArg65638, stackArg65642, stackArg65646, stackArg65658, stackArg65666, stackArg65674, stackArg65682, stackArg65690, stackArg65698, stackArg65706, stackArg65710, out r3_50, out r12_49, out r13_51)
	r3Out = r3_50
	r12Out = r12_49
	r13Out = r13_51
	return r2_48
fn0000B2B0_exit:


word16 fn0000B2F2(word32 r5_r4, word32 r9_r8, word16 r3, word32 r13, word32 dwArg00, ptr32 & r3Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B218
//      fn0000B308
// MayUse:  r13:[0..31] r3:[0..15] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..31]
// LiveOut: r12 r13 r2 r3
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000B2F2_entry:
	word16 r6
	word16 r7
	word32 r12
	word16 r8 = SLICE(r9_r8, word16, 0)
l0000B2F2:
	word16 r2_58 = SLICE(r9_r8 + 0x95E<32>, word16, 16)
	word16 r0_63 = Mem61[r9_r8 + 0x12C0<32>:word16]
	branch r0_63 == 0<16> l0000B304_thunk_fn0000BD84
l0000B304_thunk_fn0000BD84:
	word32 r13_76
	word16 r3_78
	word16 r2_77 = fn0000BD84(SEQ(r8 + 0x95E<16>, r0_63), SEQ(r3, r2_58), r5_r4, r9_r8, r13, dwArg00, out r3_78, out r13_76)
	r3Out = r3_78
	r12Out = <invalid>
	r13Out = r13_76
	return r2_77
l0000B304_thunk_fn0000B308:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg24 = <invalid>
	word16 stackArg56 = <invalid>
	word16 stackArg58 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg80 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg96 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg65522 = <invalid>
	word32 stackArg65540 = <invalid>
	word32 stackArg65548 = <invalid>
	word32 stackArg65572 = <invalid>
	word32 stackArg65580 = <invalid>
	word16 stackArg65586 = <invalid>
	word16 stackArg65590 = <invalid>
	word16 stackArg65594 = <invalid>
	word16 stackArg65598 = <invalid>
	word16 stackArg65600 = <invalid>
	word32 stackArg65602 = <invalid>
	word16 stackArg65606 = <invalid>
	word32 stackArg65610 = <invalid>
	word16 stackArg65614 = <invalid>
	word32 stackArg65618 = <invalid>
	word16 stackArg65622 = <invalid>
	word16 stackArg65626 = <invalid>
	word16 stackArg65630 = <invalid>
	word16 stackArg65634 = <invalid>
	word16 stackArg65638 = <invalid>
	word32 stackArg65642 = <invalid>
	word16 stackArg65646 = <invalid>
	word32 stackArg65658 = <invalid>
	word32 stackArg65666 = <invalid>
	word32 stackArg65674 = <invalid>
	word32 stackArg65682 = <invalid>
	word32 stackArg65690 = <invalid>
	word32 stackArg65698 = <invalid>
	word16 stackArg65706 = <invalid>
	word16 stackArg65710 = <invalid>
	word16 r3_96
	word32 r13_99
	word32 r12_183
	word16 r2_97 = fn0000B308(SEQ(r9, r8), r0, r6, r7, r12, r13, dwArg00, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg24, stackArg56, stackArg58, stackArg64, stackArg72, stackArg80, stackArg88, stackArg96, stackArg104, stackArg65522, stackArg65540, stackArg65548, stackArg65572, stackArg65580, stackArg65586, stackArg65590, stackArg65594, stackArg65598, stackArg65600, stackArg65602, stackArg65606, stackArg65610, stackArg65614, stackArg65618, stackArg65622, stackArg65626, stackArg65630, stackArg65634, stackArg65638, stackArg65642, stackArg65646, stackArg65658, stackArg65666, stackArg65674, stackArg65682, stackArg65690, stackArg65698, stackArg65706, stackArg65710, out r3_96, out r12_183, out r13_99)
	r3Out = r3_96
	r12Out = <invalid>
	r13Out = r13_99
	return r2_97
fn0000B2F2_exit:


word16 fn0000B308(word32 r9_r8, word16 r0, word16 r6, word16 r7, word32 r12, word32 r13, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word16 wArg38, word16 wArg3A, word32 dwArg40, word32 dwArg48, word32 dwArg50, word32 dwArg58, word32 dwArg60, word32 dwArg68, word32 dwArgFFF2, word32 dwArg10004, word32 dwArg1000C, word32 dwArg10024, word32 dwArg1002C, word16 wArg10032, word16 wArg10036, word16 wArg1003A, word16 wArg1003E, word16 wArg10040, word32 dwArg10042, word16 wArg10046, word32 dwArg1004A, word16 wArg1004E, word32 dwArg10052, word16 wArg10056, word16 wArg1005A, word16 wArg1005E, word16 wArg10062, word16 wArg10066, word32 dwArg1006A, word16 wArg1006E, word32 dwArg1007A, word32 dwArg10082, word32 dwArg1008A, word32 dwArg10092, word32 dwArg1009A, word32 dwArg100A2, word16 wArg100AA, word16 wArg100AE, ptr32 & r3Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B2B0
//      fn0000B2F2
// MayUse:  r0:[0..15] r12:[0..31] r13:[0..31] r6:[0..15] r7:[0..15] Sequence r9:r8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..15] Stack +003A:[0..15] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0068:[0..31] Stack +10004:[0..31] Stack +1000C:[0..31] Stack +10024:[0..31] Stack +1002C:[0..31] Stack +10032:[0..15] Stack +10036:[0..15] Stack +1003A:[0..15] Stack +1003E:[0..15] Stack +10040:[0..15] Stack +10042:[0..31] Stack +10046:[0..15] Stack +1004A:[0..31] Stack +1004E:[0..15] Stack +10052:[0..31] Stack +10056:[0..15] Stack +1005A:[0..15] Stack +1005E:[0..15] Stack +10062:[0..15] Stack +10066:[0..15] Stack +1006A:[0..31] Stack +1006E:[0..15] Stack +1007A:[0..31] Stack +10082:[0..31] Stack +1008A:[0..31] Stack +10092:[0..31] Stack +1009A:[0..31] Stack +100A2:[0..31] Stack +100AA:[0..15] Stack +100AE:[0..15] Stack +FFF2:[0..31]
// LiveOut: r12 r13 r2 r3
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn0000B308_entry:
	word32 dwArg3A
	word16 r5
	word16 r4
	word16 r10
	word16 r1
	word16 r3
	word16 r8 = SLICE(r9_r8, word16, 0)
	word16 wArg0C_1798 = SLICE(dwArg0C, word16, 0)
	word16 wArg00_1679 = SLICE(dwArg00, word16, 0)
	word16 wArg0A_1797 = SLICE(dwArg08, word16, 16)
	word16 wArg3A_1353 = SLICE(dwArg3A, word16, 0)
l0000B308:
	word32 r11_r10_1952 = CONVERT(r6, word16, int32)
	word32 r3_r2_1937 = (r11_r10_1952 + 1<32> << 2<8>) + dwArg0C
	Mem25[r3_r2_1937 + 2<32>:word16] = 0xFFFF<16>
	word16 r5_1262 = 4<16>
	word16 r1_158 = 7<16>
	word32 ra_17 = dwArg0C
	branch r6 > 0<16> l0000B378
l0000B320:
	ra_17 = dwArg0C + ((r11_r10_1952 << 2<8>) + 0xA<32>)
	r6 = 0<16>
	word32 r3_r2_1934 = SEQ(SLICE(r9_r8 + 0x964<32>, word16, 16), r8 + 0x964<16>)
l0000B336:
	word32 r3_r2_1957
	word16 r2_49 = SLICE(r3_r2_1957, word16, 0)
	word16 r3_48 = SLICE(r3_r2_1957, word16, 16)
	word16 r7_52 = Mem51[r3_r2_1957:word16]
	r1_158 = r1_158 + 1<16>
	branch r6 >= r1_158 l0000BABC
l0000BABC:
	Mem63[SEQ(r1_158, r0) + 0xC<32>:byte] = SLICE(r5_1262, byte, 0)
l0000B340:
	branch r0 == r7_52 l0000B36E
l0000B344:
	branch r6 >= r5_1262 l0000BAB2
l0000BAB2:
	r3_r2_1957 = 0xFC50<32> (alias)
l0000BABE:
	r3Out = SLICE(r3_r2_1957, word16, 16)
	r12Out = r12
	r13Out = r13
	return SLICE(r3_r2_1957, word16, 0)
l0000B34A:
	word32 r5_r4_101 = (CONVERT(r0, word16, int32) << 2<8>) + r9_r8
	word16 r1_105 = Mem51[r5_r4_101 + 0x14A4<32>:word16] + r6
	Mem107[r5_r4_101 + 0x14A4<32>:word16] = r6
	branch r7_52 == 0<16> l0000BA84_in_fn0000B29A
l0000BA84_in_fn0000B29A:
	word32 r1_r0_112 = SEQ(r1_105, r0) + r3_r2_1957
	Mem118[SEQ(SLICE(r1_r0_112, word16, 16) + 1<16>, SLICE(r1_r0_112, word16, 0)) + 0xD4<32>:word16] = Mem107[r1_r0_112 + 0xD4<32>:word16]
	r3Out = r3_48
	r12Out = r12
	r13Out = r13
	return r2_49
l0000B360:
	branch r0 == r7_52 l0000BB8E
l0000B362_thunk_fn0000BB8E:
	fn0000BB8E(r12, dwArg48)
	r3Out = r3_143
	r12Out = r12_140
	r13Out = r13_141
	return r2_142
l0000B366:
	r5_1262 = 4<16>
	r1_158 = 7<16>
	r6 = 0<16>
l0000B36E:
	word16 r3_164 = SLICE(r3_r2_1957 + 4<32>, word16, 16)
	r0 = r7_52
	r3_r2_1934 = SEQ(r3_164, r2_49 + 4<16>) (alias)
	r3_r2_1957 = r3_r2_1934
	branch r3_r2_1957 + 4<32> != ra_17 l0000B336
l0000B376:
	dwArg00 = SEQ(r7, wArg00_1679) (alias)
	r3_r2_1937 = SEQ(r3_164, r2_49 + 4<16>) (alias)
	r11_r10_1952 = 0x3008A<32> (alias)
l0000B378:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg65448 = <invalid>
	word16 r5_1974
	word16 r4_1973
	fn0000A416(SEQ(r5, r4), r10, r12, stackArg65448, out r4_1973, out r5_1974)
	byte bArg06_1318 = SLICE(dwArg04, byte, 16)
	word16 wArg04_1335 = SLICE(dwArg04, word16, 0)
	word16 wArg00_1338 = SLICE(dwArg00, word16, 0)
	word16 r11_232 = SLICE(r11_r10_1952, word16, 16)
	word16 r2_189 = SLICE(r3_r2_1937, word16, 0)
	word16 r3_188 = SLICE(r3_r2_1937, word16, 16)
	word16 r0_195 = Mem194[r3_r2_1937 + 0x1520<32>:word16]
	branch r0_195 != 0<16> l0000B38A_thunk_fn0000BF1E
l0000B38A_thunk_fn0000BF1E:
	word32 r12_207
	word32 r13_208
	word16 r2_209
	word16 r8_1985
	word16 r1_1984
	word16 r9_1986
	fn0000BF1E(SEQ(r1_158, r0_195), r3_r2_1937, r12, dwArg00, dwArg40, dwArg50, out r1_1984, out r2_209, out r8_1985, out r9_1986, out r12_207, out r13_208)
	r3Out = r3_188
	r12Out = r12_207
	r13Out = r13_208
	return r2_209
l0000B38E:
	branch Mem194[r3_r2_1937 + 0x14B0<32>:word16] != 0<16> l0000B394_thunk_fn0000BF84
l0000B394_thunk_fn0000BF84:
	fn0000BF84(r3_r2_1937)
	r3Out = r3_188
	r12Out = r12
	r13Out = r13
	return r2_189
l0000B398:
	word16 r0_228 = Mem194[r3_r2_1937 + 0x1518<32>:word16]
	branch r0_228 != 0<16> l0000B39E_thunk_fn0000BF56
l0000B39E_thunk_fn0000BF56:
	word32 r13_242
	word16 r3_244
	word16 r2_243 = fn0000BF56(SEQ(r1_158, r0_228), r11_r10_1952, r3_r2_1937, r12, out r3_244, out r13_242)
	r3Out = r3_244
	r12Out = r12
	r13Out = r13_242
	return r2_243
l0000B3A2:
	branch Mem194[r3_r2_1937 + 0x14B8<32>:word16] != 0<16> l0000B3A8_thunk_fn0000BF60
l0000B3A8_thunk_fn0000BF60:
	fn0000BF60()
	r3Out = r3_188
	r12Out = r12
	r13Out = r13
	return r2_189
l0000B3AC:
	branch Mem194[r3_r2_1937 + 0x1510<32>:word16] != 0<16> l0000BF32
l0000B3B2_thunk_fn0000BF32:
	word16 r1_1983
	fn0000BF32(r12, dwArg50, out r1_1983)
	r3Out = r3_188
	r12Out = r12
	r13Out = r13
	return r2_189
l0000B3B6:
	branch Mem194[r3_r2_1937 + 0x14C0<32>:word16] != 0<16> l0000B3BC_thunk_fn0000BFA0
l0000B3BC_thunk_fn0000BFA0:
	fn0000BFA0()
	r3Out = r3_281
	r12Out = r12_278
	r13Out = r13_279
	return r2_280
l0000B3C0:
	branch Mem194[r3_r2_1937 + 0x1508<32>:word16] != 0<16> l0000BF76
l0000B3C6_thunk_fn0000BF76:
	fn0000BF76()
	r3Out = r3_188
	r12Out = r12
	r13Out = r13
	return r2_189
l0000B3CA:
	branch Mem194[r3_r2_1937 + 0x14C8<32>:word16] != 0<16> l0000B3D0_thunk_fn0000BF7C
l0000B3D0_thunk_fn0000BF7C:
	fn0000BF7C()
	r3Out = r3_188
	r12Out = r12
	r13Out = r13
	return r2_189
l0000B3D4:
	word16 r0_305 = Mem194[r3_r2_1937 + 0x1500<32>:word16]
	branch r0_305 != 0<16> l0000B3DA_thunk_fn0000BF52
l0000B3DA_thunk_fn0000BF52:
	word32 r13_313
	word16 r3_315
	word16 r2_314 = fn0000BF52(SEQ(r1_158, r0_305), r11_r10_1952, r3_r2_1937, r12, out r3_315, out r13_313)
	r3Out = r3_315
	r12Out = r12
	r13Out = r13_313
	return r2_314
l0000B3DE:
	word16 r0_323 = Mem194[r3_r2_1937 + 0x14D0<32>:word16]
	branch r0_323 != 0<16> l0000B3E4_thunk_fn0000BFA8
l0000B3E4_thunk_fn0000BFA8:
	fn0000BFA8(r3_r2_1937, r9_r8 + 0xB08<32>, r3_r2_1937, r0_323)
	r3Out = r3_331
	r12Out = r12
	r13Out = r13_329
	return r2_330
l0000B3E8:
	branch Mem194[r3_r2_1937 + 0x14F8<32>:word16] != 0<16> l0000BF7E
l0000B3EE_thunk_fn0000BF7E:
	fn0000BF7E()
	r3Out = r3_188
	r12Out = r12
	r13Out = r13
	return r2_189
l0000B3F2:
	branch Mem194[r3_r2_1937 + 0x14D8<32>:word16] != 0<16> l0000BF84
l0000B3F8_thunk_fn0000BF84:
	fn0000BF84(r3_r2_1937)
	r3Out = r3_188
	r12Out = r12
	r13Out = r13
	return r2_189
l0000B3FC:
	word16 r0_363 = Mem194[r3_r2_1937 + 0x14F0<32>:word16]
	branch r0_363 != 0<16> l0000BFAA
l0000B402_thunk_fn0000BFAA:
	fn0000BFAA(r3_r2_1937, r9_r8 + 0xB08<32>, r3_r2_1937, r0_363)
	r3Out = r3_371
	r12Out = r12
	r13Out = r13_369
	return r2_370
l0000B406:
	word16 r0_384 = Mem194[r3_r2_1937 + 0x14E0<32>:word16]
	branch r0_384 != 0<16> l0000BFB0
l0000B40C_thunk_fn0000BFAA:
	fn0000BFAA(r3_r2_1937, r9_r8 + 0xB08<32>, r3_r2_1937, r0_384)
	r3Out = r3_392
	r12Out = r12
	r13Out = r13_390
	return r2_391
l0000B410:
	branch Mem194[r3_r2_1937 + 0x14E8<32>:word16] != 0<16> l0000BF86
l0000B416_thunk_fn0000BF84:
	fn0000BF84(r3_r2_1937)
	r3Out = r3_188
	r12Out = r12
	r13Out = r13
	return r2_189
l0000B41A:
	branch Mem194[r3_r2_1937 + 0x14A8<32>:word16] != 0<16> l0000B420_thunk_fn0000BEB4
l0000B420_thunk_fn0000BEB4:
	word32 r13_433
	word16 r3_435
	word16 r2_434 = fn0000BEB4(r11_r10_1952, r3_r2_1937, r9_r8 + 0xB08<32>, SEQ(r7, r6), r2_189, r12, r13, ra_17, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg40, dwArg50, dwArg68, out r3_435, out r13_433)
	r3Out = r3_435
	r12Out = r12_432
	r13Out = r13_433
	return r2_434
l0000B424:
	Mem458[r3_r2_1937 + 0x23F8<32>:word32] = Mem446[r3_r2_1937 + 0x23F8<32>:word32] + 0x17<32>
	word32 ra_466 = Mem458[r3_r2_1937 + 0x2400<32>:word32] + 0xA<32> >>u 0x1D<8>
	word16 r2_1758 = 9<16>
	word32 dwArg00_1339 = SEQ(2<16>, wArg00_1338)
	branch ra_466 >=u 9<32> l0000B44C
l0000B44A:
	ra_466 = 9<32>
l0000B44C:
	branch CONVERT(dwArg08 <=u 9<32>, bool, int16) == 0<16> l0000B45E
l0000B456:
	branch bArg06_1318 != 0<8> l0000BB0E
l0000B45A_thunk_fn0000BB0E:
	fn0000BB0E()
	r3Out = 0<16>
	r12Out = r12
	r13Out = r13
	return 9<16>
l0000B45E:
	word16 r4_495 = Mem458[r3_r2_1937 + 0x2414<32>:word16]
	word16 r5_496 = Mem458[r3_r2_1937 + 0x2410<32>:word16]
	word16 r0_500 = CONVERT(Mem458[r3_r2_1937 + 0xC8<32>:word16] == 4<16>, bool, int16)
	branch r0_500 != 0<16> l0000BC8C
l0000BC8C:
	r2_1758 = Mem458[CONVERT(r0_500, word16, uint32):word16]
l0000B474:
	word16 r0_514 = CONVERT(ra_466 <=u 9<32>, bool, int16)
	word32 dwArg38_1354 = SEQ(wArg3A_1353, wArg38)
	branch r0_514 != 0<16> l0000BC82
l0000BC82:
l0000BC8E:
	r3Out = 0<16>
	r12Out = r12
	r13Out = dwArg3A
	return r2_1758
l0000B47E:
	word16 r10_539 = __a_shift<word16,word16>(wArg04_1335, r4_495 + 4<16>)
	Mem541[r3_r2_1937 + 0x2410<32>:word16] = r10_539
	word16 r5_540 = r5_496 | r10_539
	branch r4_495 >= 9<16> l0000B48E_thunk_fn0000BD82
l0000B48E_thunk_fn0000BD82:
	word32 r13_549
	word16 r3_551
	word16 r2_550 = fn0000BD82(9<32>, SEQ(r5_540, r4_495 + 4<16>), r3_r2_1937, r0_514, r13, dwArg00_1339, out r3_551, out r13_549)
	r3Out = r3_551
	r12Out = r12
	r13Out = r13_549
	return r2_550
l0000B492:
	word32 r3_r2_562 = Mem541[r3_r2_1937 + 8<32>:word32]
	word32 r5_r4_563 = Mem541[r3_r2_1937 + 0x14<32>:word32]
	Mem572[r3_r2_1937 + 0x14<32>:word32] = r5_r4_563 + 1<32>
	Mem579[r3_r2_562 + r5_r4_563:byte] = SLICE(r10_539, byte, 0)
	word16 r10_580 = Mem579[r3_r2_1937 + 0x2410<32>:word16]
	word32 r3_r2_582 = Mem579[r3_r2_1937 + 8<32>:word32]
	word32 r5_r4_583 = Mem579[r3_r2_1937 + 0x14<32>:word32]
	Mem592[r3_r2_1937 + 0x14<32>:word32] = r5_r4_583 + 1<32>
	Mem599[r3_r2_582 + r5_r4_583:byte] = SLICE(r10_580 >>u 8<8>, byte, 0)
	word16 r4_600 = Mem599[r3_r2_1937 + 0x2414<32>:word16]
	word16 r10_608 = __l_shift<word16,word16>(wArg04_1335, r0_514)
	Mem609[r3_r2_1937 + 0x2410<32>:word16] = r10_608
	Mem613[r3_r2_1937 + 0x2414<32>:word16] = r4_600 - 0x10<16>
	word16 v34_614 = Mem613[r3_r2_1937 + 0x1600<32>:word16]
	word16 v36_618 = Mem613[r3_r2_1937 + 0x15E8<32>:word16]
	word16 r0_625 = __a_shift<word16,word16>(v36_618, r4_600 - 0x10<16>)
	Mem627[r3_r2_1937 + 0x2410<32>:word16] = r0_625
	word32 r12_1021 = SEQ(SLICE(r12, word16, 16), v34_614)
	word32 ra_619 = SEQ(SLICE(ra_466, word16, 16), v36_618)
	word16 r10_626 = r10_608 | r0_625
	branch r4_600 >= 0x1B<16> l0000B4EC_thunk_fn0000BD10
l0000B4EC_thunk_fn0000BD10:
	word32 r12_632
	word32 r13_633
	word16 r3_635
	word16 r2_634 = fn0000BD10(out r3_635, out r12_632, out r13_633)
	r3Out = r3_635
	r12Out = r12_632
	r13Out = r13_633
	return r2_634
l0000B4F0:
	word32 r3_r2_646 = Mem627[r3_r2_1937 + 8<32>:word32]
	word32 r5_r4_647 = Mem627[r3_r2_1937 + 0x14<32>:word32]
	Mem656[r3_r2_1937 + 0x14<32>:word32] = r5_r4_647 + 1<32>
	Mem663[r3_r2_646 + r5_r4_647:byte] = SLICE(r0_625, byte, 0)
	word32 r5_r4_667 = Mem663[r3_r2_1937 + 0x14<32>:word32]
	word16 r0_664 = Mem663[r3_r2_1937 + 0x2410<32>:word16]
	word32 r3_r2_666 = Mem663[r3_r2_1937 + 8<32>:word32]
	Mem676[r3_r2_1937 + 0x14<32>:word32] = r5_r4_667 + 1<32>
	word32 r3_r2_679 = r3_r2_666 + r5_r4_667
	Mem683[r3_r2_679:byte] = SLICE(r0_664 >>u 8<8>, byte, 0)
	word16 r4_684 = Mem683[r3_r2_1937 + 0x2414<32>:word16]
	word16 r5_688 = SEQ(SLICE(r5_r4_667, byte, 24), SLICE(r4_684, byte, 0))
	word16 r1_692 = __l_shift<word16,word16>(v36_618, r5_688)
	Mem694[r3_r2_1937 + 0x2410<32>:word16] = r1_692
	Mem697[r3_r2_1937 + 0x2414<32>:word16] = r4_684
	word16 r1_701 = __a_shift<word16,word16>(v34_614, r4_684) | r1_692
	Mem702[r3_r2_1937 + 0x2410<32>:word16] = r1_692
	word16 r3_681 = SLICE(r3_r2_679, word16, 16)
	word32 dwArg0A_1799 = SEQ(wArg0C_1798, wArg0A_1797)
	branch r4_684 >= 0xB<16> l0000B53C_thunk_fn0000BCAC
l0000B53C_thunk_fn0000BCAC:
	word32 r12_710
	word32 r13_711
	word16 r2_712
	word16 r3_713
	word16 r4_1979
	word16 r9_1982
	word16 r5_1980
	word16 r8_1981
	word16 r1_1978
	fn0000BCAC(SEQ(r1_701, r1_692), SEQ(r11_232 + 0xFEE8<16>, r10_626), SEQ(r5_688, r4_684), r5_r4_667 + 1<32>, r3_r2_1937, r3_681, r12_1021, r13, ra_619, dwArg00_1339, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg38_1354, dwArg48, dwArg50, dwArg68, out r1_1978, out r2_712, out r3_713, out r4_1979, out r5_1980, out r8_1981, out r9_1982, out r12_710, out r13_711)
	r3Out = r3_713
	r12Out = r12_710
	r13Out = r13_711
	return r2_712
l0000B540:
	word32 r5_r4_725 = Mem702[r3_r2_1937 + 0x14<32>:word32]
	word32 r3_r2_724 = Mem702[r3_r2_1937 + 8<32>:word32]
	Mem734[r3_r2_1937 + 0x14<32>:word32] = r5_r4_725 + 1<32>
	Mem741[r3_r2_724 + r5_r4_725:byte] = SLICE(r1_692, byte, 0)
	word32 r3_r2_745 = Mem741[r3_r2_1937 + 0x14<32>:word32]
	word16 r6_742 = Mem741[r3_r2_1937 + 0x2410<32>:word16]
	word32 r1_r0_744 = Mem741[r3_r2_1937 + 8<32>:word32]
	Mem754[r3_r2_1937 + 0x14<32>:word32] = r3_r2_745 + 1<32>
	word32 r1_r0_757 = r1_r0_744 + r3_r2_745
	Mem761[r1_r0_757:byte] = SLICE(r6_742 >>u 8<8>, byte, 0)
	word16 r4_762 = Mem761[r3_r2_1937 + 0x2414<32>:word16]
	word16 r2_772 = __l_shift<word16,word16>(v34_614, SEQ(SLICE(r1_r0_757, byte, 24), SLICE(r4_762, byte, 0)))
	Mem774[r3_r2_1937 + 0x2410<32>:word16] = r2_772
	Mem776[r3_r2_1937 + 0x2414<32>:word16] = r4_762
	Mem783[r3_r2_1937 + 0x2410<32>:word16] = r2_772
	word16 r7_732 = SLICE(r5_r4_725 + 1<32>, word16, 16)
	word16 r5_752 = SLICE(r3_r2_745 + 1<32>, word16, 16)
	branch r4_762 >= 0xC<16> l0000B592_thunk_fn0000BC42
l0000B592_thunk_fn0000BC42:
	fn0000BC42(SEQ(2<16>, r2_772), SEQ(r5_752, r4_762), r7_732, r2_189, r12_1021, ra_619, dwArg40, dwArg58)
	r3Out = r3_792
	r12Out = r12_1021
	r13Out = r13_790
	return r2_791
l0000B596:
	word32 dwArg00_1820
	word32 r5_r4_1942
	word16 r11_1047
	word16 r4_1004
	word32 r11_r10_1939
	word32 r3_r2_806 = Mem783[r3_r2_1937 + 8<32>:word32]
	word32 r5_r4_807 = Mem783[r3_r2_1937 + 0x14<32>:word32]
	Mem816[r3_r2_1937 + 0x14<32>:word32] = r5_r4_807 + 1<32>
	Mem823[r3_r2_806 + r5_r4_807:byte] = SLICE(r2_772, byte, 0)
	word16 r0_824 = Mem823[r3_r2_1937 + 0x2410<32>:word16]
	word32 r3_r2_826 = Mem823[r3_r2_1937 + 8<32>:word32]
	word32 r5_r4_827 = Mem823[r3_r2_1937 + 0x14<32>:word32]
	Mem836[r3_r2_1937 + 0x14<32>:word32] = r5_r4_827 + 1<32>
	word32 r3_r2_839 = r3_r2_826 + r5_r4_827
	Mem843[r3_r2_839:byte] = SLICE(r0_824 >>u 8<8>, byte, 0)
	word16 r4_844 = Mem843[r3_r2_1937 + 0x2414<32>:word16]
	word16 r1_852 = __l_shift<word16,word16>(2<16>, SEQ(SLICE(r3_r2_839, byte, 24), SLICE(r4_844, byte, 0)))
	Mem854[r3_r2_1937 + 0x2410<32>:word16] = r1_852
	Mem856[r3_r2_1937 + 0x2414<32>:word16] = r4_844
	word16 r5_881 = Mem863[r3_r2_1937 + 0xA94<32>:word16]
	Mem886[r3_r2_1937 + 0x2410<32>:word16] = r1_852
	word16 r0_1266 = r1_852
	word16 r10_1042 = 0xFB26<16>
	word16 r11_1049 = 0<16>
	word16 wArg00_1379 = r5_881
	word32 r11_r10_1959 = 0xFB26<32>
	word32 r5_r4_1962 = SEQ(r5_881, r4_844)
	branch r4_844 >= 0xD<16> l0000B66C
l0000B604:
	word32 r3_r2_893 = Mem892[r3_r2_1937 + 8<32>:word32]
	word32 r5_r4_895 = Mem892[r3_r2_1937 + 0x14<32>:word32]
	Mem901[r3_r2_1937 + 0x14<32>:word32] = r5_r4_895 + 1<32>
	Mem909[r3_r2_893 + r5_r4_895:byte] = SLICE(r0_1266, byte, 0)
	word16 r0_911 = Mem909[r3_r2_1937 + 0x2410<32>:word16]
	word32 r3_r2_918 = Mem909[r3_r2_1937 + 0x14<32>:word32]
	word32 r1_r0_916 = Mem909[r3_r2_1937 + 8<32>:word32]
	Mem928[r3_r2_1937 + 0x14<32>:word32] = r3_r2_918 + 1<32>
	word32 r1_r0_931 = r1_r0_916 + r3_r2_918
	Mem935[r1_r0_931:byte] = SLICE(r0_911 >>u 8<8>, byte, 0)
	r4_1004 = Mem935[r3_r2_1937 + 0x2414<32>:word16]
	word16 r1_948 = __l_shift<word16,word16>(wArg00_1379, SEQ(SLICE(r1_r0_931, byte, 8), SLICE(r4_1004, byte, 0)))
	Mem951[r3_r2_1937 + 0x2410<32>:word16] = r1_948
	Mem955[r3_r2_1937 + 0x2414<32>:word16] = r4_1004
	r11_1047 = r11_1049 + 0xFFF3<16>
	r12_1021 = SEQ(SLICE(r5_r4_895 + 1<32>, word16, 16), r0_911 >>u 8<8>)
	r0_1266 = r1_948
	dwArg00_1820 = SEQ(2<16>, wArg00_1379) (alias)
	r11_r10_1939 = SEQ(r11_1047, r10_1042) (alias)
	r5_r4_1942 = SEQ(SLICE(r3_r2_918 + 1<32>, word16, 16), r4_1004) (alias)
	branch false l0000B67A
l0000B64A:
	word16 r5_990 = Mem965[(CONVERT(Mem965[r11_r10_1939 + 1<32>:byte], byte, int32) + 0x294<32> << 2<8>) + r3_r2_1937 + 4<32>:word16]
	Mem999[r3_r2_1937 + 0x2410<32>:word16] = r0_1266
	word16 r10_963 = SLICE(r11_r10_1939, word16, 0)
	r11_1049 = SLICE(r11_r10_1939 + 1<32>, word16, 16) (alias)
	r10_1042 = r10_963 + 1<16> (alias)
	wArg00_1379 = r5_990
	r11_r10_1959 = SEQ(r11_1049, r10_963 + 1<16>) (alias)
	r5_r4_1962 = SEQ(r5_990, r4_1004) (alias)
	branch r4_1004 < 0xD<16> l0000B604
l0000B66C:
	r4_1004 = SLICE(r5_r4_1962, word16, 0) (alias)
	Mem1008[r3_r2_1937 + 0x2414<32>:word16] = r4_1004
	r11_1047 = SLICE(r11_r10_1959, word16, 16) (alias)
	r10_1042 = SLICE(r11_r10_1959, word16, 0) (alias)
	dwArg00_1820 = SEQ(2<16>, wArg00_1379) (alias)
	r11_r10_1939 = r11_r10_1959 (alias)
	r5_r4_1942 = r5_r4_1962 (alias)
	branch true l0000B64A
l0000B67A:
	word32 sp_1059 = <invalid>
	word16 r11_1061
	word32 r12_1062
	word32 r12_1090
	word16 r11_1975
	fn00009C04(Mem1019[sp_1059 + 0xC<32>:word32], SLICE(r12_1062, word16, 0), fn00009C04(r5_r4_1942, v36_618, r10_1042, r11_1047, SEQ(SLICE(r12_1021, word16, 16), v34_614), dwArgFFF2, dwArg10004, dwArg10024, dwArg1002C, wArg10032, wArg10036, wArg1003A, wArg1003E, wArg10040, dwArg10042, wArg10046, dwArg1004A, wArg1004E, dwArg10052, wArg10056, wArg1005A, wArg1005E, wArg10062, wArg10066, dwArg1006A, wArg1006E, dwArg1007A, dwArg10082, dwArg1008A, dwArg10092, dwArg1009A, dwArg100A2, wArg100AA, wArg100AE, out r11_1061, out r12_1062), r11_1061, r12_1062, Mem1019[sp_1059 + 65522<i32>:word32], Mem1019[sp_1059 + 65540<i32>:word32], Mem1019[sp_1059 + 65572<i32>:word32], Mem1019[sp_1059 + 65580<i32>:word32], Mem1019[sp_1059 + 65586<i32>:word16], Mem1019[sp_1059 + 65590<i32>:word16], Mem1019[sp_1059 + 65594<i32>:word16], Mem1019[sp_1059 + 65598<i32>:word16], Mem1019[sp_1059 + 65600<i32>:word16], Mem1019[sp_1059 + 65602<i32>:word32], Mem1019[sp_1059 + 65606<i32>:word16], Mem1019[sp_1059 + 65610<i32>:word32], Mem1019[sp_1059 + 65614<i32>:word16], Mem1019[sp_1059 + 65618<i32>:word32], Mem1019[sp_1059 + 65622<i32>:word16], Mem1019[sp_1059 + 65626<i32>:word16], Mem1019[sp_1059 + 65630<i32>:word16], Mem1019[sp_1059 + 65634<i32>:word16], Mem1019[sp_1059 + 65638<i32>:word16], Mem1019[sp_1059 + 65642<i32>:word32], Mem1019[sp_1059 + 65646<i32>:word16], Mem1019[sp_1059 + 65658<i32>:word32], Mem1019[sp_1059 + 65666<i32>:word32], Mem1019[sp_1059 + 65674<i32>:word32], Mem1019[sp_1059 + 65682<i32>:word32], Mem1019[sp_1059 + 65690<i32>:word32], Mem1019[sp_1059 + 65698<i32>:word32], Mem1019[sp_1059 + 65706<i32>:word16], Mem1019[sp_1059 + 65710<i32>:word16], out r11_1975, out r12_1090)
	word16 r0_1108
	word32 r12_1112
	word32 r13_1113
	word16 r4_1116
	word16 r5_1117
	word16 r7_1119
	word32 ra_1122
	word32 r9_r8_1950
	word16 r6_1118
	word32 r3_r2_1951 = fn0000A0E8(r12_1090, dwArg0A_1799, dwArg10004, dwArg1000C, dwArg10024, dwArg1002C, wArg10032, wArg10036, wArg1003A, wArg1003E, wArg10040, dwArg10042, wArg10046, dwArg1004A, wArg1004E, dwArg10052, wArg10056, wArg1005A, wArg1005E, wArg10062, wArg10066, dwArg1006A, wArg1006E, dwArg1007A, dwArg10082, dwArg1008A, dwArg10092, dwArg1009A, dwArg100A2, wArg100AA, wArg100AE, out r9_r8_1950, out r0_1108, out r4_1116, out r5_1117, out r6_1118, out r7_1119, out r12_1112, out r13_1113, out ra_1122)
	word16 r2_1114 = SLICE(r3_r2_1951, word16, 0)
	word32 dwArg08_1829 = SEQ(wArg0A_1797, v34_614)
l0000B8EA:
	Mem1133[r9_r8_1950 + 0x2414<32>:word16] = r4_1116 + 4<16>
l0000B2BA:
	branch r0_1108 == r7_1119 l0000B2E8
l0000B2BE:
	branch r5_1117 < r6_1118 l0000B2C0_thunk_fn0000BB84
l0000B2C0_thunk_fn0000BB84:
	fn0000BB84(r2_1114, r12_1112)
	r3Out = r3_1144
	r12Out = r12_1141
	r13Out = r13_1142
	return r2_1143
l0000B2C4:
	Mem1168[(CONVERT(r0_1108, word16, int32) << 2<8>) + r9_r8_1950 + 0x14A4<32>:word16] = r6_1118
	branch r7_1119 == 0<16> l0000B2D6_thunk_fn0000BAF2
l0000B2D6_thunk_fn0000BAF2:
	word32 r13_1172
	word16 r3_1174
	word16 r8_1976
	word16 r9_1977
	word16 r2_1173 = fn0000BAF2(r9_r8_1950, out r3_1174, out r8_1976, out r9_1977, out r13_1172)
	r3Out = r3_1174
	r12Out = r12_1112
	r13Out = r13_1172
	return r2_1173
l0000B2DA:
	branch r0_1108 == r7_1119 l0000BBFC
l0000B2DC_thunk_fn0000BB8E:
	fn0000BB8E(r12_1112, dwArg48)
	r3Out = r3_1189
	r12Out = r12_1186
	r13Out = r13_1187
	return r2_1188
l0000B2E0:
	r6_1118 = 0<16>
l0000B2E8:
	branch ra_1122 != r3_r2_1951 + 4<32> l0000B2B0
l0000B2EE_thunk_fn0000B2B0:
	word32 r12_1236
	word16 r3_1237
	word32 r13_1238
	word16 r2_1235 = fn0000B2B0(r1, r6_1118, r12_1112, dwArg00_1820, dwArg04, dwArg08_1829, dwArg0C, dwArg10, dwArg14, dwArg40, dwArg48, dwArg60, out r3_1237, out r12_1236, out r13_1238)
	r3Out = r3_1237
	r12Out = r12_1236
	r13Out = r13_1238
	return r2_1235
l0000B2F0:
l0000B2F0_thunk_fn0000B2F2:
	word32 r12_1254
	word16 r3_1255
	word32 r13_1256
	word16 r2_1253 = fn0000B2F2(SEQ(r5, r4), SEQ(r9, r8), r3, r13_1113, dwArg00_1820, out r3_1255, out r12_1254, out r13_1256)
	r3Out = r3_1255
	r12Out = r12_1254
	r13Out = r13_1256
	return r2_1253
fn0000B308_exit:


void fn0000B718(word32 r5_r4, word32 r9_r8, word16 r1, word16 r6, word32 r13, word32 dwArg12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
// MayUse:  r1:[0..15] r13:[0..31] r6:[0..15] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0012:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r6 r7 r9 ra
// Preserved: sp
fn0000B718_entry:
l0000B718:
	Mem9[r9_r8 + 0x1524<32>:word16] = r1 + 1<16>
l0000B71E_thunk_fn0000AF98:
	word16 r2_36
	word16 r3_37
	word16 r6_38
	word16 r7_39
	word16 r9_40
	word16 r10_41
	word16 r11_42
	word32 r12_43
	word32 r13_44
	word32 ra_45
	fn0000AF98(r5_r4, r9_r8, r6, r13, dwArg12, out r2_36, out r3_37, out r6_38, out r7_39, out r9_40, out r10_41, out r11_42, out r12_43, out r13_44, out ra_45)
	return
fn0000B718_exit:


void fn0000B726(word32 r11_r10, word32 r9_r8, word16 r0, word16 r4, word16 r7, word32 r12, word32 r13, word16 wArg40, word16 wArg48, word32 dwArg50, word32 dwArg58, word32 dwArg60, word16 wArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
// MayUse:  r0:[0..15] r12:[0..31] r13:[0..31] r4:[0..15] r7:[0..15] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31] Stack +0040:[0..15] Stack +0048:[0..15] Stack +0050:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0074:[0..15] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000B726_entry:
l0000B726:
	branch r0 == r4 l0000B728_thunk_fn0000B73A
l0000B728_thunk_fn0000B73A:
	fn0000B73A(r11_r10, r9_r8, r7, r12, r13, wArg40, wArg48, dwArg50, dwArg58, dwArg60, wArg74, dwArg78, dwArg88, dwArg90)
	return
l0000B72A:
	word32 r5_r4_44 = (CONVERT(r0, word16, int32) << 2<8>) + r9_r8
	word16 r1_48 = Mem0[r5_r4_44 + 0x14A4<32>:word16]
l0000B730_thunk_fn0000B734:
	fn0000B734(r11_r10, r5_r4_44, r9_r8, r1_48, r7, r12, r13, wArg40, wArg48, dwArg50, dwArg58, dwArg60, wArg74, dwArg78, dwArg88, dwArg90)
	return
fn0000B726_exit:


void fn0000B732(word32 r11_r10, word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r1, word16 r7, word32 r12, word32 r13, word16 wArg40, word16 wArg48, word32 dwArg50, word32 dwArg58, word32 dwArg60, word16 wArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A534
//      fn0000A59C
// MayUse:  r1:[0..15] r12:[0..31] r13:[0..31] r7:[0..15] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0040:[0..15] Stack +0048:[0..15] Stack +0050:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0074:[0..15] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000B732_entry:
	bool L
	word16 r9 = SLICE(r9_r8, word16, 16)
	word16 r8 = SLICE(r9_r8, word16, 0)
	word16 r11 = SLICE(r11_r10, word16, 16)
	word16 r10 = SLICE(r11_r10, word16, 0)
	word16 r5 = SLICE(r5_r4, word16, 16)
	word16 r4 = SLICE(r5_r4, word16, 0)
	word16 r3 = SLICE(r3_r2, word16, 16)
	word16 r2 = SLICE(r3_r2, word16, 0)
l0000B732:
	branch L l0000B734
l0000B732_thunk_fn0000B734:
	fn0000B734(r11_r10, r5_r4, r9_r8, r1, r7, r12, r13, wArg40, wArg48, dwArg50, dwArg58, dwArg60, wArg74, dwArg78, dwArg88, dwArg90)
	return
l0000B732_1:
	call r3_r2 (retsize: 0;)
		uses: Mem:Mem0,r1:r1,r10:r10,r11:r11,r12:r12,r13:r13,r2:r2,r3:r3,r4:r4,r5:r5,r7:r7,r8:r8,r9:r9,Stack +0040:wArg40,Stack +0048:wArg48,Stack +0050:dwArg50,Stack +0058:dwArg58,Stack +0060:dwArg60,Stack +0074:wArg74,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +0090:dwArg90
	return
fn0000B732_exit:


void fn0000B734(word32 r11_r10, word32 r5_r4, word32 r9_r8, word16 r1, word16 r7, word32 r12, word32 r13, word16 wArg40, word16 wArg48, word32 dwArg50, word32 dwArg58, word32 dwArg60, word16 wArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B726
//      fn0000B732
// MayUse:  r1:[0..15] r12:[0..31] r13:[0..31] r7:[0..15] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0040:[0..15] Stack +0048:[0..15] Stack +0050:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0074:[0..15] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000B734_entry:
l0000B734:
	Mem9[r5_r4 + 0x14A4<32>:word16] = r1 + 1<16>
l0000B736_thunk_fn0000B73A:
	fn0000B73A(r11_r10, r9_r8, r7, r12, r13, wArg40, wArg48, dwArg50, dwArg58, dwArg60, wArg74, dwArg78, dwArg88, dwArg90)
	return
fn0000B734_exit:


void fn0000B73A(word32 r11_r10, word32 r9_r8, word16 r7, word32 r12, word32 r13, word16 wArg40, word16 wArg48, word32 dwArg50, word32 dwArg58, word32 dwArg60, word16 wArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B726
//      fn0000B732
// MayUse:  r12:[0..31] r13:[0..31] r7:[0..15] Sequence r11:r10:[0..31] Sequence r9:r8:[0..31] Stack +0040:[0..15] Stack +0048:[0..15] Stack +0050:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0074:[0..15] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000B73A_entry:
l0000B73A:
	Mem11[r9_r8 + 0x1524<32>:word16] = Mem0[r9_r8 + 0x1524<32>:word16] + 1<16>
l0000B744_thunk_fn0000AE66:
	fn0000AE66(r11_r10, r9_r8, r7, r12, r13, wArg40, wArg48, dwArg50, dwArg58, dwArg60, wArg74, dwArg78, dwArg88, dwArg90)
	return
fn0000B73A_exit:


word16 fn0000B9B2(word16 r2, word16 wArg02, ptr32 & r2Out, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
//      fn0000A438
// MayUse:  r2:[0..15] Stack +0002:[0..15]
// LiveOut: r0 r2 r3
// Trashed: CF r0 r1 r2 r3
// Preserved: sp
fn0000B9B2_entry:
	word16 r3
	word16 r5
	word16 r4
	word16 r7
	word16 r6
	word16 r0
	word16 r11
	word32 r12
l0000B9B2:
l0000B95C:
	word32 r3_r2_10 = SEQ(wArg02, r2)
	word32 r3_r2_15 = SEQ(wArg02, r2) + r3_r2_10
	word16 r3_16 = SLICE(r3_r2_15, word16, 16)
	word16 r2_17 = SLICE(r3_r2_15, word16, 0)
	word16 r0_20 = r2 + SLICE(r3_r2_15, word16, 0)
l0000AEF4:
l0000AEF4_thunk_fn0000A8CA:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg152 = <invalid>
	word32 stackArg160 = <invalid>
	fn0000A8CA(SEQ(r3, r2), SEQ(r5, r4), SEQ(r7, r6), r0, r11, r12, stackArg152, stackArg160)
	r2Out = r2_17
	r3Out = r3_16
	return r0_20
fn0000B9B2_exit:


word16 fn0000BAE0(word32 dwArg10010, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C0EE
// MayUse:  Stack +10010:[0..31]
// LiveOut: r0 r1 r2 r3 r8 r9
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r8 r9 sp
// Preserved:
fn0000BAE0_entry:
	ptr32 fp
l0000BAE0:
	word16 r1_14 = SLICE(fp + 0x10010<32>, word16, 16)
	word16 r0_15 = SLICE(fp, word16, 0) + 0x10<16>
l0000BAF0_thunk_fn0000BAF2:
	word16 r3_24
	word16 r8_25
	word16 r9_26
	word32 r13_42
	word16 r2_23 = fn0000BAF2(dwArg10010, out r3_24, out r8_25, out r9_26, out r13_42)
	r1Out = r1_14
	r2Out = r2_23
	r3Out = r3_24
	r8Out = r8_25
	r9Out = r9_26
	return r0_15
fn0000BAE0_exit:


word16 fn0000BAF2(word32 r9_r8, ptr32 & r3Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BAE0
// MayUse:  Sequence r9:r8:[0..31]
// LiveOut: r13 r2 r3 r8 r9
// Trashed: LNZ r13 r2 r3 r8 r9
// Preserved: sp
fn0000BAF2_entry:
	word32 r13
l0000BAF2:
	word16 r3_20 = SLICE(r13, word16, 16)
	word16 r2_21 = SLICE(r13, word16, 0)
	word16 r8_31 = SLICE(r13, word16, 0)
l0000BB02_thunk_fn0000BB06:
	word32 r13_23 = fn0000BB06(r9_r8)
	r3Out = r3_20
	r8Out = r8_31
	r9Out = 0<16>
	r13Out = r13_23
	return r2_21
fn0000BAF2_exit:


word32 fn0000BB06(word32 dwArg50)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B218
//      fn0000BAF2
// MayUse:  Stack +0050:[0..31]
// LiveOut: r13
// Trashed: LNZ r13
// Preserved: sp
fn0000BB06_entry:
l0000BB06:
l0000BB0C_thunk_fn0000BB0E:
	fn0000BB0E()
	return dwArg50
fn0000BB06_exit:


void fn0000BB0E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B2B0
//      fn0000BB06
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000BB0E_entry:
	bool Z
	word16 r3
	word16 r2
	word16 r5
	word16 r4
	word32 r13
	word16 r9
	word16 r8
	word16 r0
l0000BB0E:
	branch Z l0000BB0E_thunk_fn0000BDB6
l0000BB0E_thunk_fn0000BDB6:
	fn0000BDB6(SEQ(r5, r4), SEQ(r9, r8), r0, r13)
	return
l0000BB0E_thunk_fn0000BB12:
	fn0000BB12(SEQ(r3, r2), SEQ(r5, r4), r13)
	return
fn0000BB0E_exit:


void fn0000BB12(word32 r3_r2, word32 r5_r4, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BAE0
//      fn0000BB3E
//      fn0000BC32
// MayUse:  r13:[0..31] Sequence r3:r2:[16..31] Sequence r5:r4:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000BB12_entry:
	word32 r12
	word16 r2 = SLICE(r3_r2, word16, 0)
l0000BB12:
	branch r5_r4 == 0<32> l0000BB14_thunk_fn0000C674
l0000BB14_thunk_fn0000C674:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg52 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg60 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg68 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg76 = <invalid>
	word32 stackArg80 = <invalid>
	word32 stackArg100 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg258 = <invalid>
	word16 stackArg528 = <invalid>
	word16 stackArg532 = <invalid>
	word16 r1_389
	word16 r2_390
	word16 r3_391
	word16 r4_392
	word16 r5_393
	word16 r6_394
	word16 r8_395
	word16 r9_396
	word16 r10_397
	word16 r11_398
	word32 r12_399
	word32 r13_400
	fn0000C674(SEQ(r1, r0), SEQ(r11, r10), SEQ(r7, r6), SEQ(r9, r8), r12, r13, ra, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg24, stackArg52, stackArg56, stackArg60, stackArg64, stackArg68, stackArg72, stackArg76, stackArg80, stackArg100, stackArg104, stackArg258, stackArg528, stackArg532, out r1_389, out r2_390, out r3_391, out r4_392, out r5_393, out r6_394, out r8_395, out r9_396, out r10_397, out r11_398, out r12_399, out r13_400)
	return
l0000BB18:
	branch r13 >=u 0xF<32> l0000BE12
l0000BE12:
	branch r13 >=u 0xF<32> l0000BE14_thunk_fn0000C3AC
l0000BE14_thunk_fn0000C3AC:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg52 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg60 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg68 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg76 = <invalid>
	word32 stackArg80 = <invalid>
	word32 stackArg100 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg258 = <invalid>
	word16 stackArg528 = <invalid>
	word16 stackArg532 = <invalid>
	word16 r1_357
	word16 r2_358
	word16 r3_359
	word16 r4_360
	word16 r5_361
	word16 r6_362
	word16 r8_363
	word16 r9_364
	word16 r10_365
	word16 r11_366
	word32 r12_367
	word32 r13_368
	fn0000C3AC(SEQ(r1, r0), SEQ(r11, r10), SEQ(r5, r4), r12, r13, ra, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg24, stackArg52, stackArg56, stackArg60, stackArg64, stackArg68, stackArg72, stackArg76, stackArg80, stackArg100, stackArg104, stackArg258, stackArg528, stackArg532, out r1_357, out r2_358, out r3_359, out r4_360, out r5_361, out r6_362, out r8_363, out r9_364, out r10_365, out r11_366, out r12_367, out r13_368)
	return
l0000BE18:
l0000BEB2_thunk_fn0000BEB4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg80 = <invalid>
	word32 stackArg104 = <invalid>
	word16 r3_335
	word32 r13_336
	fn0000BEB4(SEQ(r11, r10), SEQ(r3, r2), SEQ(r5, r4), SEQ(r7, r6), r8, r12, r13, ra, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg64, stackArg80, stackArg104, out r3_335, out r13_336)
	return
l0000BB1E:
	branch r13 >=u 0x15AF<32> l0000BB22_thunk_fn0000C68E
l0000BB22_thunk_fn0000C68E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg52 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg60 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg68 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg76 = <invalid>
	word32 stackArg80 = <invalid>
	word32 stackArg100 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg258 = <invalid>
	word16 stackArg528 = <invalid>
	word16 stackArg532 = <invalid>
	word16 r1_315
	word16 r2_316
	word16 r3_317
	word16 r4_318
	word16 r5_319
	word16 r6_320
	word16 r8_321
	word16 r9_322
	word16 r10_323
	word16 r11_324
	word32 r12_325
	word32 r13_326
	fn0000C68E(SEQ(r1, r0), SEQ(r11, r10), r12, r13, ra, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg24, stackArg52, stackArg56, stackArg60, stackArg64, stackArg68, stackArg72, stackArg76, stackArg80, stackArg100, stackArg104, stackArg258, stackArg528, stackArg532, out r1_315, out r2_316, out r3_317, out r4_318, out r5_319, out r6_320, out r8_321, out r9_322, out r10_323, out r11_324, out r12_325, out r13_326)
	return
l0000BB26:
l0000BB3A_thunk_fn0000BB84:
	fn0000BB84(r2, r12)
	return
fn0000BB12_exit:


void fn0000BB3E(word32 r3_r2, word32 r5_r4, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
l0000BB3E:
	word32 r3_r2_18 = r3_r2_187 + r9_r8_198
	Mem22[sp:word32] = r3_r2_18
	Mem35[sp + 0x60<32>:word32] = r3_r2_18 + CONVERT(Mem22[r12_262 + 0xFFFFFFF1<32>:byte], byte, word32)
	word32 r5_r4_47 = Mem35[sp + 0x60<32>:word32] + CONVERT(Mem35[r12_262 + 0xFFFFFFF2<32>:byte], byte, word32)
	Mem50[sp + 4<32>:word32] = r5_r4_47
	word32 r5_r4_59 = r5_r4_47 + CONVERT(Mem50[r12_262 + 0xFFFFFFF3<32>:byte], byte, word32)
	Mem62[sp + 8<32>:word32] = r5_r4_59
	word32 r5_r4_71 = r5_r4_59 + CONVERT(Mem62[r12_262 + 0xFFFFFFF4<32>:byte], byte, word32)
	Mem74[sp + 0xC<32>:word32] = r5_r4_71
	r5_r4_83 = r5_r4_71 + CONVERT(Mem74[r12_262 + 0xFFFFFFF5<32>:byte], byte, word32)
	Mem87[sp + 0x10<32>:word32] = r5_r4_83
	v24_88 = Mem87[r12_262 + 0xFFFFFFF6<32>:byte]
l0000BB84:
	r5_r4_96 = r5_r4_83 + CONVERT(v24_88, byte, word32)
	Mem100[sp + 0x14<32>:word32] = r5_r4_96
	v26_101 = Mem100[r12_262 + 0xFFFFFFF7<32>:byte]
l0000BB8E:
	r5_r4_109 = r5_r4_96 + CONVERT(v26_101, byte, word32)
	Mem112[sp + 0x18<32>:word32] = r5_r4_109
	r5_r4_121 = r5_r4_109 + CONVERT(Mem112[r12_262 + 0xFFFFFFF8<32>:byte], byte, word32)
	Mem124[sp + 0x38<32>:word32] = r5_r4_121
	r5_r4_132 = r5_r4_121 + CONVERT(Mem124[r12_262 + 0xFFFFFFF9<32>:byte], byte, word32)
	Mem135[sp + 0x68<32>:word32] = r5_r4_132
	ra_143 = CONVERT(Mem135[r12_262 + 0xFFFFFFFA<32>:byte], byte, word32) + r5_r4_132
	r11_r10_153 = CONVERT(Mem135[r12_262 + 0xFFFFFFFB<32>:byte], byte, word32) + ra_143
	r7_r6_165 = CONVERT(Mem135[r12_262 + 0xFFFFFFFC<32>:byte], byte, word32) + r11_r10_153
	r5_r4_176 = CONVERT(Mem135[r12_262 + 0xFFFFFFFD<32>:byte], byte, word32) + r7_r6_165
	r3_r2_187 = CONVERT(Mem135[r12_262 + 0xFFFFFFFE<32>:byte], byte, word32) + r5_r4_176
	r9_r8_198 = CONVERT(Mem135[r12_262 + 0xFFFFFFFF<32>:byte], byte, word32) + r3_r2_187
	r1_r0_231 = Mem135[sp + 0x60<32>:word32] + Mem135[sp:word32] + Mem135[sp + 4<32>:word32] + Mem135[sp + 8<32>:word32] + Mem135[sp + 0xC<32>:word32] + Mem135[sp + 0x10<32>:word32] + Mem135[sp + 0x14<32>:word32] + Mem135[sp + 0x18<32>:word32] + Mem135[sp + 0x38<32>:word32]
	Mem234[sp:word32] = r1_r0_231
	Mem261[sp + 0x40<32>:word32] = Mem234[sp + 0x40<32>:word32] + (((((((r1_r0_231 + Mem234[sp + 0x68<32>:word32]) + ra_143) + r11_r10_153) + r7_r6_165) + r5_r4_176) + r3_r2_187) + r9_r8_198)
	r12_262 = r12_262
	branch Mem261[sp + 0x48<32>:word32] != r12_262 + 0xFFFFFFE0<32> l0000BB3E
l0000BC30_thunk_fn0000BC32:
	fn0000BC32()
	return
fn0000BB3E_entry:
l0000BB3E_thunk_fn0000BB12:
	fn0000BB12(r3_r2, r5_r4, r13)
	return
fn0000BB3E_exit:


void fn0000BB84(word16 r2, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BB12
// MayUse:  r12:[0..31] r2:[0..7]
// LiveOut:
// Trashed: CFLNZ r0 r10 r12 r13 r2 r3 r4 r5 r6 r8 ra
// Preserved: sp
fn0000BB84_entry:
l0000BB84:
l0000BB8C_thunk_fn0000BB8E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg72 = <invalid>
	fn0000BB8E(r12, stackArg72)
	return
fn0000BB84_exit:


void fn0000BB8E(word32 r12, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BB84
// MayUse:  r12:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000BB8E_entry:
	word16 r3
l0000BB8E:
l0000BBFC:
	branch dwArg48 != r12 + 0x10<32> l0000BC30_thunk_fn0000BB3E
l0000BC30_thunk_fn0000BB3E:
	fn0000BB3E(SEQ(r3, r2), SEQ(r5, r4), r13)
	return
l0000BC30_thunk_fn0000BC32:
	fn0000BC32()
	return
fn0000BB8E_exit:


void fn0000BC32()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BB8E
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000BC32_entry:
	word16 r3
	word16 r2
	word32 r13
l0000BC32_thunk_fn0000BB12:
	fn0000BB12(SEQ(r3, r2), SEQ(r5, r4), r13)
	return
fn0000BC32_exit:


void fn0000BC42(word32 r1_r0, word32 r5_r4, word16 r7, word16 r8, word32 r12, word32 ra, word32 dwArg40, word32 dwArg58)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BB84
// MayUse:  r12:[0..31] r7:[0..15] r8:[0..15] ra:[0..31] Sequence r1:r0:[0..31] Sequence r5:r4:[0..31] Stack +0040:[0..31] Stack +0058:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r11 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000BC42_entry:
	word16 r1 = SLICE(r1_r0, word16, 16)
	word16 r0 = SLICE(r1_r0, word16, 0)
l0000BC42:
	word16 r6_71
	word16 r9_72
	word32 r5_r4_152
	word32 r3_r2_151 = fn0000D4EC(dwArg40, r5_r4, r0, r1, out r5_r4_152, out r6_71, out r9_72)
	word16 r5_70 = SLICE(r5_r4_152, word16, 16)
	word16 r4_69 = SLICE(r5_r4_152, word16, 0)
	branch dwArg58 >=u 0x15AF<32> l0000BC56_thunk_fn0000BFBE
l0000BC56_thunk_fn0000BFBE:
	fn0000BFBE(r3_r2_151, r5_r4_152, SEQ(r9_72, r8), r0, r12)
	return
l0000BC56_thunk_fn0000BC5A:
	fn0000BC5A(r3_r2_151, SEQ(r7, r6_71), r0, r4_69, r5_70, ra)
	return
fn0000BC42_exit:


void fn0000BC5A(word32 r3_r2, word32 r7_r6, word16 r0, word16 r4, word16 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BAE0
//      fn0000BC42
// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15] ra:[0..31] Sequence r3:r2:[0..31] Sequence r7:r6:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r11 r4 r5 r6 r7 r9 ra sp
// Preserved:
fn0000BC5A_entry:
l0000BC5A:
l0000B9FC:
	Mem7[ra:word16] = r4
	word32 ra_11 = Mem7[r3_r2 + 0x23E0<32>:word32]
	Mem16[r3_r2 + 0x23EC<32>:word16] = r0
	Mem24[ra_11 + r7_r6:byte] = SLICE(r5, byte, 0)
	branch r4 == 0<16> l0000BA80
l0000BA80:
	word32 r1_r0_27 = CONVERT(r5, word16, word32)
l0000BA84:
	word32 r1_r0_34 = (r1_r0_27 << 2<8>) + r3_r2
	Mem40[SEQ(SLICE(r1_r0_34, word16, 16) + 1<16>, SLICE(r1_r0_34, word16, 0)) + 0xD4<32>:word16] = Mem24[r1_r0_34 + 0xD4<32>:word16]
	return
l0000BA10:
	word16 r0_123
	Mem59[r3_r2 + 0x2408<32>:word16] = Mem24[r3_r2 + 0x2408<32>:word16]
	word32 r1_r0_82 = (CONVERT(Mem59[CONVERT(r5, word16, word32) + 0xF32E<32>:byte], byte, word32) << 2<8>) + r3_r2
	Mem89[SEQ(SLICE(r1_r0_82, word16, 16) + 1<16>, SLICE(r1_r0_82, word16, 0)) + 0x8DC<32>:word16] = Mem59[r1_r0_82 + 0x8DC<32>:word16]
	branch r4 >=u 0xFF<16> l0000BA72
l0000BA72:
	r0_123 = CONVERT(Mem89[CONVERT(r4, word16, word32) + 0xF42E<32>:byte], byte, word16) (alias)
l0000BA3E:
	r0_123 = CONVERT(Mem89[CONVERT(r4 >>u 9<8>, word16, word32) + 0xF42E<32>:byte], byte, word16) (alias)
l0000BA50:
	word32 r1_r0_135 = (CONVERT(r0_123, word16, int32) << 2<8>) + r3_r2
	Mem142[SEQ(SLICE(r1_r0_135, word16, 16) + 1<16>, SLICE(r1_r0_135, word16, 0)) + 0x12BC<32>:word16] = Mem89[r1_r0_135 + 0x12BC<32>:word16]
	return
fn0000BC5A_exit:


word16 fn0000BCAC(word32 r1_r0, word32 r11_r10, word32 r5_r4, word32 r7_r6, word32 r9_r8, word16 r3, word32 r12, word32 r13, word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg68, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000C6E8
// MayUse:  r12:[0..31] r13:[0..31] r3:[0..15] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0068:[0..31]
// LiveOut: r0 r1 r12 r13 r2 r3 r4 r5 r8 r9
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BCAC_entry:
l0000BCAC:
	word32 r1_r0_64 = r1_r0 + r9_r8
	branch r13 == 1<32> l0000BCB4_thunk_fn0000BF00
l0000BCB4_thunk_fn0000BF00:
	word16 r1_74
	word32 r12_75
	word32 r13_76
	word16 r2_77
	word16 r3_78
	word16 r4_79
	word16 r5_80
	word16 r8_81
	word16 r9_82
	word16 r0_73 = fn0000BF00(r1_r0_64, r12, dwArg00, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg38, r1_r0_64, dwArg48, dwArg50, out r1_74, out r2_77, out r3_78, out r4_79, out r5_80, out r8_81, out r9_82, out r12_75, out r13_76)
	r1Out = r1_74
	r2Out = r2_77
	r3Out = r3_78
	r4Out = r4_79
	r5Out = r5_80
	r8Out = r8_81
	r9Out = r9_82
	r12Out = r12_75
	r13Out = r13_76
	return r0_73
l0000BCB4_thunk_fn0000BCB8:
	word16 r1_101
	word32 r12_102
	word32 r13_103
	word16 r2_104
	word16 r3_105
	word16 r4_106
	word16 r5_107
	word16 r8_108
	word16 r9_109
	word16 r0_100 = fn0000BCB8(r11_r10, r5_r4, r7_r6, r9_r8, r3, r12, r13, ra, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg38, r1_r0_64, dwArg48, dwArg50, dwArg68, out r1_101, out r2_104, out r3_105, out r4_106, out r5_107, out r8_108, out r9_109, out r12_102, out r13_103)
	r1Out = r1_101
	r2Out = r2_104
	r3Out = r3_105
	r4Out = r4_106
	r5Out = r5_107
	r8Out = r8_108
	r9Out = r9_109
	r12Out = r12_102
	r13Out = r13_103
	return r0_100
fn0000BCAC_exit:


word16 fn0000BCB8(word32 r11_r10, word32 r5_r4, word32 r7_r6, word32 r9_r8, word16 r3, word32 r12, word32 r13, word32 ra, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg40, word32 dwArg48, word32 dwArg50, word32 dwArg68, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BCAC
//      fn0000BD10
//      fn0000C6E8
// MayUse:  r12:[0..31] r13:[0..31] r3:[0..15] ra:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0068:[0..31]
// LiveOut: r0 r1 r12 r13 r2 r3 r4 r5 r8 r9
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BCB8_entry:
l0000BCB8:
	word32 r1_r0_13 = CONVERT(Mem0[r5_r4 + 1<32>:byte], byte, word32)
	word32 r9_r8_19 = r9_r8 + r1_r0_13
	word32 r2_r1_26 = dwArg40 + r9_r8_19
	word16 r0_18 = SLICE(r1_r0_13, word16, 0)
	word16 r2_27 = SLICE(r2_r1_26, word16, 16)
	word16 r1_28 = SLICE(r2_r1_26, word16, 0)
l0000BCCC:
	branch r13 == 2<32> l0000BEE6
l0000BEE6:
l0000BEE6_thunk_fn0000BEE8:
	word32 r13_53
	word16 r3_55
	word16 r2_54 = fn0000BEE8(SEQ(r1_28, r0_18), r11_r10, SEQ(r3, r2_27), r5_r4 + 0x6108E08F<32>, r7_r6, r9_r8_19, r12, r13, ra, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg38, r2_r1_26, dwArg48, dwArg50, dwArg68, out r3_55, out r13_53)
	r1Out = r1_51
	r2Out = r2_54
	r3Out = r3_55
	r4Out = r4_56
	r5Out = r5_57
	r8Out = r8_58
	r9Out = r9_59
	r12Out = r12_52
	r13Out = r13_53
	return r0_50
l0000BCD2:
	word32 r1_r0_73 = CONVERT(Mem30[r5_r4 + 2<32>:byte], byte, word32)
	word32 r9_r8_76 = r9_r8_19 + r1_r0_73
	word16 r0_75 = SLICE(r1_r0_73, word16, 0)
	word32 r3_r2_82 = SEQ(r3, r3) + r9_r8_76
	branch r13 == 3<32> l0000BDDA
l0000BCE6_thunk_fn0000BDDA:
	word16 r1_90
	word32 r13_91
	word16 r2_92
	word16 r3_93
	word16 r4_94
	word16 r5_95
	word16 r8_97
	word16 r9_98
	word16 r0_89 = fn0000BDDA(r0_75, r9_r8_76, out r1_90, out r2_92, out r3_93, out r4_94, out r5_95, out r8_97, out r9_98, out r13_91)
	r1Out = r1_90
	r2Out = r2_92
	r3Out = r3_93
	r4Out = r4_94
	r5Out = r5_95
	r8Out = r8_97
	r9Out = r9_98
	r12Out = r12
	r13Out = r13_91
	return r0_89
l0000BCE8:
	word32 r1_r0_111 = CONVERT(Mem86[r5_r4 + 3<32>:byte], byte, word32)
	word16 r0_113 = SLICE(r1_r0_111, word16, 0)
	word32 r9_r8_114 = r9_r8_76 + r1_r0_111
l0000BCF0:
	word32 r3_r2_119 = r3_r2_82 + r9_r8_114
l0000BCF8_thunk_fn0000BCFA:
	word16 r1_127
	word32 r13_128
	word16 r2_129
	word16 r3_130
	word16 r4_131
	word16 r5_132
	word16 r8_134
	word16 r9_135
	word16 r0_126 = fn0000BCFA(r3_r2_119, r5_r4, r9_r8_114, r0_113, r13, r9_r8_114, out r1_127, out r2_129, out r3_130, out r4_131, out r5_132, out r8_134, out r9_135, out r13_128)
	r1Out = r1_127
	r2Out = r2_129
	r3Out = r3_130
	r4Out = r4_131
	r5Out = r5_132
	r8Out = r8_134
	r9Out = r9_135
	r12Out = r12
	r13Out = r13_128
	return r0_126
fn0000BCB8_exit:


word16 fn0000BCFA(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word32 r13, word32 dwArg00, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B218
//      fn0000BCB8
// MayUse:  r0:[0..15] r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..31]
// LiveOut: r0 r1 r13 r2 r3 r4 r5 r8 r9
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BCFA_entry:
	bool Z
l0000BCFA:
	branch Z l0000BCFA_thunk_fn0000BDDA
l0000BCFA_thunk_fn0000BDDA:
	word16 r1_51
	word32 r13_52
	word16 r2_53
	word16 r3_54
	word16 r4_55
	word16 r5_56
	word16 r8_58
	word16 r9_59
	word16 r0_50 = fn0000BDDA(r0, dwArg00, out r1_51, out r2_53, out r3_54, out r4_55, out r5_56, out r8_58, out r9_59, out r13_52)
	r1Out = r1_51
	r2Out = r2_53
	r3Out = r3_54
	r4Out = r4_55
	r5Out = r5_56
	r8Out = r8_58
	r9Out = r9_59
	r13Out = r13_52
	return r0_50
l0000BCFA_thunk_fn0000BCFC:
	word16 r1_77
	word32 r13_78
	word16 r2_79
	word16 r3_80
	word16 r4_81
	word16 r5_82
	word16 r8_84
	word16 r9_85
	word16 r0_76 = fn0000BCFC(r3_r2, r5_r4, r9_r8, r13, out r1_77, out r2_79, out r3_80, out r4_81, out r5_82, out r8_84, out r9_85, out r13_78)
	r1Out = r1_77
	r2Out = r2_79
	r3Out = r3_80
	r4Out = r4_81
	r5Out = r5_82
	r8Out = r8_84
	r9Out = r9_85
	r13Out = r13_78
	return r0_76
fn0000BCFA_exit:


word16 fn0000BCFC(word32 r3_r2, word32 r5_r4, word32 r9_r8, word32 r13, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BCB8
//      fn0000BCFA
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r0 r1 r13 r2 r3 r4 r5 r8 r9
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BCFC_entry:
	word16 r5 = SLICE(r5_r4, word16, 16)
	word16 r4 = SLICE(r5_r4, word16, 0)
l0000BCFC:
	word32 r1_r0_13 = CONVERT(Mem0[r5_r4 + 4<32>:byte], byte, word32)
	word32 r9_r8_19 = r9_r8 + r1_r0_13
	word32 r3_r2_26 = r3_r2 + r9_r8_19
	word16 r1_17 = SLICE(r1_r0_13, word16, 16)
	word16 r0_18 = SLICE(r1_r0_13, word16, 0)
	word16 r9_20 = SLICE(r9_r8_19, word16, 16)
	word16 r8_21 = SLICE(r9_r8_19, word16, 0)
	word16 r3_27 = SLICE(r3_r2_26, word16, 16)
	word16 r2_28 = SLICE(r3_r2_26, word16, 0)
	branch r13 == 5<32> l0000BDDA
l0000BD0E_thunk_fn0000BDDA:
	word16 r1_35
	word32 r13_36
	word16 r2_37
	word16 r3_38
	word16 r4_39
	word16 r5_40
	word16 r8_42
	word16 r9_43
	word16 r0_34 = fn0000BDDA(r0_18, r9_r8_19, out r1_35, out r2_37, out r3_38, out r4_39, out r5_40, out r8_42, out r9_43, out r13_36)
	r1Out = r1_35
	r2Out = r2_37
	r3Out = r3_38
	r4Out = r4_39
	r5Out = r5_40
	r8Out = r8_42
	r9Out = r9_43
	r13Out = r13_36
	return r0_34
l0000BD0E_thunk_fn0000BD10:
	word16 r3_84
	word32 r12_85
	word32 r13_86
	fn0000BD10(out r3_84, out r12_85, out r13_86)
	r1Out = r1_17
	r2Out = r2_28
	r3Out = r3_27
	r4Out = r4
	r5Out = r5
	r8Out = r8_21
	r9Out = r9_20
	r13Out = r13
	return r0_18
fn0000BCFC_exit:


word16 fn0000BD10(ptr32 & r3Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BCB8
// MayUse: 
// LiveOut: r12 r13 r2 r3
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BD10_entry:
	word16 r11
	word16 r10
	word16 r7
	word16 r6
	word32 ra
l0000BD10_thunk_fn0000BCB8:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 stackArg20 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg80 = <invalid>
	word32 stackArg104 = <invalid>
	word32 r13_72
	word16 r2_74
	word16 r3_75
	word32 r12_81
	word16 r1_120
	word16 r4_121
	word16 r5_122
	word16 r8_123
	word16 r9_124
	fn0000BCB8(SEQ(r11, r10), SEQ(r5, r4), SEQ(r7, r6), SEQ(r9, r8), r3, r12, r13, ra, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg24, stackArg56, stackArg64, stackArg72, stackArg80, stackArg104, out r1_120, out r2_74, out r3_75, out r4_121, out r5_122, out r8_123, out r9_124, out r12_81, out r13_72)
	r3Out = r3_75
	r12Out = r12_81
	r13Out = r13_72
	return r2_74
fn0000BD10_exit:


void fn0000BD36()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF1E
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BD36_entry:
	word16 r1
	word32 r12
l0000BD36_thunk_fn0000BF1E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg80 = <invalid>
	word16 r1_210
	word16 r2_211
	word16 r8_212
	word16 r9_213
	word32 r12_214
	word32 r13_215
	fn0000BF1E(SEQ(r1, r0), SEQ(r9, r8), r12, stackArg0, stackArg64, stackArg80, out r1_210, out r2_211, out r8_212, out r9_213, out r12_214, out r13_215)
	return
fn0000BD36_exit:


word16 fn0000BD82(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word32 r13, word32 dwArg00, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF1E
// MayUse:  r0:[0..15] r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BD82_entry:
l0000BD82:
	branch r13 == 0xB<32> l0000BD8A_thunk_fn0000BDDA
l0000BD8A_thunk_fn0000BDDA:
	word32 r13_43
	word16 r2_44
	word16 r3_45
	word16 r1_105
	word16 r4_106
	word16 r5_107
	word16 r8_108
	word16 r9_109
	fn0000BDDA(r0, dwArg00, out r1_105, out r2_44, out r3_45, out r4_106, out r5_107, out r8_108, out r9_109, out r13_43)
	r3Out = r3_45
	r13Out = r13_43
	return r2_44
l0000BD8A_thunk_fn0000BD8C:
	word32 r13_66
	word16 r3_68
	word16 r2_67 = fn0000BD8C(r3_r2, r5_r4, r9_r8, r13, out r3_68, out r13_66)
	r3Out = r3_68
	r13Out = r13_66
	return r2_67
fn0000BD82_exit:


word16 fn0000BD84(word32 r1_r0, word32 r3_r2, word32 r5_r4, word32 r9_r8, word32 r13, word32 dwArg00, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000B2F2
//      fn0000BF00
// MayUse:  r13:[0..31] Sequence r1:r0:[0..15] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BD84_entry:
	bool Z
	word16 r0 = SLICE(r1_r0, word16, 0)
l0000BD84:
	branch Z l0000BD8A_thunk_fn0000BDDA
l0000BD8A_thunk_fn0000BDDA:
	word32 r13_58
	word16 r2_59
	word16 r3_60
	word16 r1_121
	word16 r4_122
	word16 r5_123
	word16 r8_124
	word16 r9_125
	fn0000BDDA(r0 + 0xB<16>, dwArg00, out r1_121, out r2_59, out r3_60, out r4_122, out r5_123, out r8_124, out r9_125, out r13_58)
	r3Out = r3_60
	r13Out = r13_58
	return r2_59
l0000BD8A_thunk_fn0000BD8C:
	word32 r13_84
	word16 r3_86
	word16 r2_85 = fn0000BD8C(r3_r2, r5_r4, r9_r8, r13, out r3_86, out r13_84)
	r3Out = r3_86
	r13Out = r13_84
	return r2_85
fn0000BD84_exit:


word16 fn0000BD8C(word32 r3_r2, word32 r5_r4, word32 r9_r8, word32 r13, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BD82
//      fn0000BD84
//      fn0000BF00
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BD8C_entry:
l0000BD8C:
	word32 r1_r0_13 = CONVERT(Mem0[r5_r4 + 0xB<32>:byte], byte, word32)
	word32 r9_r8_19 = r9_r8 + r1_r0_13
	word16 r0_18 = SLICE(r1_r0_13, word16, 0)
	word32 r3_r2_26 = r3_r2 + r9_r8_19
	branch r13 == 0xC<32> l0000BDDA
l0000BD9E_thunk_fn0000BDDA:
	word32 r13_36
	word16 r2_37
	word16 r3_38
	word16 r1_124
	word16 r4_125
	word16 r5_126
	word16 r8_127
	word16 r9_128
	fn0000BDDA(r0_18, r9_r8_19, out r1_124, out r2_37, out r3_38, out r4_125, out r5_126, out r8_127, out r9_128, out r13_36)
	r3Out = r3_38
	r13Out = r13_36
	return r2_37
l0000BDA0:
	word32 r1_r0_56 = CONVERT(Mem30[r5_r4 + 0xC<32>:byte], byte, word32)
	word32 r9_r8_59 = r9_r8_19 + r1_r0_56
	word32 r3_r2_63 = r3_r2_26 + r9_r8_59
	word16 r0_58 = SLICE(r1_r0_56, word16, 0)
	word16 r3_64 = SLICE(r3_r2_63, word16, 16)
	word16 r2_65 = SLICE(r3_r2_63, word16, 0)
	branch r13 == 0xD<32> l0000BDDA
l0000BDB2_thunk_fn0000BDDA:
	word32 r13_72
	word16 r2_73
	word16 r3_74
	word16 r1_119
	word16 r4_120
	word16 r5_121
	word16 r8_122
	word16 r9_123
	fn0000BDDA(r0_58, r9_r8_59, out r1_119, out r2_73, out r3_74, out r4_120, out r5_121, out r8_122, out r9_123, out r13_72)
	r3Out = r3_74
	r13Out = r13_72
	return r2_73
l0000BDB4:
l0000BDB4_thunk_fn0000BDB6:
	fn0000BDB6(SEQ(r5, r4), SEQ(r9, r8), r0, r13)
	r3Out = r3_64
	r13Out = r13
	return r2_65
fn0000BD8C_exit:


void fn0000BDB6(word32 r5_r4, word32 r9_r8, word16 r0, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BAE0
//      fn0000BF00
// MayUse:  r0:[0..7] r13:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BDB6_entry:
l0000BDB6:
	word32 r1_r0_47 = CONVERT(SLICE(r0, byte, 0), byte, word32)
	word16 r0_52 = SLICE(r1_r0_47, word16, 0)
	word32 r9_r8_53 = r9_r8 + r1_r0_47
	branch r13 == 0xE<32> l0000BDC6_thunk_fn0000BDDA
l0000BDC6_thunk_fn0000BDDA:
	word16 r1_125
	word16 r2_126
	word16 r3_127
	word16 r4_128
	word16 r5_129
	word16 r8_130
	word16 r9_131
	word32 r13_132
	fn0000BDDA(r0_52, r9_r8_53, out r1_125, out r2_126, out r3_127, out r4_128, out r5_129, out r8_130, out r9_131, out r13_132)
	return
l0000BDC6_thunk_fn0000BDC8:
	fn0000BDC8(r5_r4, r9_r8_53)
	return
fn0000BDB6_exit:


void fn0000BDC8(word32 r5_r4, word32 r9_r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BDB6
//      fn0000C6E8
// MayUse:  Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9
// Preserved: sp
fn0000BDC8_entry:
l0000BDC8:
	word32 r1_r0_13 = CONVERT(Mem0[r5_r4 + 0xE<32>:byte], byte, word32)
	word16 r0_18 = SLICE(r1_r0_13, word16, 0)
	word32 r9_r8_19 = r9_r8 + r1_r0_13
l0000BDD6_thunk_fn0000BDDA:
	word16 r1_52
	word16 r2_53
	word16 r3_54
	word16 r4_55
	word16 r5_56
	word16 r8_57
	word16 r9_58
	word32 r13_59
	fn0000BDDA(r0_18, r9_r8_19, out r1_52, out r2_53, out r3_54, out r4_55, out r5_56, out r8_57, out r9_58, out r13_59)
	return
fn0000BDC8_exit:


word16 fn0000BDDA(word16 r0, word32 dwArg00, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BCFA
//      fn0000BD82
//      fn0000BD84
//      fn0000BDB6
//      fn0000C6E8
// MayUse:  r0:[0..15] Stack +0000:[0..31]
// LiveOut: r0 r1 r13 r2 r3 r4 r5 r8 r9
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r7 r8 r9 sp
// Preserved:
fn0000BDDA_entry:
	word32 dwArg40
	word32 dwArg3A
	word16 r3
	word16 r2
	word16 r5
	word16 r4
	word16 r1
l0000BDDA:
	branch dwArg00 >=u 0xFFF0<32> l0000BDEC
l0000BDE4:
	dwArg00 = SEQ(SLICE(dwArg00 + 0xFFFF000F<32>, word16, 16), SLICE(dwArg00, word16, 0) + 0xF<16>) (alias)
l0000BDEC:
	word32 r5_r4_72
	word16 r6_73
	word16 r9_74
	fn0000D4EC(SEQ(r3, r2), SEQ(r5, r4), r0, r1, out r5_r4_72, out r6_73, out r9_74)
	word32 r1_r0_28 = SEQ(r0, 0<16>) | dwArg00
	r1Out = SLICE(r1_r0_28, word16, 16)
	r2Out = r0
	r3Out = SLICE(dwArg40, word16, 16)
	r4Out = 0xFFF1<16>
	r5Out = 0<16>
	r8Out = SLICE(dwArg00, word16, 0)
	r9Out = SLICE(dwArg00, word16, 16)
	r13Out = dwArg3A
	return SLICE(r1_r0_28, word16, 0)
fn0000BDDA_exit:


word16 fn0000BEB4(word32 r11_r10, word32 r3_r2, word32 r5_r4, word32 r7_r6, word16 r8, word32 r12, word32 r13, word32 ra, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg50, word32 dwArg68, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BAE0
// MayUse:  r12:[0..31] r13:[0..31] r8:[0..15] ra:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r7:r6:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0050:[0..31] Stack +0068:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r8 r9
// Preserved: sp
fn0000BEB4_entry:
l0000BEB4:
	word32 r9_r8_49 = dwArg14 + CONVERT(r8, word16, word32)
	word32 r9_r8_65 = r9_r8_49 + CONVERT(Mem52[r12 + 0xD<32>:byte], byte, word32)
	word32 r9_r8_80 = r9_r8_65 + CONVERT(Mem68[r12 + 0xE<32>:byte], byte, word32)
	word32 r1_r0_90 = CONVERT(Mem84[r12 + 0xF<32>:byte], byte, word32)
l0000BEE4_thunk_fn0000BEE8:
	word32 r13_113
	word16 r3_115
	word16 r2_114 = fn0000BEE8(r1_r0_90, r11_r10, r3_r2, r5_r4, r7_r6, r9_r8_80, r12, r13, ra, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, r9_r8_49, r9_r8_65, dwArg40, r9_r8_80, dwArg50, dwArg68, out r3_115, out r13_113)
	r3Out = r3_115
	r13Out = r13_113
	return r2_114
fn0000BEB4_exit:


word16 fn0000BEE8(word32 r1_r0, word32 r11_r10, word32 r3_r2, word32 r5_r4, word32 r7_r6, word32 r9_r8, word32 r12, word32 r13, word32 ra, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg40, word32 dwArg48, word32 dwArg50, word32 dwArg68, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BAE0
//      fn0000BEB4
//      fn0000C6E8
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0068:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r8 r9
// Preserved: sp
fn0000BEE8_entry:
l0000BEE8:
	word32 r9_r8_30 = r9_r8 + r1_r0
	word32 r1_r0_70 = dwArg68 + r7_r6 + r5_r4 + r3_r2 + r11_r10 + ra + r13 + dwArg04
l0000BEFE_thunk_fn0000BF00:
	word32 r13_78
	word16 r2_79
	word16 r3_80
	word16 r1_112
	word16 r4_113
	word16 r5_114
	word16 r8_115
	word16 r9_116
	word32 r12_117
	fn0000BF00(r1_r0_70, r12, r9_r8_30, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg38, dwArg40, dwArg48, dwArg50, out r1_112, out r2_79, out r3_80, out r4_113, out r5_114, out r8_115, out r9_116, out r12_117, out r13_78)
	r3Out = r3_80
	r13Out = r13_78
	return r2_79
fn0000BEE8_exit:


word16 fn0000BF00(word32 r1_r0, word32 r12, word32 dwArg00, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg40, word32 dwArg48, word32 dwArg50, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BCAC
//      fn0000BEE8
//      fn0000C6E8
// MayUse:  r12:[0..31] Sequence r1:r0:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0048:[0..31] Stack +0050:[0..31]
// LiveOut: r0 r1 r12 r13 r2 r3 r4 r5 r8 r9
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r8 r9
// Preserved: sp
fn0000BF00_entry:
l0000BF00:
	word16 r3_15 = SLICE(dwArg0C, word16, 0)
	word16 r5_20 = SLICE(dwArg10, word16, 16)
	word16 r4_21 = SLICE(dwArg10, word16, 0)
	word32 r9_r8_38 = dwArg38 + (((((r1_r0 + dwArg08) + dwArg0C) + dwArg10) + dwArg14) + dwArg18)
l0000BF1A_thunk_fn0000BF1E:
	word16 r1_47
	word32 r12_48
	word32 r13_49
	word16 r2_50
	word16 r8_51
	word16 r9_52
	word16 r0_46 = fn0000BF1E(dwArg48, r9_r8_38, r12, dwArg00, dwArg40, dwArg50, out r1_47, out r2_50, out r8_51, out r9_52, out r12_48, out r13_49)
	r1Out = r1_47
	r2Out = r2_50
	r3Out = r3_15
	r4Out = r4_21
	r5Out = r5_20
	r8Out = r8_51
	r9Out = r9_52
	r12Out = r12_48
	r13Out = r13_49
	return r0_46
fn0000BF00_exit:


word16 fn0000BF1E(word32 r1_r0, word32 r9_r8, word32 r12, word32 dwArg00, word32 dwArg40, word32 dwArg50, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BD36
//      fn0000BF00
//      fn0000BF3C
// MayUse:  r12:[0..31] Sequence r1:r0:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..31] Stack +0040:[0..31] Stack +0050:[0..31]
// LiveOut: r0 r1 r12 r13 r2 r8 r9
// Trashed: CFLNZ r0 r1 r12 r13 r2 r8 r9
// Preserved: sp
fn0000BF1E_entry:
l0000BF1E:
	word32 r9_r8_30 = r9_r8 + r1_r0 + dwArg00
	word16 r2_28 = SLICE(dwArg00, word16, 16)
	word16 r9_32 = SLICE(r9_r8_30, word16, 16)
	word16 r8_33 = SLICE(r9_r8_30, word16, 0)
	word32 r13_34 = dwArg40 + r9_r8_30
l0000BF2E_thunk_fn0000BF32:
	word16 r1_40
	word16 r0_39 = fn0000BF32(r12 + 0x10<32>, dwArg50, out r1_40)
	r1Out = r1_40
	r2Out = r2_28
	r8Out = r8_33
	r9Out = r9_32
	r12Out = r12 + 0x10<32>
	r13Out = r13_34
	return r0_39
fn0000BF1E_exit:


word16 fn0000BF32(word32 r12, word32 dwArg50, ptr32 & r1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF1E
// MayUse:  r12:[0..31] Stack +0050:[0..31]
// LiveOut: r0 r1
// Trashed: LNZ r0 r1
// Preserved: sp
fn0000BF32_entry:
l0000BF32:
	branch dwArg50 != r12 l0000BF38_thunk_fn0000BD36
l0000BF38_thunk_fn0000BD36:
	fn0000BD36()
	return
l0000BF38_thunk_fn0000BF3C:
	fn0000BF3C()
	return
fn0000BF32_exit:


void fn0000BF3C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF1E
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r8 r9
// Preserved: sp
fn0000BF3C_entry:
	word16 r9
	word16 r8
l0000BF3C_thunk_fn0000BF1E:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg80 = <invalid>
	word16 r1_61
	word16 r2_62
	word16 r8_63
	word16 r9_64
	word32 r12_65
	word32 r13_66
	fn0000BF1E(SEQ(r1, r0), SEQ(r9, r8), r12, stackArg0, stackArg64, stackArg80, out r1_61, out r2_62, out r8_63, out r9_64, out r12_65, out r13_66)
	return
fn0000BF3C_exit:


word16 fn0000BF52(word32 r1_r0, word32 r11_r10, word32 r3_r2, word32 r12, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF1E
// MayUse:  r12:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r13 r2 r3 r8 r9
// Preserved: sp
fn0000BF52_entry:
l0000BF52:
l0000BF52_thunk_fn0000BF58:
	word32 r13_43
	word16 r3_45
	word16 r2_44 = fn0000BF58(r1_r0 & 0xF<32>, r11_r10, r3_r2, r12, out r3_45, out r13_43)
	r3Out = r3_45
	r13Out = r13_43
	return r2_44
fn0000BF52_exit:


word16 fn0000BF56(word32 r1_r0, word32 r11_r10, word32 r3_r2, word32 r12, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF52
// MayUse:  r12:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r13 r2 r3 r8 r9
// Preserved: sp
fn0000BF56_entry:
l0000BF56:
	__invalidate_cache("idu")
l0000BF56_thunk_fn0000BF58:
	word32 r13_50
	word16 r3_52
	word16 r2_51 = fn0000BF58(r1_r0, r11_r10, r3_r2, r12, out r3_52, out r13_50)
	r3Out = r3_52
	r13Out = r13_50
	return r2_51
fn0000BF56_exit:


word16 fn0000BF58(word32 r1_r0, word32 r11_r10, word32 r3_r2, word32 r12, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BF52
//      fn0000BF56
// MayUse:  r12:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r13 r2 r3 r8 r9
// Preserved: sp
fn0000BF58_entry:
	word32 r13
	word16 r3 = SLICE(r3_r2, word16, 16)
	word16 r2 = SLICE(r3_r2, word16, 0)
l0000BF58:
	branch r1_r0 == 0<32> l0000BF5A_thunk_fn0000C1D6
l0000BF5A_thunk_fn0000C1D6:
	word32 r13_51
	word16 r3_53
	word16 r2_52 = fn0000C1D6(r11_r10, r3_r2, r12, out r3_53, out r13_51)
	r3Out = r3_53
	r13Out = r13_51
	return r2_52
l0000BF5A_thunk_fn0000BF5E:
	fn0000BF5E()
	r3Out = r3
	r13Out = r13
	return r2
fn0000BF58_exit:


void fn0000BF5E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BF00
//      fn0000BF56
//      fn0000BF58
//      fn0000BF7A
//      fn0000BF92
//      fn0000BFBA
//      fn0000C1A2
//      fn0000C1BA
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r8 r9
// Preserved: sp
fn0000BF5E_entry:
l0000BF5E:
l0000BF5E_thunk_fn0000BF60:
	fn0000BF60()
	return
fn0000BF5E_exit:


void fn0000BF60()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF5E
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r8 r9
// Preserved: sp
fn0000BF60_entry:
l0000BF60:
l0000BF74_thunk_fn0000BF76:
	fn0000BF76()
	return
fn0000BF60_exit:


void fn0000BF76()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF60
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000BF76_entry:
	bool Z
l0000BF76:
	branch Z l0000BF76_thunk_fn0000C1BA
l0000BF76_thunk_fn0000C1BA:
	fn0000C1BA()
	return
l0000BF76_thunk_fn0000BF7A:
	fn0000BF7A()
	return
fn0000BF76_exit:


void fn0000BF7A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF5E
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000BF7A_entry:
l0000BF7A_thunk_fn0000BF5E:
	fn0000BF5E()
	return
fn0000BF7A_exit:


void fn0000BF7C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF5E
// MayUse: 
// LiveOut:
// Trashed: CF r0 r1 r8 r9
// Preserved: sp
fn0000BF7C_entry:
l0000BF7C:
l0000BF7C_thunk_fn0000BF7E:
	fn0000BF7E()
	return
fn0000BF7C_exit:


void fn0000BF7E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF7C
// MayUse: 
// LiveOut:
// Trashed: CF r0 r1 r8 r9
// Preserved: sp
fn0000BF7E_entry:
	word16 r3
	word16 r2
l0000BF7E:
l0000BF82_thunk_fn0000BF84:
	fn0000BF84(SEQ(r3, r2))
	return
fn0000BF7E_exit:


void fn0000BF84(word32 r3_r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF7C
// MayUse:  Sequence r3:r2:[0..31]
// LiveOut:
// Trashed: CFLNZ r4 r5
// Preserved: sp
fn0000BF84_entry:
l0000BF84:
l0000BF86:
	branch r3_r2 == 1<32> l0000BF8E_thunk_fn0000C1A2
l0000BF8E_thunk_fn0000C1A2:
	fn0000C1A2()
	return
l0000BF8E_thunk_fn0000BF92:
	fn0000BF92()
	return
fn0000BF84_exit:


void fn0000BF92()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF7C
// MayUse: 
// LiveOut:
// Trashed: CF r0 r12
// Preserved: sp
fn0000BF92_entry:
l0000BF92_thunk_fn0000BF5E:
	fn0000BF5E()
	return
fn0000BF92_exit:


void fn0000BFA0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF7C
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000BFA0_entry:
l0000BFA0:
l0000BFA0_thunk_fn0000BFA6:
	fn0000BFA6(SEQ(r3, r2), SEQ(r5, r4), SEQ(r9, r8), r12)
	return
fn0000BFA0_exit:


void fn0000BFA6(word32 r3_r2, word32 r5_r4, word32 r9_r8, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BF5E
//      fn0000BFA0
// MayUse:  r12:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000BFA6_entry:
	word16 r0
l0000BFA6:
	word16 r0_7 = SEQ(SLICE(r0, byte, 8), Mem0[r12 + 3<32>:byte])
l0000BFA6_thunk_fn0000BFA8:
	fn0000BFA8(r3_r2, r5_r4, r9_r8, r0_7)
	return
fn0000BFA6_exit:


void fn0000BFA8(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BFA6
// MayUse:  r0:[0..7] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000BFA8_entry:
l0000BFA8:
	word16 r0_42 = CONVERT(SLICE(r0, byte, 0), byte, word16)
l0000BFA8_thunk_fn0000BFAA:
	fn0000BFAA(r3_r2, r5_r4, r9_r8, r0_42)
	return
fn0000BFA8_exit:


void fn0000BFAA(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BFA8
// MayUse:  r0:[0..15] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BFAA_entry:
l0000BFAA:
	word16 r1_r0_4 = CONVERT(r0, word16, word32)
	word16 r1_8 = SLICE(r1_r0_4, word16, 16)
	word32 r9_r8_10 = r9_r8 + r1_r0_4
l0000BFB0:
	word32 r5_r4_18 = r5_r4 + r9_r8_10
	branch r3_r2 == 3<32> l0000C098_in_fn0000B29A
l0000C098_in_fn0000B29A:
	word32 r5_r4_111
	word16 r6_112
	word16 r9_113
	fn0000D4EC(r9_r8_10, 0xFFF1<32>, r1_r0_4, r1_8, out r5_r4_111, out r6_112, out r9_113)
	word32 r5_r4_115
	word16 r6_116
	word16 r9_117
	fn0000D4EC(r5_r4_18, 0xFFF1<32>, r1_r0_4, r1_8, out r5_r4_115, out r6_116, out r9_117)
	return
l0000BFB8_thunk_fn0000BFBA:
	fn0000BFBA()
	return
fn0000BFAA_exit:


void fn0000BFBA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BFA6
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000BFBA_entry:
l0000BFBA_thunk_fn0000BF5E:
	fn0000BF5E()
	return
fn0000BFBA_exit:


void fn0000BFBE(word32 r3_r2, word32 r5_r4, word32 r9_r8, word16 r0, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BAE0
//      fn0000BC42
//      fn0000BF00
// MayUse:  r0:[0..15] r12:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BFBE_entry:
l0000BFBE:
	word16 r1_r0_58 = CONVERT(r0, word16, word32)
	word32 r9_r8_64 = r9_r8 + r1_r0_58
	word16 r1_62 = SLICE(r1_r0_58, word16, 16)
	word32 r5_r4_71 = r5_r4 + r9_r8_64
	branch r3_r2 == 4<32> l0000C098_in_fn0000BFBE
l0000C098_in_fn0000BFBE:
	word32 r5_r4_176
	word16 r6_177
	word16 r9_178
	fn0000D4EC(r9_r8_64, 0xFFF1<32>, r1_r0_58, r1_62, out r5_r4_176, out r6_177, out r9_178)
	word32 r5_r4_180
	word16 r6_181
	word16 r9_182
	fn0000D4EC(r5_r4_71, 0xFFF1<32>, r1_r0_58, r1_62, out r5_r4_180, out r6_181, out r9_182)
	return
l0000BFCC_thunk_fn0000BFCE:
	fn0000BFCE(r3_r2, r5_r4_71, r9_r8_64, r12)
	return
fn0000BFBE_exit:


void fn0000BFCE(word32 r3_r2, word32 r5_r4, word32 r9_r8, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BFBE
//      fn0000C686
// MayUse:  r12:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31] Sequence r9:r8:[0..31]
// LiveOut:
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BFCE_entry:
l0000BFCE:
	word32 r1_r0_11 = CONVERT(Mem0[r12 + 5<32>:byte], byte, word32)
	word32 r9_r8_17 = r9_r8 + r1_r0_11
	word32 r5_r4_24 = r5_r4 + r9_r8_17
	word32 dwArg00_260 = r9_r8_17
	word32 dwArg40_261 = r5_r4_24
	branch r3_r2 == 5<32> l0000C098
l0000BFE2:
	r1_r0_11 = CONVERT(Mem28[r12 + 6<32>:byte], byte, word32)
	word32 r9_r8_42 = r9_r8_17 + r1_r0_11
	word32 r5_r4_46 = r5_r4_24 + r9_r8_42
	dwArg00_260 = r9_r8_42
	dwArg40_261 = r5_r4_46
	branch r3_r2 == 6<32> l0000C098
l0000BFF6:
	word32 r9_r8_62 = r9_r8_42 + CONVERT(Mem50[r12 + 7<32>:byte], byte, word32)
	word32 r5_r4_66 = r5_r4_46 + r9_r8_62
l0000C006:
	r1_r0_11 = CONVERT(Mem70[r12 + 8<32>:byte], byte, word32)
	word32 r9_r8_79 = r9_r8_62 + r1_r0_11
	word32 r5_r4_83 = r5_r4_66 + r9_r8_79
	dwArg00_260 = r9_r8_79
	dwArg40_261 = r5_r4_83
	branch r3_r2 == 8<32> l0000C098
l0000C01E:
	r1_r0_11 = CONVERT(Mem87[r12 + 9<32>:byte], byte, word32)
	word32 r9_r8_99 = r9_r8_79 + r1_r0_11
	word32 r5_r4_103 = r5_r4_83 + r9_r8_99
	dwArg00_260 = r9_r8_99
	dwArg40_261 = r5_r4_103
	branch r3_r2 == 9<32> l0000C098
l0000C034:
	r1_r0_11 = CONVERT(Mem107[r12 + 0xA<32>:byte], byte, word32)
	word32 r9_r8_119 = r9_r8_99 + r1_r0_11
	word32 r5_r4_123 = r5_r4_103 + r9_r8_119
	dwArg00_260 = r9_r8_119
	dwArg40_261 = r5_r4_123
	branch r3_r2 == 0xA<32> l0000C098
l0000C048:
	r1_r0_11 = CONVERT(Mem127[r12 + 0xB<32>:byte], byte, word32)
	word32 r9_r8_139 = r9_r8_119 + r1_r0_11
	word32 r5_r4_143 = r5_r4_123 + r9_r8_139
	dwArg00_260 = r9_r8_139
	dwArg40_261 = r5_r4_143
	branch r3_r2 == 0xB<32> l0000C098
l0000C05E:
	r1_r0_11 = CONVERT(Mem147[r12 + 0xC<32>:byte], byte, word32)
	word32 r9_r8_159 = r9_r8_139 + r1_r0_11
	word32 r5_r4_163 = r5_r4_143 + r9_r8_159
	dwArg00_260 = r9_r8_159
	dwArg40_261 = r5_r4_163
	branch r3_r2 == 0xC<32> l0000C098
l0000C072:
	r1_r0_11 = CONVERT(Mem167[r12 + 0xD<32>:byte], byte, word32)
	word32 r9_r8_179 = r9_r8_159 + r1_r0_11
	word32 r5_r4_183 = r5_r4_163 + r9_r8_179
	dwArg00_260 = r9_r8_179
	dwArg40_261 = r5_r4_183
	branch r3_r2 == 0xD<32> l0000C098
l0000C086:
	r1_r0_11 = CONVERT(Mem187[r12 + 0xE<32>:byte], byte, word32)
	word32 r9_r8_199 = r9_r8_179 + r1_r0_11
	dwArg00_260 = r9_r8_199
	dwArg40_261 = r5_r4_183 + r9_r8_199
l0000C098:
	word16 r0_217 = SLICE(r1_r0_11, word16, 0)
	word16 r1_216 = SLICE(r1_r0_11, word16, 16)
	word32 r5_r4_297
	word16 r6_298
	word16 r9_299
	fn0000D4EC(dwArg00_260, 0xFFF1<32>, r0_217, r1_216, out r5_r4_297, out r6_298, out r9_299)
	word32 r5_r4_301
	word16 r6_302
	word16 r9_303
	fn0000D4EC(dwArg40_261, 0xFFF1<32>, r0_217, r1_216, out r5_r4_301, out r6_302, out r9_303)
	return
fn0000BFCE_exit:


word16 fn0000C004(word32 r1_r0, word32 r11_r10, word32 r12, word32 r13, word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg64, word32 dwArg68, word32 dwArg0102, word16 wArg0210, word16 wArg0214, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C224
//      fn0000C3AC
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0102:[0..31] Stack +0210:[0..15] Stack +0214:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000C004_entry:
l0000C004:
l0000C004_thunk_fn0000C686:
	word16 r1_18
	word16 r10_19
	word16 r11_20
	word32 r12_21
	word32 r13_22
	word16 r2_23
	word16 r3_24
	word16 r4_25
	word16 r5_26
	word16 r6_27
	word16 r8_29
	word16 r9_30
	word16 r0_17 = fn0000C686(r1_r0 + 0x56721408<32>, r11_r10, r12, r13, ra, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_18, out r2_23, out r3_24, out r4_25, out r5_26, out r6_27, out r8_29, out r9_30, out r10_19, out r11_20, out r12_21, out r13_22)
	r1Out = r1_18
	r2Out = r2_23
	r3Out = r3_24
	r4Out = r4_25
	r5Out = r5_26
	r6Out = r6_27
	r8Out = r8_29
	r9Out = r9_30
	r10Out = r10_19
	r11Out = r11_20
	r12Out = r12_21
	r13Out = r13_22
	return r0_17
fn0000C004_exit:


word32 fn0000C0EE(word32 dwArg10008, ptr32 & r3_r2Out, ptr32 & r9_r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000033F8
//      fn000046AC
// MayUse:  Stack +10008:[0..31]
// LiveOut: r1:r0 r3:r2 r9:r8
// Trashed: CFLNZ r0 r1 r13 r2 r3 r4 r5 r6 r8 r9
// Preserved: r7 ra sp
fn0000C0EE_entry:
l0000C0EE:
	word16 r1_15
	word16 r2_17
	word16 r3_18
	word16 r8_21
	word16 r9_22
	word16 r0_14 = fn0000BAE0(dwArg10008, out r1_15, out r2_17, out r3_18, out r8_21, out r9_22)
	r3_r2Out = <invalid>
	r9_r8Out = <invalid>
	return SEQ(r1_15, r0_14)
fn0000C0EE_exit:


void fn0000C1A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF7C
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000C1A2_entry:
l0000C1A2_thunk_fn0000BF5E:
	fn0000BF5E()
	return
fn0000C1A2_exit:


void fn0000C1BA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BF5E
// MayUse: 
// LiveOut:
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r8
// Preserved: sp
fn0000C1BA_entry:
l0000C1BA_thunk_fn0000BF5E:
	fn0000BF5E()
	return
fn0000C1BA_exit:


word16 fn0000C1D6(word32 r11_r10, word32 r3_r2, word32 r12, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BF00
//      fn0000BF56
//      fn0000BF58
// MayUse:  r12:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r13 r2 r3
// Trashed: CFLNZ r0 r1 r13 r2 r3 r8 sp
// Preserved:
fn0000C1D6_entry:
	word32 dwArg02
	word16 r10 = SLICE(r11_r10, word16, 0)
l0000C1D6:
	word32 r3_r2_122 = r3_r2 + r11_r10
	branch r12 == 0<32> l0000C218
l0000C218:
l0000C1DC:
	branch r12 >=u 0xFFF1<32> l0000C1F0
l0000C1E8:
l0000C1F0:
	branch r3_r2_122 >=u 0x1FFE1<32> l0000C200
l0000C1F8:
	r3_r2_122 = SEQ(SLICE(r11_r10 + 0xFFFF000F<32>, word16, 16), r10 + 0xF<16>) (alias)
l0000C200:
	word16 r2_48 = SLICE(r3_r2_122, word16, 0)
	branch r3_r2_122 >=u 0xFFF0<32> l0000C20E
l0000C208:
	r3_r2_122 = SEQ(SLICE(r3_r2_122 + 0xFFFF000F<32>, word16, 16), r2_48 + 0xF<16>) (alias)
l0000C20E:
	r3Out = r3_r2_122
	r13Out = dwArg02
	return r3_r2_122 << 0x10<16>
fn0000C1D6_exit:


word16 fn0000C224(word32 r1_r0, word32 r11_r10, word32 r5_r4, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word32 dwArg06, word32 dwArg0A, word16 wArg0E, word32 dwArg10, word16 wArg14, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg46, word32 dwArg4A, word32 dwArg5E, word32 dwArg62, word32 dwArgFC, word16 wArg020A, word16 wArg020E, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CAF8
// MayUse:  r13:[0..31] r7:[0..15] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31] Stack +000E:[0..15] Stack +0010:[0..31] Stack +0014:[0..15] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0046:[0..31] Stack +004A:[0..31] Stack +005E:[0..31] Stack +0062:[0..31] Stack +00FC:[0..31] Stack +020A:[0..15] Stack +020E:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn0000C224_entry:
	word16 r6
	word16 r8
	word16 r9
	word16 r1 = SLICE(r1_r0, word16, 16)
	word16 r0 = SLICE(r1_r0, word16, 0)
	word16 r5 = SLICE(r13, word16, 16)
	word16 r4 = SLICE(r13, word16, 0)
	word16 r11 = SLICE(r11_r10, word16, 16)
	word16 r10 = SLICE(r11_r10, word16, 0)
	word16 wArg10_484 = SLICE(dwArg10, word16, 0)
	word16 wArg12_489 = SLICE(dwArg10, word16, 16)
l0000C224:
	word32 r12_12 = dwArg10
	word16 r2_554 = r0
	word16 r3_557 = r1
	word32 r1_r0_18 = ~r1_r0
	word32 dwLoc02_471 = SEQ(wArg00, SLICE(r13, word16, 16))
	word32 dwArg0E_485 = SEQ(wArg10_484, wArg0E)
	word32 dwArg12_490 = SEQ(wArg14, wArg12_489)
	word32 dwLoc06_509 = SEQ(SLICE(r13, word16, 0), r7)
	branch dwArg10 == 0<32> l0000C27E
l0000C23C:
	branch (r13 & 3<32>) == 0<32> l0000C288
l0000C288:
l0000C246:
	ra = 0xFC78<32>
l0000C258:
	word32 r3_r2_66 = Mem8[(((CONVERT(Mem8[r13:byte], byte, word32) ^ r1_r0_18) & 0xFF<32>) << 2<8>) + 0xFC78<32>:word32]
	r3_557 = SLICE(r3_r2_66, word16, 16) (alias)
	r2_554 = SLICE(r3_r2_66, word16, 0) (alias)
	r1_r0_18 = r1_r0_18 >>u 0x18<8> ^ r3_r2_66
	r12_12 = r12_12 + 0xFFFFFFFF<32>
	branch r12_12 != 0<32> l0000C24C
l0000C24C:
	branch (r13 & 3<32>) == 0<32> l0000C28A
l0000C28A:
	branch r12_12 >=u 0x1F<32> l0000C82A
l0000C28E_thunk_fn0000C686:
	word16 r1_113
	word16 r10_114
	word16 r11_115
	word32 r12_116
	word32 r13_117
	word16 r2_118
	word16 r3_119
	word16 r4_120
	word16 r5_121
	word16 r6_122
	word16 r8_124
	word16 r9_125
	word16 r0_112 = fn0000C686(r1_r0_18, r11_r10, r12_12, r13, ra, dwLoc06_509, dwLoc02_471, dwArg02, dwArg06, dwArg0A, dwArg0E_485, dwArg12_490, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg46, dwArg4A, dwArg5E, dwArg62, dwArgFC, wArg020A, wArg020E, out r1_113, out r2_118, out r3_119, out r4_120, out r5_121, out r6_122, out r8_124, out r9_125, out r10_114, out r11_115, out r12_116, out r13_117)
	r1Out = r1_113
	r2Out = r2_118
	r3Out = r3_119
	r4Out = r4_120
	r5Out = r5_121
	r6Out = r6_122
	r8Out = r8_124
	r9Out = r9_125
	r10Out = r10_114
	r11Out = r11_115
	r12Out = r12_116
	r13Out = r13_117
	return r0_112
l0000C292:
	word32 r1_r0_223 = r13 >>u 0x18<8> & 0xFF<32>
	word32 r3_r2_240 = Mem8[r11_r10 + 4<32>:word32] ^ (Mem8[((r13 >>u 8<8>) << 2<8>) + 0xFC78<32>:word32] ^ Mem8[((Mem8[r11_r10:word32] & 0xFF<32>) + 0x300<32> << 2<8>) + 0xFC78<32>:word32]) ^ Mem8[(r1_r0_223 + 0x200<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r3_r2_321 = Mem8[((r3_r2_240 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r1_r0_408 = Mem8[((r3_r2_321 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r13_146 = r11_r10 + ((r12_12 + 0xFFE0<32> & 0xFFFFFFE0<32>) + 0x20<32>)
	word32 r5_r4_413 = Mem8[r11_r10 + 0xC<32>:word32] ^ (Mem8[((((Mem8[r11_r10 + 8<32>:word32] ^ (Mem8[((r3_r2_240 >>u 8<8>) << 2<8>) + 0xFC78<32>:word32] ^ Mem8[(((r1_r0_223 + 0x200<32> << 2<8>) + 0xFC78<32> & 0xFF<32>) + 0x300<32> << 2<8>) + 0xFC78<32>:word32])) ^ r3_r2_321) & 0xFF<32>) + 0x300<32> << 2<8>) + 0xFC78<32>:word32] ^ Mem8[((r3_r2_321 >>u 8<8>) << 2<8>) + 0xFC78<32>:word32]) ^ r1_r0_408
l0000C3A8_thunk_fn0000C3AC:
	word16 r1_421
	word16 r10_422
	word16 r11_423
	word32 r12_424
	word32 r13_425
	word16 r2_426
	word16 r3_427
	word16 r4_428
	word16 r5_429
	word16 r6_430
	word16 r8_432
	word16 r9_433
	word16 r0_420 = fn0000C3AC(r1_r0_408, r11_r10, r5_r4_413, r12_12, r13_146, 0xFC78<32>, dwLoc06_509, dwLoc02_471, dwArg02, dwArg06, dwArg0A, dwArg0E_485, dwArg12_490, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg46, dwArg4A, dwArg5E, dwArg62, dwArgFC, wArg020A, wArg020E, out r1_421, out r2_426, out r3_427, out r4_428, out r5_429, out r6_430, out r8_432, out r9_433, out r10_422, out r11_423, out r12_424, out r13_425)
	r1Out = r1_421
	r2Out = r2_426
	r3Out = r3_427
	r4Out = r4_428
	r5Out = r5_429
	r6Out = r6_430
	r8Out = r8_432
	r9Out = r9_433
	r10Out = r10_422
	r11Out = r11_423
	r12Out = r12_424
	r13Out = r13_425
	return r0_420
l0000C27E:
	word32 r1_r0_443 = ~r1_r0_18
	r1Out = SLICE(r1_r0_443, word16, 16)
	r2Out = r2_554
	r3Out = r3_557
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12_12
	r13Out = r13
	return SLICE(r1_r0_443, word16, 0)
fn0000C224_exit:


word16 fn0000C3AC(word32 r1_r0, word32 r11_r10, word32 r5_r4, word32 r12, word32 r13, word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg64, word32 dwArg68, word32 dwArg0102, word16 wArg0210, word16 wArg0214, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BAE0
//      fn0000C224
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0102:[0..31] Stack +0210:[0..15] Stack +0214:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000C3AC_entry:
l0000C3AC:
	word32 r1_r0_161 = Mem0[((r5_r4 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + ra:word32]
	word32 r3_r2_166 = Mem0[r11_r10 + 0x10<32>:word32] ^ (Mem0[((r1_r0 & 0xFF<32>) + 0x300<32> << 2<8>) + ra:word32] ^ Mem0[((r5_r4 >>u 8<8>) << 2<8>) + ra:word32]) ^ r1_r0_161
	word32 r5_r4_297 = ((Mem0[r11_r10 + 0x14<32>:word32] ^ (Mem0[((r1_r0_161 & 0xFF<32>) + 0x300<32> << 2<8>) + ra:word32] ^ Mem0[((r3_r2_166 >>u 8<8>) << 2<8>) + ra:word32]) ^ Mem0[((r3_r2_166 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + ra:word32]) >>u 8<8> << 2<8>) + ra
	word32 r9_r8_416 = ((r5_r4_297 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + ra
	word32 r5_r4_383 = (r5_r4_297 >>u 8<8> << 2<8>) + ra
	word32 r1_r0_419 = Mem0[r9_r8_416:word32]
	word32 r3_r2_495 = ((r5_r4_383 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + ra
	word32 r7_r6_446 = Mem0[((r1_r0_419 >>u 0x10<8> & 0xFF<32>) + 0x100<32> << 2<8>) + ra:word32]
	word32 r1_r0_508 = Mem0[((r1_r0_419 & 0xFF<32>) + 0x300<32> << 2<8>) + ra:word32] ^ Mem0[((r5_r4_383 >>u 8<8>) << 2<8>) + ra:word32] ^ Mem0[r3_r2_495:word32] ^ r7_r6_446
	branch r11_r10 + 0x20<32> != r13 l0000C552_thunk_fn0000C004
l0000C552_thunk_fn0000C004:
	word16 r1_521
	word16 r10_522
	word16 r11_523
	word32 r12_524
	word32 r13_525
	word16 r2_526
	word16 r3_527
	word16 r4_528
	word16 r5_529
	word16 r6_530
	word16 r8_532
	word16 r9_533
	word16 r0_520 = fn0000C004(r1_r0_508, r11_r10 + 0x20<32>, r12, r13, ra, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_521, out r2_526, out r3_527, out r4_528, out r5_529, out r6_530, out r8_532, out r9_533, out r10_522, out r11_523, out r12_524, out r13_525)
	r1Out = r1_521
	r2Out = r2_526
	r3Out = r3_527
	r4Out = r4_528
	r5Out = r5_529
	r6Out = r6_530
	r8Out = r8_532
	r9Out = r9_533
	r10Out = r10_522
	r11Out = r11_523
	r12Out = r12_524
	r13Out = r13_525
	return r0_520
l0000C552_thunk_fn0000C556:
	word16 r1_541
	word16 r10_542
	word16 r11_543
	word32 r12_544
	word32 r13_545
	word16 r2_546
	word16 r3_547
	word16 r4_548
	word16 r5_549
	word16 r6_550
	word16 r8_552
	word16 r9_553
	word16 r0_540 = fn0000C556(r1_r0_508, r11_r10 + 0x20<32>, r3_r2_495, r7_r6_446, r9_r8_416, r12, r13, ra, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_541, out r2_546, out r3_547, out r4_548, out r5_549, out r6_550, out r8_552, out r9_553, out r10_542, out r11_543, out r12_544, out r13_545)
	r1Out = r1_541
	r2Out = r2_546
	r3Out = r3_547
	r4Out = r4_548
	r5Out = r5_549
	r6Out = r6_550
	r8Out = r8_552
	r9Out = r9_553
	r10Out = r10_542
	r11Out = r11_543
	r12Out = r12_544
	r13Out = r13_545
	return r0_540
fn0000C3AC_exit:


word16 fn0000C556(word32 r1_r0, word32 r11_r10, word32 r3_r2, word32 r7_r6, word32 r9_r8, word32 r12, word32 r13, word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg64, word32 dwArg68, word32 dwArg0102, word16 wArg0210, word16 wArg0214, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C224
//      fn0000C3AC
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0102:[0..31] Stack +0210:[0..15] Stack +0214:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000C556_entry:
l0000C556:
	branch (r12 & 0x1F<32>) >=u 3<32> l0000CABA
l0000C55E_thunk_fn0000C976:
	word16 r1_25
	word16 r10_26
	word16 r11_27
	word32 r13_28
	word16 r2_29
	word16 r3_30
	word16 r4_31
	word16 r5_32
	word16 r6_33
	word16 r8_35
	word16 r9_36
	word16 r0_24 = fn0000C976(r1_r0, r11_r10, r3_r2, r7_r6, r9_r8, r12 & 0x1F<32>, ra, dwArg0102, out r1_25, out r2_29, out r3_30, out r4_31, out r5_32, out r6_33, out r8_35, out r9_36, out r10_26, out r11_27, out r13_28)
	r1Out = r1_25
	r2Out = r2_29
	r3Out = r3_30
	r4Out = r4_31
	r5Out = r5_32
	r6Out = r6_33
	r8Out = r8_35
	r9Out = r9_36
	r10Out = r10_26
	r11Out = r11_27
	r12Out = r12 & 0x1F<32>
	r13Out = r13_28
	return r0_24
l0000C562:
	word32 r3_r2_54 = Mem0[r13:word32] >>u 0x10<8> & 0xFF<32>
	word32 r3_r2_60 = r3_r2_54 + 0x100<32> << 2<8>
	word32 r7_r6_97 = Mem0[((r3_r2_60 + 0xFC78<32> & 0xFF<32>) + 0x300<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r9_r8_68 = Mem0[(r3_r2_54 + 0x100<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r1_r0_128 = Mem0[((r3_r2_60 + 0xFC78<32> >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + 0xFC78<32>:word32] ^ (Mem0[((r3_r2_60 + 0xFC78<32> >>u 8<8>) << 2<8>) + 0xFC78<32>:word32] ^ r7_r6_97) ^ r9_r8_68
	word32 ra_130 = (r12 & 0x1F<32>) + 0xFFFC<32>
	branch ra_130 >=u 3<32> l0000CA36
l0000CA36:
	branch ra_130 != 3<32> l0000C79C
l0000CA36_thunk_fn0000C686:
	word16 r1_138
	word16 r10_139
	word16 r11_140
	word32 r12_141
	word32 r13_142
	word16 r2_143
	word16 r3_144
	word16 r4_145
	word16 r5_146
	word16 r6_147
	word16 r8_149
	word16 r9_150
	word16 r0_137 = fn0000C686(r1_r0_128, 0xFC78<32>, r12 & 0x1F<32>, r13, ra_130, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_138, out r2_143, out r3_144, out r4_145, out r5_146, out r6_147, out r8_149, out r9_150, out r10_139, out r11_140, out r12_141, out r13_142)
	r1Out = r1_138
	r2Out = r2_143
	r3Out = r3_144
	r4Out = r4_145
	r5Out = r5_146
	r6Out = r6_147
	r8Out = r8_149
	r9Out = r9_150
	r10Out = r10_139
	r11Out = r11_140
	r12Out = r12_141
	r13Out = r13_142
	return r0_137
l0000CA3A:
	Mem157[r9_r8_68:word32] = r7_r6_97
	branch r13 != 0xFC7C<32> l0000C778
l0000CA42_thunk_fn0000C686:
	word16 r1_168
	word16 r10_169
	word16 r11_170
	word32 r12_171
	word32 r13_172
	word16 r2_173
	word16 r3_174
	word16 r4_175
	word16 r5_176
	word16 r6_177
	word16 r8_179
	word16 r9_180
	word16 r0_167 = fn0000C686(r1_r0_128, 0xFC7C<32>, r12 & 0x1F<32>, r13, ra_130, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_168, out r2_173, out r3_174, out r4_175, out r5_176, out r6_177, out r8_179, out r9_180, out r10_169, out r11_170, out r12_171, out r13_172)
	r1Out = r1_168
	r2Out = r2_173
	r3Out = r3_174
	r4Out = r4_175
	r5Out = r5_176
	r6Out = r6_177
	r8Out = r8_179
	r9Out = r9_180
	r10Out = r10_169
	r11Out = r11_170
	r12Out = r12_171
	r13Out = r13_172
	return r0_167
l0000CA46:
l0000CA46_thunk_fn0000C686:
	word16 r1_188
	word16 r10_189
	word16 r11_190
	word32 r12_191
	word32 r13_192
	word16 r2_193
	word16 r3_194
	word16 r4_195
	word16 r5_196
	word16 r6_197
	word16 r8_199
	word16 r9_200
	word16 r0_187 = fn0000C686(r1_r0_128, 0xFC7C<32>, r12 & 0x1F<32>, r13, ra_130, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_188, out r2_193, out r3_194, out r4_195, out r5_196, out r6_197, out r8_199, out r9_200, out r10_189, out r11_190, out r12_191, out r13_192)
	r1Out = r1_188
	r2Out = r2_193
	r3Out = r3_194
	r4Out = r4_195
	r5Out = r5_196
	r6Out = r6_197
	r8Out = r8_199
	r9Out = r9_200
	r10Out = r10_189
	r11Out = r11_190
	r12Out = r12_191
	r13Out = r13_192
	return r0_187
l0000C5C6:
	word32 r3_r2_215 = Mem0[r13 + 4<32>:word32] >>u 0x10<8> & 0xFF<32>
	word32 r3_r2_221 = r3_r2_215 + 0x100<32> << 2<8>
	word32 r7_r6_256 = Mem0[((r3_r2_221 + 0xFC78<32> & 0xFF<32>) + 0x300<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r9_r8_227 = Mem0[(r3_r2_215 + 0x100<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r1_r0_287 = Mem0[((r3_r2_221 + 0xFC78<32> >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + 0xFC78<32>:word32] ^ (Mem0[((r3_r2_221 + 0xFC78<32> >>u 8<8>) << 2<8>) + 0xFC78<32>:word32] ^ r7_r6_256) ^ r9_r8_227
	word32 r3_r2_291 = (r12 & 0x1F<32>) + 0xFFF8<32>
	branch r3_r2_291 >=u 3<32> l0000C9D6
l0000C622_thunk_fn0000C976:
	word16 r1_300
	word16 r10_301
	word16 r11_302
	word32 r13_303
	word16 r2_304
	word16 r3_305
	word16 r4_306
	word16 r5_307
	word16 r6_308
	word16 r8_310
	word16 r9_311
	word16 r0_299 = fn0000C976(r1_r0_287, 0xFC78<32>, r3_r2_291, r7_r6_256, r9_r8_227, r12 & 0x1F<32>, ra_130, dwArg0102, out r1_300, out r2_304, out r3_305, out r4_306, out r5_307, out r6_308, out r8_310, out r9_311, out r10_301, out r11_302, out r13_303)
	r1Out = r1_300
	r2Out = r2_304
	r3Out = r3_305
	r4Out = r4_306
	r5Out = r5_307
	r6Out = r6_308
	r8Out = r8_310
	r9Out = r9_311
	r10Out = r10_301
	r11Out = r11_302
	r12Out = r12 & 0x1F<32>
	r13Out = r13_303
	return r0_299
l0000C626:
	word32 r3_r2_326 = Mem0[r13 + 8<32>:word32] >>u 0x10<8> & 0xFF<32>
	word32 r3_r2_332 = r3_r2_326 + 0x100<32> << 2<8>
	word32 r7_r6_367 = Mem0[((r3_r2_332 + 0xFC78<32> & 0xFF<32>) + 0x300<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r9_r8_338 = Mem0[(r3_r2_326 + 0x100<32> << 2<8>) + 0xFC78<32>:word32]
	word32 r1_r0_394 = Mem0[((r3_r2_332 + 0xFC78<32> >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + 0xFC78<32>:word32] ^ (Mem0[((r3_r2_332 + 0xFC78<32> >>u 8<8>) << 2<8>) + 0xFC78<32>:word32] ^ r7_r6_367)
l0000C672_thunk_fn0000C674:
	word16 r1_400
	word16 r10_401
	word16 r11_402
	word32 r13_403
	word16 r2_404
	word16 r3_405
	word16 r4_406
	word16 r5_407
	word16 r6_408
	word16 r8_410
	word16 r9_411
	word32 r12_413
	word16 r0_399 = fn0000C674(r1_r0_394, 0xFC78<32>, r7_r6_367, r9_r8_338, r12 & 0x1F<32>, r13, ra_130, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_400, out r2_404, out r3_405, out r4_406, out r5_407, out r6_408, out r8_410, out r9_411, out r10_401, out r11_402, out r12_413, out r13_403)
	r1Out = r1_400
	r2Out = r2_404
	r3Out = r3_405
	r4Out = r4_406
	r5Out = r5_407
	r6Out = r6_408
	r8Out = r8_410
	r9Out = r9_411
	r10Out = r10_401
	r11Out = r11_402
	r12Out = r12_413
	r13Out = r13_403
	return r0_399
fn0000C556_exit:


word16 fn0000C674(word32 r1_r0, word32 r11_r10, word32 r7_r6, word32 r9_r8, word32 r12, word32 r13, word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg64, word32 dwArg68, word32 dwArg0102, word16 wArg0210, word16 wArg0214, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BAE0
//      fn0000C556
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0102:[0..31] Stack +0210:[0..15] Stack +0214:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000C674_entry:
l0000C674:
	word32 r1_r0_81 = r1_r0 ^ r9_r8
	branch r12 >=u 0xFFFF000F<32> l0000C682_thunk_fn0000C976
l0000C682_thunk_fn0000C976:
	word16 r1_103
	word16 r10_104
	word16 r11_105
	word32 r13_106
	word16 r2_107
	word16 r3_108
	word16 r4_109
	word16 r5_110
	word16 r6_111
	word16 r8_113
	word16 r9_114
	word16 r0_102 = fn0000C976(r1_r0_81, r11_r10, r12 + 0xFFF4<32>, r7_r6, r9_r8, r12, ra, dwArg0102, out r1_103, out r2_107, out r3_108, out r4_109, out r5_110, out r6_111, out r8_113, out r9_114, out r10_104, out r11_105, out r13_106)
	r1Out = r1_103
	r2Out = r2_107
	r3Out = r3_108
	r4Out = r4_109
	r5Out = r5_110
	r6Out = r6_111
	r8Out = r8_113
	r9Out = r9_114
	r10Out = r10_104
	r11Out = r11_105
	r12Out = r12
	r13Out = r13_106
	return r0_102
l0000C682_thunk_fn0000C686:
	word16 r1_124
	word16 r10_125
	word16 r11_126
	word32 r12_127
	word32 r13_128
	word16 r2_129
	word16 r3_130
	word16 r4_131
	word16 r5_132
	word16 r6_133
	word16 r8_135
	word16 r9_136
	word16 r0_123 = fn0000C686(r1_r0_81, r11_r10, r12, r13, ra, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_124, out r2_129, out r3_130, out r4_131, out r5_132, out r6_133, out r8_135, out r9_136, out r10_125, out r11_126, out r12_127, out r13_128)
	r1Out = r1_124
	r2Out = r2_129
	r3Out = r3_130
	r4Out = r4_131
	r5Out = r5_132
	r6Out = r6_133
	r8Out = r8_135
	r9Out = r9_136
	r10Out = r10_125
	r11Out = r11_126
	r12Out = r12_127
	r13Out = r13_128
	return r0_123
fn0000C674_exit:


word16 fn0000C686(word32 r1_r0, word32 r11_r10, word32 r12, word32 r13, word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg64, word32 dwArg68, word32 dwArg0102, word16 wArg0210, word16 wArg0214, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C224
//      fn0000C674
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0102:[0..31] Stack +0210:[0..15] Stack +0214:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000C686_entry:
l0000C686:
l0000C68C_thunk_fn0000C68E:
	word16 r1_21
	word16 r10_22
	word16 r11_23
	word32 r12_24
	word32 r13_25
	word16 r2_26
	word16 r3_27
	word16 r4_28
	word16 r5_29
	word16 r6_30
	word16 r8_32
	word16 r9_33
	word16 r0_20 = fn0000C68E(r1_r0, r11_r10, r12, r13, ra, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, dwArg0102, wArg0210, wArg0214, out r1_21, out r2_26, out r3_27, out r4_28, out r5_29, out r6_30, out r8_32, out r9_33, out r10_22, out r11_23, out r12_24, out r13_25)
	r1Out = r1_21
	r2Out = r2_26
	r3Out = r3_27
	r4Out = r4_28
	r5Out = r5_29
	r6Out = r6_30
	r8Out = r8_32
	r9Out = r9_33
	r10Out = r10_22
	r11Out = r11_23
	r12Out = r12_24
	r13Out = r13_25
	return r0_20
fn0000C686_exit:


word16 fn0000C68E(word32 r1_r0, word32 r11_r10, word32 r12, word32 r13, word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg64, word32 dwArg68, word32 dwArg0102, word16 wArg0210, word16 wArg0214, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BAE0
//      fn0000C686
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0102:[0..31] Stack +0210:[0..15] Stack +0214:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000C68E_entry:
l0000C68E:
	word32 r1_r0_86 = ((r1_r0 >>u 0x10<8> & 0xFF<32>) + 0x100<32> << 2<8>) + r11_r10
	word32 r1_r0_118 = Mem0[(r1_r0_86 >>u 8<8> << 2<8>) + r11_r10:word32]
	word32 r1_r0_154 = Mem0[((r1_r0_118 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + r11_r10:word32] ^ (Mem0[((r1_r0_86 & 0xFF<32>) + 0x300<32> << 2<8>) + r11_r10:word32] ^ r1_r0_118) ^ Mem0[r1_r0_86:word32]
	branch r12 >=u 0xFFFF0013<32> l0000C6E4_thunk_fn0000C914
l0000C6E4_thunk_fn0000C914:
	word16 r1_170
	word16 r10_171
	word16 r11_172
	word32 r12_173
	word32 r13_174
	word16 r2_175
	word16 r3_176
	word16 r4_177
	word16 r5_178
	word16 r6_179
	word16 r8_181
	word16 r9_182
	word16 r0_169 = fn0000C914(r11_r10, r12 + 0xFFF0<32>, r1_r0_118, r12, ra, dwArg0102, wArg0210, wArg0214, out r1_170, out r2_175, out r3_176, out r4_177, out r5_178, out r6_179, out r8_181, out r9_182, out r10_171, out r11_172, out r12_173, out r13_174)
	r1Out = r1_170
	r2Out = r2_175
	r3Out = r3_176
	r4Out = r4_177
	r5Out = r5_178
	r6Out = r6_179
	r8Out = r8_181
	r9Out = r9_182
	r10Out = r10_171
	r11Out = r11_172
	r12Out = r12_173
	r13Out = r13_174
	return r0_169
l0000C6E4_thunk_fn0000C6E8:
	word16 r1_194
	word32 r12_195
	word32 r13_196
	word16 r2_197
	word16 r3_198
	word16 r4_199
	word16 r5_200
	word16 r6_201
	word16 r8_203
	word16 r9_204
	word16 r10_207
	word16 r11_208
	word16 r0_193 = fn0000C6E8(r1_r0_154, r11_r10, r12, r13, ra, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg64, dwArg68, out r1_194, out r2_197, out r3_198, out r4_199, out r5_200, out r6_201, out r8_203, out r9_204, out r10_207, out r11_208, out r12_195, out r13_196)
	r1Out = r1_194
	r2Out = r2_197
	r3Out = r3_198
	r4Out = r4_199
	r5Out = r5_200
	r6Out = r6_201
	r8Out = r8_203
	r9Out = r9_204
	r10Out = r10_207
	r11Out = r11_208
	r12Out = r12_195
	r13Out = r13_196
	return r0_193
fn0000C68E_exit:


word16 fn0000C6E8(word32 r1_r0, word32 r11_r10, word32 r12, word32 r13, word32 ra, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg64, word32 dwArg68, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C686
//      fn0000C68E
// MayUse:  r12:[0..31] r13:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0064:[0..31] Stack +0068:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra sp
// Preserved:
fn0000C6E8_entry:
	word16 wArg04_535 = SLICE(dwArg04, word16, 0)
	word16 wArg02_534 = SLICE(dwArg00, word16, 16)
l0000C6E8:
	word32 r1_r0_30 = ((r1_r0 >>u 0x10<8> & 0xFF<32>) + 0x100<32> << 2<8>) + r11_r10
	word32 r5_r4_157 = ((r1_r0_30 & 0xFF<32>) + 0x300<32> << 2<8>) + r11_r10
	word32 r1_r0_160 = Mem0[(r1_r0_30 >>u 8<8> << 2<8>) + r11_r10:word32]
	word32 r9_r8_131 = Mem0[r1_r0_30:word32]
	word32 r1_r0_197 = Mem0[((r1_r0_160 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + r11_r10:word32] ^ (Mem0[r5_r4_157:word32] ^ r1_r0_160) ^ r9_r8_131
	word16 r3_103 = SLICE(r12 + 0xFFEC<32>, word16, 16)
	branch r12 >=u 0xFFFF0017<32> l0000C7FC
l0000C748:
	word32 r1_r0_128 = ((r1_r0_197 >>u 0x10<8> & 0xFF<32>) + 0x100<32> << 2<8>) + r11_r10
	r9_r8_131 = Mem0[r1_r0_128:word32]
	word32 r1_r0_140 = (r1_r0_128 >>u 8<8> << 2<8>) + r11_r10
	word32 r5_r4_149 = (r1_r0_128 & 0xFF<32>) + 0x300<32>
l0000C778:
	r5_r4_157 = (r5_r4_149 << 2<8>) + r11_r10
	r1_r0_160 = Mem0[r1_r0_140:word32]
	r1_r0_197 = Mem0[((r1_r0_160 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>) + r11_r10:word32] ^ (Mem0[r5_r4_157:word32] ^ r1_r0_160) ^ r9_r8_131
l0000C79C:
	r3_103 = SLICE(r12 + 0xFFE8<32>, word16, 16) (alias)
	branch r12 >=u 0xFFFF001B<32> l0000C7FC
l0000C7A8:
	word32 r3_r2_207 = Mem0[r13 + 0x18<32>:word32]
	word32 r3_r2_227 = ((r3_r2_207 >>u 0x10<8> & 0xFF<32>) + 0x100<32> << 2<8>) + r11_r10
	r9_r8_131 = Mem0[r3_r2_227:word32]
	r5_r4_157 = ((r3_r2_207 & 0xFF<32>) + 0x300<32> << 2<8>) + r11_r10
l0000C7D4:
	r1_r0_160 = Mem0[r5_r4_157:word32]
	word32 r3_r2_267 = Mem0[(r3_r2_227 >>u 8<8> << 2<8>) + r11_r10:word32] ^ r1_r0_160
	r11_r10 = r11_r10 + ((r3_r2_227 >>u 0x18<8> & 0xFF<32>) + 0x200<32> << 2<8>)
	r3_103 = SLICE(r3_r2_267, word16, 16) (alias)
	r1_r0_197 = Mem0[r11_r10:word32] ^ r3_r2_267 ^ r9_r8_131
l0000C7FC:
	word32 ra_301 = (ra & 0xFFFFFFFC<32>) + 4<32>
	word32 r13_303 = r13 + ra_301
	branch (r12 & 3<32>) == 0<32> l0000BCF0
l0000C80E_thunk_fn0000BCB8:
	word16 r1_329
	word32 r12_330
	word32 r13_331
	word16 r2_332
	word16 r3_333
	word16 r4_334
	word16 r5_335
	word16 r8_336
	word16 r9_337
	word16 r0_328 = fn0000BCB8(r11_r10, r5_r4_157, r1_r0_160, r9_r8_131, r3_103, r12 & 3<32>, r13_303, ra_301, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg38, dwArg40, dwArg48, dwArg50, dwArg68, out r1_329, out r2_332, out r3_333, out r4_334, out r5_335, out r8_336, out r9_337, out r12_330, out r13_331)
	r1Out = r1_329
	r2Out = r2_332
	r3Out = r3_333
	r4Out = r4_334
	r5Out = r5_335
	r6Out = <invalid>
	r8Out = r8_336
	r9Out = r9_337
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = r12_330
	r13Out = r13_331
	return r0_328
l0000C812:
	word32 r3_r2_359 = CONVERT(Mem0[r13_303:byte], byte, word32) ^ r1_r0_197
	word16 r3_371 = SLICE(((r3_r2_359 & 0xFF<32>) << 2<8>) + 0xFC78<32>, word16, 16)
l0000C82A:
	word32 r9_r8_374 = Mem0[((r3_r2_359 & 0xFF<32>) << 2<8>) + 0xFC78<32>:word32]
	word32 r1_r0_381 = r1_r0_197 >>u 0x18<8> ^ r9_r8_374
	branch (r12 & 3<32>) == 1<32> l0000BCCA
l0000BCCA:
l0000BCD0:
l0000BCD0_thunk_fn0000BCB8:
	word16 r1_395
	word32 r12_396
	word32 r13_397
	word16 r2_398
	word16 r3_399
	word16 r4_400
	word16 r5_401
	word16 r8_402
	word16 r9_403
	word16 r0_394 = fn0000BCB8(r11_r10, 0xFC78<32>, r1_r0_160, r9_r8_374, r3_371, r12 & 3<32>, r13_303, ra_301, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg34, dwArg3C, dwArg44, dwArg4C, dwArg64, out r1_395, out r2_398, out r3_399, out r4_400, out r5_401, out r8_402, out r9_403, out r12_396, out r13_397)
	r1Out = r1_395
	r2Out = r2_398
	r3Out = r3_399
	r4Out = r4_400
	r5Out = r5_401
	r6Out = <invalid>
	r8Out = r8_402
	r9Out = r9_403
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = r12_396
	r13Out = r13_397
	return r0_394
l0000C838:
	word32 r3_r2_418 = CONVERT(Mem0[r13_303 + 1<32>:byte], byte, word32) ^ r1_r0_381
	word32 r9_r8_431 = Mem0[((r3_r2_418 & 0xFF<32>) << 2<8>) + 0xFC78<32>:word32]
	word16 r3_428 = SLICE(((r3_r2_418 & 0xFF<32>) << 2<8>) + 0xFC78<32>, word16, 16)
	word16 r9_435 = SLICE(r9_r8_431, word16, 16)
	word16 r8_436 = SLICE(r9_r8_431, word16, 0)
	word32 r1_r0_437 = r1_r0_381 >>u 0x18<8> ^ r9_r8_431
	word32 dwArg02_536 = SEQ(wArg04_535, wArg02_534)
	branch (r12 & 3<32>) == 2<32> l0000BCA8
l0000BCA8:
l0000BCA8_thunk_fn0000BCAC:
	word16 r1_446
	word32 r12_447
	word32 r13_448
	word16 r2_449
	word16 r3_450
	word16 r4_451
	word16 r5_452
	word16 r8_453
	word16 r9_454
	word16 r0_445 = fn0000BCAC(dwArg40, r11_r10, 0xFC78<32>, r1_r0_160, r9_r8_431, r3_428, r12 & 3<32>, r13_303, ra_301, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg38, dwArg48, dwArg50, dwArg68, out r1_446, out r2_449, out r3_450, out r4_451, out r5_452, out r8_453, out r9_454, out r12_447, out r13_448)
	r1Out = r1_446
	r2Out = r2_449
	r3Out = r3_450
	r4Out = r4_451
	r5Out = r5_452
	r6Out = <invalid>
	r8Out = r8_453
	r9Out = r9_454
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = r12_447
	r13Out = r13_448
	return r0_445
l0000C85A:
	word32 r3_r2_471 = CONVERT(Mem0[r13_303 + 2<32>:byte], byte, word32) ^ r1_r0_437
	word32 r3_r2_484 = Mem0[((r3_r2_471 & 0xFF<32>) << 2<8>) + 0xFC78<32>:word32]
	word32 r1_r0_493 = ~(r1_r0_437 >>u 0x18<8> ^ r3_r2_484)
	r1Out = SLICE(r1_r0_493, word16, 16)
	r2Out = SLICE(r3_r2_484, word16, 0)
	r3Out = SLICE(r3_r2_484, word16, 16)
	word32 r3_r2_477 = (r3_r2_471 & 0xFF<32>) << 2<8>
	r4Out = SLICE(r3_r2_477, word16, 0) + 0xFC78<16>
	r5Out = SLICE(r3_r2_477 + 0xFC78<32>, word16, 16)
	r6Out = <invalid>
	r8Out = r8_436
	r9Out = r9_435
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = r12 & 3<32>
	r13Out = dwArg02_536
	return SLICE(r1_r0_493, word16, 0)
fn0000C6E8_exit:


word16 fn0000C914(word32 r11_r10, word32 r3_r2, word32 r7_r6, word32 r12, word32 ra, word32 dwArg0102, word16 wArg0210, word16 wArg0214, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C686
//      fn0000C68E
// MayUse:  r12:[0..31] ra:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31] Sequence r7:r6:[0..31] Stack +0102:[0..31] Stack +0210:[0..15] Stack +0214:[0..15]
// LiveOut: r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000C914_entry:
	ptr32 fp
l0000C914:
	word32 r11_r10_6 = r11_r10 + fp
	word32 r7_r6_141 = r7_r6
	word32 r3_r2_144 = r3_r2
	word32 r9_r8_155 = SEQ(wArg0214, wArg0210)
l0000C920:
	word16 r8_75 = SLICE(r9_r8_178, word16, 0)
	word32 r1_r0_160 = r7_r6_141
	branch r7_r6_141 == 0<32> l0000C946
l0000C928:
	word32 r1_r0_147 = r7_r6_141
	r7_r6_141 = 0<32> (alias)
l0000C92C:
	word16 r2_44 = SLICE(r3_r2_144, word16, 0)
	branch (r1_r0_177 & 1<32>) == 0<32> l0000C934_thunk_fn0000CB60
l0000C934_thunk_fn0000CB60:
	fn0000CB60(r12)
l0000C938:
	word16 r3_58 = SLICE(r3_r2_144 + 4<32>, word16, 16)
	r7_r6_141 = r7_r6_141 ^ Mem16[r3_r2_144:word32]
	r1_r0_147 = r1_r0_177 >>u 0x1F<8> (alias)
	r3_r2_144 = SEQ(r3_58, r2_44 + 4<16>) (alias)
	r3_r2_144 = SEQ(r3_58, r2_44 + 4<16>) (alias)
	r1_r0_160 = r1_r0_177 >>u 0x1F<8> (alias)
	r1_r0_177 = r1_r0_147
	branch r1_r0_177 >>u 0x1F<8> != 0<32> l0000C92C
l0000C946:
	Mem77[r9_r8_178:word32] = r7_r6_141
	r12 = r12 + 4<32>
	r9_r8_155 = SEQ(SLICE(r9_r8_178 + 4<32>, word16, 16), r8_75 + 4<16>) (alias)
	r9_r8_178 = r9_r8_155
	branch r11_r10_6 != r12 l0000C920
l0000C94E_thunk_fn0000C976:
	word16 r1_110
	word16 r10_111
	word16 r11_112
	word32 r13_113
	word16 r2_114
	word16 r3_115
	word16 r4_116
	word16 r5_117
	word16 r6_118
	word16 r8_120
	word16 r9_121
	word16 r0_109 = fn0000C976(r1_r0_160, r11_r10_6, r3_r2_144, r7_r6_141, r9_r8_178 + 4<32>, r12, ra, dwArg0102, out r1_110, out r2_114, out r3_115, out r4_116, out r5_117, out r6_118, out r8_120, out r9_121, out r10_111, out r11_112, out r13_113)
	r1Out = r1_110
	r2Out = r2_114
	r3Out = r3_115
	r4Out = r4_116
	r5Out = r5_117
	r6Out = r6_118
	r8Out = r8_120
	r9Out = r9_121
	r10Out = r10_111
	r11Out = r11_112
	r12Out = r12
	r13Out = r13_113
	return r0_109
fn0000C914_exit:


word16 fn0000C976(word32 r1_r0, word32 r11_r10, word32 r3_r2, word32 r7_r6, word32 r9_r8, word32 r12, word32 ra, word32 dwArg0102, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C224
//      fn0000C674
// MayUse:  r12:[0..31] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r3:r2:[0..31] Sequence r7:r6:[0..31] Sequence r9:r8:[0..31] Stack +0102:[0..31]
// LiveOut: r0 r1 r10 r11 r13 r2 r3 r4 r5 r6 r8 r9
// Trashed: CFLNZ r0 r1 r10 r11 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: r12 sp
fn0000C976_entry:
	ptr32 fp
	word16 r4
	word16 r5
	word32 dwLoc04
	word32 sp_2 = fp
	word32 r1_r0_565 = r1_r0
	word32 r3_r2_568 = r3_r2
	word32 r7_r6_380 = r7_r6
	word32 r11_r10_634 = r11_r10
	word32 r9_r8_612 = r9_r8
l0000C976:
	word32 r11_r10_609
	word32 r9_r8_580
	word16 r10_290
	word16 r11_287
	word16 r1_36
	word16 r2_8 = SLICE(r3_r2_568, word16, 0)
	word16 r3_11 = SLICE(r3_r2_568 + 4<32>, word16, 16)
	r7_r6_571 = r7_r6_380 (alias)
	word32 r11_r10_574 = r11_r10_634
	word32 r9_r8_577 = r9_r8_612
	word32 r1_r0_623 = r1_r0_565 >>u 0x1F<8>
	word32 r3_r2_619 = SEQ(r3_11, r2_8 + 4<16>)
	word32 r7_r6_571 = r7_r6_380
	r3_r2_619 = SEQ(r3_11, r2_8 + 4<16>) (alias)
	branch r1_r0_565 >>u 0x1F<8> != 0<32> l0000C966
l0000C97E:
	Mem24[r11_r10_574:word32] = r7_r6_571
	word16 r10_22 = SLICE(r11_r10_574, word16, 0)
	word32 r1_r0_35 = Mem24[sp_2 + 0x200<32>:word32]
	word16 r8_26 = SLICE(r9_r8_577, word16, 0)
	word16 r9_38 = SLICE(r9_r8_577 + 4<32>, word16, 16)
	r11_287 = SLICE(r11_r10_574 + 4<32>, word16, 16) (alias)
	r10_290 = r10_22 + 4<16> (alias)
	r1_36 = SLICE(r1_r0_35, word16, 16) (alias)
	r9_r8_580 = SEQ(r9_38, r8_26 + 4<16>) (alias)
	r9_r8_612 = SEQ(r9_38, r8_26 + 4<16>) (alias)
	r11_r10_609 = SEQ(r11_287, r10_22 + 4<16>) (alias)
	branch r1_r0_35 != r9_r8_577 + 4<32> l0000C95A
l0000C98C:
	word16 r6_413 = SLICE(r7_r6_571, word16, 0)
	word16 r8_107 = SLICE(r9_r8_580, word16, 0)
	word16 r9_104 = SLICE(r9_r8_580, word16, 16)
	word16 r0_44 = Mem43[sp_2 + 0x208<32>:word16]
	word16 r1_46 = r1_36 & 1<16>
	word32 r3_r2_59 = r3_r2_619
	branch r0_44 != 0<16> l0000CA64
l0000CA64:
	r3_r2_59 = r3_r2_619 (alias)
	branch ra == 0<32> l0000C996
l0000CA68:
	word32 r1_r0_648 = SEQ(r1_46, r0_44)
l0000CA6C:
	word16 r0_66 = SLICE(r1_r0_648, word16, 0)
	r3_r2_59 = ra & 1<32>
	branch r3_r2_59 == 0<32> l0000CA88
l0000CA88:
	ra = ra >>u 0x1F<8>
	r1_r0_648 = SEQ(SLICE(r1_r0_648 + 4<32>, word16, 16), r0_66 + 4<16>) (alias)
	branch ra != 0<32> l0000CA6C
l0000CA90:
	r4 = SLICE(ra, word16, 0) (alias)
	r5 = SLICE(ra, word16, 16) (alias)
l0000CA76:
	r3_r2_59 = Mem43[r1_r0_648:word32]
	ra = ra >>u 0x1F<8>
	r1_r0_648 = SEQ(SLICE(r1_r0_648 + 4<32>, word16, 16), r0_66 + 4<16>) (alias)
	branch ra != 0<32> l0000CA6C
l0000CA84:
	r4 = SLICE(ra, word16, 0) (alias)
	r5 = SLICE(ra, word16, 16) (alias)
l0000C996:
	word16 r1_96 = Mem43[sp_2 + 0x208<32>:word16]
	Mem98[sp_2 + 0x20C<32>:word16] = r1_96 >> 0xF<16>
	word16 r2_419 = SLICE(r3_r2_59, word16, 0)
	word16 r3_415 = SLICE(r3_r2_59, word16, 16)
	branch r1_96 >> 0xF<16> == 0<16> l0000C9F4
l0000C9A4:
	word32 r7_r6_180 = r7_r6_571
	word32 r3_r2_590 = r3_r2_59
	word32 r11_r10_605 = SEQ(Mem98[sp_2 + 0x214<32>:word16], Mem98[sp_2 + 0x210<32>:word16])
l0000C9AE:
	word16 r10_200 = SLICE(r11_r10_605, word16, 0)
	word16 r8_112 = SLICE(r9_r8_696, word16, 0)
	word16 r1_120 = SLICE(r7_r6_180, word16, 16)
	branch r7_r6_180 == 0<32> l0000C9D2
l0000C9B6:
	word32 r1_r0_594 = r7_r6_180
	r7_r6_180 = 0<32> (alias)
l0000C9BA:
	word16 r2_143 = SLICE(r3_r2_590, word16, 0)
	r5 = 0<16> (alias)
	r4 = SLICE(r1_r0_698, word16, 0) & 1<16> (alias)
	branch (r1_r0_698 & 1<32>) == 0<32> l0000CA1C
l0000CA1C:
	word16 r3_146 = SLICE(r3_r2_590 + 4<32>, word16, 16)
	r1_120 = SLICE(r1_r0_698 >>u 0x1F<8>, word16, 16) (alias)
	r1_r0_594 = r1_r0_698 >>u 0x1F<8> (alias)
	r3_r2_590 = SEQ(r3_146, r2_143 + 4<16>) (alias)
	r7_r6_180 = r7_r6_700 (alias)
	r1_r0_699 = r1_r0_594
	r7_r6_700 = r7_r6_180
	branch r1_r0_698 >>u 0x1F<8> != 0<32> l0000C9BA
l0000CA24:
	Mem159[r11_r10_605:word32] = r7_r6_700
	r9_104 = SLICE(r9_r8_696 + 4<32>, word16, 16) (alias)
	word16 r11_166 = SLICE(r11_r10_605 + 4<32>, word16, 16)
	r9_r8_580 = SEQ(r9_104, r8_112 + 4<16>) (alias)
	r7_r6_180 = r7_r6_700 (alias)
	r3_r2_590 = SEQ(r3_146, r2_143 + 4<16>) (alias)
	r11_r10_605 = SEQ(r11_166, r10_200 + 4<16>) (alias)
	r9_r8_696 = r9_r8_580
	branch r9_r8_696 + 4<32> != r12 l0000C9AE
l0000CA2E:
	r11_r10_609 = SEQ(r11_166, r10_200 + 4<16>) (alias)
	r3_r2_590 = SEQ(r3_146, r2_143 + 4<16>) (alias)
l0000C9C4:
	word32 r5_r4_176 = Mem114[r3_r2_590:word32]
	word16 r3_185 = SLICE(r3_r2_590 + 4<32>, word16, 16)
	r5 = SLICE(r5_r4_176, word16, 16) (alias)
	r4 = SLICE(r5_r4_176, word16, 0) (alias)
	r7_r6_180 = r7_r6_700 ^ r5_r4_176
	r1_120 = SLICE(r1_r0_698 >>u 0x1F<8>, word16, 16) (alias)
	r1_r0_594 = r1_r0_698 >>u 0x1F<8> (alias)
	r3_r2_590 = SEQ(r3_185, r2_143 + 4<16>) (alias)
	r3_r2_590 = SEQ(r3_185, r2_143 + 4<16>) (alias)
	r1_r0_698 = r1_r0_594
	branch r1_r0_698 >>u 0x1F<8> != 0<32> l0000C9BA
l0000C9D2:
	Mem202[r11_r10_605:word32] = r7_r6_180
	r9_104 = SLICE(r9_r8_696 + 4<32>, word16, 16) (alias)
l0000C9D6:
	word16 r11_212 = SLICE(r11_r10_605 + 4<32>, word16, 16)
	r9_r8_580 = SEQ(r9_104, r8_112 + 4<16>) (alias)
	r11_r10_605 = SEQ(r11_212, r10_200 + 4<16>) (alias)
	r11_r10_609 = SEQ(r11_212, r10_200 + 4<16>) (alias)
	r9_r8_697 = r9_r8_580
	branch r9_r8_696 + 4<32> != r12 l0000C9AE
l0000C9DC:
	r8_107 = r8_112 + 4<16>
	r6_413 = SLICE(r7_r6_180, word16, 0) (alias)
	r10_290 = SLICE(r11_r10_609, word16, 0) (alias)
	r11_287 = SLICE(r11_r10_609, word16, 16) (alias)
	word16 r0_224 = Mem223[sp_2 + 0x20C<32>:word16]
	word16 r1_227 = r1_120 & 1<16>
	word32 r3_r2_244 = r3_r2_590
	branch r0_224 != 0<16> l0000CA94
l0000CA94:
	r3_r2_244 = r3_r2_590 (alias)
	branch ra == 0<32> l0000C9E6
l0000CA98:
	sp_2 = SEQ(r1_227, r0_224)
	word32 r1_r0_641 = SEQ(r1_227, r0_224)
l0000CA9C:
	word16 r0_251 = SLICE(r1_r0_641, word16, 0)
	r3_r2_244 = ra & 1<32>
	branch r3_r2_244 == 0<32> l0000CAB8
l0000CAB8:
	ra = ra >>u 0x1F<8>
l0000CABA:
	r1_r0_641 = SEQ(SLICE(r1_r0_641 + 4<32>, word16, 16), r0_251 + 4<16>) (alias)
	branch ra != 0<32> l0000CA9C
l0000CAC0:
	r4 = SLICE(ra, word16, 0) (alias)
	r5 = SLICE(ra, word16, 16) (alias)
l0000CAA6:
	r3_r2_244 = Mem223[r1_r0_641:word32]
	ra = ra >>u 0x1F<8>
	r1_r0_641 = SEQ(SLICE(r1_r0_641 + 4<32>, word16, 16), r0_251 + 4<16>) (alias)
	branch ra != 0<32> l0000CA9C
l0000CAB4:
	r4 = SLICE(ra, word16, 0) (alias)
	r5 = SLICE(ra, word16, 16) (alias)
l0000C9E6:
	word16 r0_281 = Mem223[sp_2 + 0x208<32>:word16]
	Mem283[sp_2 + 0x208<32>:word16] = r0_281 >> 0xE<16>
	r2_419 = SLICE(r3_r2_244, word16, 0) (alias)
	r3_415 = SLICE(r3_r2_244, word16, 16) (alias)
	branch r0_281 >> 0xE<16> != 0<16> l0000C950
l0000C950:
	r9_r8_612 = SEQ(Mem283[sp_2 + 0x214<32>:word16], Mem283[sp_2 + 0x210<32>:word16]) (alias)
	r7_r6_571 = r7_r6_180 (alias)
	r3_r2_619 = r3_r2_244 (alias)
l0000C95A:
	r11_r10_574 = r11_r10_609 (alias)
	r9_r8_577 = r9_r8_612 (alias)
	branch r7_r6_571 == 0<32> l0000C97E
l0000C962:
	sp_2 = r3_r2_619
	r1_r0_623 = r7_r6_571 (alias)
	r7_r6_571 = 0<32> (alias)
	r11_r10_634 = r11_r10_609 (alias)
l0000C966:
	word16 r8_355 = SLICE(r9_r8_704, word16, 0)
	word16 r10_348 = SLICE(r11_r10_703, word16, 0)
	word16 r2_328 = SLICE(r3_r2_619, word16, 0)
	r5 = 0<16> (alias)
	r4 = SLICE(r1_r0_701, word16, 0) & 1<16> (alias)
	branch (r1_r0_701 & 1<32>) == 0<32> l0000CA04
l0000CA04:
	word16 r3_331 = SLICE(r3_r2_619 + 4<32>, word16, 16)
	r1_r0_623 = r1_r0_701 >>u 0x1F<8> (alias)
	r3_r2_619 = SEQ(r3_331, r2_328 + 4<16>) (alias)
	r7_r6_571 = r7_r6_702 (alias)
	r11_r10_634 = r11_r10_703 (alias)
	r9_r8_612 = r9_r8_704 (alias)
	r1_r0_701 = r1_r0_623
	r7_r6_702 = r7_r6_571
	r11_r10_703 = r11_r10_634
	r9_r8_704 = r9_r8_612
	branch r1_r0_701 >>u 0x1F<8> != 0<32> l0000C966
l0000CA0C:
	Mem352[r11_r10_703:word32] = r7_r6_702
	word32 r1_r0_366 = Mem352[sp_2 + 0x200<32>:word32]
	word16 r9_369 = SLICE(r9_r8_704 + 4<32>, word16, 16)
	r11_287 = SLICE(r11_r10_703 + 4<32>, word16, 16) (alias)
	r10_290 = r10_348 + 4<16> (alias)
	r1_36 = SLICE(r1_r0_366, word16, 16) (alias)
	r9_r8_612 = SEQ(r9_369, r8_355 + 4<16>) (alias)
	r7_r6_571 = r7_r6_702 (alias)
	r3_r2_619 = SEQ(r3_331, r2_328 + 4<16>) (alias)
	r11_r10_609 = SEQ(r11_287, r10_348 + 4<16>) (alias)
	branch r1_r0_366 != r9_r8_704 + 4<32> l0000C95A
l0000CA1A:
	r9_r8_580 = SEQ(r9_369, r8_355 + 4<16>) (alias)
	r3_r2_619 = SEQ(r3_331, r2_328 + 4<16>) (alias)
l0000C970:
	word32 r5_r4_376 = Mem374[r3_r2_619:word32]
	r5 = SLICE(r5_r4_376, word16, 16) (alias)
	r4 = SLICE(r5_r4_376, word16, 0) (alias)
	r7_r6_380 = r7_r6_702 ^ r5_r4_376
	r1_r0_565 = r1_r0_701 (alias)
	r3_r2_568 = r3_r2_619 (alias)
l0000C9F4:
	word32 r1_r0_388 = dwArg0102 ^ ra
	r1Out = SLICE(r1_r0_388, word16, 16)
	r2Out = r2_419
	r3Out = r3_415
	r4Out = r4
	r5Out = r5
	r6Out = r6_413
	r8Out = r8_107
	r9Out = r9_104
	r10Out = r10_290
	r11Out = r11_287
	r13Out = dwLoc04
	return SLICE(r1_r0_388, word16, 0)
fn0000C976_exit:


word32 fn0000CAF8(word32 r1_r0, word32 r11_r10, word32 r5_r4, word16 r6, word16 r7, word32 r13, word32 ra, word16 wArg00, word32 dwArg02, word16 wArg06, word32 dwArg08, word16 wArg0C, word32 dwArg26, word32 dwArg2A, word32 dwArg2E, word32 dwArg32, word32 dwArg36, word32 dwArg3A, word32 dwArg3E, word32 dwArg42, word32 dwArg56, word32 dwArg5A, word32 dwArgF4, word16 wArg0202, word16 wArg0206, ptr32 & r11_r10Out, ptr32 & r3_r2Out, ptr32 & r6_r5Out, ptr32 & r7_r6Out, ptr32 & r9_r8Out, ptr32 & r4Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & raOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003338
//      fn000046AC
//      fn00004CD4
// MayUse:  r13:[0..31] r6:[0..15] r7:[0..15] ra:[0..31] Sequence r1:r0:[0..31] Sequence r11:r10:[0..31] Sequence r5:r4:[0..31] Stack +0000:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +0026:[0..31] Stack +002A:[0..31] Stack +002E:[0..31] Stack +0032:[0..31] Stack +0036:[0..31] Stack +003A:[0..31] Stack +003E:[0..31] Stack +0042:[0..31] Stack +0056:[0..31] Stack +005A:[0..31] Stack +00F4:[0..31] Stack +0202:[0..15] Stack +0206:[0..15]
// LiveOut: r1:r0 r11:r10 r12 r13 r3:r2 r4 r6:r5 r7:r6 r9:r8 ra
// Trashed: CFLNZ r0 r1 r10 r11 r12 r13 r2 r3 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
fn0000CAF8_entry:
	word32 r12
	word16 r4 = SLICE(r5_r4, word16, 0)
l0000CAF8:
	word32 dwLoc06_71 = SEQ(SLICE(ra, word16, 0), r7)
	word32 dwLoc02_74 = SEQ(wArg00, SLICE(ra, word16, 16))
	branch r5_r4 == 0<32> l0000CB0E
l0000CB0E:
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r6_r5Out = <invalid>
	r7_r6Out = <invalid>
	r9_r8Out = <invalid>
	r4Out = r4
	r12Out = r12
	r13Out = r13
	raOut = <invalid>
	return r5_r4
l0000CB00:
	word32 r7_r6_21 = CONVERT(r6, word16, word32)
	word16 r1_35
	word32 r12_36
	word16 r2_37
	word16 r3_38
	word16 r10_40
	word16 r11_41
	word32 r13_42
	word16 r4_43
	word16 r5_44
	word16 r6_45
	word16 r8_47
	word16 r9_48
	word16 r0_34 = fn0000C224(r1_r0, r11_r10, r5_r4, SLICE(r7_r6_21, word16, 16), r13, ra, SLICE(r7_r6_21, word16, 0), dwLoc06_71, dwLoc02_74, dwArg02, wArg06, dwArg08, wArg0C, dwArg26, dwArg2A, dwArg2E, dwArg32, dwArg36, dwArg3A, dwArg3E, dwArg42, dwArg56, dwArg5A, dwArgF4, wArg0202, wArg0206, out r1_35, out r2_37, out r3_38, out r4_43, out r5_44, out r6_45, out r8_47, out r9_48, out r10_40, out r11_41, out r12_36, out r13_42)
	r11_r10Out = <invalid>
	r3_r2Out = <invalid>
	r6_r5Out = <invalid>
	r7_r6Out = <invalid>
	r9_r8Out = <invalid>
	r4Out = r4_43
	r12Out = r12_36
	r13Out = r13_42
	raOut = <invalid>
	return SEQ(r1_35, r0_34)
fn0000CAF8_exit:


void fn0000CB60(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C224
// MayUse:  r12:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000CB60_exit:
fn0000CB60_entry:
l0000CB60:
	branch Mem25[r12 + 0x58<32>:word16] <u 0xE<16> l0000CC20
l0000CC02:
l0000CC20:


word32 fn0000D358(word16 r2, word16 r3, word16 r4, word16 r5, ptr32 & r5_r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A416
// MayUse:  r2:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r1:r0 r5:r4
// Trashed: CF r0 r1 r4 r5
// Preserved: sp
fn0000D358_entry:
l0000D358:
	r5_r4Out = <invalid>
	word32 r1_r0_7 = r4 *s32 r2
	return r1_r0_7
fn0000D358_exit:


word16 fn0000D464(word16 r2, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004CD4
// MayUse:  r2:[0..15] r3:[0..15]
// LiveOut: r0
// Trashed: CFLNZ r0 r1 r3 r4
// Preserved: sp
fn0000D464_entry:
l0000D464:
	word16 r1_13 = 1<16>
	branch r2 <=u r3 l0000D488
l0000D46C:
	branch r3 > 0<16> l0000D488
l0000D470:
	r3 = r3 * 2<16>
	r1_13 = r1_13 * 2<16>
	branch CONVERT(r3 <u r2, bool, int16) == 0<16> l0000D49C
l0000D47C:
	branch CONVERT(r1_13 != 0<16>, bool, int16) == 0<16> l0000D49C
l0000D49C:
	branch r1_13 != 0<16> l0000D488
l0000D4A0:
	return r1_13
l0000D484:
	branch r3 < 0<16> l0000D470
l0000D488:
l0000D48A:
	branch r3 >u r2 l0000D492
l0000D48E:
	r3 = r3 - r2
l0000D492:
	r1_13 = r1_13 >>u 0xF<8>
	r3 = r3 >>u 0xF<8>
	branch r1_13 != 0<16> l0000D48A
l0000D49A:
	return 0<16>
fn0000D464_exit:


word32 fn0000D4EC(word32 r3_r2, word32 r5_r4, word16 r0, word16 r1, ptr32 & r5_r4Out, ptr32 & r6Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B29A
//      fn0000BAE0
//      fn0000BC42
//      fn0000BFBE
//      fn0000C224
// MayUse:  r0:[0..15] r1:[0..15] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut: r3:r2 r5:r4 r6 r9
// Trashed: LNZ r2 r3 r4 r5 r6 r9
// Preserved: ra sp
fn0000D4EC_entry:
l0000D4EC:
	word16 r3_16
	word16 r4_17
	word16 r5_18
	word16 r9_19
	word16 r2_15 = fn0000D4F8(r3_r2, r5_r4, r0, r1, 1<16>, out r3_16, out r4_17, out r5_18, out r9_19)
	r5_r4Out = <invalid>
	r6Out = 1<16>
	r9Out = r9_19
	return SEQ(r3_16, r2_15)
fn0000D4EC_exit:


word16 fn0000D4F8(word32 r3_r2, word32 r5_r4, word16 r0, word16 r1, word16 r6, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D4EC
// MayUse:  r0:[0..15] r1:[0..15] r6:[0..15] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut: r2 r3 r4 r5 r9
// Trashed: LNZ r2 r3 r4 r5 r9
// Preserved: CF r0 r8 ra sp
fn0000D4F8_entry:
	word32 ra
l0000D4F8:
	word16 r9_100
	word16 r5_141
	word16 r4_144
	word16 r2_189
	word32 r9_r8_222 = 1<32>
	branch r3_r2 <=u r5_r4 l0000D522
l0000D502:
	word32 r9_r8_211 = 1<32>
	r9_r8_222 = 1<32> (alias)
	branch r5_r4 > 0<32> l0000D522
l0000D506:
	r5_r4 = r5_r4 * 2<32>
	word32 r9_r8_30 = r9_r8_211 * 2<32>
	r5_141 = SLICE(r5_r4, word16, 16) (alias)
	r4_144 = SLICE(r5_r4, word16, 0) (alias)
	word16 r9_31 = SLICE(r9_r8_30, word16, 16)
	word16 r8_32 = SLICE(r9_r8_30, word16, 0)
	r0 = CONVERT(r5_r4 <u r3_r2, bool, int16)
	branch r0 == 0<16> l0000D544
l0000D512:
	r9_31 = r9_31 | r8_32
	r0 = CONVERT(r8_32 != 0<16>, bool, int16)
	branch r0 == 0<16> l0000D544
l0000D544:
	r9_r8_222 = SEQ(r9_31, r8_32) (alias)
	branch SEQ(r9_31, r8_32) != 0<32> l0000D522
l0000D548:
	r9_100 = SLICE(ra, word16, 16) (alias)
	r2_189 = r0 (alias)
l0000D51E:
	r9_r8_211 = SEQ(r9_31, r8_32) (alias)
	r9_r8_222 = SEQ(r9_31, r8_32) (alias)
	branch r5_r4 < 0<32> l0000D506
l0000D522:
	r2_189 = r0 (alias)
	word32 r9_r8_214 = r9_r8_222
	word32 r5_r4_219 = r5_r4
l0000D526:
	word32 r5_r4_217 = r5_r4_219
	branch r5_r4_219 >u SEQ(r1, r0) l0000D532
l0000D52A:
	r5_r4_217 = r5_r4_219 - SEQ(r1, r0)
l0000D532:
	r9_100 = SLICE(r9_r8_232 >>u 0x1F<8>, word16, 16) (alias)
	r5_141 = SLICE(r5_r4_217 >>u 0x1F<8>, word16, 16) (alias)
	r4_144 = SLICE(r5_r4_217 >>u 0x1F<8>, word16, 0) (alias)
	r9_r8_214 = r9_r8_232 >>u 0x1F<8> (alias)
	r5_r4_219 = r5_r4_217 >>u 0x1F<8> (alias)
	r9_r8_232 = r9_r8_214
	branch r9_r8_232 >>u 0x1F<8> != 0<32> l0000D526
l0000D53A:
	branch r6 != 0<16> l0000D540
l0000D53E:
l0000D540:
	r3Out = r1
	r4Out = r4_144
	r5Out = r5_141
	r9Out = r9_100
	return r2_189
fn0000D4F8_exit:


word16 fn0000D578(word32 r13, ptr32 & r3Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn03B0
// MayUse:  r13:[0..31]
// LiveOut: r1 r13 r3
// Trashed: CF r0 r1 r13 r2 r3 sp
// Preserved:
fn0000D578_entry:
l0000D578:
	word32 r3_r2_14 = Mem5[r13 + 0xC<32>:word32]
	Mem17[r13:word32] = r3_r2_14
	word32 r1_r0_18 = Mem17[r13 + 0x10<32>:word32]
	Mem21[r13 + 4<32>:word32] = r1_r0_18
	word32 r13_24 = Mem21[r13 + 8<32>:word32]
	r3Out = SLICE(r3_r2_14, word16, 16)
	r13Out = r13_24
	return SLICE(r1_r0_18, word16, 16)
fn0000D578_exit:


void fn0000D974(word16 r2, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn03B0
// MayUse:  r13:[0..31] r2:[0..15]
// LiveOut: sp
// Trashed: CF sp
// Preserved: r13
fn0000D974_entry:
l0000D974:
	Mem7[r13:word16] = r2
	return
fn0000D974_exit:


word32 fn0000D984(word32 r3_r2, word32 r5_r4, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B218
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut: r13
// Trashed: CF r13 sp
// Preserved:
fn0000D984_entry:
l0000D984:
	Mem11[r13:word32] = r3_r2
	Mem15[r13 + 4<32>:word32] = r5_r4
	return Mem15[r13 + 8<32>:word32]
fn0000D984_exit:


word32 fn0000D99C(word32 r3_r2, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000BEC
//      fn00001B74
//      fn00002D76
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r13
// Trashed: CF r13 sp
// Preserved:
fn0000D99C_entry:
l0000D99C:
	Mem11[r13:word32] = r3_r2
	return Mem11[r13 + 4<32>:word32]
fn0000D99C_exit:


word32 fn0000D9B0(word32 r3_r2, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000BEC
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r13
// Trashed: CF r13 sp
// Preserved:
fn0000D9B0_entry:
l0000D9B0:
	Mem11[r13:word32] = r3_r2
	return Mem11[r13 + 4<32>:word32]
fn0000D9B0_exit:


word16 fn0000DB24(word32 r3_r2, word32 r5_r4, word32 r13, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn000033F8
//      fn00003540
//      fn00004CD4
//      fn00009C04
//      fn0000A416
//      fn0000AF94
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut: r1 r13 sp
// Trashed: CF r0 r1 r13 sp
// Preserved:
fn0000DB24_entry:
l0000DB24:
	Mem15[r13:word32] = r3_r2
	Mem19[r13 + 4<32>:word32] = r5_r4
	word32 r1_r0_22 = Mem19[r13 + 0x10<32>:word32]
	Mem25[r13 + 8<32>:word32] = r1_r0_22
	r13Out = Mem25[r13 + 0xC<32>:word32]
	return SLICE(r1_r0_22, word16, 16)
fn0000DB24_exit:


word32 fn0000DB44(word32 r3_r2, word32 r6_r5, word16 r4, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030F2
//      fn000033F8
//      fn00004CD4
// MayUse:  r13:[0..31] r4:[0..15] Sequence r3:r2:[0..31] Sequence r6:r5:[0..31]
// LiveOut: r13 sp
// Trashed: CF r13 sp
// Preserved:
fn0000DB44_entry:
l0000DB44:
	Mem11[r13:word32] = r3_r2
	Mem13[r13 + 4<32>:word16] = r4
	Mem17[r13 + 8<32>:word32] = r6_r5
	return Mem17[r13 + 0xC<32>:word32]
fn0000DB44_exit:


word32 fn0000DB74(word32 r3_r2, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000BEC
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31]
// LiveOut: r13
// Trashed: CF r13 sp
// Preserved:
fn0000DB74_entry:
l0000DB74:
	Mem11[r13:word32] = r3_r2
	return Mem11[r13 + 4<32>:word32]
fn0000DB74_exit:


word32 fn0000DBF0(word32 r3_r2, word32 r5_r4, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000BEC
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut: r13
// Trashed: CF r13 sp
// Preserved:
fn0000DBF0_entry:
l0000DBF0:
	Mem11[r13:word32] = r3_r2
	Mem15[r13 + 4<32>:word32] = r5_r4
	return Mem15[r13 + 8<32>:word32]
fn0000DBF0_exit:


void fn0000DC28(word32 r3_r2, word32 r5_r4, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000BEC
// MayUse:  r13:[0..31] Sequence r3:r2:[0..31] Sequence r5:r4:[0..31]
// LiveOut:
// Trashed: CF r13 sp
// Preserved:
fn0000DC28_entry:
l0000DC28:
	Mem11[r13:word32] = r3_r2
	Mem15[r13 + 4<32>:word32] = r5_r4
	return
fn0000DC28_exit:


word32 fn0000DD90(word32 r4_r3, word32 r6_r5, word16 r2, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002D76
// MayUse:  r13:[0..31] r2:[0..15] Sequence r4:r3:[0..31] Sequence r6:r5:[0..31]
// LiveOut: r13 sp
// Trashed: CF r13 sp
// Preserved:
fn0000DD90_entry:
l0000DD90:
	Mem9[r13:word16] = r2
	Mem13[r13 + 4<32>:word32] = r4_r3
	Mem17[r13 + 8<32>:word32] = r6_r5
	return Mem17[r13 + 0xC<32>:word32]
fn0000DD90_exit:


word32 fn0000DDF0(word16 r2, word32 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001B74
//      fn00002D76
// MayUse:  r13:[0..31] r2:[0..15]
// LiveOut: r13 sp
// Trashed: CF r13 sp
// Preserved:
fn0000DDF0_entry:
l0000DDF0:
	Mem9[r13:word16] = r2
	return Mem9[r13 + 4<32>:word32]
fn0000DDF0_exit:


