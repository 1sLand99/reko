void fn00000000(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000022C
// MayUse:  r15:[0..31]
// LiveOut:
// Trashed: r3 r5
// Preserved: r1 r15
fn00000000_entry:
l00000000:
	branch Test(EQ,0<32>) l00000040
l00000018:
	branch Test(EQ,0<32>) l00000040
l00000040:
	return
l00000024:
	call 0x0000002C<p32> (retsize: 0;)
		uses: r15:0x0000002C<p32>,Stack +0000:r15
	return
fn00000000_exit:


void fn00000048(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000022C
// MayUse:  r15:[0..31]
// LiveOut:
// Trashed: C r3 r4 r5 r6
// Preserved: r1 r15
fn00000048_entry:
l00000048:
	branch Test(EQ,0<32>) l0000011C
l000000F4:
	branch Test(EQ,0<32>) l0000011C
l0000011C:
	return
l00000100:
	call 0x00000108<p32> (retsize: 0;)
		uses: r15:0x00000108<p32>,Stack +0000:r15
	return
fn00000048_exit:


void fn000001F0(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..7]
// LiveOut:
// Trashed: r1
// Preserved:
fn000001F0_entry:
l000001F0:
	Mem5[0xFFFFD644<p32>:byte] = SLICE(r3, byte, 0)
	return
fn000001F0_exit:


void fn0000022C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: C r1 r15 r3 r4 r5 r6
// Preserved:
fn0000022C_entry:
l0000022C:
	fn00000000(0x0000022C<p32>)
	fn00000048(0x00000234<p32>)
	return
fn0000022C_exit:


void fn00000248(word32 r0, word32 r3, word32 r10, word32 r11, word32 r19, word32 r20, word32 r22, word32 r23)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
// MayUse:  r0:[0..31] r10:[0..31] r11:[0..31] r19:[0..31] r20:[0..31] r22:[0..31] r23:[0..31] r3:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00000248_entry:
l00000248:
	fn00018150()
	word32 r4_27
	word32 r5_29
	word32 r6_30
	word32 r7_83
	word32 r8_84
	word32 r22_85
	word32 r23_86
	fn0000889C(r0, r3, r19, r22, r23, out r4_27, out r5_29, out r6_30, out r7_83, out r8_84, out r22_85, out r23_86)
l000002AC_thunk_fn000002CC:
	fn000002CC(r0, r4_27, r10, r11, r20, r5_29, r6_30, 1<32>, 0x4000<32>)
	return
fn00000248_exit:


void fn00000284()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000002CC
// MayUse: 
// LiveOut:
// Trashed: r15 r19 r21 r22 r23 r24 r5 r6
// Preserved: r1
fn00000284_entry:
	word32 r5
	word32 r6
	word32 r0
	word32 r4
	word32 r10
	word32 r11
	word32 r20
l00000284:
l000002AC_thunk_fn000002CC:
	fn000002CC(r0, r4, r10, r11, r20, r5, r6, 1<32>, 0x4000<32>)
	return
fn00000284_exit:


void fn000002CC(word32 r0, word32 r4, word32 r10, word32 r11, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn00000284
// MayUse:  r0:[0..31] r10:[0..31] r11:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r4:[0..31]
// LiveOut:
// Trashed: C r0 r1 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved:
fn000002CC_entry:
	ptr32 fp
	struct <anonymous> tArg401C
	word32 r3
	word32 r19
	r23_27 = r23
	r22_20 = r22
	r0_21 = r0
	r10_71 = r10
	r11_135 = r11
	r20_137 = r20
l000002CC:
	word32 r5_62
	word32 r20_137
	word32 r11_135
	word32 r10_71
	word32 r0_21
	word32 r22_20
	word32 r23_27
	word32 r19_24
	word32 r4_30
	word32 r6_32
	word32 r7_33
	word32 r8_34
	word32 r9_35
	word32 r8_242
	word32 r4_241
	word32 r3_29 = fn00008824(r0_21, r24, fn0000871C(r4, r23_27, r24, r21, out r4_241, out r8_242), r22_20, out r4_30, out r6_32, out r7_33, out r8_34, out r9_35, out r19_24, out r21, out r22_20, out r23_27, out r24)
	branch Test(NE,r3_29) l00000338
l00000338:
	word32 r19_40
	word32 r22_42
	word32 r23_43
	word32 r4_246
	word32 r6_247
	word32 r7_248
	word32 r8_249
	word32 r22_250
	word32 r23_251
	fn0000889C(r0_21, fn00008874(r0_21, r3_29, 0xFFFF99E0<32>, r6_32, r7_33, r8_34, r19_24, r22_20, r23_27, out r19_40, out r22_42, out r23_43), r19_40, r22_42, r23_43, out r4_246, out r5_62, out r6_247, out r7_248, out r8_249, out r22_250, out r23_251)
l000002F8:
	branch Test(NE,r19_24) l000002FC_ds_t
l000002FC_ds_t:
l000002B4:
	word32 r3_72
	r0_21 = fn000041BC(r0_21, r22_20, fp + 0x1C<32>, r19_24, r9_35, r10_71, out r3_72, out r4, out r10_71, out r11_135, out r20_137)
	branch Test(NE,r3_72 ^ r19_24) l000002C8_ds_t
l000002C8_ds_t:
	r5_62 = r22_20
l00000358:
	fn0000186C(r5_62, &tArg401C)
	fn00000248(r0, r3, r10, r11, r19, r20, r22, r23)
l000002C8_ds_f:
l000002FC_ds_f:
l00000300:
	word32 r8_108
	word32 r4_243
	fn000086F4(r4_30, r21, r6_32, r19_24, out r4_243, out r8_108)
	word32 r6_114
	branch Test(NE,fn00000728(r0_21, r22_20, r8_108, r9_35, r10_71, out r6_114)) l00000318_ds_t
l00000318_ds_t:
l00000368:
	fn00000248(r0, r3, r10, r11, r19, r20, r22, r23)
l000003A0_thunk_fn000003C4:
	fn000003C4(r0_21, r9_35, r10_71, r11_135, r20_137, 0xFFFF99E8<32>, 0x4000<32>, r6_114, 1<32>)
	return
l00000318_ds_f:
l0000031C:
	return
fn000002CC_exit:


void fn00000320()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1 r21 r22 r23 r24
// Preserved:
fn00000320_entry:
l00000320:
	return
fn00000320_exit:


word32 fn00000378(ptr32 & r4Out, ptr32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000003C4
// MayUse: 
// LiveOut: r19 r3 r4
// Trashed: r15 r19 r21 r22 r23 r24 r5 r6
// Preserved: r1
fn00000378_entry:
	word32 r5
	word32 r6
	word32 r0
	word32 r9
	word32 r10
	word32 r11
	word32 r20
l00000378:
l000003A0_thunk_fn000003C4:
	word32 r19_28 = fn000003C4(r0, r9, r10, r11, r20, r5, 0x4000<32>, r6, 1<32>)
	r4Out = <invalid>
	r19Out = r19_28
	return <invalid>
fn00000378_exit:


word32 fn000003C4(word32 r0, word32 r9, word32 r10, word32 r11, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000002CC
//      fn00000378
// MayUse:  r0:[0..31] r10:[0..31] r11:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r9:[0..31]
// LiveOut: r19
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn000003C4_entry:
	ptr32 fp
	word32 dwLoc10
	word32 dwLoc14
	word32 r3
	word32 r19
l000003C4:
	word32 r4_12
	word32 r6_15
	word32 r7_16
	word32 r3_11 = fn000023C8(r0, r21, fp - 0x4018<32>, r22, out r4_12, out r6_15, out r7_16)
	branch Test(LT,r3_11) l000003D8_ds_t
l000003D8_ds_t:
l00000420:
	fn0000186C(r21, fp - 0x18<32>)
	fn00000248(r0, r3, r10, r11, r19, r20, r22, r23)
l000003D8_ds_f:
l000003DC:
	branch Test(NE,r3_11) l000003E0_ds_t
l000003E0_ds_t:
l000003A8:
	branch Test(NE,fn00008750(r4_12, r24, r3_11, r23) ^ r3_11) l00000434
l00000434:
	fn00000248(r0, r3, r10, r11, r19, r20, r22, r23)
l000003E0_ds_f:
l000003E4:
	word32 r8_50
	word32 r4_576
	word32 r3_48 = fn000086F4(r4_12, r23, r6_15, r7_16, out r4_576, out r8_50)
	branch Test(NE,r3_48) l00000454
l00000454:
	fn00000248(r0, r3, r10, r11, r19, r20, r22, r23)
	word32 r10_62
	word32 r4_580
	word32 r9_581
	word32 r3_63 = fn00008CC4(r3_48, 0xFFFF9A08<32>, r6_15, r7_16, r8_50, out r4_580, out r9_581, out r10_62)
	branch 0x3FF<32> -u (r3_63 + 3<32>) < 0<32> l00000498_ds_t
l00000498_ds_t:
l00000518:
	fn00018150()
	word32 r4_622
	word32 r5_623
	word32 r6_624
	word32 r7_625
	word32 r8_626
	word32 r22_627
	word32 r23_628
	fn0000889C(r0, r3_63 + 3<32>, 0xFFFF9A08<32>, r6_15, r23, out r4_622, out r5_623, out r6_624, out r7_625, out r8_626, out r22_627, out r23_628)
l00000498_ds_f:
l0000049C:
	fn000181D0()
	word32 r4_107
	word32 r8_109
	word32 r3_106 = fn000086C8(0x3FF<32>, 0xFFFF9A08<32>, 0xFFFF9A3C<32>, 0xFFFF9A34<32>, 0xFFFF9A08<32>, 0xFFFF9A30<32>, r10_62, r11, r20, out r4_107, out r8_109)
	branch Test(EQ,r3_106) l000004D4_ds_t
l000004D4_ds_t:
l00000578:
	word32 r19_116
	word32 r22_118
	word32 r23_119
	word32 r22_132
	word32 r23_133
	word32 r5_138
	word32 r6_139
	word32 r7_140
	word32 r8_141
	word32 r4_596
	word32 r4_597
	word32 r9_598
	word32 r10_599
	word32 r3_152 = fn00008CC4(fn0000889C(r0, fn00008874(r0, r3_106, 0xFFFF9A08<32>, 0xFFFF9A3C<32>, 0xFFFF9A34<32>, r8_109, 0xFFFF9A08<32>, r6_15, r23, out r19_116, out r22_118, out r23_119), r19_116, r22_118, r23_119, out r4_596, out r5_138, out r6_139, out r7_140, out r8_141, out r22_132, out r23_133), r5_138, r6_139, r7_140, r8_141, out r4_597, out r9_598, out r10_599)
	word32 r4_159 = r3_152 + 3<32>
	branch 0x3FF<32> -u (r3_152 + 3<32>) < 0<32> l000005C8_ds_t
l000005C8_ds_t:
l000006B0:
	fn00018150()
	word32 r4_615
	word32 r5_616
	word32 r6_617
	word32 r7_618
	word32 r8_619
	word32 r22_620
	word32 r23_621
	fn0000889C(r0, 0x3FF<32>, r3_152, r22_132, r23_133, out r4_615, out r5_616, out r6_617, out r7_618, out r8_619, out r22_620, out r23_621)
l000005C8_ds_f:
l000005CC:
	word32 r3_194
	word32 r22_202
	fn000181D0()
	branch 3<32> -u r3_152 >= 0<32> l000005F0_ds_t
l000005F0_ds_t:
l000005F0_ds_f:
l000005F4:
	r3_194 = fn00008E58(3<32>, r3_152 + 3<32>, r5_138 + (r3_152 + 0xFFFFFFFD<32>), 0xFFFF9A30<32>, 0xFFFF9A58<32>, r5_138, out r4_159)
	branch Test(EQ,r3_194) l0000060C_ds_t
l0000060C_ds_t:
	word32 r22_198 = fp + 0xFFFFF7AC<32> + (r3_152 + 0xFFFFFFFD<32>)
l000006A0:
	Mem200[r22_198 + 28<i32>:byte] = SLICE(r3_194, byte, 0)
	r22_202 = r5_138
l0000060C_ds_f:
l00000610:
	fn000181D0()
	r22_202 = fp - 0x838<32>
	r3_194 = 0x400<32>
l0000063C:
	word32 r10_226
	word32 r11_227
	word32 r20_231
	word32 r21_232
	word32 r22_233
	word32 r23_234
	word32 r3_241
	word32 r4_243
	word32 r7_246
	word32 r8_247
	word32 r9_248
	word32 r19_629
	word32 r0_225 = fn00000A7C(r0, r3_194, r4_159, r22_202, r3_152, out r3_241, out r4_243, out r7_246, out r8_247, out r9_248, out r10_226, out r11_227, out r19_629, out r20_231, out r21_232, out r22_233, out r23_234)
	branch Test(EQ,r3_241) l00000650_ds_t
l00000650_ds_t:
l000006F8:
	fn00018150()
	word32 r4_608
	word32 r5_609
	word32 r6_610
	word32 r7_611
	word32 r8_612
	word32 r22_613
	word32 r23_614
	fn0000889C(r0_225, r3_241, r3_241, r22_233, r23_234, out r4_608, out r5_609, out r6_610, out r7_611, out r8_612, out r22_613, out r23_614)
l00000650_ds_f:
l00000654:
	word32 r8_282
	word32 r4_600
	word32 r3_279 = fn000086C8(r4_243, r23_234, 0xFFFF9A5C<32>, r7_246, r8_247, r9_248, r10_226, r11_227, r20_231, out r4_600, out r8_282)
	branch Test(EQ,r3_279) l0000066C_ds_t
l0000066C_ds_t:
l000006E0:
	word32 r19_289
	word32 r22_291
	word32 r23_292
	word32 r4_601
	word32 r5_602
	word32 r6_603
	word32 r7_604
	word32 r8_605
	word32 r22_606
	word32 r23_607
	fn0000889C(r0_225, fn00008874(r0_225, r3_279, r21_232, r3_279, r7_246, r8_282, r3_241, r22_233, r23_234, out r19_289, out r22_291, out r23_292), r19_289, r22_291, r23_292, out r4_601, out r5_602, out r6_603, out r7_604, out r8_605, out r22_606, out r23_607)
l0000066C_ds_f:
l00000670:
	word32 r19_328
	word32 r4_332
	fn00009178(fn00000378(out r4_332, out r19_328), r4_332, r19_328)
	return dwLoc10
l000004D4_ds_f:
l000004D8:
	word32 r19_390
	word32 r22_393
	word32 r23_394
	word32 r3_401
	word32 r4_403
	word32 r11_586
	word32 r20_587
	word32 r21_588
	word32 r9_584
	word32 r10_585
	word32 r7_582
	word32 r8_583
	word32 r0_385 = fn00000A7C(r0, r3_106, r4_107, fp - 0x40C<32>, 0xFFFF9A08<32>, out r3_401, out r4_403, out r7_582, out r8_583, out r9_584, out r10_585, out r11_586, out r19_390, out r20_587, out r21_588, out r22_393, out r23_394)
	branch Test(EQ,r3_401) l000004E8_ds_t
l000004E8_ds_t:
l00000548:
	fn00018150()
	word32 r4_589
	word32 r5_590
	word32 r6_591
	word32 r7_592
	word32 r8_593
	word32 r22_594
	word32 r23_595
	fn0000889C(r0_385, r3_401, r19_390, r22_393, r23_394, out r4_589, out r5_590, out r6_591, out r7_592, out r8_593, out r22_594, out r23_595)
l000004E8_ds_f:
l000004EC:
	fn00000284()
	fn00009178(r3_401, r4_403, r19_390)
	return r3_11
l000003F4:
	word32 r6_577
	branch Test(NE,fn00000728(r0, r21, r8_50, r9, r10, out r6_577)) l00000400_ds_t
l00000400_ds_t:
l00000444:
	fn00000248(r0, r3, r10, r11, r19, r20, r22, r23)
l00000400_ds_f:
l00000404:
	return dwLoc14
fn000003C4_exit:


void fn0000040C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1 r22 r23 r24
// Preserved:
fn0000040C_entry:
l0000040C:
	return
fn0000040C_exit:


void fn00000538(word32 r0, word32 r3, word32 r19, word32 r22, word32 r23)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r3:[0..31]
// LiveOut:
// Trashed:
// Preserved: r1
// Terminates process
fn00000538_exit:
fn00000538_entry:
l00000538:
	word32 r4_24
	word32 r5_25
	word32 r6_26
	word32 r7_27
	word32 r8_28
	word32 r22_29
	word32 r23_30
	fn0000889C(r0, r3, r19, r22, r23, out r4_24, out r5_25, out r6_26, out r7_27, out r8_28, out r22_29, out r23_30)


word32 fn00000728(word32 r0, word32 r5, word32 r8, word32 r9, word32 r10, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
// MayUse:  r0:[0..31] r10:[0..31] r5:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r3 r6
// Trashed: r18 r26 r3 r4 r5 r6 r7
// Preserved: r1 r15
fn00000728_entry:
	word32 r6
l00000728:
	branch Test(EQ,r5) l00000768
l00000768:
	r6Out = r6
	return 0xFFFFFFFE<32>
l0000072C:
	branch Test(EQ,Mem0[r5 + 12<i32>:word32] ^ 0x1C4F<32>) l0000073C_ds_t
l0000073C_ds_t:
l00000754:
	word32 r6_15
	word32 r3_13 = fn00003894(r0, r5, out r6_15)
	r6Out = r6_15
	return r3_13
l0000073C_ds_f:
l00000740:
	word32 r6_29
	word32 r3_24 = fn00005538(r0, r5, r8, r9, r10, out r6_29)
	r6Out = r6_29
	return r3_24
fn00000728_exit:


word32 fn00000770(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r19, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r19Out, ptr32 & r20Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000A7C
// MayUse:  r0:[0..31] r19:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r0 r10 r11 r19 r20 r21 r22 r23 r3 r4 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00000770_entry:
	word32 r20
	word32 r7
	word32 r10
	word32 r11
	word32 r8
	word32 r9
l00000770:
	branch Test(EQ,r5) l00000790_ds_t
l00000790_ds_t:
l00000790_ds_f:
l00000794:
	word32 r15_29
	word32 r22_32
	word32 r23_33
	word32 r24_532
	word32 r19_531
	word32 r21_31
	r3 = fn00008918(r0, r4, r19, r5, r6, out r4, out r7, out r8, out r15_29, out r19_531, out r21_31, out r22_32, out r23_33, out r24_532)
	branch Test(EQ,r3) l000007B0_ds_t
l000007B0_ds_t:
l00000A50:
l00000A50_thunk_fn00000A34:
	word32 r19_50
	word32 r21_51
	word32 r22_52
	word32 r23_53
	r3Out = fn00000A34(r0, r3, 0<32>, out r19_50, out r21_51, out r22_52, out r23_53)
	r4Out = r4
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r19Out = r19_50
	r20Out = r20
	r21Out = r21_51
	r22Out = r22_52
	r23Out = r23_53
	return r0
l000007B0_ds_f:
l000007B4:
	word32 r3_59 = CONVERT(Mem19[r21_31:byte], byte, word32)
	Mem61[r3 + 28<i32>:word32] = 0x2000<32>
	Mem63[r3 + 60<i32>:word32] = 0xFFFFFFFF<32>
	Mem64[r3 + 24<i32>:word32] = r0
	Mem65[r3 + 80<i32>:word32] = r0
	Mem66[r3 + 12<i32>:word32] = r0
	Mem67[r3 + 64<i32>:word32] = r0
	Mem68[r3 + 40<i32>:word32] = r0
	word32 r3_101 = CONVERT(SLICE(r3_59, int8, 0), int8, int32)
	branch Test(EQ,r3_101) l000007E4_ds_t
l000007E4_ds_t:
l000007E4_ds_f:
l000007E8:
	word32 r20_193 = 4<32>
	word32 r11_191 = 2<32>
l00000820:
	word32 r4_82 = r3_101 + 0xFFFFFFD0<32>
	branch 9<32> -u (r4_82 & 0xFF<32>) >= 0<32> l00000830_ds_t
l00000830_ds_t:
l0000080C:
	Mem88[r3 + 60<i32>:word32] = r4_82
l00000830_ds_f:
	word32 r3_89 = r3_101 + 0xFFFFFFD5<32>
l00000834:
	branch 0x4D<32> -u (r3_89 & 0xFF<32>) < 0<32> l00000810
l00000810:
	r21_31 = r21_31 + 1<32>
	r3_101 = CONVERT(Mem96[r21_31:byte], byte, int32)
	branch Test(EQ,r3_101) l0000085C
l0000085C:
	word32 r3_103 = Mem96[r3 + 12<i32>:word32]
	branch Test(EQ,r3_103) l00000864_ds_t
l00000864_ds_t:
l00000864_ds_f:
	word32 r3_105 = r3_103 ^ 0x1C4F<32>
l00000868:
	branch Test(EQ,r3_103 ^ 0x1C4F<32>) l0000092C
l0000092C:
	branch Test(EQ,Mem96[r3 + 40<i32>:word32]) l00000934_ds_t
l00000934_ds_t:
	r3_105 = 1<32>
l000009B4:
	Mem108[r3 + 40<i32>:word32] = 1<32>
l00000934_ds_f:
l0000086C:
	word32 r4_125
	word32 r10_123
	word32 r9_127
	fn00008CC4(r3_105, r22_32, 9<32>, 0x4D<32>, 1<32>, out r4_125, out r9_127, out r10_123)
	word32 r19_140
	word32 r22_142
	word32 r24_144
	word32 r21_536
	word32 r15_535
	word32 r7_533
	word32 r8_534
	word32 r23_143
	word32 r4_146
	word32 r3_145 = fn00008918(r0, r4_125, r3, r22_32, r23_33, out r4_146, out r7_533, out r8_534, out r15_535, out r19_140, out r21_536, out r22_142, out r23_143, out r24_144)
	branch Test(EQ,r3_145) l0000088C_ds_t
l0000088C_ds_t:
	Mem153[r19_140 + 20<i32>:word32] = r3_145
l00000938:
	fn000188F0()
l0000088C_ds_f:
	Mem158[r19_140 + 20<i32>:word32] = r3_145
l00000890:
	fn000181D0()
	word32 r3_164 = Mem158[r19_140 + 12<i32>:word32]
	word32 r7_161 = 0xFFFF9AB8<32>
	word32 r6_165 = r3_164 ^ 0x1C4F<32>
	branch Test(EQ,r3_164 ^ 0x1C4F<32>) l000008D4
l000008B8:
	word32 r5_167
	branch Test(NE,r24_144) l000008BC_ds_t
l000008BC_ds_t:
	r6_165 = 0xE01<32>
l000009BC:
	r5_167 = 0xA09<32>
l000008BC_ds_f:
l000008C0:
	r6_165 = 0x601<32>
	r5_167 = 0x209<32>
l000008C8:
	r4_146 = r3_164 ^ 0x79B1<32>
	branch Test(EQ,r3_164 ^ 0x79B1<32>) l000008D4
l000008D0:
	r6_165 = r5_167
l000008D4:
	word32 r21_221
	branch Test(LT,r23_143) l000008D8_ds_t
l000008D8_ds_t:
l000009C4:
	word32 r3_188 = fn00008BB4(r3_164, r22_142, r6_165, 0x1B6<32>, r22_142, out r4_146, out r9_127, out r10_123, out r11_191, out r20_193)
	Mem199[r19_140 + 16<i32>:word32] = r3_188
	r7_161 = 0x1B6<32>
	word32 r21_200 = ~r3_188
	branch Test(EQ,r21_200) l000009E0_ds_t
l000009E0_ds_t:
l00000A58:
	fn000188F0()
	fn000188F0()
l00000A74_thunk_fn00000A34:
	word32 r19_212
	word32 r21_213
	word32 r22_214
	word32 r23_215
	r3Out = fn00000A34(r0, r21_200, r21_200, out r19_212, out r21_213, out r22_214, out r23_215)
	r4Out = r4_146
	r7Out = 0x1B6<32>
	r8Out = r22_142
	r9Out = r9_127
	r10Out = r10_123
	r11Out = r11_191
	r19Out = r19_212
	r20Out = r20_193
	r21Out = r21_213
	r22Out = r22_214
	r23Out = r23_215
	return r0
l000009E0_ds_f:
	r23_143 = r3_188
l000009E4:
	r3_164 = Mem199[r19_140 + 12<i32>:word32]
	r21_221 = r3_164 ^ 1<32>
	branch Test(NE,r3_164 ^ 1<32>) l000008E4
l000008D8_ds_f:
	r21_221 = r3_164 ^ 1<32>
l000008DC:
	branch Test(EQ,r3_164 ^ 1<32>) l000008E0_ds_t
l000008E0_ds_t:
	Mem223[r19_140 + 16<i32>:word32] = r23_143
l000009F0:
	word32 r10_240
	word32 r11_241
	word32 r19_245
	word32 r21_246
	word32 r3_255
	word32 r7_260
	word32 r8_261
	word32 r9_262
	word32 r25_543
	word32 r26_544
	word32 r27_545
	word32 r24_542
	word32 r4_537
	word32 r6_539
	word32 r22_540
	word32 r23_541
	word32 r5_538
	word32 r0_239 = fn00009120(r3_164, r23_143, r22_142, r9_127, r10_123, r19_140, r21_221, out r3_255, out r4_537, out r5_538, out r6_539, out r7_260, out r8_261, out r9_262, out r10_240, out r11_241, out r19_245, out r21_246, out r22_540, out r23_541, out r24_542, out r25_543, out r26_544, out r27_545)
	Mem265[r19_245 + 12<i32>:word32] = 0x79B1<32>
	Mem266[r19_245:word32] = r21_246
l00000A0C_thunk_fn00000A34:
	word32 r19_269
	word32 r21_270
	word32 r22_271
	word32 r23_272
	r3Out = fn00000A34(r0_239, r3_255, r19_245, out r19_269, out r21_270, out r22_271, out r23_272)
	r4Out = 0x79B1<32>
	r7Out = r7_260
	r8Out = r8_261
	r9Out = r9_262
	r10Out = r10_240
	r11Out = r11_241
	r19Out = r19_269
	r20Out = r20_193
	r21Out = r21_270
	r22Out = r22_271
	r23Out = r23_272
	return r0_239
l000008E0_ds_f:
	Mem276[r19_140 + 16<i32>:word32] = r23_143
l000008E4:
	branch Test(EQ,r3_164 ^ 0x1C4F<32>) l000008EC_ds_t
l000008EC_ds_t:
l00000A14:
	word32 r10_289
	word32 r11_290
	word32 r19_294
	word32 r3_304
	word32 r7_309
	word32 r8_310
	word32 r9_311
	word32 r22_550
	word32 r23_551
	word32 r25_553
	word32 r26_554
	word32 r27_555
	word32 r24_552
	word32 r21_549
	word32 r4_546
	word32 r5_547
	word32 r6_548
	word32 r0_288 = fn00009120(r3_164, r23_143, r22_142, r9_127, r10_123, r19_140, r21_221, out r3_304, out r4_546, out r5_547, out r6_548, out r7_309, out r8_310, out r9_311, out r10_289, out r11_290, out r19_294, out r21_549, out r22_550, out r23_551, out r24_552, out r25_553, out r26_554, out r27_555)
	Mem313[r19_294 + 48<i32>:word32] = r3_304
	word32 r4_314 = ~r3_304
	branch Test(NE,r4_314) l00000A2C_ds_t
l00000A2C_ds_t:
	word32 r3_315 = Mem313[r19_294 + 12<i32>:word32]
l00000A2C_thunk_fn00000A34:
	word32 r19_318
	word32 r21_319
	word32 r22_320
	word32 r23_321
	r3Out = fn00000A34(r0_288, r3_315, r19_294, out r19_318, out r21_319, out r22_320, out r23_321)
	r4Out = r4_314
	r7Out = r7_309
	r8Out = r8_310
	r9Out = r9_311
	r10Out = r10_289
	r11Out = r11_290
	r19Out = r19_318
	r20Out = r20_193
	r21Out = r21_319
	r22Out = r22_320
	r23Out = r23_321
	return r0_288
l00000A2C_ds_f:
	word32 r3_325 = Mem313[r19_294 + 12<i32>:word32]
l00000A2C_thunk_fn00000A30:
	word32 r19_327
	word32 r21_328
	word32 r22_329
	word32 r23_330
	r3Out = fn00000A30(r0_288, r3_325, r4_314, r19_294, out r19_327, out r21_328, out r22_329, out r23_330)
	r4Out = r4_314
	r7Out = r7_309
	r8Out = r8_310
	r9Out = r9_311
	r10Out = r10_289
	r11Out = r11_290
	r19Out = r19_327
	r20Out = r20_193
	r21Out = r21_328
	r22Out = r22_329
	r23Out = r23_330
	return r0_288
l000008EC_ds_f:
l000008F0:
	Mem336[r19_140:word32] = r0
l000008F0_thunk_fn00000A34:
	word32 r19_339
	word32 r21_340
	word32 r22_341
	word32 r23_342
	r3Out = fn00000A34(r0, r3_164, r19_140, out r19_339, out r21_340, out r22_341, out r23_342)
	r4Out = r4_146
	r7Out = r7_161
	r8Out = r22_142
	r9Out = r9_127
	r10Out = r10_123
	r11Out = r11_191
	r19Out = r19_339
	r20Out = r20_193
	r21Out = r21_340
	r22Out = r22_341
	r23Out = r23_342
	return r0
l00000840:
	word32 r4_346 = (r3_89 & 0xFF<32>) * 2<32>
	word32 r3_349 = Mem97[r4_346 * 2<32> + 0xFFFF9ABC<32>:word32]
	word32 r19_360
	word32 r20_361
	word32 r21_362
	word32 r22_363
	word32 r23_364
	word32 r7_368
	word32 r3_369
	word32 r4_370
	word32 r0_371
	word32 r8_372
	word32 r12_373
	word32 r11_374
	word32 r10_375
	word32 r9_376
	word32 r18_377
	word32 r25_378
	word32 r26_379
	word32 r27_380
	word32 r28_381
	word32 r29_382
	word32 r30_383
	call r3_349 (retsize: 0;)
		uses: r0:r0,r10:r10_375,r11:r11_374,r12:r12_373,r15:r15_29,r18:r18_377,r19:r3_35,r20:4<32>,r21:r21_94,r22:r22_32,r23:r23_33,r24:0<32>,r25:r25_378,r26:r26_379,r27:r27_380,r28:r28_381,r29:r29_382,r3:r3_349,r30:r30_383,r4:r4_346 * 2<32>,r5:r4_82 & 0xFF<32>,r6:9<32>,r7:0x4D<32>,r8:r8_372,r9:r9_376
		defs: r0:r0_371,r10:r10_375,r11:r11_374,r12:r12_373,r18:r18_377,r19:r19_360,r20:r20_361,r21:r21_362,r22:r22_363,r23:r23_364,r25:r25_378,r26:r26_379,r27:r27_380,r28:r28_381,r29:r29_382,r3:r3_369,r30:r30_383,r4:r4_370,r7:r7_368,r8:r8_372,r9:r9_376
	r3Out = r3_369
	r4Out = r4_370
	r7Out = r7_368
	r8Out = r8_372
	r9Out = r9_376
	r10Out = r10_375
	r11Out = r11_374
	r19Out = r19_360
	r20Out = r20_361
	r21Out = r21_362
	r22Out = r22_363
	r23Out = r23_364
	return r0_371
fn00000770_exit:


void fn00000A24(word32 r0, word32 r3, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r19:[0..31] r3:[0..31]
// LiveOut:
// Trashed: r15 r19 r21 r22 r23 r24 r3 r4 r5
// Preserved: r1
fn00000A24_entry:
l00000A24:
	word32 r4_4 = ~r3
	branch Test(NE,r4_4) l00000A2C_ds_t
l00000A2C_ds_t:
	word32 r3_7 = Mem0[r19 + 12<i32>:word32]
l00000A2C_thunk_fn00000A34:
	word32 r19_37
	word32 r21_38
	word32 r22_39
	word32 r23_40
	fn00000A34(r0, r3_7, r19, out r19_37, out r21_38, out r22_39, out r23_40)
	return
l00000A2C_ds_f:
	word32 r3_18 = Mem0[r19 + 12<i32>:word32]
l00000A2C_thunk_fn00000A30:
	word32 r19_41
	word32 r21_42
	word32 r22_43
	word32 r23_44
	fn00000A30(r0, r3_18, r4_4, r19, out r19_41, out r21_42, out r22_43, out r23_44)
	return
fn00000A24_exit:


word32 fn00000A30(word32 r0, word32 r3, word32 r4, word32 r19, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000770
//      fn00000A24
// MayUse:  r0:[0..31] r19:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r19 r21 r22 r23 r3
// Trashed: r15 r19 r21 r22 r23 r24 r3 r5
// Preserved: r1
fn00000A30_entry:
l00000A30:
	Mem5[r19 + 48<i32>:word32] = r4
l00000A30_thunk_fn00000A34:
	word32 r19_10
	word32 r21_11
	word32 r22_12
	word32 r23_13
	word32 r3_15 = fn00000A34(r0, r3, r19, out r19_10, out r21_11, out r22_12, out r23_13)
	r19Out = r19_10
	r21Out = r21_11
	r22Out = r22_12
	r23Out = r23_13
	return r3_15
fn00000A30_exit:


word32 fn00000A34(word32 r0, word32 r3, word32 r19, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000770
//      fn00000A24
// MayUse:  r0:[0..31] r19:[0..31] r3:[0..31]
// LiveOut: r19 r21 r22 r23 r3
// Trashed: r1 r15 r19 r21 r22 r23 r24 r3 r5
// Preserved:
fn00000A34_entry:
	word32 dwArg1C
	word32 dwArg24
	word32 dwArg28
	word32 dwArg2C
l00000A34:
	branch Test(NE,r3 ^ 0x1C4F<32>) l00000A3C_ds_t
l00000A3C_ds_t:
	Mem7[r19:word32] = r0
l00000A3C_ds_f:
	Mem8[r19:word32] = r0
l00000A40:
	Mem9[r19 + 52<i32>:word32] = r3 ^ 0x1C4F<32>
	Mem10[r19 + 56<i32>:word32] = r3 ^ 0x1C4F<32>
	Mem11[r19 + 44<i32>:word32] = r3 ^ 0x1C4F<32>
l000008F4:
	branch Test(EQ,Mem13[r19 + 80<i32>:word32]) l000008FC_ds_t
l000008FC_ds_t:
	Mem16[r19 + 72<i32>:word32] = r0
l000008FC_ds_f:
	Mem17[r19 + 72<i32>:word32] = r0
l00000900:
	branch Test(EQ,Mem17[r19 + 76<i32>:word32] ^ 0xFFFFFFFC<32>) l00000918
l00000918:
	Mem20[r19 + 80<i32>:word32] = r0
l0000091C:
	Mem23[r19 + 76<i32>:word32] = r0
	Mem24[r19 + 8<i32>:word32] = r0
	Mem25[r19 + 88<i32>:word32] = r0
l00000948:
l0000094C:
	r19Out = dwArg1C
	r21Out = dwArg24
	r22Out = dwArg28
	r23Out = dwArg2C
	return r19
fn00000A34_exit:
l0000090C:
	fn000188F0()


void fn00000A64()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1 r15 r19 r21 r22 r23 r24 r3 r5
// Preserved:
fn00000A64_entry:
l00000A64:
	fn000188F0()
l0000094C_in_fn00000A64:
	return
fn00000A64_exit:


word32 fn00000A7C(word32 r0, word32 r3, word32 r4, word32 r5, word32 r19, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r19Out, ptr32 & r20Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000002CC
// MayUse:  r0:[0..31] r19:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r0 r10 r11 r19 r20 r21 r22 r23 r3 r4 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15
fn00000A7C_entry:
l00000A7C:
	word32 r19_16
	word32 r21_17
	word32 r22_18
	word32 r23_19
	word32 r3_21
	word32 r10_23
	word32 r11_24
	word32 r20_27
	word32 r4_28
	word32 r7_30
	word32 r8_31
	word32 r9_32
	word32 r0_33 = fn00000770(r0, r3, r4, r5, 0xFFFFFFFF<32>, r19, out r3_21, out r4_28, out r7_30, out r8_31, out r9_32, out r10_23, out r11_24, out r19_16, out r20_27, out r21_17, out r22_18, out r23_19)
	r3Out = r3_21
	r4Out = r4_28
	r7Out = r7_30
	r8Out = r8_31
	r9Out = r9_32
	r10Out = r10_23
	r11Out = r11_24
	r19Out = r19_16
	r20Out = r20_27
	r21Out = r21_17
	r22Out = r22_18
	r23Out = r23_19
	return r0_33
fn00000A7C_exit:


void fn0000186C(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r3 r4 r7
// Preserved: r1
fn0000186C_entry:
l0000186C:
	branch Test(EQ,r5) l0000195C
l00001870:
	word32 r3_5 = Mem0[r5 + 12<i32>:word32]
	branch Test(GE,-(r3_5 ^ 0x1C4F<32>) | r3_5 ^ 0x1C4F<32>) l00001914
l00001884:
	branch Test(NE,(-(r3_5 ^ 0x79B1<32>) | r3_5 ^ 0x79B1<32>) >>u 31<i32>) l0000195C
l0000195C:
	return
l00001914:
	word32 r3_49
	branch Test(EQ,r6) l00001918_ds_t
l00001918_ds_t:
	r3_49 = Mem0[r5 + 76<i32>:word32]
l00001918_ds_f:
	word32 r3_50 = Mem0[r5 + 76<i32>:word32]
l0000191C:
	Mem51[r6:word32] = r3_50
	r3_49 = Mem51[r5 + 76<i32>:word32]
l00001924:
	branch Test(EQ,r3_49 ^ 0xFFFFFFFC<32>) l0000193C
l0000193C:
	return
l0000192C:
	branch Test(EQ,Mem57[r5 + 80<i32>:word32]) l0000194C
l0000194C:
	return
l00001934:
	return
fn0000186C_exit:


word32 fn00001A68(word32 r0, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001BBC
//      fn00001E88
//      fn00002274
//      fn000023C8
//      fn00003894
//      fn00003990
//      fn00003AA4
//      fn00003CA8
//      fn00003EC8
//      fn000041BC
//      fn00005318
//      fn00005538
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3 r4 r5 r6
// Trashed: r3 r4 r5 r6
// Preserved: r1 r15 r19 r21 r22 r23
fn00001A68_entry:
l00001A68:
	word32 r5_16 = Mem13[r5 + 80<i32>:word32]
	branch Test(EQ,r5_16) l00001A8C_ds_t
l00001A8C_ds_t:
l00001A8C_ds_f:
l00001A90:
	branch Test(EQ,Mem13[r5 + 76<i32>:word32] ^ 0xFFFFFFFC<32>) l00001AAC
l00001A9C:
	fn000188F0()
l00001AAC:
	Mem29[r5 + 80<i32>:word32] = r0
l00001AB0:
	word32 r3_40
	word32 r6_156 = r6
	branch Test(GE,-r6 | r6) l00001ABC_ds_t
l00001ABC_ds_t:
l00001ABC_ds_f:
l00001AC0:
	branch Test(GE,-(r6 ^ 0xFFFFFFFB<32>) | r6 ^ 0xFFFFFFFB<32>) l00001ACC_ds_t
l00001ACC_ds_t:
	r3_40 = -r7
l00001ACC_ds_f:
l00001AD0:
	Mem44[r5:word32] = r0
l00001AD4:
	r3_40 = -r7
l00001AD8:
	word32 r3_144 = r7 | r3_40
	branch Test(GE,r3_144) l00001AE0_ds_t
l00001AE0_ds_t:
	Mem54[r5 + 76<i32>:word32] = r6
l00001B7C:
l00001AE0_ds_f:
	Mem60[r5 + 76<i32>:word32] = r6
l00001AE4:
	r3_144 = -(r6 ^ 0xFFFFFFFC<32>)
	r6_156 = r3_144 | r6 ^ 0xFFFFFFFC<32>
	branch Test(GE,r6_156) l00001AF4_ds_t
l00001AF4_ds_t:
l00001B80:
	r4Out = <invalid>
	r5Out = r5_16
	r6Out = r6_156
	return r3_144
l00001AF4_ds_f:
l00001AF8:
	fn00018CC4()
	fn00018CC4()
	fn00018918()
	Mem82[r5 + 80<i32>:word32] = r3_144 * 2<32>
	word32 r5_81 = r3_144 * 2<32> + 3<32>
	branch Test(EQ,r3_144 * 2<32>) l00001B30_ds_t
l00001B30_ds_t:
l00001B98:
	Mem85[r5 + 76<i32>:word32] = 0xFFFFFFFC<32>
	r4Out = <invalid>
	r5Out = r5_81
	r6Out = r6_156
	return 0xFFFFFFFC<32>
fn00001A68_exit:
l00001B30_ds_f:
l00001B34:
	fn00018CC4()
	fn00018CC4()
	fn000181D0()


word32 fn00001BBC(word32 r0, word32 r5, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002274
//      fn000023C8
// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut: r3 r4 r6 r7
// Trashed: C r18 r3 r4 r5 r6 r7
// Preserved: r0 r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28
fn00001BBC_entry:
	word32 r7
l00001BBC:
	word32 r21_178 = r5
	word32 r22_150 = 0<32>
	word32 r26_125 = 1<32>
	word32 r25_159 = Mem23[r5 + 100<i32>:word32]
	word32 r23_180 = 0<32>
l00001C44:
	word32 r4_117
	word32 r3_120
	word32 r6_119
	branch Test(NE,Mem32[r21_178 + 88<i32>:word32]) l00001C4C_ds_t
l00001C4C_ds_t:
l00001C4C_ds_f:
	r6_119 = r23_180
l00001C50:
	word32 r3_292
	word32 r3_37 = Mem32[r21_178 + 76<i32>:word32]
	branch Test(GE,-r3_37 | r3_37) l00001C60_ds_t
l00001C60_ds_t:
	r3_292 = r3_37 ^ 0xFFFFFFFB<32>
l00001C60_ds_f:
l00001C64:
	word32 r3_43 = -(r3_37 ^ 0xFFFFFFFB<32>) | r3_37 ^ 0xFFFFFFFB<32>
	r4_117 = r3_43 >>u 31<i32>
	branch Test(NE,r3_43 >>u 31<i32>) l00001CF0_ds_t
l00001CF0_ds_t:
	r3_120 = 0xFFFFFFFF<32>
l00001CF0_ds_f:
	r3_292 = 0xFFFFFFFF<32>
l00001CF4:
	word32 r19_103 = Mem32[r21_178 + 52<i32>:word32]
	branch Test(NE,r19_103) l00001CFC_ds_t
l00001CFC_ds_t:
l00001CFC_ds_f:
l00001D00:
	word32 r27_84 = Mem32[r21_178 + 24<i32>:word32]
l00001D14:
	branch r22_150 -u (r27_84 - r19_103) >= 0<32> l00001D20_ds_t
l00001D20_ds_t:
l00001D20_ds_f:
l00001D24:
l00001D28:
	fn000190F0()
	branch Test(GT,r3_292) l00001D38_ds_t
l00001D38_ds_t:
	r19_103 = r19_103 + r3_292
l00001D0C:
	branch r19_103 -u r27_84 >= 0<32> l00001D4C
l00001D38_ds_f:
	word32 r19_106 = r19_103 + r3_292
l00001D3C:
	r19_103 = r19_106 - r3_292
	branch Test(NE,r3_292) l00001D44_ds_t
l00001D44_ds_t:
l00001E70:
	word32 r5_427
	fn00001A68(r0, r21_178, 0xFFFFFFFF<32>, 0xFFFF9C4C<32>, out r4_117, out r5_427, out r6_119)
	r7 = 0xFFFF9C4C<32>
	r3_120 = 0xFFFFFFFF<32>
l00001D44_ds_f:
l00001D48:
	Mem126[r21_178 + 52<i32>:word32] = r26_125
l00001D4C:
	word32 r19_132 = r19_103 + Mem128[r21_178 + 88<i32>:word32]
	Mem133[r21_178 + 84<i32>:word32] = Mem128[r21_178 + 32<i32>:word32]
	branch Test(NE,r19_132) l00001D60_ds_t
l00001D60_ds_t:
	Mem134[r21_178 + 88<i32>:word32] = r19_132
l00001C08:
l00001C0C:
	fnFFFFCC80()
	branch Test(EQ,r3_189 + 2<32> & 0xFFFFFFFB<32>) l00001C24_ds_t
l00001C24_ds_t:
l00001DC4:
	word32 r5_425
	fn00001A68(r0, r21_178, 0xFFFFFFFE<32>, 0xFFFF9C68<32>, out r4_117, out r5_425, out r6_119)
	r7 = 0xFFFF9C68<32>
	r3_120 = 0xFFFFFFFF<32>
l00001C24_ds_f:
l00001C28:
	branch Test(EQ,r3_189 ^ 0xFFFFFFFC<32>) l00001C2C_ds_t
l00001C2C_ds_t:
l00001DE0:
	word32 r5_426
	fn00001A68(r0, r21_178, 0xFFFFFFFC<32>, 0xFFFF9C90<32>, out r4_117, out r5_426, out r6_119)
	r7 = 0xFFFF9C90<32>
	r3_120 = 0xFFFFFFFF<32>
l00001C2C_ds_f:
	r4_117 = r3_189 ^ 0xFFFFFFFD<32>
l00001C30:
	branch Test(EQ,r3_189 ^ 0xFFFFFFFD<32>) l00001DFC
l00001DFC:
	r7 = Mem220[r21_178 + 108<i32>:word32]
	branch Test(EQ,r7) l00001E60
l00001E60:
	r7 = 0xFFFF9C1C<32>
l00001E04:
l00001E08:
	word32 r5_428
	fn00001A68(r0, r21_178, 0xFFFFFFFD<32>, r7, out r4_117, out r5_428, out r6_119)
	r3_120 = 0xFFFFFFFF<32>
l00001C34:
	word32 r5_235 = Mem220[r21_178 + 100<i32>:word32]
	branch Test(EQ,r5_235) l00001E18
l00001E18:
	r6_119 = Mem220[r21_178 + 96<i32>:word32]
	Mem237[r21_178:word32] = r25_159
	Mem240[r21_178 + 4<i32>:word32] = r6_119 - r25_159
	r4_117 = r3_189 ^ 1<32>
	branch Test(NE,r3_189 ^ 1<32>) l00001E30_ds_t
l00001E30_ds_t:
	r3_120 = r5_235
l00001E30_ds_f:
l00001E34:
	Mem243[r21_178 + 44<i32>:word32] = r0
	r3_120 = 0<32>
l00001C3C:
	branch Test(EQ,r3_189 ^ 1<32>) l00001E40
l00001E40:
	word32 r3_246 = Mem220[r21_178 + 96<i32>:word32]
	word32 r5_247 = r25_159 - r5_235
	Mem248[r21_178:word32] = r5_247
	Mem250[r21_178 + 4<i32>:word32] = r3_246 - r5_247
	Mem251[r21_178 + 44<i32>:word32] = r0
	r3_120 = 0<32>
l00001D60_ds_f:
	Mem253[r21_178 + 88<i32>:word32] = r19_132
l00001D64:
l00001D68:
	word32 r4_423
	word32 r5_424
	fn00001A68(r0, r21_178, 0xFFFFFFFB<32>, 0xFFFF9C34<32>, out r4_423, out r5_424, out r6_119)
	word32 r25_271 = r25_159 - Mem266[r21_178 + 100<i32>:word32]
	r4_117 = Mem266[r21_178 + 96<i32>:word32] - r25_271
	Mem273[r21_178:word32] = r25_271
	Mem274[r21_178 + 4<i32>:word32] = r4_117
	r7 = 0xFFFF9C34<32>
	r3_120 = 0<32>
l00001D94:
	r4Out = r4_117
	r6Out = r6_119
	r7Out = r7
	return r3_120
fn00001BBC_exit:


word32 fn00001E88(word32 r0, word32 r5, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002274
// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut: r3 r4 r6 r7 r8
// Trashed: C r18 r3 r4 r5 r6 r7 r8
// Preserved: r0 r1 r15 r19 r21 r22 r23 r24 r25 r26
fn00001E88_entry:
	word32 r6
	word32 r7
	word32 r8
l00001E88:
	word32 r3_131
	word32 r4_128
	word32 r3_21 = Mem19[r5 + 24<i32>:word32]
	word32 r19_101 = r5
	branch Test(EQ,r3_21) l00001EB8_ds_t
l00001EB8_ds_t:
l00001F20:
	word32 r24_24 = Mem19[r5 + 28<i32>:word32]
	fn00018918()
	Mem28[r5 + 32<i32>:word32] = r3_21
	fn00018918()
	branch Test(GE,r3_21 | -r3_21) l00001F50_ds_t
l00001F50_ds_t:
	Mem33[r5 + 36<i32>:word32] = r3_21
l00001F50_ds_f:
	Mem34[r5 + 36<i32>:word32] = r3_21
l00001F54:
	word32 r4_37 = ~(r3_21 | -r3_21)
	branch Test(NE,r4_37 >>u 31<i32>) l00001FE4_ds_t
l00001FE4_ds_t:
	r8 = 0x38<32>
l00002224:
	fn000188F0()
	fn000188F0()
	word32 r5_578
	fn00001A68(r0, r5, 0xFFFFFFFC<32>, 0xFFFF9C90<32>, out r4_128, out r5_578, out r6)
	r7 = 0xFFFF9C90<32>
	r3_131 = 0xFFFFFFFF<32>
l00001FE4_ds_f:
l00001FE8:
	Mem92[r5 + 24<i32>:word32] = r24_24
	Mem93[r5 + 116<i32>:word32] = r4_37 >>u 31<i32>
	Mem94[r5 + 120<i32>:word32] = r4_37 >>u 31<i32>
	Mem95[r5 + 124<i32>:word32] = r4_37 >>u 31<i32>
	Mem96[r5 + 88<i32>:word32] = r4_37 >>u 31<i32>
	Mem97[r5 + 84<i32>:word32] = r4_37 >>u 31<i32>
	fnFFFFC654()
	branch Test(EQ,r3_109) l00001EBC
l0000201C:
	fn000188F0()
	fn000188F0()
	Mem124[r19_101 + 24<i32>:word32] = r21_104
	word32 r5_579
	fn00001A68(r0, r19_101, 0xFFFFFFFC<32>, 0xFFFF9C90<32>, out r4_128, out r5_579, out r6)
	r7 = 0xFFFF9C90<32>
	r3_131 = 0xFFFFFFFF<32>
l00001EB8_ds_f:
l00001EBC:
	word32 r22_135 = Mem134[r19_101 + 88<i32>:word32]
	branch 1<32> -u r22_135 >= 0<32> l00002054
l00002054:
	word32 r3_138 = Mem134[r19_101 + 76<i32>:word32]
	r4_128 = -r3_138 | r3_138
	branch Test(GE,r4_128) l00002064_ds_t
l00002064_ds_t:
l00002064_ds_f:
l00002068:
	word32 r3_144 = -(r3_138 ^ 0xFFFFFFFB<32>) | r3_138 ^ 0xFFFFFFFB<32>
	r4_128 = r3_144 >>u 31<i32>
	branch Test(NE,r3_144 >>u 31<i32>) l000020F4_ds_t
l000020F4_ds_t:
	r3_131 = 0xFFFFFFFF<32>
l000020F4_ds_f:
l000020F8:
	word32 r3_181 = Mem134[r19_101 + 52<i32>:word32]
	branch Test(NE,r3_181) l000021CC
l000021CC:
	branch Test(EQ,r22_135) l000021D0_ds_t
l000021D0_ds_t:
	r3_131 = 0<32>
l000021D0_ds_f:
l00002100:
	word32 r26_185
	branch Test(EQ,r22_135) l00002104_ds_t
l00002104_ds_t:
	r26_185 = Mem134[r19_101 + 32<i32>:word32]
l00002104_ds_f:
	word32 r26_186 = Mem134[r19_101 + 32<i32>:word32]
l00002108:
	r3_181 = CONVERT(Mem134[Mem134[r19_101 + 84<i32>:word32]:byte], byte, word32)
	Mem191[r26_186:byte] = SLICE(r3_181, byte, 0)
	r26_185 = Mem191[r19_101 + 32<i32>:word32]
	r22_135 = Mem191[r19_101 + 88<i32>:word32]
l0000211C:
	word32 r21_198 = 0<32>
	word32 r24_200 = Mem195[r19_101 + 24<i32>:word32] - r22_135
l0000213C:
	word32 r6_203 = r22_135 + r21_198
	r7 = r24_200 - r21_198
	branch 0<32> -u r7 >= 0<32> l0000214C_ds_t
l0000214C_ds_t:
	r6 = r26_185 + r6_203
l0000214C_ds_f:
	r6 = r26_185 + r6_203
l00002150:
	r7 = 0<32>
l00002154:
	fn000190F0()
	branch Test(GT,r3_181) l00002164_ds_t
l00002164_ds_t:
	r21_198 = r21_198 + r3_181
l00002134:
	branch r21_198 -u r24_200 >= 0<32> l00002178
l00002164_ds_f:
	word32 r21_224 = r21_198 + r3_181
l00002168:
	branch Test(NE,r3_181) l0000216C_ds_t
l0000216C_ds_t:
l00002258:
	word32 r5_580
	fn00001A68(r0, r19_101, 0xFFFFFFFF<32>, 0xFFFF9C4C<32>, out r4_128, out r5_580, out r6)
	r7 = 0xFFFF9C4C<32>
	r3_131 = 0xFFFFFFFF<32>
l0000216C_ds_f:
	r21_198 = r21_224 - r3_181
l00002170:
	Mem242[r19_101 + 52<i32>:word32] = 1<32>
l00002178:
	r4_128 = Mem244[r19_101 + 32<i32>:word32]
	r22_135 = r21_198 + Mem244[r19_101 + 88<i32>:word32]
	Mem249[r19_101 + 84<i32>:word32] = r4_128
	branch Test(EQ,r22_135) l0000218C_ds_t
l0000218C_ds_t:
	Mem250[r19_101 + 88<i32>:word32] = r22_135
l0000218C_ds_f:
	Mem251[r19_101 + 88<i32>:word32] = r22_135
l00002190:
	branch Test(EQ,r22_135 ^ 1<32>) l000021D4
l000021D4:
	branch Test(EQ,Mem254[r19_101 + 40<i32>:word32]) l000021DC_ds_t
l000021DC_ds_t:
l000021DC_ds_f:
	r22_135 = 1<32>
l000021E0:
	r6 = Mem254[r19_101 + 84<i32>:word32]
	Mem260[r19_101 + 4<i32>:word32] = Mem254[r19_101 + 36<i32>:word32]
l00002198:
	r6 = Mem251[r19_101 + 84<i32>:word32]
l00001ECC:
	r6 = Mem134[r19_101 + 84<i32>:word32]
l00001ED0:
	branch Test(EQ,CONVERT(Mem264[r6:byte], byte, word32) ^ 0x1F<32>) l000021A0
l000021A0:
	branch Test(NE,CONVERT(Mem264[r6 + 1<i32>:byte], byte, word32) ^ 0x8B<32>) l00001EDC
l000021AC:
	fnFFFFC324()
	Mem321[r19_303 + 44<i32>:word32] = 2<32>
	Mem322[r19_303 + 40<i32>:word32] = r21_306
	r3_131 = r21_306
l00001EDC:
	branch Test(NE,Mem264[r19_101 + 40<i32>:word32]) l00002218
l00002218:
	Mem328[r19_101 + 4<i32>:word32] = Mem264[r19_101 + 36<i32>:word32]
l000021EC:
	fn00018C34()
	r4_128 = Mem334[r19_101 + 88<i32>:word32]
	Mem337[r19_101 + 44<i32>:word32] = 1<32>
	Mem338[r19_101:word32] = r4_128
	Mem342[r19_101 + 88<i32>:word32] = r0
	Mem343[r19_101 + 40<i32>:word32] = 1<32>
	r7 = r22_135
l00002210:
	r3_131 = 0<32>
l00001EE4:
	Mem348[r19_101 + 88<i32>:word32] = r0
	Mem349[r19_101 + 52<i32>:word32] = 1<32>
	Mem350[r19_101:word32] = r0
	r4_128 = 1<32>
	r3_131 = 0<32>
l00001EF8:
	r4Out = r4_128
	r6Out = r6
	r7Out = r7
	r8Out = r8
	return r3_131
fn00001E88_exit:


word32 fn00002274(word32 r0, word32 r5, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000023C8
//      fn00003674
//      fn0000371C
// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut: r3 r4 r6 r7 r8
// Trashed: r18 r3 r4 r5 r6 r7 r8
// Preserved: C r1 r15 r19 r21 r22 r23
fn00002274_entry:
	word32 r6
	word32 r7
	word32 r8
l00002274:
l00002290:
	word32 r3_102
	word32 r3_18 = Mem17[r5 + 44<i32>:word32]
	word32 r4_19 = r3_18 ^ 1<32>
	branch Test(EQ,r3_18 ^ 1<32>) l0000229C_ds_t
l0000229C_ds_t:
l0000233C:
	word32 r21_21 = Mem17[r5 + 24<i32>:word32]
	word32 r23_22 = Mem17[r5 + 36<i32>:word32]
	Mem26[r5:word32] = r3_18 ^ 1<32>
	r7 = r3_18 ^ 1<32>
l00002370:
	r6 = r23_22 + r7
	r7 = r21_21 * 2<32> - r7
	branch 0<32> -u r7 >= 0<32> l00002384
l00002380:
	r7 = 0<32>
l00002384:
	fn000190F0()
	branch Test(GT,r3_18) l0000235C
l0000235C:
	r7 = r3_18 + Mem39[r5:word32]
	branch r7 -u r21_21 * 2<32> >= 0<32> l0000236C_ds_t
l0000236C_ds_t:
	Mem47[r5:word32] = r7
l0000236C_ds_f:
	Mem48[r5:word32] = r7
l00002394:
	branch Test(NE,r3_18) l000023AC
l000023AC:
	word32 r5_234
	fn00001A68(r0, r5, 0xFFFFFFFF<32>, 0xFFFF9C4C<32>, out r4_19, out r5_234, out r6)
	r7 = 0xFFFF9C4C<32>
	r3_102 = 0xFFFFFFFF<32>
l00002398:
	Mem62[r5 + 52<i32>:word32] = 1<32>
l000023A0:
	r4_19 = Mem64[r5 + 36<i32>:word32]
	Mem66[r5 + 4<i32>:word32] = r4_19
l0000229C_ds_f:
l000022A0:
	branch Test(EQ,r3_18 ^ 2<32>) l0000230C
l0000230C:
	word32 r3_68 = Mem17[r5 + 24<i32>:word32]
	Mem72[r5 + 96<i32>:word32] = Mem17[r5 + 36<i32>:word32]
	Mem74[r5 + 100<i32>:word32] = r3_68 * 2<32>
	branch Test(NE,~fn00001BBC(r0, r5, out r4_19, out r6, out r7)) l00002330_ds_t
l00002330_ds_t:
l00002330_ds_f:
	r3_102 = 0xFFFFFFFF<32>
l00002334:
l000022A4:
	branch Test(EQ,r3_18) l000022E4
l000022E4:
	branch Test(EQ,~fn00001E88(r0, r5, out r4_19, out r6, out r7, out r8)) l000022F4_ds_t
l000022F4_ds_t:
	r3_102 = 0xFFFFFFFF<32>
l000022F4_ds_f:
l000022F8:
	branch Test(NE,Mem17[r5 + 44<i32>:word32]) l00002300_ds_t
l00002300_ds_t:
l00002300_ds_f:
	r3_102 = 0<32>
l00002304:
l000022A8:
	branch Test(NE,Mem105[r5:word32]) l000022B0_ds_t
l000022B0_ds_t:
	r3_102 = 0<32>
l000022B0_ds_f:
l000022B4:
	branch Test(EQ,Mem105[r5 + 52<i32>:word32]) l00002290
l000022BC:
	branch Test(NE,Mem105[r5 + 88<i32>:word32]) l00002290
l000022C4:
	r3_102 = 0<32>
l000022C8:
l000022CC:
	r4Out = r4_19
	r6Out = r6
	r7Out = r7
	r8Out = r8
	return r3_102
fn00002274_exit:


word32 fn000023C8(word32 r0, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3 r4 r6 r7
// Trashed: C r18 r3 r4 r5 r6 r7 r8
// Preserved: r0 r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28
fn000023C8_entry:
	word32 r4
l000023C8:
	branch Test(EQ,r5) l000027B0
l000027B0:
	r4Out = r4
	r6Out = r6
	r7Out = r7
	return 0xFFFFFFFF<32>
l000023CC:
	word32 r3_215
	branch Test(NE,Mem25[r5 + 12<i32>:word32] ^ 0x1C4F<32>) l00002404_ds_t
l00002404_ds_t:
l0000278C:
	r3_215 = 0xFFFFFFFF<32>
l00002404_ds_f:
l00002408:
	word32 r3_31 = Mem25[r5 + 76<i32>:word32]
	word32 r24_168 = r6
	r4 = -r3_31 | r3_31
	branch Test(GE,r4) l0000241C_ds_t
l0000241C_ds_t:
l0000241C_ds_f:
l00002420:
	word32 r3_41 = -(r3_31 ^ 0xFFFFFFFB<32>) | r3_31 ^ 0xFFFFFFFB<32>
	r4 = r3_41 >>u 31<i32>
	branch Test(NE,r3_41 >>u 31<i32>) l000024B0_ds_t
l000024B0_ds_t:
	r3_215 = 0xFFFFFFFF<32>
l000024B0_ds_f:
l000024B4:
	word32 r22_165 = r7
	branch Test(LT,r7) l000024B8_ds_t
l000024B8_ds_t:
l0000277C:
	word32 r6_860
	word32 r4_858
	word32 r5_859
	fn00001A68(r0, r5, 0xFFFFFFFE<32>, 0xFFFF9CA8<32>, out r4_858, out r5_859, out r6_860)
l000024B8_ds_f:
l000024BC:
	branch Test(EQ,r7) l000024C0_ds_t
l000024C0_ds_t:
	r3_215 = 0<32>
l000024C0_ds_f:
l000024C4:
	word32 r21_102
	branch Test(NE,Mem25[r5 + 72<i32>:word32]) l000026D8
l000026D8:
	word32 r23_101 = Mem25[r5 + 68<i32>:word32]
	Mem94[r5 + 72<i32>:word32] = r0
	branch Test(EQ,r23_101) l000026E4_ds_t
l000026E4_ds_t:
	r21_102 = Mem94[r5:word32]
l000026E4_ds_f:
	r21_102 = Mem94[r5:word32]
l000026E8:
	branch Test(EQ,r21_102) l000026EC_ds_t
l000026EC_ds_t:
l000026EC_ds_f:
l000026F0:
	word32 r5_111
	branch r23_101 < r21_102 l000026F8_ds_t
l000026F8_ds_t:
l000026F8_ds_f:
l000026FC:
	branch Test(LT,r21_102) l0000275C
l0000275C:
	r5_111 = r23_101
	r21_102 = r21_102 - r23_101
	r23_101 = 0<32>
l00002700:
	r23_101 = r23_101 - r21_102
	r5_111 = r21_102
	r21_102 = 0<32>
l0000270C:
	word32 r4_119 = Mem117[r5 + 4<i32>:word32]
	word32 r3_120 = Mem117[r5 + 8<i32>:word32]
	Mem122[r5:word32] = r21_102
	r4 = r4_119 + r5_111
	Mem127[r5 + 4<i32>:word32] = r4
	word32 r3_126 = r3_120 + r5_111
	branch Test(EQ,r23_101) l00002728_ds_t
l00002728_ds_t:
	Mem129[r5 + 8<i32>:word32] = r3_126
l00002728_ds_f:
	Mem130[r5 + 8<i32>:word32] = r3_126
l0000272C:
	branch Test(NE,r21_102) l00002730_ds_t
l00002730_ds_t:
l00002730_ds_f:
l00002734:
	branch Test(EQ,Mem134[r5 + 52<i32>:word32]) l00002744
l0000273C:
	branch Test(EQ,Mem134[r5 + 88<i32>:word32]) l000024D0
l00002744:
	word32 r8_863
	branch Test(EQ,~fn00002274(r0, r5, out r4, out r6, out r7, out r8_863)) l000025B0
l00002754:
	r21_102 = Mem134[r5:word32]
l000024CC:
	r21_102 = Mem25[r5:word32]
l000024D0:
	word32 r26_163
	word32 r23_159 = 0<32>
	branch Test(EQ,r21_102) l000024E0_ds_t
l000024E0_ds_t:
	r26_163 = 1<32>
l000024E0_ds_f:
	r26_163 = 1<32>
l000024E4:
	branch r22_165 -u r21_102 >= 0<32> l000024EC_ds_t
l000024EC_ds_t:
l000024EC_ds_f:
l000024F0:
	r21_102 = r22_165
l000024F4:
	r6 = Mem177[r5 + 4<i32>:word32]
	fn00018C34()
	word32 r3_187 = Mem177[r5:word32] - r21_102
	Mem188[r5 + 4<i32>:word32] = Mem177[r5 + 4<i32>:word32] + r21_102
	Mem189[r5:word32] = r3_187
	r7 = r21_102
	r22_165 = r22_165 - r21_102
	r24_168 = r24_168 + r21_102
l00002524:
	r4 = Mem191[r5 + 8<i32>:word32]
	r23_159 = r23_159 + r21_102
	word32 r21_196 = r4 + r21_102
	branch Test(EQ,r22_165) l00002534_ds_t
l00002534_ds_t:
	Mem198[r5 + 8<i32>:word32] = r21_196
l00002534_ds_f:
	Mem199[r5 + 8<i32>:word32] = r21_196
l00002538:
	r21_102 = Mem201[r5:word32]
	branch Test(NE,r21_102) l000024E4
l00002540:
	branch Test(EQ,Mem205[r5 + 52<i32>:word32]) l00002554
l00002548:
	branch Test(EQ,Mem205[r5 + 88<i32>:word32]) l00002550_ds_t
l00002550_ds_t:
l00002768:
	Mem210[r5 + 56<i32>:word32] = 1<32>
l0000276C:
	branch Test(EQ,r23_159) l00002770_ds_t
l00002770_ds_t:
l00002770_ds_f:
	r3_215 = r23_159
l00002774:
l00002550_ds_f:
l00002554:
	word32 r3_233 = Mem205[r5 + 44<i32>:word32]
	branch Test(EQ,r3_233) l000025A0
l0000255C:
	branch r22_165 -u Mem205[r5 + 24<i32>:word32] * 2<32> < 0<32> l0000256C_ds_t
l0000256C_ds_t:
l000025A0:
	word32 r8_861
	branch Test(NE,~fn00002274(r0, r5, out r4, out r6, out r7, out r8_861)) l00002538
l0000256C_ds_f:
l00002570:
	branch Test(EQ,r3_233 ^ 1<32>) l00002574_ds_t
l00002574_ds_t:
l00002690:
	word32 r28_270 = r24_168 + r21_102
	word32 r27_268 = r22_165 - r21_102
	r6 = r28_270
	branch 0<32> -u r27_268 >= 0<32> l000026A4_ds_t
l000026A4_ds_t:
	r7 = r27_268
l000026A4_ds_f:
l000026A8:
	r7 = 0<32>
l000026AC:
	fn000190F0()
	branch Test(GT,r3_233 ^ 1<32>) l000026BC_ds_t
l000026BC_ds_t:
	r21_102 = r21_102 + (r3_233 ^ 1<32>)
l00002688:
	branch r21_102 -u r22_165 >= 0<32> l00002594
l000026BC_ds_f:
	word32 r21_289 = r21_102 + (r3_233 ^ 1<32>)
l000026C0:
	branch Test(NE,r3_233 ^ 1<32>) l000026C4_ds_t
l000026C4_ds_t:
l00002794:
	word32 r5_865
	word32 r4_864
	fn00001A68(r0, r5, 0xFFFFFFFF<32>, 0xFFFF9C4C<32>, out r4_864, out r5_865, out r6)
	r7 = 0xFFFF9C4C<32>
	r4 = Mem205[r5 + 76<i32>:word32]
l000026C4_ds_f:
	r21_102 = r21_289 - (r3_233 ^ 1<32>)
l000026C8:
	Mem310[r5 + 52<i32>:word32] = r26_163
	r24_168 = r28_270
	r22_165 = r27_268
l00002574_ds_f:
l00002578:
	Mem316[r5 + 100<i32>:word32] = r22_165
	Mem331[r5 + 96<i32>:word32] = r24_168
	word32 r4_862
	branch Test(EQ,~fn00001BBC(r0, r5, out r4_862, out r6, out r7)) l000025B0
l000025B0:
	r4 = Mem342[r5 + 76<i32>:word32]
l000025B4:
	word32 r5_346 = r4 ^ 0xFFFFFFFB<32>
	branch Test(GE,-r5_346 | r5_346) l000025C4_ds_t
l000025C4_ds_t:
l000025C4_ds_f:
	word32 r3_350 = -r4
l000025C8:
	r4 = r3_350 | r4
	branch Test(NE,r4 >>u 31<i32>) l00002650_ds_t
l00002650_ds_t:
	r3_215 = 0xFFFFFFFF<32>
l00002650_ds_f:
l00002654:
	r3_215 = 0<32>
l00002658:
l0000265C:
	r4Out = r4
	r6Out = r6
	r7Out = r7
	return r3_215
fn000023C8_exit:
l0000258C:
	r21_102 = Mem331[r5:word32]
	Mem412[r5:word32] = r0
l00002594:
	r22_165 = r22_165 - r21_102
	r24_168 = r24_168 + r21_102


word32 fn00003674(word32 r0, word32 r3, word32 r5, word32 r6, word32 r19, word32 r23, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008038
//      fn00008234
// MayUse:  r0:[0..31] r19:[0..31] r23:[0..31] r3:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r0 r19 r22 r4 r8
// Trashed: r0 r1 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r3 r4 r5 r6 r7 r8
// Preserved:
fn00003674_entry:
	word32 dwArg1C
	word32 dwArg24
	word32 r4
	word32 r8
l00003674:
	word32 r3_104
	word32 r4_107
	branch Test(NE,r3) l00003678_ds_t
l00003678_ds_t:
l000037BC:
	word32 r21_17 = Mem0[r5 + 68<i32>:word32]
	Mem10[r5 + 72<i32>:word32] = r0
	branch Test(EQ,r21_17) l000037C8_ds_t
l000037C8_ds_t:
l000037C8_ds_f:
l000037CC:
	r4 = Mem14[r19:word32]
	branch Test(EQ,r4) l000037D8_ds_t
l000037D8_ds_t:
l0000376C:
	branch Test(EQ,Mem14[r19 + 52<i32>:word32]) l0000377C
l00003774:
	branch Test(EQ,Mem14[r19 + 88<i32>:word32]) l0000367C
l0000377C:
	word32 r4_27
	word32 r6_252
	word32 r7_253
	branch Test(NE,~fn00002274(r0, r19, out r4_27, out r6_252, out r7_253, out r8)) l000037CC
l00003788_thunk_fn0000378C:
	word32 r19_34
	word32 r22_36
	word32 r4_254
	word32 r8_255
	word32 r21_256
	word32 r23_257
	word32 r24_258
	fn0000378C(out r4_254, out r8_255, out r19_34, out r21_256, out r22_36, out r23_257, out r24_258)
	r4Out = r4_27
	r8Out = r8
	r19Out = r19_34
	r22Out = r22_36
	return r0
l000037D8_ds_f:
	word32 r3_43 = r21_17
l000037DC:
	word32 r4_47
	branch Test(LT,r4) l00003820
l000037E0:
	branch r21_17 < r4 l00003820
l00003820:
	r4_47 = r4 - r21_17
	r21_17 = 0<32>
l000037E8:
	r21_17 = r21_17 - r4
	r3_43 = r4
	r4_47 = 0<32>
l000037F4:
	word32 r6_57 = Mem14[r19 + 4<i32>:word32]
	word32 r5_58 = Mem14[r19 + 8<i32>:word32]
	Mem60[r19:word32] = r4_47
	word32 r4_63 = r6_57 + r3_43
	Mem65[r19 + 4<i32>:word32] = r4_63
	r3_104 = r5_58 + r3_43
	branch Test(NE,r21_17) l00003810_ds_t
l00003810_ds_t:
	Mem67[r19 + 8<i32>:word32] = r3_104
l00003810_ds_f:
	Mem68[r19 + 8<i32>:word32] = r3_104
l00003814:
	branch Test(EQ,r23) l00003814_thunk_fn0000378C
l00003814_thunk_fn0000378C:
	word32 r23_250
	word32 r19_75
	word32 r22_77
	word32 r8_248
	word32 r4_247
	word32 r21_249
	word32 r24_251
	fn0000378C(out r4_247, out r8_248, out r19_75, out r21_249, out r22_77, out r23_250, out r24_251)
	r4Out = r4_63
	r8Out = r8
	r19Out = r19_75
	r22Out = r22_77
	return r0
l00003818:
	r4_107 = Mem68[r19:word32]
l00003678_ds_f:
l0000367C:
	branch Test(EQ,r23) l00003680_ds_t
l00003680_ds_t:
l00003790_in_fn00003674:
	r4Out = r4
	r8Out = r8
	r19Out = dwArg1C
	r22Out = dwArg24
	return r0
l00003680_ds_f:
	r3_104 = 0<32>
l00003684:
	r4_107 = Mem93[r19:word32]
l00003688:
l0000368C_thunk_fn00003728:
	word32 r24_246
	word32 r23_245
	word32 r19_127
	word32 r22_129
	word32 r4_136
	word32 r8_140
	word32 r21_244
	word32 r0_124 = fn00003728(r0, r3_104, r4_107, r19, r23, r6, r6, out r4_136, out r8_140, out r19_127, out r21_244, out r22_129, out r23_245, out r24_246)
	r4Out = r4_136
	r8Out = r8_140
	r19Out = r19_127
	r22Out = r22_129
	return r0_124
fn00003674_exit:


word32 fn0000371C(word32 r0, word32 r3, word32 r4, word32 r6, word32 r19, word32 r22, word32 r23, word32 r25, word32 r26, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00005F20
//      fn00008E80
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r25:[0..31] r26:[0..31] r3:[0..31] r4:[0..31] r6:[0..31]
// LiveOut: r19 r21 r23 r24 r4 r8
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn0000371C_entry:
l0000371C:
	word32 r22_5 = r22 | r6
	branch Test(LT,r22_5) l00003724_ds_t
l0000371C_ds_t:
l0000371C_thunk_fn00003728:
	word32 r19_17
	word32 r21_18
	word32 r23_20
	word32 r24_21
	word32 r4_26
	word32 r8_30
	word32 r22_129
	fn00003728(r0, r3, r4, r19, r23, r25, r26, out r4_26, out r8_30, out r19_17, out r21_18, out r22_129, out r23_20, out r24_21)
	r8Out = r8_30
	r19Out = r19_17
	r21Out = r21_18
	r23Out = r23_20
	r24Out = r24_21
	return r4_26
l0000371C_ds_f:
	word32 r22_31 = r22_5 | r6
l00003720:
	branch Test(LT,r22_31) l00003724_ds_t
l00003724_ds_t:
	word32 r3_32 = r26 ^ r25
l00003724_thunk_fn00003728:
	word32 r19_36
	word32 r21_37
	word32 r23_39
	word32 r24_40
	word32 r4_45
	word32 r8_49
	word32 r22_131
	fn00003728(r0, r3_32, r4, r19, r23, r25, r26, out r4_45, out r8_49, out r19_36, out r21_37, out r22_131, out r23_39, out r24_40)
	r8Out = r8_49
	r19Out = r19_36
	r21Out = r21_37
	r23Out = r23_39
	r24Out = r24_40
	return r4_45
l00003724_ds_f:
	word32 r3_50 = r26 ^ r25
l00003724_thunk_fn00003728:
	word32 r19_54
	word32 r21_55
	word32 r23_57
	word32 r24_58
	word32 r4_63
	word32 r8_67
	word32 r22_128
	fn00003728(r0, r3_50, r4, r19, r23, r25, r26, out r4_63, out r8_67, out r19_54, out r21_55, out r22_128, out r23_57, out r24_58)
	r8Out = r8_67
	r19Out = r19_54
	r21Out = r21_55
	r23Out = r23_57
	r24Out = r24_58
	return r4_63
l00003724_ds_t:
	word32 r3_68 = r26 ^ r25
l00003724_thunk_fn00003728:
	word32 r19_72
	word32 r21_73
	word32 r23_75
	word32 r24_76
	word32 r4_81
	word32 r8_85
	word32 r22_130
	fn00003728(r0, r3_68, r4, r19, r23, r25, r26, out r4_81, out r8_85, out r19_72, out r21_73, out r22_130, out r23_75, out r24_76)
	r8Out = r8_85
	r19Out = r19_72
	r21Out = r21_73
	r23Out = r23_75
	r24Out = r24_76
	return r4_81
l00003724_ds_f:
	word32 r3_86 = r26 ^ r25
l00003724_thunk_fn00003728:
	word32 r19_90
	word32 r21_91
	word32 r23_93
	word32 r24_94
	word32 r4_99
	word32 r8_103
	word32 r22_127
	fn00003728(r0, r3_86, r4, r19, r23, r25, r26, out r4_99, out r8_103, out r19_90, out r21_91, out r22_127, out r23_93, out r24_94)
	r8Out = r8_103
	r19Out = r19_90
	r21Out = r21_91
	r23Out = r23_93
	r24Out = r24_94
	return r4_99
fn0000371C_exit:


word32 fn00003728(word32 r0, word32 r3, word32 r4, word32 r19, word32 r23, word32 r25, word32 r26, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003674
//      fn0000371C
//      fn0000378C
// MayUse:  r0:[0..31] r19:[0..31] r23:[0..31] r25:[0..31] r26:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r4 r8
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn00003728_entry:
l00003728:
	branch Test(NE,r4) l0000372C_ds_t
l0000372C_ds_t:
l00003694:
l0000372C_ds_f:
l00003730:
	word32 r4_169
	word32 r6_170
	word32 r7_171
	word32 r8_172
	branch Test(EQ,~fn00002274(r0, r19, out r4_169, out r6_170, out r7_171, out r8_172)) l00003740_ds_t
l00003740_ds_t:
l00003740_thunk_fn0000378C:
	word32 r4_21
	word32 r19_22
	word32 r21_31
	word32 r22_32
	word32 r23_33
	word32 r24_34
	word32 r8_37
	word32 r0_30 = fn0000378C(out r4_21, out r8_37, out r19_22, out r21_31, out r22_32, out r23_33, out r24_34)
	r4Out = r4_21
	r8Out = r8_37
	r19Out = r19_22
	r21Out = r21_31
	r22Out = r22_32
	r23Out = r23_33
	r24Out = r24_34
	return r0_30
l00003740_ds_f:
	r3 = 0<32>
l00003744:
	r4 = Mem0[r19:word32]
	branch Test(NE,r4) l0000374C_ds_t
l0000374C_ds_t:
l00003698:
	word32 r21_46
	branch r4 -u r23 >= 0<32> l000036A0_ds_t
l000036A0_ds_t:
	r21_46 = r23
l000036A0_ds_f:
l000036A4:
	r21_46 = r4
l000036A8:
	word32 r24_53 = Mem0[r19 + 4<i32>:word32]
	fn00018C94()
	branch Test(EQ,r3) l000036CC_ds_t
l000036CC_ds_t:
l000036CC_ds_f:
	word32 r24_68 = r3 - r24_53
l000036D0:
	r21_46 = r24_68 + 1<32>
l000036D4:
	fn00018C34()
	word32 r5_86 = Mem0[r19 + 4<i32>:word32] + r21_46
	word32 r21_87 = Mem0[r19 + 8<i32>:word32] + r21_46
	Mem89[r19:word32] = Mem0[r19:word32] - r21_46
	Mem90[r19 + 4<i32>:word32] = r5_86
	Mem91[r19 + 8<i32>:word32] = r21_87
	word32 r23_74 = r23 - r21_46
	branch Test(GE,-r23_74 | r23_74) l0000371C_ds_t
l0000374C_ds_f:
l00003750:
	Mem95[r19 + 56<i32>:word32] = 1<32>
l00003758:
	word32 r3_97 = r26 ^ r25
l0000375C:
	branch Test(EQ,r3_97) l00003760_ds_t
l00003760_ds_t:
l00003760_thunk_fn0000378C:
	word32 r4_100
	word32 r19_101
	word32 r21_110
	word32 r22_111
	word32 r23_112
	word32 r24_113
	word32 r8_116
	word32 r0_109 = fn0000378C(out r4_100, out r8_116, out r19_101, out r21_110, out r22_111, out r23_112, out r24_113)
	r4Out = r4_100
	r8Out = r8_116
	r19Out = r19_101
	r21Out = r21_110
	r22Out = r22_111
	r23Out = r23_112
	r24Out = r24_113
	return r0_109
l00003760_ds_f:
l00003764:
	Mem119[r26:byte] = SLICE(r0, byte, 0)
l00003764_thunk_fn0000378C:
	word32 r4_121
	word32 r19_122
	word32 r21_131
	word32 r22_132
	word32 r23_133
	word32 r24_134
	word32 r8_137
	word32 r0_130 = fn0000378C(out r4_121, out r8_137, out r19_122, out r21_131, out r22_132, out r23_133, out r24_134)
	r4Out = r4_121
	r8Out = r8_137
	r19Out = r19_122
	r21Out = r21_131
	r22Out = r22_132
	r23Out = r23_133
	r24Out = r24_134
	return r0_130
fn00003728_exit:


word32 fn0000378C(ptr32 & r4Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003674
//      fn00003728
// MayUse: 
// LiveOut: r0 r19 r21 r22 r23 r24 r4 r8
// Trashed: r15 r19 r21 r22 r23 r24 r25 r26 r27 r3
// Preserved: r1
fn0000378C_entry:
	word32 r0
	word32 r3
	word32 r4
	word32 r19
	word32 r23
	word32 r25
	word32 r26
l0000378C_thunk_fn00003728:
	word32 r19_18
	word32 r21_19
	word32 r22_20
	word32 r23_21
	word32 r24_22
	word32 r4_44
	word32 r8_45
	fn00003728(r0, r3, r4, r19, r23, r25, r26, out r4_44, out r8_45, out r19_18, out r21_19, out r22_20, out r23_21, out r24_22)
	r4Out = <invalid>
	r8Out = <invalid>
	r19Out = r19_18
	r21Out = r21_19
	r22Out = r22_20
	r23Out = r23_21
	r24Out = r24_22
	return <invalid>
fn0000378C_exit:


word32 fn00003894(word32 r0, word32 r5, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000728
// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut: r3 r6
// Trashed: r3 r4 r6 r7
// Preserved: r1 r15 r19 r21 r22 r5
fn00003894_entry:
	word32 r6
l00003894:
	word32 r21_13
	branch Test(EQ,r5) l000038A8_ds_t
l000038A8_ds_t:
l00003954:
	r21_13 = 0xFFFFFFFE<32>
l000038A8_ds_f:
l000038AC:
	branch Test(NE,Mem14[r5 + 12<i32>:word32] ^ 0x1C4F<32>) l000038B8_ds_t
l000038B8_ds_t:
	r21_13 = 0xFFFFFFFE<32>
l000038B8_ds_f:
l000038BC:
	branch Test(EQ,Mem14[r5 + 24<i32>:word32]) l000038C4_ds_t
l000038C4_ds_t:
l000038EC:
	r21_13 = Mem14[r5 + 76<i32>:word32]
	branch Test(EQ,r21_13 ^ 0xFFFFFFFB<32>) l000038F8_ds_t
l000038F8_ds_t:
l000038F8_ds_f:
l000038FC:
	r21_13 = 0<32>
l00003900:
	word32 r4_96
	word32 r5_97
	word32 r3_33 = fn00001A68(r0, r5, 0<32>, 0<32>, out r4_96, out r5_97, out r6)
	fn000188F0()
	fn00019150()
	fn000188F0()
	branch Test(NE,r3_33) l0000395C
l0000395C:
	r21_13 = 0xFFFFFFFF<32>
l00003938:
	r6Out = r6
	return r21_13
fn00003894_exit:
l000038C4_ds_f:
l000038C8:
	fnFFFFFAFC()
	fn000188F0()
	fn000188F0()


void fn00003964()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003AA4
//      fn00003CA8
//      fn00003EC8
//      fn00005538
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1
// Terminates process
fn00003964_exit:
fn00003964_entry:
l00003964:
	fn00018918()


word32 fn00003990(word32 r0, word32 r3, word32 r19, word32 r23, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r19Out, ptr32 & r20Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00005F20
//      fn0000889C
//      fn00008E80
// MayUse:  r0:[0..31] r19:[0..31] r23:[0..31] r3:[0..31]
// LiveOut: r0 r10 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 r4 r5 r6 r7 r8 r9
// Trashed: r15 r19 r21 r22 r23 r3 r4 r5 r6 r7
// Preserved: r0 r1 r10 r8 r9
fn00003990_entry:
	word32 r4
	word32 r5
	word32 r6
	word32 r7
l00003990:
	branch Test(EQ,r3) l00003994_ds_t
l00003994_ds_t:
	Mem5[r19 + 32<i32>:word32] = r3
l00003994_ds_f:
	Mem6[r19 + 32<i32>:word32] = r3
l00003998:
	word32 r21_7 = Mem6[r19 + 40<i32>:word32]
	branch Test(EQ,r21_7) l000039C4
l000039C4:
	fn00018918()
	branch Test(EQ,r3) l000039D8_ds_t
l000039D8_ds_t:
	Mem12[r19 + 36<i32>:word32] = r3
l000039D8_thunk_fn00003A60:
	fn00003A60()
l000039D8_ds_f:
	Mem13[r19 + 36<i32>:word32] = r3
l000039DC:
	word32 r10_15 = Mem13[r19 + 64<i32>:word32]
	word32 r6_16 = Mem13[r19 + 60<i32>:word32]
	Mem22[r19 + 116<i32>:word32] = r21_7
	Mem23[r19 + 120<i32>:word32] = r21_7
	Mem24[r19 + 124<i32>:word32] = r21_7
	word32 r3_29 = fn0000B514(r19 + 0x54<32>, r6_16, 8<32>, 0x1F<32>, 8<32>, r10_15, 0xFFFF9D1C<32>, 0x38<32>, out r6, out r7, out r19)
	branch Test(NE,r3_29) l00003A1C_ds_t
l00003A1C_ds_t:
l00003A88:
	fn000188F0()
	fn000188F0()
l00003A6C:
	fn00001A68(r0, r19, 0xFFFFFFFC<32>, 0xFFFF9D0C<32>, out r4, out r5, out r6)
	r7 = 0xFFFF9D0C<32>
l00003A1C_ds_f:
	r4 = r3_29
l00003A20:
	r5 = Mem24[r19 + 28<i32>:word32]
	word32 r3_61 = Mem24[r19 + 40<i32>:word32]
	Mem62[r19 + 84<i32>:word32] = r3_29
	branch Test(NE,r3_61) l00003A30_ds_t
l00003A30_ds_t:
	Mem63[r19 + 24<i32>:word32] = r5
l00003A30_ds_f:
	Mem64[r19 + 24<i32>:word32] = r5
l00003A34:
	word32 r4_65 = Mem64[r19 + 36<i32>:word32]
	Mem66[r19 + 100<i32>:word32] = r5
	Mem67[r19 + 96<i32>:word32] = r4_65
	Mem68[r19 + 4<i32>:word32] = r4_65
	r4Out = r4_65
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r19Out = <invalid>
	r20Out = <invalid>
	r21Out = <invalid>
	r22Out = <invalid>
	r23Out = <invalid>
	r24Out = <invalid>
	r25Out = <invalid>
	r26Out = <invalid>
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return <invalid>
l000039A0:
	Mem75[r19 + 24<i32>:word32] = r23
l000039A4:
l000039A8:
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r19Out = <invalid>
	r20Out = <invalid>
	r21Out = <invalid>
	r22Out = <invalid>
	r23Out = <invalid>
	r24Out = <invalid>
	r25Out = <invalid>
	r26Out = <invalid>
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return <invalid>
fn00003990_exit:


void fn00003A60()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003990
//      fn00008E80
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1
// Terminates process
fn00003A60_exit:
fn00003A60_entry:
l00003A60:
	fn000188F0()


word32 fn00003AA4(word32 r0, word32 r5, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003EAC
//      fn00003EC8
// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut: r0 r19 r21 r23 r24 r3 r4 r6 r7
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r3 r4 r5 r6 r7
// Preserved: r1
fn00003AA4_entry:
	word32 r4
	word32 r6
	word32 r8
	word32 r9
	word32 r10
l00003AA4:
	word32 r3_17 = Mem15[r5 + 24<i32>:word32]
	branch Test(EQ,r3_17) l00003AC8_ds_t
l00003AC8_ds_t:
l00003C18:
	fn00003964()
l00003AC8_ds_f:
l00003ACC:
	word32 r7_112
	word32 r4_128
	word32 r6_130
	word32 r7_117
	Mem25 = Mem15
	word32 r19_104 = r5
	branch Test(EQ,Mem25[r5 + 40<i32>:word32]) l00003AD4_ds_t
l00003AD4_ds_t:
	word32 r24_109 = r5 + 0x54<32>
l00003B64:
	word32 r3_134 = Mem25[r5 + 100<i32>:word32]
	word32 r22_107 = 0<32>
l00003B70:
	word32 r21_57
	branch Test(EQ,r3_134) l00003B74_ds_t
l00003B74_ds_t:
l00003BBC:
	word32 r3_62
	word32 r7_34 = Mem33[r19_104 + 96<i32>:word32]
	word32 r3_35 = Mem33[r19_104 + 4<i32>:word32]
	branch r3_35 -u r7_34 < 0<32> l00003BCC_ds_t
l00003BCC_ds_t:
	word32 r7_37 = r7_34 - r3_35
l00003BF4:
	branch r22_107 >= r7_37 l00003BFC_ds_t
l00003BFC_ds_t:
l00003BFC_ds_f:
l00003C00:
l00003C04:
	fn0001908C()
	branch Test(GE,r3_35) l00003BD8
l00003BD8:
	word32 r7_53 = Mem49[r19_104 + 96<i32>:word32]
	r3_35 = Mem49[r19_104 + 4<i32>:word32] + r3_35
	branch r3_35 -u r7_53 >= 0<32> l00003BEC_ds_t
l00003BEC_ds_t:
	Mem56[r19_104 + 4<i32>:word32] = r3_35
l00003C34:
	r21_57 = Mem56[r19_104 + 100<i32>:word32]
	branch Test(NE,r21_57) l00003C3C_ds_t
l00003C3C_ds_t:
l00003C3C_ds_f:
l00003C40:
	r3_62 = Mem56[r19_104 + 36<i32>:word32]
l00003BEC_ds_f:
	Mem63[r19_104 + 4<i32>:word32] = r3_35
l00003BF0:
	r7_37 = r7_53 - r3_35
l00003C14:
l00003BCC_ds_f:
l00003BD0:
	r3_62 = Mem33[r19_104 + 36<i32>:word32]
l00003C44:
	r21_57 = Mem68[r19_104 + 24<i32>:word32]
	Mem71[r19_104 + 96<i32>:word32] = r3_62
	Mem72[r19_104 + 100<i32>:word32] = r21_57
	Mem73[r19_104 + 4<i32>:word32] = r3_62
l00003B74_ds_f:
	r21_57 = r3_134
l00003B78:
l00003B7C:
	word32 r21_106
	word32 r3_110
	word32 r25_348
	word32 r23_347
	word32 r20_346
	word32 r9_343
	word32 r8_342
	word32 r5_341
	word32 r27_350
	word32 r26_349
	word32 r11_345
	word32 r10_344
	fn00008E80(r24_109, r6, r8, r9, r10, r21_57, out r3_110, out r4, out r5_341, out r6, out r7_112, out r8_342, out r9_343, out r10_344, out r11_345, out r19_104, out r20_346, out r21_106, out r22_107, out r23_347, out r24_109, out r25_348, out r26_349, out r27_350)
	branch Test(EQ,r3_110 ^ 0xFFFFFFFE<32>) l00003C58
l00003C58:
	word32 r5_337
	fn00001A68(r0, r19_104, 0xFFFFFFFE<32>, 0xFFFF9D40<32>, out r4_128, out r5_337, out r6_130)
	r7_117 = 0xFFFF9D40<32>
l00003B8C:
	r3_134 = Mem132[r19_104 + 100<i32>:word32]
	branch Test(NE,r3_134 ^ r21_106) l00003B70
l00003AD4_ds_f:
l00003AD8:
	r7_112 = Mem25[r5 + 88<i32>:word32]
	branch Test(EQ,r7_112) l00003AE0_ds_t
l00003AE0_ds_t:
l00003AE0_ds_f:
l00003AE4:
l00003B10:
	branch 0<32> -u r7_112 >= 0<32> l00003B1C
l00003B18:
l00003B1C:
	fn0001908C()
	branch Test(GE,r3_17) l00003AF4
l00003AF4:
	r7_112 = Mem151[r5 + 88<i32>:word32] - r3_17
	r6 = Mem151[r5 + 84<i32>:word32] + r3_17
	Mem159[r5 + 88<i32>:word32] = r7_112
	branch Test(EQ,r7_112) l00003B0C_ds_t
l00003B0C_ds_t:
	Mem160[r5 + 84<i32>:word32] = r6
l00003B98:
l00003B9C:
	r3Out = 0<32>
	r4Out = r4
	r6Out = r6
	r7Out = r7_112
	r19Out = <invalid>
	r21Out = <invalid>
	r23Out = <invalid>
	r24Out = <invalid>
	return <invalid>
l00003B0C_ds_f:
	Mem175[r5 + 84<i32>:word32] = r6
l00003B2C:
	word32 r5_336
	fn00001A68(r0, r19_104, 0xFFFFFFFF<32>, 0xFFFF9D24<32>, out r4_128, out r5_336, out r6_130)
	r7_117 = 0xFFFF9D24<32>
l00003B44:
l00003B4C:
	r3Out = 0xFFFFFFFF<32>
	r4Out = r4_128
	r6Out = r6_130
	r7Out = r7_117
	r19Out = <invalid>
	r21Out = <invalid>
	r23Out = <invalid>
	r24Out = <invalid>
	return <invalid>
fn00003AA4_exit:


word32 fn00003C74(word32 r5, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003EC8
//      fn00005318
//      fn00005538
// MayUse:  r5:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r3 r4 r6 r7
// Trashed: r15 r18 r19 r21 r22 r23 r24 r25 r26 r3 r4 r5 r6 r7
// Preserved: r1
fn00003C74_entry:
	word32 r6
	word32 r0
	word32 r3
l00003C74:
	branch Test(NE,Mem19[r5 + 88<i32>:word32]) l00003CA4_ds_t
l00003CA4_ds_t:
l00003CA4_thunk_fn00003EAC:
	word32 r19_26
	word32 r23_27
	word32 r21_29
	word32 r22_30
	word32 r24_31
	word32 r6_36
	word32 r4_37
	word32 r7_39
	r3Out = fn00003EAC(r0, r3, r5, r6, out r4_37, out r6_36, out r7_39, out r19_26, out r21_29, out r22_30, out r23_27, out r24_31)
	r4Out = r4_37
	r6Out = r6_36
	r7Out = r7_39
	r19Out = r19_26
	r21Out = r21_29
	r22Out = r22_30
	r23Out = r23_27
	r24Out = r24_31
	return <invalid>
l00003CA4_ds_f:
l00003CA4_thunk_fn00003CA8:
	word32 r19_42
	word32 r23_43
	word32 r21_45
	word32 r22_46
	word32 r24_47
	word32 r6_52
	word32 r4_53
	word32 r7_55
	r3Out = fn00003CA8(r0, r5, r6, out r4_53, out r6_52, out r7_55, out r19_42, out r21_45, out r22_46, out r23_43, out r24_47)
	r4Out = r4_53
	r6Out = r6_52
	r7Out = r7_55
	r19Out = r19_42
	r21Out = r21_45
	r22Out = r22_46
	r23Out = r23_43
	r24Out = r24_47
	return <invalid>
fn00003C74_exit:


void fn00003C90(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E80
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r19 r23 r25 r26 r3 r5 r6
// Preserved: r1
fn00003C90_entry:
	word32 r0
	word32 r3
	word32 r19
	word32 r23
l00003C90:
	branch Test(NE,Mem6[r5 + 88<i32>:word32]) l00003CA4_ds_t
l00003CA4_ds_t:
l00003CA4_thunk_fn00003EAC:
	word32 r4_47
	word32 r6_48
	word32 r7_49
	word32 r19_50
	word32 r21_51
	word32 r22_52
	word32 r23_53
	word32 r24_54
	fn00003EAC(r0, r3, r19, r23, out r4_47, out r6_48, out r7_49, out r19_50, out r21_51, out r22_52, out r23_53, out r24_54)
	return
l00003CA4_ds_f:
l00003CA4_thunk_fn00003CA8:
	word32 r4_55
	word32 r6_56
	word32 r7_57
	word32 r19_58
	word32 r21_59
	word32 r22_60
	word32 r23_61
	word32 r24_62
	fn00003CA8(r0, r19, r23, out r4_55, out r6_56, out r7_57, out r19_58, out r21_59, out r22_60, out r23_61, out r24_62)
	return
fn00003C90_exit:


word32 fn00003CA8(word32 r0, word32 r19, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003C74
//      fn00003C90
// MayUse:  r0:[0..31] r19:[0..31] r23:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r3 r4 r6 r7
// Trashed: r15 r18 r19 r21 r22 r23 r24 r25 r26 r3 r4 r5 r6 r7
// Preserved: r1
fn00003CA8_entry:
l00003CA8:
l00003CA8_thunk_fn00003CAC:
	word32 r19_8
	word32 r21_9
	word32 r22_10
	word32 r23_11
	word32 r24_12
	word32 r4_16
	word32 r6_19
	word32 r7_20
	word32 r3_15 = fn00003CAC(r0, r19, r23, out r4_16, out r6_19, out r7_20, out r19_8, out r21_9, out r22_10, out r23_11, out r24_12)
	r4Out = r4_16
	r6Out = r6_19
	r7Out = r7_20
	r19Out = r19_8
	r21Out = r21_9
	r22Out = r22_10
	r23Out = r23_11
	r24Out = r24_12
	return r3_15
fn00003CA8_exit:


word32 fn00003CAC(word32 r0, word32 r19, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003CA8
//      fn00003EAC
// MayUse:  r0:[0..31] r19:[0..31] r23:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r3 r4 r6 r7
// Trashed: r15 r18 r19 r21 r22 r23 r24 r25 r26 r3 r4 r5 r6 r7
// Preserved: r1
fn00003CAC_entry:
	word32 r6
	word32 r7
l00003CAC:
	branch Test(EQ,r23) l00003CBC_ds_t
l00003CBC_ds_t:
l00003CBC_thunk_fn00003DD4:
	word32 r19_38
	word32 r21_39
	word32 r22_40
	word32 r23_41
	word32 r24_42
	word32 r3_45 = fn00003DD4(out r19_38, out r21_39, out r22_40, out r23_41, out r24_42)
	r4Out = 1<32>
	r6Out = r6
	r7Out = r7
	r19Out = r19_38
	r21Out = r21_39
	r22Out = r22_40
	r23Out = r23_41
	r24Out = r24_42
	return r3_45
l00003CBC_ds_f:
l00003CBC_thunk_fn00003CC0:
	word32 r19_51
	word32 r21_52
	word32 r22_53
	word32 r23_54
	word32 r24_55
	word32 r4_59
	word32 r6_61
	word32 r7_62
	word32 r3_58 = fn00003CC0(r0, 1<32>, r19, 0<32>, r23, 0<32>, out r4_59, out r6_61, out r7_62, out r19_51, out r21_52, out r22_53, out r23_54, out r24_55)
	r4Out = r4_59
	r6Out = r6_61
	r7Out = r7_62
	r19Out = r19_51
	r21Out = r21_52
	r22Out = r22_53
	r23Out = r23_54
	r24Out = r24_55
	return r3_58
fn00003CAC_exit:


word32 fn00003CC0(word32 r0, word32 r4, word32 r19, word32 r21, word32 r23, word32 r24, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003CA8
//      fn00003CAC
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r23:[0..31] r24:[0..31] r4:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r3 r4 r6 r7
// Trashed: r15 r18 r19 r21 r22 r23 r24 r25 r26 r3 r4 r5 r6 r7
// Preserved: r0 r1
fn00003CC0_entry:
	word32 r6
	word32 r7
	word32 r5
	word32 r8
	word32 r9
	word32 r10
	r6_172 = r6
l00003CC0:
	word32 r22_10
	word32 r6_172
	word32 r3_29 = Mem4[r19 + 24<i32>:word32]
	branch r23 < r3_29 l00003DDC
l00003CCC:
	branch Test(LT,r3_29) l00003CD0_ds_t
l00003CD0_ds_t:
l00003DDC:
	r22_10 = r23
l00003CD0_ds_f:
	r22_10 = r3_29
l00003CD4:
	word32 r5_19
	branch Test(EQ,r4) l00003CD8_ds_t
l00003CD8_ds_t:
	r5_19 = Mem4[r19 + 32<i32>:word32]
l00003CD8_ds_f:
l00003CDC:
	fn00018C64()
	r7 = r22_10
	r6_172 = r24
	r5_19 = Mem4[r19 + 32<i32>:word32]
	r3_29 = Mem4[r19 + 24<i32>:word32]
l00003CF4:
	word32 r4_32 = Mem4[r19 + 8<i32>:word32]
	Mem34[r19 + 88<i32>:word32] = r22_10
	Mem36[r19 + 84<i32>:word32] = r5_19
	word32 r4_37 = r4_32 + r22_10
	branch Test(EQ,r3_29) l00003D08_ds_t
l00003D08_ds_t:
	Mem41[r19 + 8<i32>:word32] = r4_37
l00003E40:
	fn00003964()
l00003D08_ds_f:
	Mem56[r19 + 8<i32>:word32] = r4_37
l00003D0C:
	Mem58 = Mem56
	word32 r3_59 = Mem58[r19 + 40<i32>:word32]
	branch Test(EQ,r3_59) l00003D9C
l00003D9C:
	word32 r3_120 = Mem58[r19 + 100<i32>:word32]
l00003DA0:
	word32 r26_100
	branch Test(EQ,r3_120) l00003DA4_ds_t
l00003DA4_ds_t:
l00003DE4:
	word32 r3_109
	word32 r7_65 = Mem64[r19 + 96<i32>:word32]
	r3_120 = Mem64[r19 + 4<i32>:word32]
	branch r3_120 -u r7_65 < 0<32> l00003DF4_ds_t
l00003DF4_ds_t:
	word32 r7_68 = r7_65 - r3_120
l00003E1C:
	branch r21 >= r7_68 l00003E24_ds_t
l00003E24_ds_t:
l00003E24_ds_f:
l00003E28:
l00003E2C:
	fn0001908C()
	branch Test(GE,r3_120) l00003E00
l00003E00:
	r7 = Mem80[r19 + 96<i32>:word32]
	r3_120 = Mem80[r19 + 4<i32>:word32] + r3_120
	branch r3_120 -u r7 >= 0<32> l00003E14_ds_t
l00003E14_ds_t:
	Mem87[r19 + 4<i32>:word32] = r3_120
l00003E5C:
	r26_100 = Mem87[r19 + 100<i32>:word32]
	branch Test(NE,r26_100) l00003E64_ds_t
l00003E64_ds_t:
l00003E64_ds_f:
l00003E68:
	r3_109 = Mem87[r19 + 36<i32>:word32]
l00003E14_ds_f:
	Mem94[r19 + 4<i32>:word32] = r3_120
l00003E18:
	r7_68 = r7 - r3_120
l00003E3C:
l00003DF4_ds_f:
	r7 = r7_65 - r3_120
l00003DF8:
	r3_109 = Mem64[r19 + 36<i32>:word32]
l00003E6C:
	r26_100 = Mem99[r19 + 24<i32>:word32]
	Mem110[r19 + 96<i32>:word32] = r3_109
	Mem111[r19 + 100<i32>:word32] = r26_100
	Mem113[r19 + 4<i32>:word32] = r3_109
	word32 r26_389
	word32 r27_390
	word32 r25_388
	word32 r24_387
	word32 r23_386
	word32 r22_385
	word32 r19_382
	word32 r20_383
	word32 r21_384
	word32 r11_381
	word32 r6_376
	word32 r8_378
	word32 r9_379
	word32 r10_380
	word32 r7_377
	word32 r5_375
	word32 r4_374
	word32 r3_373
	fn00008E80(r5, r6, r8, r9, r10, r21, out r3_373, out r4_374, out r5_375, out r6_376, out r7_377, out r8_378, out r9_379, out r10_380, out r11_381, out r19_382, out r20_383, out r21_384, out r22_385, out r23_386, out r24_387, out r25_388, out r26_389, out r27_390)
	branch Test(NE,r3_109 ^ 0xFFFFFFFE<32>) l00003DBC
l00003DA4_ds_f:
	r26_100 = r3_120
l00003DA8:
l00003DAC:
	word32 r23_367
	word32 r26_370
	word32 r24_368
	word32 r27_371
	word32 r25_369
	word32 r22_366
	word32 r21_365
	word32 r3_354
	word32 r8_359
	word32 r9_360
	word32 r6_357
	word32 r19_363
	word32 r4_355
	word32 r5_356
	word32 r7_358
	word32 r20_364
	word32 r10_361
	word32 r11_362
	fn00008E80(r5, r6, r8, r9, r10, r21, out r3_354, out r4_355, out r5_356, out r6_357, out r7_358, out r8_359, out r9_360, out r10_361, out r11_362, out r19_363, out r20_364, out r21_365, out r22_366, out r23_367, out r24_368, out r25_369, out r26_370, out r27_371)
	branch Test(EQ,r3_120 ^ 0xFFFFFFFE<32>) l00003E90
l00003E90:
	word32 r4_135
	word32 r6_137
	word32 r5_372
	fn00001A68(r0, r19, 0xFFFFFFFE<32>, 0xFFFF9D40<32>, out r4_135, out r5_372, out r6_137)
l00003EA4_thunk_fn00003DD4:
	word32 r19_140
	word32 r21_141
	word32 r22_142
	word32 r23_143
	word32 r24_144
	word32 r3_147 = fn00003DD4(out r19_140, out r21_141, out r22_142, out r23_143, out r24_144)
	r4Out = r4_135
	r6Out = r6_137
	r7Out = 0xFFFF9D40<32>
	r19Out = r19_140
	r21Out = r21_141
	r22Out = r22_142
	r23Out = r23_143
	r24Out = r24_144
	return r3_147
l00003DBC:
	r3_120 = Mem149[r19 + 100<i32>:word32]
	r6_172 = r24
	branch Test(NE,r3_120 ^ r26_100) l00003DA0
l00003D14:
	r7 = Mem58[r19 + 88<i32>:word32]
	branch Test(EQ,r7) l00003DC8
l00003D1C:
l00003D40:
	branch r21 -u r7 >= 0<32> l00003D4C
l00003D48:
l00003D4C:
	fn0001908C()
	branch Test(GE,r3_59) l00003D24
l00003D24:
	r7 = Mem165[r19 + 88<i32>:word32] - r3_59
	r6_172 = Mem165[r19 + 84<i32>:word32] + r3_59
	Mem173[r19 + 88<i32>:word32] = r7
	branch Test(EQ,r7) l00003D3C_ds_t
l00003D3C_ds_t:
	Mem174[r19 + 84<i32>:word32] = r6_172
l00003DC8:
	r23 = r23 - r22_10
	branch Test(NE,r23) l00003DD0_ds_t
l00003DD0_ds_t:
	r4 = r24
l00003DD0_ds_f:
l00003DD0_thunk_fn00003DD4:
	word32 r19_205
	word32 r21_206
	word32 r22_207
	word32 r23_208
	word32 r24_209
	word32 r3_212 = fn00003DD4(out r19_205, out r21_206, out r22_207, out r23_208, out r24_209)
	r4Out = r24
	r6Out = r6_172
	r7Out = r7
	r19Out = r19_205
	r21Out = r21_206
	r22Out = r22_207
	r23Out = r23_208
	r24Out = r24_209
	return r3_212
l00003D3C_ds_f:
	Mem213[r19 + 84<i32>:word32] = r6_172
l00003D5C:
	word32 r5_349
	word32 r4_224
	word32 r6_226
	fn00001A68(r0, r19, 0xFFFFFFFF<32>, 0xFFFF9D24<32>, out r4_224, out r5_349, out r6_226)
l00003D70_thunk_fn00003D74:
	word32 r21_231
	word32 r22_232
	word32 r23_233
	word32 r24_234
	word32 r19_230 = fn00003D74(out r21_231, out r22_232, out r23_233, out r24_234)
	r4Out = r4_224
	r6Out = r6_226
	r7Out = 0xFFFF9D24<32>
	r19Out = r19_230
	r21Out = r21_231
	r22Out = r22_232
	r23Out = r23_233
	r24Out = r24_234
	return 0xFFFFFFFF<32>
fn00003CC0_exit:


word32 fn00003D74(ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003CA8
//      fn00003DD4
//      fn00003EAC
// MayUse: 
// LiveOut: r19 r21 r22 r23 r24
// Trashed: r1 r15 r19 r21 r22 r23 r24 r25 r26
// Preserved:
fn00003D74_entry:
	word32 dwArg1C
	word32 dwArg20
	word32 dwArg24
	word32 dwArg28
	word32 dwArg2C
l00003D74:
l00003D78:
	r21Out = dwArg20
	r22Out = dwArg24
	r23Out = dwArg28
	r24Out = dwArg2C
	return dwArg1C
fn00003D74_exit:


word32 fn00003DD4(ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003CA8
//      fn00003CAC
// MayUse: 
// LiveOut: r19 r21 r22 r23 r24 r3
// Trashed: r15 r19 r21 r22 r23 r24 r25 r26 r3
// Preserved: r1
fn00003DD4_entry:
l00003DD4:
l00003DD4_thunk_fn00003D74:
	word32 r21_7
	word32 r22_8
	word32 r23_9
	word32 r24_10
	r19Out = fn00003D74(out r21_7, out r22_8, out r23_9, out r24_10)
	r21Out = r21_7
	r22Out = r22_8
	r23Out = r23_9
	r24Out = r24_10
	return 0<32>
fn00003DD4_exit:


word32 fn00003EAC(word32 r0, word32 r3, word32 r19, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003C74
//      fn00003C90
// MayUse:  r0:[0..31] r19:[0..31] r23:[0..31] r3:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r3 r4 r6 r7
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r3 r4 r5 r6 r7
// Preserved: r1
fn00003EAC_entry:
	word32 r5
l00003EAC:
	word32 r4_46
	word32 r6_49
	word32 r7_50
	word32 r3_78
	word32 r19_79
	word32 r21_80
	word32 r23_81
	word32 r24_82
	fn00003AA4(r0, r5, out r3_78, out r4_46, out r6_49, out r7_50, out r19_79, out r21_80, out r23_81, out r24_82)
	branch Test(NE,~r3) l00003EBC_ds_t
l00003EBC_ds_t:
l00003EBC_thunk_fn00003CAC:
	word32 r19_13
	word32 r21_14
	word32 r22_15
	word32 r23_16
	word32 r24_17
	word32 r4_21
	word32 r6_24
	word32 r7_25
	word32 r3_20 = fn00003CAC(r0, r19, r23, out r4_21, out r6_24, out r7_25, out r19_13, out r21_14, out r22_15, out r23_16, out r24_17)
	r4Out = r4_21
	r6Out = r6_24
	r7Out = r7_25
	r19Out = r19_13
	r21Out = r21_14
	r22Out = r22_15
	r23Out = r23_16
	r24Out = r24_17
	return r3_20
l00003EBC_ds_f:
l00003EC0:
l00003EC0_thunk_fn00003D74:
	word32 r21_31
	word32 r22_32
	word32 r23_33
	word32 r24_34
	word32 r19_30 = fn00003D74(out r21_31, out r22_32, out r23_33, out r24_34)
	r4Out = r4_46
	r6Out = r6_49
	r7Out = r7_50
	r19Out = r19_30
	r21Out = r21_31
	r22Out = r22_32
	r23Out = r23_33
	r24Out = r24_34
	return 0xFFFFFFFF<32>
fn00003EAC_exit:


word32 fn00003EC8(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000041BC
// MayUse:  r0:[0..31] r10:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r0 r10 r11 r20 r3 r4
// Trashed: r0 r10 r11 r12 r18 r20 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25
fn00003EC8_entry:
	word32 r11
	word32 r20
	word32 r4
l00003EC8:
	word32 r3_258
	word32 r21_111
	branch Test(EQ,r7) l00003EE8_ds_t
l00003EE8_ds_t:
l00003EE8_ds_f:
l00003EEC:
	r21_111 = r7
	word32 r19_109 = r5
	branch Test(EQ,Mem19[r5 + 24<i32>:word32]) l00003EFC_ds_t
l00003EFC_ds_t:
l00003FEC:
	fn00003964()
l00003EFC_ds_f:
	word32 r24_27 = r6
l00003F00:
	branch Test(NE,Mem19[r5 + 72<i32>:word32]) l00003FA8
l00003FA8:
	Mem33[r5 + 72<i32>:word32] = r0
	word32 r3_43
	word32 r23_803
	word32 r22_802
	word32 r7_801
	word32 r6_800
	fn00003C74(r5, out r3_43, out r4, out r6_800, out r7_801, out r19_109, out r21_111, out r22_802, out r23_803, out r24_27)
	branch Test(NE,~r3_43) l00003F08
l00003F08:
	word32 r22_315 = Mem50[r19_109 + 24<i32>:word32]
	branch r21_111 -u r22_315 >= 0<32> l00003F14_ds_t
l00003F14_ds_t:
	word32 r5_54 = Mem50[r19_109 + 88<i32>:word32]
l00004004:
	branch Test(NE,r5_54) l000040A0
l000040A0:
	word32 r3_66
	word32 r23_809
	word32 r7_808
	word32 r6_807
	r0 = fn00003AA4(r0, r19_109, out r3_66, out r4, out r6_807, out r7_808, out r19_109, out r21_111, out r23_809, out r24_27)
	branch Test(EQ,~r3_66) l00003FC0
l000040B0:
	r22_315 = Mem50[r19_109 + 24<i32>:word32]
l00004008:
	word32 r3_75 = Mem50[r19_109 + 8<i32>:word32]
	Mem78[r19_109 + 84<i32>:word32] = r24_27
	Mem80[r19_109 + 88<i32>:word32] = r21_111
	Mem82[r19_109 + 8<i32>:word32] = r3_75 + r21_111
	branch Test(EQ,r22_315) l00004020_ds_t
l00004020_ds_t:
l00004150:
	fn00003964()
l00004020_ds_f:
	word32 r24_114 = r19_109 + 0x54<32>
l00004024:
	word32 r25_115 = Mem82[r19_109 + 40<i32>:word32]
	branch Test(EQ,r25_115) l000040B8
l000040B8:
	word32 r3_129
	word32 r22_112
	word32 r6_102
	word32 r23_113 = 0<32>
	branch Test(EQ,Mem82[r19_109 + 100<i32>:word32]) l000040C8_ds_t
l000040C8_ds_t:
l000040C8_ds_f:
l000040CC:
	r6_102 = r25_115
l000040D0:
	word32 r3_120
	word32 r7_821
	word32 r27_823
	word32 r26_822
	word32 r5_819
	word32 r6_820
	r0 = fn00008E80(r24_114, r6_102, r8, r9, r10, r21_111, out r3_120, out r4, out r5_819, out r6_820, out r7_821, out r8, out r9, out r10, out r11, out r19_109, out r20, out r21_111, out r22_112, out r23_113, out r24_114, out r25_115, out r26_822, out r27_823)
	r3_129 = r3_120 ^ 0xFFFFFFFE<32>
	branch Test(EQ,r3_120 ^ 0xFFFFFFFE<32>) l0000419C
l000040E0:
	word32 r3_132 = Mem131[r19_109 + 100<i32>:word32]
	branch Test(EQ,r3_132 ^ r22_112) l00003FC4
l000040EC:
	branch Test(NE,r3_132) l000040F0_ds_t
l000040F0_ds_t:
l000040F0_ds_f:
l000040F4:
	word32 r3_167
	word32 r7_139 = Mem138[r19_109 + 96<i32>:word32]
	word32 r3_140 = Mem138[r19_109 + 4<i32>:word32]
	branch r3_140 -u r7_139 < 0<32> l00004104_ds_t
l00004104_ds_t:
	word32 r7_142 = r7_139 - r3_140
l0000412C:
	branch r23_113 >= r7_142 l00004134_ds_t
l00004134_ds_t:
l00004134_ds_f:
l00004138:
l0000413C:
	fn0001908C()
	branch Test(GE,r3_140) l00004110
l00004110:
	word32 r7_158 = Mem154[r19_109 + 96<i32>:word32]
	r3_140 = Mem154[r19_109 + 4<i32>:word32] + r3_140
	branch r3_140 -u r7_158 >= 0<32> l00004124_ds_t
l00004124_ds_t:
	Mem161[r19_109 + 4<i32>:word32] = r3_140
l00004168:
	branch Test(NE,Mem161[r19_109 + 100<i32>:word32]) l00004170_ds_t
l00004170_ds_t:
	r6_102 = r25_115
l00004170_ds_f:
l00004174:
	r3_167 = Mem161[r19_109 + 36<i32>:word32]
l00004124_ds_f:
	Mem168[r19_109 + 4<i32>:word32] = r3_140
l00004128:
	r7_142 = r7_158 - r3_140
l0000414C:
l00004104_ds_f:
l00004108:
	r3_167 = Mem138[r19_109 + 36<i32>:word32]
l00004178:
	word32 r22_174 = Mem173[r19_109 + 24<i32>:word32]
	Mem186[r19_109 + 96<i32>:word32] = r3_167
	Mem187[r19_109 + 100<i32>:word32] = r22_174
	Mem189[r19_109 + 4<i32>:word32] = r3_167
	word32 r3_236
	word32 r27_818
	word32 r26_817
	word32 r7_816
	word32 r5_814
	word32 r6_815
	r0 = fn00008E80(r24_114, r25_115, r8, r9, r10, r21_111, out r3_236, out r4, out r5_814, out r6_815, out r7_816, out r8, out r9, out r10, out r11, out r19_109, out r20, out r21_111, out r22_112, out r23_113, out r24_114, out r25_115, out r26_817, out r27_818)
	r3_129 = r3_236 ^ 0xFFFFFFFE<32>
	branch Test(NE,r3_236 ^ 0xFFFFFFFE<32>) l000040E0
l0000419C:
	word32 r6_813
	word32 r5_812
	fn00001A68(r0, r19_109, 0xFFFFFFFE<32>, 0xFFFF9D40<32>, out r4, out r5_812, out r6_813)
	r3_258 = r3_129
l0000402C:
	word32 r7_259 = Mem82[r19_109 + 88<i32>:word32]
	branch Test(EQ,r7_259) l00004034_ds_t
l00004034_ds_t:
	r3_258 = r21_111
l00004034_ds_f:
l00004038:
l00004064:
	branch 0<32> -u r7_259 >= 0<32> l00004070
l0000406C:
l00004070:
	fn0001908C()
	branch Test(GE,r21_111) l00004048
l00004048:
	r7_259 = Mem272[r19_109 + 88<i32>:word32] - r21_111
	word32 r6_279 = Mem272[r19_109 + 84<i32>:word32] + r21_111
	Mem280[r19_109 + 88<i32>:word32] = r7_259
	branch Test(EQ,r7_259) l00004060_ds_t
l00004060_ds_t:
	Mem281[r19_109 + 84<i32>:word32] = r6_279
l00004060_ds_f:
	Mem282[r19_109 + 84<i32>:word32] = r6_279
l00004080:
	word32 r6_811
	word32 r5_810
	fn00001A68(r0, r19_109, 0xFFFFFFFF<32>, 0xFFFF9D24<32>, out r4, out r5_810, out r6_811)
	r3_258 = 0<32>
l00003F14_ds_f:
	word32 r5_302 = Mem50[r19_109 + 88<i32>:word32]
l00003F18:
	word32 r4_304
	word32 r3_308
	word32 r23_303 = r21_111
	branch Test(EQ,r5_302) l00003F20_ds_t
l00003F20_ds_t:
	r4_304 = Mem50[r19_109 + 32<i32>:word32]
l00003F20_ds_f:
	r4_304 = Mem50[r19_109 + 32<i32>:word32]
l00003F24:
	r3_308 = Mem307[r19_109 + 84<i32>:word32]
l00003F28:
	word32 r22_316 = r22_315 - ((r3_308 + r5_302) - r4_304)
	branch r23_303 -u r22_316 >= 0<32> l00003F40_ds_t
l00003F40_ds_t:
l00003F40_ds_f:
l00003F44:
	r22_316 = r23_303
l00003F48:
	fn00018C34()
	r4 = Mem333[r19_109 + 88<i32>:word32] + r22_316
	word32 r22_338 = Mem333[r19_109 + 8<i32>:word32] + r22_316
	Mem339[r19_109 + 88<i32>:word32] = r4
	branch Test(EQ,r23_303 - r22_316) l00003F78_ds_t
l00003F78_ds_t:
	Mem340[r19_109 + 8<i32>:word32] = r22_338
l00003F78_ds_f:
	Mem341[r19_109 + 8<i32>:word32] = r22_338
l00003F7C:
	word32 r3_353
	word32 r7_805
	word32 r24_806
	word32 r6_804
	r0 = fn00003AA4(r0, r19_109, out r3_353, out r4, out r6_804, out r7_805, out r19_109, out r21_111, out r23_303, out r24_806)
	branch Test(EQ,~r3_353) l00003FC0
l00003FC0:
	r21_111 = 0<32>
l00003FC4:
	r3_258 = r21_111
l00003FC8:
	r3Out = r3_258
	r4Out = r4
	r10Out = r10
	r11Out = r11
	r20Out = r20
	return r0
fn00003EC8_exit:
l00003F8C:
	r5_302 = Mem341[r19_109 + 88<i32>:word32]
	r22_315 = Mem341[r19_109 + 24<i32>:word32]
	branch Test(NE,r5_302) l00003F98_ds_t
l00003F98_ds_t:
	r4_304 = Mem341[r19_109 + 32<i32>:word32]
l00003F98_ds_f:
	r4_304 = Mem341[r19_109 + 32<i32>:word32]
l00003F9C:
	Mem395[r19_109 + 84<i32>:word32] = r4_304
	r3_308 = r4_304


word32 fn000041BC(word32 r0, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
// MayUse:  r0:[0..31] r10:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: r0 r10 r11 r20 r3 r4
// Trashed: r0 r10 r11 r12 r18 r20 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15
fn000041BC_entry:
	word32 r11
	word32 r20
	word32 r4
l000041BC:
	branch Test(EQ,r5) l00004200
l00004200:
	r3Out = r5
	r4Out = r4
	r10Out = r10
	r11Out = r11
	r20Out = r20
	return r0
l000041C0:
	word32 r8_6 = Mem0[r5 + 12<i32>:word32]
	branch Test(EQ,r8_6 ^ 0x79B1<32>) l000041CC_ds_t
l000041CC_ds_t:
l000041D8:
	word32 r3_9 = Mem0[r5 + 76<i32>:word32]
	branch Test(NE,r3_9) l00004208
l00004208:
	r3Out = r8_6 ^ 0x79B1<32>
	r4Out = r4
	r10Out = r10
	r11Out = r11
	r20Out = r20
	return r0
l000041E0:
	word32 r4_21
	word32 r3_24
	branch Test(LT,r7) l000041E8_ds_t
l000041E8_ds_t:
l00004210:
	word32 r5_111
	word32 r6_112
	fn00001A68(r0, r5, 0xFFFFFFFD<32>, 0xFFFF9D68<32>, out r4_21, out r5_111, out r6_112)
	r3_24 = r3_9
l000041E8_ds_f:
l000041EC:
	r0 = fn00003EC8(r0, r5, r6, r7, r8_6 ^ 0x79B1<32>, r9, r10, out r3_24, out r4_21, out r10, out r11, out r20)
l000041F4:
	r3Out = r3_24
	r4Out = r4_21
	r10Out = r10
	r11Out = r11
	r20Out = r20
	return r0
l000041CC_ds_f:
l000041D0:
	r3Out = 0<32>
	r4Out = r4
	r10Out = r10
	r11Out = r11
	r20Out = r20
	return r0
fn000041BC_exit:


word32 fn00005318(word32 r0, word32 r5, word32 r6, word32 r7, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00005B0C
//      fn00005F20
//      fn00008038
//      fn00008234
//      fn00008E80
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r6 r7
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r3 r4 r5 r6 r7
// Preserved: r1
fn00005318_entry:
	word32 dwLoc20
	word32 dwLoc1C
	word32 dwLoc18
	word32 dwLoc14
	word32 dwLoc10
	word32 dwLoc0C
	word32 dwLoc08
	word32 dwLoc04
	word32 r8
	word32 r9
	word32 r10
	word32 r21
l00005318:
	word32 r23_147
	word32 r3_287
	branch Test(EQ,r5) l00005330_ds_t
l00005330_ds_t:
l00005330_ds_f:
l00005334:
	branch Test(NE,Mem16[r5 + 12<i32>:word32] ^ 0x79B1<32>) l00005340_ds_t
l00005340_ds_t:
	r23_147 = 0xFFFFFFFE<32>
l00005340_ds_f:
l00005344:
	r23_147 = Mem16[r5 + 76<i32>:word32]
	branch Test(NE,r23_147) l00005518
l00005518:
	r23_147 = 0xFFFFFFFE<32>
l0000534C:
	branch Test(EQ,Mem16[r5 + 60<i32>:word32] ^ r6) l000054B4
l000054B4:
	branch Test(NE,Mem16[r5 + 64<i32>:word32] ^ r7) l000054C0_ds_t
l000054C0_ds_t:
l000054C0_ds_f:
	r3_287 = r23_147
l000054C4:
l00005358:
	word32 r19_102
	word32 r22_198 = r7
	word32 r21_208 = r6
	branch Test(NE,Mem16[r5 + 72<i32>:word32]) l00005368_ds_t
l00005368_ds_t:
l000053AC:
	Mem44[r5 + 72<i32>:word32] = r0
	word32 r3_59
	word32 r4_498
	word32 r24_499
	r0 = fn00003C74(r5, out r3_59, out r4_498, out r6, out r7, out r19_102, out r21_208, out r22_198, out r23_147, out r24_499)
	branch Test(NE,~r3_59) l0000536C
l000053C0:
	r23_147 = Mem44[r19_102 + 76<i32>:word32]
l00005368_ds_f:
	r19_102 = r5
l0000536C:
	branch Test(NE,Mem72[r19_102 + 24<i32>:word32]) l000053C8
l000053C8:
	word32 r24_167
	word32 r7_74 = Mem72[r19_102 + 88<i32>:word32]
	branch Test(EQ,r7_74) l000053D0_ds_t
l000053D0_ds_t:
	r24_167 = r19_102 + 0x54<32>
l000053D0_ds_f:
	r24_167 = r19_102 + 0x54<32>
l000053D4:
	word32 r3_227 = Mem72[r19_102 + 40<i32>:word32]
	branch Test(NE,r3_227) l000053DC_ds_t
l000053DC_ds_t:
l000054CC:
l000054F8:
	branch 0<32> -u r7_74 >= 0<32> l00005504
l00005500:
l00005504:
	fn0001908C()
	branch Test(GE,r3_227) l000054DC
l000054DC:
	r7_74 = Mem89[r19_102 + 88<i32>:word32] - r3_227
	word32 r6_96 = Mem89[r19_102 + 84<i32>:word32] + r3_227
	Mem97[r19_102 + 88<i32>:word32] = r7_74
	branch Test(EQ,r7_74) l000054F4_ds_t
l000054F4_ds_t:
	Mem98[r19_102 + 84<i32>:word32] = r6_96
l000054F4_ds_f:
	Mem99[r19_102 + 84<i32>:word32] = r6_96
l00005514:
l000053DC_ds_f:
	word32 r26_100 = 5<32>
l000053E0:
	word32 r25_101 = 0<32>
l000053E8:
	word32 r27_127
	word32 r5_104 = Mem103[r19_102 + 96<i32>:word32]
	word32 r7_105 = Mem103[r19_102 + 4<i32>:word32]
	branch r7_105 -u r5_104 < 0<32> l000053F8_ds_t
l000053F8_ds_t:
l00005420:
	branch r25_101 >= r5_104 - r7_105 l00005430
l0000542C:
l00005430:
	fn0001908C()
	branch Test(GE,r3_227) l00005404
l00005404:
	r5_104 = Mem118[r19_102 + 96<i32>:word32]
	r7_105 = Mem118[r19_102 + 4<i32>:word32] + r3_227
	branch r7_105 -u r5_104 >= 0<32> l00005418_ds_t
l00005418_ds_t:
	Mem126[r19_102 + 4<i32>:word32] = r7_105
l0000545C:
	r27_127 = Mem126[r19_102 + 100<i32>:word32]
l00005418_ds_f:
	Mem128[r19_102 + 4<i32>:word32] = r7_105
l0000541C:
l00005440:
	word32 r4_516
	word32 r5_517
	fn00001A68(r0, r19_102, 0xFFFFFFFF<32>, 0xFFFF9D24<32>, out r4_516, out r5_517, out r6)
	r7 = 0xFFFF9D24<32>
	r23_147 = Mem146[r19_102 + 76<i32>:word32]
l000053F8_ds_f:
l000053FC:
	r27_127 = Mem103[r19_102 + 100<i32>:word32]
l00005460:
	branch Test(NE,r27_127) l00005464_ds_t
l00005464_ds_t:
l00005464_ds_f:
l00005468:
	word32 r3_159 = Mem158[r19_102 + 36<i32>:word32]
	word32 r27_160 = Mem158[r19_102 + 24<i32>:word32]
	Mem161[r19_102 + 96<i32>:word32] = r3_159
	Mem162[r19_102 + 100<i32>:word32] = r27_160
	Mem163[r19_102 + 4<i32>:word32] = r3_159
l0000547C:
	word32 r27_204
	word32 r3_205
	word32 r20_512
	word32 r23_513
	word32 r11_511
	word32 r10_510
	word32 r9_509
	word32 r4_504
	word32 r6_506
	word32 r5_505
	word32 r7_507
	word32 r8_508
	r0 = fn00008E80(r24_167, r26_100, r8, r9, r10, r21, out r3_205, out r4_504, out r5_505, out r6_506, out r7_507, out r8_508, out r9_509, out r10_510, out r11_511, out r19_102, out r20_512, out r21_208, out r22_198, out r23_513, out r24_167, out r25_101, out r26_100, out r27_204)
	branch Test(EQ,r3_205 ^ 0xFFFFFFFE<32>) l0000548C_ds_t
l0000548C_ds_t:
l00005520:
	word32 r5_515
	word32 r4_514
	fn00001A68(r0, r19_102, 0xFFFFFFFE<32>, 0xFFFF9D40<32>, out r4_514, out r5_515, out r6)
	r7 = 0xFFFF9D40<32>
	r23_147 = Mem223[r19_102 + 76<i32>:word32]
l0000548C_ds_f:
l00005490:
	r3_227 = Mem223[r19_102 + 100<i32>:word32] ^ r27_204
	branch Test(NE,r3_227) l000053E8
l0000549C:
	word32 r21_274
	r0 = fn0000AFBC(r0, r24_167, r21_208, r22_198, out r6, out r7, out r19_102, out r21_274, out r22_198, out r23_147)
	Mem280[r19_102 + 60<i32>:word32] = r21_274
l00005374:
	Mem281[r19_102 + 60<i32>:word32] = r21_208
l00005378:
	Mem284[r19_102 + 64<i32>:word32] = r22_198
l0000537C:
	r3_287 = r23_147
l00005384:
	r3Out = r3_287
	r6Out = r6
	r7Out = r7
	r19Out = dwLoc20
	r21Out = dwLoc1C
	r22Out = dwLoc18
	r23Out = dwLoc14
	r24Out = dwLoc10
	r25Out = dwLoc0C
	r26Out = dwLoc08
	r27Out = dwLoc04
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	return r0
fn00005318_exit:


word32 fn00005538(word32 r0, word32 r5, word32 r8, word32 r9, word32 r10, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000728
// MayUse:  r0:[0..31] r10:[0..31] r5:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r3 r6
// Trashed: r18 r26 r3 r4 r5 r6 r7
// Preserved: C r0 r1 r10 r11 r12 r15 r19 r20 r21 r22 r23 r24 r25 r27 r28 r29 r30 r31 r8 r9
fn00005538_entry:
	ptr32 fp
	word32 r6
l00005538:
	branch Test(EQ,r5) l00005808
l00005808:
	r6Out = r6
	return 0xFFFFFFFE<32>
l0000553C:
	word32 r3_23
	word32 r1_145 = fp + 0xFFFFFFC8<32>
	word32 r3_20 = Mem19[r5 + 12<i32>:word32]
	branch Test(NE,r3_20 ^ 0x79B1<32>) l00005568_ds_t
l00005568_ds_t:
l000057F0:
	r3_23 = 0xFFFFFFFE<32>
l00005568_ds_f:
	word32 r19_126 = r5
l0000556C:
	word32 r21_114
	word32 r22_156
	branch Test(NE,Mem19[r5 + 72<i32>:word32]) l00005764
l00005764:
	Mem28[r5 + 72<i32>:word32] = r3_20 ^ 0x79B1<32>
	word32 r3_38
	word32 r24_735
	word32 r23_734
	word32 r22_733
	word32 r21_732
	word32 r7_731
	word32 r6_730
	word32 r4_729
	fn00003C74(r5, out r3_38, out r4_729, out r6_730, out r7_731, out r19_126, out r21_732, out r22_733, out r23_734, out r24_735)
	branch Test(NE,~r3_38) l00005574
l00005778:
	r22_156 = Mem28[r19_126 + 76<i32>:word32]
	branch Test(NE,Mem28[r19_126 + 24<i32>:word32]) l00005784_ds_t
l00005784_ds_t:
	r21_114 = r19_126 + 0x54<32>
l00005784_ds_f:
l00005574:
	r22_156 = 0<32>
	branch Test(EQ,Mem49[r19_126 + 24<i32>:word32]) l00005580_ds_t
l00005580_ds_t:
l00005788:
	fn00003964()
l00005580_ds_f:
	r21_114 = r19_126 + 0x54<32>
l00005584:
	word32 r3_184
	word32 r3_59 = Mem58[r19_126 + 40<i32>:word32]
	branch Test(NE,r3_59) l000056F8
l000056F8:
	word32 r7_60 = Mem58[r19_126 + 88<i32>:word32]
	branch Test(EQ,r7_60) l000057F8
l000057F8:
	branch Test(EQ,Mem58[r19_126 + 24<i32>:word32]) l00005800_ds_t
l00005800_ds_t:
l00005800_ds_f:
l00005804:
l00005700:
l0000572C:
	branch 0<32> -u r7_60 >= 0<32> l00005738
l00005734:
l00005738:
	fn0001908C()
	branch Test(GE,r3_59) l00005748_ds_t
l00005748_ds_t:
l00005710:
	r7_60 = Mem74[r19_126 + 88<i32>:word32] - r3_59
	word32 r6_82 = Mem74[r19_126 + 84<i32>:word32] + r3_59
	Mem83[r19_126 + 88<i32>:word32] = r7_60
	branch Test(EQ,r7_60) l00005728_ds_t
l00005728_ds_t:
	Mem84[r19_126 + 84<i32>:word32] = r6_82
l00005728_ds_f:
	Mem85[r19_126 + 84<i32>:word32] = r6_82
l00005748_ds_f:
l0000574C:
	word32 r5_755
	word32 r4_754
	word32 r6_756
	fn00001A68(r0, r19_126, 0xFFFFFFFF<32>, 0xFFFF9D24<32>, out r4_754, out r5_755, out r6_756)
	r22_156 = Mem74[r19_126 + 76<i32>:word32]
l0000558C:
	word32 r24_104
	word32 r6_112
	word32 r3_106
	word32 r25_100 = Mem58[r19_126 + 100<i32>:word32]
	word32 r23_101 = 0<32>
	branch Test(GE,-r25_100 | r25_100) l000055A4_ds_t
l000055A4_ds_t:
	r24_104 = 4<32>
l000055A4_ds_f:
	r24_104 = 4<32>
l000055A8:
	r3_106 = r3_59 ^ 1<32>
l000055AC:
	branch Test(GE,-r3_106 | r3_106) l000055B8_ds_t
l000055B8_ds_t:
l000055B8_ds_f:
	r6_112 = r24_104
l000055BC:
	word32 r22_129
	word32 r25_132
	word32 r3_137
	word32 r26_742
	word32 r27_743
	word32 r6_738
	word32 r7_739
	word32 r11_740
	word32 r20_741
	word32 r4_736
	word32 r5_737
	r0 = fn00008E80(r21_114, r6_112, r8, r9, r10, r21_114, out r3_137, out r4_736, out r5_737, out r6_738, out r7_739, out r8, out r9, out r10, out r11_740, out r19_126, out r20_741, out r21_114, out r22_129, out r23_101, out r24_104, out r25_132, out r26_742, out r27_743)
	r1_145 = <invalid>
	branch Test(EQ,r3_137 ^ 0xFFFFFFFE<32>) l000057C4
l000057C4:
	word32 r6_746
	word32 r5_745
	word32 r4_744
	fn00001A68(r0, r19_126, 0xFFFFFFFE<32>, 0xFFFF9D40<32>, out r4_744, out r5_745, out r6_746)
	r22_156 = Mem155[r19_126 + 76<i32>:word32]
l000055CC:
	word32 r4_157 = Mem155[r19_126 + 100<i32>:word32]
	branch Test(EQ,r4_157 ^ r25_132) l000055D8_ds_t
l000055D8_ds_t:
l000057E0:
	r0 = fn00008234(r0, r21_114, r22_129, r23_101, out r22_156)
	r3_184 = Mem155[r19_126 + 24<i32>:word32]
l000055D8_ds_f:
	r25_100 = r4_157
l000055DC:
	branch Test(LT,-r4_157 | r4_157) l000055E8_ds_t
l000055E8_ds_t:
	r3_106 = r3_137 ^ 1<32>
l000055E8_ds_f:
l000055EC:
	word32 r7_194 = Mem192[r19_126 + 96<i32>:word32]
	word32 r3_195 = Mem192[r19_126 + 4<i32>:word32]
	branch r3_195 -u r7_194 < 0<32> l000055FC_ds_t
l000055FC_ds_t:
	word32 r7_197 = r7_194 - r3_195
l00005620:
	branch r23_101 >= r7_197 l00005628_ds_t
l00005628_ds_t:
l00005628_ds_f:
l0000562C:
l00005630:
	fn0001908C()
	branch Test(GE,r3_195) l00005640_ds_t
l00005640_ds_t:
l00005604:
	word32 r7_214 = Mem209[r19_126 + 96<i32>:word32]
	r3_195 = Mem209[r19_126 + 4<i32>:word32] + r3_195
	branch r3_195 -u r7_214 >= 0<32> l00005618_ds_t
l00005618_ds_t:
	Mem217[r19_126 + 4<i32>:word32] = r3_195
l000057A0:
	r25_100 = Mem217[r19_126 + 100<i32>:word32]
l00005618_ds_f:
	Mem219[r19_126 + 4<i32>:word32] = r3_195
l0000561C:
	r7_197 = r7_214 - r3_195
l00005640_ds_f:
l00005644:
	word32 r4_751
	word32 r6_753
	word32 r5_752
	fn00001A68(r0, r19_126, 0xFFFFFFFF<32>, 0xFFFF9D24<32>, out r4_751, out r5_752, out r6_753)
	r22_156 = Mem209[r19_126 + 76<i32>:word32]
l00005658:
	r3_184 = Mem235[r19_126 + 24<i32>:word32]
l0000565C:
	branch Test(EQ,r3_184) l00005660_ds_t
l00005660_ds_t:
l00005660_ds_f:
l00005664:
	branch Test(NE,Mem241[r19_126 + 40<i32>:word32]) l00005680
l00005680:
	fn000188F0()
l00005690:
	word32 r4_747
	word32 r5_748
	word32 r3_257 = fn00001A68(r0, r19_126, 0<32>, 0<32>, out r4_747, out r5_748, out r6)
	fn000188F0()
	fn00019150()
	branch Test(EQ,~r3_257) l000056BC_ds_t
l000056BC_ds_t:
l000056BC_ds_f:
l000056C0:
	r3_257 = r22_156
l000056C4:
	Mem284[r1_145 + 28<i32>:word32] = r3_257
	fn000188F0()
	r3_23 = Mem284[r1_145 + 28<i32>:word32]
l000056D4:
	r6Out = r6
	return r3_23
fn00005538_exit:
l0000566C:
	word32 r8_750
	word32 r4_749
	fn0000B324(r21_114, out r4_749, out r8_750)
	fn000188F0()
l000055FC_ds_f:
l00005600:
l000057A4:
	branch Test(NE,r25_100) l000057A8_ds_t
l000057A8_ds_t:
	r6_112 = r24_104
l000057A8_ds_f:
	r6_112 = r24_104
l000057AC:
	word32 r3_327 = Mem326[r19_126 + 36<i32>:word32]
	word32 r25_328 = Mem326[r19_126 + 24<i32>:word32]
	Mem329[r19_126 + 96<i32>:word32] = r3_327
	Mem330[r19_126 + 100<i32>:word32] = r25_328
	Mem331[r19_126 + 4<i32>:word32] = r3_327


void fn00005810(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r18 r20 r3 r4 r6 r7 r8 r9
// Preserved: C r1 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
fn00005810_entry:
l00005810:
	word32 r11_357
	word32 r10_9 = Mem8[r5 + 56<i32>:word32]
	word32 r22_10 = Mem8[r5 + 108<i32>:word32]
	word32 r3_11 = Mem8[r5 + 120<i32>:word32]
	word32 r4_6 = Mem0[r5 + 44<i32>:word32]
	word32 r8_262 = Mem33[r5 + 124<i32>:word32]
	word32 r23_36 = r10_9 + r22_10
	word32 r9_235 = r3_11
	word32 r26_349 = Mem33[r5 + 144<i32>:word32]
	branch r4_6 + 0xFFFFFEFA<32> -u r22_10 >= 0<32> l00005870_ds_t
l00005870_ds_t:
	r11_357 = 0<32>
l00005870_ds_f:
l00005874:
	r11_357 = r22_10 + 0x106<32> - r4_6
l0000587C:
	word32 r20_234
	word32 r19_52 = Mem33[r5 + 64<i32>:word32]
	word32 r21_53 = Mem33[r5 + 52<i32>:word32]
	word32 r22_55 = r10_9 + (r22_10 + 0x102<32>)
	word32 r24_232 = CONVERT(Mem33[r23_36 + r3_11 - 1<i32>:byte], byte, word32)
	branch r3_11 -u Mem33[r5 + 140<i32>:word32] < 0<32> l000058A0_ds_t
l000058A0_ds_t:
	r20_234 = CONVERT(Mem33[r3_11 + r23_36:byte], byte, word32)
l000058A0_ds_f:
	r20_234 = CONVERT(Mem33[r3_11 + r23_36:byte], byte, word32)
l000058A4:
	r8_262 = r8_262 >>u 2<i32>
l000058B4:
	word32 r3_70 = Mem33[r5 + 116<i32>:word32]
	branch r3_70 -u r26_349 >= 0<32> l000058C4
l000058C0:
	r26_349 = r3_70
l000058C4:
l000058D0:
	word32 r12_225
	word32 r7_78 = r10_9 + r6
	branch Test(NE,CONVERT(Mem80[r9_235 + r7_78:byte], byte, word32) ^ r20_234) l000058E0_ds_t
l000058E0_ds_t:
	r12_225 = r9_235
l000058E0_ds_f:
	r12_225 = r9_235
l000058E4:
	branch Test(NE,CONVERT(Mem80[r7_78 + r9_235 - 1<i32>:byte], byte, word32) ^ r24_232) l00005918
l000058F4:
	branch Test(NE,CONVERT(Mem80[r7_78:byte], byte, word32) ^ CONVERT(Mem80[r23_36:byte], byte, word32)) l00005918
l00005904:
	branch Test(EQ,CONVERT(Mem80[r7_78 + 1<i32>:byte], byte, word32) ^ CONVERT(Mem80[r23_36 + 1<i32>:byte], byte, word32)) l00005914_ds_t
l00005914_ds_t:
	word32 r4_103 = r23_36 + 2<32>
l00005974:
	word32 r7_104 = r7_78 + 2<32>
l00005A8C:
	branch Test(EQ,CONVERT(Mem80[r4_103 + 1<i32>:byte], byte, word32) ^ CONVERT(Mem80[r7_104 + 1<i32>:byte], byte, word32)) l00005A9C_ds_t
l00005A9C_ds_t:
l0000597C:
	branch Test(NE,CONVERT(Mem80[r4_103 + 2<i32>:byte], byte, word32) ^ CONVERT(Mem80[r7_104 + 2<i32>:byte], byte, word32)) l00005ADC
l00005ADC:
	r4_103 = r4_103 + 2<32>
l0000598C:
	branch Test(NE,CONVERT(Mem80[r4_103 + 3<i32>:byte], byte, word32) ^ CONVERT(Mem80[r7_104 + 3<i32>:byte], byte, word32)) l00005AE4
l00005AE4:
	r4_103 = r4_103 + 3<32>
l0000599C:
	branch Test(NE,CONVERT(Mem80[r4_103 + 4<i32>:byte], byte, word32) ^ CONVERT(Mem80[r7_104 + 4<i32>:byte], byte, word32)) l00005AEC
l00005AEC:
	r4_103 = r4_103 + 4<32>
l000059AC:
	branch Test(NE,CONVERT(Mem80[r4_103 + 5<i32>:byte], byte, word32) ^ CONVERT(Mem80[r7_104 + 5<i32>:byte], byte, word32)) l00005AF4
l00005AF4:
	r4_103 = r4_103 + 5<32>
l000059BC:
	branch Test(NE,CONVERT(Mem80[r4_103 + 6<i32>:byte], byte, word32) ^ CONVERT(Mem80[r7_104 + 6<i32>:byte], byte, word32)) l000059CC_ds_t
l000059CC_ds_t:
l00005AFC:
	r4_103 = r4_103 + 6<32>
l000059CC_ds_f:
	r7_104 = r7_104 + 8<32>
l000059D0:
	word32 r29_151 = CONVERT(Mem80[r4_103 + 7<i32>:byte], byte, word32) ^ CONVERT(Mem80[r7_104 - 1<i32>:byte], byte, word32)
	branch Test(NE,r29_151) l00005B04
l00005B04:
	r4_103 = r4_103 + 7<32>
l000059E0:
	word32 r28_194
	r4_103 = r4_103 + 8<32>
	word32 r30_160 = (CONVERT(Mem80[r4_103:byte], byte, word32) ^ CONVERT(Mem80[r7_104:byte], byte, word32)) + 0xFFFFFFFF<32> >>u 1<i32>
	branch r4_103 -u r22_55 < 0<32> l00005A7C_ds_t
l00005A7C_ds_t:
	r28_194 = r30_160 >>u 30<i32> & 1<32>
l00005A7C_ds_f:
l00005A80:
	r28_194 = r30_160 >>u 30<i32> & r29_151
l00005A88:
	branch Test(EQ,r28_194) l00005AA4
l00005A9C_ds_f:
l00005AA0:
	r4_103 = r4_103 + 1<32>
l00005AA4:
	word32 r4_207 = 0x102<32> - (r22_55 - r4_103)
	branch r9_235 >= r4_207 l00005918
l00005AB8:
	Mem219[r5 + 112<i32>:word32] = r6
	branch r4_207 >= r26_349 l00005AC4_ds_t
l00005AC4_ds_t:
	r12_225 = r4_207
l00005AC4_ds_f:
	r12_225 = r4_207
l00005AC8:
	r24_232 = CONVERT(Mem219[r23_36 + r4_207 - 1<i32>:byte], byte, word32)
	r20_234 = CONVERT(Mem219[r4_207 + r23_36:byte], byte, word32)
	r9_235 = r4_207
l00005914_ds_f:
l00005918:
	r6 = CONVERT(Mem250[(r6 & r21_53) * 2<32> + r19_52:word16], word16, word32)
	branch r11_357 -u r6 < 0<32> l0000592C_ds_t
l0000592C_ds_t:
	r8_262 = r8_262 + 0xFFFFFFFF<32>
l000058CC:
	branch Test(EQ,r8_262) l00005934
l0000592C_ds_f:
l00005930:
l00005934:
	branch r12_225 -u r3_70 >= 0<32> l0000593C_ds_t
l0000593C_ds_t:
l0000593C_ds_f:
l00005940:
l00005944:
	return
fn00005810_exit:


void fn00005B0C(word32 r0, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E80
// MayUse:  r0:[0..15] r5:[0..31]
// LiveOut:
// Trashed: r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r1 r10 r11 r12 r15 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28
fn00005B0C_entry:
l00005B0C:
	word32 r25_215 = Mem25[r5 + 44<i32>:word32]
	word32 r19_208 = r5
	word32 r23_146 = 0<32>
	word32 r24_137 = 2<32>
	word32 r6_134 = Mem25[r5 + 116<i32>:word32]
	word32 r22_186 = 0x105<32>
	word32 r3_33 = r25_215
	word32 r21_209 = r25_215 + 0xFFFFFEFA<32>
l00005B98:
	word32 r26_112
	word32 r7_38 = Mem36[r19_208 + 108<i32>:word32]
	word32 r6_43 = Mem36[r19_208 + 60<i32>:word32] - r6_134
	branch r7_38 -u (r21_209 + r3_33) >= 0<32> l00005BB0_ds_t
l00005BB0_ds_t:
	word32 r26_45 = r6_43 - r7_38
l00005DA8:
	fn00018C34()
	word32 r5_55 = Mem36[r19_208 + 76<i32>:word32]
	word32 r4_56 = Mem36[r19_208 + 68<i32>:word32]
	word32 r3_57 = Mem36[r19_208 + 44<i32>:word32]
	word32 r7_59 = Mem36[r19_208 + 108<i32>:word32] - r25_215
	word32 r6_60 = Mem36[r19_208 + 92<i32>:word32] - r25_215
	Mem62[r19_208 + 112<i32>:word32] = Mem36[r19_208 + 112<i32>:word32] - r25_215
	Mem63[r19_208 + 108<i32>:word32] = r7_59
	Mem64[r19_208 + 92<i32>:word32] = r6_60
	word32 r4_65 = r4_56 + r5_55 * 2<32>
l00005DF8:
	word32 r4_82
	r4_65 = r4_65 + 0xFFFFFFFE<32>
	word32 r6_70 = CONVERT(Mem68[r4_65:word16], word16, word32)
	branch r6_70 -u r3_57 < 0<32> l00005E08_ds_t
l00005E08_ds_t:
l00005E64:
	r5_55 = r5_55 + 0xFFFFFFFF<32>
	branch Test(NE,r5_55) l00005E6C_ds_t
l00005E6C_ds_t:
	Mem78[r4_65:word16] = SLICE(r0, word16, 0)
l00005E6C_ds_f:
	Mem80[r4_65:word16] = SLICE(r0, word16, 0)
l00005E70:
	r4_82 = Mem80[r19_208 + 64<i32>:word32]
l00005E08_ds_f:
	word32 r8_83 = r6_70 - r3_57
l00005E0C:
	r5_55 = r5_55 + 0xFFFFFFFF<32>
	branch Test(NE,r5_55) l00005E14_ds_t
l00005E14_ds_t:
	Mem86[r4_65:word16] = SLICE(r8_83, word16, 0)
l00005E14_ds_f:
	Mem88[r4_65:word16] = SLICE(r8_83, word16, 0)
l00005E18:
	r4_82 = Mem88[r19_208 + 64<i32>:word32]
l00005E1C:
	word32 r5_103 = r3_57
	word32 r4_94 = r4_82 + r3_57 * 2<32>
l00005E28:
	r4_94 = r4_94 + 0xFFFFFFFE<32>
	word32 r6_99 = CONVERT(Mem97[r4_94:word16], word16, word32)
	branch r6_99 -u r3_57 < 0<32> l00005E38_ds_t
l00005E38_ds_t:
l00005E50:
	r5_103 = r5_103 + 0xFFFFFFFF<32>
	branch Test(NE,r5_103) l00005E58_ds_t
l00005E58_ds_t:
	Mem107[r4_94:word16] = SLICE(r0, word16, 0)
l00005E58_ds_f:
	Mem109[r4_94:word16] = SLICE(r0, word16, 0)
l00005E5C:
	r26_112 = r26_45 + r25_215
l00005E38_ds_f:
	word32 r8_113 = r6_99 - r3_57
l00005E3C:
	r5_103 = r5_103 + 0xFFFFFFFF<32>
	branch Test(NE,r5_103) l00005E44_ds_t
l00005E44_ds_t:
	Mem116[r4_94:word16] = SLICE(r8_113, word16, 0)
l00005E44_ds_f:
	Mem118[r4_94:word16] = SLICE(r8_113, word16, 0)
l00005E48:
	r26_112 = r26_45 + r25_215
l00005BB0_ds_f:
	r26_112 = r6_43 - r7_38
l00005BB4:
	word32 r27_125 = Mem124[r19_208:word32]
	word32 r28_126 = Mem124[r27_125 + 4<i32>:word32]
	branch Test(EQ,r28_126) l00005D1C
l00005BC0:
	word32 r4_133
	word32 r3_130
	branch r26_112 -u r28_126 < 0<32> l00005BC8_ds_t
l00005BC8_ds_t:
	word32 r6_129 = Mem124[r19_208 + 116<i32>:word32]
l00005B60:
	branch Test(NE,r26_112) l00005B64_ds_t
l00005B64_ds_t:
	r3_130 = r28_126 - r26_112
l00005F18:
	r28_126 = r26_112
l00005B64_ds_f:
l00005B68:
	r4_133 = Mem124[r19_208 + 5812<i32>:word32]
	r6_134 = r26_112 + r6_129
	branch r24_137 -u (r6_134 + r4_133) < 0<32> l00005B7C_ds_t
l00005B7C_ds_t:
	Mem142[r19_208 + 116<i32>:word32] = r6_134
l00005B7C_ds_f:
	Mem143[r19_208 + 116<i32>:word32] = r6_134
l00005BC8_ds_f:
l00005BCC:
	r3_130 = r23_146
l00005BD0:
	word32 r0_229
	Mem169[r27_125 + 4<i32>:word32] = r3_130
	fn00018C34()
	word32 r3_172 = Mem169[Mem169[r27_125 + 28<i32>:word32] + 24<i32>:word32]
	branch Test(EQ,r3_172 ^ 1<32>) l00005C08_ds_t
l00005C08_ds_t:
l00005E78:
	word32 r3_221
	word32 r26_843
	word32 r29_844
	word32 r30_845
	word32 r6_841
	word32 r7_842
	r0_229 = fn00005318(r0_229, Mem169[r27_125 + 48<i32>:word32], r3_130, r28_126, out r3_221, out r6_841, out r7_842, out r19_208, out r21_209, out r22_186, out r23_146, out r24_137, out r25_215, out r26_843, out r27_125, out r28_126, out r29_844, out r30_845)
	Mem231[r27_125 + 48<i32>:word32] = r3_221
	r0 = r0_229
l00005C08_ds_f:
l00005C0C:
	branch Test(EQ,r3_172 ^ 2<32>) l00005C10_ds_t
l00005C10_ds_t:
l00005E94:
	Mem248[r27_125 + 48<i32>:word32] = fn00017044(Mem169[r27_125 + 48<i32>:word32], r3_130, r28_126)
l00005C10_ds_f:
l00005C14:
	word32 r3_253 = Mem251[r27_125 + 8<i32>:word32]
	word32 r6_255 = Mem251[r19_208 + 116<i32>:word32]
	Mem259[r27_125:word32] = Mem251[r27_125:word32] + r28_126
	r4_133 = Mem259[r19_208 + 5812<i32>:word32]
	Mem263[r27_125 + 8<i32>:word32] = r3_253 + r28_126
	r6_134 = r28_126 + r6_255
	branch r24_137 -u (r6_134 + r4_133) >= 0<32> l00005C48_ds_t
l00005C48_ds_t:
	Mem267[r19_208 + 116<i32>:word32] = r6_134
l00005C48_ds_f:
	Mem268[r19_208 + 116<i32>:word32] = r6_134
l00005C4C:
	word32 r8_285
	word32 r9_272 = Mem270[r19_208 + 56<i32>:word32]
	word32 r7_275 = Mem270[r19_208 + 108<i32>:word32] - r4_133
	word32 r11_273 = Mem270[r19_208 + 88<i32>:word32]
	word32 r3_277 = CONVERT(Mem270[r7_275 + r9_272:byte], byte, word32)
	word32 r12_279 = Mem270[r19_208 + 84<i32>:word32]
	Mem280[r19_208 + 72<i32>:word32] = r3_277
	word32 r5_282 = CONVERT(Mem280[r9_272 + r7_275 + 1<i32>:byte], byte, word32)
	word32 r18_283 = r11_273 & 0x1F<32>
	branch Test(EQ,r11_273 & 0x1F<32>) l00005C7C_ds_t
l00005C7C_ds_t:
	r8_285 = r3_277
l00005C7C_ds_f:
	word32 r8_286 = r3_277
l00005C80:
	r18_283 = r18_283 + 0xFFFFFFFF<32>
	branch Test(NE,r18_283) l00005C88_ds_t
l00005C88_ds_t:
	r8_286 = r8_286 * 2<32>
l00005C88_ds_f:
	r8_285 = r8_286 * 2<32>
l00005C8C:
	word32 r5_301 = (r5_282 ^ r8_285) & r12_279
	Mem304[r19_208 + 72<i32>:word32] = r5_301
	word32 r9_307 = r9_272 + (r7_275 + 2<32>)
l00005CF4:
	word32 r8_312
	word32 r18_309 = r11_273 & 0x1F<32>
	branch Test(EQ,r11_273 & 0x1F<32>) l00005D00_ds_t
l00005D00_ds_t:
	r8_312 = r5_301
l00005D00_ds_f:
	word32 r8_313 = r5_301
l00005D04:
	r18_309 = r18_309 + 0xFFFFFFFF<32>
	branch Test(NE,r18_309) l00005D0C_ds_t
l00005D0C_ds_t:
	r8_313 = r8_313 * 2<32>
l00005D0C_ds_f:
	r8_312 = r8_313 * 2<32>
l00005D10:
	branch Test(NE,r4_133) l00005CA4
l00005CA4:
	word32 r10_333 = Mem326[r19_208 + 68<i32>:word32]
	r5_301 = (r8_312 ^ CONVERT(Mem326[r9_307:byte], byte, word32)) & r12_279
	word32 r26_343 = CONVERT(Mem326[r5_301 * 2<32> + r10_333:word16], word16, word32)
	word32 r20_344 = Mem326[r19_208 + 64<i32>:word32]
	word32 r3_348 = r7_275 & Mem326[r19_208 + 52<i32>:word32]
	Mem349[r19_208 + 72<i32>:word32] = r5_301
	Mem352[r3_348 * 2<32> + r20_344:word16] = SLICE(r26_343, word16, 0)
	Mem354[r5_301 * 2<32> + r10_333:word16] = SLICE(r7_275, word16, 0)
	r4_133 = r4_133 + 0xFFFFFFFF<32>
	Mem356[r19_208 + 5812<i32>:word32] = r4_133
	r7_275 = r7_275 + 1<32>
	branch r24_137 -u (r6_134 + r4_133) >= 0<32> l00005CF0_ds_t
l00005CF0_ds_t:
l00005B80:
	branch r22_186 -u r6_134 < 0<32> l00005D1C
l00005CF0_ds_f:
	r9_307 = r9_307 + 1<32>
l00005D14:
	branch r22_186 -u r6_134 >= 0<32> l00005B88
l00005B88:
	branch Test(EQ,Mem378[Mem378[r19_208:word32] + 4<i32>:word32]) l00005D1C
l00005B94:
	r3_33 = Mem378[r19_208 + 44<i32>:word32]
l00005D1C:
	word32 r5_385 = Mem384[r19_208 + 5824<i32>:word32]
	word32 r4_386 = Mem384[r19_208 + 60<i32>:word32]
	branch r5_385 -u r4_386 >= 0<32> l00005D2C_ds_t
l00005D2C_ds_t:
l00005D2C_ds_f:
l00005D30:
	word32 r21_402 = Mem384[r19_208 + 108<i32>:word32] + Mem384[r19_208 + 116<i32>:word32]
	branch r5_385 -u r21_402 >= 0<32> l00005D44_ds_t
l00005D44_ds_t:
l00005EAC:
	branch r5_385 -u (r21_402 + 0x102<32>) >= 0<32> l00005EB4_ds_t
l00005EB4_ds_t:
l00005EB4_ds_f:
	word32 r3_407 = r21_402 - r5_385
l00005EB8:
	word32 r21_409 = r4_386 - r5_385
	branch r3_407 + 0x102<32> -u r21_409 >= 0<32> l00005ECC
l00005EC8:
	r21_409 = r3_407 + 0x102<32>
l00005ECC:
	fn00018C64()
	Mem423[r19_208 + 5824<i32>:word32] = Mem384[r19_208 + 5824<i32>:word32] + r21_409
l00005D44_ds_f:
l00005D48:
	word32 r22_425 = r4_386 - r21_402
	branch 0x102<32> -u r22_425 < 0<32> l00005D58_ds_t
l00005D58_ds_t:
l00005EF4:
	fn00018C64()
	Mem435[r19_208 + 5824<i32>:word32] = r21_402 + 0x102<32>
l00005D58_ds_f:
l00005D5C:
	fn00018C64()
	Mem442[r19_208 + 5824<i32>:word32] = r21_402 + r22_425
l00005D78:
l00005D7C:
	return
fn00005B0C_exit:


void fn00005F20(word32 r0, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E80
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00005F20_entry:
l00005F20:
	word32 r25_31 = Mem29[r5 + 12<i32>:word32]
	word32 r3_32 = Mem29[r5 + 44<i32>:word32]
	word32 r19_1012 = r5
	word32 r25_1019 = r25_31 + 0xFFFFFFFB<32>
	branch r3_32 -u (r25_31 + 0xFFFFFFFB<32>) >= 0<32> l00005F70_ds_t
l00005F70_ds_t:
l00005F70_ds_f:
l00005F74:
	r25_1019 = r3_32
l00005F78:
	word32 r22_1016 = Mem29[r5:word32]
	word32 r28_1013 = r6
	word32 r26_1020 = r6 ^ 4<32>
	word32 r4_46 = Mem29[r22_1016 + 4<i32>:word32]
	word32 r30_286 = ~(-r6 | r6) >>u 31<i32>
	word32 r29_147 = (-(r6 ^ 4<32>) | r6 ^ 4<32>) >>u 31<i32>
	r4_164 = r4_46
l00006124:
	word32 r3_1077
	word32 r21_298
	word32 r27_297
	word32 r4_164
	word32 r3_153 = Mem150[r22_1016 + 16<i32>:word32]
	word32 r7_155 = Mem150[r19_1012 + 5820<i32>:word32] + 0x2A<32> >> 1<i32>
	branch r3_153 -u (r7_155 >> 2<i32>) < 0<32> l000065EC
l00006148:
	word32 r3_167
	word32 r23_163 = Mem150[r19_1012 + 108<i32>:word32] - Mem150[r19_1012 + 92<i32>:word32]
	word32 r21_165 = r23_163 + r4_164
	branch 0xFFFFFFFE<32> -u r21_165 >= 0<32> l00006168_ds_t
l00006168_ds_t:
	r3_167 = r3_153 - (r7_155 >> 2<i32>)
l00006168_ds_f:
	r3_167 = r3_153 - (r7_155 >> 2<i32>)
l0000616C:
	r21_165 = 0xFFFFFFFF<32>
l00006174:
	branch r3_167 -u r21_165 >= 0<32> l00006180
l0000617C:
	r21_165 = r3_167
l00006180:
	branch r21_165 -u r23_163 >= 0<32> l0000618C
l00006188:
	r23_163 = r21_165
l0000618C:
	word32 r3_185
	branch r21_165 -u r25_1019 >= 0<32> l00006194_ds_t
l00006194_ds_t:
	r3_185 = -r21_165
l000064E0:
	branch Test(NE,r26_1020) l000064E4_ds_t
l000064E4_ds_t:
l000064E4_ds_f:
l000064E8:
	r3_185 = r21_165 - r23_163 ^ r4_164
	r4_164 = ~(-r3_185 | r3_185)
l00006194_ds_f:
	word32 r3_234 = -r21_165
l00006198:
	branch Test(NE,~(r3_234 | r21_165) >>u 31<i32> & r29_147) l00006228_ds_t
l00006228_ds_t:
l00006228_ds_f:
l0000622C:
	branch Test(NE,r30_286) l00006230_ds_t
l00006230_ds_t:
l00006230_ds_f:
	word32 r3_288 = r21_165 - r23_163
l00006234:
	r3_185 = r3_288 ^ r4_164
	branch Test(NE,r3_185) l0000623C_ds_t
l0000623C_ds_t:
l000065EC:
l000065F0:
	r27_297 = r4_46 - r4_164
	branch Test(NE,r27_297) l000065F8_ds_t
l000065F8_ds_t:
	r21_298 = 0<32>
l000065F8_ds_f:
l000065FC:
	r3_1077 = Mem150[r19_1012 + 108<i32>:word32]
l0000623C_ds_f:
l00006240:
l00006244:
	word32 r19_342
	word32 r21_343
	word32 r23_345
	word32 r24_2303
	word32 r8_2302
	fn0000371C(r0, r3_185, r4_164, 0<32>, r19_1012, r22_1016, r23_163, r25_1019, r26_1020, out r8_2302, out r19_342, out r21_343, out r23_345, out r24_2303)
	Mem371[Mem150[r19_342 + 8<i32>:word32] + Mem150[r19_342 + 20<i32>:word32] - 4<i32>:byte] = SLICE(r21_343, byte, 0)
	Mem378[Mem371[r19_342 + 8<i32>:word32] + Mem371[r19_342 + 20<i32>:word32] - 3<i32>:byte] = SLICE(r21_343 >>u 8<i32>, byte, 0)
	Mem392[Mem378[r19_342 + 8<i32>:word32] + Mem378[r19_342 + 20<i32>:word32] - 2<i32>:byte] = SLICE(~(r21_343 & 0xFF<32>), byte, 0)
	word32 r3_395 = Mem392[r19_342 + 8<i32>:word32] + Mem392[r19_342 + 20<i32>:word32]
	Mem397[r3_395 - 1<i32>:byte] = SLICE(~r21_343 >>u 8<i32>, byte, 0)
	word32 r23_420
	word32 r27_424
	word32 r31_427
	word32 r6_2306
	word32 r4_2304
	word32 r5_2305
	word32 r7_2307
	word32 r8_2308
	word32 r9_2309
	word32 r10_2310
	word32 r22_2312
	word32 r20_2311
	word32 r21_418
	word32 r24_421
	r0 = fn00003990(r0, r3_395, r19_342, r23_345, out r4_2304, out r5_2305, out r6_2306, out r7_2307, out r8_2308, out r9_2309, out r10_2310, out r19_1012, out r20_2311, out r21_418, out r22_2312, out r23_420, out r24_421, out r25_1019, out r26_1020, out r27_424, out r28_1013, out r29_147, out r30_286, out r31_427)
	word32 r3_438 = Mem397[r27_424 + 20<i32>:word32]
	word32 r22_439 = Mem397[r31_427 + 16<i32>:word32]
	branch r3_438 -u r22_439 >= 0<32> l00006314
l00006310:
	r22_439 = r3_438
l00006314:
	branch Test(EQ,r22_439) l00006318_ds_t
l00006318_ds_t:
l00006318_ds_f:
l0000631C:
	fn00018C34()
	word32 r7_452 = Mem397[r27_424 + 16<i32>:word32]
	word32 r6_453 = Mem397[r31_427 + 20<i32>:word32]
	word32 r5_454 = Mem397[r31_427 + 16<i32>:word32]
	r3_438 = Mem397[r27_424 + 20<i32>:word32]
	Mem457[r31_427 + 12<i32>:word32] = Mem397[r31_427 + 12<i32>:word32] + r22_439
	Mem459[r27_424 + 16<i32>:word32] = r7_452 + r22_439
	Mem462[r31_427 + 20<i32>:word32] = r6_453 + r22_439
	Mem463[r31_427 + 16<i32>:word32] = r5_454 - r22_439
	word32 r22_464 = r3_438 - r22_439
	branch Test(NE,r22_464) l00006368_ds_t
l00006368_ds_t:
	Mem465[r27_424 + 20<i32>:word32] = r22_464
l00006368_ds_f:
	Mem466[r27_424 + 20<i32>:word32] = r22_464
l0000636C:
	Mem468[r27_424 + 16<i32>:word32] = Mem466[r27_424 + 8<i32>:word32]
l00006374:
	branch Test(EQ,r23_420) l00006378_ds_t
l00006378_ds_t:
	r22_1016 = Mem473[r19_1012:word32]
l00006378_ds_f:
l0000637C:
	fn00018C34()
	r22_1016 = Mem473[r19_1012:word32]
	word32 r6_486 = Mem473[r19_1012 + 92<i32>:word32]
	word32 r4_491 = Mem473[r22_1016 + 16<i32>:word32] - r23_420
	r3_438 = Mem473[r22_1016 + 20<i32>:word32] + r23_420
	Mem493[r22_1016 + 12<i32>:word32] = Mem473[r22_1016 + 12<i32>:word32] + r23_420
	Mem494[r22_1016 + 16<i32>:word32] = r4_491
	Mem495[r22_1016 + 20<i32>:word32] = r3_438
	Mem497[r19_1012 + 92<i32>:word32] = r6_486 + r23_420
	r21_418 = r21_418 - r23_420
l000063D0:
	branch Test(NE,r21_418) l000063D4_ds_t
l000063D4_ds_t:
	r4_164 = Mem500[r22_1016 + 4<i32>:word32]
l000064A0:
	word32 r8_505
	word32 r23_504
	branch r21_418 -u r4_164 < 0<32> l000064A8_ds_t
l000064A8_ds_t:
l00006584:
	r23_504 = r21_418
l000064A8_ds_f:
	r8_505 = Mem500[r22_1016 + 12<i32>:word32]
l000064AC:
	branch Test(NE,r4_164) l000064B0_ds_t
l000064B0_ds_t:
	r23_504 = r4_164
l00006588:
	word32 r0_590
	Mem517[r22_1016 + 4<i32>:word32] = r4_164 - r23_504
	fn00018C34()
	word32 r3_524 = Mem517[Mem517[r22_1016 + 28<i32>:word32] + 24<i32>:word32]
	branch Test(EQ,r3_524 ^ 1<32>) l000065B8_ds_t
l000065B8_ds_t:
l00006664:
	word32 r3_583
	word32 r7_2314
	word32 r6_2313
	word32 r27_2315
	r0_590 = fn00005318(r0_590, Mem517[r22_1016 + 48<i32>:word32], r3_438, r23_504, out r3_583, out r6_2313, out r7_2314, out r19_1012, out r21_418, out r22_1016, out r23_504, out r24_421, out r25_1019, out r26_1020, out r27_2315, out r28_1013, out r29_147, out r30_286)
	Mem592[r22_1016 + 48<i32>:word32] = r3_583
	r0 = r0_590
l000065B8_ds_f:
l000065BC:
	branch Test(EQ,r3_524 ^ 2<32>) l000065C0_ds_t
l000065C0_ds_t:
l0000689C:
	Mem609[r22_1016 + 48<i32>:word32] = fn00017044(Mem517[r22_1016 + 48<i32>:word32], r3_438, r23_504)
l000065C0_ds_f:
l000065C4:
	word32 r23_617 = Mem612[r22_1016 + 8<i32>:word32] + r23_504
	Mem618[r22_1016:word32] = Mem612[r22_1016:word32] + r23_504
	Mem619[r22_1016 + 8<i32>:word32] = r23_617
	r22_1016 = Mem619[r19_1012:word32]
	r8_505 = Mem619[r22_1016 + 12<i32>:word32]
	r4_164 = Mem619[r22_1016 + 4<i32>:word32]
l000064B0_ds_f:
l000064B4:
	word32 r5_633 = Mem626[r22_1016 + 16<i32>:word32] - r21_418
	word32 r21_634 = Mem626[r22_1016 + 20<i32>:word32] + r21_418
	Mem635[r22_1016 + 12<i32>:word32] = r8_505 + r21_418
	Mem636[r22_1016 + 16<i32>:word32] = r5_633
	branch Test(EQ,r24_421) l000064D4_ds_t
l000064D4_ds_t:
	Mem639[r22_1016 + 20<i32>:word32] = r21_634
l000064D4_ds_f:
	Mem640[r22_1016 + 20<i32>:word32] = r21_634
l000064D8:
l000063D4_ds_f:
	r4_164 = Mem500[r22_1016 + 4<i32>:word32]
l000063D8:
	branch Test(EQ,r24_421) l000063DC_ds_t
l000063DC_ds_t:
l000063DC_ds_f:
l000063E0:
	r27_297 = r4_46 - r4_164
	branch Test(EQ,r27_297) l000063E8_ds_t
l000063E8_ds_t:
l000063E8_ds_f:
	r21_298 = 1<32>
l000063EC:
	word32 r4_675
	word32 r3_658 = Mem656[r19_1012 + 44<i32>:word32]
	branch r27_297 -u r3_658 >= 0<32> l000063F8_ds_t
l000063F8_ds_t:
l000068B4:
	Mem670[r19_1012 + 5808<i32>:word32] = 2<32>
	fn00018C34()
	r3_1077 = Mem670[r19_1012 + 44<i32>:word32]
	Mem674[r19_1012 + 108<i32>:word32] = r3_1077
	r4_675 = r3_1077
l000063F8_ds_f:
l000063FC:
	word32 r5_677 = Mem656[r19_1012 + 108<i32>:word32]
	branch r27_297 -u (Mem656[r19_1012 + 60<i32>:word32] - r5_677) >= 0<32> l00006410_ds_t
l00006410_ds_t:
	word32 r4_681 = r5_677 - r3_658
l00006950:
	Mem684[r19_1012 + 108<i32>:word32] = r4_681
	fn00018C34()
	word32 r3_687 = Mem684[r19_1012 + 5808<i32>:word32]
	branch 1<32> -u r3_687 < 0<32> l00006980_ds_t
l00006980_ds_t:
l00006980_ds_f:
l00006984:
	Mem695[r19_1012 + 5808<i32>:word32] = r3_687 + 1<32>
l00006410_ds_f:
l00006414:
	fn00018C34()
	r4_675 = Mem698[r19_1012 + 44<i32>:word32]
	r3_1077 = r27_297 + Mem698[r19_1012 + 108<i32>:word32]
	Mem711[r19_1012 + 108<i32>:word32] = r3_1077
l0000643C:
	word32 r5_714 = Mem713[r19_1012 + 5812<i32>:word32]
	word32 r4_716 = r4_675 - r5_714
	branch r27_297 -u r4_716 >= 0<32> l0000644C_ds_t
l0000644C_ds_t:
	Mem720[r19_1012 + 92<i32>:word32] = r3_1077
l0000644C_ds_f:
	Mem721[r19_1012 + 92<i32>:word32] = r3_1077
l00006450:
	r4_716 = r27_297
l00006454:
	word32 r4_725 = r4_716 + r5_714
	branch Test(EQ,r21_298) l0000645C_ds_t
l0000645C_ds_t:
	Mem731[r19_1012 + 5812<i32>:word32] = r4_725
l000068E4:
	r22_1016 = Mem731[r19_1012:word32]
	r4_164 = Mem731[r22_1016 + 4<i32>:word32]
l00006600:
	word32 r6_1074
	branch Test(EQ,r28_1013 & 0xFFFFFFFB<32>) l00006620
l00006608:
	branch Test(NE,r4_164) l00006620
l00006620:
	word32 r9_800
	word32 r21_1015 = Mem749[r19_1012 + 60<i32>:word32] + 0xFFFFFFFF<32> - r3_1077
	branch r21_1015 -u r4_164 >= 0<32> l00006644
l00006634:
	word32 r6_758 = Mem749[r19_1012 + 92<i32>:word32]
	word32 r8_759 = Mem749[r19_1012 + 44<i32>:word32]
	branch r6_758 >= r8_759 l000068F0
l000068F0:
	Mem766[r19_1012 + 92<i32>:word32] = r6_758 - r8_759
	Mem767[r19_1012 + 108<i32>:word32] = r3_1077 - r8_759
	fn00018C34()
	word32 r3_770 = Mem767[r19_1012 + 5808<i32>:word32]
	branch 1<32> -u r3_770 < 0<32> l00006930
l00006928:
	Mem774[r19_1012 + 5808<i32>:word32] = r3_770 + 1<32>
l00006930:
	r22_1016 = Mem776[r19_1012:word32]
	r4_164 = Mem776[r22_1016 + 4<i32>:word32]
	r21_1015 = r21_1015 + Mem776[r19_1012 + 44<i32>:word32]
	branch r4_164 -u r21_1015 < 0<32> l00006948_ds_t
l00006948_ds_t:
	r3_1077 = Mem776[r19_1012 + 108<i32>:word32]
l00006948_ds_f:
	r3_1077 = Mem776[r19_1012 + 108<i32>:word32]
l0000694C:
l00006644:
	branch r4_164 -u r21_1015 >= 0<32> l00006680
l00006680:
	branch Test(EQ,r21_1015) l00006708
l00006684:
	branch r21_1015 -u r4_164 >= 0<32> l00006690_ds_t
l00006690_ds_t:
l00006A00:
	branch Test(EQ,r4_164) l00006A04_ds_t
l00006A04_ds_t:
l00006A04_ds_f:
	r9_800 = 0<32>
l00006A08:
l00006690_ds_f:
l00006694:
	r9_800 = r4_164 - r21_1015
	r4_164 = r21_1015
l0000664C:
	branch Test(EQ,r4_164) l00006650_ds_t
l00006650_ds_t:
l00006708:
	r6_1074 = Mem809[r19_1012 + 92<i32>:word32]
l00006650_ds_f:
	r21_1015 = r4_164
l00006654:
	r9_800 = 0<32>
l0000669C:
l000066A0:
	Mem834[r22_1016 + 4<i32>:word32] = r9_800
	fn00018C34()
	word32 r3_855 = Mem850[Mem850[r22_1016 + 28<i32>:word32] + 24<i32>:word32]
	branch Test(EQ,r3_855 ^ 1<32>) l000066CC_ds_t
l000066CC_ds_t:
l000069C0:
	word32 r3_1026
	word32 r24_2319
	word32 r6_2316
	word32 r7_2317
	word32 r23_2318
	word32 r29_2321
	word32 r27_2320
	word32 r30_2322
	r0 = fn00005318(r0, Mem850[r22_1016 + 48<i32>:word32], r3_1077, r4_164, out r3_1026, out r6_2316, out r7_2317, out r19_1012, out r21_1015, out r22_1016, out r23_2318, out r24_2319, out r25_1019, out r26_1020, out r27_2320, out r28_1013, out r29_2321, out r30_2322)
	Mem1038[r22_1016 + 48<i32>:word32] = r3_1026
l000066CC_ds_f:
l000066D0:
	branch Test(EQ,r3_855 ^ 2<32>) l000066D8_ds_t
l000066D8_ds_t:
l000069E0:
	Mem1058[r22_1016 + 48<i32>:word32] = fn00017044(Mem850[r22_1016 + 48<i32>:word32], r3_1077, r4_164)
l000066D8_ds_f:
l000066DC:
	word32 r4_1067 = Mem1062[r22_1016 + 8<i32>:word32] + r4_164
	Mem1068[r22_1016:word32] = Mem1062[r22_1016:word32] + r4_164
	Mem1069[r22_1016 + 8<i32>:word32] = r4_1067
l000066F4:
	r6_1074 = Mem1072[r19_1012 + 92<i32>:word32]
	r3_1077 = r21_1015 + Mem1072[r19_1012 + 108<i32>:word32]
	Mem1078[r19_1012 + 108<i32>:word32] = r3_1077
l0000660C:
	r6_1074 = Mem749[r19_1012 + 92<i32>:word32]
	branch Test(NE,r3_1077 ^ r6_1074) l0000670C
l0000670C:
	word32 r4_1091 = Mem1082[r19_1012 + 12<i32>:word32] - (Mem1082[r19_1012 + 5820<i32>:word32] + 0x2A<32> >> 3<i32>)
	branch 0xFFFFFFFF<32> -u r4_1091 >= 0<32> l00006740
l0000673C:
	r4_1091 = 0xFFFFFFFF<32>
l00006740:
	word32 r3_1104
	word32 r5_1096 = Mem1082[r19_1012 + 44<i32>:word32]
	branch r4_1091 -u r5_1096 >= 0<32> l0000674C_ds_t
l0000674C_ds_t:
	r3_1104 = r3_1077 - r6_1074
l0000674C_ds_f:
	r3_1104 = r3_1077 - r6_1074
l00006750:
	r5_1096 = r4_1091
l00006754:
	word32 r3_1166
	word32 r23_1119
	branch r3_1104 -u r5_1096 >= 0<32> l0000675C_ds_t
l0000675C_ds_t:
l000067C4:
	branch r3_1104 -u r4_1091 >= 0<32> l000067CC_ds_t
l000067CC_ds_t:
	r23_1119 = r4_1091
l000067CC_ds_f:
l000067D0:
	r23_1119 = r3_1104
l000067D4:
	branch Test(EQ,r28_1013 ^ 4<32>) l00006998
l00006998:
	word32 r7_1129 = Mem1082[Mem1082[r19_1012:word32] + 4<i32>:word32]
	branch Test(LT,-r7_1129 | r7_1129) l000067DC
l000069AC:
	branch r4_1091 -u r3_1104 >= 0<32> l000069B4_ds_t
l000069B4_ds_t:
l000069B4_ds_f:
l000069B8:
l0000675C_ds_f:
	word32 r8_1138 = r28_1013 ^ 4<32>
l00006760:
	branch Test(GE,~(-r8_1138 | r8_1138) | (-r3_1104 | r3_1104)) l0000677C_ds_t
l0000677C_ds_t:
l0000677C_ds_f:
	word32 r5_1146 = -r28_1013
l00006780:
	branch Test(GE,r5_1146 | r28_1013) l00006894
l00006788:
	word32 r7_1149 = Mem1082[Mem1082[r19_1012:word32] + 4<i32>:word32]
	branch Test(LT,-r7_1149 | r7_1149) l00006894
l0000679C:
	branch r4_1091 -u r3_1104 < 0<32> l00006894
l000067A4:
	branch r3_1104 -u r4_1091 >= 0<32> l000067AC_ds_t
l000067AC_ds_t:
	r23_1119 = r4_1091
l000067AC_ds_f:
l000067B0:
	r23_1119 = r3_1104
l000067B4:
	branch Test(NE,r8_1138) l000067B8_ds_t
l000067B8_ds_t:
l000067DC:
l000067E0:
	r3_1166 = Mem1082[r19_1012 + 56<i32>:word32]
l000067B8_ds_f:
l000067BC:
	r3_1166 = Mem1082[r19_1012 + 56<i32>:word32]
l000067E4:
	word32 r19_1260
	word32 r23_1263
	word32 r21_2324
	word32 r24_2325
	word32 r8_2323
	fn0000371C(r0, r3_1166, r4_1091, r3_1166 + r6_1074, r19_1012, r22_1016, r23_1119, r25_1019, r26_1020, out r8_2323, out r19_1260, out r21_2324, out r23_1263, out r24_2325)
	word32 r3_1278 = Mem1082[r19_1260 + 92<i32>:word32] + r23_1263
	Mem1279[r19_1260 + 92<i32>:word32] = r3_1278
	word32 r21_1334
	word32 r22_1335
	word32 r24_1337
	word32 r29_2340
	word32 r30_2341
	word32 r31_2342
	word32 r5_2327
	word32 r7_2329
	word32 r8_2330
	word32 r6_2328
	word32 r28_2339
	word32 r20_2334
	word32 r23_2335
	word32 r25_2336
	word32 r26_2337
	word32 r27_2338
	word32 r9_2331
	word32 r10_2332
	word32 r19_2333
	word32 r4_2326
	word32 r0_1352 = fn00003990(r0_1352, r3_1278, r19_1260, r23_1263, out r4_2326, out r5_2327, out r6_2328, out r7_2329, out r8_2330, out r9_2331, out r10_2332, out r19_2333, out r20_2334, out r21_1334, out r22_1335, out r23_2335, out r24_1337, out r25_2336, out r26_2337, out r27_2338, out r28_2339, out r29_2340, out r30_2341, out r31_2342)
	word32 r3_1357 = Mem1279[r22_1335 + 20<i32>:word32]
	word32 r19_1358 = Mem1279[r21_1334 + 16<i32>:word32]
	branch r3_1357 -u r19_1358 >= 0<32> l00006830
l0000682C:
	r19_1358 = r3_1357
l00006830:
	branch Test(EQ,r19_1358) l00006834_ds_t
l00006834_ds_t:
l00006834_ds_f:
l00006838:
	fn00018C34()
	word32 r6_1371 = Mem1279[r22_1335 + 16<i32>:word32]
	word32 r5_1372 = Mem1279[r21_1334 + 20<i32>:word32]
	word32 r4_1373 = Mem1279[r21_1334 + 16<i32>:word32]
	word32 r3_1374 = Mem1279[r22_1335 + 20<i32>:word32]
	Mem1376[r21_1334 + 12<i32>:word32] = Mem1279[r21_1334 + 12<i32>:word32] + r19_1358
	Mem1378[r22_1335 + 16<i32>:word32] = r6_1371 + r19_1358
	Mem1381[r21_1334 + 20<i32>:word32] = r5_1372 + r19_1358
	Mem1382[r21_1334 + 16<i32>:word32] = r4_1373 - r19_1358
	word32 r19_1383 = r3_1374 - r19_1358
	branch Test(NE,r19_1383) l00006884_ds_t
l00006884_ds_t:
	Mem1384[r22_1335 + 20<i32>:word32] = r19_1383
l00006884_ds_f:
	Mem1385[r22_1335 + 20<i32>:word32] = r19_1383
l00006888:
	Mem1387[r22_1335 + 16<i32>:word32] = Mem1385[r22_1335 + 8<i32>:word32]
l00006890:
	branch Test(NE,r24_1337) l00006990
l00006990:
l00006894:
l00006618:
l0000645C_ds_f:
	Mem1393[r19_1012 + 5812<i32>:word32] = r4_725
l00006460:
l00006464:
	return
fn00005F20_exit:


word32 fn00007044(word32 r19, word32 r21, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008038
//      fn00008234
//      fn00008E80
//      fn0000DB74
// MayUse:  r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r25 r26 r27 r3 r31 r4 r6
// Trashed: C r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7
// Preserved:
fn00007044_entry:
	word32 dwArg1C
	word32 dwArg24
	word32 dwArg28
	word32 dwArg2C
	word32 dwArg30
	word32 dwArg34
	word32 dwArg38
	word32 dwArg3C
	word32 dwArg4C
l00007044:
	fn00018C34()
	word32 r6_9 = Mem0[r23 + 16<i32>:word32]
	word32 r5_10 = Mem0[r22 + 20<i32>:word32]
	word32 r4_11 = Mem0[r22 + 16<i32>:word32]
	word32 r3_12 = Mem0[r23 + 20<i32>:word32]
	Mem15[r22 + 12<i32>:word32] = Mem0[r22 + 12<i32>:word32] + r21
	word32 r6_16 = r6_9 + r21
	Mem17[r23 + 16<i32>:word32] = r6_16
	Mem20[r22 + 20<i32>:word32] = r5_10 + r21
	Mem21[r22 + 16<i32>:word32] = r4_11 - r21
	word32 r21_22 = r3_12 - r21
	branch Test(NE,r21_22) l0000708C_ds_t
l0000708C_ds_t:
	Mem23[r23 + 20<i32>:word32] = r21_22
l0000708C_ds_f:
	Mem24[r23 + 20<i32>:word32] = r21_22
l00007090:
	Mem26[r23 + 16<i32>:word32] = Mem24[r23 + 8<i32>:word32]
l00007098:
	word32 r3_31 = Mem29[Mem29[r19:word32] + 16<i32>:word32]
	word32 r4_33 = -r3_31 | r3_31
l00006DB4:
	r4Out = r4_33
	r6Out = r6_16
	r19Out = dwArg1C
	r21Out = dwArg24
	r22Out = dwArg28
	r23Out = dwArg2C
	r24Out = dwArg30
	r25Out = dwArg34
	r26Out = dwArg38
	r27Out = dwArg3C
	r31Out = dwArg4C
	return r4_33 >>u 31<i32>
fn00007044_exit:


word32 fn000070A4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
// MayUse: 
// LiveOut: r1 r22
// Trashed: C r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4
// Preserved:
fn000070A4_entry:
	word32 dwArg28
l000070A4:
l00006DB4_in_fn000070A4:
	return dwArg28
fn000070A4_exit:


word32 fn00007F88(word32 r4, word32 r6, word32 r7, word32 r18, word32 r19, ptr32 & r19Out, ptr32 & r21Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B514
// MayUse:  r18:[0..31] r19:[0..31] r4:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r19 r21 r3
// Trashed: r1 r15 r19 r21 r3 r5
// Preserved: r7
fn00007F88_entry:
l00007F88:
	word32 r3_10
	branch Test(GE,r18) l00007F8C_ds_t
l00007F8C_ds_t:
	r3_10 = -r6
l00007F8C_ds_f:
	r3_10 = -r6
l00007F90:
	r19 = r4
l00007F94:
	branch Test(GE,r6 | r3_10) l00007FA0_ds_t
l00007FA0_ds_t:
l00007FA0_ds_f:
l00007FA4:
	branch Test(GE,-r19 | r19) l00007FB0_ds_t
l00007FB0_ds_t:
l00007FC8:
	branch Test(EQ,r7) l00007FCC_ds_t
l00007FCC_ds_t:
l00007FF0:
	r19Out = <invalid>
	r21Out = <invalid>
	return r7
l00007FCC_ds_f:
l00007FD0:
	Mem36[r7:word32] = r19
	r19Out = <invalid>
	r21Out = <invalid>
	return 0<32>
fn00007F88_exit:
l00007FB0_ds_f:
l00007FB4:
	fn00018C34()


word32 fn00008008(word32 r5, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r21Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B514
//      fn0000BA7C
// MayUse:  r5:[0..31]
// LiveOut: r0 r21 r3 r4 r8
// Trashed: r0 r10 r11 r15 r19 r21 r3 r4 r5 r6 r7 r8 r9
// Preserved: C r1
fn00008008_entry:
	word32 r21
	word32 r0
	word32 r4
	word32 r8
	word32 r22
	word32 r23
l00008008:
	branch Test(EQ,r5) l0000822C
l0000800C:
	branch Test(EQ,Mem0[r5 + 32<i32>:word32]) l0000822C
l00008014:
	branch Test(EQ,Mem0[r5 + 36<i32>:word32]) l0000822C
l0000822C:
	r3Out = 0xFFFFFFFE<32>
	r4Out = r4
	r8Out = r8
	r21Out = r21
	return r0
l0000801C:
	word32 r21_15 = Mem14[r5 + 28<i32>:word32]
	branch Test(EQ,r21_15) l00008034_ds_t
l00008034_ds_t:
l00008218:
	r3Out = 0xFFFFFFFE<32>
	r4Out = r4
	r8Out = r8
	r21Out = r21
	return r0
l00008034_ds_f:
l00008034_thunk_fn00008038:
	word32 r3_24
	word32 r21_27
	word32 r4_28
	word32 r8_31
	word32 r0_35 = fn00008038(r0_35, r5, r21_15, r22, r23, out r3_24, out r4_28, out r8_31, out r21_27)
	r3Out = r3_24
	r4Out = r4_28
	r8Out = r8_31
	r21Out = r21_27
	return r0_35
fn00008008_exit:


void fn00008030(word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E80
// MayUse:  r21:[0..31]
// LiveOut:
// Trashed: r1 r15 r19 r21 r3
// Preserved:
fn00008030_entry:
	word32 r0
	word32 r5
	word32 r22
	word32 r23
l00008030:
	branch Test(EQ,r21) l00008034_ds_t
l00008034_ds_t:
l00008218_in_fn00008030:
	return
l00008034_ds_f:
l00008034_thunk_fn00008038:
	word32 r3_29
	word32 r4_30
	word32 r8_31
	word32 r21_32
	fn00008038(r0, r5, r21, r22, r23, out r3_29, out r4_30, out r8_31, out r21_32)
	return
fn00008030_exit:


word32 fn00008038(word32 r0, word32 r5, word32 r21, word32 r22, word32 r23, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r21Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008008
//      fn00008030
// MayUse:  r0:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r5:[0..31]
// LiveOut: r0 r21 r3 r4 r8
// Trashed: C r0 r1 r10 r11 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved:
fn00008038_entry:
	word32 dwArg20
	word32 r8
	word32 dwLoc04
l00008038:
	word32 r4_291 = r5 ^ Mem0[r21:word32]
	branch Test(EQ,r4_291) l00008044_ds_t
l00008044_ds_t:
l0000805C:
	word32 r4_9 = Mem0[r21 + 4<i32>:word32]
	r8 = (-(r4_9 ^ 0x67<32>) | r4_9 ^ 0x67<32>) & ((-(r4_9 ^ 0x5B<32>) | r4_9 ^ 0x5B<32>) & ((-(r4_9 ^ 0x45<32>) | r4_9 ^ 0x45<32>) & (-(r4_9 ^ 0x2A<32>) | r4_9 ^ 0x2A<32>)))
	branch Test(GE,(-(r4_9 ^ 0x29A<32>) | r4_9 ^ 0x29A<32>) & ((-(r4_9 ^ 0x71<32>) | r4_9 ^ 0x71<32>) & r8)) l000080C0_ds_t
l000080C0_ds_t:
l000080C0_ds_f:
l000080C4:
	word32 r4_35 = r4_9 + 0xFFFFFFC7<32> & 0xFFFFFFEF<32>
	r4_291 = -r4_35 | r4_35
	branch Test(NE,r4_291 >>u 31<i32>) l00008154_ds_t
l00008154_ds_t:
l00008154_ds_f:
l00008158:
	word32 r23_115
	word32 r5_130
	word32 r6_127
	word32 r21_113
	word32 r19_112
	word32 r3_122
	word32 r4_132
	word32 r4_75 = Mem0[r21 + 8<i32>:word32]
	Mem77[r5 + 44<i32>:word32] = 2<32>
	word32 r3_78 = Mem77[r21 + 24<i32>:word32]
	Mem81[r5 + 20<i32>:word32] = r0
	Mem82[r5 + 8<i32>:word32] = r0
	Mem83[r5 + 24<i32>:word32] = r0
	Mem84[r21 + 16<i32>:word32] = r4_75
	Mem85[r21 + 20<i32>:word32] = r0
	branch Test(LT,r3_78) l00008180_ds_t
l00008180_ds_t:
l000081E0:
	Mem88[r21 + 24<i32>:word32] = -r3_78
	branch Test(NE,r3_78 ^ 0xFFFFFFFE<32>) l000081F0_ds_t
l000081F0_ds_t:
	r4_132 = 0x2A<32>
l000081F0_ds_f:
l000081F4:
l00008180_ds_f:
l00008184:
	branch Test(EQ,r3_78 ^ 2<32>) l0000818C_ds_t
l0000818C_ds_t:
l000081F8:
	Mem102[r21 + 4<i32>:word32] = 0x39<32>
	word32 r4_346
	word32 r22_347
	word32 r25_349
	word32 r26_350
	word32 r24_348
	word32 r31_352
	word32 r27_351
	r3_122 = fn00007044(r5, r21, r22, r23, out r4_346, out r6_127, out r19_112, out r21_113, out r22_347, out r23_115, out r24_348, out r25_349, out r26_350, out r27_351, out r31_352)
	r5_130 = r21_113
l0000818C_ds_f:
l00008190:
	branch Test(NE,r3_78) l00008194_ds_t
l00008194_ds_t:
	r4_132 = 0x2A<32>
l00008194_ds_f:
l00008198:
	r4_132 = 0x71<32>
l0000819C:
l000081A0:
	Mem144[r21 + 4<i32>:word32] = r4_132
	word32 r27_342
	word32 r24_339
	word32 r26_341
	word32 r7_166
	word32 r25_340
	word32 r22_338
	word32 r29_344
	word32 r30_345
	word32 r28_343
	r0 = fn00005318(r0, 0<32>, 0<32>, r7_166, out r3_122, out r6_127, out r7_166, out r19_112, out r21_113, out r22_338, out r23_115, out r24_339, out r25_340, out r26_341, out r27_342, out r28_343, out r29_344, out r30_345)
	r5_130 = r21_113
l000081B8:
	Mem182[r19_112 + 48<i32>:word32] = r3_122
	Mem187[r21_113 + 40<i32>:word32] = r0
	word32 r4_204
	word32 r8_208
	word32 r19_353
	word32 r22_354
	word32 r0_202 = fn00003674(r0, r3_122, r5_130, r6_127, r19_112, r23_115, out r4_204, out r8_208, out r19_353, out r22_354)
	r3Out = 0<32>
	r4Out = r4_204
	r8Out = r8_208
	r21Out = dwLoc04
	return r0_202
l00008044_ds_f:
l00008048:
l0000804C:
	r3Out = 0xFFFFFFFE<32>
	r4Out = r4_291
	r8Out = r8
	r21Out = dwArg20
	return r0
fn00008038_exit:


word32 fn00008234(word32 r0, word32 r5, word32 r22, word32 r23, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00005538
// MayUse:  r0:[0..31] r22:[0..31] r23:[0..31] r5:[0..31]
// LiveOut: r0 r22
// Trashed: C r0 r10 r11 r18 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21
fn00008234_entry:
l00008234:
	branch Test(EQ,r5) l000084F4
l00008238:
	branch Test(EQ,Mem0[r5 + 32<i32>:word32]) l000084F4
l00008240:
	branch Test(EQ,Mem0[r5 + 36<i32>:word32]) l000084F4
l000084F4:
	r22Out = r22
	return r0
l00008248:
	word32 r21_15 = Mem14[r5 + 28<i32>:word32]
	branch Test(EQ,r21_15) l00008260_ds_t
l00008260_ds_t:
l000084E0:
	r22Out = r22
	return r0
l00008260_ds_f:
l00008264:
	branch Test(EQ,r5 ^ Mem14[r21_15:word32]) l00008270_ds_t
l00008270_ds_t:
l00008288:
	word32 r4_25 = Mem14[r21_15 + 4<i32>:word32]
	branch Test(GE,(-(r4_25 ^ 0x29A<32>) | r4_25 ^ 0x29A<32>) & ((-(r4_25 ^ 0x71<32>) | r4_25 ^ 0x71<32>) & ((-(r4_25 ^ 0x67<32>) | r4_25 ^ 0x67<32>) & ((-(r4_25 ^ 0x5B<32>) | r4_25 ^ 0x5B<32>) & ((-(r4_25 ^ 0x45<32>) | r4_25 ^ 0x45<32>) & (-(r4_25 ^ 0x2A<32>) | r4_25 ^ 0x2A<32>)))))) l000082EC_ds_t
l000082EC_ds_t:
l000082EC_ds_f:
l000082F0:
	word32 r4_51 = r4_25 + 0xFFFFFFC7<32> & 0xFFFFFFEF<32>
	branch Test(NE,(-r4_51 | r4_51) >>u 31<i32>) l00008380_ds_t
l00008380_ds_t:
l00008380_ds_f:
l00008384:
	word32 r23_131
	word32 r5_146
	word32 r6_143
	word32 r21_129
	word32 r19_128
	word32 r3_138
	word32 r4_106
	word32 r4_91 = Mem14[r21_15 + 8<i32>:word32]
	Mem93[r5 + 44<i32>:word32] = 2<32>
	word32 r3_94 = Mem93[r21_15 + 24<i32>:word32]
	Mem97[r5 + 20<i32>:word32] = r0
	Mem98[r5 + 8<i32>:word32] = r0
	Mem99[r5 + 24<i32>:word32] = r0
	Mem100[r21_15 + 16<i32>:word32] = r4_91
	Mem101[r21_15 + 20<i32>:word32] = r0
	branch Test(LT,r3_94) l000083AC_ds_t
l000083AC_ds_t:
l000084A8:
	Mem104[r21_15 + 24<i32>:word32] = -r3_94
	branch Test(NE,r3_94 ^ 0xFFFFFFFE<32>) l000084B8_ds_t
l000084B8_ds_t:
	r4_106 = 0x2A<32>
l000084B8_ds_f:
l000084BC:
l000083AC_ds_f:
l000083B0:
	branch Test(EQ,r3_94 ^ 2<32>) l000083B8_ds_t
l000083B8_ds_t:
l000084C0:
	Mem118[r21_15 + 4<i32>:word32] = 0x39<32>
	word32 r25_412
	word32 r4_409
	word32 r24_411
	word32 r22_410
	word32 r27_414
	word32 r31_415
	word32 r26_413
	r3_138 = fn00007044(r5, r21_15, r22, r23, out r4_409, out r6_143, out r19_128, out r21_129, out r22_410, out r23_131, out r24_411, out r25_412, out r26_413, out r27_414, out r31_415)
	r5_146 = r21_129
l000083B8_ds_f:
l000083BC:
	branch Test(NE,r3_94) l000083C0_ds_t
l000083C0_ds_t:
	r4_106 = 0x2A<32>
l000083C0_ds_f:
l000083C4:
	r4_106 = 0x71<32>
l000083C8:
l000083CC:
	Mem160[r21_15 + 4<i32>:word32] = r4_106
	word32 r30_424
	word32 r29_423
	word32 r7_416
	word32 r22_417
	word32 r24_418
	word32 r28_422
	word32 r25_419
	word32 r27_421
	word32 r26_420
	r0 = fn00005318(r0, 0<32>, 0<32>, 0<32>, out r3_138, out r6_143, out r7_416, out r19_128, out r21_129, out r22_417, out r23_131, out r24_418, out r25_419, out r26_420, out r27_421, out r28_422, out r29_423, out r30_424)
	r5_146 = r21_129
l000083E4:
	Mem182[r19_128 + 48<i32>:word32] = r3_138
	Mem187[r21_129 + 40<i32>:word32] = r0
	word32 r19_193
	word32 r22_195
	word32 r4_425
	word32 r8_426
	word32 r0_202 = fn00003674(r0, r3_138, r5_146, r6_143, r19_128, r23_131, out r4_425, out r8_426, out r19_193, out r22_195)
	word32 r19_209 = Mem187[r19_193 + 28<i32>:word32]
	word32 r3_211 = Mem187[r19_209 + 76<i32>:word32]
	word32 r8_212 = Mem187[r19_209 + 68<i32>:word32]
	Mem219[r19_209 + 60<i32>:word32] = Mem187[r19_209 + 44<i32>:word32] * 2<32>
	Mem222[(r3_211 + 0xFFFFFFFF<32>) * 2<32> + r8_212:word16] = SLICE(r0_202, word16, 0)
	fn00018C64()
	word32 r4_223 = Mem222[r19_209 + 132<i32>:word32]
	Mem225[r19_209 + 108<i32>:word32] = r0_202
	word32 r3_230 = r4_223 * 0xC<32> + 0xFFFF9DB4<32>
	word32 r6_234 = CONVERT(Mem225[r3_230:word16], word16, word32)
	word32 r4_236 = CONVERT(Mem225[r3_230 + 4<i32>:word16], word16, word32)
	word32 r3_238 = CONVERT(Mem225[r3_230 + 6<i32>:word16], word16, word32)
	Mem239[r19_209 + 128<i32>:word32] = CONVERT(Mem225[r3_230 + 2<i32>:word16], word16, word32)
	Mem240[r19_209 + 140<i32>:word32] = r6_234
	Mem241[r19_209 + 124<i32>:word32] = r3_238
	Mem242[r19_209 + 144<i32>:word32] = r4_236
	Mem243[r19_209 + 92<i32>:word32] = r0_202
	Mem244[r19_209 + 116<i32>:word32] = r0_202
	Mem245[r19_209 + 5812<i32>:word32] = r0_202
	Mem246[r19_209 + 120<i32>:word32] = 2<32>
	Mem247[r19_209 + 96<i32>:word32] = 2<32>
	Mem248[r19_209 + 104<i32>:word32] = r0_202
	Mem249[r19_209 + 72<i32>:word32] = r0_202
	r22Out = r22_195
	return r0_202
l00008270_ds_f:
l00008274:
l00008278:
	r22Out = r22
	return r0
fn00008234_exit:


word32 fn000086C8(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r20, ptr32 & r4Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000002CC
// MayUse:  r10:[0..31] r11:[0..31] r20:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r3 r4 r8
// Trashed: r10 r3 r4 r5 r8 r9
// Preserved: C r1
fn000086C8_entry:
l000086C8:
	word32 r8_13 = (-r20 | r20) & ((r9 | r8) & (r10 & r11))
	branch Test(GE,r8_13) l000086E4_ds_t
l000086E4_ds_t:
l000086E4_thunk_fn00008778:
	word32 r4_21
	word32 r3_20 = fn00008778(r4, r6, r7, out r4_21)
	r4Out = r4_21
	r8Out = r8_13
	return r3_20
l000086E4_ds_f:
l000086E8:
	word32 r5_23 = r5 + 0xFFFFFFC7<32> & 0xFFFFFFEF<32>
	word32 r5_25 = -r5_23 | r5_23
l000086F0_thunk_fn000086F4:
	word32 r4_27
	word32 r8_28
	word32 r3_26 = fn000086F4(r4, r5_25, r6, r7, out r4_27, out r8_28)
	r4Out = r4_27
	r8Out = r8_28
	return r3_26
fn000086C8_exit:


word32 fn000086F4(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000086C8
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3 r4 r8
// Trashed: C r3 r4 r8
// Preserved: r1
fn000086F4_entry:
l000086F4:
l00008718_thunk_fn0000871C:
	word32 r4_18
	word32 r8_19
	word32 r3_17 = fn0000871C(r4, r6, r7, r5 >>u 9<i32>, out r4_18, out r8_19)
	r4Out = r4_18
	r8Out = r8_19
	return r3_17
fn000086F4_exit:


word32 fn0000871C(word32 r4, word32 r6, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000086F4
// MayUse:  r4:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r3 r4 r8
// Trashed: C r3 r4 r8
// Preserved: r1
fn0000871C_entry:
l0000871C:
	branch Test(NE,r8 >>u 22<i32>) l00008794
l00008774_thunk_fn00008778:
	word32 r4_32
	word32 r3_31 = fn00008778(r4, r6, r7, out r4_32)
	r4Out = r4_32
	r8Out = <invalid>
	return r3_31
l00008774_thunk_fn00008778:
	word32 r4_35
	word32 r3_34 = fn00008778(r4, r6, r7, out r4_35)
	r4Out = r4_35
	r8Out = <invalid>
	return r3_34
fn0000871C_exit:


word32 fn00008750(word32 r4, word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
// MayUse:  r4:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r3
// Trashed: C r1 r3 r4 r8
// Preserved:
fn00008750_entry:
	word32 r3
l00008750:
	branch Test(NE,r8 >>u 9<i32>) l00008794_in_fn00008750
l00008794_in_fn00008750:
	return r3
l00008774_thunk_fn00008778:
	word32 r4_27
	return fn00008778(r4, r6, r7, out r4_27)
fn00008750_exit:


word32 fn00008778(word32 r4, word32 r6, word32 r7, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000086C8
//      fn0000871C
//      fn00008750
// MayUse:  r4:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3 r4
// Trashed: r1 r3 r4
// Preserved:
fn00008778_entry:
l00008778:
	branch Test(EQ,r6) l00008784
l0000877C:
	Mem7[r6:word32] = Mem0[r4 + 20<i32>:word32]
l00008784:
	branch Test(EQ,r7) l00008788_ds_t
l00008788_ds_t:
l000087A4:
	r4Out = r4
	return r7
l00008788_ds_f:
l0000878C:
	word32 r4_17 = Mem16[r4 + 5820<i32>:word32]
	Mem18[r7:word32] = r4_17
l00008794:
	r4Out = r4_17
	return 0<32>
fn00008778_exit:


word32 fn000087FC(ptr32 & r15Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000889C
//      fn00008918
// MayUse: 
// LiveOut: r15 r19 r21 r22 r23 r24 r3
// Trashed: r15 r19 r21 r22 r23 r24 r3
// Preserved: r1
fn000087FC_entry:
l000087FC:
l000087FC_thunk_fn00008800:
	word32 r15_5
	word32 r19_6
	word32 r21_7
	word32 r22_8
	word32 r23_9
	word32 r24_10
	word32 r3_11 = fn00008800(out r15_5, out r19_6, out r21_7, out r22_8, out r23_9, out r24_10)
	r15Out = r15_5
	r19Out = r19_6
	r21Out = r21_7
	r22Out = r22_8
	r23Out = r23_9
	r24Out = r24_10
	return r3_11
fn000087FC_exit:


word32 fn00008800(ptr32 & r15Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000087FC
//      fn0000889C
// MayUse: 
// LiveOut: r15 r19 r21 r22 r23 r24 r3
// Trashed: r1 r15 r19 r21 r22 r23 r24 r3
// Preserved:
fn00008800_entry:
	word32 r22
	word32 dwArg00
	word32 dwArg1C
	word32 dwArg20
	word32 dwArg24
	word32 dwArg28
	word32 dwArg2C
l00008800:
l00008804:
	r15Out = dwArg00
	r19Out = dwArg1C
	r21Out = dwArg20
	r22Out = dwArg24
	r23Out = dwArg28
	r24Out = dwArg2C
	return r22
fn00008800_exit:


word32 fn00008824(word32 r0, word32 r7, word32 r19, word32 r22, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r7:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r3 r4 r6 r7 r8 r9
// Trashed: r15 r18 r19 r21 r22 r23 r24 r3 r4 r5 r6 r7 r8 r9
// Preserved: C r1
fn00008824_entry:
l00008824:
	word32 r3_5 = Mem0[r19 + 4<i32>:word32]
	branch Test(GE,(-(r3_5 ^ 0x29A<32>) | r3_5 ^ 0x29A<32>) & ((-(r3_5 ^ 0x71<32>) | r3_5 ^ 0x71<32>) & ((-(r3_5 ^ 0x67<32>) | r3_5 ^ 0x67<32>) & ((-(r3_5 ^ 0x5B<32>) | r3_5 ^ 0x5B<32>) & ((-(r3_5 ^ 0x45<32>) | r3_5 ^ 0x45<32>) & (-(r3_5 ^ 0x2A<32>) | r3_5 ^ 0x2A<32>)))))) l0000888C_ds_t
l0000888C_ds_t:
l0000888C_thunk_fn00008920:
	word32 r19_36
	word32 r21_37
	word32 r22_38
	word32 r23_39
	word32 r24_40
	word32 r4_42
	word32 r6_44
	word32 r7_45
	word32 r8_46
	word32 r5_89
	word32 r15_90
	word32 r3_41 = fn00008920(r0, r19, r22, r7, out r4_42, out r5_89, out r6_44, out r7_45, out r8_46, out r15_90, out r19_36, out r21_37, out r22_38, out r23_39, out r24_40)
	r4Out = r4_42
	r6Out = r6_44
	r7Out = r7_45
	r8Out = r8_46
	r9Out = <invalid>
	r19Out = r19_36
	r21Out = r21_37
	r22Out = r22_38
	r23Out = r23_39
	r24Out = r24_40
	return r3_41
l0000888C_ds_f:
l0000888C_thunk_fn00008890:
	word32 r19_50
	word32 r21_51
	word32 r22_52
	word32 r23_53
	word32 r24_54
	word32 r4_56
	word32 r6_58
	word32 r7_59
	word32 r8_60
	word32 r3_55 = fn00008890(r0, r3_5 + 0xFFFFFFC7<32>, r19, r22, r7, out r4_56, out r6_58, out r7_59, out r8_60, out r19_50, out r21_51, out r22_52, out r23_53, out r24_54)
	r4Out = r4_56
	r6Out = r6_58
	r7Out = r7_59
	r8Out = r8_60
	r9Out = <invalid>
	r19Out = r19_50
	r21Out = r21_51
	r22Out = r22_52
	r23Out = r23_53
	r24Out = r24_54
	return r3_55
fn00008824_exit:


word32 fn00008874(word32 r0, word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r19, word32 r22, word32 r23, ptr32 & r19Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000002CC
//      fn000003C4
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r19 r22 r23 r3
// Trashed: r15 r18 r19 r21 r22 r23 r24 r3 r4 r5 r6 r7 r8
// Preserved: C r1
fn00008874_entry:
l00008874:
	branch Test(GE,(-r7 | r7) & ((r5 | r8) & r6)) l0000888C_ds_t
l0000888C_ds_t:
l0000888C_thunk_fn00008920:
	word32 r19_20
	word32 r22_22
	word32 r23_23
	word32 r4_65
	word32 r5_66
	word32 r6_67
	word32 r7_68
	word32 r8_69
	word32 r15_70
	word32 r21_71
	word32 r24_72
	word32 r3_25 = fn00008920(r0, r19, r22, r23, out r4_65, out r5_66, out r6_67, out r7_68, out r8_69, out r15_70, out r19_20, out r21_71, out r22_22, out r23_23, out r24_72)
	r19Out = r19_20
	r22Out = r22_22
	r23Out = r23_23
	return r3_25
l0000888C_ds_f:
l0000888C_thunk_fn00008890:
	word32 r19_34
	word32 r22_36
	word32 r23_37
	word32 r4_73
	word32 r6_74
	word32 r7_75
	word32 r8_76
	word32 r21_77
	word32 r24_78
	word32 r3_39 = fn00008890(r0, r3 + 0xFFFFFFC7<32>, r19, r22, r23, out r4_73, out r6_74, out r7_75, out r8_76, out r19_34, out r21_77, out r22_36, out r23_37, out r24_78)
	r19Out = r19_34
	r22Out = r22_36
	r23Out = r23_37
	return r3_39
fn00008874_exit:


word32 fn00008890(word32 r0, word32 r3, word32 r19, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008824
//      fn00008874
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r3:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r3 r4 r6 r7 r8
// Trashed: C r15 r18 r19 r21 r22 r23 r24 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn00008890_entry:
l00008890:
	word32 r3_6 = -(r3 & 0xFFFFFFEF<32>) | r3 & 0xFFFFFFEF<32>
l00008898_thunk_fn0000889C:
	word32 r22_14
	word32 r23_15
	word32 r4_18
	word32 r6_21
	word32 r7_22
	word32 r8_23
	word32 r5_34
	word32 r3_17 = fn0000889C(r0, r3_6, r19, r22, r23, out r4_18, out r5_34, out r6_21, out r7_22, out r8_23, out r22_14, out r23_15)
	r4Out = r4_18
	r6Out = r6_21
	r7Out = r7_22
	r8Out = r8_23
	r19Out = r19_12
	r21Out = r21_13
	r22Out = r22_14
	r23Out = r23_15
	r24Out = r24_16
	return r3_17
fn00008890_exit:


word32 fn0000889C(word32 r0, word32 r3, word32 r19, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000002CC
//      fn000003C4
//      fn00000538
//      fn00008824
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r3:[0..31]
// LiveOut: r22 r23 r3 r4 r5 r6 r7 r8
// Trashed: C r15 r18 r19 r21 r22 r23 r24 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn0000889C_entry:
	word32 r5
	word32 r6
	word32 r7
	word32 r8
l0000889C:
	branch Test(NE,r3 >>u 31<i32>) l0000891C_thunk_fn000087FC
l0000891C_thunk_fn000087FC:
	word32 r22_39
	word32 r23_40
	word32 r15_87
	word32 r19_88
	word32 r21_89
	word32 r24_90
	word32 r3_42 = fn000087FC(out r15_87, out r19_88, out r21_89, out r22_39, out r23_40, out r24_90)
	r4Out = r3 >>u 31<i32>
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r22Out = r22_39
	r23Out = r23_40
	return r3_42
l0000891C_thunk_fn00008920:
	word32 r22_51
	word32 r23_52
	word32 r4_55
	word32 r5_56
	word32 r6_57
	word32 r7_58
	word32 r8_59
	word32 r15_91
	word32 r19_92
	word32 r21_93
	word32 r24_94
	word32 r3_54 = fn00008920(r0, r19, r22, r23, out r4_55, out r5_56, out r6_57, out r7_58, out r8_59, out r15_91, out r19_92, out r21_93, out r22_51, out r23_52, out r24_94)
	r4Out = r4_55
	r5Out = r5_56
	r6Out = r6_57
	r7Out = r7_58
	r8Out = r8_59
	r22Out = r22_51
	r23Out = r23_52
	return r3_54
fn0000889C_exit:


word32 fn00008918(word32 r0, word32 r4, word32 r19, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r15Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000770
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r4:[0..31]
// LiveOut: r15 r19 r21 r22 r23 r24 r3 r4 r7 r8
// Trashed: C r15 r18 r19 r21 r22 r23 r24 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn00008918_entry:
	word32 r7
	word32 r8
l00008918:
	branch Test(NE,r4 >>u 1<i32>) l0000891C_thunk_fn000087FC
l0000891C_thunk_fn000087FC:
	word32 r15_6
	word32 r19_7
	word32 r21_8
	word32 r22_9
	word32 r23_10
	word32 r24_11
	word32 r3_12 = fn000087FC(out r15_6, out r19_7, out r21_8, out r22_9, out r23_10, out r24_11)
	r4Out = r4 >>u 1<i32>
	r7Out = r7
	r8Out = r8
	r15Out = r15_6
	r19Out = r19_7
	r21Out = r21_8
	r22Out = r22_9
	r23Out = r23_10
	r24Out = r24_11
	return r3_12
l0000891C_thunk_fn00008920:
	word32 r15_17
	word32 r19_19
	word32 r21_20
	word32 r22_21
	word32 r23_22
	word32 r24_23
	word32 r4_25
	word32 r7_28
	word32 r8_29
	word32 r5_59
	word32 r6_60
	word32 r3_24 = fn00008920(r0, r19, r22, r23, out r4_25, out r5_59, out r6_60, out r7_28, out r8_29, out r15_17, out r19_19, out r21_20, out r22_21, out r23_22, out r24_23)
	r4Out = r4_25
	r7Out = r7_28
	r8Out = r8_29
	r15Out = r15_17
	r19Out = r19_19
	r21Out = r21_20
	r22Out = r22_21
	r23Out = r23_22
	r24Out = r24_23
	return r3_24
fn00008918_exit:


word32 fn00008920(word32 r0, word32 r19, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r15Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008824
//      fn00008874
//      fn0000889C
//      fn00008918
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31]
// LiveOut: r15 r19 r21 r22 r23 r24 r3 r4 r5 r6 r7 r8
// Trashed: r15 r18 r19 r21 r22 r23 r24 r3 r4 r5 r6 r7 r8
// Preserved: C r1
fn00008920_entry:
	word32 r5
	word32 r6
	word32 r7
	word32 r8
l00008920:
	word32 r4_6 = Mem0[r19 + 5796<i32>:word32]
	branch r4_6 -u (Mem0[r19 + 16<i32>:word32] + 2<32>) < 0<32> l00008934_ds_t
l00008934_ds_t:
l000089E4:
l000089E4_thunk_fn00008800:
	word32 r15_12
	word32 r19_13
	word32 r21_14
	word32 r22_15
	word32 r23_16
	word32 r24_17
	word32 r3_18 = fn00008800(out r15_12, out r19_13, out r21_14, out r22_15, out r23_16, out r24_17)
	r4Out = r4_6
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r15Out = r15_12
	r19Out = r19_13
	r21Out = r21_14
	r22Out = r22_15
	r23Out = r23_16
	r24Out = r24_17
	return r3_18
l00008934_ds_f:
l00008938:
	word32 r21_28
	word32 r4_22 = Mem21[r19 + 5820<i32>:word32]
	word32 r3_25 = 0x10<32> - r4_22
	branch r3_25 >= r22 l00008950_ds_t
l00008950_ds_t:
	r21_28 = r22
l00008950_ds_f:
l00008954:
	r21_28 = r3_25
l00008958:
	word32 r8_40
	word32 r6_34 = CONVERT(Mem21[r19 + 5816<i32>:word16], word16, word32)
	word32 r18_36 = r21_28 & 0x1F<32>
	branch Test(EQ,r18_36) l00008968_ds_t
l00008968_ds_t:
	r8_40 = 1<32>
l00008968_ds_f:
	word32 r8_41 = 1<32>
l0000896C:
	r18_36 = r18_36 + 0xFFFFFFFF<32>
	branch Test(NE,r18_36) l00008974_ds_t
l00008974_ds_t:
	r8_41 = r8_41 * 2<32>
l00008974_ds_f:
	r8_40 = r8_41 * 2<32>
l00008978:
	word32 r3_59
	word32 r8_53 = r8_40 + 0xFFFFFFFF<32> & r23
	word32 r18_57 = r4_22 & 0x1F<32>
	branch Test(EQ,r4_22 & 0x1F<32>) l0000898C_ds_t
l0000898C_ds_t:
	r3_59 = r8_53
l0000898C_ds_f:
	word32 r3_60 = r8_53
l00008990:
	r18_57 = r18_57 + 0xFFFFFFFF<32>
	branch Test(NE,r18_57) l00008998_ds_t
l00008998_ds_t:
	r3_60 = r3_60 * 2<32>
l00008998_ds_f:
	r3_59 = r3_60 * 2<32>
l0000899C:
	word32 r3_108
	word32 r3_78 = r3_59 | r6_34
	Mem84[r19 + 5816<i32>:word16] = SLICE(r3_78, word16, 0)
	Mem86[r19 + 5820<i32>:word32] = r4_22 + r21_28
	word32 r31_208
	word32 r30_207
	word32 r29_206
	word32 r20_200
	word32 r26_203
	word32 r28_205
	word32 r27_204
	word32 r8_197
	word32 r21_97
	word32 r22_98
	word32 r23_99
	word32 r4_101
	word32 r5_102
	word32 r6_103
	word32 r7_104
	word32 r25_202
	word32 r10_199
	word32 r24_201
	word32 r9_198
	fn00003990(r0, r3_78, r19, r23, out r4_101, out r5_102, out r6_103, out r7_104, out r8_197, out r9_198, out r10_199, out r19, out r20_200, out r21_97, out r22_98, out r23_99, out r24_201, out r25_202, out r26_203, out r27_204, out r28_205, out r29_206, out r30_207, out r31_208)
	r22 = r22_98 - r21_97
	word32 r18_106 = r21_97 & 0x1F<32>
	branch Test(EQ,r21_97 & 0x1F<32>) l000089C4_ds_t
l000089C4_ds_t:
	r3_108 = r23_99
l000089C4_ds_f:
	word32 r3_109 = r23_99
l000089C8:
	r18_106 = r18_106 + 0xFFFFFFFF<32>
	branch Test(NE,r18_106) l000089D0_ds_t
l000089D0_ds_t:
	r3_109 = r3_109 >> 1<i32>
l000089D0_ds_f:
	r3_108 = r3_109 >> 1<i32>
l000089D4:
	branch Test(NE,r22) l000089D8_ds_t
l000089D8_ds_t:
	r23 = r3_108
l000089D8_ds_f:
l000089DC:
l000089DC_thunk_fn00008800:
	word32 r15_124
	word32 r19_125
	word32 r21_126
	word32 r22_127
	word32 r23_128
	word32 r24_129
	word32 r3_130 = fn00008800(out r15_124, out r19_125, out r21_126, out r22_127, out r23_128, out r24_129)
	r4Out = r4_101
	r5Out = r5_102
	r6Out = r6_103
	r7Out = r7_104
	r8Out = r8_53
	r15Out = r15_124
	r19Out = r19_125
	r21Out = r21_126
	r22Out = r22_127
	r23Out = r23_128
	r24Out = r24_129
	return r3_130
fn00008920_exit:


word32 fn00008BB4(word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000770
// MayUse:  r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r10 r11 r20 r3 r4 r9
// Trashed: r1 r10 r11 r12 r20 r3 r4 r5 r9
// Preserved: C
fn00008BB4_entry:
	word32 r20
	word32 r10
	word32 r11
	word32 r4
	word32 r9
l00008BB4:
	branch Test(EQ,r8) l00008BC4
l00008BB8:
	r4 = Mem0[r8:word32]
	branch Test(EQ,r5 ^ r4) l00008BCC
l00008BCC:
	word32 r4_11 = Mem10[r8 + 4<i32>:word32]
	word32 r11_27 = (-(r4_11 ^ 0x5B<32>) | r4_11 ^ 0x5B<32>) & ((-(r4_11 ^ 0x45<32>) | r4_11 ^ 0x45<32>) & (-(r4_11 ^ 0x2A<32>) | r4_11 ^ 0x2A<32>))
	word32 r5_34 = (-(r4_11 ^ 0x29A<32>) | r4_11 ^ 0x29A<32>) & ((-(r4_11 ^ 0x71<32>) | r4_11 ^ 0x71<32>) & ((-(r4_11 ^ 0x67<32>) | r4_11 ^ 0x67<32>) & r11_27))
l00008C30_thunk_fn00008C34:
	word32 r10_38
	word32 r4_40
	word32 r9_42
	word32 r3_39 = fn00008C34(r3, r4_11, r5_34, r6, r7, r8, out r4_40, out r9_42, out r10_38)
	r4Out = r4_40
	r9Out = r9_42
	r10Out = r10_38
	r11Out = r11_27
	r20Out = r4_11 ^ 0x29A<32>
	return r3_39
l00008BC4:
	r4Out = r4
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r20Out = r20
	return r3 + 0xB<32>
fn00008BB4_exit:


word32 fn00008C34(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008BB4
//      fn00008E80
//      fn0000D008
//      fn0000DB74
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r10 r3 r4 r9
// Trashed: C r10 r3 r4 r5 r9
// Preserved: r1
fn00008C34_entry:
l00008C34:
	branch Test(GE,r5) l00008C38_ds_t
l00008C38_ds_t:
l00008C38_thunk_fn00008CD8:
	word32 r4_11
	word32 r10_13
	word32 r9_14
	word32 r3_10 = fn00008CD8(r3, r6, r7, r8, out r4_11, out r9_14, out r10_13)
	r4Out = r4_11
	r9Out = r9_14
	r10Out = r10_13
	return r3_10
l00008C38_ds_f:
l00008C3C:
	word32 r4_17 = r4 + 0xFFFFFFC7<32> & 0xFFFFFFEF<32>
	branch Test(EQ,(-r4_17 | r4_17) >>u 31<i32>) l00008CD8
l00008CC8_thunk_fn00008CD8:
	word32 r4_53
	word32 r10_55
	word32 r9_56
	word32 r3_52 = fn00008CD8(r3, r6, r7, r8, out r4_53, out r9_56, out r10_55)
	r4Out = r4_53
	r9Out = r9_56
	r10Out = r10_55
	return r3_52
l00008CC8_thunk_fn00008CCC:
	word32 r10_58
	word32 r4_60
	word32 r9_62
	word32 r3_59 = fn00008CCC(r3, r6, r7, r8, out r4_60, out r9_62, out r10_58)
	r4Out = r4_60
	r9Out = r9_62
	r10Out = r10_58
	return r3_59
fn00008C34_exit:


word32 fn00008C64(word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E80
//      fn0000AFBC
//      fn0000B514
//      fn0000BA7C
// MayUse:  r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r10 r4 r9
// Trashed: C r10 r3 r4 r5 r9
// Preserved: r1
fn00008C64_entry:
l00008C64:
	branch Test(EQ,r5 >>u 25<i32>) l00008CC8_thunk_fn00008CD8
l00008CC8_thunk_fn00008CD8:
	word32 r4_35
	word32 r10_37
	word32 r9_38
	fn00008CD8(r3, r6, r7, r8, out r4_35, out r9_38, out r10_37)
	r9Out = r9_38
	r10Out = r10_37
	return r4_35
l00008CC8_thunk_fn00008CCC:
	word32 r10_40
	word32 r4_42
	word32 r9_44
	fn00008CCC(r3, r6, r7, r8, out r4_42, out r9_44, out r10_40)
	r9Out = r9_44
	r10Out = r10_40
	return r4_42
fn00008C64_exit:


word32 fn00008CC4(word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000002CC
//      fn00000770
// MayUse:  r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r10 r3 r4 r9
// Trashed: C r10 r3 r4 r5 r9
// Preserved: r1
fn00008CC4_entry:
l00008CC4:
	branch Test(EQ,r5 >>u 1<i32>) l00008CC8_thunk_fn00008CD8
l00008CC8_thunk_fn00008CD8:
	word32 r4_11
	word32 r10_13
	word32 r9_14
	word32 r3_10 = fn00008CD8(r3, r6, r7, r8, out r4_11, out r9_14, out r10_13)
	r4Out = r4_11
	r9Out = r9_14
	r10Out = r10_13
	return r3_10
l00008CC8_thunk_fn00008CCC:
	word32 r10_16
	word32 r4_18
	word32 r9_20
	word32 r3_17 = fn00008CCC(r3, r6, r7, r8, out r4_18, out r9_20, out r10_16)
	r4Out = r4_18
	r9Out = r9_20
	r10Out = r10_16
	return r3_17
fn00008CC4_exit:


word32 fn00008CCC(word32 r3, word32 r6, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008C34
//      fn00008C64
//      fn00008CC4
// MayUse:  r3:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r10 r3 r4 r9
// Trashed: C r10 r3 r4 r5 r9
// Preserved: r1
fn00008CCC_entry:
l00008CCC:
l00008CCC_thunk_fn00008CD8:
	word32 r4_9
	word32 r10_11
	word32 r9_12
	word32 r3_8 = fn00008CD8(r3 + 0xB<32>, r6, r7, r8, out r4_9, out r9_12, out r10_11)
	r4Out = r4_9
	r9Out = r9_12
	r10Out = r10_11
	return r3_8
fn00008CCC_exit:


word32 fn00008CD8(word32 r3, word32 r6, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008C34
//      fn00008C64
//      fn00008CC4
// MayUse:  r3:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r10 r3 r4 r9
// Trashed: C r10 r3 r4 r5 r9
// Preserved: r1
fn00008CD8_entry:
	word32 r10
	word32 r9
l00008CD8:
	word32 r5_5 = Mem0[r8 + 24<i32>:word32]
	branch Test(EQ,r5_5 ^ 1<32>) l00008CE4_ds_t
l00008CE4_ds_t:
l00008E64:
	branch Test(EQ,Mem0[r8 + 108<i32>:word32]) l00008E6C_ds_t
l00008E6C_ds_t:
l00008E6C_thunk_fn00008CF4:
	word32 r4_15
	word32 r3_14 = fn00008CF4(r3, 6<32>, r6, r7, r8, out r4_15)
	r4Out = r4_15
	r9Out = r9
	r10Out = r10
	return r3_14
l00008E6C_ds_f:
l00008E70:
l00008E70_thunk_fn00008CF4:
	word32 r4_21
	word32 r3_20 = fn00008CF4(r3, 0xA<32>, r6, r7, r8, out r4_21)
	r4Out = r4_21
	r9Out = r9
	r10Out = r10
	return r3_20
l00008CE4_ds_f:
l00008CE8:
	branch Test(EQ,r5_5 ^ 2<32>) l00008E08
l00008E08:
	word32 r10_24 = Mem0[r8 + 28<i32>:word32]
	branch Test(EQ,r10_24) l00008E10_ds_t
l00008E10_ds_t:
l00008E10_thunk_fn00008CF4:
	word32 r4_28
	word32 r3_27 = fn00008CF4(r3, 0x12<32>, r6, r7, r8, out r4_28)
	r4Out = r4_28
	r9Out = r9
	r10Out = r10_24
	return r3_27
l00008E10_ds_f:
	word32 r5_30 = 0x12<32>
l00008E14:
	branch Test(EQ,Mem0[r10_24 + 16<i32>:word32]) l00008E24
l00008E1C:
	r5_30 = Mem0[r10_24 + 20<i32>:word32] + 0x14<32>
l00008E24:
	word32 r4_36 = Mem0[r10_24 + 28<i32>:word32]
	branch Test(EQ,r4_36) l00008E3C
l00008E2C:
	r4_36 = r4_36 + 1<32>
	r9 = CONVERT(Mem0[r4_36 - 1<i32>:byte], byte, word32)
	branch Test(NE,r9) l00008E38_ds_t
l00008E38_ds_t:
	r5_30 = r5_30 + 1<32>
l00008E38_ds_f:
	r5_30 = r5_30 + 1<32>
l00008E3C:
	word32 r4_48 = Mem0[r10_24 + 36<i32>:word32]
	branch Test(EQ,r4_48) l00008E54
l00008E44:
	r4_48 = r4_48 + 1<32>
	r9 = CONVERT(Mem0[r4_48 - 1<i32>:byte], byte, word32)
	branch Test(NE,r9) l00008E50_ds_t
l00008E50_ds_t:
	r5_30 = r5_30 + 1<32>
l00008E50_ds_f:
	r5_30 = r5_30 + 1<32>
l00008E54:
	branch Test(EQ,Mem0[r10_24 + 44<i32>:word32]) l00008CF4
l00008E58_thunk_fn00008CF4:
	word32 r4_86
	word32 r3_85 = fn00008CF4(r3, r5_30, r6, r7, r8, out r4_86)
	r4Out = r4_86
	r9Out = r9
	r10Out = r10_24
	return r3_85
l00008E58_thunk_fn00008E5C:
	word32 r4_89
	word32 r3_88 = fn00008E5C(r3, r5_30, r6, r7, r8, out r4_89)
	r4Out = r4_89
	r9Out = r9
	r10Out = r10_24
	return r3_88
l00008CEC:
	branch Test(EQ,r5_5) l00008CF4
l00008CEC_thunk_fn00008CF4:
	word32 r4_94
	word32 r3_93 = fn00008CF4(r3, r5_5, r6, r7, r8, out r4_94)
	r4Out = r4_94
	r9Out = r9
	r10Out = r10
	return r3_93
l00008CF0:
l00008CF0_thunk_fn00008CF4:
	word32 r4_99
	word32 r3_98 = fn00008CF4(r3, 6<32>, r6, r7, r8, out r4_99)
	r4Out = r4_99
	r9Out = r9
	r10Out = r10
	return r3_98
fn00008CD8_exit:


word32 fn00008CF4(word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008CD8
//      fn00008E58
// MayUse:  r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r3 r4
// Trashed: C r1 r3 r4
// Preserved:
fn00008CF4_entry:
l00008CF4:
	word32 r4_5 = Mem0[r8 + 48<i32>:word32]
	word32 r4_6 = r4_5 ^ 0xF<32>
	branch Test(EQ,r4_5 ^ 0xF<32>) l00008D10
l00008D10:
	word32 r4_7 = Mem0[r8 + 80<i32>:word32]
	r4_6 = r4_7 ^ 0xF<32>
	branch Test(NE,r4_7 ^ 0xF<32>) l00008D00
l00008D1C:
	word32 r4_65 = (r6 >>u 12<i32>) + r7 + (r6 >>u 14<i32>) + (r6 >>u 25<i32>)
	word32 r3_67 = r4_65 + r5
l00008CD0:
	r4Out = r4_65
	return r3_67
l00008D00:
	r4Out = r4_6
	return r3 + 5<32> + r5
fn00008CF4_exit:


word32 fn00008E58(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000002CC
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r3 r4
// Trashed: C r3 r4 r5
// Preserved: r1
fn00008E58_entry:
l00008E58:
	branch Test(EQ,r4) l00008E58_thunk_fn00008CF4
l00008E58_thunk_fn00008CF4:
	word32 r4_11
	word32 r3_10 = fn00008CF4(r3, r5, r6, r7, r8, out r4_11)
	r4Out = r4_11
	return r3_10
l00008E58_thunk_fn00008E5C:
	word32 r4_14
	word32 r3_13 = fn00008E5C(r3, r5, r6, r7, r8, out r4_14)
	r4Out = r4_14
	return r3_13
fn00008E58_exit:


word32 fn00008E5C(word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008CD8
//      fn00008E58
// MayUse:  r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r3 r4
// Trashed: C r3 r4 r5
// Preserved: r1
fn00008E5C_entry:
l00008E5C:
l00008E5C_thunk_fn00008CF4:
	word32 r4_11
	word32 r3_10 = fn00008CF4(r3, r5 + 2<32>, r6, r7, r8, out r4_11)
	r4Out = r4_11
	return r3_10
fn00008E5C_exit:


word32 fn00008E80(word32 r5, word32 r6, word32 r8, word32 r9, word32 r10, word32 r21, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r19Out, ptr32 & r20Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003AA4
//      fn00003CA8
//      fn00003EC8
//      fn00005318
//      fn00005538
//      fn0000AFBC
// MayUse:  r10:[0..31] r21:[0..31] r5:[0..31] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r0 r1 r10 r11 r19 r20 r21 r22 r23 r24 r25 r26 r27 r3 r4 r5 r6 r7 r8 r9
// Trashed: r0 r1 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: C
fn00008E80_entry:
	word32 r19
	word32 r20
	word32 r22
	word32 r23
	word32 r24
	word32 r25
	word32 r26
	word32 r27
	word32 r0
	word32 r11
	word32 r4
	word32 r7
	word32 r3
l00008E80:
	branch Test(EQ,r5) l0000AC30
l00008E84:
	branch Test(EQ,Mem0[r5 + 32<i32>:word32]) l0000AC30
l00008E8C:
	branch Test(EQ,Mem0[r5 + 36<i32>:word32]) l0000AC30
l0000AC30:
	r3Out = 0xFFFFFFFE<32>
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r19Out = r19
	r20Out = r20
	r21Out = r21
	r22Out = r22
	r23Out = r23
	r24Out = r24
	r25Out = r25
	r26Out = r26
	r27Out = r27
	return r0
l00008E94:
	word32 r19_35 = Mem34[r5 + 28<i32>:word32]
	branch Test(EQ,r19_35) l000097A4
l000097A4:
l000097A4_thunk_fn00009120:
	word32 r10_41
	word32 r11_42
	word32 r19_46
	word32 r21_47
	word32 r22_48
	word32 r23_49
	word32 r24_50
	word32 r25_51
	word32 r26_52
	word32 r27_53
	word32 r3_56
	word32 r4_58
	word32 r5_59
	word32 r6_60
	word32 r7_61
	word32 r8_62
	word32 r9_63
	word32 r0_40 = fn00009120(0xFFFFFFFE<32>, r5, r8, r9, r10, r19_35, r21, out r3_56, out r4_58, out r5_59, out r6_60, out r7_61, out r8_62, out r9_63, out r10_41, out r11_42, out r19_46, out r21_47, out r22_48, out r23_49, out r24_50, out r25_51, out r26_52, out r27_53)
	r3Out = r3_56
	r4Out = r4_58
	r5Out = r5_59
	r6Out = r6_60
	r7Out = r7_61
	r8Out = r8_62
	r9Out = r9_63
	r10Out = r10_41
	r11Out = r11_42
	r19Out = r19_46
	r20Out = r20
	r21Out = r21_47
	r22Out = r22_48
	r23Out = r23_49
	r24Out = r24_50
	r25Out = r25_51
	r26Out = r26_52
	r27Out = r27_53
	return r0_40
l00008ED4:
	branch Test(EQ,r5 ^ Mem34[r19_35:word32]) l00008EE0_ds_t
l00008EE0_ds_t:
l00008F1C:
	word32 r8_68 = Mem34[r19_35 + 4<i32>:word32]
	word32 r10_235 = (-(r8_68 ^ 0x67<32>) | r8_68 ^ 0x67<32>) & ((-(r8_68 ^ 0x5B<32>) | r8_68 ^ 0x5B<32>) & ((-(r8_68 ^ 0x45<32>) | r8_68 ^ 0x45<32>) & (-(r8_68 ^ 0x2A<32>) | r8_68 ^ 0x2A<32>)))
	branch Test(GE,(-(r8_68 ^ 0x29A<32>) | r8_68 ^ 0x29A<32>) & ((-(r8_68 ^ 0x71<32>) | r8_68 ^ 0x71<32>) & r10_235)) l00008F80_ds_t
l00008F80_ds_t:
l00008F80_ds_f:
l00008F84:
	word32 r4_94 = r8_68 + 0xFFFFFFC7<32> & 0xFFFFFFEF<32>
	branch Test(NE,(-r4_94 | r4_94) >>u 31<i32>) l00009014_ds_t
l00009014_ds_t:
l00009014_thunk_fn00009120:
	word32 r10_131
	word32 r11_132
	word32 r19_136
	word32 r21_137
	word32 r22_138
	word32 r23_139
	word32 r24_140
	word32 r25_141
	word32 r26_142
	word32 r27_143
	word32 r3_146
	word32 r4_148
	word32 r5_149
	word32 r6_150
	word32 r7_151
	word32 r8_152
	word32 r9_153
	word32 r0_130 = fn00009120(0xFFFFFFFE<32>, r5, r8_68, r8_68 ^ 0x29A<32>, r10_235, r19_35, r21, out r3_146, out r4_148, out r5_149, out r6_150, out r7_151, out r8_152, out r9_153, out r10_131, out r11_132, out r19_136, out r21_137, out r22_138, out r23_139, out r24_140, out r25_141, out r26_142, out r27_143)
	r3Out = r3_146
	r4Out = r4_148
	r5Out = r5_149
	r6Out = r6_150
	r7Out = r7_151
	r8Out = r8_152
	r9Out = r9_153
	r10Out = r10_131
	r11Out = r11_132
	r19Out = r19_136
	r20Out = r8_68 ^ 0x71<32>
	r21Out = r21_137
	r22Out = r22_138
	r23Out = r23_139
	r24Out = r24_140
	r25Out = r25_141
	r26Out = r26_142
	r27Out = r27_143
	return r0_130
l00009014_ds_f:
l00009018:
	branch 5<32> -u r6 < 0<32> l00009024_ds_t
l00009024_ds_t:
l00009024_thunk_fn00009120:
	word32 r10_168
	word32 r11_169
	word32 r19_173
	word32 r21_174
	word32 r22_175
	word32 r23_176
	word32 r24_177
	word32 r25_178
	word32 r26_179
	word32 r27_180
	word32 r3_183
	word32 r4_185
	word32 r5_186
	word32 r6_187
	word32 r7_188
	word32 r8_189
	word32 r9_190
	word32 r0_167 = fn00009120(0xFFFFFFFE<32>, r5, r8_68, r8_68 ^ 0x29A<32>, r10_235, r19_35, r21, out r3_183, out r4_185, out r5_186, out r6_187, out r7_188, out r8_189, out r9_190, out r10_168, out r11_169, out r19_173, out r21_174, out r22_175, out r23_176, out r24_177, out r25_178, out r26_179, out r27_180)
	r3Out = r3_183
	r4Out = r4_185
	r5Out = r5_186
	r6Out = r6_187
	r7Out = r7_188
	r8Out = r8_189
	r9Out = r9_190
	r10Out = r10_168
	r11Out = r11_169
	r19Out = r19_173
	r20Out = r8_68 ^ 0x71<32>
	r21Out = r21_174
	r22Out = r22_175
	r23Out = r23_176
	r24Out = r24_177
	r25Out = r25_178
	r26Out = r26_179
	r27Out = r27_180
	return r0_167
l00009024_ds_f:
l00009028:
	branch Test(EQ,Mem34[r5 + 12<i32>:word32]) l0000AC38
l00009030:
	word32 r7_195 = Mem34[r5 + 4<i32>:word32]
	branch Test(EQ,r7_195) l00009038_ds_t
l00009038_ds_t:
l00009038_ds_f:
l0000903C:
	branch Test(EQ,Mem34[r5:word32]) l0000AC38
l00009044:
	word32 r4_203 = -(r6 ^ 4<32>) | r6 ^ 4<32>
	r10_235 = r4_203 >>u 31<i32>
	branch Test(LT,-(r8_68 ^ 0x29A<32>) | r8_68 ^ 0x29A<32>) l000090DC
l000090D8:
	branch Test(NE,r4_203 >>u 31<i32>) l0000AC38
l0000AC38:
	Mem243[r5 + 24<i32>:word32] = Mem34[0x0000B5B8<p32>:word32]
l0000AC44_thunk_fn00009120:
	word32 r10_253
	word32 r11_254
	word32 r19_258
	word32 r21_259
	word32 r22_260
	word32 r23_261
	word32 r24_262
	word32 r25_263
	word32 r26_264
	word32 r27_265
	word32 r3_268
	word32 r4_270
	word32 r5_271
	word32 r6_272
	word32 r7_273
	word32 r8_274
	word32 r9_275
	word32 r0_252 = fn00009120(0xFFFFFFFE<32>, r5, r8_68, r8_68 ^ 0x29A<32>, r10_235, r19_35, r21, out r3_268, out r4_270, out r5_271, out r6_272, out r7_273, out r8_274, out r9_275, out r10_253, out r11_254, out r19_258, out r21_259, out r22_260, out r23_261, out r24_262, out r25_263, out r26_264, out r27_265)
	r3Out = r3_268
	r4Out = r4_270
	r5Out = r5_271
	r6Out = r6_272
	r7Out = r7_273
	r8Out = r8_274
	r9Out = r9_275
	r10Out = r10_253
	r11Out = r11_254
	r19Out = r19_258
	r20Out = r8_68 ^ 0x71<32>
	r21Out = r21_259
	r22Out = r22_260
	r23Out = r23_261
	r24Out = r24_262
	r25Out = r25_263
	r26Out = r26_264
	r27Out = r27_265
	return r0_252
l000090DC:
	branch Test(EQ,Mem34[r5 + 16<i32>:word32]) l000090E4_ds_t
l000090E4_ds_t:
l0000AD30:
	Mem285[r5 + 24<i32>:word32] = Mem34[0x0000B5C4<p32>:word32]
l0000AD3C_thunk_fn00009120:
	word32 r10_292
	word32 r11_293
	word32 r19_297
	word32 r21_298
	word32 r22_299
	word32 r23_300
	word32 r24_301
	word32 r25_302
	word32 r26_303
	word32 r27_304
	word32 r3_307
	word32 r4_309
	word32 r5_310
	word32 r6_311
	word32 r7_312
	word32 r8_313
	word32 r9_314
	word32 r0_291 = fn00009120(0xFFFFFFFB<32>, r5, r8_68, r8_68 ^ 0x29A<32>, r4_203 >>u 31<i32>, r19_35, r21, out r3_307, out r4_309, out r5_310, out r6_311, out r7_312, out r8_313, out r9_314, out r10_292, out r11_293, out r19_297, out r21_298, out r22_299, out r23_300, out r24_301, out r25_302, out r26_303, out r27_304)
	r3Out = r3_307
	r4Out = r4_309
	r5Out = r5_310
	r6Out = r6_311
	r7Out = r7_312
	r8Out = r8_313
	r9Out = r9_314
	r10Out = r10_292
	r11Out = r11_293
	r19Out = r19_297
	r20Out = r8_68 ^ 0x71<32>
	r21Out = r21_298
	r22Out = r22_299
	r23Out = r23_300
	r24Out = r24_301
	r25Out = r25_302
	r26Out = r26_303
	r27Out = r27_304
	return r0_291
l000090E4_ds_f:
l000090E8:
	word32 r3_317 = Mem34[r19_35 + 20<i32>:word32]
	word32 r4_318 = Mem34[r19_35 + 40<i32>:word32]
	Mem319[r19_35 + 40<i32>:word32] = r6
	branch Test(NE,r3_317) l000090F8_ds_t
l000090F8_ds_t:
l0000973C:
	word32 r7_779
	word32 r6_778
	word32 r22_780
	word32 r23_781
	word32 r24_782
	word32 r25_783
	word32 r27_785
	word32 r26_784
	word32 r29_787
	word32 r28_786
	word32 r19_355
	word32 r20_356
	word32 r21_357
	word32 r4_367
	word32 r8_368
	word32 r31_789
	word32 r30_788
	word32 r9_372
	word32 r5_352
	word32 r10_370
	word32 r0_376 = fn00003990(r0_376, r3, r19_35, r6, out r4_367, out r5_352, out r6_778, out r7_779, out r8_368, out r9_372, out r10_370, out r19_355, out r20_356, out r21_357, out r22_780, out r23_781, out r24_782, out r25_783, out r26_784, out r27_785, out r28_786, out r29_787, out r30_788, out r31_789)
	word32 r3_378 = Mem319[r21_357 + 16<i32>:word32]
	word32 r22_379 = Mem319[r19_355 + 20<i32>:word32]
	branch r3_378 -u r22_379 >= 0<32> l0000975C
l00009758:
	r22_379 = r3_378
l0000975C:
	branch Test(NE,r22_379) l00009760_ds_t
l00009760_ds_t:
l000097C4:
	word32 r4_790
	fn00008C34(r3_378, r4_367, Mem319[r21_357 + 12<i32>:word32], Mem319[r19_355 + 16<i32>:word32], r22_379, r8_368, out r4_790, out r9_372, out r10_370)
	word32 r6_400 = Mem319[r19_355 + 16<i32>:word32]
	word32 r5_401 = Mem319[r21_357 + 20<i32>:word32]
	word32 r3_402 = Mem319[r21_357 + 16<i32>:word32]
	word32 r4_403 = Mem319[r19_355 + 20<i32>:word32]
	Mem405[r21_357 + 12<i32>:word32] = Mem319[r21_357 + 12<i32>:word32] + r22_379
	Mem407[r19_355 + 16<i32>:word32] = r6_400 + r22_379
	r5_352 = r5_401 + r22_379
	Mem410[r21_357 + 20<i32>:word32] = r5_352
	r3_378 = r3_402 - r22_379
	Mem411[r21_357 + 16<i32>:word32] = r3_378
	word32 r22_412 = r4_403 - r22_379
	branch Test(NE,r22_412) l00009810_ds_t
l00009810_ds_t:
	Mem413[r19_355 + 20<i32>:word32] = r22_412
l00009810_ds_f:
	Mem414[r19_355 + 20<i32>:word32] = r22_412
l00009814:
	r5_352 = Mem414[r19_355 + 8<i32>:word32]
	branch Test(NE,r3_378) l0000981C_ds_t
l0000981C_ds_t:
	Mem416[r19_355 + 16<i32>:word32] = r5_352
l0000981C_ds_f:
	Mem417[r19_355 + 16<i32>:word32] = r5_352
l00009820:
l00009760_ds_f:
l00009764:
	branch Test(EQ,r3_378) l00009768_ds_t
l00009768_ds_t:
l00009824:
	Mem425[r19_355 + 40<i32>:word32] = 0xFFFFFFFF<32>
l00009824_thunk_fn00009120:
	word32 r10_441
	word32 r11_442
	word32 r19_446
	word32 r21_447
	word32 r22_448
	word32 r23_449
	word32 r24_450
	word32 r25_451
	word32 r26_452
	word32 r27_453
	word32 r3_456
	word32 r4_458
	word32 r5_459
	word32 r6_460
	word32 r7_461
	word32 r8_462
	word32 r9_463
	word32 r0_440 = fn00009120(r3_378, r5_352, r8_368, r9_372, r10_370, r19_355, r21_357, out r3_456, out r4_458, out r5_459, out r6_460, out r7_461, out r8_462, out r9_463, out r10_441, out r11_442, out r19_446, out r21_447, out r22_448, out r23_449, out r24_450, out r25_451, out r26_452, out r27_453)
	r3Out = r3_456
	r4Out = r4_458
	r5Out = r5_459
	r6Out = r6_460
	r7Out = r7_461
	r8Out = r8_462
	r9Out = r9_463
	r10Out = r10_441
	r11Out = r11_442
	r19Out = r19_446
	r20Out = r20_356
	r21Out = r21_447
	r22Out = r22_448
	r23Out = r23_449
	r24Out = r24_450
	r25Out = r25_451
	r26Out = r26_452
	r27Out = r27_453
	return r0_440
l00009768_ds_f:
l0000976C:
	word32 r8_469 = Mem467[r19_355 + 4<i32>:word32]
	branch Test(NE,r8_469 ^ 0x29A<32>) l00009778_ds_t
l00009778_ds_t:
l00009778_thunk_fn00009120:
	word32 r10_477
	word32 r11_478
	word32 r19_482
	word32 r21_483
	word32 r22_484
	word32 r23_485
	word32 r24_486
	word32 r25_487
	word32 r26_488
	word32 r27_489
	word32 r3_492
	word32 r4_494
	word32 r5_495
	word32 r6_496
	word32 r7_497
	word32 r8_498
	word32 r9_499
	word32 r0_476 = fn00009120(r3_378, r5_352, r8_469, r8_469 ^ 0x29A<32>, r10_370, r19_355, r21_357, out r3_492, out r4_494, out r5_495, out r6_496, out r7_497, out r8_498, out r9_499, out r10_477, out r11_478, out r19_482, out r21_483, out r22_484, out r23_485, out r24_486, out r25_487, out r26_488, out r27_489)
	r3Out = r3_492
	r4Out = r4_494
	r5Out = r5_495
	r6Out = r6_496
	r7Out = r7_497
	r8Out = r8_498
	r9Out = r9_499
	r10Out = r10_477
	r11Out = r11_478
	r19Out = r19_482
	r20Out = r20_356
	r21Out = r21_483
	r22Out = r22_484
	r23Out = r23_485
	r24Out = r24_486
	r25Out = r25_487
	r26Out = r26_488
	r27Out = r27_489
	return r0_476
l00009778_ds_f:
l00009778_thunk_fn00009120:
	word32 r10_503
	word32 r11_504
	word32 r19_508
	word32 r21_509
	word32 r22_510
	word32 r23_511
	word32 r24_512
	word32 r25_513
	word32 r26_514
	word32 r27_515
	word32 r3_518
	word32 r4_520
	word32 r5_521
	word32 r6_522
	word32 r7_523
	word32 r8_524
	word32 r9_525
	word32 r0_502 = fn00009120(r3_378, r5_352, r8_469, r8_469 ^ 0x29A<32>, r10_370, r19_355, r21_357, out r3_518, out r4_520, out r5_521, out r6_522, out r7_523, out r8_524, out r9_525, out r10_503, out r11_504, out r19_508, out r21_509, out r22_510, out r23_511, out r24_512, out r25_513, out r26_514, out r27_515)
	r3Out = r3_518
	r4Out = r4_520
	r5Out = r5_521
	r6Out = r6_522
	r7Out = r7_523
	r8Out = r8_524
	r9Out = r9_525
	r10Out = r10_503
	r11Out = r11_504
	r19Out = r19_508
	r20Out = r20_356
	r21Out = r21_509
	r22Out = r22_510
	r23Out = r23_511
	r24Out = r24_512
	r25Out = r25_513
	r26Out = r26_514
	r27Out = r27_515
	return r0_502
l000090F8_ds_f:
l000090FC:
	branch Test(NE,r7_195) l00009100_ds_t
l00009100_ds_t:
l000097AC:
	branch Test(NE,r8_68 ^ 0x29A<32>) l00009134
l000097AC_thunk_fn00009120:
	word32 r10_532
	word32 r11_533
	word32 r19_537
	word32 r21_538
	word32 r22_539
	word32 r23_540
	word32 r24_541
	word32 r25_542
	word32 r26_543
	word32 r27_544
	word32 r3_547
	word32 r4_549
	word32 r5_550
	word32 r6_551
	word32 r7_552
	word32 r8_553
	word32 r9_554
	word32 r0_531 = fn00009120(r6 ^ 5<32>, r5, r8_68, r8_68 ^ 0x29A<32>, r4_203 >>u 31<i32>, r19_35, r5, out r3_547, out r4_549, out r5_550, out r6_551, out r7_552, out r8_553, out r9_554, out r10_532, out r11_533, out r19_537, out r21_538, out r22_539, out r23_540, out r24_541, out r25_542, out r26_543, out r27_544)
	r3Out = r3_547
	r4Out = r4_549
	r5Out = r5_550
	r6Out = r6_551
	r7Out = r7_552
	r8Out = r8_553
	r9Out = r9_554
	r10Out = r10_532
	r11Out = r11_533
	r19Out = r19_537
	r20Out = r8_68 ^ 0x71<32>
	r21Out = r21_538
	r22Out = r22_539
	r23Out = r23_540
	r24Out = r24_541
	r25Out = r25_542
	r26Out = r26_543
	r27Out = r27_544
	return r0_531
l000097AC_thunk_fn00009120:
	word32 r10_557
	word32 r11_558
	word32 r19_562
	word32 r21_563
	word32 r22_564
	word32 r23_565
	word32 r24_566
	word32 r25_567
	word32 r26_568
	word32 r27_569
	word32 r3_572
	word32 r4_574
	word32 r5_575
	word32 r6_576
	word32 r7_577
	word32 r8_578
	word32 r9_579
	word32 r0_556 = fn00009120(r6 ^ 5<32>, r5, r8_68, r8_68 ^ 0x29A<32>, r4_203 >>u 31<i32>, r19_35, r5, out r3_572, out r4_574, out r5_575, out r6_576, out r7_577, out r8_578, out r9_579, out r10_557, out r11_558, out r19_562, out r21_563, out r22_564, out r23_565, out r24_566, out r25_567, out r26_568, out r27_569)
	r3Out = r3_572
	r4Out = r4_574
	r5Out = r5_575
	r6Out = r6_576
	r7Out = r7_577
	r8Out = r8_578
	r9Out = r9_579
	r10Out = r10_557
	r11Out = r11_558
	r19Out = r19_562
	r20Out = r8_68 ^ 0x71<32>
	r21Out = r21_563
	r22Out = r22_564
	r23Out = r23_565
	r24Out = r24_566
	r25Out = r25_567
	r26Out = r26_568
	r27Out = r27_569
	return r0_556
l00009100_ds_f:
l00009104:
	word32 r5_582
	branch Test(NE,r6 ^ 5<32>) l00009108_ds_t
l00009108_ds_t:
	r5_582 = r6 * 2<32>
l00009108_ds_f:
l0000910C:
	r5_582 = 1<32>
l00009110:
	branch r4_318 <= 4<32> l0000911C_ds_t
l0000911C_ds_t:
l0000911C_thunk_fn00009120:
	word32 r10_596
	word32 r11_597
	word32 r19_601
	word32 r21_602
	word32 r22_603
	word32 r23_604
	word32 r24_605
	word32 r25_606
	word32 r26_607
	word32 r27_608
	word32 r3_611
	word32 r4_613
	word32 r5_614
	word32 r6_615
	word32 r7_616
	word32 r8_617
	word32 r9_618
	word32 r0_595 = fn00009120(r4_318 * 2<32>, r5_582, r8_68, r8_68 ^ 0x29A<32>, r4_203 >>u 31<i32>, r19_35, r5, out r3_611, out r4_613, out r5_614, out r6_615, out r7_616, out r8_617, out r9_618, out r10_596, out r11_597, out r19_601, out r21_602, out r22_603, out r23_604, out r24_605, out r25_606, out r26_607, out r27_608)
	r3Out = r3_611
	r4Out = r4_613
	r5Out = r5_614
	r6Out = r6_615
	r7Out = r7_616
	r8Out = r8_617
	r9Out = r9_618
	r10Out = r10_596
	r11Out = r11_597
	r19Out = r19_601
	r20Out = r8_68 ^ 0x71<32>
	r21Out = r21_602
	r22Out = r22_603
	r23Out = r23_604
	r24Out = r24_605
	r25Out = r25_606
	r26Out = r26_607
	r27Out = r27_608
	return r0_595
l0000911C_ds_f:
l0000911C_thunk_fn00009120:
	word32 r10_622
	word32 r11_623
	word32 r19_627
	word32 r21_628
	word32 r22_629
	word32 r23_630
	word32 r24_631
	word32 r25_632
	word32 r26_633
	word32 r27_634
	word32 r3_637
	word32 r4_639
	word32 r5_640
	word32 r6_641
	word32 r7_642
	word32 r8_643
	word32 r9_644
	word32 r0_621 = fn00009120(r4_318 * 2<32>, r5_582, r8_68, r8_68 ^ 0x29A<32>, r4_203 >>u 31<i32>, r19_35, r5, out r3_637, out r4_639, out r5_640, out r6_641, out r7_642, out r8_643, out r9_644, out r10_622, out r11_623, out r19_627, out r21_628, out r22_629, out r23_630, out r24_631, out r25_632, out r26_633, out r27_634)
	r3Out = r3_637
	r4Out = r4_639
	r5Out = r5_640
	r6Out = r6_641
	r7Out = r7_642
	r8Out = r8_643
	r9Out = r9_644
	r10Out = r10_622
	r11Out = r11_623
	r19Out = r19_627
	r20Out = r8_68 ^ 0x71<32>
	r21Out = r21_628
	r22Out = r22_629
	r23Out = r23_630
	r24Out = r24_631
	r25Out = r25_632
	r26Out = r26_633
	r27Out = r27_634
	return r0_621
l00008EE0_ds_f:
l00008EE0_thunk_fn00009120:
	word32 r10_648
	word32 r11_649
	word32 r19_653
	word32 r21_654
	word32 r22_655
	word32 r23_656
	word32 r24_657
	word32 r25_658
	word32 r26_659
	word32 r27_660
	word32 r3_663
	word32 r4_665
	word32 r5_666
	word32 r6_667
	word32 r7_668
	word32 r8_669
	word32 r9_670
	word32 r0_647 = fn00009120(0xFFFFFFFE<32>, r5, r8, r9, r10, r19_35, r21, out r3_663, out r4_665, out r5_666, out r6_667, out r7_668, out r8_669, out r9_670, out r10_648, out r11_649, out r19_653, out r21_654, out r22_655, out r23_656, out r24_657, out r25_658, out r26_659, out r27_660)
	r3Out = r3_663
	r4Out = r4_665
	r5Out = r5_666
	r6Out = r6_667
	r7Out = r7_668
	r8Out = r8_669
	r9Out = r9_670
	r10Out = r10_648
	r11Out = r11_649
	r19Out = r19_653
	r20Out = r20
	r21Out = r21_654
	r22Out = r22_655
	r23Out = r23_656
	r24Out = r24_657
	r25Out = r25_658
	r26Out = r26_659
	r27Out = r27_660
	return r0_647
fn00008E80_exit:


word32 fn00009120(word32 r3, word32 r5, word32 r8, word32 r9, word32 r10, word32 r19, word32 r21, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000770
//      fn00008E80
// MayUse:  r10:[0..31] r19:[0..31] r21:[0..31] r3:[0..31] r5:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r0 r10 r11 r19 r21 r22 r23 r24 r25 r26 r27 r3 r4 r5 r6 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009120_entry:
l00009120:
	word32 r3_4 = r3 + 0xFFFFFFF7<32>
l00009124:
	branch r3 + 0xFFFFFFF7<32> >= r5 l00009B00
l00009B00:
	branch Test(EQ,r10) l00009B04_ds_t
l00009B04_ds_t:
	r3_4 = 0xFFFFFFFB<32>
l00009B04_ds_f:
l00009B08:
	Mem13[r21 + 24<i32>:word32] = Mem0[0x0000B5C4<p32>:word32]
l00009B10_thunk_fn00009B8C:
	word32 r10_16
	word32 r11_17
	word32 r19_21
	word32 r21_22
	word32 r22_23
	word32 r23_24
	word32 r24_25
	word32 r25_26
	word32 r26_27
	word32 r27_28
	word32 r3_31
	word32 r4_33
	word32 r5_34
	word32 r6_35
	word32 r7_36
	word32 r8_37
	word32 r9_38
	word32 r0_15 = fn00009B8C(0xFFFFFFFB<32>, r19, out r3_31, out r4_33, out r5_34, out r6_35, out r7_36, out r8_37, out r9_38, out r10_16, out r11_17, out r19_21, out r21_22, out r22_23, out r23_24, out r24_25, out r25_26, out r26_27, out r27_28)
	r3Out = r3_31
	r4Out = r4_33
	r5Out = r5_34
	r6Out = r6_35
	r7Out = r7_36
	r8Out = r8_37
	r9Out = r9_38
	r10Out = r10_16
	r11Out = r11_17
	r19Out = r19_21
	r21Out = r21_22
	r22Out = r22_23
	r23Out = r23_24
	r24Out = r24_25
	r25Out = r25_26
	r26Out = r26_27
	r27Out = r27_28
	return r0_15
l0000912C:
	branch Test(EQ,r9) l00009130_ds_t
l00009130_ds_t:
l0000977C:
	branch Test(NE,Mem0[r21 + 4<i32>:word32]) l000097B0
l000097B0:
	Mem50[r21 + 24<i32>:word32] = Mem0[0x0000B5C4<p32>:word32]
l000097BC_thunk_fn00009B8C:
	word32 r10_53
	word32 r11_54
	word32 r19_58
	word32 r21_59
	word32 r22_60
	word32 r23_61
	word32 r24_62
	word32 r25_63
	word32 r26_64
	word32 r27_65
	word32 r3_68
	word32 r4_70
	word32 r5_71
	word32 r6_72
	word32 r7_73
	word32 r8_74
	word32 r9_75
	word32 r0_52 = fn00009B8C(0xFFFFFFFB<32>, r19, out r3_68, out r4_70, out r5_71, out r6_72, out r7_73, out r8_74, out r9_75, out r10_53, out r11_54, out r19_58, out r21_59, out r22_60, out r23_61, out r24_62, out r25_63, out r26_64, out r27_65)
	r3Out = r3_68
	r4Out = r4_70
	r5Out = r5_71
	r6Out = r6_72
	r7Out = r7_73
	r8Out = r8_74
	r9Out = r9_75
	r10Out = r10_53
	r11Out = r11_54
	r19Out = r19_58
	r21Out = r21_59
	r22Out = r22_60
	r23Out = r23_61
	r24Out = r24_62
	r25Out = r25_63
	r26Out = r26_64
	r27Out = r27_65
	return r0_52
l00009780_thunk_fn00009B8C:
	word32 r10_79
	word32 r11_80
	word32 r19_84
	word32 r21_85
	word32 r22_86
	word32 r23_87
	word32 r24_88
	word32 r25_89
	word32 r26_90
	word32 r27_91
	word32 r3_94
	word32 r4_96
	word32 r5_97
	word32 r6_98
	word32 r7_99
	word32 r8_100
	word32 r9_101
	word32 r0_78 = fn00009B8C(r3_4, r19, out r3_94, out r4_96, out r5_97, out r6_98, out r7_99, out r8_100, out r9_101, out r10_79, out r11_80, out r19_84, out r21_85, out r22_86, out r23_87, out r24_88, out r25_89, out r26_90, out r27_91)
	r3Out = r3_94
	r4Out = r4_96
	r5Out = r5_97
	r6Out = r6_98
	r7Out = r7_99
	r8Out = r8_100
	r9Out = r9_101
	r10Out = r10_79
	r11Out = r11_80
	r19Out = r19_84
	r21Out = r21_85
	r22Out = r22_86
	r23Out = r23_87
	r24Out = r24_88
	r25Out = r25_89
	r26Out = r26_90
	r27Out = r27_91
	return r0_78
l00009130_ds_f:
l00009134:
	branch Test(NE,r8 ^ 0x2A<32>) l00009138_ds_t
l00009138_ds_t:
l00009138_thunk_fn00009B8C:
	word32 r10_106
	word32 r11_107
	word32 r19_111
	word32 r21_112
	word32 r22_113
	word32 r23_114
	word32 r24_115
	word32 r25_116
	word32 r26_117
	word32 r27_118
	word32 r3_121
	word32 r4_123
	word32 r5_124
	word32 r6_125
	word32 r7_126
	word32 r8_127
	word32 r9_128
	word32 r0_105 = fn00009B8C(1<32>, r19, out r3_121, out r4_123, out r5_124, out r6_125, out r7_126, out r8_127, out r9_128, out r10_106, out r11_107, out r19_111, out r21_112, out r22_113, out r23_114, out r24_115, out r25_116, out r26_117, out r27_118)
	r3Out = r3_121
	r4Out = r4_123
	r5Out = r5_124
	r6Out = r6_125
	r7Out = r7_126
	r8Out = r8_127
	r9Out = r9_128
	r10Out = r10_106
	r11Out = r11_107
	r19Out = r19_111
	r21Out = r21_112
	r22Out = r22_113
	r23Out = r23_114
	r24Out = r24_115
	r25Out = r25_116
	r26Out = r26_117
	r27Out = r27_118
	return r0_105
l00009138_ds_f:
l0000913C:
	branch Mem0[r19 + 136<i32>:word32] <= 1<32> l00009180_ds_t
l00009180_ds_t:
l00009180_thunk_fn00009B8C:
	word32 r10_149
	word32 r11_150
	word32 r19_154
	word32 r21_155
	word32 r22_156
	word32 r23_157
	word32 r24_158
	word32 r25_159
	word32 r26_160
	word32 r27_161
	word32 r3_164
	word32 r4_166
	word32 r5_167
	word32 r6_168
	word32 r7_169
	word32 r8_170
	word32 r9_171
	word32 r0_148 = fn00009B8C(1<32>, r19, out r3_164, out r4_166, out r5_167, out r6_168, out r7_169, out r8_170, out r9_171, out r10_149, out r11_150, out r19_154, out r21_155, out r22_156, out r23_157, out r24_158, out r25_159, out r26_160, out r27_161)
	r3Out = r3_164
	r4Out = r4_166
	r5Out = r5_167
	r6Out = r6_168
	r7Out = r7_169
	r8Out = r8_170
	r9Out = r9_171
	r10Out = r10_149
	r11Out = r11_150
	r19Out = r19_154
	r21Out = r21_155
	r22Out = r22_156
	r23Out = r23_157
	r24Out = r24_158
	r25Out = r25_159
	r26Out = r26_160
	r27Out = r27_161
	return r0_148
l00009180_ds_f:
l00009180_thunk_fn00009B8C:
	word32 r10_175
	word32 r11_176
	word32 r19_180
	word32 r21_181
	word32 r22_182
	word32 r23_183
	word32 r24_184
	word32 r25_185
	word32 r26_186
	word32 r27_187
	word32 r3_190
	word32 r4_192
	word32 r5_193
	word32 r6_194
	word32 r7_195
	word32 r8_196
	word32 r9_197
	word32 r0_174 = fn00009B8C(1<32>, r19, out r3_190, out r4_192, out r5_193, out r6_194, out r7_195, out r8_196, out r9_197, out r10_175, out r11_176, out r19_180, out r21_181, out r22_182, out r23_183, out r24_184, out r25_185, out r26_186, out r27_187)
	r3Out = r3_190
	r4Out = r4_192
	r5Out = r5_193
	r6Out = r6_194
	r7Out = r7_195
	r8Out = r8_196
	r9Out = r9_197
	r10Out = r10_175
	r11Out = r11_176
	r19Out = r19_180
	r21Out = r21_181
	r22Out = r22_182
	r23Out = r23_183
	r24Out = r24_184
	r25Out = r25_185
	r26Out = r26_186
	r27Out = r27_187
	return r0_174
fn00009120_exit:


void fn00009178(word32 r3, word32 r4, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000002CC
//      fn000003C4
// MayUse:  r19:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009178_entry:
l00009178:
	branch r3 >= r4 l00009180_ds_t
l00009180_ds_t:
l00009180_thunk_fn00009B8C:
	word32 r3_89
	word32 r4_90
	word32 r5_91
	word32 r6_92
	word32 r7_93
	word32 r8_94
	word32 r9_95
	word32 r10_96
	word32 r11_97
	word32 r19_98
	word32 r21_99
	word32 r22_100
	word32 r23_101
	word32 r24_102
	word32 r25_103
	word32 r26_104
	word32 r27_105
	fn00009B8C(r3, r19, out r3_89, out r4_90, out r5_91, out r6_92, out r7_93, out r8_94, out r9_95, out r10_96, out r11_97, out r19_98, out r21_99, out r22_100, out r23_101, out r24_102, out r25_103, out r26_104, out r27_105)
	return
l00009180_ds_f:
l00009180_thunk_fn00009184:
	word32 r3_106
	word32 r4_107
	word32 r5_108
	word32 r6_109
	word32 r7_110
	word32 r8_111
	word32 r9_112
	word32 r10_113
	word32 r11_114
	word32 r19_115
	word32 r21_116
	word32 r22_117
	word32 r23_118
	word32 r24_119
	word32 r25_120
	word32 r26_121
	word32 r27_122
	fn00009184(out r3_106, out r4_107, out r5_108, out r6_109, out r7_110, out r8_111, out r9_112, out r10_113, out r11_114, out r19_115, out r21_116, out r22_117, out r23_118, out r24_119, out r25_120, out r26_121, out r27_122)
	return
fn00009178_exit:


word32 fn00009184(ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009178
//      fn00009B8C
// MayUse: 
// LiveOut: r0 r10 r11 r19 r21 r22 r23 r24 r25 r26 r27 r3 r4 r5 r6 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009184_entry:
l00009184_thunk_fn00009B8C:
	word32 r19_302
	word32 r3_303
	word32 r22_304
	word32 r5_305
	word32 r6_306
	word32 r4_308
	word32 r7_309
	word32 r21_310
	word32 r25_311
	word32 r8_313
	word32 r23_314
	word32 r24_315
	word32 r26_316
	word32 r27_317
	word32 r9_322
	word32 r10_323
	word32 r11_324
	word32 r0_321 = fn00009B8C(r3, r19, out r3_303, out r4_308, out r5_305, out r6_306, out r7_309, out r8_313, out r9_322, out r10_323, out r11_324, out r19_302, out r21_310, out r22_304, out r23_314, out r24_315, out r25_311, out r26_316, out r27_317)
	r3Out = r3_303
	r4Out = r4_308
	r5Out = r5_305
	r6Out = r6_306
	r7Out = r7_309
	r8Out = r8_313
	r9Out = r9_322
	r10Out = r10_323
	r11Out = r11_324
	r19Out = r19_302
	r21Out = r21_310
	r22Out = r22_304
	r23Out = r23_314
	r24Out = r24_315
	r25Out = r25_311
	r26Out = r26_316
	r27Out = r27_317
	return r0_321
fn00009184_exit:


word32 fn00009408(word32 r0, word32 r3, word32 r4, word32 r8, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009184
//      fn00009E48
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r3:[0..31] r4:[0..31] r8:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r25 r26 r27 r28 r3 r7 r8
// Trashed: C r1 r10 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r0
fn00009408_entry:
	word32 dwArg1C
	word32 dwArg24
	word32 dwArg28
	word32 dwArg2C
	word32 dwArg30
	word32 dwArg34
	word32 dwArg38
	word32 dwArg3C
	word32 dwArg40
	word32 r7
l00009408:
	word32 r3_108
	branch Test(EQ,r4) l0000940C_ds_t
l0000940C_ds_t:
l0000A0B0:
	r3_108 = Mem0[r21 + 16<i32>:word32]
l0000A0B4:
	branch Test(NE,r3_108) l00009FD4
l00009FD4:
	r3_108 = 0<32>
l0000A0B8:
l0000940C_ds_f:
l00009410:
	branch Test(NE,r3 ^ 1<32>) l00009414_ds_t
l00009414_ds_t:
l00009414_ds_f:
l00009418:
	branch Test(EQ,r23 ^ 1<32>) l0000941C_ds_t
l0000941C_ds_t:
l0000A758:
	fn00003A60()
l0000941C_ds_f:
l00009420:
	branch Test(EQ,r23 ^ 5<32>) l00009424_ds_t
l00009424_ds_t:
	r8 = 0<32>
l00009424_ds_f:
l00009428:
	word32 r23_37
	r4 = fn0000371C(r0, r23 ^ 5<32>, r4, 0<32>, r19, r22, r23 ^ 3<32>, r25, r26, out r8, out r19, out r21, out r23_37, out r24)
	branch Test(EQ,r23_37) l00009444_ds_t
l00009444_ds_t:
l0000AF30:
	word32 r3_49 = Mem0[r19 + 76<i32>:word32]
	word32 r4_50 = Mem0[r19 + 68<i32>:word32]
	Mem57[(r3_49 + 0xFFFFFFFF<32>) * 2<32> + r4_50:word16] = SLICE(r23_37, word16, 0)
	word32 r3_52 = (r3_49 + 0xFFFFFFFF<32>) * 2<32>
	word32 r10_706
	word32 r9_705
	r4 = fn00008C64(r3_52, r4_50, r23_37, r3_52, r8, out r9_705, out r10_706)
	word32 r3_64 = Mem57[r19 + 116<i32>:word32]
	branch Test(NE,r3_64) l00009448
l0000AF60:
	Mem65[r19 + 108<i32>:word32] = r3_64
	Mem66[r19 + 92<i32>:word32] = r3_64
	Mem67[r19 + 5812<i32>:word32] = r3_64
l00009444_ds_f:
l00009448:
	word32 r23_71 = Mem70[r21 + 28<i32>:word32]
l0000944C:
	word32 r30_677
	word32 r31_678
	word32 r29_676
	word32 r4_659
	word32 r6_661
	word32 r7_662
	word32 r5_660
	word32 r8_663
	word32 r9_664
	word32 r10_665
	word32 r19_666
	word32 r20_667
	word32 r21_668
	word32 r26_673
	word32 r23_670
	word32 r25_672
	word32 r24_671
	word32 r27_674
	word32 r22_669
	word32 r28_675
	fn00003990(r0, r3, r19, r23, out r4_659, out r5_660, out r6_661, out r7_662, out r8_663, out r9_664, out r10_665, out r19_666, out r20_667, out r21_668, out r22_669, out r23_670, out r24_671, out r25_672, out r26_673, out r27_674, out r28_675, out r29_676, out r30_677, out r31_678)
	r3_108 = Mem70[r21 + 16<i32>:word32]
	word32 r22_75 = Mem70[r23_71 + 20<i32>:word32]
	branch r3_108 -u r22_75 >= 0<32> l0000946C
l00009468:
	r22_75 = r3_108
l0000946C:
	branch Test(EQ,r22_75) l00009470_ds_t
l00009470_ds_t:
	r7 = r22_75
l00009470_ds_f:
l00009474:
	word32 r10_681
	word32 r4_679
	word32 r9_680
	fn00008C34(r3_108, r4, Mem70[r21 + 12<i32>:word32], Mem70[r23_71 + 16<i32>:word32], r22_75, r8, out r4_679, out r9_680, out r10_681)
	word32 r6_99 = Mem70[r23_71 + 16<i32>:word32]
	word32 r5_100 = Mem70[r21 + 20<i32>:word32]
	word32 r3_101 = Mem70[r21 + 16<i32>:word32]
	word32 r4_102 = Mem70[r23_71 + 20<i32>:word32]
	r7 = Mem70[r21 + 12<i32>:word32] + r22_75
	Mem104[r21 + 12<i32>:word32] = r7
	Mem106[r23_71 + 16<i32>:word32] = r6_99 + r22_75
	Mem109[r21 + 20<i32>:word32] = r5_100 + r22_75
	r3_108 = r3_101 - r22_75
	Mem110[r21 + 16<i32>:word32] = r3_108
	word32 r22_111 = r4_102 - r22_75
	branch Test(NE,r22_111) l000094C0_ds_t
l000094C0_ds_t:
	Mem112[r23_71 + 20<i32>:word32] = r22_111
l000094C0_ds_f:
	Mem113[r23_71 + 20<i32>:word32] = r22_111
l000094C4:
	Mem115[r23_71 + 16<i32>:word32] = Mem113[r23_71 + 8<i32>:word32]
l000094CC:
	branch Test(EQ,r3_108) l000094D0_ds_t
l000094D0_ds_t:
l0000A0BC:
	Mem123[r19 + 40<i32>:word32] = 0xFFFFFFFF<32>
l000094D0_ds_f:
l000094D4:
	branch Test(NE,r24) l000094D8_ds_t
l000094D8_ds_t:
	r3_108 = 0<32>
l000094D8_ds_f:
l000094DC:
	word32 r3_135 = Mem133[r19 + 24<i32>:word32]
	branch Test(LE,r3_135) l0000A674
l0000A674:
	r3_108 = 1<32>
l00008EE4:
l000094E4:
	word32 r4_220
	word32 r4_145 = Mem133[r19 + 20<i32>:word32]
	word32 r5_148 = Mem133[r21 + 48<i32>:word32]
	Mem151[r19 + 20<i32>:word32] = r4_145 + 1<32>
	branch Test(EQ,r3_135 ^ 2<32>) l000094FC_ds_t
l000094FC_ds_t:
	word32 r6_152 = Mem151[r19 + 8<i32>:word32]
l0000AD44:
	Mem154[r4_145 + r6_152:byte] = SLICE(r5_148, byte, 0)
	word32 r3_155 = Mem154[r19 + 20<i32>:word32]
	word32 r6_156 = Mem154[r21 + 48<i32>:word32]
	word32 r4_157 = Mem154[r19 + 8<i32>:word32]
	Mem159[r19 + 20<i32>:word32] = r3_155 + 1<32>
	Mem169[r3_155 + r4_157:byte] = SLICE(r6_156 >>u 8<i32>, byte, 0)
	word32 r3_170 = Mem169[r19 + 20<i32>:word32]
	word32 r5_172 = CONVERT(Mem169[r21 + 48<i32>:word16], word16, word32)
	word32 r4_173 = Mem169[r19 + 8<i32>:word32]
	Mem175[r19 + 20<i32>:word32] = r3_170 + 1<32>
	Mem177[r3_170 + r4_173:byte] = SLICE(r5_172, byte, 0)
	word32 r3_178 = Mem177[r19 + 20<i32>:word32]
	word32 r5_180 = CONVERT(Mem177[r21 + 48<i32>:byte], byte, word32)
	word32 r4_181 = Mem177[r19 + 8<i32>:word32]
	Mem183[r19 + 20<i32>:word32] = r3_178 + 1<32>
	Mem185[r3_178 + r4_181:byte] = SLICE(r5_180, byte, 0)
	word32 r3_186 = Mem185[r19 + 20<i32>:word32]
	word32 r5_187 = Mem185[r21 + 8<i32>:word32]
	word32 r4_188 = Mem185[r19 + 8<i32>:word32]
	Mem190[r19 + 20<i32>:word32] = r3_186 + 1<32>
	Mem192[r3_186 + r4_188:byte] = SLICE(r5_187, byte, 0)
	word32 r3_193 = Mem192[r19 + 20<i32>:word32]
	word32 r6_194 = Mem192[r21 + 8<i32>:word32]
	word32 r4_195 = Mem192[r19 + 8<i32>:word32]
	Mem197[r19 + 20<i32>:word32] = r3_193 + 1<32>
	Mem208[r3_193 + r4_195:byte] = SLICE(r6_194 >>u 8<i32>, byte, 0)
	word32 r3_209 = Mem208[r19 + 20<i32>:word32]
	word32 r5_211 = CONVERT(Mem208[r21 + 8<i32>:word16], word16, word32)
	word32 r4_212 = Mem208[r19 + 8<i32>:word32]
	Mem214[r19 + 20<i32>:word32] = r3_209 + 1<32>
	Mem216[r3_209 + r4_212:byte] = SLICE(r5_211, byte, 0)
	word32 r5_218 = CONVERT(Mem216[r21 + 8<i32>:byte], byte, word32)
	word32 r3_219 = Mem216[r19 + 20<i32>:word32]
	r4_220 = Mem216[r19 + 8<i32>:word32]
	Mem222[r19 + 20<i32>:word32] = r3_219 + 1<32>
	Mem224[r3_219 + r4_220:byte] = SLICE(r5_218, byte, 0)
l000094FC_ds_f:
	word32 r6_225 = Mem151[r19 + 8<i32>:word32]
l00009500:
	Mem251[r4_145 + r6_225:byte] = SLICE(r5_148 >>u 24<i32>, byte, 0)
	word32 r3_252 = Mem251[r19 + 20<i32>:word32]
	word32 r4_253 = Mem251[r19 + 8<i32>:word32]
	Mem271[r19 + 20<i32>:word32] = r3_252 + 1<32>
	Mem273[r3_252 + r4_253:byte] = SLICE(r5_148 >>u 16<i32>, byte, 0)
	word32 r3_274 = Mem273[r19 + 20<i32>:word32]
	r4_220 = CONVERT(Mem273[r21 + 50<i32>:word16], word16, word32)
	word32 r5_277 = Mem273[r19 + 8<i32>:word32]
	Mem279[r19 + 20<i32>:word32] = r3_274 + 1<32>
	Mem290[r3_274 + r5_277:byte] = SLICE(r4_220 >>u 8<i32>, byte, 0)
	word32 r3_291 = Mem290[r19 + 20<i32>:word32]
	word32 r5_292 = Mem290[r19 + 8<i32>:word32]
	Mem294[r19 + 20<i32>:word32] = r3_291 + 1<32>
	Mem296[r3_291 + r5_292:byte] = SLICE(r4_220, byte, 0)
l00009610:
	word32 r23_299 = Mem298[r21 + 28<i32>:word32]
	word32 r7_685
	word32 r6_684
	word32 r5_683
	word32 r4_682
	word32 r9_687
	word32 r21_691
	word32 r19_689
	word32 r20_690
	word32 r10_688
	word32 r23_693
	word32 r25_695
	word32 r26_696
	word32 r8_686
	word32 r24_694
	word32 r28_698
	word32 r31_701
	word32 r30_700
	word32 r29_699
	word32 r22_692
	word32 r27_697
	fn00003990(r0, r3, r19, r23, out r4_682, out r5_683, out r6_684, out r7_685, out r8_686, out r9_687, out r10_688, out r19_689, out r20_690, out r21_691, out r22_692, out r23_693, out r24_694, out r25_695, out r26_696, out r27_697, out r28_698, out r29_699, out r30_700, out r31_701)
	word32 r3_302 = Mem298[r23_299 + 20<i32>:word32]
	word32 r22_303 = Mem298[r21 + 16<i32>:word32]
	branch r3_302 -u r22_303 >= 0<32> l00009634
l00009630:
	r22_303 = r3_302
l00009634:
	branch Test(EQ,r22_303) l00009638_ds_t
l00009638_ds_t:
	r7 = r22_303
l00009638_ds_f:
l0000963C:
	word32 r4_702
	word32 r9_703
	word32 r10_704
	fn00008C34(r3_302, r4_220, Mem298[r21 + 12<i32>:word32], Mem298[r23_299 + 16<i32>:word32], r22_303, r8, out r4_702, out r9_703, out r10_704)
	word32 r6_330 = Mem298[r23_299 + 16<i32>:word32]
	word32 r5_331 = Mem298[r21 + 20<i32>:word32]
	word32 r4_332 = Mem298[r21 + 16<i32>:word32]
	word32 r3_333 = Mem298[r23_299 + 20<i32>:word32]
	r7 = Mem298[r21 + 12<i32>:word32] + r22_303
	Mem335[r21 + 12<i32>:word32] = r7
	Mem337[r23_299 + 16<i32>:word32] = r6_330 + r22_303
	Mem340[r21 + 20<i32>:word32] = r5_331 + r22_303
	Mem341[r21 + 16<i32>:word32] = r4_332 - r22_303
	word32 r22_342 = r3_333 - r22_303
	branch Test(NE,r22_342) l00009688_ds_t
l00009688_ds_t:
	Mem343[r23_299 + 20<i32>:word32] = r22_342
l00009688_ds_f:
	Mem344[r23_299 + 20<i32>:word32] = r22_342
l0000968C:
	Mem346[r23_299 + 16<i32>:word32] = Mem344[r23_299 + 8<i32>:word32]
l00009694:
	word32 r3_351 = Mem350[r19 + 24<i32>:word32]
	branch Test(LE,r3_351) l000096A4
l0000969C:
	Mem353[r19 + 24<i32>:word32] = -r3_351
l000096A4:
	word32 r3_356 = Mem355[r19 + 20<i32>:word32]
	r3_108 = ~(-r3_356 | r3_356) >>u 31<i32>
l00008EE8:
	r7Out = r7
	r8Out = r8
	r19Out = dwArg1C
	r21Out = dwArg24
	r22Out = dwArg28
	r23Out = dwArg2C
	r24Out = dwArg30
	r25Out = dwArg34
	r26Out = dwArg38
	r27Out = dwArg3C
	r28Out = dwArg40
	return r3_108
fn00009408_exit:


void fn00009980(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r26)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r26:[0..31] r3:[0..31] r4:[0..31] r5:[0..7] r6:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009980_entry:
l00009980:
	Mem5[r19 + 20<i32>:word32] = r6
	Mem10[r3 + r4:byte] = SLICE(r5, byte, 0)
	word32 r3_12 = Mem10[r19 + 20<i32>:word32]
	word32 r4_13 = Mem10[r19 + 8<i32>:word32]
	word32 r6_14 = Mem10[Mem10[r19 + 28<i32>:word32] + 4<i32>:word32]
	Mem16[r19 + 20<i32>:word32] = r3_12 + 1<32>
	Mem27[r3_12 + r4_13:byte] = SLICE(r6_14 >>u 8<i32>, byte, 0)
	word32 r3_29 = Mem27[r19 + 20<i32>:word32]
	word32 r4_30 = Mem27[r19 + 8<i32>:word32]
	word32 r5_32 = CONVERT(Mem27[Mem27[r19 + 28<i32>:word32] + 4<i32>:word16], word16, word32)
	Mem34[r19 + 20<i32>:word32] = r3_29 + 1<32>
	Mem36[r3_29 + r4_30:byte] = SLICE(r5_32, byte, 0)
	word32 r3_38 = Mem36[r19 + 20<i32>:word32]
	word32 r4_39 = Mem36[r19 + 8<i32>:word32]
	word32 r5_41 = CONVERT(Mem36[Mem36[r19 + 28<i32>:word32] + 4<i32>:byte], byte, word32)
	Mem43[r19 + 20<i32>:word32] = r3_38 + 1<32>
	Mem45[r3_38 + r4_39:byte] = SLICE(r5_41, byte, 0)
	word32 r3_46 = Mem45[r19 + 132<i32>:word32]
	branch Test(EQ,r3_46 ^ 9<32>) l00009A0C_ds_t
l00009A0C_ds_t:
l00009A0C_thunk_fn0000A774:
	fn0000A774(r0, r8, r19, r21, r22, r23, r24, r26)
	return
l00009A0C_ds_f:
l00009A0C_thunk_fn00009A10:
	fn00009A10(r0, r3_46, 1<32>, r8, r19, r21, r22, r23, r24, r26)
	return
fn00009980_exit:


void fn00009A10(word32 r0, word32 r3, word32 r4, word32 r8, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r26)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009980
//      fn00009B74
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r26:[0..31] r3:[0..31] r4:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009A10_entry:
l00009A10:
	branch r4 >= Mem0[r19 + 136<i32>:word32] l0000A654
l0000A654:
	branch r4 < r3 l0000A65C_ds_t
l0000A65C_ds_t:
l0000A65C_thunk_fn0000A774:
	fn0000A774(r0, r8, r19, r21, r22, r23, r24, r26)
	return
l0000A65C_ds_f:
l0000A660:
l0000A660_thunk_fn0000A774:
	fn0000A774(r0, r8, r19, r21, r22, r23, r24, r26)
	return
l00009A1C:
l00009A1C_thunk_fn0000A774:
	fn0000A774(r0, r8, r19, r21, r22, r23, r24, r26)
	return
fn00009A10_exit:


void fn00009B70(word32 r0, word32 r8, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009B70_entry:
l00009B70:
	Mem5[r25 + 20<i32>:word32] = r22
l00009B70_thunk_fn00009B74:
	fn00009B74(r0, r8, r19, r21, r22, r23, r24, r25, r26)
	return
fn00009B70_exit:


void fn00009B74(word32 r0, word32 r8, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009184
//      fn00009B70
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009B74_entry:
	word32 r3
l00009B74:
	Mem6[r25 + 16<i32>:word32] = Mem0[r25 + 8<i32>:word32]
l0000936C:
	branch Test(NE,Mem6[r19 + 20<i32>:word32]) l00009374_ds_t
l00009374_ds_t:
l00009B80:
	Mem10[r19 + 40<i32>:word32] = 0xFFFFFFFF<32>
l00009B84_thunk_fn00009408:
	word32 r23_656
	word32 r22_655
	word32 r21_654
	word32 r19_653
	word32 r8_652
	word32 r7_651
	word32 r24_657
	word32 r25_658
	word32 r26_659
	word32 r27_660
	word32 r28_661
	fn00009408(r0, 0<32>, 0xFFFFFFFF<32>, r8, r19, r21, r22, r23, r24, r25, r26, out r7_651, out r8_652, out r19_653, out r21_654, out r22_655, out r23_656, out r24_657, out r25_658, out r26_659, out r27_660, out r28_661)
	return
l00009374_ds_f:
l00009378:
	word32 r8_238 = Mem6[r19 + 4<i32>:word32]
l0000937C:
	branch Test(EQ,r8_238 ^ 0x39<32>) l0000982C
l0000982C:
	word32 r22_52
	word32 r6_623
	word32 r25_624
	word32 r4_622
	word32 r27_625
	word32 r31_626
	word32 r3_60 = fn00007044(r19, r21, r22, r23, out r4_622, out r6_623, out r19, out r21, out r22_52, out r23, out r24, out r25_624, out r26, out r27_625, out r31_626)
	word32 r4_68 = Mem6[r19 + 20<i32>:word32]
	word32 r5_69 = Mem6[r19 + 8<i32>:word32]
	Mem70[r21 + 48<i32>:word32] = r3_60
	Mem72[r19 + 20<i32>:word32] = r4_68 + 1<32>
	Mem75[r4_68 + r5_69:byte] = 0x1F<8>
	word32 r3_76 = Mem75[r19 + 20<i32>:word32]
	word32 r4_77 = Mem75[r19 + 8<i32>:word32]
	Mem79[r19 + 20<i32>:word32] = r3_76 + 1<32>
	Mem82[r3_76 + r4_77:byte] = 0x8B<8>
	word32 r3_83 = Mem82[r19 + 20<i32>:word32]
	word32 r4_84 = Mem82[r19 + 8<i32>:word32]
	Mem86[r19 + 20<i32>:word32] = r3_83 + 1<32>
	Mem89[r3_83 + r4_84:byte] = 8<8>
	word32 r4_123 = Mem89[r19 + 28<i32>:word32]
	branch Test(EQ,r4_123) l0000A5CC
l0000A5CC:
	word32 r3_91 = Mem89[r19 + 20<i32>:word32]
	word32 r5_92 = Mem89[r19 + 8<i32>:word32]
	Mem94[r19 + 20<i32>:word32] = r3_91 + 1<32>
	Mem96[r3_91 + r5_92:byte] = SLICE(r4_123, byte, 0)
	word32 r3_97 = Mem96[r19 + 20<i32>:word32]
	word32 r5_98 = Mem96[r19 + 8<i32>:word32]
	Mem100[r19 + 20<i32>:word32] = r3_97 + 1<32>
	Mem102[r3_97 + r5_98:byte] = SLICE(r4_123, byte, 0)
	word32 r3_103 = Mem102[r19 + 20<i32>:word32]
	word32 r5_104 = Mem102[r19 + 8<i32>:word32]
	Mem106[r19 + 20<i32>:word32] = r3_103 + 1<32>
	Mem108[r3_103 + r5_104:byte] = SLICE(r4_123, byte, 0)
	word32 r3_109 = Mem108[r19 + 20<i32>:word32]
	word32 r5_110 = Mem108[r19 + 8<i32>:word32]
	Mem112[r19 + 20<i32>:word32] = r3_109 + 1<32>
	Mem114[r3_109 + r5_110:byte] = SLICE(r4_123, byte, 0)
	word32 r3_115 = Mem114[r19 + 20<i32>:word32]
	word32 r5_116 = Mem114[r19 + 8<i32>:word32]
	Mem118[r19 + 20<i32>:word32] = r3_115 + 1<32>
	Mem120[r3_115 + r5_116:byte] = SLICE(r4_123, byte, 0)
	word32 r3_121 = Mem120[r19 + 132<i32>:word32]
	branch Test(EQ,r3_121 ^ 9<32>) l0000A67C
l0000A67C:
	r4_123 = 2<32>
l0000A63C:
	branch Mem120[r19 + 136<i32>:word32] <= 1<32> l0000A748
l0000A748:
	branch r3_121 > 1<32> l0000A680
l0000A750:
	r4_123 = 4<32>
l0000A64C:
	r4_123 = 4<32>
l0000A680:
	word32 r3_132 = Mem120[r19 + 20<i32>:word32]
	word32 r5_133 = Mem120[r19 + 8<i32>:word32]
	Mem135[r19 + 20<i32>:word32] = r3_132 + 1<32>
	Mem138[r3_132 + r5_133:byte] = SLICE(r4_123, byte, 0)
	word32 r3_139 = Mem138[r19 + 20<i32>:word32]
	word32 r4_140 = Mem138[r19 + 8<i32>:word32]
	Mem142[r19 + 20<i32>:word32] = r3_139 + 1<32>
	Mem145[r3_139 + r4_140:byte] = 3<8>
	word32 r25_147 = Mem145[r21 + 28<i32>:word32]
	Mem149[r19 + 4<i32>:word32] = 0x71<32>
	word32 r31_647
	word32 r29_645
	word32 r30_646
	word32 r28_644
	word32 r25_641
	word32 r26_642
	word32 r27_643
	word32 r22_638
	word32 r23_639
	word32 r24_640
	word32 r21_637
	word32 r10_634
	word32 r19_635
	word32 r20_636
	word32 r7_631
	word32 r8_632
	word32 r9_633
	word32 r6_630
	word32 r5_629
	word32 r4_628
	fn00003990(r0, r3, r19, r23, out r4_628, out r5_629, out r6_630, out r7_631, out r8_632, out r9_633, out r10_634, out r19_635, out r20_636, out r21_637, out r22_638, out r23_639, out r24_640, out r25_641, out r26_642, out r27_643, out r28_644, out r29_645, out r30_646, out r31_647)
	word32 r3_152 = Mem149[r25_147 + 20<i32>:word32]
	r22 = Mem149[r21 + 16<i32>:word32]
	branch r3_152 -u r22 >= 0<32> l0000A6D8
l0000A6D4:
	r22 = r3_152
l0000A6D8:
	branch Test(EQ,r22) l0000A6DC_ds_t
l0000A6DC_ds_t:
l0000A6DC_ds_f:
l0000A6E0:
	word32 r10_650
	word32 r4_648
	word32 r9_649
	fn00008C34(r3_152, r4_140, Mem149[r21 + 12<i32>:word32], Mem149[r25_147 + 16<i32>:word32], r22, r8_238, out r4_648, out r9_649, out r10_650)
	word32 r6_176 = Mem149[r25_147 + 16<i32>:word32]
	word32 r5_177 = Mem149[r21 + 20<i32>:word32]
	word32 r4_178 = Mem149[r21 + 16<i32>:word32]
	word32 r3_179 = Mem149[r25_147 + 20<i32>:word32]
	Mem181[r21 + 12<i32>:word32] = Mem149[r21 + 12<i32>:word32] + r22
	Mem183[r25_147 + 16<i32>:word32] = r6_176 + r22
	Mem186[r21 + 20<i32>:word32] = r5_177 + r22
	Mem187[r21 + 16<i32>:word32] = r4_178 - r22
	r22 = r3_179 - r22
	branch Test(NE,r22) l0000A72C_ds_t
l0000A72C_ds_t:
	Mem189[r25_147 + 20<i32>:word32] = r22
l0000A72C_ds_f:
	Mem190[r25_147 + 20<i32>:word32] = r22
l0000A730:
	Mem192[r25_147 + 16<i32>:word32] = Mem190[r25_147 + 8<i32>:word32]
l0000A738:
	branch Test(NE,Mem195[r19 + 20<i32>:word32]) l00009FC4
l0000A73C_thunk_fn0000A774:
	fn0000A774(r0, r8_238, r19, r21, r22, r23, r24, r26)
	return
l0000A740:
	r8_238 = Mem195[r19 + 4<i32>:word32]
l00009890:
	word32 r3_239 = Mem89[r4_123:word32]
	word32 r5_242 = -r3_239 | r3_239
	word32 r3_273 = r5_242 >>u 31<i32>
	branch Test(EQ,Mem89[r4_123 + 44<i32>:word32]) l00009928
l00009924:
	r3_273 = (r5_242 >>u 31<i32>) + 2<32>
l00009928:
	branch Test(EQ,Mem89[r4_123 + 16<i32>:word32]) l00009938
l00009930:
	r3_273 = r3_273 + 4<32> & 0xFF<32>
l00009938:
	branch Test(EQ,Mem89[r4_123 + 28<i32>:word32]) l00009948
l00009940:
	r3_273 = r3_273 + 8<32> & 0xFF<32>
l00009948:
	branch Test(EQ,Mem89[r4_123 + 36<i32>:word32]) l00009958
l00009950:
	r3_273 = r3_273 + 0x10<32> & 0xFF<32>
l00009958:
	word32 r4_299 = Mem89[r19 + 20<i32>:word32]
	word32 r5_300 = Mem89[r19 + 8<i32>:word32]
	Mem302[r19 + 20<i32>:word32] = r4_299 + 1<32>
	Mem305[r4_299 + r5_300:byte] = SLICE(r3_273, byte, 0)
	word32 r3_307 = Mem305[r19 + 20<i32>:word32]
	word32 r4_308 = Mem305[r19 + 8<i32>:word32]
	word32 r5_309 = Mem305[Mem305[r19 + 28<i32>:word32] + 4<i32>:word32]
	Mem311[r19 + 20<i32>:word32] = r3_307 + 1<32>
	Mem313[r3_307 + r4_308:byte] = SLICE(r5_309, byte, 0)
	word32 r3_315 = Mem313[r19 + 20<i32>:word32]
	word32 r4_316 = Mem313[r19 + 8<i32>:word32]
	word32 r6_317 = Mem313[Mem313[r19 + 28<i32>:word32] + 4<i32>:word32]
	Mem319[r19 + 20<i32>:word32] = r3_315 + 1<32>
	Mem330[r3_315 + r4_316:byte] = SLICE(r6_317 >>u 8<i32>, byte, 0)
	word32 r3_332 = Mem330[r19 + 20<i32>:word32]
	word32 r4_333 = Mem330[r19 + 8<i32>:word32]
	word32 r5_335 = CONVERT(Mem330[Mem330[r19 + 28<i32>:word32] + 4<i32>:word16], word16, word32)
	Mem337[r19 + 20<i32>:word32] = r3_332 + 1<32>
	Mem339[r3_332 + r4_333:byte] = SLICE(r5_335, byte, 0)
	word32 r3_341 = Mem339[r19 + 20<i32>:word32]
	word32 r4_342 = Mem339[r19 + 8<i32>:word32]
	word32 r5_344 = CONVERT(Mem339[Mem339[r19 + 28<i32>:word32] + 4<i32>:byte], byte, word32)
	Mem346[r19 + 20<i32>:word32] = r3_341 + 1<32>
	Mem348[r3_341 + r4_342:byte] = SLICE(r5_344, byte, 0)
	word32 r3_349 = Mem348[r19 + 132<i32>:word32]
	branch Test(EQ,r3_349 ^ 9<32>) l00009A0C_ds_t
l00009A0C_ds_t:
l00009A0C_thunk_fn0000A774:
	fn0000A774(r0, r8_238, r19, r21, r22_52, r23, r24, r26)
	return
l00009A0C_ds_f:
l00009A0C_thunk_fn00009A10:
	fn00009A10(r0, r3_349, 1<32>, r8_238, r19, r21, r22_52, r23, r24, r26)
	return
l00009384:
	branch Test(EQ,r8_238 ^ 0x45<32>) l0000938C_ds_t
l0000938C_ds_t:
l00009E78:
l00009E78_thunk_fn0000A774:
	fn0000A774(r0, r8_238, r19, r21, r22, r23, r24, r26)
	return
l0000938C_ds_f:
	word32 r3_471 = r8_238 ^ 0x49<32>
l00009390:
	branch Test(EQ,r3_471) l00009394_ds_t
l00009394_ds_t:
l0000A76C:
l0000A76C_thunk_fn0000A774:
	fn0000A774(r0, r8_238, r19, r21, r22, r23, r24, r26)
	return
l00009394_ds_f:
	word32 r3_500 = r8_238 ^ 0x5B<32>
l00009398:
	branch Test(EQ,r3_500) l0000939C_ds_t
l0000939C_ds_t:
	word32 r8_501 = r8_238 ^ 0x67<32>
l0000AD1C:
l0000AD1C_thunk_fn0000A774:
	fn0000A774(r0, r8_501, r19, r21, r22, r23, r24, r26)
	return
l0000939C_ds_f:
	word32 r8_529 = r8_238 ^ 0x67<32>
l000093A0:
	branch Test(EQ,r8_529) l0000AD24
l0000AD24:
l0000AD28_thunk_fn0000A774:
	fn0000A774(r0, r8_529, r19, r21, r22, r23, r24, r26)
	return
l000093A0_thunk_fn0000A774:
	fn0000A774(r0, r8_529, r19, r21, r22, r23, r24, r26)
	return
fn00009B74_exit:


word32 fn00009B8C(word32 r3, word32 r19, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009120
//      fn00009178
//      fn00009184
// MayUse:  r19:[0..31] r3:[0..31]
// LiveOut: r0 r10 r11 r19 r21 r22 r23 r24 r25 r26 r27 r3 r4 r5 r6 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009B8C_entry:
l00009B8C:
	word32 r4_5 = Mem0[r19 + 132<i32>:word32]
	branch r3 >= r4_5 l00009B98_ds_t
l00009B98_ds_t:
l00009B98_thunk_fn00009184:
	word32 r19_10
	word32 r4_11
	word32 r3_12
	word32 r22_14
	word32 r5_15
	word32 r6_16
	word32 r7_18
	word32 r21_19
	word32 r25_20
	word32 r8_21
	word32 r23_22
	word32 r24_23
	word32 r26_24
	word32 r27_25
	word32 r9_30
	word32 r10_31
	word32 r11_32
	word32 r0_29 = fn00009184(out r3_12, out r4_11, out r5_15, out r6_16, out r7_18, out r8_21, out r9_30, out r10_31, out r11_32, out r19_10, out r21_19, out r22_14, out r23_22, out r24_23, out r25_20, out r26_24, out r27_25)
	r3Out = r3_12
	r4Out = r4_11
	r5Out = r5_15
	r6Out = r6_16
	r7Out = r7_18
	r8Out = r8_21
	r9Out = r9_30
	r10Out = r10_31
	r11Out = r11_32
	r19Out = r19_10
	r21Out = r21_19
	r22Out = r22_14
	r23Out = r23_22
	r24Out = r24_23
	r25Out = r25_20
	r26Out = r26_24
	r27Out = r27_25
	return r0_29
l00009B98_ds_f:
l00009B9C:
	branch r4_5 <= 5<32> l00009BA4_ds_t
l00009BA4_ds_t:
l0000A668:
l0000A66C_thunk_fn00009184:
	word32 r19_42
	word32 r4_43
	word32 r3_44
	word32 r22_46
	word32 r5_47
	word32 r6_48
	word32 r7_50
	word32 r21_51
	word32 r25_52
	word32 r8_53
	word32 r23_54
	word32 r24_55
	word32 r26_56
	word32 r27_57
	word32 r9_62
	word32 r10_63
	word32 r11_64
	word32 r0_61 = fn00009184(out r3_44, out r4_43, out r5_47, out r6_48, out r7_50, out r8_53, out r9_62, out r10_63, out r11_64, out r19_42, out r21_51, out r22_46, out r23_54, out r24_55, out r25_52, out r26_56, out r27_57)
	r3Out = r3_44
	r4Out = r4_43
	r5Out = r5_47
	r6Out = r6_48
	r7Out = r7_50
	r8Out = r8_53
	r9Out = r9_62
	r10Out = r10_63
	r11Out = r11_64
	r19Out = r19_42
	r21Out = r21_51
	r22Out = r22_46
	r23Out = r23_54
	r24Out = r24_55
	r25Out = r25_52
	r26Out = r26_56
	r27Out = r27_57
	return r0_61
l00009BA4_ds_f:
l00009BA8:
	branch Test(EQ,r4_5 ^ 6<32>) l0000AE3C
l0000AE3C:
l0000AE40_thunk_fn00009184:
	word32 r19_71
	word32 r4_72
	word32 r3_73
	word32 r22_75
	word32 r5_76
	word32 r6_77
	word32 r7_79
	word32 r21_80
	word32 r25_81
	word32 r8_82
	word32 r23_83
	word32 r24_84
	word32 r26_85
	word32 r27_86
	word32 r9_91
	word32 r10_92
	word32 r11_93
	word32 r0_90 = fn00009184(out r3_73, out r4_72, out r5_76, out r6_77, out r7_79, out r8_82, out r9_91, out r10_92, out r11_93, out r19_71, out r21_80, out r22_75, out r23_83, out r24_84, out r25_81, out r26_85, out r27_86)
	r3Out = r3_73
	r4Out = r4_72
	r5Out = r5_76
	r6Out = r6_77
	r7Out = r7_79
	r8Out = r8_82
	r9Out = r9_91
	r10Out = r10_92
	r11Out = r11_93
	r19Out = r19_71
	r21Out = r21_80
	r22Out = r22_75
	r23Out = r23_83
	r24Out = r24_84
	r25Out = r25_81
	r26Out = r26_85
	r27Out = r27_86
	return r0_90
l00009BAC:
l00009BB0_thunk_fn00009184:
	word32 r19_99
	word32 r4_100
	word32 r3_101
	word32 r22_103
	word32 r5_104
	word32 r6_105
	word32 r7_107
	word32 r21_108
	word32 r25_109
	word32 r8_110
	word32 r23_111
	word32 r24_112
	word32 r26_113
	word32 r27_114
	word32 r9_119
	word32 r10_120
	word32 r11_121
	word32 r0_118 = fn00009184(out r3_101, out r4_100, out r5_104, out r6_105, out r7_107, out r8_110, out r9_119, out r10_120, out r11_121, out r19_99, out r21_108, out r22_103, out r23_111, out r24_112, out r25_109, out r26_113, out r27_114)
	r3Out = r3_101
	r4Out = r4_100
	r5Out = r5_104
	r6Out = r6_105
	r7Out = r7_107
	r8Out = r8_110
	r9Out = r9_119
	r10Out = r10_120
	r11Out = r11_121
	r19Out = r19_99
	r21Out = r21_108
	r22Out = r22_103
	r23Out = r23_111
	r24Out = r24_112
	r25Out = r25_109
	r26Out = r26_113
	r27Out = r27_114
	return r0_118
fn00009B8C_exit:


word32 fn00009E48(word32 r0, word32 r3, word32 r8, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r3:[0..31] r8:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r25 r26 r27 r28 r3 r7 r8
// Trashed: C r10 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00009E48_entry:
l00009E48:
	word32 r4_15 = r3 >>u 10<i32> & 0xFFFFFFFD<32>
l00009E70_thunk_fn00009408:
	word32 r19_27
	word32 r21_28
	word32 r22_29
	word32 r23_30
	word32 r24_31
	word32 r25_32
	word32 r26_33
	word32 r27_34
	word32 r28_35
	word32 r7_43
	word32 r8_45
	word32 r3_37 = fn00009408(r0, r3 >>u 10<i32>, r4_15, r8, r19, r21, r22, r23, r24, r25, r26, out r7_43, out r8_45, out r19_27, out r21_28, out r22_29, out r23_30, out r24_31, out r25_32, out r26_33, out r27_34, out r28_35)
	r7Out = r7_43
	r8Out = r8_45
	r19Out = r19_27
	r21Out = r21_28
	r22Out = r22_29
	r23Out = r23_30
	r24Out = r24_31
	r25Out = r25_32
	r26Out = r26_33
	r27Out = r27_34
	r28Out = r28_35
	return r3_37
fn00009E48_exit:


void fn0000A774(word32 r0, word32 r8, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r26)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009980
//      fn00009B74
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r26:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000A774_entry:
	word32 r3
	word32 r5
	word32 r6
l0000A774:
l00009A20:
	word32 r3_6 = Mem0[r19 + 20<i32>:word32]
	word32 r4_7 = Mem0[r19 + 8<i32>:word32]
	Mem9[r19 + 20<i32>:word32] = r3_6 + 1<32>
	Mem11[r3_6 + r4_7:byte] = 2<8>
	word32 r3_13 = Mem11[r19 + 20<i32>:word32]
	word32 r4_14 = Mem11[r19 + 8<i32>:word32]
	word32 r5_15 = Mem11[Mem11[r19 + 28<i32>:word32] + 12<i32>:word32]
	Mem17[r19 + 20<i32>:word32] = r3_13 + 1<32>
	Mem19[r3_13 + r4_14:byte] = SLICE(r5_15, byte, 0)
	word32 r4_20 = Mem19[r19 + 28<i32>:word32]
	branch Test(EQ,Mem19[r4_20 + 16<i32>:word32]) l00009AB8
l00009A5C:
	word32 r3_22 = Mem19[r19 + 20<i32>:word32]
	word32 r5_23 = Mem19[r4_20 + 20<i32>:word32]
	word32 r4_24 = Mem19[r19 + 8<i32>:word32]
	Mem26[r19 + 20<i32>:word32] = r3_22 + 1<32>
	Mem28[r3_22 + r4_24:byte] = SLICE(r5_23, byte, 0)
	word32 r3_30 = Mem28[r19 + 20<i32>:word32]
	word32 r4_31 = Mem28[r19 + 8<i32>:word32]
	word32 r6_32 = Mem28[Mem28[r19 + 28<i32>:word32] + 20<i32>:word32]
	Mem34[r19 + 20<i32>:word32] = r3_30 + 1<32>
	Mem45[r3_30 + r4_31:byte] = SLICE(r6_32 >>u 8<i32>, byte, 0)
	r4_20 = Mem45[r19 + 28<i32>:word32]
l00009AB8:
	word32 r23_140
	word32 r19_104
	branch Test(EQ,Mem48[r4_20 + 44<i32>:word32]) l00009AC0_ds_t
l00009AC0_ds_t:
	r19_104 = r19
	r23_140 = r23
l00009AC0_ds_f:
l00009AC4:
	word32 r25_2764
	word32 r27_2765
	word32 r31_2766
	word32 r4_2762
	word32 r6_2763
	word32 r3_75 = fn00007044(r19, r21, r22, r23, out r4_2762, out r6_2763, out r19_104, out r21, out r22, out r23_140, out r24, out r25_2764, out r26, out r27_2765, out r31_2766)
	r4_20 = Mem48[r19_104 + 28<i32>:word32]
	Mem84[r21 + 48<i32>:word32] = r3_75
l00009AE4:
	Mem90[r19_104 + 32<i32>:word32] = r0
	Mem92[r19_104 + 4<i32>:word32] = 0x45<32>
l00009E7C:
	word32 r25_113
	word32 r4_101
	word32 r3_109 = Mem92[r4_20 + 16<i32>:word32]
	branch Test(EQ,r3_109) l0000A128
l00009E84:
	word32 r5_226
	word32 r6_110 = Mem92[r19_104 + 32<i32>:word32]
	r25_113 = Mem92[r19_104 + 20<i32>:word32]
	r26 = CONVERT(Mem92[r4_20 + 22<i32>:word16], word16, word32) - r6_110
	word32 r22_99 = Mem92[r19_104 + 12<i32>:word32]
	r4_101 = r25_113 + r26
	branch r22_99 -u r4_101 < 0<32> l00009EA4_ds_t
l00009EA4_ds_t:
	word32 r22_103 = r22_99 - r25_113
l00009ED0:
	word32 r21_144
	word32 r4_3232
	word32 r9_3233
	word32 r10_3234
	fn00008C34(r3_109, r4_101, Mem105[r19_104 + 8<i32>:word32] + r25_113, r3_109 + r6_110, r22_103, r8, out r4_3232, out r9_3233, out r10_3234)
	word32 r5_127 = Mem105[Mem105[r19_104 + 28<i32>:word32] + 44<i32>:word32]
	r4_101 = Mem105[r19_104 + 12<i32>:word32]
	r26 = r26 - r22_103
	branch Test(GE,-r5_127 | r5_127) l00009F04_ds_t
l00009F04_ds_t:
	Mem130[r19_104 + 20<i32>:word32] = r4_101
l00009F04_ds_f:
	Mem131[r19_104 + 20<i32>:word32] = r4_101
l00009F08:
	branch r25_113 -u r4_101 >= 0<32> l00009F10_ds_t
l00009F10_ds_t:
l00009F10_ds_f:
l00009F14:
	word32 r6_3235
	word32 r25_3236
	word32 r27_3237
	word32 r31_3238
	Mem161[r21_144 + 48<i32>:word32] = fn00007044(r19_104, r21, r22_103, r23_140, out r4_101, out r6_3235, out r19_104, out r21_144, out r22_103, out r23_140, out r24, out r25_3236, out r26, out r27_3237, out r31_3238)
	r21 = r21_144
l00009F2C:
	word32 r25_164 = Mem163[r21 + 28<i32>:word32]
	Mem171[r19_104 + 32<i32>:word32] = Mem163[r19_104 + 32<i32>:word32] + r22_103
	word32 r4_3239
	word32 r5_3240
	word32 r6_3241
	word32 r7_3242
	word32 r8_3243
	word32 r9_3244
	word32 r10_3245
	word32 r19_3246
	word32 r20_3247
	word32 r21_3248
	word32 r22_3249
	word32 r23_3250
	word32 r24_3251
	word32 r25_3252
	word32 r26_3253
	word32 r27_3254
	word32 r28_3255
	word32 r29_3256
	word32 r30_3257
	word32 r31_3258
	fn00003990(r0, r3, r19, r23, out r4_3239, out r5_3240, out r6_3241, out r7_3242, out r8_3243, out r9_3244, out r10_3245, out r19_3246, out r20_3247, out r21_3248, out r22_3249, out r23_3250, out r24_3251, out r25_3252, out r26_3253, out r27_3254, out r28_3255, out r29_3256, out r30_3257, out r31_3258)
	word32 r3_172 = Mem171[r25_164 + 20<i32>:word32]
	r22 = Mem171[r21 + 16<i32>:word32]
	branch r3_172 -u r22 >= 0<32> l00009F5C
l00009F58:
	r22 = r3_172
l00009F5C:
	branch Test(EQ,r22) l00009F60_ds_t
l00009F60_ds_t:
l00009F60_ds_f:
l00009F64:
	word32 r4_3259
	word32 r9_3260
	word32 r10_3261
	fn00008C34(r3_172, r4_101, Mem171[r21 + 12<i32>:word32], Mem171[r25_164 + 16<i32>:word32], r22, r8, out r4_3259, out r9_3260, out r10_3261)
	word32 r6_197 = Mem171[r25_164 + 16<i32>:word32]
	word32 r5_198 = Mem171[r21 + 20<i32>:word32]
	word32 r4_199 = Mem171[r21 + 16<i32>:word32]
	word32 r3_200 = Mem171[r25_164 + 20<i32>:word32]
	Mem202[r21 + 12<i32>:word32] = Mem171[r21 + 12<i32>:word32] + r22
	Mem204[r25_164 + 16<i32>:word32] = r6_197 + r22
	Mem207[r21 + 20<i32>:word32] = r5_198 + r22
	r4_101 = r4_199 - r22
	Mem208[r21 + 16<i32>:word32] = r4_101
	r22 = r3_200 - r22
	branch Test(NE,r22) l00009FB0_ds_t
l00009FB0_ds_t:
	Mem210[r25_164 + 20<i32>:word32] = r22
l00009FB0_ds_f:
	Mem211[r25_164 + 20<i32>:word32] = r22
l00009FB4:
	r4_101 = Mem211[r25_164 + 8<i32>:word32]
	Mem213[r25_164 + 16<i32>:word32] = r4_101
l00009FBC:
	r25_113 = Mem216[r19_104 + 20<i32>:word32]
	branch Test(EQ,r25_113) l00009EB4
l00009EB4:
	word32 r3_218 = Mem216[r19_104 + 28<i32>:word32]
	r22 = Mem216[r19_104 + 12<i32>:word32]
	r6_110 = Mem216[r19_104 + 32<i32>:word32]
	branch r22 -u r26 >= 0<32> l00009EC8_ds_t
l00009EC8_ds_t:
	r3_109 = Mem216[r3_218 + 16<i32>:word32]
l0000A0C4:
	r5_226 = Mem216[r19_104 + 8<i32>:word32]
l00009EC8_ds_f:
	r3_109 = Mem216[r3_218 + 16<i32>:word32]
l00009ECC:
	r22_103 = r22 - r25_113
l00009FC4:
l00009EA4_ds_f:
	word32 r22_230 = r22_99 - r25_113
l00009EA8:
	r22 = r22_230 + r25_113
	r5_226 = Mem92[r19_104 + 8<i32>:word32]
l0000A0C8:
	word32 r4_2767
	word32 r10_2769
	word32 r9_2768
	fn00008C34(r3_109, r4_101, r5_226 + r25_113, r3_109 + r6_110, r26, r8, out r4_2767, out r9_2768, out r10_2769)
	r4_20 = Mem256[r19_104 + 28<i32>:word32]
	word32 r5_259 = Mem256[r4_20 + 44<i32>:word32]
	word32 r7_260 = r26 + Mem256[r19_104 + 20<i32>:word32]
	branch Test(GE,-r5_259 | r5_259) l0000A0F8_ds_t
l0000A0F8_ds_t:
	Mem263[r19_104 + 20<i32>:word32] = r7_260
l0000A0F8_ds_f:
	Mem264[r19_104 + 20<i32>:word32] = r7_260
l0000A0FC:
	branch r25_113 -u r7_260 >= 0<32> l0000A104_ds_t
l0000A104_ds_t:
l0000A104_ds_f:
l0000A108:
	word32 r4_2770
	word32 r31_2774
	word32 r25_2772
	word32 r27_2773
	word32 r6_2771
	word32 r3_293 = fn00007044(r19_104, r21, r22, r23_140, out r4_2770, out r6_2771, out r19_104, out r21, out r22, out r23_140, out r24, out r25_2772, out r26, out r27_2773, out r31_2774)
	r4_20 = Mem264[r19_104 + 28<i32>:word32]
	Mem302[r21 + 48<i32>:word32] = r3_293
l0000A124:
	Mem310[r19_104 + 32<i32>:word32] = r0
l0000A128:
	Mem313[r19_104 + 4<i32>:word32] = 0x49<32>
l0000A130:
	branch Test(EQ,Mem313[r4_20 + 28<i32>:word32]) l0000A138_ds_t
l0000A138_ds_t:
l0000A138_ds_f:
	r25_113 = 0<32>
l0000A13C:
	word32 r6_319 = Mem313[r19_104 + 20<i32>:word32]
	word32 r7_2480 = r6_319
l0000A178:
	branch Test(NE,Mem322[r19_104 + 12<i32>:word32] ^ r7_2480) l0000A148
l0000A184:
	word32 r21_344
	r4_101 = Mem322[r4_20 + 44<i32>:word32]
	branch Test(GE,-r4_101 | r4_101) l0000A1B8
l0000A194:
	branch r6_319 -u r7_2480 >= 0<32> l0000A19C_ds_t
l0000A19C_ds_t:
l0000A19C_ds_f:
l0000A1A0:
	word32 r6_2775
	word32 r22_2776
	word32 r27_2778
	word32 r26_2777
	word32 r31_2779
	Mem361[r21_344 + 48<i32>:word32] = fn00007044(r19_104, r21, r22, r23_140, out r4_101, out r6_2775, out r19_104, out r21_344, out r22_2776, out r23_140, out r24, out r25_113, out r26_2777, out r27_2778, out r31_2779)
	r21 = r21_344
l0000A1B8:
	r26 = Mem363[r21 + 28<i32>:word32]
	word32 r8_2785
	word32 r9_2786
	word32 r20_2789
	word32 r22_2791
	word32 r23_2792
	word32 r21_2790
	word32 r7_2784
	word32 r4_2781
	word32 r5_2782
	word32 r6_2783
	word32 r19_2788
	word32 r10_2787
	word32 r24_2793
	word32 r25_2794
	word32 r26_2795
	word32 r30_2799
	word32 r29_2798
	word32 r31_2800
	word32 r27_2796
	word32 r28_2797
	fn00003990(r0, r3, r19, r23, out r4_2781, out r5_2782, out r6_2783, out r7_2784, out r8_2785, out r9_2786, out r10_2787, out r19_2788, out r20_2789, out r21_2790, out r22_2791, out r23_2792, out r24_2793, out r25_2794, out r26_2795, out r27_2796, out r28_2797, out r29_2798, out r30_2799, out r31_2800)
	word32 r3_367 = Mem363[r26 + 20<i32>:word32]
	r22 = Mem363[r21 + 16<i32>:word32]
	branch r3_367 -u r22 >= 0<32> l0000A1DC
l0000A1D8:
	r22 = r3_367
l0000A1DC:
	branch Test(EQ,r22) l0000A1E0_ds_t
l0000A1E0_ds_t:
l0000A1E0_ds_f:
l0000A1E4:
	word32 r4_2801
	word32 r10_2803
	word32 r9_2802
	fn00008C34(r3_367, r4_101, Mem363[r21 + 12<i32>:word32], Mem363[r26 + 16<i32>:word32], r22, r8, out r4_2801, out r9_2802, out r10_2803)
	word32 r6_393 = Mem363[r26 + 16<i32>:word32]
	word32 r5_394 = Mem363[r21 + 20<i32>:word32]
	word32 r4_395 = Mem363[r21 + 16<i32>:word32]
	word32 r3_396 = Mem363[r26 + 20<i32>:word32]
	Mem398[r21 + 12<i32>:word32] = Mem363[r21 + 12<i32>:word32] + r22
	Mem400[r26 + 16<i32>:word32] = r6_393 + r22
	Mem403[r21 + 20<i32>:word32] = r5_394 + r22
	r4_101 = r4_395 - r22
	Mem404[r21 + 16<i32>:word32] = r4_101
	r22 = r3_396 - r22
	branch Test(NE,r22) l0000A230_ds_t
l0000A230_ds_t:
	Mem406[r26 + 20<i32>:word32] = r22
l0000A230_ds_f:
	Mem407[r26 + 20<i32>:word32] = r22
l0000A234:
	r4_101 = Mem407[r26 + 8<i32>:word32]
	Mem409[r26 + 16<i32>:word32] = r4_101
l0000A23C:
	r7_2480 = Mem413[r19_104 + 20<i32>:word32]
	branch Test(NE,r7_2480) l0000A244_ds_t
l0000A244_ds_t:
l0000A244_ds_f:
l0000A248:
	r4_20 = Mem413[r19_104 + 28<i32>:word32]
	r6_319 = r25_113
l0000A148:
	word32 r3_425 = Mem424[r19_104 + 32<i32>:word32]
	word32 r5_427 = Mem424[r4_20 + 28<i32>:word32]
	word32 r4_428 = Mem424[r19_104 + 8<i32>:word32]
	Mem430[r19_104 + 32<i32>:word32] = r3_425 + 1<32>
	word32 r3_432 = CONVERT(Mem430[r3_425 + r5_427:byte], byte, word32)
	Mem435[r19_104 + 20<i32>:word32] = r7_2480 + 1<32>
	r8 = r3_425 + 1<32>
	branch Test(EQ,r3_432) l0000A16C_ds_t
l0000A16C_ds_t:
	Mem437[r7_2480 + r4_428:byte] = SLICE(r3_432, byte, 0)
l0000A254:
	r4_20 = Mem437[r19_104 + 28<i32>:word32]
	branch Test(EQ,Mem437[r4_20 + 44<i32>:word32]) l0000A28C
l0000A260:
	branch r6_319 -u Mem437[r19_104 + 20<i32>:word32] >= 0<32> l0000A26C_ds_t
l0000A26C_ds_t:
l0000A26C_ds_f:
l0000A270:
	word32 r4_2804
	word32 r27_2807
	word32 r31_2808
	word32 r6_2805
	word32 r25_2806
	word32 r3_469 = fn00007044(r19_104, r21, r22, r23_140, out r4_2804, out r6_2805, out r19_104, out r21, out r22, out r23_140, out r24, out r25_2806, out r26, out r27_2807, out r31_2808)
	r4_20 = Mem437[r19_104 + 28<i32>:word32]
	Mem478[r21 + 48<i32>:word32] = r3_469
l0000A28C:
	Mem486[r19_104 + 32<i32>:word32] = r0
l0000A290:
	Mem489[r19_104 + 4<i32>:word32] = 0x5B<32>
l0000A298:
	word32 r25_2324
	word32 r4_2435
	word32 r3_682
	branch Test(EQ,Mem489[r4_20 + 36<i32>:word32]) l0000A2A0_ds_t
l0000A2A0_ds_t:
l0000A2A0_ds_f:
	r25_113 = 0<32>
l0000A2A4:
	word32 r6_495 = Mem489[r19_104 + 20<i32>:word32]
	word32 r7_2476 = r6_495
l0000A2E0:
	branch Test(NE,Mem498[r19_104 + 12<i32>:word32] ^ r7_2476) l0000A2B0
l0000A2EC:
	word32 r21_520
	r4_101 = Mem498[r4_20 + 44<i32>:word32]
	branch Test(GE,-r4_101 | r4_101) l0000A320
l0000A2FC:
	branch r6_495 -u r7_2476 >= 0<32> l0000A304_ds_t
l0000A304_ds_t:
l0000A304_ds_f:
l0000A308:
	word32 r27_2812
	word32 r31_2813
	word32 r6_2809
	word32 r22_2810
	word32 r26_2811
	Mem537[r21_520 + 48<i32>:word32] = fn00007044(r19_104, r21, r22, r23_140, out r4_101, out r6_2809, out r19_104, out r21_520, out r22_2810, out r23_140, out r24, out r25_113, out r26_2811, out r27_2812, out r31_2813)
	r21 = r21_520
l0000A320:
	r26 = Mem539[r21 + 28<i32>:word32]
	word32 r6_2816
	word32 r7_2817
	word32 r8_2818
	word32 r9_2819
	word32 r10_2820
	word32 r19_2821
	word32 r26_2828
	word32 r27_2829
	word32 r25_2827
	word32 r23_2825
	word32 r4_2814
	word32 r5_2815
	word32 r24_2826
	word32 r22_2824
	word32 r21_2823
	word32 r20_2822
	word32 r28_2830
	word32 r31_2833
	word32 r30_2832
	word32 r29_2831
	fn00003990(r0, r3, r19, r23, out r4_2814, out r5_2815, out r6_2816, out r7_2817, out r8_2818, out r9_2819, out r10_2820, out r19_2821, out r20_2822, out r21_2823, out r22_2824, out r23_2825, out r24_2826, out r25_2827, out r26_2828, out r27_2829, out r28_2830, out r29_2831, out r30_2832, out r31_2833)
	word32 r3_543 = Mem539[r26 + 20<i32>:word32]
	r22 = Mem539[r21 + 16<i32>:word32]
	branch r3_543 -u r22 >= 0<32> l0000A344
l0000A340:
	r22 = r3_543
l0000A344:
	branch Test(EQ,r22) l0000A348_ds_t
l0000A348_ds_t:
l0000A348_ds_f:
l0000A34C:
	word32 r10_2836
	word32 r9_2835
	word32 r4_2834
	fn00008C34(r3_543, r4_101, Mem539[r21 + 12<i32>:word32], Mem539[r26 + 16<i32>:word32], r22, r8, out r4_2834, out r9_2835, out r10_2836)
	word32 r6_569 = Mem539[r26 + 16<i32>:word32]
	word32 r5_570 = Mem539[r21 + 20<i32>:word32]
	word32 r4_571 = Mem539[r21 + 16<i32>:word32]
	word32 r3_572 = Mem539[r26 + 20<i32>:word32]
	Mem574[r21 + 12<i32>:word32] = Mem539[r21 + 12<i32>:word32] + r22
	Mem576[r26 + 16<i32>:word32] = r6_569 + r22
	Mem579[r21 + 20<i32>:word32] = r5_570 + r22
	r4_101 = r4_571 - r22
	Mem580[r21 + 16<i32>:word32] = r4_101
	r22 = r3_572 - r22
	branch Test(NE,r22) l0000A398_ds_t
l0000A398_ds_t:
	Mem582[r26 + 20<i32>:word32] = r22
l0000A398_ds_f:
	Mem583[r26 + 20<i32>:word32] = r22
l0000A39C:
	r4_101 = Mem583[r26 + 8<i32>:word32]
	Mem585[r26 + 16<i32>:word32] = r4_101
l0000A3A4:
	r7_2476 = Mem589[r19_104 + 20<i32>:word32]
	branch Test(NE,r7_2476) l0000A3AC_ds_t
l0000A3AC_ds_t:
l00009FC8:
	Mem594[r19_104 + 40<i32>:word32] = 0xFFFFFFFF<32>
l00009FCC_thunk_fn00009408:
	word32 r7_3221
	word32 r8_3222
	word32 r19_3223
	word32 r21_3224
	word32 r22_3225
	word32 r23_3226
	word32 r24_3227
	word32 r25_3228
	word32 r26_3229
	word32 r27_3230
	word32 r28_3231
	fn00009408(r0, 0<32>, r4_101, r8, r19_104, r21, r22, r23_140, r24, r25_113, r26, out r7_3221, out r8_3222, out r19_3223, out r21_3224, out r22_3225, out r23_3226, out r24_3227, out r25_3228, out r26_3229, out r27_3230, out r28_3231)
	return
l0000A3AC_ds_f:
l0000A3B0:
	r4_20 = Mem589[r19_104 + 28<i32>:word32]
	r6_495 = r25_113
l0000A2B0:
	word32 r3_668 = Mem667[r19_104 + 32<i32>:word32]
	word32 r5_670 = Mem667[r4_20 + 36<i32>:word32]
	word32 r4_671 = Mem667[r19_104 + 8<i32>:word32]
	Mem673[r19_104 + 32<i32>:word32] = r3_668 + 1<32>
	word32 r3_675 = CONVERT(Mem673[r3_668 + r5_670:byte], byte, word32)
	Mem678[r19_104 + 20<i32>:word32] = r7_2476 + 1<32>
	r8 = r3_668 + 1<32>
	branch Test(EQ,r3_675) l0000A2D4_ds_t
l0000A2D4_ds_t:
	Mem680[r7_2476 + r4_671:byte] = SLICE(r3_675, byte, 0)
l0000A3D4:
	r3_682 = Mem680[Mem680[r19_104 + 28<i32>:word32] + 44<i32>:word32]
	branch Test(EQ,r3_682) l0000A528
l0000A3E0:
	branch r6_495 -u Mem680[r19_104 + 20<i32>:word32] >= 0<32> l0000A3EC_ds_t
l0000A3EC_ds_t:
l0000A3EC_ds_f:
l0000A3F0:
	word32 r25_2839
	word32 r6_2838
	word32 r31_2841
	word32 r27_2840
	word32 r4_2837
	word32 r3_708 = fn00007044(r19_104, r21, r22, r23_140, out r4_2837, out r6_2838, out r19_104, out r21, out r22, out r23_140, out r24, out r25_2839, out r26, out r27_2840, out r31_2841)
	r4_20 = Mem680[r19_104 + 28<i32>:word32]
	Mem717[r21 + 48<i32>:word32] = r3_708
l0000A410:
	r3_682 = Mem719[r4_20 + 44<i32>:word32]
l0000A418:
	Mem725[r19_104 + 4<i32>:word32] = 0x67<32>
l0000A41C:
	branch Test(EQ,r3_682) l0000A528
l0000A420:
	word32 r3_727 = Mem725[r19_104 + 20<i32>:word32]
	r4_2435 = Mem725[r19_104 + 12<i32>:word32]
	branch r4_2435 -u (r3_727 + 2<32>) >= 0<32> l0000A4C0
l0000A434:
	r25_2324 = Mem725[r21 + 28<i32>:word32]
	word32 r27_2857
	word32 r28_2858
	word32 r30_2860
	word32 r7_2845
	word32 r26_2856
	word32 r24_2854
	word32 r23_2853
	word32 r22_2852
	word32 r25_2855
	word32 r4_2842
	word32 r5_2843
	word32 r6_2844
	word32 r29_2859
	word32 r20_2850
	word32 r21_2851
	word32 r19_2849
	word32 r9_2847
	word32 r10_2848
	word32 r8_2846
	word32 r31_2861
	fn00003990(r0, r3, r19, r23, out r4_2842, out r5_2843, out r6_2844, out r7_2845, out r8_2846, out r9_2847, out r10_2848, out r19_2849, out r20_2850, out r21_2851, out r22_2852, out r23_2853, out r24_2854, out r25_2855, out r26_2856, out r27_2857, out r28_2858, out r29_2859, out r30_2860, out r31_2861)
	word32 r3_740 = Mem725[r25_2324 + 20<i32>:word32]
	r22 = Mem725[r21 + 16<i32>:word32]
	branch r3_740 -u r22 >= 0<32> l0000A458
l0000A454:
	r22 = r3_740
l0000A458:
	branch Test(EQ,r22) l0000A45C_ds_t
l0000A45C_ds_t:
l0000A45C_ds_f:
l0000A460:
	word32 r10_2864
	word32 r4_2862
	word32 r9_2863
	fn00008C34(r3_740, r4_2435, Mem725[r21 + 12<i32>:word32], Mem725[r25_2324 + 16<i32>:word32], r22, r8, out r4_2862, out r9_2863, out r10_2864)
	word32 r6_769 = Mem725[r25_2324 + 16<i32>:word32]
	word32 r5_770 = Mem725[r21 + 20<i32>:word32]
	word32 r4_771 = Mem725[r21 + 16<i32>:word32]
	word32 r3_772 = Mem725[r25_2324 + 20<i32>:word32]
	Mem774[r21 + 12<i32>:word32] = Mem725[r21 + 12<i32>:word32] + r22
	Mem776[r25_2324 + 16<i32>:word32] = r6_769 + r22
	Mem779[r21 + 20<i32>:word32] = r5_770 + r22
	r4_2435 = r4_771 - r22
	Mem780[r21 + 16<i32>:word32] = r4_2435
	r22 = r3_772 - r22
	branch Test(NE,r22) l0000A4AC_ds_t
l0000A4AC_ds_t:
	Mem782[r25_2324 + 20<i32>:word32] = r22
l0000A4AC_ds_f:
	Mem783[r25_2324 + 20<i32>:word32] = r22
l0000A4B0:
	Mem785[r25_2324 + 16<i32>:word32] = Mem783[r25_2324 + 8<i32>:word32]
l0000A4B8:
	r3_727 = Mem788[r19_104 + 20<i32>:word32]
	branch Test(NE,r3_727) l0000A5BC
l0000A4C0:
	word32 r5_793 = Mem792[r21 + 48<i32>:word32]
	word32 r4_795 = Mem792[r19_104 + 8<i32>:word32]
	Mem798[r19_104 + 20<i32>:word32] = r3_727 + 1<32>
	Mem800[r3_727 + r4_795:byte] = SLICE(r5_793, byte, 0)
	word32 r3_801 = Mem800[r19_104 + 20<i32>:word32]
	word32 r9_802 = Mem800[r21 + 48<i32>:word32]
	word32 r4_804 = Mem800[r19_104 + 8<i32>:word32]
	Mem808[r19_104 + 20<i32>:word32] = r3_801 + 1<32>
	Mem820[r3_801 + r4_804:byte] = SLICE(r9_802 >>u 8<i32>, byte, 0)
	word32 r6_2866
	word32 r22_2867
	word32 r27_2869
	word32 r4_2865
	word32 r25_2868
	word32 r31_2870
	Mem859[r21 + 48<i32>:word32] = fn00007044(r19_104, r21, r22, r23_140, out r4_2865, out r6_2866, out r19_104, out r21, out r22_2867, out r23_140, out r24, out r25_2868, out r26, out r27_2869, out r31_2870)
	r8 = r9_802 >>u 8<i32>
l0000A528:
	r25_2324 = Mem861[r21 + 28<i32>:word32]
	Mem865[r19_104 + 4<i32>:word32] = 0x71<32>
	word32 r27_2886
	word32 r31_2890
	word32 r29_2888
	word32 r24_2883
	word32 r26_2885
	word32 r5_2872
	word32 r8_2875
	word32 r9_2876
	word32 r10_2877
	word32 r6_2873
	word32 r7_2874
	word32 r22_2881
	word32 r4_2871
	word32 r25_2884
	word32 r23_2882
	word32 r19_2878
	word32 r20_2879
	word32 r21_2880
	word32 r30_2889
	word32 r28_2887
	fn00003990(r0, r3, r19, r23, out r4_2871, out r5_2872, out r6_2873, out r7_2874, out r8_2875, out r9_2876, out r10_2877, out r19_2878, out r20_2879, out r21_2880, out r22_2881, out r23_2882, out r24_2883, out r25_2884, out r26_2885, out r27_2886, out r28_2887, out r29_2888, out r30_2889, out r31_2890)
	r4_2435 = 0x71<32>
	word32 r3_868 = Mem865[r25_2324 + 20<i32>:word32]
	r22 = Mem865[r21 + 16<i32>:word32]
	branch r3_868 -u r22 >= 0<32> l0000A554
l0000A550:
	r22 = r3_868
l0000A554:
	branch Test(EQ,r22) l0000A558_ds_t
l0000A558_ds_t:
l0000A558_ds_f:
l0000A55C:
	word32 r4_2891
	word32 r9_2892
	word32 r10_2893
	fn00008C34(r3_868, 0x71<32>, Mem865[r21 + 12<i32>:word32], Mem865[r25_2324 + 16<i32>:word32], r22, r8, out r4_2891, out r9_2892, out r10_2893)
	word32 r6_892 = Mem865[r25_2324 + 16<i32>:word32]
	word32 r5_893 = Mem865[r21 + 20<i32>:word32]
	word32 r4_894 = Mem865[r21 + 16<i32>:word32]
	word32 r3_895 = Mem865[r25_2324 + 20<i32>:word32]
	Mem897[r21 + 12<i32>:word32] = Mem865[r21 + 12<i32>:word32] + r22
	Mem899[r25_2324 + 16<i32>:word32] = r6_892 + r22
	Mem902[r21 + 20<i32>:word32] = r5_893 + r22
	r4_2435 = r4_894 - r22
	Mem903[r21 + 16<i32>:word32] = r4_2435
	r22 = r3_895 - r22
	branch Test(NE,r22) l0000A5A8_ds_t
l0000A5A8_ds_t:
	Mem905[r25_2324 + 20<i32>:word32] = r22
l0000A5A8_ds_f:
	Mem906[r25_2324 + 20<i32>:word32] = r22
l0000A5AC:
	Mem908[r25_2324 + 16<i32>:word32] = Mem906[r25_2324 + 8<i32>:word32]
l0000A5B4:
	word32 r3_1019 = Mem911[r19_104 + 20<i32>:word32]
	branch Test(EQ,r3_1019) l000093A4
l000093A4:
	branch Test(EQ,Mem911[r21 + 4<i32>:word32]) l00009784
l00009784:
	r3_1019 = Mem911[r19_104 + 116<i32>:word32]
	branch Test(NE,r3_1019) l000093AC
l0000978C:
	branch Test(EQ,r23_140) l00009790_ds_t
l00009790_ds_t:
l00009790_thunk_fn00009408:
	word32 r7_3210
	word32 r8_3211
	word32 r19_3212
	word32 r21_3213
	word32 r22_3214
	word32 r23_3215
	word32 r24_3216
	word32 r25_3217
	word32 r26_3218
	word32 r27_3219
	word32 r28_3220
	fn00009408(r0, 0<32>, r4_2435, r8, r19_104, r21, r22, r23_140, r24, r25_2324, r26, out r7_3210, out r8_3211, out r19_3212, out r21_3213, out r22_3214, out r23_3215, out r24_3216, out r25_3217, out r26_3218, out r27_3219, out r28_3220)
	return
l00009790_ds_f:
l00009794:
	word32 r3_987 = Mem911[r19_104 + 4<i32>:word32]
	r3_1019 = r3_987 ^ 0x29A<32>
	branch Test(NE,r3_987 ^ 0x29A<32>) l000093AC
l000097A0:
l000097A0_thunk_fn00009408:
	word32 r7_3199
	word32 r8_3200
	word32 r19_3201
	word32 r21_3202
	word32 r22_3203
	word32 r23_3204
	word32 r24_3205
	word32 r25_3206
	word32 r26_3207
	word32 r27_3208
	word32 r28_3209
	fn00009408(r0, r3_987 ^ 0x29A<32>, r4_2435, r8, r19_104, r21, r22, r23_140, r24, r25_2324, r26, out r7_3199, out r8_3200, out r19_3201, out r21_3202, out r22_3203, out r23_3204, out r24_3205, out r25_3206, out r26_3207, out r27_3208, out r28_3209)
	return
l000093AC:
	word32 r4_1020
	word32 r4_1014 = Mem911[r19_104 + 132<i32>:word32]
	branch Test(EQ,r4_1014) l000093B4_ds_t
l000093B4_ds_t:
l00009AF0:
	fn00005F20(r0, r5, r6)
	r4_1020 = r3_1019 + 0xFFFFFFFE<32>
l000093B4_ds_f:
l000093B8:
	word32 r25_1394
	word32 r26_1396
	word32 r22_1401
	word32 r3_1022 = Mem911[r19_104 + 136<i32>:word32]
	branch Test(EQ,r3_1022 ^ 2<32>) l000093C4_ds_t
l000093C4_ds_t:
l00009C78:
	word32 r22_1027 = Mem1026[r19_104 + 116<i32>:word32]
l00009CF4:
	branch Test(NE,r22_1027) l00009CF8_ds_t
l00009CF8_ds_t:
l00009CF8_ds_f:
l00009CFC:
	fn00005B0C(r0, r5)
	word32 r3_1034 = Mem1033[r19_104 + 116<i32>:word32]
	branch Test(NE,r3_1034) l00009C80
l00009C80:
	word32 r3_1037 = Mem1033[r19_104 + 108<i32>:word32]
	word32 r5_1038 = Mem1033[r19_104 + 56<i32>:word32]
	word32 r4_1039 = Mem1033[r19_104 + 5792<i32>:word32]
	Mem1042[r19_104 + 96<i32>:word32] = r0
	word32 r5_1044 = CONVERT(Mem1042[r3_1037 + r5_1038:byte], byte, word32)
	word32 r6_1046 = Mem1042[r19_104 + 5784<i32>:word32]
	Mem1049[r4_1039 * 2<32> + Mem1042[r19_104 + 5796<i32>:word32]:word16] = SLICE(r0, word16, 0)
	Mem1052[r19_104 + 5792<i32>:word32] = r4_1039 + 1<32>
	Mem1055[r4_1039 + r6_1046:byte] = SLICE(r5_1044, byte, 0)
	word32 r3_1056 = r19_104 + r5_1044 * 4<32>
	Mem1061[r3_1056 + 148<i32>:word16] = Mem1055[r3_1056 + 148<i32>:word16] + 1<16>
	word32 r22_1062 = Mem1061[r19_104 + 116<i32>:word32]
	word32 r4_1064 = Mem1061[r19_104 + 5788<i32>:word32]
	word32 r3_1063 = Mem1061[r19_104 + 108<i32>:word32]
	word32 r6_1065 = Mem1061[r19_104 + 5792<i32>:word32]
	Mem1069[r19_104 + 116<i32>:word32] = r22_1062 + 0xFFFFFFFF<32>
	r22_1027 = r22_1062 + 0xFFFFFFFF<32>
	r4_1014 = r4_1064 + 0xFFFFFFFF<32>
	branch Test(EQ,r6_1065 ^ r4_1064 + 0xFFFFFFFF<32>) l00009CF0_ds_t
l00009CF0_ds_t:
	Mem1071[r19_104 + 108<i32>:word32] = r3_1063 + 1<32>
l00009BB8:
	branch Test(LT,Mem1071[r19_104 + 92<i32>:word32]) l00009BC0_ds_t
l00009BC0_ds_t:
l00009BC0_ds_f:
l00009BC4:
l00009BCC:
	fn00003C90(r5)
	r26 = Mem1071[r19_104:word32]
	r4_1014 = Mem1071[r19_104 + 108<i32>:word32]
	word32 r27_1088 = Mem1071[r26 + 28<i32>:word32]
	Mem1089[r19_104 + 92<i32>:word32] = r4_1014
	word32 r21_3173
	word32 r20_3172
	word32 r19_3171
	word32 r10_3170
	word32 r8_3168
	word32 r9_3169
	word32 r7_3167
	word32 r6_3166
	word32 r5_3165
	word32 r4_3164
	word32 r22_3174
	word32 r23_3175
	word32 r24_3176
	word32 r25_3177
	word32 r26_3178
	word32 r27_3179
	word32 r28_3180
	word32 r29_3181
	word32 r30_3182
	word32 r31_3183
	fn00003990(r0, r3, r19, r23, out r4_3164, out r5_3165, out r6_3166, out r7_3167, out r8_3168, out r9_3169, out r10_3170, out r19_3171, out r20_3172, out r21_3173, out r22_3174, out r23_3175, out r24_3176, out r25_3177, out r26_3178, out r27_3179, out r28_3180, out r29_3181, out r30_3182, out r31_3183)
	r8 = r3_1022 ^ 2<32>
	word32 r3_1092 = Mem1089[r27_1088 + 20<i32>:word32]
	word32 r22_1093 = Mem1089[r26 + 16<i32>:word32]
	branch r3_1092 -u r22_1093 >= 0<32> l00009C0C
l00009C08:
	r22_1093 = r3_1092
l00009C0C:
	branch Test(EQ,r22_1093) l00009C10_ds_t
l00009C10_ds_t:
l00009C10_ds_f:
l00009C14:
	word32 r4_3184
	word32 r9_3185
	word32 r10_3186
	fn00008C34(r3_1092, r4_1014, Mem1089[r26 + 12<i32>:word32], Mem1089[r27_1088 + 16<i32>:word32], r22_1093, r3_1022 ^ 2<32>, out r4_3184, out r9_3185, out r10_3186)
	word32 r6_1116 = Mem1089[r27_1088 + 16<i32>:word32]
	word32 r5_1117 = Mem1089[r26 + 20<i32>:word32]
	word32 r4_1118 = Mem1089[r26 + 16<i32>:word32]
	word32 r3_1119 = Mem1089[r27_1088 + 20<i32>:word32]
	Mem1121[r26 + 12<i32>:word32] = Mem1089[r26 + 12<i32>:word32] + r22_1093
	Mem1123[r27_1088 + 16<i32>:word32] = r6_1116 + r22_1093
	Mem1126[r26 + 20<i32>:word32] = r5_1117 + r22_1093
	r4_1014 = r4_1118 - r22_1093
	Mem1127[r26 + 16<i32>:word32] = r4_1014
	r22_1093 = r3_1119 - r22_1093
	branch Test(NE,r22_1093) l00009C60_ds_t
l00009C60_ds_t:
	Mem1129[r27_1088 + 20<i32>:word32] = r22_1093
l00009C60_ds_f:
	Mem1130[r27_1088 + 20<i32>:word32] = r22_1093
l00009C64:
	Mem1132[r27_1088 + 16<i32>:word32] = Mem1130[r27_1088 + 8<i32>:word32]
l00009C6C:
	word32 r3_1137 = Mem1135[Mem1135[r19_104:word32] + 16<i32>:word32]
	branch Test(EQ,r3_1137) l0000A0B0
l00009C74_thunk_fn00009408:
	word32 r7_3187
	word32 r8_3188
	word32 r19_3189
	word32 r21_3190
	word32 r22_3191
	word32 r23_3192
	word32 r24_3193
	word32 r25_3194
	word32 r26_3195
	word32 r27_3196
	word32 r28_3197
	fn00009408(r0, r3_1137, r4_1014, r3_1022 ^ 2<32>, r19_104, r21, r22_1093, r23_140, r24, r3_1022 ^ 2<32>, r26, out r7_3187, out r8_3188, out r19_3189, out r21_3190, out r22_3191, out r23_3192, out r24_3193, out r25_3194, out r26_3195, out r27_3196, out r28_3197)
	return
l00009CF0_ds_f:
	Mem1186[r19_104 + 108<i32>:word32] = r3_1063 + 1<32>
l00009D0C:
	branch Test(EQ,r23_140) l0000A0B0
l00009D0C_thunk_fn00009408:
	word32 r27_3162
	word32 r28_3163
	word32 r26_3161
	word32 r24_3159
	word32 r25_3160
	word32 r22_3157
	word32 r23_3158
	word32 r19_3155
	word32 r21_3156
	word32 r8_3154
	word32 r7_3153
	fn00009408(r0, r3_1034, r4_1014, r8, r19_104, r21, r22_1027, r23_140, r24, r3_1022 ^ 2<32>, r26, out r7_3153, out r8_3154, out r19_3155, out r21_3156, out r22_3157, out r23_3158, out r24_3159, out r25_3160, out r26_3161, out r27_3162, out r28_3163)
	return
l00009D10:
	branch Test(EQ,r24) l00009D14_ds_t
l00009D14_ds_t:
	Mem1220[r19_104 + 5812<i32>:word32] = r22_1027
l0000AE48:
	branch Test(LT,Mem1220[r19_104 + 92<i32>:word32]) l0000AE50_ds_t
l0000AE50_ds_t:
l0000AE50_ds_f:
l0000AE54:
l0000AE5C:
	fn00003C90(r5)
	word32 r23_1234 = Mem1220[r19_104:word32]
	word32 r24_1236 = Mem1220[r23_1234 + 28<i32>:word32]
	Mem1237[r19_104 + 92<i32>:word32] = Mem1220[r19_104 + 108<i32>:word32]
	word32 r30_3126
	word32 r31_3127
	word32 r29_3125
	word32 r28_3124
	word32 r27_3123
	word32 r26_3122
	word32 r24_3120
	word32 r25_3121
	word32 r23_3119
	word32 r21_3117
	word32 r22_3118
	word32 r20_3116
	word32 r10_3114
	word32 r19_3115
	word32 r7_3111
	word32 r8_3112
	word32 r9_3113
	word32 r6_3110
	word32 r5_3109
	word32 r4_3108
	fn00003990(r0, r3, r19, r23, out r4_3108, out r5_3109, out r6_3110, out r7_3111, out r8_3112, out r9_3113, out r10_3114, out r19_3115, out r20_3116, out r21_3117, out r22_3118, out r23_3119, out r24_3120, out r25_3121, out r26_3122, out r27_3123, out r28_3124, out r29_3125, out r30_3126, out r31_3127)
	word32 r3_1240 = Mem1237[r24_1236 + 20<i32>:word32]
	word32 r22_1241 = Mem1237[r23_1234 + 16<i32>:word32]
	branch r3_1240 -u r22_1241 >= 0<32> l0000AEA4
l0000AEA0:
	r22_1241 = r3_1240
l0000AEA4:
	branch Test(EQ,r22_1241) l0000AEA8_ds_t
l0000AEA8_ds_t:
l0000AEA8_ds_f:
l0000AEAC:
	word32 r4_3128
	word32 r9_3129
	word32 r10_3130
	fn00008C34(r3_1240, r4_1014, Mem1237[r23_1234 + 12<i32>:word32], Mem1237[r24_1236 + 16<i32>:word32], r22_1241, 1<32>, out r4_3128, out r9_3129, out r10_3130)
	word32 r6_1264 = Mem1237[r24_1236 + 16<i32>:word32]
	word32 r5_1265 = Mem1237[r23_1234 + 20<i32>:word32]
	word32 r4_1266 = Mem1237[r23_1234 + 16<i32>:word32]
	word32 r3_1267 = Mem1237[r24_1236 + 20<i32>:word32]
	Mem1269[r23_1234 + 12<i32>:word32] = Mem1237[r23_1234 + 12<i32>:word32] + r22_1241
	Mem1271[r24_1236 + 16<i32>:word32] = r6_1264 + r22_1241
	Mem1274[r23_1234 + 20<i32>:word32] = r5_1265 + r22_1241
	r4_1014 = r4_1266 - r22_1241
	Mem1275[r23_1234 + 16<i32>:word32] = r4_1014
	r22_1241 = r3_1267 - r22_1241
	branch Test(NE,r22_1241) l0000AEF8_ds_t
l0000AEF8_ds_t:
	Mem1277[r24_1236 + 20<i32>:word32] = r22_1241
l0000AEF8_ds_f:
	Mem1278[r24_1236 + 20<i32>:word32] = r22_1241
l0000AEFC:
	r4_1014 = Mem1278[r24_1236 + 8<i32>:word32]
	Mem1280[r24_1236 + 16<i32>:word32] = r4_1014
l0000AF04:
	branch Test(NE,Mem1283[Mem1283[r19_104:word32] + 16<i32>:word32]) l0000AF10_ds_t
l0000AF10_ds_t:
l0000AF20:
	Mem1287[r19_104 + 4<i32>:word32] = 0x29A<32>
l0000AF20_thunk_fn00009408:
	word32 r27_3151
	word32 r28_3152
	word32 r21_3145
	word32 r22_3146
	word32 r23_3147
	word32 r25_3149
	word32 r26_3150
	word32 r24_3148
	word32 r19_3144
	word32 r8_3143
	word32 r7_3142
	fn00009408(r0, 0x29A<32>, r4_1014, 1<32>, r19_104, r21, r22_1241, r23_1234, r24_1236, r3_1022 ^ 2<32>, r26, out r7_3142, out r8_3143, out r19_3144, out r21_3145, out r22_3146, out r23_3147, out r24_3148, out r25_3149, out r26_3150, out r27_3151, out r28_3152)
	return
l0000AF10_ds_f:
l0000AF14:
	Mem1330[r19_104 + 4<i32>:word32] = 0x29A<32>
l0000AF18_thunk_fn00009408:
	word32 r28_3141
	word32 r26_3139
	word32 r27_3140
	word32 r25_3138
	word32 r23_3136
	word32 r24_3137
	word32 r21_3134
	word32 r22_3135
	word32 r19_3133
	word32 r7_3131
	word32 r8_3132
	fn00009408(r0, 0x29A<32>, r4_1014, 1<32>, r19_104, r21, r22_1241, r23_1234, r24_1236, r3_1022 ^ 2<32>, r26, out r7_3131, out r8_3132, out r19_3133, out r21_3134, out r22_3135, out r23_3136, out r24_3137, out r25_3138, out r26_3139, out r27_3140, out r28_3141)
	return
l00009D14_ds_f:
	Mem1354[r19_104 + 5812<i32>:word32] = r22_1027
l00009D18:
	branch Test(EQ,Mem1354[r19_104 + 5792<i32>:word32]) l00009D20_ds_t
l00009D20_ds_t:
	word32 r3_1356 = r23_140 ^ 1<32>
l00009D20_thunk_fn00009408:
	word32 r28_3107
	word32 r26_3105
	word32 r27_3106
	word32 r24_3103
	word32 r25_3104
	word32 r21_3100
	word32 r22_3101
	word32 r23_3102
	word32 r19_3099
	word32 r8_3098
	word32 r7_3097
	fn00009408(r0, r3_1356, r4_1014, r8, r19_104, r21, r22_1027, r23_140, r24, r3_1022 ^ 2<32>, r26, out r7_3097, out r8_3098, out r19_3099, out r21_3100, out r22_3101, out r23_3102, out r24_3103, out r25_3104, out r26_3105, out r27_3106, out r28_3107)
	return
l00009D20_ds_f:
l00009D24:
	branch Test(LT,Mem1354[r19_104 + 92<i32>:word32]) l00009D2C_ds_t
l00009D2C_ds_t:
l00009D2C_ds_f:
l00009D30:
l00009D38:
	fn00003C90(r5)
	r25_1394 = Mem1354[r19_104:word32]
	word32 r4_1395 = Mem1354[r19_104 + 108<i32>:word32]
	r26_1396 = Mem1354[r25_1394 + 28<i32>:word32]
	Mem1397[r19_104 + 92<i32>:word32] = r4_1395
	word32 r29_3091
	word32 r31_3093
	word32 r30_3092
	word32 r28_3090
	word32 r26_3088
	word32 r27_3089
	word32 r24_3086
	word32 r25_3087
	word32 r23_3085
	word32 r20_3082
	word32 r21_3083
	word32 r22_3084
	word32 r19_3081
	word32 r10_3080
	word32 r9_3079
	word32 r8_3078
	word32 r7_3077
	word32 r6_3076
	word32 r4_3074
	word32 r5_3075
	fn00003990(r0, r3, r19, r23, out r4_3074, out r5_3075, out r6_3076, out r7_3077, out r8_3078, out r9_3079, out r10_3080, out r19_3081, out r20_3082, out r21_3083, out r22_3084, out r23_3085, out r24_3086, out r25_3087, out r26_3088, out r27_3089, out r28_3090, out r29_3091, out r30_3092, out r31_3093)
	word32 r3_1400 = Mem1397[r26_1396 + 20<i32>:word32]
	r22_1401 = Mem1397[r25_1394 + 16<i32>:word32]
	branch r3_1400 -u r22_1401 >= 0<32> l00009D80
l00009D7C:
	r22_1401 = r3_1400
l00009D80:
	branch Test(EQ,r22_1401) l00009D84_ds_t
l00009D84_ds_t:
l00009D84_ds_f:
l00009D88:
	word32 r10_3096
	word32 r9_3095
	word32 r4_3094
	fn00008C34(r3_1400, r4_1395, Mem1397[r25_1394 + 12<i32>:word32], Mem1397[r26_1396 + 16<i32>:word32], r22_1401, 0<32>, out r4_3094, out r9_3095, out r10_3096)
	word32 r6_1423 = Mem1397[r26_1396 + 16<i32>:word32]
	word32 r5_1424 = Mem1397[r25_1394 + 20<i32>:word32]
	word32 r4_1425 = Mem1397[r25_1394 + 16<i32>:word32]
	word32 r3_1426 = Mem1397[r26_1396 + 20<i32>:word32]
	Mem1428[r25_1394 + 12<i32>:word32] = Mem1397[r25_1394 + 12<i32>:word32] + r22_1401
	Mem1430[r26_1396 + 16<i32>:word32] = r6_1423 + r22_1401
	Mem1433[r25_1394 + 20<i32>:word32] = r5_1424 + r22_1401
	Mem1434[r25_1394 + 16<i32>:word32] = r4_1425 - r22_1401
	r22_1401 = r3_1426 - r22_1401
	branch Test(NE,r22_1401) l00009DD4_ds_t
l00009DD4_ds_t:
	Mem1436[r26_1396 + 20<i32>:word32] = r22_1401
l00009DD4_ds_f:
	Mem1437[r26_1396 + 20<i32>:word32] = r22_1401
l00009DD8:
	Mem1439[r26_1396 + 16<i32>:word32] = Mem1437[r26_1396 + 8<i32>:word32]
l000093C4_ds_f:
l000093C8:
	branch Test(EQ,r3_1022 ^ 3<32>) l000093CC_ds_t
l000093CC_ds_t:
	word32 r3_1441 = r4_1014 * 2<32>
l0000A77C:
l0000A790:
	word32 r6_1448 = Mem1447[r19_104 + 116<i32>:word32]
l0000A7A0:
	word32 r5_2034
	word32 r4_1935
	word32 r7_1802
	word32 r5_1799
	branch 0x102<32> -u r6_1448 >= 0<32> l0000A990
l0000A990:
	fn00005B0C(r0, r5)
	r6_1448 = Mem1457[r19_104 + 116<i32>:word32]
	branch 0x102<32> -u r6_1448 < 0<32> l0000A7A8
l0000A9A4:
	branch Test(EQ,r23_140) l0000A0B0
l0000A9A4_thunk_fn00009408:
	word32 r28_3073
	word32 r26_3071
	word32 r27_3072
	word32 r8_3064
	word32 r19_3065
	word32 r21_3066
	word32 r25_3070
	word32 r24_3069
	word32 r22_3067
	word32 r23_3068
	word32 r7_3063
	fn00009408(r0, r3_1441, r4_1014, r8, r19_104, r21, 0xFFFFACD8<32>, r23_140, r24, 1<32>, 0xFFFFABD8<32>, out r7_3063, out r8_3064, out r19_3065, out r21_3066, out r22_3067, out r23_3068, out r24_3069, out r25_3070, out r26_3071, out r27_3072, out r28_3073)
	return
l0000A9A8:
	branch Test(EQ,r6_1448) l0000AC4C
l0000AC4C:
	branch Test(EQ,r24) l0000AC50_ds_t
l0000AC50_ds_t:
	Mem1493[r19_104 + 5812<i32>:word32] = r6_1448
l00009FDC:
	branch Test(LT,Mem1493[r19_104 + 92<i32>:word32]) l00009FE4_ds_t
l00009FE4_ds_t:
l00009FE4_ds_f:
l00009FE8:
l00009FF0:
	fn00003C90(r5)
	word32 r23_1507 = Mem1493[r19_104:word32]
	word32 r4_1508 = Mem1493[r19_104 + 108<i32>:word32]
	word32 r24_1509 = Mem1493[r23_1507 + 28<i32>:word32]
	Mem1510[r19_104 + 92<i32>:word32] = r4_1508
	word32 r28_3034
	word32 r29_3035
	word32 r30_3036
	word32 r31_3037
	word32 r24_3030
	word32 r25_3031
	word32 r26_3032
	word32 r27_3033
	word32 r21_3027
	word32 r22_3028
	word32 r23_3029
	word32 r20_3026
	word32 r9_3023
	word32 r10_3024
	word32 r19_3025
	word32 r5_3019
	word32 r6_3020
	word32 r7_3021
	word32 r8_3022
	word32 r4_3018
	fn00003990(r0, r3, r19, r23, out r4_3018, out r5_3019, out r6_3020, out r7_3021, out r8_3022, out r9_3023, out r10_3024, out r19_3025, out r20_3026, out r21_3027, out r22_3028, out r23_3029, out r24_3030, out r25_3031, out r26_3032, out r27_3033, out r28_3034, out r29_3035, out r30_3036, out r31_3037)
	word32 r3_1513 = Mem1510[r24_1509 + 20<i32>:word32]
	word32 r22_1514 = Mem1510[r23_1507 + 16<i32>:word32]
	branch r3_1513 -u r22_1514 >= 0<32> l0000A038
l0000A034:
	r22_1514 = r3_1513
l0000A038:
	branch Test(EQ,r22_1514) l0000A03C_ds_t
l0000A03C_ds_t:
l0000A03C_ds_f:
l0000A040:
	word32 r10_3040
	word32 r4_3038
	word32 r9_3039
	fn00008C34(r3_1513, r4_1508, Mem1510[r23_1507 + 12<i32>:word32], Mem1510[r24_1509 + 16<i32>:word32], r22_1514, 1<32>, out r4_3038, out r9_3039, out r10_3040)
	word32 r6_1536 = Mem1510[r24_1509 + 16<i32>:word32]
	word32 r5_1537 = Mem1510[r23_1507 + 20<i32>:word32]
	word32 r4_1538 = Mem1510[r23_1507 + 16<i32>:word32]
	word32 r3_1539 = Mem1510[r24_1509 + 20<i32>:word32]
	Mem1541[r23_1507 + 12<i32>:word32] = Mem1510[r23_1507 + 12<i32>:word32] + r22_1514
	Mem1543[r24_1509 + 16<i32>:word32] = r6_1536 + r22_1514
	Mem1546[r23_1507 + 20<i32>:word32] = r5_1537 + r22_1514
	Mem1547[r23_1507 + 16<i32>:word32] = r4_1538 - r22_1514
	r22_1514 = r3_1539 - r22_1514
	branch Test(NE,r22_1514) l0000A08C_ds_t
l0000A08C_ds_t:
	Mem1549[r24_1509 + 20<i32>:word32] = r22_1514
l0000A08C_ds_f:
	Mem1550[r24_1509 + 20<i32>:word32] = r22_1514
l0000A090:
	Mem1552[r24_1509 + 16<i32>:word32] = Mem1550[r24_1509 + 8<i32>:word32]
l0000A098:
	word32 r3_1557 = Mem1555[Mem1555[r19_104:word32] + 16<i32>:word32]
	branch Test(NE,r3_1557) l0000A0A4_ds_t
l0000A0A4_ds_t:
l0000AF28:
	Mem1559[r19_104 + 4<i32>:word32] = 0x29A<32>
l0000AF28_thunk_fn00009408:
	word32 r27_3061
	word32 r28_3062
	word32 r26_3060
	word32 r24_3058
	word32 r25_3059
	word32 r23_3057
	word32 r22_3056
	word32 r21_3055
	word32 r19_3054
	word32 r8_3053
	word32 r7_3052
	fn00009408(r0, r3_1557, 0x29A<32>, 1<32>, r19_104, r21, r22_1514, r23_1507, r24_1509, 1<32>, 0xFFFFABD8<32>, out r7_3052, out r8_3053, out r19_3054, out r21_3055, out r22_3056, out r23_3057, out r24_3058, out r25_3059, out r26_3060, out r27_3061, out r28_3062)
	return
l0000A0A4_ds_f:
l0000A0A8:
	Mem1601[r19_104 + 4<i32>:word32] = 0x29A<32>
l0000A0AC_thunk_fn00009408:
	word32 r28_3051
	word32 r27_3050
	word32 r26_3049
	word32 r25_3048
	word32 r24_3047
	word32 r23_3046
	word32 r22_3045
	word32 r21_3044
	word32 r19_3043
	word32 r8_3042
	word32 r7_3041
	fn00009408(r0, 0x29A<32>, 0x29A<32>, 1<32>, r19_104, r21, r22_1514, r23_1507, r24_1509, 1<32>, 0xFFFFABD8<32>, out r7_3041, out r8_3042, out r19_3043, out r21_3044, out r22_3045, out r23_3046, out r24_3047, out r25_3048, out r26_3049, out r27_3050, out r28_3051)
	return
l0000AC50_ds_f:
	Mem1625[r19_104 + 5812<i32>:word32] = r6_1448
l0000AC54:
	branch Test(EQ,Mem1625[r19_104 + 5792<i32>:word32]) l0000AC5C_ds_t
l0000AC5C_ds_t:
	word32 r3_1627 = r23_140 ^ 1<32>
l0000AC5C_thunk_fn00009408:
	word32 r26_3015
	word32 r28_3017
	word32 r27_3016
	word32 r23_3012
	word32 r25_3014
	word32 r24_3013
	word32 r22_3011
	word32 r21_3010
	word32 r19_3009
	word32 r8_3008
	word32 r7_3007
	fn00009408(r0, r3_1627, r4_1014, r8, r19_104, r21, 0xFFFFACD8<32>, r23_140, r24, 1<32>, 0xFFFFABD8<32>, out r7_3007, out r8_3008, out r19_3009, out r21_3010, out r22_3011, out r23_3012, out r24_3013, out r25_3014, out r26_3015, out r27_3016, out r28_3017)
	return
l0000AC5C_ds_f:
l0000AC60:
	branch Test(LT,Mem1625[r19_104 + 92<i32>:word32]) l0000AC70
l0000AC68:
l0000AC70:
	fn00003C90(r5)
	r25_1394 = Mem1625[r19_104:word32]
	r26_1396 = Mem1625[r25_1394 + 28<i32>:word32]
	Mem1666[r19_104 + 92<i32>:word32] = Mem1625[r19_104 + 108<i32>:word32]
	word32 r29_2990
	word32 r30_2991
	word32 r31_2992
	word32 r26_2987
	word32 r27_2988
	word32 r28_2989
	word32 r25_2986
	word32 r24_2985
	word32 r23_2984
	word32 r22_2983
	word32 r21_2982
	word32 r20_2981
	word32 r19_2980
	word32 r10_2979
	word32 r9_2978
	word32 r8_2977
	word32 r7_2976
	word32 r6_2975
	word32 r5_2974
	word32 r4_2973
	fn00003990(r0, r3, r19, r23, out r4_2973, out r5_2974, out r6_2975, out r7_2976, out r8_2977, out r9_2978, out r10_2979, out r19_2980, out r20_2981, out r21_2982, out r22_2983, out r23_2984, out r24_2985, out r25_2986, out r26_2987, out r27_2988, out r28_2989, out r29_2990, out r30_2991, out r31_2992)
	word32 r3_1669 = Mem1666[r26_1396 + 20<i32>:word32]
	r22_1401 = Mem1666[r25_1394 + 16<i32>:word32]
	branch r3_1669 -u r22_1401 >= 0<32> l0000ACB8
l0000ACB4:
	r22_1401 = r3_1669
l0000ACB8:
	branch Test(EQ,r22_1401) l0000ACBC_ds_t
l0000ACBC_ds_t:
l0000ACBC_ds_f:
l0000ACC0:
	word32 r4_2993
	word32 r9_2994
	word32 r10_2995
	fn00008C34(r3_1669, r4_1014, Mem1666[r25_1394 + 12<i32>:word32], Mem1666[r26_1396 + 16<i32>:word32], r22_1401, 0<32>, out r4_2993, out r9_2994, out r10_2995)
	word32 r6_1693 = Mem1666[r26_1396 + 16<i32>:word32]
	word32 r5_1694 = Mem1666[r25_1394 + 20<i32>:word32]
	word32 r4_1695 = Mem1666[r25_1394 + 16<i32>:word32]
	word32 r3_1696 = Mem1666[r26_1396 + 20<i32>:word32]
	Mem1698[r25_1394 + 12<i32>:word32] = Mem1666[r25_1394 + 12<i32>:word32] + r22_1401
	Mem1700[r26_1396 + 16<i32>:word32] = r6_1693 + r22_1401
	Mem1703[r25_1394 + 20<i32>:word32] = r5_1694 + r22_1401
	Mem1704[r25_1394 + 16<i32>:word32] = r4_1695 - r22_1401
	r22_1401 = r3_1696 - r22_1401
	branch Test(NE,r22_1401) l0000AD0C_ds_t
l0000AD0C_ds_t:
	Mem1706[r26_1396 + 20<i32>:word32] = r22_1401
l0000AD0C_ds_f:
	Mem1707[r26_1396 + 20<i32>:word32] = r22_1401
l0000AD10:
	Mem1709[r26_1396 + 16<i32>:word32] = Mem1707[r26_1396 + 8<i32>:word32]
l00009DE0:
	word32 r3_1715 = Mem1713[Mem1713[r19_104:word32] + 16<i32>:word32]
	word32 r4_1717 = -r3_1715 | r3_1715
	word32 r4_1750 = r4_1717 >>u 31<i32> & 0xFFFFFFFD<32>
l00009E70_thunk_fn00009408:
	word32 r28_3006
	word32 r26_3004
	word32 r27_3005
	word32 r25_3003
	word32 r24_3002
	word32 r22_3000
	word32 r23_3001
	word32 r8_2997
	word32 r19_2998
	word32 r21_2999
	word32 r7_2996
	fn00009408(r0, r4_1717 >>u 31<i32>, r4_1750, 0<32>, r19_104, r21, r22_1401, r23_140, r24, r25_1394, r26_1396, out r7_2996, out r8_2997, out r19_2998, out r21_2999, out r22_3000, out r23_3001, out r24_3002, out r25_3003, out r26_3004, out r27_3005, out r28_3006)
	return
l0000A9AC:
	Mem1798[r19_104 + 96<i32>:word32] = r0
	r5_1799 = Mem1798[r19_104 + 108<i32>:word32]
	branch 2<32> -u r6_1448 >= 0<32> l0000A9BC_ds_t
l0000A9BC_ds_t:
	r7_1802 = Mem1798[r19_104 + 56<i32>:word32]
l0000A9BC_ds_f:
	r7_1802 = Mem1798[r19_104 + 56<i32>:word32]
l0000A9C0:
l0000A7A8:
	r5_1799 = Mem1457[r19_104 + 108<i32>:word32]
	r7_1802 = Mem1457[r19_104 + 56<i32>:word32]
	Mem1809[r19_104 + 96<i32>:word32] = r0
l0000A7B4:
	branch Test(EQ,r5_1799) l0000A7B8_ds_t
l0000A7B8_ds_t:
l0000A7B8_ds_f:
	word32 r3_1812 = r5_1799 + 0xFFFFFFFF<32>
l0000A7BC:
	word32 r4_1814 = r7_1802 + r3_1812
	r8 = CONVERT(Mem1815[r3_1812 + r7_1802:byte], byte, word32)
	branch Test(EQ,CONVERT(Mem1815[r4_1814 + 1<i32>:byte], byte, word32) ^ r8) l0000A9C4
l0000A9C4:
	branch Test(NE,CONVERT(Mem1815[r4_1814 + 2<i32>:byte], byte, word32) ^ r8) l0000A7D0
l0000A9D0:
	branch Test(NE,CONVERT(Mem1815[r4_1814 + 3<i32>:byte], byte, word32) ^ r8) l0000A9DC_ds_t
l0000A9DC_ds_t:
l0000A9DC_ds_f:
	word32 r3_1828 = r5_1799 + 0x102<32>
l0000A9E0:
	word32 r4_1829 = r4_1814 + 3<32>
	word32 r3_1830 = r7_1802 + r3_1828
l0000AADC:
	branch Test(EQ,CONVERT(Mem1815[r4_1829 + 1<i32>:byte], byte, word32) ^ r8) l0000AAE8_ds_t
l0000AAE8_ds_t:
l0000A9EC:
	branch Test(NE,CONVERT(Mem1815[r4_1829 + 2<i32>:byte], byte, word32) ^ r8) l0000AFAC
l0000AFAC:
	r4_1829 = r4_1829 + 2<32>
l0000A9F8:
	branch Test(NE,CONVERT(Mem1815[r4_1829 + 3<i32>:byte], byte, word32) ^ r8) l0000AFB4
l0000AFB4:
	r4_1829 = r4_1829 + 3<32>
l0000AA04:
	branch Test(NE,CONVERT(Mem1815[r4_1829 + 4<i32>:byte], byte, word32) ^ r8) l0000AFA4
l0000AFA4:
	r4_1829 = r4_1829 + 4<32>
l0000AA10:
	branch Test(NE,CONVERT(Mem1815[r4_1829 + 5<i32>:byte], byte, word32) ^ r8) l0000AF9C
l0000AF9C:
	r4_1829 = r4_1829 + 5<32>
l0000AA1C:
	branch Test(NE,CONVERT(Mem1815[r4_1829 + 6<i32>:byte], byte, word32) ^ r8) l0000AF94
l0000AF94:
	r4_1829 = r4_1829 + 6<32>
l0000AA28:
	word32 r11_1861 = CONVERT(Mem1815[r4_1829 + 7<i32>:byte], byte, word32) ^ r8
	branch Test(NE,r11_1861) l0000AF8C
l0000AF8C:
	r4_1829 = r4_1829 + 7<32>
l0000AA34:
	word32 r10_1902
	r4_1829 = r4_1829 + 8<32>
	word32 r12_1868 = (r8 ^ CONVERT(Mem1815[r4_1829:byte], byte, word32)) + 0xFFFFFFFF<32> >>u 1<i32>
	branch r4_1829 -u r3_1830 < 0<32> l0000AACC_ds_t
l0000AACC_ds_t:
	r10_1902 = r12_1868 >>u 30<i32> & 1<32>
l0000AACC_ds_f:
l0000AAD0:
	r10_1902 = r12_1868 >>u 30<i32> & r11_1861
l0000AAD8:
	branch Test(EQ,r10_1902) l0000AAF0
l0000AAE8_ds_f:
l0000AAEC:
	r4_1829 = r4_1829 + 1<32>
l0000AAF0:
	word32 r3_1933
	word32 r3_1915 = 0x102<32> - (r3_1830 - r4_1829)
	branch r6_1448 -u r3_1915 >= 0<32> l0000AB04_ds_t
l0000AB04_ds_t:
	Mem1926[r19_104 + 96<i32>:word32] = r3_1915
l0000AF78:
	branch 2<32> -u r3_1915 < 0<32> l0000AF80_ds_t
l0000AF80_ds_t:
	r3_1933 = r3_1915 + 0xFFFFFFFD<32>
l0000AF80_ds_f:
l0000AF84:
	r4_1935 = Mem1926[r19_104 + 5792<i32>:word32]
l0000AB04_ds_f:
	Mem1936[r19_104 + 96<i32>:word32] = r3_1915
l0000AB08:
	Mem1938[r19_104 + 96<i32>:word32] = r6_1448
	r3_1933 = r6_1448 + 0xFFFFFFFD<32>
l0000AB14:
	word32 r3_1944 = r3_1933 & 0xFF<32>
	word32 r5_1942 = Mem1941[r19_104 + 5792<i32>:word32]
	r8 = Mem1941[r19_104 + 5796<i32>:word32]
	word32 r4_1953 = CONVERT(Mem1941[r3_1944 + 0xFFFFABD8<32>:byte], byte, word32)
	word32 r6_1954 = Mem1941[r19_104 + 5784<i32>:word32]
	Mem1963[r5_1942 * 2<32> + r8:word16] = 1<16>
	Mem1966[r19_104 + 5792<i32>:word32] = r5_1942 + 1<32>
	Mem1969[r5_1942 + r6_1954:byte] = SLICE(r3_1944, byte, 0)
	word32 r4_1970 = r19_104 + r4_1953 * 4<32>
	word32 r3_1978 = CONVERT(Mem1969[0xFFFFACD8<32>:byte], byte, word32)
	Mem1985[r4_1970 + 1176<i32>:word16] = Mem1969[r4_1970 + 1176<i32>:word16] + 1<16>
	word32 r3_1986 = r19_104 + r3_1978 * 4<32>
	Mem1991[r3_1986 + 2440<i32>:word16] = Mem1985[r3_1986 + 2440<i32>:word16] + 1<16>
	word32 r3_1996 = Mem1991[r19_104 + 5788<i32>:word32] + 0xFFFFFFFF<32> ^ Mem1991[r19_104 + 5792<i32>:word32]
	word32 r4_1994 = Mem1991[r19_104 + 96<i32>:word32]
	r6_1448 = Mem1991[r19_104 + 116<i32>:word32] - r4_1994
	r4_1014 = r4_1994 + Mem1991[r19_104 + 108<i32>:word32]
	Mem2036[r19_104 + 116<i32>:word32] = r6_1448
	Mem2037[r19_104 + 108<i32>:word32] = r4_1014
	Mem2043[r19_104 + 96<i32>:word32] = r0
	r3_1441 = ~(-r3_1996 | r3_1996)
	r5_2034 = r3_1441 >>u 31<i32>
l0000A7D0:
	r4_1935 = Mem2045[r19_104 + 5792<i32>:word32]
l0000A7D4:
	word32 r5_2059 = CONVERT(Mem2057[r5_1799 + r7_1802:byte], byte, word32)
	word32 r6_2062 = Mem2057[r19_104 + 5784<i32>:word32]
	Mem2068[r4_1935 * 2<32> + Mem2057[r19_104 + 5796<i32>:word32]:word16] = SLICE(r0, word16, 0)
	Mem2071[r19_104 + 5792<i32>:word32] = r4_1935 + 1<32>
	Mem2074[r4_1935 + r6_2062:byte] = SLICE(r5_2059, byte, 0)
	word32 r3_2075 = r19_104 + r5_2059 * 4<32>
	Mem2080[r3_2075 + 148<i32>:word16] = Mem2074[r3_2075 + 148<i32>:word16] + 1<16>
	word32 r3_2086 = Mem2080[r19_104 + 5788<i32>:word32] + 0xFFFFFFFF<32> ^ Mem2080[r19_104 + 5792<i32>:word32]
	word32 r6_2083 = Mem2080[r19_104 + 116<i32>:word32]
	word32 r4_2084 = Mem2080[r19_104 + 108<i32>:word32]
	Mem2092[r19_104 + 116<i32>:word32] = r6_2083 + 0xFFFFFFFF<32>
	Mem2093[r19_104 + 108<i32>:word32] = r4_2084 + 1<32>
	r3_1441 = ~(-r3_2086 | r3_2086)
	r6_1448 = r6_2083 + 0xFFFFFFFF<32>
	r4_1014 = r4_2084 + 1<32>
	r5_2034 = r3_1441 >>u 31<i32>
l0000A8C0:
	branch Test(EQ,r5_2034) l0000A7A0
l0000A8C4:
	branch Test(LT,Mem2128[r19_104 + 92<i32>:word32]) l0000A8CC_ds_t
l0000A8CC_ds_t:
l0000A8CC_ds_f:
l0000A8D0:
l0000A8D8:
	fn00003C90(r5)
	word32 r27_2143 = Mem2128[r19_104:word32]
	word32 r30_2145 = Mem2128[r27_2143 + 28<i32>:word32]
	Mem2146[r19_104 + 92<i32>:word32] = Mem2128[r19_104 + 108<i32>:word32]
	word32 r31_2958
	word32 r28_2955
	word32 r29_2956
	word32 r30_2957
	word32 r25_2952
	word32 r26_2953
	word32 r27_2954
	word32 r24_2951
	word32 r23_2950
	word32 r22_2949
	word32 r21_2948
	word32 r20_2947
	word32 r19_2946
	word32 r10_2945
	word32 r9_2944
	word32 r7_2942
	word32 r8_2943
	word32 r6_2941
	word32 r5_2940
	word32 r4_2939
	fn00003990(r0, r3, r19, r23, out r4_2939, out r5_2940, out r6_2941, out r7_2942, out r8_2943, out r9_2944, out r10_2945, out r19_2946, out r20_2947, out r21_2948, out r22_2949, out r23_2950, out r24_2951, out r25_2952, out r26_2953, out r27_2954, out r28_2955, out r29_2956, out r30_2957, out r31_2958)
	r8 = 0<32>
	word32 r3_2149 = Mem2146[r30_2145 + 20<i32>:word32]
	word32 r22_2150 = Mem2146[r27_2143 + 16<i32>:word32]
	branch r3_2149 -u r22_2150 >= 0<32> l0000A91C
l0000A918:
	r22_2150 = r3_2149
l0000A91C:
	branch Test(EQ,r22_2150) l0000A920_ds_t
l0000A920_ds_t:
l0000A920_ds_f:
l0000A924:
	word32 r10_2961
	word32 r4_2959
	word32 r9_2960
	fn00008C34(r3_2149, r4_1014, Mem2146[r27_2143 + 12<i32>:word32], Mem2146[r30_2145 + 16<i32>:word32], r22_2150, 0<32>, out r4_2959, out r9_2960, out r10_2961)
	word32 r6_2172 = Mem2146[r30_2145 + 16<i32>:word32]
	word32 r5_2173 = Mem2146[r27_2143 + 20<i32>:word32]
	word32 r4_2174 = Mem2146[r27_2143 + 16<i32>:word32]
	word32 r3_2175 = Mem2146[r30_2145 + 20<i32>:word32]
	Mem2177[r27_2143 + 12<i32>:word32] = Mem2146[r27_2143 + 12<i32>:word32] + r22_2150
	Mem2179[r30_2145 + 16<i32>:word32] = r6_2172 + r22_2150
	Mem2182[r27_2143 + 20<i32>:word32] = r5_2173 + r22_2150
	r4_1014 = r4_2174 - r22_2150
	Mem2183[r27_2143 + 16<i32>:word32] = r4_1014
	r22_2150 = r3_2175 - r22_2150
	branch Test(NE,r22_2150) l0000A970_ds_t
l0000A970_ds_t:
	Mem2185[r30_2145 + 20<i32>:word32] = r22_2150
l0000A970_ds_f:
	Mem2186[r30_2145 + 20<i32>:word32] = r22_2150
l0000A974:
	Mem2188[r30_2145 + 16<i32>:word32] = Mem2186[r30_2145 + 8<i32>:word32]
l0000A97C:
	r3_1441 = Mem2191[Mem2191[r19_104:word32] + 16<i32>:word32]
	branch Test(NE,r3_1441) l0000A790
l0000A988:
	word32 r3_2206 = Mem2191[r21 + 16<i32>:word32]
l0000A988_thunk_fn00009408:
	word32 r28_2972
	word32 r27_2971
	word32 r26_2970
	word32 r25_2969
	word32 r24_2968
	word32 r23_2967
	word32 r21_2965
	word32 r22_2966
	word32 r7_2962
	word32 r8_2963
	word32 r19_2964
	fn00009408(r0, r3_2206, r4_1014, 0<32>, r19_104, r21, r22_2150, r23_140, r24, 1<32>, 0xFFFFABD8<32>, out r7_2962, out r8_2963, out r19_2964, out r21_2965, out r22_2966, out r23_2967, out r24_2968, out r25_2969, out r26_2970, out r27_2971, out r28_2972)
	return
l000093CC_ds_f:
l000093D0:
	word32 r3_2278 = Mem911[r4_1014 * 0xC<32> + 0xFFFF9DBC<32>:word32]
	word32 r11_2335
	word32 r12_2336
	word32 r31_2338
	call 0x000093EC<p32> + r3_2278 (retsize: 0;)
		uses: r0:r0,r11:r11_2335,r12:r12_2336,r15:0x000093EC<p32>,r19:r19_864,r21:r21_860,r22:r22_921,r23:r23_918,r24:r24_952,r26:r26_935,r3:r3_2278,r31:r31_2338,r5:r19_864,r6:r23_918,r8:r8_883
		defs: r0:r0_2322,r11:r11_2335,r12:r12_2336,r19:r19_2315,r21:r21_2321,r22:r22_2325,r23:r23_2329,r24:r24_2337,r25:r25_2324,r26:r26_2323,r3:r3_2316,r31:r31_2338,r8:r8_2327
	r4_1020 = r3_1019 + 0xFFFFFFFE<32>
l000093F8:
	branch 1<32> -u r4_1020 >= 0<32> l00009404_ds_t
l00009404_ds_t:
l0000A3BC:
	word32 r3_2347 = r3_1019 & 0xFFFFFFFD<32>
	branch Test(NE,r3_2347) l0000A3C8_ds_t
l0000A3C8_ds_t:
	Mem2349[r19_104 + 4<i32>:word32] = 0x29A<32>
l0000A3C8_thunk_fn00009408:
	word32 r27_2936
	word32 r28_2937
	word32 r25_2934
	word32 r26_2935
	word32 r23_2932
	word32 r24_2933
	word32 r21_2930
	word32 r22_2931
	word32 r8_2928
	word32 r19_2929
	word32 r7_2927
	fn00009408(r0, r3_2347, 0x29A<32>, r8, r19_104, r21, r22, r23_140, r24, r25_2324, r26, out r7_2927, out r8_2928, out r19_2929, out r21_2930, out r22_2931, out r23_2932, out r24_2933, out r25_2934, out r26_2935, out r27_2936, out r28_2937)
	return
l0000A3C8_ds_f:
	Mem2382[r19_104 + 4<i32>:word32] = 0x29A<32>
l0000A3CC:
	word32 r3_2383 = Mem2382[r21 + 16<i32>:word32]
l0000A3CC_thunk_fn00009408:
	word32 r28_2926
	word32 r26_2924
	word32 r27_2925
	word32 r24_2922
	word32 r25_2923
	word32 r23_2921
	word32 r22_2920
	word32 r21_2919
	word32 r7_2916
	word32 r8_2917
	word32 r19_2918
	fn00009408(r0, r3_2383, 0x29A<32>, r8, r19_104, r21, r22, r23_140, r24, r25_2324, r26, out r7_2916, out r8_2917, out r19_2918, out r21_2919, out r22_2920, out r23_2921, out r24_2922, out r25_2923, out r26_2924, out r27_2925, out r28_2926)
	return
l00009404_ds_f:
	word32 r4_2407 = r3_1019 & 0xFFFFFFFD<32>
l00009404_thunk_fn00009408:
	word32 r26_2913
	word32 r8_2906
	word32 r19_2907
	word32 r7_2905
	word32 r27_2914
	word32 r25_2912
	word32 r24_2911
	word32 r22_2909
	word32 r23_2910
	word32 r28_2915
	word32 r21_2908
	fn00009408(r0, r3_1019, r4_2407, r8, r19_104, r21, r22, r23_140, r24, r25_2324, r26, out r7_2905, out r8_2906, out r19_2907, out r21_2908, out r22_2909, out r23_2910, out r24_2911, out r25_2912, out r26_2913, out r27_2914, out r28_2915)
	return
l0000A5BC:
	Mem2433[r19_104 + 40<i32>:word32] = 0xFFFFFFFF<32>
l0000A5C4_thunk_fn00009408:
	word32 r23_2899
	word32 r19_2896
	word32 r22_2898
	word32 r24_2900
	word32 r21_2897
	word32 r28_2904
	word32 r27_2903
	word32 r26_2902
	word32 r7_2894
	word32 r8_2895
	word32 r25_2901
	fn00009408(r0, 0<32>, r4_2435, r8, r19_104, r21, r22, r23_140, r24, r25_2324, r26, out r7_2894, out r8_2895, out r19_2896, out r21_2897, out r22_2898, out r23_2899, out r24_2900, out r25_2901, out r26_2902, out r27_2903, out r28_2904)
	return
fn0000A774_exit:
l0000A2D4_ds_f:
	Mem2475[r7_2476 + r4_671:byte] = SLICE(r3_675, byte, 0)
l0000A2D8:
	r7_2476 = Mem2475[r19_104 + 20<i32>:word32]
	r4_20 = Mem2475[r19_104 + 28<i32>:word32]
l0000A16C_ds_f:
	Mem2479[r7_2480 + r4_428:byte] = SLICE(r3_432, byte, 0)
l0000A170:
	r7_2480 = Mem2479[r19_104 + 20<i32>:word32]
	r4_20 = Mem2479[r19_104 + 28<i32>:word32]


word32 fn0000AFBC(word32 r0, word32 r5, word32 r6, word32 r7, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00005318
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r6 r7
// Trashed: C r0 r10 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000AFBC_entry:
	word32 r21
	word32 r19
	word32 r22
	word32 r23
l0000AFBC:
	branch Test(EQ,r5) l0000B31C
l0000B31C:
	r6Out = r6
	r7Out = r7
	r19Out = r19
	r21Out = r21
	r22Out = r22
	r23Out = r23
	return r0
l0000AFC0:
	branch Test(EQ,Mem15[r5 + 32<i32>:word32]) l0000AFE0_ds_t
l0000AFE0_ds_t:
l0000AFE0_ds_f:
l0000AFE4:
	branch Test(EQ,Mem15[r5 + 36<i32>:word32]) l0000AFEC_ds_t
l0000AFEC_ds_t:
l0000AFEC_ds_f:
l0000AFF0:
	word32 r19_159 = Mem15[r5 + 28<i32>:word32]
	branch Test(EQ,r19_159) l0000AFF8_ds_t
l0000AFF8_ds_t:
l0000AFF8_ds_f:
l0000AFFC:
	branch Test(EQ,r5 ^ Mem15[r19_159:word32]) l0000B008_ds_t
l0000B008_ds_t:
	word32 r23_161 = r7
l0000B02C:
	word32 r3_29 = Mem15[r19_159 + 4<i32>:word32]
	word32 r8_167 = (-(r3_29 ^ 0x45<32>) | r3_29 ^ 0x45<32>) & (-(r3_29 ^ 0x2A<32>) | r3_29 ^ 0x2A<32>)
	r7 = (-(r3_29 ^ 0x5B<32>) | r3_29 ^ 0x5B<32>) & r8_167
	word32 r3_50 = r3_29 + 0xFFFFFFC7<32> & 0xFFFFFFEF<32>
	r6 = (-(r3_29 ^ 0x71<32>) | r3_29 ^ 0x71<32>) & ((-(r3_29 ^ 0x67<32>) | r3_29 ^ 0x67<32>) & r7)
	word32 r3_59 = (-r3_50 | r3_50) & ((-(r3_29 ^ 0x29A<32>) | r3_29 ^ 0x29A<32>) & r6)
	word32 r22_121 = r6
	word32 r4_103 = r3_59 >>u 31<i32>
	branch Test(NE,r3_59 >>u 31<i32>) l0000B128_ds_t
l0000B128_ds_t:
l0000B128_ds_f:
l0000B12C:
	branch Test(EQ,~r6) l0000B134_ds_t
l0000B134_ds_t:
l0000B290:
	r22_121 = 6<32>
l0000B134_ds_f:
l0000B138:
	word32 r3_101
	branch 9<32> -u r6 < 0<32> l0000B140_ds_t
l0000B140_ds_t:
	r3_101 = 1<32>
l0000B140_ds_f:
l0000B144:
	r3_101 = r3_59 >>u 31<i32>
l0000B148:
	r4_103 = r3_101 & 0xFF<32>
l0000B14C:
	branch 4<32> -u r7 < 0<32> l0000B158_ds_t
l0000B158_ds_t:
l0000B158_ds_f:
l0000B15C:
	branch Test(NE,r4_103) l0000B160_ds_t
l0000B160_ds_t:
l0000B160_ds_f:
l0000B164:
	word32 r6_124
	word32 r5_140
	word32 r3_141
	branch Test(EQ,Mem15[r19_159 + 136<i32>:word32] ^ r7) l0000B170_ds_t
l0000B170_ds_t:
	word32 r4_123 = r22_121 * 2<32>
l0000B244:
	r6_124 = Mem15[r19_159 + 132<i32>:word32]
	branch Test(NE,Mem15[(r4_123 + r22_121) * 4<32> + 0xFFFF9DBC<32>:word32] ^ Mem15[r6_124 * 0xC<32> + 0xFFFF9DBC<32>:word32]) l0000B284_ds_t
l0000B284_ds_t:
l0000B284_ds_f:
	r5_140 = r5
l0000B288:
	r3_141 = r22_121 ^ r6_124
l0000B170_ds_f:
l0000B174:
l0000B178:
	word32 r11_395
	word32 r26_399
	word32 r4_394
	word32 r24_397
	word32 r25_398
	word32 r20_396
	word32 r21_157
	word32 r3_162
	word32 r9_166
	word32 r10_296
	word32 r27_400
	r0 = fn00008E80(r5, 5<32>, r8_167, r9_166, r10_296, r5, out r3_162, out r4_394, out r5_140, out r6, out r7, out r8_167, out r9_166, out r10_296, out r11_395, out r19_159, out r20_396, out r21_157, out r22_121, out r23_161, out r24_397, out r25_398, out r26_399, out r27_400)
	branch Test(EQ,r3_162 ^ 0xFFFFFFFE<32>) l0000B188_ds_t
l0000B188_ds_t:
l0000B188_ds_f:
l0000B18C:
	branch Test(EQ,Mem15[r21_157 + 16<i32>:word32]) l0000B194_ds_t
l0000B194_ds_t:
l0000B194_ds_f:
l0000B198:
	r6_124 = Mem15[r19_159 + 132<i32>:word32]
	r3_141 = r22_121 ^ r6_124
l0000B1A0:
	branch Test(EQ,r3_141) l0000B220
l0000B1A0_thunk_fn0000B298:
	word32 r19_196
	word32 r21_197
	word32 r22_198
	word32 r23_199
	word32 r6_203
	word32 r4_410
	word32 r8_411
	word32 r18_412
	fn0000B298(r0, r5_140, r7, r8_167, r19_159, r22_121, r23_161, out r4_410, out r6_203, out r8_411, out r18_412, out r19_196, out r21_197, out r22_198, out r23_199)
	r6Out = r6_203
	r7Out = r7
	r19Out = r19_196
	r21Out = r21_197
	r22Out = r22_198
	r23Out = r23_199
	return r0
l0000B1A4:
	branch Test(NE,r6_124) l0000B1A8_ds_t
l0000B1A8_ds_t:
l0000B1A8_thunk_fn0000B298:
	word32 r19_212
	word32 r21_213
	word32 r22_214
	word32 r23_215
	word32 r6_219
	word32 r8_408
	word32 r18_409
	word32 r4_407
	fn0000B298(r0, r5_140, r7, r8_167, r19_159, r22_121, r23_161, out r4_407, out r6_219, out r8_408, out r18_409, out r19_212, out r21_213, out r22_214, out r23_215)
	r6Out = r6_219
	r7Out = r7
	r19Out = r19_212
	r21Out = r21_213
	r22Out = r22_214
	r23Out = r23_215
	return r0
l0000B1A8_ds_f:
l0000B1AC:
	word32 r3_225 = Mem15[r19_159 + 5808<i32>:word32]
	branch Test(EQ,r3_225) l0000B1B4_ds_t
l0000B1B4_ds_t:
l0000B1B4_thunk_fn0000B298:
	word32 r19_230
	word32 r21_231
	word32 r22_232
	word32 r23_233
	word32 r6_237
	word32 r4_404
	word32 r8_405
	word32 r18_406
	fn0000B298(r0, r5_140, r7, r8_167, r19_159, r22_121, r23_161, out r4_404, out r6_237, out r8_405, out r18_406, out r19_230, out r21_231, out r22_232, out r23_233)
	r6Out = r6_237
	r7Out = r7
	r19Out = r19_230
	r21Out = r21_231
	r22Out = r22_232
	r23Out = r23_233
	return r0
l0000B1B4_ds_f:
l0000B1B8:
	word32 r8_242 = Mem15[r19_159 + 76<i32>:word32]
	word32 r5_243 = Mem15[r19_159 + 68<i32>:word32]
	branch Test(EQ,r3_225 ^ 1<32>) l0000B1CC_ds_t
l0000B1CC_ds_t:
	word32 r7_245 = (r8_242 + 0xFFFFFFFF<32>) * 2<32>
l0000B1CC_thunk_fn0000B298:
	word32 r19_249
	word32 r21_250
	word32 r22_251
	word32 r23_252
	word32 r6_256
	word32 r8_402
	word32 r18_403
	word32 r4_401
	fn0000B298(r0, r5_243, r7_245, r8_242, r19_159, r22_121, r23_161, out r4_401, out r6_256, out r8_402, out r18_403, out r19_249, out r21_250, out r22_251, out r23_252)
	r6Out = r6_256
	r7Out = r7_245
	r19Out = r19_249
	r21Out = r21_250
	r22Out = r22_251
	r23Out = r23_252
	return r0
l0000B1CC_ds_f:
	word32 r7_260 = (r8_242 + 0xFFFFFFFF<32>) * 2<32>
l0000B1CC_thunk_fn0000B1D0:
	word32 r19_264
	word32 r21_265
	word32 r22_266
	word32 r23_267
	word32 r6_271
	word32 r4_413
	word32 r8_414
	word32 r18_415
	fn0000B1D0(r0, r5_243, r6_124, r7_260, r8_242, r19_159, r22_121, r23_161, out r4_413, out r6_271, out r8_414, out r18_415, out r19_264, out r21_265, out r22_266, out r23_267)
	r6Out = r6_271
	r7Out = r7_260
	r19Out = r19_264
	r21Out = r21_265
	r22Out = r22_266
	r23Out = r23_267
	return r0
l0000B008_ds_f:
l0000B00C:
l0000B010:
l0000B014:
	r6Out = r6
	r7Out = r7
	r19Out = r19
	r21Out = r21
	r22Out = r22
	r23Out = r23
	return r0
fn0000AFBC_exit:


word32 fn0000B1C0(word32 r0, word32 r3, word32 r5, word32 r6, word32 r8, word32 r19, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r18Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r18 r19 r21 r22 r3 r4 r6 r7 r8
// Trashed: C r10 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000B1C0_entry:
l0000B1C0:
	branch Test(EQ,r3) l0000B1CC_ds_t
l0000B1CC_ds_t:
	word32 r7_6 = (r8 + 0xFFFFFFFF<32>) * 2<32>
l0000B1CC_thunk_fn0000B298:
	word32 r18_14
	word32 r19_15
	word32 r21_16
	word32 r22_17
	word32 r4_20
	word32 r6_22
	word32 r8_23
	word32 r23_66
	word32 r3_19 = fn0000B298(r0, r5, r7_6, r8, r19, r22, r23, out r4_20, out r6_22, out r8_23, out r18_14, out r19_15, out r21_16, out r22_17, out r23_66)
	r4Out = r4_20
	r6Out = r6_22
	r7Out = r7_6
	r8Out = r8_23
	r18Out = r18_14
	r19Out = r19_15
	r21Out = r21_16
	r22Out = r22_17
	return r3_19
l0000B1CC_ds_f:
	word32 r7_26 = (r8 + 0xFFFFFFFF<32>) * 2<32>
l0000B1CC_thunk_fn0000B1D0:
	word32 r18_30
	word32 r19_31
	word32 r21_32
	word32 r22_33
	word32 r4_36
	word32 r6_38
	word32 r8_39
	word32 r23_67
	word32 r3_35 = fn0000B1D0(r0, r5, r6, r7_26, r8, r19, r22, r23, out r4_36, out r6_38, out r8_39, out r18_30, out r19_31, out r21_32, out r22_33, out r23_67)
	r4Out = r4_36
	r6Out = r6_38
	r7Out = r7_26
	r8Out = r8_39
	r18Out = r18_30
	r19Out = r19_31
	r21Out = r21_32
	r22Out = r22_33
	return r3_35
fn0000B1C0_exit:


word32 fn0000B1D0(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8, word32 r19, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r18Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AFBC
//      fn0000B1C0
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r5:[0..31] r6:[0..15] r7:[0..31] r8:[0..31]
// LiveOut: r18 r19 r21 r22 r23 r3 r4 r6 r8
// Trashed: C r10 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r8 r9
// Preserved: r1
fn0000B1D0_entry:
l0000B1D0:
	Mem7[r7 + r5:word16] = SLICE(r6, word16, 0)
l0000B1D0_thunk_fn0000B298:
	word32 r18_15
	word32 r19_16
	word32 r21_17
	word32 r22_18
	word32 r23_19
	word32 r4_21
	word32 r6_23
	word32 r8_24
	word32 r3_20 = fn0000B298(r0, r5, r7, r8, r19, r22, r23, out r4_21, out r6_23, out r8_24, out r18_15, out r19_16, out r21_17, out r22_18, out r23_19)
	r4Out = r4_21
	r6Out = r6_23
	r8Out = r8_24
	r18Out = r18_15
	r19Out = r19_16
	r21Out = r21_17
	r22Out = r22_18
	r23Out = r23_19
	return r3_20
fn0000B1D0_exit:


word32 fn0000B298(word32 r0, word32 r5, word32 r7, word32 r8, word32 r19, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r18Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AFBC
//      fn0000B1C0
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r5:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r18 r19 r21 r22 r23 r3 r4 r6 r8
// Trashed: C r10 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r8 r9
// Preserved: r1
fn0000B298_entry:
l0000B298:
	word32 r3_5 = Mem0[r19 + 44<i32>:word32]
	word32 r4_10 = r5 + (r7 + 2<32>)
l0000B2A4:
	word32 r4_26
	r4_10 = r4_10 + 0xFFFFFFFE<32>
	word32 r6_14 = CONVERT(Mem12[r4_10:word16], word16, word32)
	branch r6_14 -u r3_5 < 0<32> l0000B2B4_ds_t
l0000B2B4_ds_t:
l0000B2F8:
	r8 = r8 + 0xFFFFFFFF<32>
	branch Test(NE,r8) l0000B300_ds_t
l0000B300_ds_t:
	Mem22[r4_10:word16] = SLICE(r0, word16, 0)
l0000B300_ds_f:
	Mem24[r4_10:word16] = SLICE(r0, word16, 0)
l0000B304:
	r4_26 = Mem24[r19 + 64<i32>:word32]
l0000B2B4_ds_f:
	word32 r9_27 = r6_14 - r3_5
l0000B2B8:
	r8 = r8 + 0xFFFFFFFF<32>
	branch Test(NE,r8) l0000B2C0_ds_t
l0000B2C0_ds_t:
	Mem30[r4_10:word16] = SLICE(r9_27, word16, 0)
l0000B2C0_ds_f:
	Mem32[r4_10:word16] = SLICE(r9_27, word16, 0)
l0000B2C4:
	r4_26 = Mem32[r19 + 64<i32>:word32]
l0000B2C8:
	word32 r4_38 = r4_26 + r3_5 * 2<32>
l0000B2D0_thunk_fn0000B2D4:
	word32 r10_77
	word32 r9_76
	word32 r18_54
	word32 r19_55
	word32 r21_56
	word32 r22_57
	word32 r23_58
	word32 r4_60
	word32 r6_62
	word32 r8_63
	word32 r3_59 = fn0000B2D4(r0, r3_5, r4_38, r5, r3_5, r7, r19, r22, r23, out r4_60, out r6_62, out r8_63, out r9_76, out r10_77, out r18_54, out r19_55, out r21_56, out r22_57, out r23_58)
	r4Out = r4_60
	r6Out = r6_62
	r8Out = r8_63
	r18Out = r18_54
	r19Out = r19_55
	r21Out = r21_56
	r22Out = r22_57
	r23Out = r23_58
	return r3_59
fn0000B298_exit:


word32 fn0000B2CC(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r19, word32 r22, word32 r23, ptr32 & r10Out, ptr32 & r19Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r10 r19 r22 r23 r9
// Trashed: C r10 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r8 r9
// Preserved: r1
fn0000B2CC_entry:
l0000B2CC:
	word32 r4_6 = r4 + r3 * 2<32>
l0000B2D0_thunk_fn0000B2D4:
	word32 r10_15
	word32 r19_18
	word32 r22_20
	word32 r23_21
	word32 r9_27
	word32 r4_33
	word32 r6_34
	word32 r8_35
	word32 r18_36
	word32 r21_37
	fn0000B2D4(r0, r3, r4_6, r5, r6, r7, r19, r22, r23, out r4_33, out r6_34, out r8_35, out r9_27, out r10_15, out r18_36, out r19_18, out r21_37, out r22_20, out r23_21)
	r10Out = r10_15
	r19Out = r19_18
	r22Out = r22_20
	r23Out = r23_21
	return r9_27
fn0000B2CC_exit:


word32 fn0000B2D4(word32 r0, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r19, word32 r22, word32 r23, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r18Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B298
//      fn0000B2CC
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r10 r18 r19 r21 r22 r23 r3 r4 r6 r8 r9
// Trashed: C r1 r10 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r8 r9
// Preserved:
fn0000B2D4_entry:
	word32 dwArg1C
	word32 dwArg20
	word32 dwArg24
	word32 dwArg28
l0000B2D4:
	r4 = r4 + 0xFFFFFFFE<32>
	word32 r8_7 = CONVERT(Mem5[r4:word16], word16, word32)
	word32 r18_9 = cond(r8_7 -u r3)
	branch r8_7 -u r3 < 0<32> l0000B2E4_ds_t
l0000B2E4_ds_t:
l0000B30C:
	r6 = r6 + 0xFFFFFFFF<32>
	branch Test(NE,r6) l0000B314_ds_t
l0000B314_ds_t:
	Mem15[r4:word16] = SLICE(r0, word16, 0)
l0000B314_ds_f:
	Mem17[r4:word16] = SLICE(r0, word16, 0)
l0000B318:
l0000B2E4_ds_f:
	word32 r9_18 = r8_7 - r3
l0000B2E8:
	r6 = r6 + 0xFFFFFFFF<32>
	branch Test(NE,r6) l0000B2F0_ds_t
l0000B2F0_ds_t:
	Mem21[r4:word16] = SLICE(r9_18, word16, 0)
l0000B2F0_ds_f:
	Mem23[r4:word16] = SLICE(r9_18, word16, 0)
l0000B2F4:
l0000B1D4:
	word32 r10_34
	word32 r9_38
	fn00008C64(r3, r5, 0<32>, r7, r8_7, out r9_38, out r10_34)
	Mem44[r19 + 5808<i32>:word32] = r0
l0000B1E4:
l0000B1E8:
	word32 r3_52 = r22 * 0xC<32> + 0xFFFF9DB4<32>
	word32 r6_54 = CONVERT(Mem44[r3_52 + 2<i32>:word16], word16, word32)
	word32 r5_56 = CONVERT(Mem44[r3_52:word16], word16, word32)
	word32 r4_58 = CONVERT(Mem44[r3_52 + 4<i32>:word16], word16, word32)
	word32 r3_60 = CONVERT(Mem44[r3_52 + 6<i32>:word16], word16, word32)
	Mem61[r19 + 132<i32>:word32] = r22
	Mem62[r19 + 128<i32>:word32] = r6_54
	Mem63[r19 + 140<i32>:word32] = r5_56
	Mem64[r19 + 144<i32>:word32] = r4_58
	Mem65[r19 + 124<i32>:word32] = r3_60
l0000B220:
	Mem69[r19 + 136<i32>:word32] = r23
	r4Out = r4_58
	r6Out = r6_54
	r8Out = r8_7
	r9Out = r9_38
	r10Out = r10_34
	r18Out = r18_9
	r19Out = dwArg1C
	r21Out = dwArg20
	r22Out = dwArg24
	r23Out = dwArg28
	return 0<32>
fn0000B2D4_exit:


word32 fn0000B324(word32 r5, ptr32 & r4Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00005538
//      fn0000B514
//      fn0000BA7C
// MayUse:  r5:[0..31]
// LiveOut: r0 r4 r8
// Trashed: C r0 r10 r11 r12 r15 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r19 r21
fn0000B324_entry:
	word32 r0
	word32 r4
	word32 r8
l0000B324:
	branch Test(EQ,r5) l0000B504
l0000B328:
	branch Test(EQ,Mem0[r5 + 32<i32>:word32]) l0000B504
l0000B330:
	word32 r7_110 = Mem0[r5 + 36<i32>:word32]
	branch Test(EQ,r7_110) l0000B504
l0000B338:
	r4 = Mem0[r5 + 28<i32>:word32]
	branch Test(EQ,r4) l0000B504
l0000B504:
	r4Out = r4
	r8Out = r8
	return r0
l0000B340:
	branch Test(EQ,r5 ^ Mem0[r4:word32]) l0000B34C_ds_t
l0000B34C_ds_t:
l0000B358:
	word32 r8_213
	word32 r6_19 = Mem18[r4 + 4<i32>:word32]
	word32 r21_101 = r6_19 ^ 0x71<32>
	branch Test(GE,(-(r6_19 ^ 0x29A<32>) | r6_19 ^ 0x29A<32>) & ((-(r6_19 ^ 0x71<32>) | r6_19 ^ 0x71<32>) & ((-(r6_19 ^ 0x67<32>) | r6_19 ^ 0x67<32>) & ((-(r6_19 ^ 0x5B<32>) | r6_19 ^ 0x5B<32>) & ((-(r6_19 ^ 0x45<32>) | r6_19 ^ 0x45<32>) & (-(r6_19 ^ 0x2A<32>) | r6_19 ^ 0x2A<32>)))))) l0000B3CC_ds_t
l0000B3CC_ds_t:
l0000B3CC_ds_f:
l0000B3D0:
	word32 r6_45 = r6_19 + 0xFFFFFFC7<32> & 0xFFFFFFEF<32>
	word32 r6_47 = -r6_45 | r6_45
	r8_213 = r6_47 >>u 31<i32>
	branch Test(NE,r6_47 >>u 31<i32>) l0000B460_ds_t
l0000B460_ds_t:
l0000B460_ds_f:
l0000B464:
	word32 r5_111
	word32 r19_100 = r5
	branch Test(EQ,Mem18[r4 + 8<i32>:word32]) l0000B470_ds_t
l0000B470_ds_t:
	r5_111 = Mem18[r5 + 40<i32>:word32]
l0000B470_ds_f:
	word32 r5_88 = Mem18[r5 + 40<i32>:word32]
l0000B474:
	word32 r6_98
	word32 r8_102
	word32 r10_103
	word32 r9_104
	word32 r11_105
	word32 r12_106
	word32 r0_107
	call 0x0000B474<p32> + r7_110 (retsize: 0;)
		uses: r0:r0_107,r10:r10_103,r11:r11_105,r12:r12_106,r15:0x0000B474<p32>,r19:r5,r21:r6_19 ^ 0x71<32>,r4:r4_109,r5:r5_88,r6:r6_98,r7:r7_110,r8:r8_102,r9:r9_104
		defs: r0:r0_107,r10:r10_103,r11:r11_105,r12:r12_106,r19:r19_100,r21:r21_101,r6:r6_98,r8:r8_102,r9:r9_104
	r4 = Mem18[r19_100 + 28<i32>:word32]
	r7_110 = Mem18[r19_100 + 36<i32>:word32]
	r5_111 = Mem18[r19_100 + 40<i32>:word32]
l0000B488:
	branch Test(EQ,Mem18[r4 + 68<i32>:word32]) l0000B4A4
l0000B490:
	word32 r6_126
	word32 r8_130
	word32 r10_131
	word32 r9_132
	word32 r11_133
	word32 r12_134
	word32 r0_135
	call 0x0000B490<p32> + r7_110 (retsize: 0;)
		uses: r0:r0_135,r10:r10_131,r11:r11_133,r12:r12_134,r15:0x0000B490<p32>,r19:r19_118,r21:r21_119,r4:r4_137,r5:r5_117,r6:r6_126,r7:r7_138,r8:r8_130,r9:r9_132
		defs: r0:r0_135,r10:r10_131,r11:r11_133,r12:r12_134,r19:r19_128,r21:r21_129,r6:r6_126,r8:r8_130,r9:r9_132
	r4 = Mem18[r19_100 + 28<i32>:word32]
	r7_110 = Mem18[r19_100 + 36<i32>:word32]
	r5_111 = Mem18[r19_100 + 40<i32>:word32]
l0000B4A4:
	branch Test(EQ,Mem18[r4 + 64<i32>:word32]) l0000B4C0
l0000B4AC:
	word32 r6_154
	word32 r8_158
	word32 r10_159
	word32 r9_160
	word32 r11_161
	word32 r12_162
	word32 r0_163
	call 0x0000B4AC<p32> + r7_110 (retsize: 0;)
		uses: r0:r0_163,r10:r10_159,r11:r11_161,r12:r12_162,r15:0x0000B4AC<p32>,r19:r19_146,r21:r21_147,r4:r4_165,r5:r5_145,r6:r6_154,r7:r7_166,r8:r8_158,r9:r9_160
		defs: r0:r0_163,r10:r10_159,r11:r11_161,r12:r12_162,r19:r19_156,r21:r21_157,r6:r6_154,r8:r8_158,r9:r9_160
	r4 = Mem18[r19_100 + 28<i32>:word32]
	r7_110 = Mem18[r19_100 + 36<i32>:word32]
	r5_111 = Mem18[r19_100 + 40<i32>:word32]
l0000B4C0:
	branch Test(EQ,Mem18[r4 + 56<i32>:word32]) l0000B4DC
l0000B4C8:
	word32 r6_182
	word32 r8_186
	word32 r10_187
	word32 r9_188
	word32 r11_189
	word32 r12_190
	word32 r0_191
	call 0x0000B4C8<p32> + r7_110 (retsize: 0;)
		uses: r0:r0_191,r10:r10_187,r11:r11_189,r12:r12_190,r15:0x0000B4C8<p32>,r19:r19_174,r21:r21_175,r4:r4_195,r5:r5_173,r6:r6_182,r7:r7_193,r8:r8_186,r9:r9_188
		defs: r0:r0_191,r10:r10_187,r11:r11_189,r12:r12_190,r19:r19_184,r21:r21_185,r6:r6_182,r8:r8_186,r9:r9_188
	r7_110 = Mem18[r19_100 + 36<i32>:word32]
	r5_111 = Mem18[r19_100 + 40<i32>:word32]
	r4 = Mem18[r19_100 + 28<i32>:word32]
l0000B4DC:
	word32 r7_207
	word32 r19_211
	word32 r21_212
	word32 r10_214
	word32 r9_215
	word32 r11_216
	word32 r12_217
	call 0x0000B4DC<p32> + r7_110 (retsize: 0;)
		uses: r0:r0_218,r10:r10_214,r11:r11_216,r12:r12_217,r15:0x0000B4DC<p32>,r19:r19_201,r21:r21_202,r4:r4_208,r5:r5_200,r6:r4_197,r7:r7_207,r8:r8_213,r9:r9_215
		defs: r0:r0_218,r10:r10_214,r11:r11_216,r12:r12_217,r19:r19_211,r21:r21_212,r4:r4_208,r7:r7_207,r8:r8_213,r9:r9_215
	Mem220[r19_211 + 28<i32>:word32] = r0
	branch Test(EQ,r21_212) l0000B4EC_ds_t
l0000B4EC_ds_t:
l0000B50C:
l0000B4EC_ds_f:
l0000B4F0:
l0000B4F4:
	r4Out = r4
	r8Out = r8_213
	return r0
l0000B34C_ds_f:
l0000B350:
	r4Out = r4
	r8Out = r8
	return r0
fn0000B324_exit:


word32 fn0000B514(word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 dwArg1C, word32 dwArg20, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003990
// MayUse:  r10:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +001C:[0..31] Stack +0020:[0..31]
// LiveOut: r19 r3 r6 r7
// Trashed: r0 r1 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved: C
fn0000B514_entry:
l0000B514:
	branch Test(EQ,dwArg1C) l0000B544_ds_t
l0000B544_ds_t:
l0000B544_thunk_fn0000B9E0:
	word32 r19_28
	word32 r21_114
	word32 r22_115
	word32 r23_116
	word32 r24_117
	word32 r26_118
	word32 r3_37 = fn0000B9E0(out r19_28, out r21_114, out r22_115, out r23_116, out r24_117, out r26_118)
	r6Out = r6
	r7Out = r7
	r19Out = r19_28
	return r3_37
l0000B544_ds_f:
l0000B544_thunk_fn0000B548:
	word32 r19_46
	word32 r3_55
	word32 r6_63
	word32 r7_64
	word32 r21_119
	word32 r22_120
	word32 r23_121
	word32 r24_122
	word32 r26_123
	fn0000B548(dwArg1C, r5, r6, r7, r8, r9, r10, dwArg20, out r3_55, out r6_63, out r7_64, out r19_46, out r21_119, out r22_120, out r23_121, out r24_122, out r26_123)
	r6Out = r6_63
	r7Out = r7_64
	r19Out = r19_46
	return r3_55
fn0000B514_exit:


word32 fn0000B51C(word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 dwArg60, ptr32 & r3Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r26Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r10:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +0060:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r26 r3
// Trashed: r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved: C r1
fn0000B51C_entry:
	word32 r0
l0000B51C:
	branch Test(EQ,r3) l0000B544_ds_t
l0000B544_ds_t:
l0000B544_thunk_fn0000B9E0:
	word32 r19_26
	word32 r21_27
	word32 r22_28
	word32 r23_29
	word32 r24_30
	word32 r26_32
	r3Out = fn0000B9E0(out r19_26, out r21_27, out r22_28, out r23_29, out r24_30, out r26_32)
	r19Out = r19_26
	r21Out = r21_27
	r22Out = r22_28
	r23Out = r23_29
	r24Out = r24_30
	r26Out = r26_32
	return r0
l0000B544_ds_f:
l0000B544_thunk_fn0000B548:
	word32 r19_44
	word32 r21_45
	word32 r22_46
	word32 r23_47
	word32 r24_48
	word32 r26_50
	word32 r3_53
	word32 r6_115
	word32 r7_116
	word32 r0_56 = fn0000B548(r3, r5, r6, r7, r8, r9, r10, dwArg60, out r3_53, out r6_115, out r7_116, out r19_44, out r21_45, out r22_46, out r23_47, out r24_48, out r26_50)
	r3Out = r3_53
	r19Out = r19_44
	r21Out = r21_45
	r22Out = r22_46
	r23Out = r23_47
	r24Out = r24_48
	r26Out = r26_50
	return r0_56
fn0000B51C_exit:


word32 fn0000B548(word32 r3, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 dwArg60, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r26Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B514
//      fn0000B51C
// MayUse:  r10:[0..31] r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +0060:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r26 r3 r6 r7
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000B548_entry:
	word32 r0
l0000B548:
	word32 r3_15 = -(dwArg60 ^ 0x38<32>) | dwArg60 ^ 0x38<32> | -(CONVERT(Mem0[r3:byte], byte, word32) ^ 0x31<32>)
	word32 r4_172 = r3_15 >>u 31<i32>
	branch Test(NE,r3_15 >>u 31<i32>) l0000B9E0
l0000B5EC_thunk_fn0000B9E0:
	word32 r19_50
	word32 r21_51
	word32 r22_52
	word32 r23_53
	word32 r24_54
	word32 r26_56
	r3Out = fn0000B9E0(out r19_50, out r21_51, out r22_52, out r23_53, out r24_54, out r26_56)
	r6Out = r6
	r7Out = r7
	r19Out = r19_50
	r21Out = r21_51
	r22Out = r22_52
	r23Out = r23_53
	r24Out = r24_54
	r26Out = r26_56
	return r0
l0000B5F0:
	branch Test(EQ,r5) l0000B5F4_ds_t
l0000B5F4_ds_t:
l0000B5F4_ds_f:
	word32 r23_157 = r6
l0000B5F8:
	word32 r3_199 = Mem0[r5 + 32<i32>:word32]
	Mem64[r5 + 24<i32>:word32] = r3_15 >>u 31<i32>
	branch Test(EQ,r3_199) l0000B608_ds_t
l0000B608_ds_t:
l0000B9C8:
	Mem70[r5 + 40<i32>:word32] = r3_199
	Mem71[r5 + 32<i32>:word32] = 0x4C58<32>
	r3_199 = 0x4C58<32>
l0000B608_ds_f:
l0000B60C:
	branch Test(EQ,Mem75[r5 + 36<i32>:word32]) l0000B9B8
l0000B9B8:
	Mem78[r5 + 36<i32>:word32] = 0x4C80<32>
l0000B614:
	branch Test(EQ,~r6) l0000B990
l0000B990:
	branch Test(GE,r8) l0000B994_ds_t
l0000B994_ds_t:
	r23_157 = 6<32>
l0000B994_ds_f:
	r23_157 = 6<32>
l0000B61C:
	branch Test(LT,r8) l0000B998
l0000B998:
	r8 = -r8
	r4_172 = 1<32>
l0000B620:
	branch r8 > 0xF<32> l0000B62C_ds_t
l0000B62C_ds_t:
l0000B9A8:
	r4_172 = 1<32>
	r8 = r8 + 0xFFFFFFF0<32>
l0000B62C_ds_f:
l0000B630:
	r6 = r9 + 0xFFFFFFFF<32>
	branch 8<32> -u (r9 + 0xFFFFFFFF<32>) < 0<32> l0000B640_ds_t
l0000B640_ds_t:
l0000B640_ds_f:
l0000B644:
	r6 = r8 + 0xFFFFFFF8<32>
	branch 7<32> -u r6 < 0<32> l0000B650_ds_t
l0000B650_ds_t:
l0000B650_ds_f:
l0000B654:
	r7 = -(r7 ^ 8<32>) | r7 ^ 8<32>
	branch Test(NE,r7 >>u 31<i32>) l0000B6E4_ds_t
l0000B6E4_ds_t:
l0000B6E4_ds_f:
l0000B6E8:
	branch 9<32> -u r23_157 >= 0<32> l0000B6F0_ds_t
l0000B6F0_ds_t:
l0000B6FC:
	branch 4<32> -u r10 < 0<32> l0000B704_ds_t
l0000B704_ds_t:
l0000B704_ds_f:
	word32 r5_169 = r8 ^ 8<32>
l0000B708:
	r6 = -r5_169 | r5_169
	branch Test(LT,r6) l0000B718
l0000B714:
	branch Test(NE,r4_172) l0000B6F4
l0000B718:
	branch Test(NE,r5_169) l0000B720
l0000B71C:
l0000B720:
	word32 r3_225
	word32 r21_228
	word32 r6_229
	word32 r9_231
	word32 r25_232
	word32 r10_233
	word32 r18_236
	word32 r28_237
	word32 r24_238
	word32 r7_239
	word32 r0_244
	word32 r11_653
	word32 r12_654
	call 0x0000B728<p32> + r3_199 (retsize: 0;)
		uses: r0:r0_244,r10:r10,r11:r11_653,r12:r12_654,r15:0x0000B728<p32>,r18:r18_236,r3:r3_199,r5:Mem188[r5 + 40<i32>:word32],r6:1<32>,r7:0x16C4<32>,r8:r8_109,r9:r9,Stack +0060:dwArg60
		defs: r0:r0_244,r10:r10_233,r11:r11_653,r12:r12_654,r18:r18_236,r21:r21_228,r24:r24_238,r25:r25_232,r28:r28_237,r3:r3_225,r6:r6_229,r7:r7_239,r9:r9_231
	branch Test(EQ,r3_225) l0000B734_ds_t
l0000B734_ds_t:
l0000BA10:
l0000BA10_thunk_fn0000B9E0:
	word32 r19_250
	word32 r21_251
	word32 r22_252
	word32 r23_253
	word32 r24_254
	word32 r26_256
	r3Out = fn0000B9E0(out r19_250, out r21_251, out r22_252, out r23_253, out r24_254, out r26_256)
	r6Out = r6_229
	r7Out = r7_239
	r19Out = r19_250
	r21Out = r21_251
	r22Out = r22_252
	r23Out = r23_253
	r24Out = r24_254
	r26Out = r26_256
	return r0_244
l0000B734_ds_f:
l0000B738:
	word32 r27_267
	Mem261[r21_228 + 28<i32>:word32] = r3_225
	word32 r18_265 = r24_238 & 0x1F<32>
	branch Test(EQ,r24_238 & 0x1F<32>) l0000B754_ds_t
l0000B754_ds_t:
	r27_267 = 1<32>
l0000B754_ds_f:
	word32 r27_268 = 1<32>
l0000B758:
	r18_265 = r18_265 + 0xFFFFFFFF<32>
	branch Test(NE,r18_265) l0000B760_ds_t
l0000B760_ds_t:
	r27_268 = r27_268 * 2<32>
l0000B760_ds_f:
	r27_267 = r27_268 * 2<32>
l0000B764:
	word32 r3_287
	Mem278[r3_225 + 4<i32>:word32] = 0x2A<32>
	word32 r8_280 = r27_267 + 0xFFFFFFFF<32>
	word32 r18_283 = r25_232 + 7<32> & 0x1F<32>
	branch Test(EQ,r18_283) l0000B778_ds_t
l0000B778_ds_t:
	r3_287 = 1<32>
l0000B778_ds_f:
	word32 r3_288 = 1<32>
l0000B77C:
	r18_283 = r18_283 + 0xFFFFFFFF<32>
	branch Test(NE,r18_283) l0000B784_ds_t
l0000B784_ds_t:
	r3_288 = r3_288 * 2<32>
l0000B784_ds_f:
	r3_287 = r3_288 * 2<32>
l0000B788:
	word32 r4_439
	Mem300[r3_225 + 52<i32>:word32] = r8_280
	Mem309[r3_225 + 80<i32>:word32] = r25_232 + 7<32>
	word32 r7_295 = r3_287 + 0xFFFFFFFF<32>
	Mem310[r3_225 + 84<i32>:word32] = r7_295
	Mem315[r3_225:word32] = r21_228
	Mem320[r3_225 + 24<i32>:word32] = r28_237
	Mem325[r3_225 + 28<i32>:word32] = r0_244
	Mem330[r3_225 + 48<i32>:word32] = r24_238
	Mem333[r3_225 + 44<i32>:word32] = r27_267
	Mem335[r3_225 + 76<i32>:word32] = r3_287
	word32 r19_339
	word32 r21_340
	word32 r3_341 = fn00007F88(r25_232 + 7<32>, 3<32>, r7_295, r18_283, r3_225, out r19_339, out r21_340)
	word32 r5_343 = Mem335[r21_340 + 40<i32>:word32]
	word32 r4_344 = Mem335[r21_340 + 32<i32>:word32]
	Mem348[r19_339 + 88<i32>:word32] = r3_341
	word32 r3_358
	word32 r21_361
	word32 r9_364
	word32 r10_366
	word32 r8_368
	word32 r19_374
	call 0x0000B7D0<p32> + r4_344 (retsize: 0;)
		uses: r0:r0_433,r10:r10_233,r11:r11_659,r12:r12_660,r15:0x0000B7D0<p32>,r18:r18_437,r3:r3_341,r4:r4_344,r5:r5_343,r6:r27_279,r7:2<32>,r8:r8_280,r9:r9_231
		defs: r10:r10_366,r19:r19_374,r21:r21_361,r3:r3_358,r8:r8_368,r9:r9_364
	word32 r5_379 = Mem348[r21_361 + 40<i32>:word32]
	word32 r4_380 = Mem348[r21_361 + 32<i32>:word32]
	word32 r6_381 = Mem348[r19_374 + 44<i32>:word32]
	Mem384[r19_374 + 56<i32>:word32] = r3_358
	word32 r3_386
	word32 r21_389
	word32 r9_392
	word32 r10_394
	word32 r8_396
	word32 r19_402
	call 0x0000B7E8<p32> + r4_380 (retsize: 0;)
		uses: r0:r0_433,r10:r10_366,r11:r11_659,r12:r12_660,r15:0x0000B7E8<p32>,r18:r18_437,r3:r3_358,r4:r4_380,r5:r5_379,r6:r6_381,r7:2<32>,r8:r8_368,r9:r9_364
		defs: r10:r10_394,r19:r19_402,r21:r21_389,r3:r3_386,r8:r8_396,r9:r9_392
	word32 r5_407 = Mem384[r21_389 + 40<i32>:word32]
	word32 r4_408 = Mem384[r21_389 + 32<i32>:word32]
	word32 r6_409 = Mem384[r19_402 + 76<i32>:word32]
	Mem412[r19_402 + 64<i32>:word32] = r3_386
	word32 r3_414
	word32 r21_417
	word32 r25_421
	word32 r10_422
	word32 r19_430
	word32 r26_431
	word32 r0_433
	word32 r11_659
	word32 r12_660
	call 0x0000B800<p32> + r4_408 (retsize: 0;)
		uses: r0:r0_433,r10:r10_394,r11:r11_659,r12:r12_660,r15:0x0000B800<p32>,r18:r18_437,r3:r3_386,r4:r4_408,r5:r5_407,r6:r6_409,r7:2<32>,r8:r8_396,r9:r9_392
		defs: r0:r0_433,r10:r10_422,r11:r11_659,r12:r12_660,r19:r19_430,r21:r21_417,r25:r25_421,r26:r26_431,r3:r3_414
	word32 r5_436 = Mem412[r21_417 + 40<i32>:word32]
	word32 r18_437 = r25_421 + 6<32> & 0x1F<32>
	branch Test(EQ,r18_437) l0000B81C_ds_t
l0000B81C_ds_t:
	r4_439 = r26_431
l0000B81C_ds_f:
	word32 r4_440 = r26_431
l0000B820:
	r18_437 = r18_437 + 0xFFFFFFFF<32>
	branch Test(NE,r18_437) l0000B828_ds_t
l0000B828_ds_t:
	r4_440 = r4_440 * 2<32>
l0000B828_ds_f:
	r4_439 = r4_440 * 2<32>
l0000B82C:
	word32 r8_450 = Mem412[r21_417 + 32<i32>:word32]
	Mem455[r19_430 + 5788<i32>:word32] = r4_439
	Mem459[r19_430 + 68<i32>:word32] = r3_414
	Mem463[r19_430 + 5824<i32>:word32] = r0_433
	word32 r11_661
	word32 r12_662
	word32 r3_473
	word32 r21_476
	word32 r23_478
	word32 r22_482
	word32 r18_484
	word32 r19_489
	word32 r0_492
	call 0x0000B840<p32> + r8_450 (retsize: 0;)
		uses: r0:r0_492,r10:r10_422,r11:r11_661,r12:r12_662,r15:0x0000B840<p32>,r18:r18_484,r3:r3_414,r5:r5_436,r6:r4_451,r7:4<32>,r8:r8_450,r9:r25_421 + 6<32>
		defs: r0:r0_492,r11:r11_661,r12:r12_662,r18:r18_484,r19:r19_489,r21:r21_476,r22:r22_482,r23:r23_478,r3:r3_473
	word32 r5_494 = Mem463[r19_489 + 5788<i32>:word32]
	word32 r6_495 = Mem463[r19_489 + 56<i32>:word32]
	Mem496[r19_489 + 8<i32>:word32] = r3_473
	branch Test(EQ,r6_495) l0000B860_ds_t
l0000B860_ds_t:
	Mem499[r19_489 + 12<i32>:word32] = r5_494 * 4<32>
l0000B860_ds_f:
	Mem500[r19_489 + 12<i32>:word32] = r5_494 * 4<32>
l0000B864:
	branch Test(EQ,Mem500[r19_489 + 64<i32>:word32]) l0000B9E8
l0000B86C:
	word32 r6_502 = Mem500[r19_489 + 68<i32>:word32]
	word32 r7_503 = -r6_502
	branch Test(GE,r6_502 | r7_503) l0000B87C_ds_t
l0000B87C_ds_t:
l0000B87C_ds_f:
	word32 r6_506 = -r3_473
l0000B880:
	branch Test(GE,r3_473 | r6_506) l0000B888_ds_t
l0000B888_ds_t:
l0000B9E8:
	word32 r3_511 = Mem510[0x0000B5C0<p32>:word32]
	Mem513[r19_489 + 4<i32>:word32] = 0x29A<32>
	Mem516[r21_476 + 24<i32>:word32] = r3_511
	word32 r8_740
	word32 r4_739
	word32 r0_522 = fn0000B324(r21_476, out r4_739, out r8_740)
l0000BA08_thunk_fn0000B9E0:
	word32 r19_535
	word32 r21_536
	word32 r22_537
	word32 r23_538
	word32 r24_539
	word32 r26_541
	r3Out = fn0000B9E0(out r19_535, out r21_536, out r22_537, out r23_538, out r24_539, out r26_541)
	r6Out = r6_528
	r7Out = r7_520
	r19Out = r19_535
	r21Out = r21_536
	r22Out = r22_537
	r23Out = r23_538
	r24Out = r24_539
	r26Out = r26_541
	return r0_522
l0000B888_ds_f:
l0000B88C:
	Mem550[r19_489 + 5784<i32>:word32] = r3_473 + r5_494 * 3<32>
	Mem552[r19_489 + 136<i32>:word32] = r22_482
	word32 r6_547 = r3_473 + (r5_494 & 0xFFFFFFFE<32>)
	Mem553[r19_489 + 5796<i32>:word32] = r6_547
	Mem554[r19_489 + 132<i32>:word32] = r23_478
	Mem557[r19_489 + 36<i32>:byte] = 8<8>
	word32 r21_736
	word32 r4_734
	word32 r3_733
	word32 r8_735
	fn00008008(r5, out r3_733, out r4_734, out r8_735, out r21_736)
	branch Test(NE,8<32>) l0000B8BC_ds_t
l0000B8BC_ds_t:
l0000B8BC_thunk_fn0000B9E0:
	word32 r19_561
	word32 r21_562
	word32 r22_563
	word32 r23_564
	word32 r24_565
	word32 r26_567
	r3Out = fn0000B9E0(out r19_561, out r21_562, out r22_563, out r23_564, out r24_565, out r26_567)
	r6Out = r6_547
	r7Out = r7_503
	r19Out = r19_561
	r21Out = r21_562
	r22Out = r22_563
	r23Out = r23_564
	r24Out = r24_565
	r26Out = r26_567
	return r0_492
l0000B8BC_ds_f:
l0000B8C0:
	word32 r19_572 = Mem557[r21_476 + 28<i32>:word32]
	word32 r3_574 = Mem557[r19_572 + 76<i32>:word32]
	word32 r8_576 = Mem557[r19_572 + 68<i32>:word32]
	Mem582[r19_572 + 60<i32>:word32] = Mem557[r19_572 + 44<i32>:word32] * 2<32>
	Mem585[(r3_574 + 0xFFFFFFFF<32>) * 2<32> + r8_576:word16] = 8<16>
	word32 r3_578 = (r3_574 + 0xFFFFFFFF<32>) * 2<32>
	word32 r9_737
	word32 r10_738
	fn00008C64(r3_578, r8_576, 8<32>, r3_578, r8_576, out r9_737, out r10_738)
	word32 r4_592 = Mem585[r19_572 + 132<i32>:word32]
	Mem594[r19_572 + 108<i32>:word32] = 8<32>
	word32 r3_599 = r4_592 * 0xC<32> + 0xFFFF9DB4<32>
	word32 r7_601 = CONVERT(Mem594[r3_599 + 2<i32>:word16], word16, word32)
	word32 r6_603 = CONVERT(Mem594[r3_599:word16], word16, word32)
	word32 r4_605 = CONVERT(Mem594[r3_599 + 4<i32>:word16], word16, word32)
	word32 r3_607 = CONVERT(Mem594[r3_599 + 6<i32>:word16], word16, word32)
	Mem608[r19_572 + 128<i32>:word32] = r7_601
	Mem609[r19_572 + 140<i32>:word32] = r6_603
	Mem610[r19_572 + 144<i32>:word32] = r4_605
	Mem611[r19_572 + 124<i32>:word32] = r3_607
	Mem612[r19_572 + 92<i32>:word32] = 8<32>
	Mem613[r19_572 + 116<i32>:word32] = 8<32>
	Mem614[r19_572 + 5812<i32>:word32] = 8<32>
	Mem615[r19_572 + 120<i32>:word32] = 2<32>
	Mem616[r19_572 + 96<i32>:word32] = 2<32>
	Mem617[r19_572 + 104<i32>:word32] = 8<32>
	Mem618[r19_572 + 72<i32>:word32] = 8<32>
l0000B958_thunk_fn0000B9E0:
	word32 r19_621
	word32 r21_622
	word32 r22_623
	word32 r23_624
	word32 r24_625
	word32 r26_627
	r3Out = fn0000B9E0(out r19_621, out r21_622, out r22_623, out r23_624, out r24_625, out r26_627)
	r6Out = r6_603
	r7Out = r7_601
	r19Out = r19_621
	r21Out = r21_622
	r22Out = r22_623
	r23Out = r23_624
	r24Out = r24_625
	r26Out = r26_627
	return r0_492
l0000B6F0_ds_f:
l0000B6F4:
l0000B6F4_thunk_fn0000B9E0:
	word32 r19_635
	word32 r21_636
	word32 r22_637
	word32 r23_638
	word32 r24_639
	word32 r26_641
	r3Out = fn0000B9E0(out r19_635, out r21_636, out r22_637, out r23_638, out r24_639, out r26_641)
	r6Out = r6
	r7Out = r7
	r19Out = r19_635
	r21Out = r21_636
	r22Out = r22_637
	r23Out = r23_638
	r24Out = r24_639
	r26Out = r26_641
	return r0
fn0000B548_exit:


word32 fn0000B9E0(ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r26Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B514
//      fn0000B51C
// MayUse: 
// LiveOut: r19 r21 r22 r23 r24 r26 r3
// Trashed: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r3
// Preserved:
fn0000B9E0_entry:
	word32 dwArg1C
	word32 dwArg20
	word32 dwArg24
	word32 dwArg28
	word32 dwArg2C
	word32 dwArg34
l0000B9E0:
l0000B95C:
l0000B960:
	r19Out = dwArg1C
	r21Out = dwArg20
	r22Out = dwArg24
	r23Out = dwArg28
	r24Out = dwArg2C
	r26Out = dwArg34
	return 0xFFFFFFFA<32>
fn0000B9E0_exit:


word32 fn0000BA7C(word32 r4, word32 r5, word32 r6, word32 r8, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r0 r19 r22 r3 r4 r8
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000BA7C_entry:
	word32 r0
l0000BA7C:
	word32 r8_105
	word32 r3_296
	word32 r22_119
	word32 r4_104 = r4 >>u 16<i32>
	branch Test(NE,r4 >>u 16<i32>) l0000BAC0_ds_t
l0000BAC0_ds_t:
	r8_105 = r8 ^ 0x38<32>
l0000BAC0_ds_f:
l0000BAC4:
	r8_105 = -(r8 ^ 0x38<32>) | r8 ^ 0x38<32>
	r4_104 = r8_105 >>u 31<i32>
	branch Test(NE,r8_105 >>u 31<i32>) l0000BE50
l0000BE50:
	r22_119 = 0xFFFFFFFA<32>
l0000BB50:
	branch Test(EQ,r5) l0000BB54_ds_t
l0000BB54_ds_t:
l0000BB54_ds_f:
l0000BB58:
	word32 r3_63 = Mem0[r5 + 32<i32>:word32]
	Mem64[r5 + 24<i32>:word32] = r8_105 >>u 31<i32>
	branch Test(EQ,r3_63) l0000BB64_ds_t
l0000BB64_ds_t:
l0000BE38:
	Mem68[r5 + 40<i32>:word32] = r3_63
	Mem69[r5 + 32<i32>:word32] = 0x4C58<32>
	r3_63 = 0x4C58<32>
l0000BB64_ds_f:
l0000BB68:
	branch Test(EQ,Mem73[r5 + 36<i32>:word32]) l0000BE28
l0000BE28:
	Mem76[r5 + 36<i32>:word32] = 0x4C80<32>
l0000BB70:
	branch Test(EQ,~r6) l0000BB78_ds_t
l0000BB78_ds_t:
l0000BE20:
l0000BB78_ds_f:
	r4_104 = 9<32>
l0000BB7C:
	branch 9<32> -u r6 < 0<32> l0000BE80
l0000BE80:
	r22_119 = 0xFFFFFFFE<32>
l0000BB84:
	word32 r3_106
	word32 r21_108
	word32 r18_111
	word32 r9_115
	word32 r12_396
	word32 r11_395
	word32 r10_394
	call 0x0000BB8C<p32> + r3_63 (retsize: 0;)
		uses: r0:r0_116,r10:r10_394,r11:r11_395,r12:r12_396,r15:0x0000BB8C<p32>,r18:r18_111,r4:9<32>,r5:Mem88[r5 + 40<i32>:word32],r6:1<32>,r7:0x16C4<32>,r8:r8_25,r9:r9_115
		defs: r0:r0_116,r10:r10_394,r11:r11_395,r12:r12_396,r18:r18_111,r21:r21_108,r3:r3_106,r4:r4_104,r8:r8_105,r9:r9_115
	branch Test(EQ,r3_106) l0000BB98_ds_t
l0000BB98_ds_t:
l0000BE88:
	r22_119 = 0xFFFFFFFC<32>
l0000BB98_ds_f:
l0000BB9C:
	Mem121[r21_108 + 28<i32>:word32] = r3_106
	word32 r5_124 = Mem121[r21_108 + 40<i32>:word32]
	Mem125[r3_106 + 4<i32>:word32] = 0x2A<32>
	Mem127[r3_106 + 24<i32>:word32] = 1<32>
	Mem130[r3_106 + 88<i32>:word32] = 5<32>
	word32 r3_131 = Mem130[r21_108 + 32<i32>:word32]
	Mem134[r3_106 + 48<i32>:word32] = 0xF<32>
	Mem135[r3_106 + 52<i32>:word32] = 0x7FFF<32>
	Mem136[r3_106 + 80<i32>:word32] = 0xF<32>
	Mem137[r3_106 + 84<i32>:word32] = 0x7FFF<32>
	Mem139[r3_106 + 44<i32>:word32] = 0xFFFF8000<32>
	Mem140[r3_106 + 76<i32>:word32] = 0xFFFF8000<32>
	Mem141[r3_106:word32] = r21_108
	Mem143[r3_106 + 28<i32>:word32] = r0
	word32 r8_146
	word32 r3_147
	word32 r21_149
	word32 r19_155
	call 0x0000BBF4<p32> + r3_131 (retsize: 0;)
		uses: r0:r0_223,r10:r10_406,r11:r11_407,r12:r12_408,r15:0x0000BBF4<p32>,r18:r18_218,r3:r3_131,r4:0xFFFF8000<32>,r5:r5_124,r6:0xFFFF8000<32>,r7:2<32>,r8:0x7FFF<32>,r9:0xF<32>
		defs: r19:r19_155,r21:r21_149,r3:r3_147,r8:r8_146
	word32 r5_159 = Mem143[r21_149 + 40<i32>:word32]
	word32 r4_160 = Mem143[r21_149 + 32<i32>:word32]
	word32 r6_161 = Mem143[r19_155 + 44<i32>:word32]
	Mem164[r19_155 + 56<i32>:word32] = r3_147
	word32 r8_167
	word32 r3_168
	word32 r21_170
	word32 r19_176
	call 0x0000BC0C<p32> + r4_160 (retsize: 0;)
		uses: r0:r0_223,r10:r10_406,r11:r11_407,r12:r12_408,r15:0x0000BC0C<p32>,r18:r18_218,r4:r4_160,r5:r5_159,r6:r6_161,r7:2<32>,r8:r8_146,r9:r9_222
		defs: r19:r19_176,r21:r21_170,r3:r3_168,r8:r8_167
	word32 r5_180 = Mem164[r21_170 + 40<i32>:word32]
	word32 r4_181 = Mem164[r21_170 + 32<i32>:word32]
	word32 r6_182 = Mem164[r19_176 + 76<i32>:word32]
	Mem185[r19_176 + 64<i32>:word32] = r3_168
	word32 r3_189
	word32 r21_191
	word32 r19_197
	word32 r0_199
	call 0x0000BC24<p32> + r4_181 (retsize: 0;)
		uses: r0:r0_223,r10:r10_406,r11:r11_407,r12:r12_408,r15:0x0000BC24<p32>,r18:r18_218,r4:r4_181,r5:r5_180,r6:r6_182,r7:2<32>,r8:r8_167,r9:r9_222
		defs: r0:r0_199,r19:r19_197,r21:r21_191,r3:r3_189
	word32 r5_202 = Mem185[r21_191 + 40<i32>:word32]
	word32 r8_203 = Mem185[r21_191 + 32<i32>:word32]
	Mem205[r19_197 + 5788<i32>:word32] = 0x4000<32>
	Mem207[r19_197 + 68<i32>:word32] = r3_189
	Mem209[r19_197 + 5824<i32>:word32] = r0_199
	word32 r12_408
	word32 r10_406
	word32 r11_407
	word32 r3_213
	word32 r21_215
	word32 r22_216
	word32 r18_218
	word32 r19_221
	word32 r9_222
	word32 r0_223
	call 0x0000BC48<p32> + r8_203 (retsize: 0;)
		uses: r0:r0_223,r10:r10_406,r11:r11_407,r12:r12_408,r15:0x0000BC48<p32>,r18:r18_218,r4:0x4000<32>,r5:r5_202,r6:0x4000<32>,r7:4<32>,r8:r8_203,r9:r9_222
		defs: r0:r0_223,r10:r10_406,r11:r11_407,r12:r12_408,r18:r18_218,r19:r19_221,r21:r21_215,r22:r22_216,r3:r3_213,r9:r9_222
	word32 r6_225 = Mem209[r19_221 + 5788<i32>:word32]
	word32 r5_226 = Mem209[r19_221 + 56<i32>:word32]
	Mem227[r19_221 + 8<i32>:word32] = r3_213
	branch Test(EQ,r5_226) l0000BC68_ds_t
l0000BC68_ds_t:
	Mem230[r19_221 + 12<i32>:word32] = r6_225 * 4<32>
l0000BC68_ds_f:
	Mem231[r19_221 + 12<i32>:word32] = r6_225 * 4<32>
l0000BC6C:
	branch Test(EQ,Mem231[r19_221 + 64<i32>:word32]) l0000BE58
l0000BC74:
	word32 r5_233 = Mem231[r19_221 + 68<i32>:word32]
	branch Test(GE,r5_233 | -r5_233) l0000BC84_ds_t
l0000BC84_ds_t:
l0000BC84_ds_f:
	word32 r5_237 = -r3_213
l0000BC88:
	word32 r5_239 = ~(r3_213 | r5_237)
	branch Test(NE,r5_239 >>u 31<i32>) l0000BD14_ds_t
l0000BD14_ds_t:
l0000BE58:
	word32 r3_274 = Mem273[0x0000B5C0<p32>:word32]
	Mem279[r19_221 + 4<i32>:word32] = 0x29A<32>
	Mem280[r21_215 + 24<i32>:word32] = r3_274
	r0 = fn0000B324(r21_215, out r4_104, out r8_105)
	r3_296 = 0xFFFFFFFC<32>
l0000BD14_ds_f:
l0000BD18:
	Mem303[r19_221 + 132<i32>:word32] = r22_216
	Mem304[r19_221 + 5796<i32>:word32] = r3_213 + (r6_225 & 0xFFFFFFFE<32>)
	Mem305[r19_221 + 5784<i32>:word32] = r3_213 + r6_225 * 3<32>
	Mem306[r19_221 + 136<i32>:word32] = r5_239 >>u 31<i32>
	Mem309[r19_221 + 36<i32>:byte] = 8<8>
	word32 r3_310
	word32 r21_316
	r0 = fn00008008(r21_215, out r3_310, out r4_104, out r8_105, out r21_316)
	branch Test(EQ,r3_310) l0000BD48_ds_t
l0000BD48_ds_t:
l0000BD68:
	word32 r19_324 = Mem309[r21_316 + 28<i32>:word32]
	word32 r3_326 = Mem309[r19_324 + 76<i32>:word32]
	word32 r8_327 = Mem309[r19_324 + 68<i32>:word32]
	Mem334[r19_324 + 60<i32>:word32] = Mem309[r19_324 + 44<i32>:word32] * 2<32>
	Mem337[(r3_326 + 0xFFFFFFFF<32>) * 2<32> + r8_327:word16] = SLICE(r3_310, word16, 0)
	word32 r3_330 = (r3_326 + 0xFFFFFFFF<32>) * 2<32>
	word32 r10_545
	word32 r9_544
	fn00008C64(r3_330, r8_327, r3_310, r3_330, r8_327, out r9_544, out r10_545)
	word32 r4_344 = Mem337[r19_324 + 132<i32>:word32]
	Mem346[r19_324 + 108<i32>:word32] = r3_310
	word32 r3_351 = r4_344 * 0xC<32> + 0xFFFF9DB4<32>
	word32 r6_355 = CONVERT(Mem346[r3_351:word16], word16, word32)
	word32 r4_357 = CONVERT(Mem346[r3_351 + 4<i32>:word16], word16, word32)
	word32 r3_359 = CONVERT(Mem346[r3_351 + 6<i32>:word16], word16, word32)
	Mem360[r19_324 + 128<i32>:word32] = CONVERT(Mem346[r3_351 + 2<i32>:word16], word16, word32)
	Mem361[r19_324 + 140<i32>:word32] = r6_355
	Mem362[r19_324 + 124<i32>:word32] = r3_359
	Mem363[r19_324 + 144<i32>:word32] = r4_357
	Mem364[r19_324 + 92<i32>:word32] = r3_310
	Mem365[r19_324 + 116<i32>:word32] = r3_310
	Mem366[r19_324 + 5812<i32>:word32] = r3_310
	Mem367[r19_324 + 120<i32>:word32] = 2<32>
	Mem368[r19_324 + 96<i32>:word32] = 2<32>
	Mem369[r19_324 + 104<i32>:word32] = r3_310
	Mem370[r19_324 + 72<i32>:word32] = r3_310
	r3Out = r3_310
	r4Out = r4_357
	r8Out = r8_327
	r19Out = <invalid>
	r22Out = <invalid>
	return r0
l0000BD48_ds_f:
	r22_119 = r3_310
l0000BD4C:
	r3_296 = r22_119
l0000BD50:
	r3Out = r3_296
	r4Out = r4_104
	r8Out = r8_105
	r19Out = <invalid>
	r22Out = <invalid>
	return r0
fn0000BA7C_exit:


void fn0000C324(word32 r0, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r18 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn0000C324_entry:
l0000C324:
	branch Test(EQ,r5) l0000C3E8
l0000C328:
	branch Test(EQ,Mem0[r5 + 32<i32>:word32]) l0000C3E8
l0000C330:
	branch Test(EQ,Mem0[r5 + 36<i32>:word32]) l0000C3E8
l0000C338:
	word32 r4_7 = Mem0[r5 + 28<i32>:word32]
	branch Test(EQ,r4_7) l0000C3E8
l0000C3E8:
	return
l0000C340:
	word32 r6_10 = r5 ^ Mem0[r4_7:word32]
	branch Test(EQ,r6_10) l0000C34C_ds_t
l0000C34C_ds_t:
l0000C358:
	branch 0x1F<32> -u (Mem0[r4_7 + 4<i32>:word32] + 0xFFFFC0CC<32>) < 0<32> l0000C350
l0000C36C:
	word32 r3_16 = Mem0[r4_7 + 12<i32>:word32]
	Mem17[r4_7 + 44<i32>:word32] = r6_10
	Mem18[r4_7 + 48<i32>:word32] = r6_10
	Mem19[r4_7 + 52<i32>:word32] = r6_10
	Mem20[r4_7 + 32<i32>:word32] = r6_10
	Mem21[r5 + 20<i32>:word32] = r6_10
	Mem22[r5 + 8<i32>:word32] = r6_10
	branch Test(EQ,r3_16) l0000C38C_ds_t
l0000C38C_ds_t:
	Mem23[r5 + 24<i32>:word32] = r6_10
l0000C38C_ds_f:
	Mem24[r5 + 24<i32>:word32] = r6_10
l0000C390:
	Mem26[r5 + 48<i32>:word32] = r3_16 & 1<32>
l0000C398:
	Mem29[r4_7 + 4<i32>:word32] = 0x3F34<32>
	Mem32[r4_7 + 112<i32>:word32] = r4_7 + 0x534<32>
	Mem33[r4_7 + 24<i32>:word32] = 0xFFFF8000<32>
	Mem34[r4_7 + 84<i32>:word32] = r4_7 + 0x534<32>
	Mem35[r4_7 + 80<i32>:word32] = r4_7 + 0x534<32>
	Mem38[r4_7 + 7108<i32>:word32] = 1<32>
	Mem41[r4_7 + 8<i32>:word32] = r0
	Mem42[r4_7 + 16<i32>:word32] = r0
	Mem43[r4_7 + 36<i32>:word32] = r0
	Mem44[r4_7 + 60<i32>:word32] = r0
	Mem45[r4_7 + 64<i32>:word32] = r0
	Mem46[r4_7 + 7112<i32>:word32] = 0xFFFFFFFF<32>
	return
l0000C34C_ds_f:
l0000C350:
	return
fn0000C324_exit:


word32 fn0000CCE8(ptr32 & r23Out, ptr32 & r26Out, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000D1CC
// MayUse: 
// LiveOut: r23 r26 r29 r3
// Trashed: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31
// Preserved:
fn0000CCE8_entry:
	word32 r31
	word32 dwArg4C
	word32 dwArg58
	word32 dwArg64
l0000CCE8:
l0000CCEC:
	r23Out = dwArg4C
	r26Out = dwArg58
	r29Out = dwArg64
	return r31
fn0000CCE8_exit:


word32 fn0000CE64(word32 r0, word32 r3, word32 r5, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r28, word32 r29, word32 dwArg20, word32 dwArg24, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r5:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut: r0 r19 r22 r23 r3 r7 r8 r9
// Trashed: r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: C r1
fn0000CE64_entry:
	word32 r8
l0000CE64:
	word32 r4_7 = r5 + r3 * 4<32>
	word32 r7_10 = CONVERT(Mem0[r4_7 + 1<i32>:byte], byte, word32)
	Mem13[r22 + 7112<i32>:word32] = r0
	word32 r3_15 = CONVERT(Mem13[r3 * 4<32> + r5:byte], byte, word32)
	branch r19 -u r7_10 >= 0<32> l0000CE84_ds_t
l0000CE84_ds_t:
	word32 r4_19 = CONVERT(Mem13[r4_7 + 2<i32>:word16], word16, word32)
l0000CE84_thunk_fn0000CEE4:
	word32 r19_28
	word32 r3_29
	word32 r8_32
	word32 r9_33
	word32 r22_41
	word32 r23_42
	word32 r7_50
	word32 r21_120
	word32 r24_121
	word32 r25_122
	word32 r26_123
	word32 r28_124
	word32 r29_125
	word32 r31_126
	word32 r0_34 = fn0000CEE4(r0, r3_15, r4_19, r5, r7_10, r19, r21, r22, r23, r24, r25, r26, r28, r29, dwArg20, dwArg24, out r3_29, out r7_50, out r8_32, out r9_33, out r19_28, out r21_120, out r22_41, out r23_42, out r24_121, out r25_122, out r26_123, out r28_124, out r29_125, out r31_126)
	r3Out = r3_29
	r7Out = r7_50
	r8Out = r8_32
	r9Out = r9_33
	r19Out = r19_28
	r22Out = r22_41
	r23Out = r23_42
	return r0_34
l0000CE84_ds_f:
l0000CE84_thunk_fn0000CE88:
	word32 r19_59
	word32 r22_61
	word32 r23_62
	word32 r3_69
	word32 r7_74
	word32 r9_75
	word32 r8_127
	word32 r21_128
	word32 r24_129
	word32 r25_130
	word32 r26_131
	word32 r28_132
	word32 r29_133
	word32 r31_134
	word32 r0_56 = fn0000CE88(out r3_69, out r7_74, out r8_127, out r9_75, out r19_59, out r21_128, out r22_61, out r23_62, out r24_129, out r25_130, out r26_131, out r28_132, out r29_133, out r31_134)
	r3Out = r3_69
	r7Out = r7_74
	r8Out = r8
	r9Out = r9_75
	r19Out = r19_59
	r22Out = r22_61
	r23Out = r23_62
	return r0_56
fn0000CE64_exit:


word32 fn0000CE88(ptr32 & r3Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CE64
//      fn0000CEE4
// MayUse: 
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r28 r29 r3 r31 r7 r8 r9
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31 r4 r5 r6 r7 r9
// Preserved: r1
l0000CE88:
	branch Test(EQ,r21_29 + 1<32>) l0000CE8C_ds_t
	def Mem0
	def r6
	def r5
l0000CE8C_ds_t:
l0000CE8C_thunk_fn0000D0B8:
	r0_3 = fn0000D0B8(out r3_16, out r4_178, out r7_21, out r9_22, out r19_6, out r21_7, out r22_8, out r23_9, out r24_10, out r25_11, out r26_12, out r27_179, out r28_14, out r29_15, out r31_17)
	r3Out = r3_16
	r7Out = r7_21
	r8Out = <invalid>
	r9Out = r9_22
	r19Out = r19_6
	r21Out = r21_7
	r22Out = r22_8
	r23Out = r23_9
	r24Out = r24_10
	r25Out = r25_11
	r26Out = r26_12
	r28Out = r28_14
	r29Out = r29_15
	r31Out = r31_17
	return r0_3
l0000CE8C_ds_f:
l0000CE90:
	r24_25 = r24_25
	r4_28 = CONVERT(Mem0[r24_25 + 0xFFFFFFFD<32>:byte], byte, word32)
	r21_29 = r21_29
	r18_31 = r19_61 + 0xFFFFFFF8<32> & 0x1F<32>
	branch Test(EQ,r18_31) l0000CEA8_ds_t
l0000CEA8_ds_t:
	r3_33 = r4_28
l0000CEA8_ds_f:
	r3_34 = r4_28
l0000CEAC:
	r3_37 = PHI((r3_34, l0000CEA8_ds_f), (r3_38, l0000CEB4_ds_t))
	r18_35 = PHI((r18_31, l0000CEA8_ds_f), (r18_36, l0000CEB4_ds_t))
	r18_36 = r18_35 + 0xFFFFFFFF<32>
	branch Test(NE,r18_36) l0000CEB4_ds_t
l0000CEB4_ds_t:
	r3_38 = r3_37 * 2<32>
l0000CEB4_ds_f:
	r3_39 = r3_37 * 2<32>
l0000CEB8:
	r3_43 = PHI((r3_33, l0000CEA8_ds_t), (r3_39, l0000CEB4_ds_f))
	r25_44 = r25_44 + r3_43
	r19_61 = r19_61
	branch r19_61 + 0xFFFFFFF0<32> -u CONVERT(Mem0[(r5 + (r6 & r25_44) * 4<32>) + 1<i32>:byte], byte, word32) < 0<32> l0000CEE0_ds_t
l0000CEE0_ds_t:
l0000CEE0_ds_f:
l0000CEE0_thunk_fn0000CEE4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg32 = <invalid>
	stackArg36 = <invalid>
	r0_84 = fn0000CEE4(r0, r3, r4, r5, r7, r19, r21, r22, r23, r24, r25, r26, r28, r29, stackArg32, stackArg36, out r3_79, out r7_83, out r8_182, out r9_92, out r19_77, out r21_73, out r22_86, out r23_87, out r24_75, out r25_80, out r26_88, out r28_90, out r29_91, out r31_74)
	r3Out = r3_79
	r7Out = r7_83
	r8Out = <invalid>
	r9Out = r9_92
	r19Out = r19_77
	r21Out = r21_73
	r22Out = r22_86
	r23Out = r23_87
	r24Out = r24_75
	r25Out = r25_80
	r26Out = r26_88
	r28Out = r28_90
	r29Out = r29_91
	r31Out = r31_74
	return r0_84
fn0000CE88_entry:
	def r0
	def r3
	def r4
	def r7
	def r19
	def r21
	def r22
	def r23
	def r24
	def r25
	def r26
	def r28
	def r29
l0000CE88_thunk_fn0000CEE4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg32 = <invalid>
	stackArg36 = <invalid>
	r0_107 = fn0000CEE4(r0, r3, r4, r5, r7, r19, r21, r22, r23, r24, r25, r26, r28, r29, stackArg32, stackArg36, out r3_102, out r7_106, out r8_177, out r9_115, out r19_100, out r21_96, out r22_109, out r23_110, out r24_98, out r25_103, out r26_111, out r28_113, out r29_114, out r31_97)
	r3Out = r3_102
	r7Out = r7_106
	r8Out = <invalid>
	r9Out = r9_115
	r19Out = r19_100
	r21Out = r21_96
	r22Out = r22_109
	r23Out = r23_110
	r24Out = r24_98
	r25Out = r25_103
	r26Out = r26_111
	r28Out = r28_113
	r29Out = r29_114
	r31Out = r31_97
	return r0_107
fn0000CE88_exit:


word32 fn0000CEE4(word32 r0, word32 r3, word32 r4, word32 r5, word32 r7, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r28, word32 r29, word32 dwArg20, word32 dwArg24, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CE64
//      fn0000CE88
//      fn0000D008
//      fn0000EDD8
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r28 r29 r3 r31 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000CEE4_entry:
	word32 r8
l0000CEE4:
	word32 r19_25
	word32 r25_19
	word32 r8_16
	branch Test(EQ,r3) l0000CEE8_ds_t
l0000CEE8_ds_t:
l0000CDD0:
	word32 r18_11 = r7 & 0x1F<32>
	branch Test(EQ,r7 & 0x1F<32>) l0000CDDC_ds_t
l0000CDDC_ds_t:
	r8_16 = r25
l0000CDDC_ds_f:
	word32 r8_10 = r25
l0000CDE0:
	r18_11 = r18_11 + 0xFFFFFFFF<32>
	branch Test(NE,r18_11) l0000CDE8_ds_t
l0000CDE8_ds_t:
	r8_10 = r8_10 >>u 1<i32>
l0000CDE8_ds_f:
	r8_16 = r8_10 >>u 1<i32>
l0000CDEC:
	Mem29[r22 + 7112<i32>:word32] = r7
	Mem33[r22 + 68<i32>:word32] = r4
	r25_19 = r8_16
	r19_25 = r19 - r7
l0000CEE8_ds_f:
l0000CEEC:
	branch Test(EQ,r3 & 0xF0<32>) l0000CEF0_ds_t
l0000CEF0_ds_t:
l0000F588:
	word32 r9_43
	word32 r3_40 = r3 + r7
	word32 r18_41 = r3_40 & 0x1F<32>
	branch Test(EQ,r3_40 & 0x1F<32>) l0000F598_ds_t
l0000F598_ds_t:
	r9_43 = 0xFFFFFFFF<32>
l0000F598_ds_f:
	word32 r9_44 = 0xFFFFFFFF<32>
l0000F59C:
	r18_41 = r18_41 + 0xFFFFFFFF<32>
	branch Test(NE,r18_41) l0000F5A4_ds_t
l0000F5A4_ds_t:
	r9_44 = r9_44 * 2<32>
l0000F5A4_ds_f:
	r9_43 = r9_44 * 2<32>
l0000F5A8:
	word32 r3_59
	word32 r9_51 = ~r9_43
	word32 r6_54 = r9_51 & r25
	word32 r18_57 = r7 & 0x1F<32>
	branch Test(EQ,r7 & 0x1F<32>) l0000F5BC_ds_t
l0000F5BC_ds_t:
	r3_59 = r6_54
l0000F5BC_ds_f:
	word32 r3_60 = r6_54
l0000F5C0:
	r18_57 = r18_57 + 0xFFFFFFFF<32>
	branch Test(NE,r18_57) l0000F5C8_ds_t
l0000F5C8_ds_t:
	r3_60 = r3_60 >>u 1<i32>
l0000F5C8_ds_f:
	r3_59 = r3_60 >>u 1<i32>
l0000F5CC:
	word32 r6_100
	word32 r3_73 = r3_59 + r4
	word32 r6_81 = r5 + r3_73 * 4<32>
	r8_16 = CONVERT(Mem0[r6_81 + 1<i32>:byte], byte, word32)
	word32 r3_192 = CONVERT(Mem0[r3_73 * 4<32> + r5:byte], byte, word32)
	word32 r10_195 = r8_16 + r7
	branch r19 -u r10_195 >= 0<32> l0000F5F0_ds_t
l0000F5F0_ds_t:
	r6_100 = CONVERT(Mem0[r6_81 + 2<i32>:word16], word16, word32)
l0000F5F0_ds_f:
l0000F5F4:
	branch Test(EQ,r21) l0000F5F8_ds_t
l0000F5F8_ds_t:
l0000F5F8_thunk_fn0000D0B8:
	word32 r19_108
	word32 r21_109
	word32 r22_110
	word32 r23_111
	word32 r24_112
	word32 r25_113
	word32 r26_114
	word32 r28_116
	word32 r29_117
	word32 r3_118
	word32 r31_119
	word32 r7_123
	word32 r9_124
	word32 r4_749
	word32 r27_750
	word32 r0_105 = fn0000D0B8(out r3_118, out r4_749, out r7_123, out r9_124, out r19_108, out r21_109, out r22_110, out r23_111, out r24_112, out r25_113, out r26_114, out r27_750, out r28_116, out r29_117, out r31_119)
	r3Out = r3_118
	r7Out = r7_123
	r8Out = r8_16
	r9Out = r9_124
	r19Out = r19_108
	r21Out = r21_109
	r22Out = r22_110
	r23Out = r23_111
	r24Out = r24_112
	r25Out = r25_113
	r26Out = r26_114
	r28Out = r28_116
	r29Out = r29_117
	r31Out = r31_119
	return r0_105
l0000F5F8_ds_f:
l0000F5FC:
	word32 r3_135
	r24 = r24 + 1<32>
	word32 r6_130 = CONVERT(Mem0[r24 - 1<i32>:byte], byte, word32)
	r21 = r21 + 0xFFFFFFFF<32>
	word32 r18_133 = r19 & 0x1F<32>
	branch Test(EQ,r18_133) l0000F614_ds_t
l0000F614_ds_t:
	r3_135 = r6_130
l0000F614_ds_f:
	word32 r3_136 = r6_130
l0000F618:
	r18_133 = r18_133 + 0xFFFFFFFF<32>
	branch Test(NE,r18_133) l0000F620_ds_t
l0000F620_ds_t:
	r3_136 = r3_136 * 2<32>
l0000F620_ds_f:
	r3_135 = r3_136 * 2<32>
l0000F624:
	word32 r3_156
	r25 = r25 + r3_135
	word32 r6_150 = r9_51 & r25
	word32 r18_154 = r7 & 0x1F<32>
	branch Test(EQ,r7 & 0x1F<32>) l0000F638_ds_t
l0000F638_ds_t:
	r3_156 = r6_150
l0000F638_ds_f:
	word32 r3_157 = r6_150
l0000F63C:
	r18_154 = r18_154 + 0xFFFFFFFF<32>
	branch Test(NE,r18_154) l0000F644_ds_t
l0000F644_ds_t:
	r3_157 = r3_157 >>u 1<i32>
l0000F644_ds_f:
	r3_156 = r3_157 >>u 1<i32>
l0000F648:
	word32 r3_171 = r3_156 + r4
	word32 r6_179 = r5 + r3_171 * 4<32>
	r8_16 = CONVERT(Mem0[r6_179 + 1<i32>:byte], byte, word32)
	r19 = r19 + 8<32>
	r3_192 = CONVERT(Mem0[r3_171 * 4<32> + r5:byte], byte, word32)
	r10_195 = r8_16 + r7
	branch r19 -u r10_195 < 0<32> l0000F670_ds_t
l0000F670_ds_t:
l0000F670_ds_f:
	r6_100 = CONVERT(Mem0[r6_179 + 2<i32>:word16], word16, word32)
l0000F674:
	word32 r4_225
	Mem215[r22 + 7112<i32>:word32] = r10_195
	Mem217[r22 + 68<i32>:word32] = r6_100
	word32 r19_203 = r19 - r7
	word32 r18_218 = r7 & 0x1F<32>
	branch Test(EQ,r7 & 0x1F<32>) l0000F68C_ds_t
l0000F68C_ds_t:
	r4_225 = r25
l0000F68C_ds_f:
	word32 r4_226 = r25
l0000F690:
	r18_218 = r18_218 + 0xFFFFFFFF<32>
	branch Test(NE,r18_218) l0000F698_ds_t
l0000F698_ds_t:
	r4_226 = r4_226 >>u 1<i32>
l0000F698_ds_f:
	r4_225 = r4_226 >>u 1<i32>
l0000F69C:
	word32 r18_237 = r8_16 & 0x1F<32>
	branch Test(EQ,r18_237) l0000F6A8_ds_t
l0000F6A8_ds_t:
	r25_19 = r4_225
l0000F6A8_ds_f:
	word32 r25_241 = r4_225
l0000F6AC:
	r18_237 = r18_237 + 0xFFFFFFFF<32>
	branch Test(NE,r18_237) l0000F6B4_ds_t
l0000F6B4_ds_t:
	r25_241 = r25_241 >>u 1<i32>
l0000F6B4_ds_f:
	r25_19 = r25_241 >>u 1<i32>
l0000F6B8:
	branch Test(NE,r3_192) l0000F6BC_ds_t
l0000F6BC_ds_t:
	word32 r19_260 = r19_203 - r8_16
l0000F6BC_thunk_fn0000CEF4:
	word32 r4_755
	word32 r27_756
	word32 r30_757
	word32 r19_398
	word32 r21_399
	word32 r22_400
	word32 r23_401
	word32 r24_402
	word32 r25_403
	word32 r26_404
	word32 r28_406
	word32 r29_407
	word32 r3_408
	word32 r31_410
	word32 r7_414
	word32 r8_415
	word32 r9_416
	word32 r0_392 = fn0000CEF4(r0, r3_192, r4_225, r7, r19_260, r21, r22, r23, r24, r25_19, r26, r28, r29, dwArg20, dwArg24, out r3_408, out r4_755, out r7_414, out r8_415, out r9_416, out r19_398, out r21_399, out r22_400, out r23_401, out r24_402, out r25_403, out r26_404, out r27_756, out r28_406, out r29_407, out r30_757, out r31_410)
	r3Out = r3_408
	r7Out = r7_414
	r8Out = r8_415
	r9Out = r9_416
	r19Out = r19_398
	r21Out = r21_399
	r22Out = r22_400
	r23Out = r23_401
	r24Out = r24_402
	r25Out = r25_403
	r26Out = r26_404
	r28Out = r28_406
	r29Out = r29_407
	r31Out = r31_410
	return r0_392
l0000F6BC_ds_f:
	r19_25 = r19_203 - r8_16
l0000F6C0:
l0000CE00:
	Mem422[r22 + 4<i32>:word32] = 0x3F4D<32>
	branch Test(EQ,r26) l0000CE0C_ds_t
l0000CE0C_ds_t:
l0000CE0C_thunk_fn0000F218:
	word32 r31_427 = fn0000F218()
	r3Out = r28
	r7Out = r7
	r8Out = r8_16
	r9Out = 0x3F48<32>
	r19Out = r19_25
	r21Out = r21
	r22Out = r22
	r23Out = r23
	r24Out = r24
	r25Out = r25_19
	r26Out = r26
	r28Out = r28
	r29Out = r29
	r31Out = r31_427
	return r0
l0000CE0C_ds_f:
l0000CE10:
	Mem435[r28:byte] = Mem422[r22 + 71<i32>:byte]
	Mem437[r22 + 4<i32>:word32] = 0x3F48<32>
l0000CE20_thunk_fn0000EDD8:
	word32 r3_469
	word32 r8_471
	word32 r7_472
	word32 r25_474
	word32 r19_475
	word32 r22_476
	word32 r21_480
	word32 r31_481
	word32 r24_482
	word32 r9_483
	word32 r26_484
	word32 r29_485
	word32 r23_486
	word32 r28_487
	word32 r0_488 = fn0000EDD8(r8, r19_25, r21, out r3_469, out r7_472, out r8_471, out r9_483, out r19_475, out r21_480, out r22_476, out r23_486, out r24_482, out r25_474, out r26_484, out r28_487, out r29_485, out r31_481)
	r3Out = r3_469
	r7Out = r7_472
	r8Out = r8_471
	r9Out = r9_483
	r19Out = r19_475
	r21Out = r21_480
	r22Out = r22_476
	r23Out = r23_486
	r24Out = r24_482
	r25Out = r25_474
	r26Out = r26_484
	r28Out = r28_487
	r29Out = r29_485
	r31Out = r31_481
	return r0_488
l0000CEF0_ds_f:
l0000CEF0_thunk_fn0000CEF4:
	word32 r4_752
	word32 r27_753
	word32 r30_754
	word32 r19_503
	word32 r21_504
	word32 r22_505
	word32 r23_506
	word32 r24_507
	word32 r25_508
	word32 r26_509
	word32 r28_511
	word32 r29_512
	word32 r3_513
	word32 r31_515
	word32 r7_519
	word32 r8_520
	word32 r9_521
	word32 r0_497 = fn0000CEF4(r0, r3, r4, r7, r19, r21, r22, r23, r24, r25, r26, r28, r29, dwArg20, dwArg24, out r3_513, out r4_752, out r7_519, out r8_520, out r9_521, out r19_503, out r21_504, out r22_505, out r23_506, out r24_507, out r25_508, out r26_509, out r27_753, out r28_511, out r29_512, out r30_754, out r31_515)
	r3Out = r3_513
	r7Out = r7_519
	r8Out = r8_520
	r9Out = r9_521
	r19Out = r19_503
	r21Out = r21_504
	r22Out = r22_505
	r23Out = r23_506
	r24Out = r24_507
	r25Out = r25_508
	r26Out = r26_509
	r28Out = r28_511
	r29Out = r29_512
	r31Out = r31_515
	return r0_497
fn0000CEE4_exit:


word32 fn0000CEF0(word32 r0, word32 r3, word32 r4, word32 r7, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r28, word32 r29, word32 dwArg20, word32 dwArg24, ptr32 & r23Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r4:[0..31] r7:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut: r23 r26 r27 r28 r29 r30 r31 r4
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000CEF0_entry:
l0000CEF0:
l0000CEF0_thunk_fn0000CEF4:
	word32 r23_27
	word32 r26_30
	word32 r27_31
	word32 r28_32
	word32 r29_33
	word32 r30_35
	word32 r31_36
	word32 r4_37
	word32 r3_53
	word32 r7_54
	word32 r8_55
	word32 r9_56
	word32 r19_57
	word32 r21_58
	word32 r22_59
	word32 r24_60
	word32 r25_61
	fn0000CEF4(r0, r3, r4, r7, r19, r21, r22, r23, r24, r25, r26, r28, r29, dwArg20, dwArg24, out r3_53, out r4_37, out r7_54, out r8_55, out r9_56, out r19_57, out r21_58, out r22_59, out r23_27, out r24_60, out r25_61, out r26_30, out r27_31, out r28_32, out r29_33, out r30_35, out r31_36)
	r23Out = r23_27
	r26Out = r26_30
	r27Out = r27_31
	r28Out = r28_32
	r29Out = r29_33
	r30Out = r30_35
	r31Out = r31_36
	return r4_37
fn0000CEF0_exit:


word32 fn0000CEF4(word32 r0, word32 r3, word32 r4, word32 r7, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r28, word32 r29, word32 dwArg20, word32 dwArg24, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CEE4
//      fn0000CEF0
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r4:[0..31] r7:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000CEF4_entry:
	word32 r27
	word32 r30
	word32 r31
	word32 r8
	word32 r9
	word32 r18
l0000CEF4:
	word32 r6_14
	word32 r18_10 = r7 & 0x1F<32>
	branch Test(EQ,r7 & 0x1F<32>) l0000CF00_ds_t
l0000CF00_ds_t:
	r6_14 = r25
l0000CF00_ds_f:
	word32 r6_11 = r25
l0000CF04:
	r18_10 = r18_10 + 0xFFFFFFFF<32>
	branch Test(NE,r18_10) l0000CF0C_ds_t
l0000CF0C_ds_t:
	r6_11 = r6_11 >>u 1<i32>
l0000CF0C_ds_f:
	r6_14 = r6_11 >>u 1<i32>
l0000CF10:
	Mem27[r22 + 7112<i32>:word32] = r7
	Mem31[r22 + 68<i32>:word32] = r4
	word32 r25_168 = r6_14
	word32 r19_122 = r19 - r7
l0000CF20:
	branch Test(NE,r3 & 0x20<32>) l0000CF28_ds_t
l0000CF28_ds_t:
l0000F220:
	Mem38[r22 + 7112<i32>:word32] = 0xFFFFFFFF<32>
	Mem39[r22 + 4<i32>:word32] = 0x3F3F<32>
l0000F22C_thunk_fn0000D9E8:
	word32 r19_67
	word32 r21_68
	word32 r22_69
	word32 r23_70
	word32 r24_71
	word32 r25_72
	word32 r26_73
	word32 r27_74
	word32 r28_75
	word32 r29_76
	word32 r3_77
	word32 r31_78
	word32 r4_79
	word32 r7_82
	word32 r9_83
	word32 r8_84
	word32 r30_88
	word32 r0_64 = fn0000D9E8(r0, r19_122, r21, r22, r23, r6_14, r26, r28, r29, r24, dwArg20, dwArg24, out r3_77, out r4_79, out r7_82, out r8_84, out r9_83, out r19_67, out r21_68, out r22_69, out r23_70, out r24_71, out r25_72, out r26_73, out r27_74, out r28_75, out r29_76, out r30_88, out r31_78)
	r3Out = r3_77
	r4Out = r4_79
	r7Out = r7_82
	r8Out = r8_84
	r9Out = r9_83
	r19Out = r19_67
	r21Out = r21_68
	r22Out = r22_69
	r23Out = r23_70
	r24Out = r24_71
	r25Out = r25_72
	r26Out = r26_73
	r27Out = r27_74
	r28Out = r28_75
	r29Out = r29_76
	r30Out = r30_88
	r31Out = r31_78
	return r0_64
l0000CF28_ds_f:
l0000CF2C:
	branch Test(NE,r3 & 0x40<32>) l0000CF34_ds_t
l0000CF34_ds_t:
l0000F50C:
	Mem95[r23 + 24<i32>:word32] = 0xFFFF9FD8<32>
	Mem96[r22 + 4<i32>:word32] = 0x3F51<32>
l0000F51C_thunk_fn0000D0B8:
	word32 r19_100
	word32 r21_101
	word32 r22_102
	word32 r23_103
	word32 r24_104
	word32 r25_105
	word32 r26_106
	word32 r27_107
	word32 r28_108
	word32 r29_109
	word32 r3_110
	word32 r31_111
	word32 r4_112
	word32 r7_115
	word32 r9_116
	word32 r0_97 = fn0000D0B8(out r3_110, out r4_112, out r7_115, out r9_116, out r19_100, out r21_101, out r22_102, out r23_103, out r24_104, out r25_105, out r26_106, out r27_107, out r28_108, out r29_109, out r31_111)
	r3Out = r3_110
	r4Out = r4_112
	r7Out = r7_115
	r8Out = r8
	r9Out = r9_116
	r19Out = r19_100
	r21Out = r21_101
	r22Out = r22_102
	r23Out = r23_103
	r24Out = r24_104
	r25Out = r25_105
	r26Out = r26_106
	r27Out = r27_107
	r28Out = r28_108
	r29Out = r29_109
	r30Out = r30
	r31Out = r31_111
	return r0_97
l0000CF34_ds_f:
l0000CF38:
	word32 r8_172
	word32 r21_1000
	word32 r4_194
	Mem120[r22 + 4<i32>:word32] = 0x3F49<32>
	Mem121[r22 + 76<i32>:word32] = r3 & 0xF<32>
	r21_1000 = r21
	branch Test(NE,r3 & 0xF<32>) l0000D400
l0000D400:
	branch r19_122 -u (r3 & 0xF<32>) < 0<32> l0000D408_ds_t
l0000D408_ds_t:
l0000D3C8:
	branch Test(EQ,r21_1000) l0000D3CC_ds_t
l0000D3CC_ds_t:
l0000D3CC_thunk_fn0000D0B8:
	word32 r19_131
	word32 r21_132
	word32 r22_133
	word32 r23_134
	word32 r24_135
	word32 r25_136
	word32 r26_137
	word32 r27_138
	word32 r28_139
	word32 r29_140
	word32 r3_141
	word32 r31_142
	word32 r4_143
	word32 r7_146
	word32 r9_147
	word32 r0_128 = fn0000D0B8(out r3_141, out r4_143, out r7_146, out r9_147, out r19_131, out r21_132, out r22_133, out r23_134, out r24_135, out r25_136, out r26_137, out r27_138, out r28_139, out r29_140, out r31_142)
	r3Out = r3_141
	r4Out = r4_143
	r7Out = r7_146
	r8Out = 0xFFFFFFFF<32>
	r9Out = r9_147
	r19Out = r19_131
	r21Out = r21_132
	r22Out = r22_133
	r23Out = r23_134
	r24Out = r24_135
	r25Out = r25_136
	r26Out = r26_137
	r27Out = r27_138
	r28Out = r28_139
	r29Out = r29_140
	r30Out = r30
	r31Out = r31_142
	return r0_128
l0000D3CC_ds_f:
	r31 = r21_1000
l0000D3D0:
	word32 r4_157
	r24 = r24 + 1<32>
	word32 r5_153 = CONVERT(Mem121[r24 - 1<i32>:byte], byte, word32)
	r21_1000 = r21_1000 + 0xFFFFFFFF<32>
	word32 r18_155 = r19_122 & 0x1F<32>
	branch Test(EQ,r18_155) l0000D3E8_ds_t
l0000D3E8_ds_t:
	r4_157 = r5_153
l0000D3E8_ds_f:
	word32 r4_158 = r5_153
l0000D3EC:
	r18_155 = r18_155 + 0xFFFFFFFF<32>
	branch Test(NE,r18_155) l0000D3F4_ds_t
l0000D3F4_ds_t:
	r4_158 = r4_158 * 2<32>
l0000D3F4_ds_f:
	r4_157 = r4_158 * 2<32>
l0000D3F8:
	r19_122 = r19_122 + 8<32>
	r25_168 = r25_168 + r4_157
l0000D408_ds_f:
	r8_172 = 0xFFFFFFFF<32>
l0000D40C:
	word32 r4_180
	word32 r6_176 = Mem121[r22 + 68<i32>:word32]
	word32 r5_177 = Mem121[r22 + 7112<i32>:word32]
	word32 r18_178 = r3 & 0xF<32> & 0x1F<32>
	branch Test(EQ,r18_178) l0000D420_ds_t
l0000D420_ds_t:
	r4_180 = 0xFFFFFFFF<32>
l0000D420_ds_f:
	word32 r4_181 = 0xFFFFFFFF<32>
l0000D424:
	r18_178 = r18_178 + 0xFFFFFFFF<32>
	branch Test(NE,r18_178) l0000D42C_ds_t
l0000D42C_ds_t:
	r4_181 = r4_181 * 2<32>
l0000D42C_ds_f:
	r4_180 = r4_181 * 2<32>
l0000D430:
	r4_194 = (~r4_180 & r25_168) + r6_176
	word32 r5_199 = r5_177 + (r3 & 0xF<32>)
	word32 r18_200 = r3 & 0xF<32> & 0x1F<32>
	branch Test(EQ,r18_200) l0000D44C_ds_t
l0000D44C_ds_t:
	r9 = r25_168
l0000D44C_ds_f:
	word32 r9_203 = r25_168
l0000D450:
	r18_200 = r18_200 + 0xFFFFFFFF<32>
	branch Test(NE,r18_200) l0000D458_ds_t
l0000D458_ds_t:
	r9_203 = r9_203 >>u 1<i32>
l0000D458_ds_f:
	r9 = r9_203 >>u 1<i32>
l0000D45C:
	Mem217[r22 + 68<i32>:word32] = r4_194
	Mem227[r22 + 7112<i32>:word32] = r5_199
	r19_122 = r19_122 - (r3 & 0xF<32>)
	r25_168 = r9
l0000CF4C:
	r4_194 = Mem121[r22 + 68<i32>:word32]
	r21_1000 = r21
	r8_172 = r8
l0000CF50:
	word32 r7_241
	Mem233[r22 + 4<i32>:word32] = 0x3F4A<32>
	Mem235[r22 + 7116<i32>:word32] = r4_194
	word32 r3_236 = Mem235[r22 + 92<i32>:word32]
	word32 r6_238 = Mem235[r22 + 84<i32>:word32]
	word32 r18_239 = r3_236 & 0x1F<32>
	branch Test(EQ,r3_236 & 0x1F<32>) l0000CF74_ds_t
l0000CF74_ds_t:
	r7_241 = 0xFFFFFFFF<32>
l0000CF74_ds_f:
	word32 r7_242 = 0xFFFFFFFF<32>
l0000CF78:
	r18_239 = r18_239 + 0xFFFFFFFF<32>
	branch Test(NE,r18_239) l0000CF80_ds_t
l0000CF80_ds_t:
	r7_242 = r7_242 * 2<32>
l0000CF80_ds_f:
	r7_241 = r7_242 * 2<32>
l0000CF84:
	word32 r7_249 = ~r7_241
	word32 r3_253 = r25_168 & r7_249
	word32 r5_258 = r6_238 + r3_253 * 4<32>
	word32 r4_262 = CONVERT(Mem235[r5_258 + 1<i32>:byte], byte, word32)
	word32 r10_264 = CONVERT(Mem235[r5_258 + 2<i32>:word16], word16, word32)
	word32 r3_266 = CONVERT(Mem235[r3_253 * 4<32> + r6_238:byte], byte, word32)
	branch r19_122 -u r4_262 >= 0<32> l0000CFAC_ds_t
l0000CFAC_ds_t:
	word32 r5_271 = r4_262
l0000D010:
	word32 r8_1764
	word32 r6_478
	word32 r7_1743 = r3_266 & 0xF0<32>
	branch Test(EQ,r3_266 & 0xF0<32>) l0000D018_ds_t
l0000D018_ds_t:
l0000F0B8:
	word32 r8_278
	word32 r3_274 = r3_266 + r4_262
	word32 r18_276 = r3_274 & 0x1F<32>
	branch Test(EQ,r3_274 & 0x1F<32>) l0000F0CC_ds_t
l0000F0CC_ds_t:
	r8_278 = 0xFFFFFFFF<32>
l0000F0CC_ds_f:
	word32 r8_279 = 0xFFFFFFFF<32>
l0000F0D0:
	r18_276 = r18_276 + 0xFFFFFFFF<32>
	branch Test(NE,r18_276) l0000F0D8_ds_t
l0000F0D8_ds_t:
	r8_279 = r8_279 * 2<32>
l0000F0D8_ds_f:
	r8_278 = r8_279 * 2<32>
l0000F0DC:
	word32 r3_294
	word32 r8_286 = ~r8_278
	word32 r5_289 = r8_286 & r25_168
	word32 r18_292 = r4_262 & 0x1F<32>
	branch Test(EQ,r4_262 & 0x1F<32>) l0000F0F0_ds_t
l0000F0F0_ds_t:
	r3_294 = r5_289
l0000F0F0_ds_f:
	word32 r3_295 = r5_289
l0000F0F4:
	r18_292 = r18_292 + 0xFFFFFFFF<32>
	branch Test(NE,r18_292) l0000F0FC_ds_t
l0000F0FC_ds_t:
	r3_295 = r3_295 >>u 1<i32>
l0000F0FC_ds_f:
	r3_294 = r3_295 >>u 1<i32>
l0000F100:
	word32 r3_308 = r3_294 + r10_264
	word32 r7_315 = r6_238 + r3_308 * 4<32>
	r5_271 = CONVERT(Mem235[r7_315 + 1<i32>:byte], byte, word32)
	r3_266 = CONVERT(Mem235[r3_308 * 4<32> + r6_238:byte], byte, word32)
	branch r19_122 -u (r5_271 + r4_262) >= 0<32> l0000F128_ds_t
l0000F128_ds_t:
	r10_264 = CONVERT(Mem235[r7_315 + 2<i32>:word16], word16, word32)
l0000F128_ds_f:
l0000F12C:
	branch Test(EQ,r21_1000) l0000F130_ds_t
l0000F130_ds_t:
l0000F130_thunk_fn0000D0B8:
	word32 r19_342
	word32 r21_343
	word32 r22_344
	word32 r23_345
	word32 r24_346
	word32 r25_347
	word32 r26_348
	word32 r27_349
	word32 r28_350
	word32 r29_351
	word32 r3_352
	word32 r31_353
	word32 r4_354
	word32 r7_357
	word32 r9_358
	word32 r0_339 = fn0000D0B8(out r3_352, out r4_354, out r7_357, out r9_358, out r19_342, out r21_343, out r22_344, out r23_345, out r24_346, out r25_347, out r26_348, out r27_349, out r28_350, out r29_351, out r31_353)
	r3Out = r3_352
	r4Out = r4_354
	r7Out = r7_357
	r8Out = r8_286
	r9Out = r9_358
	r19Out = r19_342
	r21Out = r21_343
	r22Out = r22_344
	r23Out = r23_345
	r24Out = r24_346
	r25Out = r25_347
	r26Out = r26_348
	r27Out = r27_349
	r28Out = r28_350
	r29Out = r29_351
	r30Out = r30
	r31Out = r31_353
	return r0_339
l0000F130_ds_f:
	r31 = r21_1000
l0000F134:
	word32 r3_369
	r24 = r24 + 1<32>
	word32 r5_364 = CONVERT(Mem235[r24 - 1<i32>:byte], byte, word32)
	r21_1000 = r21_1000 + 0xFFFFFFFF<32>
	word32 r18_367 = r19_122 & 0x1F<32>
	branch Test(EQ,r18_367) l0000F14C_ds_t
l0000F14C_ds_t:
	r3_369 = r5_364
l0000F14C_ds_f:
	word32 r3_370 = r5_364
l0000F150:
	r18_367 = r18_367 + 0xFFFFFFFF<32>
	branch Test(NE,r18_367) l0000F158_ds_t
l0000F158_ds_t:
	r3_370 = r3_370 * 2<32>
l0000F158_ds_f:
	r3_369 = r3_370 * 2<32>
l0000F15C:
	word32 r3_390
	r25_168 = r25_168 + r3_369
	word32 r5_384 = r8_286 & r25_168
	word32 r18_388 = r4_262 & 0x1F<32>
	branch Test(EQ,r4_262 & 0x1F<32>) l0000F170_ds_t
l0000F170_ds_t:
	r3_390 = r5_384
l0000F170_ds_f:
	word32 r3_391 = r5_384
l0000F174:
	r18_388 = r18_388 + 0xFFFFFFFF<32>
	branch Test(NE,r18_388) l0000F17C_ds_t
l0000F17C_ds_t:
	r3_391 = r3_391 >>u 1<i32>
l0000F17C_ds_f:
	r3_390 = r3_391 >>u 1<i32>
l0000F180:
	word32 r3_405 = r3_390 + r10_264
	word32 r7_413 = r6_238 + r3_405 * 4<32>
	r5_271 = CONVERT(Mem235[r7_413 + 1<i32>:byte], byte, word32)
	r19_122 = r19_122 + 8<32>
	r3_266 = CONVERT(Mem235[r3_405 * 4<32> + r6_238:byte], byte, word32)
	branch r19_122 -u (r5_271 + r4_262) < 0<32> l0000F1A8_ds_t
l0000F1A8_ds_t:
l0000F1A8_ds_f:
	r10_264 = CONVERT(Mem235[r7_413 + 2<i32>:word16], word16, word32)
l0000F1AC:
	word32 r6_448 = Mem235[r22 + 7112<i32>:word32]
	word32 r18_450 = r4_262 & 0x1F<32>
	branch Test(EQ,r4_262 & 0x1F<32>) l0000F1BC_ds_t
l0000F1BC_ds_t:
	r7_1743 = r25_168
l0000F1BC_ds_f:
	word32 r7_458 = r25_168
l0000F1C0:
	r18_450 = r18_450 + 0xFFFFFFFF<32>
	branch Test(NE,r18_450) l0000F1C8_ds_t
l0000F1C8_ds_t:
	r7_458 = r7_458 >>u 1<i32>
l0000F1C8_ds_f:
	r7_1743 = r7_458 >>u 1<i32>
l0000F1CC:
	r19_122 = r19_122 - r4_262
	r8_1764 = r5_271
	r6_478 = r4_262 + r6_448
	r25_168 = r7_1743
l0000D018_ds_f:
	r8_1764 = r4_262
l0000D01C:
	r6_478 = Mem235[r22 + 7112<i32>:word32]
l0000D020:
	word32 r9_498
	Mem489[r22 + 7112<i32>:word32] = r8_1764 + r6_478
	word32 r4_494 = r3_266 & 0x40<32>
	word32 r18_495 = r8_1764 & 0x1F<32>
	branch Test(EQ,r18_495) l0000D038_ds_t
l0000D038_ds_t:
	r9_498 = r25_168
l0000D038_ds_f:
	word32 r9_499 = r25_168
l0000D03C:
	r18_495 = r18_495 + 0xFFFFFFFF<32>
	branch Test(NE,r18_495) l0000D044_ds_t
l0000D044_ds_t:
	r9_499 = r9_499 >>u 1<i32>
l0000D044_ds_f:
	r9_498 = r9_499 >>u 1<i32>
l0000D048:
	word32 r19_1466 = r19_122 - r5_271
	branch Test(NE,r4_494) l0000D050_ds_t
l0000D050_ds_t:
l0000ED90:
	Mem546[r23 + 24<i32>:word32] = 0xFFFF9FF4<32>
	Mem549[r22 + 4<i32>:word32] = 0x3F51<32>
l0000EDA4_thunk_fn0000D0B8:
	word32 r19_553
	word32 r21_554
	word32 r22_555
	word32 r23_556
	word32 r24_557
	word32 r25_558
	word32 r26_559
	word32 r27_560
	word32 r28_561
	word32 r29_562
	word32 r3_563
	word32 r31_564
	word32 r4_565
	word32 r7_568
	word32 r9_569
	word32 r0_550 = fn0000D0B8(out r3_563, out r4_565, out r7_568, out r9_569, out r19_553, out r21_554, out r22_555, out r23_556, out r24_557, out r25_558, out r26_559, out r27_560, out r28_561, out r29_562, out r31_564)
	r3Out = r3_563
	r4Out = r4_565
	r7Out = r7_568
	r8Out = r8_1764
	r9Out = r9_569
	r19Out = r19_553
	r21Out = r21_554
	r22Out = r22_555
	r23Out = r23_556
	r24Out = r24_557
	r25Out = r25_558
	r26Out = r26_559
	r27Out = r27_560
	r28Out = r28_561
	r29Out = r29_562
	r30Out = r30
	r31Out = r31_564
	return r0_550
l0000D050_ds_f:
	word32 r25_1538 = r9_498
l0000D054:
	Mem575[r22 + 4<i32>:word32] = 0x3F4B<32>
	Mem582[r22 + 72<i32>:word32] = r10_264
	word32 r3_574 = r3_266 & 0xF<32>
	Mem583[r22 + 76<i32>:word32] = r3_574
	branch Test(NE,r3_574) l0000D4A8
l0000D4A8:
	branch r19_1466 -u r3_574 < 0<32> l0000D4B0_ds_t
l0000D4B0_ds_t:
l0000D470:
	branch Test(EQ,r21_1000) l0000D474_ds_t
l0000D474_ds_t:
l0000D474_thunk_fn0000D0B8:
	word32 r19_593
	word32 r21_594
	word32 r22_595
	word32 r23_596
	word32 r24_597
	word32 r25_598
	word32 r26_599
	word32 r27_600
	word32 r28_601
	word32 r29_602
	word32 r3_603
	word32 r31_604
	word32 r4_605
	word32 r7_608
	word32 r9_609
	word32 r0_590 = fn0000D0B8(out r3_603, out r4_605, out r7_608, out r9_609, out r19_593, out r21_594, out r22_595, out r23_596, out r24_597, out r25_598, out r26_599, out r27_600, out r28_601, out r29_602, out r31_604)
	r3Out = r3_603
	r4Out = r4_605
	r7Out = r7_608
	r8Out = r8_1764
	r9Out = r9_609
	r19Out = r19_593
	r21Out = r21_594
	r22Out = r22_595
	r23Out = r23_596
	r24Out = r24_597
	r25Out = r25_598
	r26Out = r26_599
	r27Out = r27_600
	r28Out = r28_601
	r29Out = r29_602
	r30Out = r30
	r31Out = r31_604
	return r0_590
l0000D474_ds_f:
	r31 = r21_1000
l0000D478:
	word32 r4_619
	r24 = r24 + 1<32>
	word32 r5_615 = CONVERT(Mem583[r24 - 1<i32>:byte], byte, word32)
	r21_1000 = r21_1000 + 0xFFFFFFFF<32>
	word32 r18_617 = r19_1466 & 0x1F<32>
	branch Test(EQ,r18_617) l0000D490_ds_t
l0000D490_ds_t:
	r4_619 = r5_615
l0000D490_ds_f:
	word32 r4_620 = r5_615
l0000D494:
	r18_617 = r18_617 + 0xFFFFFFFF<32>
	branch Test(NE,r18_617) l0000D49C_ds_t
l0000D49C_ds_t:
	r4_620 = r4_620 * 2<32>
l0000D49C_ds_f:
	r4_619 = r4_620 * 2<32>
l0000D4A0:
	r19_1466 = r19_1466 + 8<32>
	r25_1538 = r25_1538 + r4_619
l0000D4B0_ds_f:
	r7_1743 = 0xFFFFFFFF<32>
l0000D4B4:
	word32 r4_642
	word32 r6_638 = Mem583[r22 + 72<i32>:word32]
	word32 r5_639 = Mem583[r22 + 7112<i32>:word32]
	word32 r18_640 = r3_574 & 0x1F<32>
	branch Test(EQ,r3_574 & 0x1F<32>) l0000D4C8_ds_t
l0000D4C8_ds_t:
	r4_642 = 0xFFFFFFFF<32>
l0000D4C8_ds_f:
	word32 r4_643 = 0xFFFFFFFF<32>
l0000D4CC:
	r18_640 = r18_640 + 0xFFFFFFFF<32>
	branch Test(NE,r18_640) l0000D4D4_ds_t
l0000D4D4_ds_t:
	r4_643 = r4_643 * 2<32>
l0000D4D4_ds_f:
	r4_642 = r4_643 * 2<32>
l0000D4D8:
	word32 r6_656 = r6_638 + (~r4_642 & r25_1538)
	word32 r4_661 = r5_639 + r3_574
	word32 r18_662 = r3_574 & 0x1F<32>
	branch Test(EQ,r3_574 & 0x1F<32>) l0000D4F4_ds_t
l0000D4F4_ds_t:
	r8_1764 = r25_1538
l0000D4F4_ds_f:
	word32 r8_665 = r25_1538
l0000D4F8:
	r18_662 = r18_662 + 0xFFFFFFFF<32>
	branch Test(NE,r18_662) l0000D500_ds_t
l0000D500_ds_t:
	r8_665 = r8_665 >>u 1<i32>
l0000D500_ds_f:
	r8_1764 = r8_665 >>u 1<i32>
l0000D504:
	Mem679[r22 + 72<i32>:word32] = r6_656
	Mem689[r22 + 7112<i32>:word32] = r4_661
	r19_1466 = r19_1466 - r3_574
	r25_1538 = r8_1764
l0000D06C:
	Mem694[r22 + 4<i32>:word32] = 0x3F4C<32>
	word32 r9_1784 = 0x3F4C<32>
	branch Test(EQ,r26) l0000D078_ds_t
l0000D078_ds_t:
	word32 r4_761 = r29 - r26
l0000D078_thunk_fn0000F218:
	word32 r31_762 = fn0000F218()
	r3Out = r3_574
	r4Out = r4_761
	r7Out = r7_1743
	r8Out = r8_1764
	r9Out = 0x3F4C<32>
	r19Out = r19_1466
	r21Out = r21_1000
	r22Out = r22
	r23Out = r23
	r24Out = r24
	r25Out = r25_1538
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = r30
	r31Out = r31_762
	return r0
l0000D078_ds_f:
	word32 r4_763 = r29 - r26
l0000D07C:
	word32 r5_801
	word32 r3_767
	word32 r6_802
	word32 r5_764 = Mem694[r22 + 72<i32>:word32]
	branch r4_763 -u r5_764 >= 0<32> l0000D088_ds_t
l0000D088_ds_t:
l0000ED80:
	r3_767 = Mem694[r22 + 68<i32>:word32]
	r5_801 = r28 - r5_764
	r6_802 = r3_767
l0000D088_ds_f:
	word32 r4_803 = r5_764 - r4_763
l0000D08C:
	branch Mem694[r22 + 48<i32>:word32] -u r4_803 >= 0<32> l0000EC34
l0000D098:
	branch Test(EQ,Mem694[r22 + 7108<i32>:word32]) l0000D0A0_ds_t
l0000D0A0_ds_t:
	r31 = 0xFFFFFFFD<32>
l0000EC34:
	word32 r3_810 = Mem694[r22 + 52<i32>:word32]
	branch r3_810 -u r4_803 >= 0<32> l0000EC40_ds_t
l0000EC40_ds_t:
	word32 r5_813 = Mem694[r22 + 56<i32>:word32]
l0000EFB4:
	r5_801 = r5_813 + (r3_810 - r4_803)
l0000EC40_ds_f:
	word32 r5_816 = Mem694[r22 + 56<i32>:word32]
l0000EC44:
	r4_803 = r4_803 - r3_810
	r5_801 = r5_816 + (Mem694[r22 + 44<i32>:word32] - r4_803)
l0000EC54:
	r6_802 = Mem694[r22 + 68<i32>:word32]
	branch r4_803 -u r6_802 >= 0<32> l0000EC60_ds_t
l0000EC60_ds_t:
	r3_767 = r6_802
l0000EC60_ds_f:
l0000EC64:
	r3_767 = r4_803
l0000EC68:
	branch r26 -u r3_767 >= 0<32> l0000EC74
l0000EC70:
	r3_767 = r26
l0000EC74:
	word32 r4_853
	Mem841[r22 + 68<i32>:word32] = r6_802 - r3_767
	word32 r26_847 = r26 - r3_767
	branch r28 -u (r5_801 + 4<32>) >= 0<32> l0000EC8C_ds_t
l0000EC8C_ds_t:
	r4_853 = 1<32>
l0000EC8C_ds_f:
l0000EC90:
	r4_853 = 0<32>
l0000EC94:
	word32 r7_1738
	branch r5_801 -u (r28 + 4<32>) >= 0<32> l0000ECA0_ds_t
l0000ECA0_ds_t:
	r7_1738 = 1<32>
l0000ECA0_ds_f:
l0000ECA4:
	r7_1738 = 0<32>
l0000ECA8:
	word32 r6_871
	word32 r8_1767 = 9<32>
	word32 r4_867 = r4_853 | r7_1738
	branch 9<32> -u r3_767 < 0<32> l0000ECB8_ds_t
l0000ECB8_ds_t:
	r6_871 = 1<32>
l0000ECB8_ds_f:
l0000ECBC:
	r6_871 = 0<32>
l0000ECC0:
	word32 r4_903
	branch Test(EQ,r4_867 & r6_871 & 0xFF<32>) l0000ECCC_ds_t
l0000ECCC_ds_t:
l0000ECCC_ds_f:
	word32 r4_883 = r28 | r5_801
l0000ECD0:
	branch Test(NE,r4_883 & 3<32>) l0000ECD8_ds_t
l0000ECD8_ds_t:
l0000F1E0:
	word32 r4_886 = 0<32>
l0000F1E4:
	Mem894[r4_886 + r28:byte] = Mem889[r4_886 + r5_801:byte]
	r4_886 = r4_886 + 1<32>
	branch Test(NE,r3_767 ^ r4_886) l0000F1E4
l0000F1F8:
	r4_903 = Mem894[r22 + 68<i32>:word32]
l0000ECD8_ds_f:
	word32 r6_904 = 0<32>
l0000ECDC:
	word32 r7_905 = 0<32>
	word32 r4_911 = (r3_767 + 0xFFFFFFFC<32> >>u 2<i32>) + 1<32>
l0000ECF4:
	Mem919[r6_904 + r28:word32] = Mem914[r6_904 + r5_801:word32]
	r7_905 = r7_905 + 1<32>
	branch r7_905 -u r4_911 < 0<32> l0000ED08_ds_t
l0000ED08_ds_t:
	r6_904 = r6_904 + 4<32>
l0000ED08_ds_f:
l0000ED0C:
	r9_1784 = r3_767 ^ r4_911 * 4<32>
	r7_1738 = r28 + r4_911 * 4<32>
	word32 r6_929 = r3_767 - r4_911 * 4<32>
	branch Test(EQ,r9_1784) l0000ED24_ds_t
l0000ED24_ds_t:
	r8_1767 = r5_801 + r4_911 * 4<32>
l0000ED24_ds_f:
	r8_1767 = r5_801 + r4_911 * 4<32>
l0000ED28:
	Mem935[r4_911 * 4<32> + r28:byte] = Mem919[r4_911 * 4<32> + r5_801:byte]
	branch Test(EQ,r6_929 + 0xFFFFFFFF<32>) l0000ED38_ds_t
l0000ED38_ds_t:
l0000ED38_ds_f:
l0000ED3C:
	r9_1784 = CONVERT(Mem935[r8_1767 + 1<i32>:byte], byte, word32)
	branch Test(EQ,r6_929 ^ 2<32>) l0000ED44_ds_t
l0000ED44_ds_t:
	Mem942[r7_1738 + 1<i32>:byte] = SLICE(r9_1784, byte, 0)
l0000ED44_ds_f:
	Mem944[r7_1738 + 1<i32>:byte] = SLICE(r9_1784, byte, 0)
l0000ED48:
	r8_1767 = CONVERT(Mem944[r8_1767 + 2<i32>:byte], byte, word32)
	Mem948[r7_1738 + 2<i32>:byte] = SLICE(r8_1767, byte, 0)
l0000ED50:
	r4_903 = Mem951[r22 + 68<i32>:word32]
l0000ED54:
	branch Test(EQ,r4_903) l0000ED58_ds_t
l0000ED58_ds_t:
	word32 r28_958 = r28 + r3_767
l0000ED64:
	Mem961[r22 + 4<i32>:word32] = 0x3F48<32>
l0000ED68_thunk_fn0000EDD8:
	word32 r22_1842
	word32 r25_1845
	word32 r26_1846
	word32 r28_1847
	word32 r29_1848
	word32 r31_1849
	word32 r23_1843
	word32 r24_1844
	word32 r19_1840
	word32 r21_1841
	word32 r8_1838
	word32 r9_1839
	word32 r3_1836
	word32 r7_1837
	fn0000EDD8(r8, r19, r21, out r3_1836, out r7_1837, out r8_1838, out r9_1839, out r19_1840, out r21_1841, out r22_1842, out r23_1843, out r24_1844, out r25_1845, out r26_1846, out r28_1847, out r29_1848, out r31_1849)
	r3Out = r3_767
	r4Out = r4_903
	r7Out = 0x3F48<32>
	r8Out = r8_1767
	r9Out = r9_1784
	r19Out = r19_1466
	r21Out = r21_1000
	r22Out = r22
	r23Out = r23
	r24Out = r24
	r25Out = r25_1538
	r26Out = r26_847
	r27Out = r27
	r28Out = r28_958
	r29Out = r29
	r30Out = r30
	r31Out = r31
	return r0
l0000ED58_ds_f:
	word32 r28_962 = r28 + r3_767
l0000ED5C:
	word32 r4_964 = Mem963[r22 + 4<i32>:word32]
l0000ED5C_thunk_fn0000EDD8:
	word32 r31_1835
	word32 r29_1834
	word32 r26_1832
	word32 r28_1833
	word32 r22_1828
	word32 r24_1830
	word32 r25_1831
	word32 r23_1829
	word32 r19_1826
	word32 r21_1827
	word32 r3_1822
	word32 r8_1824
	word32 r9_1825
	word32 r7_1823
	fn0000EDD8(r8, r19, r21, out r3_1822, out r7_1823, out r8_1824, out r9_1825, out r19_1826, out r21_1827, out r22_1828, out r23_1829, out r24_1830, out r25_1831, out r26_1832, out r28_1833, out r29_1834, out r31_1835)
	r3Out = r3_767
	r4Out = r4_964
	r7Out = r7_1738
	r8Out = r8_1767
	r9Out = r9_1784
	r19Out = r19_1466
	r21Out = r21_1000
	r22Out = r22
	r23Out = r23
	r24Out = r24
	r25Out = r25_1538
	r26Out = r26_847
	r27Out = r27
	r28Out = r28_962
	r29Out = r29
	r30Out = r30
	r31Out = r31
	return r0
l0000D0A0_ds_f:
l0000D0A4:
	Mem976[r23 + 24<i32>:word32] = 0xFFFFA00C<32>
	Mem977[r22 + 4<i32>:word32] = 0x3F51<32>
l0000D0B4_thunk_fn0000D0B8:
	word32 r19_981
	word32 r21_982
	word32 r22_983
	word32 r23_984
	word32 r24_985
	word32 r25_986
	word32 r26_987
	word32 r27_988
	word32 r28_989
	word32 r29_990
	word32 r3_991
	word32 r31_992
	word32 r4_993
	word32 r7_996
	word32 r9_997
	word32 r0_978 = fn0000D0B8(out r3_991, out r4_993, out r7_996, out r9_997, out r19_981, out r21_982, out r22_983, out r23_984, out r24_985, out r25_986, out r26_987, out r27_988, out r28_989, out r29_990, out r31_992)
	r3Out = r3_991
	r4Out = r4_993
	r7Out = r7_996
	r8Out = r8_1764
	r9Out = r9_997
	r19Out = r19_981
	r21Out = r21_982
	r22Out = r22_983
	r23Out = r23_984
	r24Out = r24_985
	r25Out = r25_986
	r26Out = r26_987
	r27Out = r27_988
	r28Out = r28_989
	r29Out = r29_990
	r30Out = r30
	r31Out = r31_992
	return r0_978
l0000CFAC_ds_f:
l0000CFB0:
	branch Test(EQ,r21_1000) l0000CFB4_ds_t
l0000CFB4_ds_t:
l0000CFB4_thunk_fn0000D0B8:
	word32 r19_1010
	word32 r21_1011
	word32 r22_1012
	word32 r23_1013
	word32 r24_1014
	word32 r25_1015
	word32 r26_1016
	word32 r27_1017
	word32 r28_1018
	word32 r29_1019
	word32 r3_1020
	word32 r31_1021
	word32 r4_1022
	word32 r7_1025
	word32 r9_1026
	word32 r0_1007 = fn0000D0B8(out r3_1020, out r4_1022, out r7_1025, out r9_1026, out r19_1010, out r21_1011, out r22_1012, out r23_1013, out r24_1014, out r25_1015, out r26_1016, out r27_1017, out r28_1018, out r29_1019, out r31_1021)
	r3Out = r3_1020
	r4Out = r4_1022
	r7Out = r7_1025
	r8Out = r8_172
	r9Out = r9_1026
	r19Out = r19_1010
	r21Out = r21_1011
	r22Out = r22_1012
	r23Out = r23_1013
	r24Out = r24_1014
	r25Out = r25_1015
	r26Out = r26_1016
	r27Out = r27_1017
	r28Out = r28_1018
	r29Out = r29_1019
	r30Out = r30
	r31Out = r31_1021
	return r0_1007
l0000CFB4_ds_f:
l0000CFB8:
	word32 r3_1041
	word32 r24_1035 = r24 + 1<32>
	word32 r4_1037 = CONVERT(Mem235[r24_1035 - 1<i32>:byte], byte, word32)
	word32 r21_1038 = r21_1000 + 0xFFFFFFFF<32>
	word32 r18_1039 = r19_122 & 0x1F<32>
	branch Test(EQ,r18_1039) l0000CFD0_ds_t
l0000CFD0_ds_t:
	r3_1041 = r4_1037
l0000CFD0_ds_f:
	word32 r3_1042 = r4_1037
l0000CFD4:
	r18_1039 = r18_1039 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1039) l0000CFDC_ds_t
l0000CFDC_ds_t:
	r3_1042 = r3_1042 * 2<32>
l0000CFDC_ds_f:
	r3_1041 = r3_1042 * 2<32>
l0000CFE0:
	word32 r25_1051 = r25_168 + r3_1041
	word32 r3_1054 = r25_1051 & r7_249
	word32 r4_1063 = CONVERT(Mem235[r6_238 + r3_1054 * 4<32> + 1<i32>:byte], byte, word32)
	word32 r19_1066 = r19_122 + 8<32>
	word32 r3_1070 = CONVERT(Mem235[r3_1054 * 4<32> + r6_238:byte], byte, word32)
l0000D004_thunk_fn0000D008:
	word32 r24_1818
	word32 r26_1820
	word32 r31_1821
	word32 r25_1819
	word32 r22_1816
	word32 r23_1817
	word32 r3_1813
	word32 r19_1814
	word32 r21_1815
	fn0000D008(r18, out r3_1813, out r19_1814, out r21_1815, out r22_1816, out r23_1817, out r24_1818, out r25_1819, out r26_1820, out r31_1821)
	r3Out = r3_1070
	r4Out = r4_1063
	r7Out = r7_249
	r8Out = r8_172
	r9Out = r9
	r19Out = r19_1066
	r21Out = r21_1038
	r22Out = r22
	r23Out = r23
	r24Out = r24_1035
	r25Out = r25_1051
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = r30
	r31Out = r21_1000
	return r0
fn0000CEF4_exit:


word32 fn0000D008(word32 r18, ptr32 & r3Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CEE4
//      fn0002FFD0
// MayUse:  r18:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r3 r31
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r28 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000D008_entry:
	word32 r4
	word32 r0
	word32 r3
	word32 r5
	word32 r7
	word32 r19
	word32 r21
	word32 r22
	word32 r23
	word32 r24
	word32 r25
	word32 r26
	word32 r28
	word32 r29
l0000D008:
	branch Test(LT,r18) l0000D00C_ds_t
l0000D00C_ds_t:
l0000D00C_thunk_fn0000CEE4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg32 = <invalid>
	word32 stackArg36 = <invalid>
	word32 r3_11
	word32 r22_14
	word32 r25_16
	word32 r19_17
	word32 r26_19
	word32 r31_21
	word32 r23_22
	word32 r21_23
	word32 r24_24
	word32 r7_113
	word32 r8_114
	word32 r9_115
	word32 r28_116
	word32 r29_117
	word32 r0_26 = fn0000CEE4(r0, r3, r4, r5, r7, r19, r21, r22, r23, r24, r25, r26, r28, r29, stackArg32, stackArg36, out r3_11, out r7_113, out r8_114, out r9_115, out r19_17, out r21_23, out r22_14, out r23_22, out r24_24, out r25_16, out r26_19, out r28_116, out r29_117, out r31_21)
	r3Out = r3_11
	r19Out = r19_17
	r21Out = r21_23
	r22Out = r22_14
	r23Out = r23_22
	r24Out = r24_24
	r25Out = r25_16
	r26Out = r26_19
	r31Out = r31_21
	return r0_26
l0000D00C_ds_f:
l0000D00C_thunk_fn0000CEE4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg32 = <invalid>
	word32 stackArg36 = <invalid>
	word32 r3_38
	word32 r22_41
	word32 r25_43
	word32 r19_44
	word32 r26_46
	word32 r31_48
	word32 r23_49
	word32 r21_50
	word32 r24_51
	word32 r7_120
	word32 r8_121
	word32 r9_122
	word32 r28_123
	word32 r29_124
	word32 r0_53 = fn0000CEE4(r0, r3, r4, r5, r7, r19, r21, r22, r23, r24, r25, r26, r28, r29, stackArg32, stackArg36, out r3_38, out r7_120, out r8_121, out r9_122, out r19_44, out r21_50, out r22_41, out r23_49, out r24_51, out r25_43, out r26_46, out r28_123, out r29_124, out r31_48)
	r3Out = r3_38
	r19Out = r19_44
	r21Out = r21_50
	r22Out = r22_41
	r23Out = r23_49
	r24Out = r24_51
	r25Out = r25_43
	r26Out = r26_46
	r31Out = r31_48
	return r0_53
fn0000D008_exit:


word32 fn0000D0B8(ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DE38
//      fn0000F4D8
// MayUse: 
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31 r4 r7 r9
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31 r4 r5 r6 r7 r9
// Preserved: r1
fn0000D0B8_entry:
	word32 r8
l0000D0B8_thunk_fn0000F4D8:
	word32 r22_31
	word32 r3_32
	word32 r28_33
	word32 r23_34
	word32 r26_35
	word32 r24_36
	word32 r21_37
	word32 r25_38
	word32 r19_39
	word32 r29_40
	word32 r27_42
	word32 r31_45
	word32 r4_46
	word32 r7_49
	word32 r9_50
	word32 r0_41 = fn0000F4D8(r8, r22, out r3_32, out r4_46, out r7_49, out r9_50, out r19_39, out r21_37, out r22_31, out r23_34, out r24_36, out r25_38, out r26_35, out r27_42, out r28_33, out r29_40, out r31_45)
	r3Out = r3_32
	r4Out = r4_46
	r7Out = r7_49
	r9Out = r9_50
	r19Out = r19_39
	r21Out = r21_37
	r22Out = r22_31
	r23Out = r23_34
	r24Out = r24_36
	r25Out = r25_38
	r26Out = r26_35
	r27Out = r27_42
	r28Out = r28_33
	r29Out = r29_40
	r31Out = r31_45
	return r0_41
fn0000D0B8_exit:


word32 fn0000D0BC(word32 r0, word32 r3, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r26Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000D0B8
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31]
// LiveOut: r0 r19 r22 r23 r26 r29 r3 r31 r7 r9
// Trashed: r0 r15 r18 r19 r22 r23 r26 r29 r3 r31 r4 r5 r6 r7 r9
// Preserved: C r1
fn0000D0BC_entry:
l0000D0BC:
	Mem51[r23 + 12<i32>:word32] = r28
	Mem53[r23 + 16<i32>:word32] = r26
	Mem55[r23:word32] = r24
	Mem57[r23 + 4<i32>:word32] = r21
	Mem60[r22 + 60<i32>:word32] = r25
	branch Test(NE,r3) l0000D0D4_ds_t
l0000D0D4_ds_t:
	Mem63[r22 + 64<i32>:word32] = r19
l0000D0D4_thunk_fn0000D18C:
	word32 r19_69
	word32 r22_70
	word32 r23_71
	word32 r26_72
	word32 r29_73
	word32 r3_74
	word32 r31_75
	word32 r7_79
	word32 r9_80
	word32 r0_66 = fn0000D18C(r0, r23, r26, r29, out r3_74, out r7_79, out r9_80, out r19_69, out r22_70, out r23_71, out r26_72, out r29_73, out r31_75)
	r3Out = r3_74
	r7Out = r7_79
	r9Out = r9_80
	r19Out = r19_69
	r22Out = r22_70
	r23Out = r23_71
	r26Out = r26_72
	r29Out = r29_73
	r31Out = r31_75
	return r0_66
l0000D0D4_ds_f:
	Mem81[r22 + 64<i32>:word32] = r19
l0000D0D4_thunk_fn0000D0D8:
	word32 r3_83
	word32 r19_88
	word32 r22_89
	word32 r23_90
	word32 r26_91
	word32 r29_92
	word32 r31_93
	word32 r7_96
	word32 r9_97
	word32 r0_85 = fn0000D0D8(r0, r22, r23, r26, r27, r29, out r3_83, out r7_96, out r9_97, out r19_88, out r22_89, out r23_90, out r26_91, out r29_92, out r31_93)
	r3Out = r3_83
	r7Out = r7_96
	r9Out = r9_97
	r19Out = r19_88
	r22Out = r22_89
	r23Out = r23_90
	r26Out = r26_91
	r29Out = r29_92
	r31Out = r31_93
	return r0_85
fn0000D0BC_exit:


word32 fn0000D0D8(word32 r0, word32 r22, word32 r23, word32 r26, word32 r27, word32 r29, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r26Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D0BC
//      fn0000DB74
// MayUse:  r0:[0..31] r22:[0..31] r23:[0..31] r26:[0..31] r27:[0..31] r29:[0..31]
// LiveOut: r0 r19 r22 r23 r26 r29 r3 r31 r7 r9
// Trashed: C r0 r15 r18 r19 r22 r23 r26 r29 r3 r31 r4 r5 r6 r7 r9
// Preserved: r1
fn0000D0D8_entry:
	word32 r19
	word32 r31
	word32 r7
	word32 r9
	word32 r3
	word32 r4
	word32 r8
	word32 r28
	word32 r30
l0000D0D8:
	word32 r3_5 = r29 ^ r26
	branch Test(EQ,r3_5) l0000D0E0_ds_t
l0000D0E0_ds_t:
l0000D0E0_thunk_fn0000D1CC:
	word32 r23_126
	word32 r26_127
	word32 r29_128
	fn0000D1CC(r0, r3, r4, r5, r7, r8, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_126, out r26_127, out r29_128)
	r3Out = r3_5
	r7Out = r7
	r9Out = r9
	r19Out = r19
	r22Out = r22
	r23Out = r23
	r26Out = r26
	r29Out = r29
	r31Out = r31
	return r0
l0000D0E0_ds_f:
l0000D0E4:
	word32 r3_10 = Mem0[r22 + 4<i32>:word32]
	branch 0x3F50<32> -u r3_10 < 0<32> l0000D0F0_ds_t
l0000D0F0_ds_t:
l0000D0F0_thunk_fn0000D1CC:
	word32 r23_123
	word32 r26_124
	word32 r29_125
	fn0000D1CC(r0, r3, r4, r5, r7, r8, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_123, out r26_124, out r29_125)
	r3Out = r3_10
	r7Out = r7
	r9Out = r9
	r19Out = r19
	r22Out = r22
	r23Out = r23
	r26Out = r26
	r29Out = r29
	r31Out = r31
	return r0
l0000D0F0_ds_f:
l0000D0F4:
	branch Test(NE,(-(r27 ^ 4<32>) | r27 ^ 4<32>) >>u 31<i32>) l0000D180_ds_t
l0000D180_ds_t:
l0000D180_thunk_fn0000D18C:
	word32 r19_55
	word32 r22_56
	word32 r23_57
	word32 r26_58
	word32 r29_59
	word32 r3_60
	word32 r31_61
	word32 r7_65
	word32 r9_66
	word32 r0_52 = fn0000D18C(r0, r23, r26, r29, out r3_60, out r7_65, out r9_66, out r19_55, out r22_56, out r23_57, out r26_58, out r29_59, out r31_61)
	r3Out = r3_60
	r7Out = r7_65
	r9Out = r9_66
	r19Out = r19_55
	r22Out = r22_56
	r23Out = r23_57
	r26Out = r26_58
	r29Out = r29_59
	r31Out = r31_61
	return r0_52
l0000D180_ds_f:
l0000D180_thunk_fn0000D184:
	word32 r19_71
	word32 r22_72
	word32 r23_73
	word32 r26_74
	word32 r29_75
	word32 r3_76
	word32 r31_77
	word32 r7_81
	word32 r9_82
	word32 r0_69 = fn0000D184(r0, r3_10, 0x3F4D<32>, r23, r26, r29, out r3_76, out r7_81, out r9_82, out r19_71, out r22_72, out r23_73, out r26_74, out r29_75, out r31_77)
	r3Out = r3_76
	r7Out = r7_81
	r9Out = r9_82
	r19Out = r19_71
	r22Out = r22_72
	r23Out = r23_73
	r26Out = r26_74
	r29Out = r29_75
	r31Out = r31_77
	return r0_69
fn0000D0D8_exit:


word32 fn0000D120(word32 r0, word32 r3, word32 r5, word32 r23, word32 r26, word32 r29, ptr32 & r19Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r23:[0..31] r26:[0..31] r29:[0..31] r3:[0..31] r5:[0..31]
// LiveOut: r0 r19 r23
// Trashed: C r0 r15 r18 r19 r22 r23 r26 r29 r3 r31 r4 r5 r6 r7 r9
// Preserved: r1
fn0000D120_entry:
l0000D120:
	branch Test(NE,r5 >>u 23<i32>) l0000D180_ds_t
l0000D180_ds_t:
l0000D180_thunk_fn0000D18C:
	word32 r19_36
	word32 r23_38
	word32 r3_84
	word32 r7_85
	word32 r9_86
	word32 r22_87
	word32 r26_88
	word32 r29_89
	word32 r31_90
	word32 r0_33 = fn0000D18C(r0, r23, r26, r29, out r3_84, out r7_85, out r9_86, out r19_36, out r22_87, out r23_38, out r26_88, out r29_89, out r31_90)
	r19Out = r19_36
	r23Out = r23_38
	return r0_33
l0000D180_ds_f:
l0000D180_thunk_fn0000D184:
	word32 r19_53
	word32 r23_55
	word32 r3_91
	word32 r7_92
	word32 r9_93
	word32 r22_94
	word32 r26_95
	word32 r29_96
	word32 r31_97
	word32 r0_51 = fn0000D184(r0, r3, 0x3F4D<32>, r23, r26, r29, out r3_91, out r7_92, out r9_93, out r19_53, out r22_94, out r23_55, out r26_95, out r29_96, out r31_97)
	r19Out = r19_53
	r23Out = r23_55
	return r0_51
fn0000D120_exit:


word32 fn0000D184(word32 r0, word32 r3, word32 r4, word32 r23, word32 r26, word32 r29, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r26Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D0D8
//      fn0000D120
// MayUse:  r0:[0..31] r23:[0..31] r26:[0..31] r29:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r0 r19 r22 r23 r26 r29 r3 r31 r7 r9
// Trashed: r0 r15 r18 r19 r22 r23 r26 r29 r3 r31 r4 r5 r6 r7 r9
// Preserved: r1
fn0000D184_entry:
	word32 r19
	word32 r22
	word32 r31
	word32 r7
	word32 r9
	word32 r8
	word32 r27
	word32 r28
	word32 r30
l0000D184:
	branch r4 -u r3 < 0<32> l0000D24C
l0000D188_thunk_fn0000D1CC:
	word32 r23_62
	word32 r26_63
	word32 r29_64
	fn0000D1CC(r0, r3, r4, r5, r7, r8, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_62, out r26_63, out r29_64)
	r3Out = r3
	r7Out = r7
	r9Out = r9
	r19Out = r19
	r22Out = r22
	r23Out = r23
	r26Out = r26
	r29Out = r29
	r31Out = r31
	return r0
l0000D188_thunk_fn0000D18C:
	word32 r19_13
	word32 r22_14
	word32 r23_15
	word32 r26_16
	word32 r29_17
	word32 r3_18
	word32 r31_19
	word32 r7_23
	word32 r9_24
	word32 r0_10 = fn0000D18C(r0, r23, r26, r29, out r3_18, out r7_23, out r9_24, out r19_13, out r22_14, out r23_15, out r26_16, out r29_17, out r31_19)
	r3Out = r3_18
	r7Out = r7_23
	r9Out = r9_24
	r19Out = r19_13
	r22Out = r22_14
	r23Out = r23_15
	r26Out = r26_16
	r29Out = r29_17
	r31Out = r31_19
	return r0_10
fn0000D184_exit:


word32 fn0000D18C(word32 r0, word32 r23, word32 r26, word32 r29, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r26Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D0BC
//      fn0000D120
//      fn0000DB74
// MayUse:  r0:[0..31] r23:[0..31] r26:[0..31] r29:[0..31]
// LiveOut: r0 r19 r22 r23 r26 r29 r3 r31 r7 r9
// Trashed: r0 r15 r18 r19 r22 r23 r26 r29 r3 r31 r4 r5 r6 r7 r9
// Preserved: r1
fn0000D18C_entry:
	word32 r22
	word32 r3
	word32 r31
	word32 r9
	word32 r4
	word32 r5
	word32 r7
	word32 r8
	word32 r19
	word32 r27
	word32 r28
	word32 r30
l0000D18C:
	word32 r31_51
	word32 r3_44
	word32 r29_40
	word32 r26_41
	word32 r23_37
	word32 r22_50
	word32 r0_45
	word32 r19_38 = Mem0[r23 + 28<i32>:word32]
	branch Test(EQ,Mem0[r19_38 + 56<i32>:word32]) l0000D198_ds_t
l0000D198_ds_t:
	word32 r26_9 = r29 - r26
l0000DE4C:
	word32 r9_15
	word32 r6_10 = Mem0[r19_38 + 40<i32>:word32]
	word32 r18_13 = r6_10 & 0x1F<32>
	branch Test(EQ,r6_10 & 0x1F<32>) l0000DE64_ds_t
l0000DE64_ds_t:
	r9_15 = 1<32>
l0000DE64_ds_f:
	word32 r9_16 = 1<32>
l0000DE68:
	r18_13 = r18_13 + 0xFFFFFFFF<32>
	branch Test(NE,r18_13) l0000DE70_ds_t
l0000DE70_ds_t:
	r9_16 = r9_16 * 2<32>
l0000DE70_ds_f:
	r9_15 = r9_16 * 2<32>
l0000DE74:
	word32 r3_26 = Mem0[r23 + 32<i32>:word32]
	word32 r7_42
	word32 r18_46
	call 0x0000DE78<p32> + r3_26 (retsize: 0;)
		uses: r0:r0_45,r15:0x0000DE78<p32>,r18:r18_46,r22:r22_50,r23:r23,r26:r26_9,r29:r29,r3:r3_26,r31:r31_51,r6:r9_28,r9:r9_48
		defs: r0:r0_45,r18:r18_46,r19:r19_38,r22:r22_50,r23:r23_37,r26:r26_41,r29:r29_40,r3:r3_44,r31:r31_51,r7:r7_42,r9:r9_48
	Mem52[r19_38 + 56<i32>:word32] = r3_44
	branch Test(NE,r3_44) l0000DE88_ds_t
l0000DE88_ds_t:
l0000DE88_ds_f:
l0000DE8C:
	Mem56[r22_50 + 4<i32>:word32] = 0x3F52<32>
l0000DE94_thunk_fn0000D1CC:
	word32 r23_134
	word32 r26_135
	word32 r29_136
	fn0000D1CC(r0, r3, r4, r5, r7, r8, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_134, out r26_135, out r29_136)
	r3Out = r3_44
	r7Out = r7_42
	r9Out = r9
	r19Out = r19_38
	r22Out = r22_50
	r23Out = r23_37
	r26Out = r26_41
	r29Out = r29_40
	r31Out = 0xFFFFFFFC<32>
	return r0_45
l0000D198_ds_f:
	r26_41 = r29 - r26
	r0_45 = r0
	r22_50 = r22
	r23_37 = r23
	r29_40 = r29
	r3_44 = r3
	r31_51 = r31
l0000D19C:
	word32 r7_61 = Mem60[r19_38 + 44<i32>:word32]
	branch Test(NE,r7_61) l0000D1A4_ds_t
l0000D1A4_ds_t:
l0000D1A4_thunk_fn0000D1CC:
	word32 r23_131
	word32 r26_132
	word32 r29_133
	fn0000D1CC(r0, r3, r4, r5, r7, r8, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_131, out r26_132, out r29_133)
	r3Out = r3_44
	r7Out = r7_61
	r9Out = r9
	r19Out = r19_38
	r22Out = r22_50
	r23Out = r23_37
	r26Out = r26_41
	r29Out = r29_40
	r31Out = r31_51
	return r0_45
l0000D1A4_ds_f:
l0000D1A8:
	word32 r3_64 = Mem60[r19_38 + 40<i32>:word32]
	Mem67[r19_38 + 52<i32>:word32] = r0_45
	branch Test(EQ,r3_64 & 0x1F<32>) l0000D1BC_ds_t
l0000D1BC_ds_t:
l0000D1BC_thunk_fn0000D1CC:
	word32 r23_128
	word32 r26_129
	word32 r29_130
	fn0000D1CC(r0, r3, r4, r5, r7, r8, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_128, out r26_129, out r29_130)
	r3Out = r3_64
	r7Out = 1<32>
	r9Out = r9
	r19Out = r19_38
	r22Out = r22_50
	r23Out = r23_37
	r26Out = r26_41
	r29Out = r29_40
	r31Out = r31_51
	return r0_45
l0000D1BC_ds_f:
l0000D1BC_thunk_fn0000D1C0:
	word32 r23_125
	word32 r26_126
	word32 r29_127
	fn0000D1C0(r0, r3, r4, r5, r7, r8, r18, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_125, out r26_126, out r29_127)
	r3Out = r3_64
	r7Out = 1<32>
	r9Out = r9
	r19Out = r19_38
	r22Out = r22_50
	r23Out = r23_37
	r26Out = r26_41
	r29Out = r29_40
	r31Out = r31_51
	return r0_45
fn0000D18C_exit:


word32 fn0000D1B0(word32 r0, word32 r3, word32 r4, word32 r5, word32 r8, word32 r19, word32 r22, word32 r23, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, ptr32 & r23Out, ptr32 & r26Out, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31] r8:[0..31]
// LiveOut: r23 r26 r29 r3
// Trashed: C r10 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r9
// Preserved: r1
fn0000D1B0_entry:
l0000D1B0:
	branch Test(EQ,r3 & 0x1F<32>) l0000D1BC_ds_t
l0000D1BC_ds_t:
l0000D1BC_thunk_fn0000D1CC:
	word32 r23_26
	word32 r26_29
	word32 r29_32
	word32 r3_33 = fn0000D1CC(r0, r3, r4, r5, r4, r8, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_26, out r26_29, out r29_32)
	r23Out = r23_26
	r26Out = r26_29
	r29Out = r29_32
	return r3_33
l0000D1BC_ds_f:
l0000D1BC_thunk_fn0000D1C0:
	word32 r23_48
	word32 r26_51
	word32 r29_54
	word32 r3_55 = fn0000D1C0(r0, r3, r4, r5, r4, r8, r3 & 0x1F<32>, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_48, out r26_51, out r29_54)
	r23Out = r23_48
	r26Out = r26_51
	r29Out = r29_54
	return r3_55
fn0000D1B0_exit:


word32 fn0000D1C0(word32 r0, word32 r3, word32 r4, word32 r5, word32 r7, word32 r8, word32 r18, word32 r19, word32 r22, word32 r23, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, ptr32 & r23Out, ptr32 & r26Out, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D1B0
//      fn0000DB74
// MayUse:  r0:[0..31] r18:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r23 r26 r29 r3
// Trashed: C r10 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r9
// Preserved: r1
fn0000D1C0_entry:
l0000D1C0:
	r18 = r18 + 0xFFFFFFFF<32>
	branch Test(NE,r18) l0000D1C8_ds_t
l0000D1C8_ds_t:
	r7 = r7 * 2<32>
l0000D1C8_ds_f:
	word32 r7_7 = r7 * 2<32>
l0000D1C8_thunk_fn0000D1CC:
	word32 r23_42
	word32 r26_45
	word32 r29_48
	word32 r3_49 = fn0000D1CC(r0, r3, r4, r5, r7_7, r8, r19, r22, r23, r26, r27, r28, r29, r30, r31, out r23_42, out r26_45, out r29_48)
	r23Out = r23_42
	r26Out = r26_45
	r29Out = r29_48
	return r3_49
fn0000D1C0_exit:


word32 fn0000D1CC(word32 r0, word32 r3, word32 r4, word32 r5, word32 r7, word32 r8, word32 r19, word32 r22, word32 r23, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, ptr32 & r23Out, ptr32 & r26Out, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D1B0
//      fn0000DB74
// MayUse:  r0:[0..31] r19:[0..31] r22:[0..31] r23:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r23 r26 r29 r3
// Trashed: C r10 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r9
// Preserved: r1 r7 r8
fn0000D1CC_entry:
l0000D1CC:
	Mem5[r19 + 48<i32>:word32] = r0
	Mem7[r19 + 44<i32>:word32] = r7
l0000D1D4:
	word32 r21_110
	word32 r26_104
	branch r26 -u r7 >= 0<32> l0000DCDC
l0000DCDC:
	word32 r4_409
	word32 r9_410
	word32 r10_411
	fn00008C34(r3, r4, r5, r28 - r7, r7, r8, out r4_409, out r9_410, out r10_411)
	word32 r3_23 = Mem7[r19 + 44<i32>:word32]
	Mem24[r19 + 52<i32>:word32] = r0
	r21_110 = Mem24[r23 + 4<i32>:word32]
	Mem27[r19 + 48<i32>:word32] = r3_23
	r26_104 = Mem27[r23 + 16<i32>:word32]
l0000D1DC:
	word32 r24_32
	word32 r3_29 = Mem7[r19 + 52<i32>:word32]
	word32 r7_30 = r7 - r3_29
	branch r7_30 -u r26 >= 0<32> l0000D1EC_ds_t
l0000D1EC_ds_t:
	r24_32 = r26
l0000D1EC_ds_f:
l0000D1F0:
	r24_32 = r7_30
l0000D1F4:
	word32 r26_44 = r26 - r24_32
	word32 r4_49
	word32 r10_400
	word32 r9_399
	word32 r3_48 = fn00008C34(r3_29, r4, r5 + r3_29, r28 - r26, r24_32, r8, out r4_49, out r9_399, out r10_400)
	branch Test(NE,r26_44) l0000D210_ds_t
l0000D210_ds_t:
l0000DF50:
	word32 r4_406
	word32 r9_407
	word32 r10_408
	fn00008C34(r3_48, r4_49, Mem7[r19 + 56<i32>:word32], r28 - r26_44, r26_44, r8, out r4_406, out r9_407, out r10_408)
	word32 r4_65 = Mem7[r19 + 44<i32>:word32]
	Mem66[r19 + 52<i32>:word32] = r26_44
	r21_110 = Mem66[r23 + 4<i32>:word32]
	Mem69[r19 + 48<i32>:word32] = r4_65
	r26_104 = Mem69[r23 + 16<i32>:word32]
l0000D210_ds_f:
l0000D214:
	word32 r4_73 = Mem7[r19 + 44<i32>:word32]
	word32 r3_74 = r24_32 + Mem7[r19 + 52<i32>:word32]
	Mem75[r19 + 52<i32>:word32] = r3_74
	word32 r3_76 = r3_74 ^ r4_73
	branch Test(NE,r3_76) l0000D230
l0000D22C:
	Mem77[r19 + 52<i32>:word32] = r3_76
l0000D230:
	word32 r3_80 = Mem79[r19 + 48<i32>:word32]
	r21_110 = Mem79[r23 + 4<i32>:word32]
	branch r3_80 -u r4_73 >= 0<32> l0000D240_ds_t
l0000D240_ds_t:
	r26_104 = Mem79[r23 + 16<i32>:word32]
l0000D240_ds_f:
	r26_104 = Mem79[r23 + 16<i32>:word32]
l0000D244:
	Mem89[r19 + 48<i32>:word32] = r24_32 + r3_80
l0000D24C:
	word32 r21_111 = r30 - r21_110
	word32 r26_105 = r29 - r26_104
	word32 r4_98 = Mem91[r22 + 32<i32>:word32]
	word32 r6_99 = Mem91[r22 + 12<i32>:word32]
	word32 r5_113 = Mem91[r23 + 8<i32>:word32] + r21_111
	Mem114[r23 + 20<i32>:word32] = Mem91[r23 + 20<i32>:word32] + r26_105
	Mem115[r23 + 8<i32>:word32] = r5_113
	word32 r4_116 = r4_98 + r26_105
	branch Test(EQ,r6_99 >>u 2<i32> & 1<32>) l0000D28C_ds_t
l0000D28C_ds_t:
	Mem121[r22 + 32<i32>:word32] = r4_116
l0000D28C_ds_f:
	Mem122[r22 + 32<i32>:word32] = r4_116
l0000D290:
	branch Test(GE,-r26_105 | r26_105) l0000D2C8
l0000D29C:
	word32 r3_133
	word32 r5_127 = Mem122[r22 + 28<i32>:word32]
	word32 r6_128 = Mem122[r23 + 12<i32>:word32] - r26_105
	branch Test(EQ,Mem122[r22 + 20<i32>:word32]) l0000D2B0_ds_t
l0000D2B0_ds_t:
l0000DFE4:
	r3_133 = fn00015318(r5_127, r6_128, r26_105)
	Mem141[r22 + 28<i32>:word32] = r3_133
l0000D2B0_ds_f:
l0000D2B4:
	word32 r6_402
	word32 r19_403
	word32 r24_404
	word32 r25_405
	word32 r4_401
	r3_133 = fn00007044(r19, r21_111, r22, r23, out r4_401, out r6_402, out r19_403, out r21_111, out r22, out r23, out r24_404, out r25_405, out r26_105, out r27, out r31)
	Mem165[r22 + 28<i32>:word32] = r3_133
l0000D2C4:
	Mem168[r23 + 48<i32>:word32] = r3_133
l0000D2C8:
	word32 r6_173
	branch Test(EQ,Mem171[r22 + 8<i32>:word32]) l0000D2D0_ds_t
l0000D2D0_ds_t:
	r6_173 = Mem171[r22 + 64<i32>:word32]
l0000D2D0_ds_f:
	word32 r6_174 = Mem171[r22 + 64<i32>:word32]
l0000D2D4:
	r6_173 = r6_174 + 0x40<32>
l0000D2D8:
	word32 r4_178 = Mem171[r22 + 4<i32>:word32]
	word32 r3_179 = r4_178 ^ 0x3F3F<32>
	branch Test(EQ,r4_178 ^ 0x3F3F<32>) l0000DCD4
l0000DCD4:
	r6_173 = r6_173 + 0x80<32>
l0000D2E4:
	word32 r5_185 = ~(-(r4_178 ^ 0x3F47<32>) | r4_178 ^ 0x3F47<32>)
	r3_179 = r5_185 >>u 31<i32>
	branch Test(NE,r5_185 >>u 31<i32>) l0000D378_ds_t
l0000D378_ds_t:
l0000D378_ds_f:
l0000D37C:
	branch Test(LT,-(r4_178 ^ 0x3F42<32>) | r4_178 ^ 0x3F42<32>) l0000D38C
l0000D388:
	r3_179 = 0x100<32>
l0000D38C:
	word32 r21_233 = r21_111 | r26_105
	word32 r3_237 = r3_179 + r6_173
	branch Test(GE,-r21_233 | r21_233) l0000D3A0_ds_t
l0000D3A0_ds_t:
	Mem244[r23 + 44<i32>:word32] = r3_237
l0000D3A0_ds_f:
	Mem245[r23 + 44<i32>:word32] = r3_237
l0000D3A4:
	word32 r27_255 = r27 ^ 4<32>
	branch Test(LT,-r27_255 | r27_255) l0000D3B4_ds_t
l0000D3B4_ds_t:
l0000D3B4_thunk_fn0000CCE8:
	word32 r23_273
	word32 r26_276
	word32 r29_279
	word32 r3_280 = fn0000CCE8(out r23_273, out r26_276, out r29_279)
	r23Out = r23_273
	r26Out = r26_276
	r29Out = r29_279
	return r3_280
l0000D3B4_ds_f:
l0000D3B8:
	branch Test(NE,r31) l0000D3BC_ds_t
l0000D3BC_ds_t:
l0000D3BC_thunk_fn0000CCE8:
	word32 r23_291
	word32 r26_294
	word32 r29_297
	word32 r3_298 = fn0000CCE8(out r23_291, out r26_294, out r29_297)
	r23Out = r23_291
	r26Out = r26_294
	r29Out = r29_297
	return r3_298
l0000D3BC_ds_f:
l0000D3C0:
l0000D3C0_thunk_fn0000CCE8:
	word32 r23_308
	word32 r26_311
	word32 r29_314
	word32 r3_315 = fn0000CCE8(out r23_308, out r26_311, out r29_314)
	r23Out = r23_308
	r26Out = r26_311
	r29Out = r29_314
	return r3_315
fn0000D1CC_exit:


word32 fn0000D9D8(word32 r0, word32 r3, word32 r19, word32 r21, word32 r22, word32 r23, word32 r25, word32 r26, word32 r28, word32 r29, word32 r31, word32 dwArg20, word32 dwArg24, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r28Out, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r25:[0..31] r26:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r31:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r28 r29 r3 r4
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000D9D8_entry:
l0000D9D8:
	Mem7[r23 + 48<i32>:word32] = r3
	Mem10[r22 + 4<i32>:word32] = 0x3F3F<32>
l0000D9E4_thunk_fn0000D9E8:
	word32 r19_22
	word32 r21_23
	word32 r22_24
	word32 r23_25
	word32 r24_26
	word32 r25_27
	word32 r26_28
	word32 r28_30
	word32 r29_31
	word32 r3_32
	word32 r4_34
	word32 r7_59
	word32 r8_60
	word32 r9_61
	word32 r27_62
	word32 r30_63
	word32 r31_64
	word32 r0_19 = fn0000D9E8(r0, r19, r21, r22, r23, r25, r26, r28, r29, r31, dwArg20, dwArg24, out r3_32, out r4_34, out r7_59, out r8_60, out r9_61, out r19_22, out r21_23, out r22_24, out r23_25, out r24_26, out r25_27, out r26_28, out r27_62, out r28_30, out r29_31, out r30_63, out r31_64)
	r3Out = r3_32
	r4Out = r4_34
	r19Out = r19_22
	r21Out = r21_23
	r22Out = r22_24
	r23Out = r23_25
	r24Out = r24_26
	r25Out = r25_27
	r26Out = r26_28
	r28Out = r28_30
	r29Out = r29_31
	return r0_19
fn0000D9D8_exit:


word32 fn0000D9E8(word32 r0, word32 r19, word32 r21, word32 r22, word32 r23, word32 r25, word32 r26, word32 r28, word32 r29, word32 r31, word32 dwArg20, word32 dwArg24, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CEE4
//      fn0000D9D8
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r25:[0..31] r26:[0..31] r28:[0..31] r29:[0..31] r31:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1 r20
fn0000D9E8_entry:
	word32 r27
	word32 r30
	word32 r7
	word32 r8
	word32 r9
	r19_106 = r19
	r21_115 = r21
	r8_1144 = r8
l0000D9E8:
	word32 r8_1144
	word32 r21_115
	word32 r19_106
	branch 1<32> -u dwArg20 >= 0<32> l0000F778
l0000F778:
l0000F77C_thunk_fn0000D0B8:
	word32 r19_14
	word32 r21_15
	word32 r22_16
	word32 r23_17
	word32 r24_18
	word32 r25_19
	word32 r26_20
	word32 r27_21
	word32 r28_22
	word32 r29_23
	word32 r3_24
	word32 r31_25
	word32 r4_26
	word32 r7_29
	word32 r9_30
	word32 r0_11 = fn0000D0B8(out r3_24, out r4_26, out r7_29, out r9_30, out r19_14, out r21_15, out r22_16, out r23_17, out r24_18, out r25_19, out r26_20, out r27_21, out r28_22, out r29_23, out r31_25)
	r3Out = r3_24
	r4Out = r4_26
	r7Out = r7_29
	r8Out = r8_1144
	r9Out = r9_30
	r19Out = r19_14
	r21Out = r21_15
	r22Out = r22_16
	r23Out = r23_17
	r24Out = r24_18
	r25Out = r25_19
	r26Out = r26_20
	r27Out = r27_21
	r28Out = r28_22
	r29Out = r29_23
	r30Out = r30
	r31Out = r31_25
	return r0_11
l0000D9F8:
	word32 r3_32 = Mem4[r22 + 8<i32>:word32]
	branch Test(EQ,r3_32) l0000DA00_ds_t
l0000DA00_ds_t:
	word32 r24_110 = r31
l0000E13C:
	word32 r4_38
	branch 2<32> -u r19_106 < 0<32> l0000E148_ds_t
l0000E148_ds_t:
	r4_38 = r25 >>u 1<i32>
l0000E148_ds_f:
l0000E14C:
	branch Test(EQ,r21_115) l0000E150_ds_t
l0000E150_ds_t:
l0000F4F8:
l0000F4FC_thunk_fn0000D0B8:
	word32 r19_49
	word32 r21_50
	word32 r22_51
	word32 r23_52
	word32 r24_53
	word32 r25_54
	word32 r26_55
	word32 r27_56
	word32 r28_57
	word32 r29_58
	word32 r3_59
	word32 r31_60
	word32 r4_61
	word32 r7_64
	word32 r9_65
	word32 r0_46 = fn0000D0B8(out r3_59, out r4_61, out r7_64, out r9_65, out r19_49, out r21_50, out r22_51, out r23_52, out r24_53, out r25_54, out r26_55, out r27_56, out r28_57, out r29_58, out r31_60)
	r3Out = r3_59
	r4Out = r4_61
	r7Out = r7_64
	r8Out = r8_1144
	r9Out = r9_65
	r19Out = r19_49
	r21Out = r21_50
	r22Out = r22_51
	r23Out = r23_52
	r24Out = r24_53
	r25Out = r25_54
	r26Out = r26_55
	r27Out = r27_56
	r28Out = r28_57
	r29Out = r29_58
	r30Out = r30
	r31Out = r31_60
	return r0_46
l0000E150_ds_f:
l0000E154:
	word32 r4_73
	word32 r5_68 = CONVERT(Mem4[r31:byte], byte, word32)
	r21_115 = r21_115 + 0xFFFFFFFF<32>
	r24_110 = r31 + 1<32>
	word32 r18_71 = r19_106 & 0x1F<32>
	branch Test(EQ,r18_71) l0000E16C_ds_t
l0000E16C_ds_t:
	r4_73 = r5_68
l0000E16C_ds_f:
	word32 r4_74 = r5_68
l0000E170:
	r18_71 = r18_71 + 0xFFFFFFFF<32>
	branch Test(NE,r18_71) l0000E178_ds_t
l0000E178_ds_t:
	r4_74 = r4_74 * 2<32>
l0000E178_ds_f:
	r4_73 = r4_74 * 2<32>
l0000E17C:
	r25 = r25 + r4_73
	r19_106 = r19_106 + 8<32>
	r4_38 = r25 >>u 1<i32>
l0000E188:
	Mem96[r22 + 8<i32>:word32] = r25 & 1<32>
	word32 r4_92 = r4_38 & 3<32>
	branch Test(EQ,r4_92 ^ 2<32>) l0000E19C_ds_t
l0000E19C_ds_t:
l0000E398:
	word32 r4_113
	word32 r8_99 = r25 >>u 1<i32>
	Mem105[r22 + 4<i32>:word32] = 0x3F44<32>
	word32 r25_103 = r8_99 >>u 2<i32>
	word32 r19_107 = r19_106 + 0xFFFFFFFD<32>
	branch 0xD<32> -u r19_107 < 0<32> l0000E3C4_ds_t
l0000E3C4_ds_t:
	r4_113 = r24_110
l0000E3C4_ds_f:
l0000E3C8:
	branch Test(EQ,r21_115) l0000E3CC_ds_t
l0000E3CC_ds_t:
l0000E3CC_thunk_fn0000DCCC:
	fn0000DCCC()
	r3Out = r3_127
	r4Out = r24_110
	r7Out = r19_107 + 8<32>
	r8Out = r8_129
	r9Out = r9
	r19Out = r19_119
	r21Out = r21_120
	r22Out = r22_121
	r23Out = r23_122
	r24Out = r24_123
	r25Out = r25_124
	r26Out = r26_125
	r27Out = r27
	r28Out = r28_126
	r29Out = r29
	r30Out = r30
	r31Out = r31_128
	return r0
l0000E3CC_ds_f:
l0000E3D0:
	word32 r6_136
	word32 r4_132 = CONVERT(Mem105[r24_110:byte], byte, word32)
	word32 r5_133 = r21_115 + 0xFFFFFFFF<32>
	word32 r18_134 = r19_107 & 0x1F<32>
	branch Test(EQ,r19_107 & 0x1F<32>) l0000E3E4_ds_t
l0000E3E4_ds_t:
	r6_136 = r4_132
l0000E3E4_ds_f:
	word32 r6_137 = r4_132
l0000E3E8:
	r18_134 = r18_134 + 0xFFFFFFFF<32>
	branch Test(NE,r18_134) l0000E3F0_ds_t
l0000E3F0_ds_t:
	r6_137 = r6_137 * 2<32>
l0000E3F0_ds_f:
	r6_136 = r6_137 * 2<32>
l0000E3F4:
	r4_113 = r24_110 + 1<32>
	branch 0xD<32> -u (r19_107 + 8<32>) < 0<32> l0000E400_ds_t
l0000E400_ds_t:
	r25_103 = (r8_99 >>u 2<i32>) + r6_136
l0000F6C8:
	r19_107 = r19_107 + 8<32>
	r21_115 = r5_133
l0000E400_ds_f:
	word32 r25_159 = (r8_99 >>u 2<i32>) + r6_136
l0000E404:
	branch Test(EQ,r5_133) l0000F734
l0000F734:
l0000F740_thunk_fn0000D0B8:
	word32 r19_167
	word32 r21_168
	word32 r22_169
	word32 r23_170
	word32 r24_171
	word32 r25_172
	word32 r26_173
	word32 r27_174
	word32 r28_175
	word32 r29_176
	word32 r3_177
	word32 r31_178
	word32 r4_179
	word32 r7_182
	word32 r9_183
	word32 r0_164 = fn0000D0B8(out r3_177, out r4_179, out r7_182, out r9_183, out r19_167, out r21_168, out r22_169, out r23_170, out r24_171, out r25_172, out r26_173, out r27_174, out r28_175, out r29_176, out r31_178)
	r3Out = r3_177
	r4Out = r4_179
	r7Out = r7_182
	r8Out = r8_99 >>u 2<i32>
	r9Out = r9_183
	r19Out = r19_167
	r21Out = r21_168
	r22Out = r22_169
	r23Out = r23_170
	r24Out = r24_171
	r25Out = r25_172
	r26Out = r26_173
	r27Out = r27_174
	r28Out = r28_175
	r29Out = r29_176
	r30Out = r30
	r31Out = r31_178
	return r0_164
l0000E408:
	word32 r3_194
	word32 r5_187 = CONVERT(Mem105[r24_110 + 1<i32>:byte], byte, word32)
	r21_115 = r21_115 + 0xFFFFFFFE<32>
	r4_113 = r24_110 + 2<32>
	word32 r18_192 = r19_107 + 8<32> & 0x1F<32>
	branch Test(EQ,r18_192) l0000E420_ds_t
l0000E420_ds_t:
	r3_194 = r5_187
l0000E420_ds_f:
	word32 r3_195 = r5_187
l0000E424:
	r18_192 = r18_192 + 0xFFFFFFFF<32>
	branch Test(NE,r18_192) l0000E42C_ds_t
l0000E42C_ds_t:
	r3_195 = r3_195 * 2<32>
l0000E42C_ds_f:
	r3_194 = r3_195 * 2<32>
l0000E430:
	r19_107 = r19_107 + 0x10<32>
	r25_103 = r25_159 + r3_194
l0000E438:
	word32 r5_211 = r25_103 & 0x1F<32>
	Mem237[r22 + 100<i32>:word32] = r5_211 + 0x101<32>
	word32 r3_227 = r25_103 >>u 5<i32> & 0x1F<32>
	Mem238[r22 + 104<i32>:word32] = r3_227 + 1<32>
	word32 r6_228 = r25_103 >>u 10<i32> & 0xF<32>
	Mem239[r22 + 96<i32>:word32] = r6_228 + 4<32>
	word32 r9_241 = r25_103 >>u 1<i32>
	word32 r19_1494 = r19_107 + 0xFFFFFFF2<32>
	branch 0x1E<32> -u (r3_227 + 1<32>) < 0<32> l0000E4EC_ds_t
l0000E4EC_ds_t:
l0000E4EC_ds_f:
	word32 r25_1481 = r9_241 >>u 13<i32>
l0000E4F0:
	branch 0x11E<32> -u (r5_211 + 0x101<32>) < 0<32> l0000E4FC_ds_t
l0000E4FC_ds_t:
l0000ED70:
l0000ED78_thunk_fn0000DE38:
	fn0000DE38(0xFFFF9F20<32>, r22, r23)
	r3Out = r3_294
	r4Out = r4_296
	r7Out = r7_299
	r8Out = r8_99 >>u 2<i32>
	r9Out = r9_300
	r19Out = r19_284
	r21Out = r21_285
	r22Out = r22_286
	r23Out = r23_287
	r24Out = r24_288
	r25Out = r25_289
	r26Out = r26_290
	r27Out = r27_291
	r28Out = r28_292
	r29Out = r29_293
	r30Out = r30
	r31Out = r31_295
	return r0_281
l0000E4FC_ds_f:
l0000E500:
	word32 r6_1490
	Mem304[r22 + 108<i32>:word32] = 0<32>
	Mem305[r22 + 4<i32>:word32] = 0x3F45<32>
	word32 r24_1478 = r4_113
	word32 r5_1482 = 1<32>
	word32 r7_309 = 0xFFFFA958<32>
	branch 2<32> -u r19_1494 < 0<32> l0000E52C_ds_t
l0000E52C_ds_t:
	r6_1490 = r6_228 + 5<32>
l0000E52C_ds_f:
	r6_1490 = r6_228 + 5<32>
l0000E530:
	branch Test(EQ,r21_115) l0000E534_ds_t
l0000E534_ds_t:
l0000E534_thunk_fn0000D0B8:
	word32 r19_318
	word32 r21_319
	word32 r22_320
	word32 r23_321
	word32 r24_322
	word32 r25_323
	word32 r26_324
	word32 r27_325
	word32 r28_326
	word32 r29_327
	word32 r3_328
	word32 r31_329
	word32 r4_330
	word32 r7_333
	word32 r9_334
	word32 r0_315 = fn0000D0B8(out r3_328, out r4_330, out r7_333, out r9_334, out r19_318, out r21_319, out r22_320, out r23_321, out r24_322, out r25_323, out r26_324, out r27_325, out r28_326, out r29_327, out r31_329)
	r3Out = r3_328
	r4Out = r4_330
	r7Out = r7_333
	r8Out = 2<32>
	r9Out = r9_334
	r19Out = r19_318
	r21Out = r21_319
	r22Out = r22_320
	r23Out = r23_321
	r24Out = r24_322
	r25Out = r25_323
	r26Out = r26_324
	r27Out = r27_325
	r28Out = r28_326
	r29Out = r29_327
	r30Out = r30
	r31Out = r31_329
	return r0_315
l0000E534_ds_f:
l0000E538:
	word32 r3_345
	word32 r4_339 = CONVERT(Mem337[r24_1478:byte], byte, word32)
	r21_115 = r21_115 + 0xFFFFFFFF<32>
	r24_1478 = r24_1478 + 1<32>
	word32 r18_343 = r19_1494 & 0x1F<32>
	branch Test(EQ,r18_343) l0000E550_ds_t
l0000E550_ds_t:
	r3_345 = r4_339
l0000E550_ds_f:
	word32 r3_346 = r4_339
l0000E554:
	r18_343 = r18_343 + 0xFFFFFFFF<32>
	branch Test(NE,r18_343) l0000E55C_ds_t
l0000E55C_ds_t:
	r3_346 = r3_346 * 2<32>
l0000E55C_ds_f:
	r3_345 = r3_346 * 2<32>
l0000E560:
	r19_1494 = r19_1494 + 8<32>
	r25_1481 = r25_1481 + r3_345
l0000E568:
	word32 r3_368 = CONVERT(Mem364[r7_309:word16], word16, word32)
l0000E56C:
	Mem373[r22 + 108<i32>:word32] = r5_1482
	Mem379[(r3_368 + 0x3A<32>) * 2<32> + r22:word16] = SLICE(r25_1481, word16, 0) & 7<16>
	word32 r4_377 = r5_1482 + 1<32>
	r19_1494 = r19_1494 + 0xFFFFFFFD<32>
	r25_1481 = r25_1481 >>u 3<i32>
	branch Test(EQ,r6_1490 ^ r4_377) l0000E5A4_ds_t
l0000E5A4_ds_t:
l0000F504:
l0000E704:
	branch 0x12<32> -u r5_1482 < 0<32> l0000E710_ds_t
l0000E710_ds_t:
l0000E710_ds_f:
	word32 r3_395 = r5_1482 * 2<32>
l0000E714:
	word32 r3_397 = r3_395 + 0xFFFFA958<32>
l0000E724:
	word32 r4_401 = CONVERT(Mem399[r3_397:word16], word16, word32)
	r3_397 = r3_397 + 2<32>
	branch Test(NE,r3_397 ^ 0xFFFFA97E<32>) l0000E73C_ds_t
l0000E73C_ds_t:
	Mem410[(r4_401 + 0x3A<32>) * 2<32> + r22:word16] = SLICE(r0, word16, 0)
l0000E73C_ds_f:
	Mem412[(r4_401 + 0x3A<32>) * 2<32> + r22:word16] = SLICE(r0, word16, 0)
l0000E740:
	Mem414[r22 + 108<i32>:word32] = 0x13<32>
l0000E748:
	Mem418[r22 + 88<i32>:word32] = 7<32>
	Mem419[r22 + 112<i32>:word32] = r22 + 0x534<32>
	Mem420[r22 + 80<i32>:word32] = r22 + 0x534<32>
	word32 r3_442 = fn000109C0(r0, 0<32>, r22 + 0x74<32>, 0x13<32>, r22 + 0x70<32>, r22 + 0x58<32>, r22 + 0x2F4<32>)
	branch Test(EQ,r3_442) l0000E780_ds_t
l0000E780_ds_t:
l0000F748:
	Mem452[r22 + 4<i32>:word32] = 0x3F46<32>
	Mem454[r22 + 108<i32>:word32] = r3_442
l0000E84C:
	word32 r7_455 = Mem454[r22 + 100<i32>:word32]
l0000E858_thunk_fn0000EDD8:
	word32 r3_2075
	word32 r7_2076
	word32 r8_2077
	word32 r9_2078
	word32 r19_2079
	word32 r21_2080
	word32 r22_2081
	word32 r25_2084
	word32 r23_2082
	word32 r29_2087
	word32 r28_2086
	word32 r31_2088
	word32 r26_2085
	word32 r24_2083
	fn0000EDD8(r8, r19, r21, out r3_2075, out r7_2076, out r8_2077, out r9_2078, out r19_2079, out r21_2080, out r22_2081, out r23_2082, out r24_2083, out r25_2084, out r26_2085, out r28_2086, out r29_2087, out r31_2088)
	r3Out = r3_442
	r4Out = r4_443
	r7Out = r7_455
	r8Out = r8_446
	r9Out = r9_447
	r19Out = r19_1494
	r21Out = r21_115
	r22Out = r22
	r23Out = r23
	r24Out = r24_1478
	r25Out = r25_1481
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = r30
	r31Out = r3_442
	return r0
l0000E780_ds_f:
l0000E784:
	Mem466[r23 + 24<i32>:word32] = 0xFFFF9F44<32>
	Mem467[r22 + 4<i32>:word32] = 0x3F51<32>
l0000E798_thunk_fn0000D0B8:
	word32 r19_471
	word32 r21_472
	word32 r22_473
	word32 r23_474
	word32 r24_475
	word32 r25_476
	word32 r26_477
	word32 r27_478
	word32 r28_479
	word32 r29_480
	word32 r3_481
	word32 r31_482
	word32 r4_483
	word32 r7_486
	word32 r9_487
	word32 r0_468 = fn0000D0B8(out r3_481, out r4_483, out r7_486, out r9_487, out r19_471, out r21_472, out r22_473, out r23_474, out r24_475, out r25_476, out r26_477, out r27_478, out r28_479, out r29_480, out r31_482)
	r3Out = r3_481
	r4Out = r4_483
	r7Out = r7_486
	r8Out = r8_446
	r9Out = r9_487
	r19Out = r19_471
	r21Out = r21_472
	r22Out = r22_473
	r23Out = r23_474
	r24Out = r24_475
	r25Out = r25_476
	r26Out = r26_477
	r27Out = r27_478
	r28Out = r28_479
	r29Out = r29_480
	r30Out = r30
	r31Out = r31_482
	return r0_468
l0000E5A4_ds_f:
	r7_309 = r7_309 + 2<32>
l0000E5A8:
	branch 2<32> -u r19_1494 >= 0<32> l0000E5B0_ds_t
l0000E5B0_ds_t:
	r5_1482 = r4_377
l0000E5B0_ds_f:
	r5_1482 = r4_377
l0000E5B4:
	r3_368 = CONVERT(Mem379[r7_309:word16], word16, word32)
l0000E19C_ds_f:
l0000E1A0:
	branch Test(EQ,r4_92 ^ 3<32>) l0000E1A4_ds_t
l0000E1A4_ds_t:
l0000E364:
	Mem503[r23 + 24<i32>:word32] = 0xFFFF9EEC<32>
	Mem504[r22 + 4<i32>:word32] = 0x3F51<32>
l0000E390_thunk_fn0000D0B8:
	word32 r19_511
	word32 r21_512
	word32 r22_513
	word32 r23_514
	word32 r24_515
	word32 r25_516
	word32 r26_517
	word32 r27_518
	word32 r28_519
	word32 r29_520
	word32 r3_521
	word32 r31_522
	word32 r4_523
	word32 r7_526
	word32 r9_527
	word32 r0_508 = fn0000D0B8(out r3_521, out r4_523, out r7_526, out r9_527, out r19_511, out r21_512, out r22_513, out r23_514, out r24_515, out r25_516, out r26_517, out r27_518, out r28_519, out r29_520, out r31_522)
	r3Out = r3_521
	r4Out = r4_523
	r7Out = r7_526
	r8Out = r8_1144
	r9Out = r9_527
	r19Out = r19_511
	r21Out = r21_512
	r22Out = r22_513
	r23Out = r23_514
	r24Out = r24_515
	r25Out = r25_516
	r26Out = r26_517
	r27Out = r27_518
	r28Out = r28_519
	r29Out = r29_520
	r30Out = r30
	r31Out = r31_522
	return r0_508
l0000E1A4_ds_f:
l0000E1A8:
	branch Test(EQ,r4_92 ^ 1<32>) l0000E1AC_ds_t
l0000E1AC_ds_t:
l0000E5BC:
	Mem533[r22 + 88<i32>:word32] = 9<32>
	Mem540[r22 + 80<i32>:word32] = 0xFFFFA158<32>
	Mem541[r22 + 84<i32>:word32] = 0xFFFFA0D8<32>
	Mem542[r22 + 92<i32>:word32] = 5<32>
	branch Test(EQ,dwArg24) l0000E5F0_ds_t
l0000E5F0_ds_t:
	Mem543[r22 + 4<i32>:word32] = 0x3F47<32>
l0000FA54:
l0000FA6C_thunk_fn0000D0B8:
	word32 r19_557
	word32 r21_558
	word32 r22_559
	word32 r23_560
	word32 r24_561
	word32 r25_562
	word32 r26_563
	word32 r27_564
	word32 r28_565
	word32 r29_566
	word32 r3_567
	word32 r31_568
	word32 r4_569
	word32 r7_572
	word32 r9_573
	word32 r0_554 = fn0000D0B8(out r3_567, out r4_569, out r7_572, out r9_573, out r19_557, out r21_558, out r22_559, out r23_560, out r24_561, out r25_562, out r26_563, out r27_564, out r28_565, out r29_566, out r31_568)
	r3Out = r3_567
	r4Out = r4_569
	r7Out = r7_572
	r8Out = r8_1144
	r9Out = r9_573
	r19Out = r19_557
	r21Out = r21_558
	r22Out = r22_559
	r23Out = r23_560
	r24Out = r24_561
	r25Out = r25_562
	r26Out = r26_563
	r27Out = r27_564
	r28Out = r28_565
	r29Out = r29_566
	r30Out = r30
	r31Out = r31_568
	return r0_554
l0000E5F0_ds_f:
	Mem574[r22 + 4<i32>:word32] = 0x3F47<32>
l0000E5F4:
	word32 r25_579 = r25 >>u 3<i32>
	word32 r19_580 = r19_106 + 0xFFFFFFFD<32>
l0000E608_thunk_fn0000EDD8:
	word32 r3_2061
	word32 r22_2067
	word32 r7_2062
	word32 r8_2063
	word32 r9_2064
	word32 r19_2065
	word32 r21_2066
	word32 r24_2069
	word32 r25_2070
	word32 r28_2072
	word32 r23_2068
	word32 r31_2074
	word32 r26_2071
	word32 r29_2073
	fn0000EDD8(r8, r19, r21, out r3_2061, out r7_2062, out r8_2063, out r9_2064, out r19_2065, out r21_2066, out r22_2067, out r23_2068, out r24_2069, out r25_2070, out r26_2071, out r28_2072, out r29_2073, out r31_2074)
	r3Out = r3_32
	r4Out = dwArg24
	r7Out = 0x3F47<32>
	r8Out = r8_1144
	r9Out = 0xFFFFA158<32>
	r19Out = r19_580
	r21Out = r21_115
	r22Out = r22
	r23Out = r23
	r24Out = r24_110
	r25Out = r25_579
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = r30
	r31Out = r31
	return r0
l0000E1AC_ds_f:
l0000E1B0:
	word32 r7_595
	word32 r8_582 = r25 >>u 1<i32>
	Mem588[r22 + 4<i32>:word32] = 0x3F41<32>
	word32 r19_589 = r19_106 + 0xFFFFFFFD<32>
	word32 r8_1991 = r8_582 >>u 2<i32>
	word32 r18_593 = r19_589 & 7<32> & 0x1F<32>
	branch Test(EQ,r18_593) l0000E1E8_ds_t
l0000E1E8_ds_t:
	r7_595 = r8_582 >>u 2<i32>
l0000E1E8_ds_f:
	word32 r7_596 = r8_582 >>u 2<i32>
l0000E1EC:
	r18_593 = r18_593 + 0xFFFFFFFF<32>
	branch Test(NE,r18_593) l0000E1F4_ds_t
l0000E1F4_ds_t:
	r7_596 = r7_596 >>u 1<i32>
l0000E1F4_ds_f:
	r7_595 = r7_596 >>u 1<i32>
l0000E1F8:
	word32 r25_610
	branch 0x1F<32> -u (r19_589 & 0xFFFFFFF8<32>) < 0<32> l0000E200_ds_t
l0000E200_ds_t:
	r25_610 = r7_595
l0000E200_ds_f:
l0000E204:
	branch Test(EQ,r21_115) l0000E208_ds_t
l0000E208_ds_t:
l0000E208_thunk_fn0000DCCC:
	fn0000DCCC()
	r3Out = r3_623
	r4Out = r4_92 ^ 1<32>
	r7Out = r7_595
	r8Out = r8_625
	r9Out = r9
	r19Out = r19_615
	r21Out = r21_616
	r22Out = r22_617
	r23Out = r23_618
	r24Out = r24_619
	r25Out = r25_620
	r26Out = r26_621
	r27Out = r27
	r28Out = r28_622
	r29Out = r29
	r30Out = r30
	r31Out = r31_624
	return r0
l0000E208_ds_f:
	r8_1991 = (r19_589 & 0xFFFFFFF8<32>) + 8<32>
l0000E20C:
	word32 r4_636
	word32 r7_632 = CONVERT(Mem588[r24_110:byte], byte, word32)
	word32 r3_633 = r21_115 + 0xFFFFFFFF<32>
	word32 r18_634 = r19_589 & 0xFFFFFFF8<32> & 0x1F<32>
	branch Test(EQ,r18_634) l0000E220_ds_t
l0000E220_ds_t:
	r4_636 = r7_632
l0000E220_ds_f:
	word32 r4_637 = r7_632
l0000E224:
	r18_634 = r18_634 + 0xFFFFFFFF<32>
	branch Test(NE,r18_634) l0000E22C_ds_t
l0000E22C_ds_t:
	r4_637 = r4_637 * 2<32>
l0000E22C_ds_f:
	r4_636 = r4_637 * 2<32>
l0000E230:
	r24_110 = r24_110 + 1<32>
	branch 0x1F<32> -u r8_1991 < 0<32> l0000E23C_ds_t
l0000E23C_ds_t:
	r25_610 = r7_595 + r4_636
l0000F6F0:
	r21_115 = r3_633
l0000E23C_ds_f:
	word32 r25_661 = r7_595 + r4_636
l0000E240:
	branch Test(EQ,r3_633) l0000E244_ds_t
l0000E244_ds_t:
l0000F6FC:
l0000F704_thunk_fn0000D0B8:
	word32 r19_671
	word32 r21_672
	word32 r22_673
	word32 r23_674
	word32 r24_675
	word32 r25_676
	word32 r26_677
	word32 r27_678
	word32 r28_679
	word32 r29_680
	word32 r3_681
	word32 r31_682
	word32 r4_683
	word32 r7_686
	word32 r9_687
	word32 r0_668 = fn0000D0B8(out r3_681, out r4_683, out r7_686, out r9_687, out r19_671, out r21_672, out r22_673, out r23_674, out r24_675, out r25_676, out r26_677, out r27_678, out r28_679, out r29_680, out r31_682)
	r3Out = r3_681
	r4Out = r4_683
	r7Out = r7_686
	r8Out = r8_1991
	r9Out = r9_687
	r19Out = r19_671
	r21Out = r21_672
	r22Out = r22_673
	r23Out = r23_674
	r24Out = r24_675
	r25Out = r25_676
	r26Out = r26_677
	r27Out = r27_678
	r28Out = r28_679
	r29Out = r29_680
	r30Out = r30
	r31Out = r31_682
	return r0_668
l0000E244_ds_f:
	word32 r4_688 = r21_115 + 0xFFFFFFFE<32>
l0000E248:
	word32 r7_700
	word32 r9_694 = CONVERT(Mem588[r24_110 + 1<i32>:byte], byte, word32)
	word32 r3_697 = (r19_589 & 0xFFFFFFF8<32>) + 0x10<32>
	word32 r18_698 = r8_1991 & 0x1F<32>
	branch Test(EQ,r8_1991 & 0x1F<32>) l0000E25C_ds_t
l0000E25C_ds_t:
	r7_700 = r9_694
l0000E25C_ds_f:
	word32 r7_701 = r9_694
l0000E260:
	r18_698 = r18_698 + 0xFFFFFFFF<32>
	branch Test(NE,r18_698) l0000E268_ds_t
l0000E268_ds_t:
	r7_701 = r7_701 * 2<32>
l0000E268_ds_f:
	r7_700 = r7_701 * 2<32>
l0000E26C:
	r24_110 = r24_110 + 2<32>
	branch 0x1F<32> -u r3_697 < 0<32> l0000E278_ds_t
l0000E278_ds_t:
	r25_610 = r25_661 + r7_700
l0000F75C:
	r21_115 = r4_688
l0000E278_ds_f:
	word32 r25_723 = r25_661 + r7_700
l0000E27C:
	branch Test(EQ,r4_688) l0000E280_ds_t
l0000E280_ds_t:
l0000F768:
l0000F770_thunk_fn0000D0B8:
	word32 r19_733
	word32 r21_734
	word32 r22_735
	word32 r23_736
	word32 r24_737
	word32 r25_738
	word32 r26_739
	word32 r27_740
	word32 r28_741
	word32 r29_742
	word32 r3_743
	word32 r31_744
	word32 r4_745
	word32 r7_748
	word32 r9_749
	word32 r0_730 = fn0000D0B8(out r3_743, out r4_745, out r7_748, out r9_749, out r19_733, out r21_734, out r22_735, out r23_736, out r24_737, out r25_738, out r26_739, out r27_740, out r28_741, out r29_742, out r31_744)
	r3Out = r3_743
	r4Out = r4_745
	r7Out = r7_748
	r8Out = r8_1991
	r9Out = r9_749
	r19Out = r19_733
	r21Out = r21_734
	r22Out = r22_735
	r23Out = r23_736
	r24Out = r24_737
	r25Out = r25_738
	r26Out = r26_739
	r27Out = r27_740
	r28Out = r28_741
	r29Out = r29_742
	r30Out = r30
	r31Out = r31_744
	return r0_730
l0000E280_ds_f:
	word32 r9_750 = (r19_589 & 0xFFFFFFF8<32>) + 0x18<32>
l0000E284:
	word32 r7_760
	r8_1991 = CONVERT(Mem588[r24_110 + 2<i32>:byte], byte, word32)
	word32 r4_757 = r21_115 + 0xFFFFFFFD<32>
	word32 r18_758 = r3_697 & 0x1F<32>
	branch Test(EQ,r3_697 & 0x1F<32>) l0000E298_ds_t
l0000E298_ds_t:
	r7_760 = r8_1991
l0000E298_ds_f:
	word32 r7_761 = r8_1991
l0000E29C:
	r18_758 = r18_758 + 0xFFFFFFFF<32>
	branch Test(NE,r18_758) l0000E2A4_ds_t
l0000E2A4_ds_t:
	r7_761 = r7_761 * 2<32>
l0000E2A4_ds_f:
	r7_760 = r7_761 * 2<32>
l0000E2A8:
	r24_110 = r24_110 + 3<32>
	branch 0x1F<32> -u r9_750 < 0<32> l0000E2B4_ds_t
l0000E2B4_ds_t:
	r25_610 = r25_723 + r7_760
l0000F798:
	r21_115 = r4_757
l0000E2B4_ds_f:
	word32 r25_783 = r25_723 + r7_760
l0000E2B8:
	branch Test(EQ,r4_757) l0000F7A4
l0000F7A4:
l0000F7AC_thunk_fn0000D0B8:
	word32 r19_790
	word32 r21_791
	word32 r22_792
	word32 r23_793
	word32 r24_794
	word32 r25_795
	word32 r26_796
	word32 r27_797
	word32 r28_798
	word32 r29_799
	word32 r3_800
	word32 r31_801
	word32 r4_802
	word32 r7_805
	word32 r9_806
	word32 r0_787 = fn0000D0B8(out r3_800, out r4_802, out r7_805, out r9_806, out r19_790, out r21_791, out r22_792, out r23_793, out r24_794, out r25_795, out r26_796, out r27_797, out r28_798, out r29_799, out r31_801)
	r3Out = r3_800
	r4Out = r4_802
	r7Out = r7_805
	r8Out = r8_1991
	r9Out = r9_806
	r19Out = r19_790
	r21Out = r21_791
	r22Out = r22_792
	r23Out = r23_793
	r24Out = r24_794
	r25Out = r25_795
	r26Out = r26_796
	r27Out = r27_797
	r28Out = r28_798
	r29Out = r29_799
	r30Out = r30
	r31Out = r31_801
	return r0_787
l0000E2BC:
	word32 r3_817
	word32 r4_810 = CONVERT(Mem588[r24_110 + 3<i32>:byte], byte, word32)
	r21_115 = r21_115 + 0xFFFFFFFC<32>
	r24_110 = r24_110 + 4<32>
	word32 r18_815 = r9_750 & 0x1F<32>
	branch Test(EQ,r9_750 & 0x1F<32>) l0000E2D4_ds_t
l0000E2D4_ds_t:
	r3_817 = r4_810
l0000E2D4_ds_f:
	word32 r3_818 = r4_810
l0000E2D8:
	r18_815 = r18_815 + 0xFFFFFFFF<32>
	branch Test(NE,r18_815) l0000E2E0_ds_t
l0000E2E0_ds_t:
	r3_818 = r3_818 * 2<32>
l0000E2E0_ds_f:
	r3_817 = r3_818 * 2<32>
l0000E2E4:
	r25_610 = r25_783 + r3_817
l0000E2EC:
	word32 r4_853 = r25_610 ^ ~(r25_610 >>u 16<i32>)
	branch Test(EQ,r4_853) l0000E348_ds_t
l0000E348_ds_t:
	r9 = 0x3F51<32>
l0000F260:
	Mem882[r22 + 4<i32>:word32] = 0x3F42<32>
	branch Test(EQ,dwArg24) l0000F270_ds_t
l0000F270_ds_t:
	Mem883[r22 + 68<i32>:word32] = r25_610
l0000FA84:
l0000FA8C_thunk_fn0000D0B8:
	word32 r19_890
	word32 r21_891
	word32 r22_892
	word32 r23_893
	word32 r24_894
	word32 r25_895
	word32 r26_896
	word32 r27_897
	word32 r28_898
	word32 r29_899
	word32 r3_900
	word32 r31_901
	word32 r4_902
	word32 r7_905
	word32 r9_906
	word32 r0_887 = fn0000D0B8(out r3_900, out r4_902, out r7_905, out r9_906, out r19_890, out r21_891, out r22_892, out r23_893, out r24_894, out r25_895, out r26_896, out r27_897, out r28_898, out r29_899, out r31_901)
	r3Out = r3_900
	r4Out = r4_902
	r7Out = r7_905
	r8Out = r8_1991
	r9Out = r9_906
	r19Out = r19_890
	r21Out = r21_891
	r22Out = r22_892
	r23Out = r23_893
	r24Out = r24_894
	r25Out = r25_895
	r26Out = r26_896
	r27Out = r27_897
	r28Out = r28_898
	r29Out = r29_899
	r30Out = r30
	r31Out = r31_901
	return r0_887
l0000F270_ds_f:
	Mem907[r22 + 68<i32>:word32] = r25_610
l0000F274:
	r19_106 = r4_853
	r25 = r4_853
l0000E81C:
	Mem911[r22 + 4<i32>:word32] = 0x3F43<32>
	r7 = 0x3F43<32>
l0000E7A4:
	branch Test(EQ,r25_610) l0000E7A8_ds_t
l0000E7A8_ds_t:
	r8_1144 = 0x3F3F<32>
l0000E80C:
	Mem913[r22 + 4<i32>:word32] = 0x3F3F<32>
	r31 = r24_110
l0000E7A8_ds_f:
l0000E7AC:
	word32 r31_923
	branch r25_610 -u r21_115 >= 0<32> l0000E7B4_ds_t
l0000E7B4_ds_t:
	r31_923 = r21_115
l0000E7B4_ds_f:
l0000E7B8:
	r31_923 = r25_610
l0000E7BC:
	branch r26 -u r31_923 >= 0<32> l0000E7C8
l0000E7C4:
	r31_923 = r26
l0000E7C8:
	branch Test(EQ,r31_923) l0000E7CC_ds_t
l0000E7CC_ds_t:
l0000E7CC_thunk_fn0000D0B8:
	word32 r19_953
	word32 r21_954
	word32 r22_955
	word32 r23_956
	word32 r24_957
	word32 r25_958
	word32 r26_959
	word32 r27_960
	word32 r28_961
	word32 r29_962
	word32 r3_963
	word32 r31_964
	word32 r4_965
	word32 r7_968
	word32 r9_969
	word32 r0_950 = fn0000D0B8(out r3_963, out r4_965, out r7_968, out r9_969, out r19_953, out r21_954, out r22_955, out r23_956, out r24_957, out r25_958, out r26_959, out r27_960, out r28_961, out r29_962, out r31_964)
	r3Out = r3_963
	r4Out = r4_965
	r7Out = r7_968
	r8Out = 0x3F3F<32>
	r9Out = r9_969
	r19Out = r19_953
	r21Out = r21_954
	r22Out = r22_955
	r23Out = r23_956
	r24Out = r24_957
	r25Out = r25_958
	r26Out = r26_959
	r27Out = r27_960
	r28Out = r28_961
	r29Out = r29_962
	r30Out = r30
	r31Out = r31_964
	return r0_950
l0000E7CC_ds_f:
l0000E7D0:
	word32 r10_2046
	word32 r4_2045
	word32 r9_1026
	fn00008C34(r25_610, r4_853, r28, r24_110, r31_923, 0x3F3F<32>, out r4_2045, out r9_1026, out r10_2046)
	word32 r3_1030 = Mem1011[r22 + 68<i32>:word32]
	word32 r31_1035 = r3_1030 - r31_923
	Mem1036[r22 + 68<i32>:word32] = r31_1035
	word32 r21_1015 = r21_115 - r31_923
	word32 r24_1031 = r24_110 + r31_923
	word32 r26_1033 = r26 - r31_923
	word32 r28_1034 = r28 + r31_923
	word32 r4_1037 = Mem1036[r22 + 4<i32>:word32]
l0000E804_thunk_fn0000EDD8:
	word32 r3_2047
	word32 r7_2048
	word32 r19_2051
	word32 r21_2052
	word32 r8_2049
	word32 r9_2050
	word32 r22_2053
	word32 r26_2057
	word32 r24_2055
	word32 r28_2058
	word32 r23_2054
	word32 r25_2056
	word32 r29_2059
	word32 r31_2060
	fn0000EDD8(r8, r19, r21, out r3_2047, out r7_2048, out r8_2049, out r9_2050, out r19_2051, out r21_2052, out r22_2053, out r23_2054, out r24_2055, out r25_2056, out r26_2057, out r28_2058, out r29_2059, out r31_2060)
	r3Out = r3_1030
	r4Out = r4_1037
	r7Out = r31_923
	r8Out = 0x3F3F<32>
	r9Out = r9_1026
	r19Out = r4_853
	r21Out = r21_1015
	r22Out = r22
	r23Out = r23
	r24Out = r24_1031
	r25Out = r4_853
	r26Out = r26_1033
	r27Out = r27
	r28Out = r28_1034
	r29Out = r29
	r30Out = r30
	r31Out = r31_1035
	return r0
l0000E348_ds_f:
l0000E34C:
	Mem1053[r23 + 24<i32>:word32] = 0xFFFF9F00<32>
	Mem1054[r22 + 4<i32>:word32] = 0x3F51<32>
l0000E35C_thunk_fn0000D0B8:
	word32 r19_1058
	word32 r21_1059
	word32 r22_1060
	word32 r23_1061
	word32 r24_1062
	word32 r25_1063
	word32 r26_1064
	word32 r27_1065
	word32 r28_1066
	word32 r29_1067
	word32 r3_1068
	word32 r31_1069
	word32 r4_1070
	word32 r7_1073
	word32 r9_1074
	word32 r0_1055 = fn0000D0B8(out r3_1068, out r4_1070, out r7_1073, out r9_1074, out r19_1058, out r21_1059, out r22_1060, out r23_1061, out r24_1062, out r25_1063, out r26_1064, out r27_1065, out r28_1066, out r29_1067, out r31_1069)
	r3Out = r3_1068
	r4Out = r4_1070
	r7Out = r7_1073
	r8Out = 0xFFFF9F00<32>
	r9Out = r9_1074
	r19Out = r19_1058
	r21Out = r21_1059
	r22Out = r22_1060
	r23Out = r23_1061
	r24Out = r24_1062
	r25Out = r25_1063
	r26Out = r26_1064
	r27Out = r27_1065
	r28Out = r28_1066
	r29Out = r29_1067
	r30Out = r30
	r31Out = r31_1069
	return r0_1055
l0000DA00_ds_f:
l0000DA04:
	word32 r5_1079
	word32 r3_1076 = r19_106 & 7<32>
	word32 r18_1077 = r3_1076 & 0x1F<32>
	branch Test(EQ,r3_1076 & 0x1F<32>) l0000DA14_ds_t
l0000DA14_ds_t:
	r5_1079 = r25
l0000DA14_ds_f:
	word32 r5_1080 = r25
l0000DA18:
	r18_1077 = r18_1077 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1077) l0000DA20_ds_t
l0000DA20_ds_t:
	r5_1080 = r5_1080 >>u 1<i32>
l0000DA20_ds_f:
	r5_1079 = r5_1080 >>u 1<i32>
l0000DA24:
	Mem1096[r22 + 4<i32>:word32] = 0x3F4E<32>
	word32 r25_1089 = r5_1079
	word32 r19_1093 = r19_106 & 0xFFFFFFF8<32>
	word32 r4_1097 = Mem1096[r22 + 12<i32>:word32]
	branch Test(EQ,r4_1097) l0000DA3C_ds_t
l0000DA3C_ds_t:
l0000DA3C_thunk_fn0000DD14:
	fn0000DD14(r4_1097, 0x3F4F<32>, r19_1093, r21_115, r22, r23, r31, r5_1079)
	r3Out = r3_1113
	r4Out = r4_1121
	r7Out = r7_1124
	r8Out = r8_1115
	r9Out = r9_1125
	r19Out = r19_1105
	r21Out = r21_1106
	r22Out = r22_1107
	r23Out = r23_1108
	r24Out = r24_1109
	r25Out = r25_1110
	r26Out = r26_1111
	r27Out = r27_1119
	r28Out = r28_1112
	r29Out = r29_1120
	r30Out = r30
	r31Out = r31_1114
	return r0_1116
l0000DA3C_ds_f:
l0000DA40:
	word32 r31_1129
	branch 0x1F<32> -u r19_1093 < 0<32> l0000F7C4
l0000F7C4:
	r31_1129 = r31
l0000DA4C:
	branch Test(EQ,r21_115) l0000DA50_ds_t
l0000DA50_ds_t:
l0000DA50_thunk_fn0000DCCC:
	fn0000DCCC()
	r3Out = r3_1139
	r4Out = r4_1097
	r7Out = r7
	r8Out = r8_1141
	r9Out = r9
	r19Out = r19_1131
	r21Out = r21_1132
	r22Out = r22_1133
	r23Out = r23_1134
	r24Out = r24_1135
	r25Out = r25_1136
	r26Out = r26_1137
	r27Out = r27
	r28Out = r28_1138
	r29Out = r29
	r30Out = r30
	r31Out = r31_1140
	return r0
l0000DA50_ds_f:
l0000DA54:
	word32 r7_1148
	r8_1144 = CONVERT(Mem1096[r31:byte], byte, word32)
	word32 r6_1145 = r21_115 + 0xFFFFFFFF<32>
	word32 r18_1146 = r19_1093 & 0x1F<32>
	branch Test(EQ,r19_1093 & 0x1F<32>) l0000DA68_ds_t
l0000DA68_ds_t:
	r7_1148 = r8_1144
l0000DA68_ds_f:
	word32 r7_1149 = r8_1144
l0000DA6C:
	r18_1146 = r18_1146 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1146) l0000DA74_ds_t
l0000DA74_ds_t:
	r7_1149 = r7_1149 * 2<32>
l0000DA74_ds_f:
	r7_1148 = r7_1149 * 2<32>
l0000DA78:
	r31_1129 = r31 + 1<32>
	branch 0x1F<32> -u (r19_1093 + 8<32>) < 0<32> l0000DA84_ds_t
l0000DA84_ds_t:
	r25_1089 = r5_1079 + r7_1148
l0000F820:
	r19_1093 = r19_1093 + 8<32>
	r21_115 = r6_1145
l0000DA84_ds_f:
	word32 r25_1171 = r5_1079 + r7_1148
l0000DA88:
	branch Test(EQ,r6_1145) l0000DA8C_ds_t
l0000DA8C_ds_t:
	word32 r7_1174 = r21_115 + 0xFFFFFFFE<32>
l0000DCC0:
l0000DCC8_thunk_fn0000DCCC:
	fn0000DCCC()
	r3Out = r3_1186
	r4Out = r4_1097
	r7Out = r7_1174
	r8Out = r8_1188
	r9Out = r9
	r19Out = r19_1178
	r21Out = r21_1179
	r22Out = r22_1180
	r23Out = r23_1181
	r24Out = r24_1182
	r25Out = r25_1183
	r26Out = r26_1184
	r27Out = r27
	r28Out = r28_1185
	r29Out = r29
	r30Out = r30
	r31Out = r31_1187
	return r0
l0000DA8C_ds_f:
	word32 r7_1189 = r21_115 + 0xFFFFFFFE<32>
l0000DA90:
	r9 = CONVERT(Mem1096[r31 + 1<i32>:byte], byte, word32)
	word32 r18_1197 = r19_1093 + 8<32> & 0x1F<32>
	branch Test(EQ,r18_1197) l0000DAA4_ds_t
l0000DAA4_ds_t:
	r8_1144 = r9
l0000DAA4_ds_f:
	word32 r8_1200 = r9
l0000DAA8:
	r18_1197 = r18_1197 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1197) l0000DAB0_ds_t
l0000DAB0_ds_t:
	r8_1200 = r8_1200 * 2<32>
l0000DAB0_ds_f:
	r8_1144 = r8_1200 * 2<32>
l0000DAB4:
	r31_1129 = r31 + 2<32>
	branch 0x1F<32> -u (r19_1093 + 0x10<32>) < 0<32> l0000DAC0_ds_t
l0000DAC0_ds_t:
	r25_1089 = r25_1171 + r8_1144
l0000F82C:
	r19_1093 = r19_1093 + 0x10<32>
	r21_115 = r7_1189
l0000DAC0_ds_f:
	word32 r25_1222 = r25_1171 + r8_1144
l0000DAC4:
	branch Test(EQ,r7_1189) l0000F838
l0000F838:
l0000F844_thunk_fn0000D0B8:
	word32 r19_1230
	word32 r21_1231
	word32 r22_1232
	word32 r23_1233
	word32 r24_1234
	word32 r25_1235
	word32 r26_1236
	word32 r27_1237
	word32 r28_1238
	word32 r29_1239
	word32 r3_1240
	word32 r31_1241
	word32 r4_1242
	word32 r7_1245
	word32 r9_1246
	word32 r0_1227 = fn0000D0B8(out r3_1240, out r4_1242, out r7_1245, out r9_1246, out r19_1230, out r21_1231, out r22_1232, out r23_1233, out r24_1234, out r25_1235, out r26_1236, out r27_1237, out r28_1238, out r29_1239, out r31_1241)
	r3Out = r3_1240
	r4Out = r4_1242
	r7Out = r7_1245
	r8Out = r8_1144
	r9Out = r9_1246
	r19Out = r19_1230
	r21Out = r21_1231
	r22Out = r22_1232
	r23Out = r23_1233
	r24Out = r24_1234
	r25Out = r25_1235
	r26Out = r26_1236
	r27Out = r27_1237
	r28Out = r28_1238
	r29Out = r29_1239
	r30Out = r30
	r31Out = r31_1241
	return r0_1227
l0000DAC8:
	r9 = CONVERT(Mem1096[r31 + 2<i32>:byte], byte, word32)
	word32 r7_1256 = r21_115 + 0xFFFFFFFD<32>
	word32 r18_1257 = r19_1093 + 0x10<32> & 0x1F<32>
	branch Test(EQ,r18_1257) l0000DAE0_ds_t
l0000DAE0_ds_t:
	r8_1144 = r9
l0000DAE0_ds_f:
	word32 r8_1260 = r9
l0000DAE4:
	r18_1257 = r18_1257 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1257) l0000DAEC_ds_t
l0000DAEC_ds_t:
	r8_1260 = r8_1260 * 2<32>
l0000DAEC_ds_f:
	r8_1144 = r8_1260 * 2<32>
l0000DAF0:
	r31_1129 = r31 + 3<32>
	branch 0x1F<32> -u (r19_1093 + 0x18<32>) < 0<32> l0000DAFC_ds_t
l0000DAFC_ds_t:
	r25_1089 = r25_1222 + r8_1144
l0000F86C:
	r19_1093 = r19_1093 + 0x18<32>
	r21_115 = r7_1256
l0000DAFC_ds_f:
	word32 r25_1282 = r25_1222 + r8_1144
l0000DB00:
	branch Test(EQ,r7_1256) l0000F858
l0000F858:
l0000F864_thunk_fn0000D0B8:
	word32 r19_1290
	word32 r21_1291
	word32 r22_1292
	word32 r23_1293
	word32 r24_1294
	word32 r25_1295
	word32 r26_1296
	word32 r27_1297
	word32 r28_1298
	word32 r29_1299
	word32 r3_1300
	word32 r31_1301
	word32 r4_1302
	word32 r7_1305
	word32 r9_1306
	word32 r0_1287 = fn0000D0B8(out r3_1300, out r4_1302, out r7_1305, out r9_1306, out r19_1290, out r21_1291, out r22_1292, out r23_1293, out r24_1294, out r25_1295, out r26_1296, out r27_1297, out r28_1298, out r29_1299, out r31_1301)
	r3Out = r3_1300
	r4Out = r4_1302
	r7Out = r7_1305
	r8Out = r8_1144
	r9Out = r9_1306
	r19Out = r19_1290
	r21Out = r21_1291
	r22Out = r22_1292
	r23Out = r23_1293
	r24Out = r24_1294
	r25Out = r25_1295
	r26Out = r26_1296
	r27Out = r27_1297
	r28Out = r28_1298
	r29Out = r29_1299
	r30Out = r30
	r31Out = r31_1301
	return r0_1287
l0000DB04:
	word32 r3_1317
	word32 r6_1310 = CONVERT(Mem1096[r31 + 3<i32>:byte], byte, word32)
	r21_115 = r21_115 + 0xFFFFFFFC<32>
	r31_1129 = r31 + 4<32>
	word32 r18_1315 = r19_1093 + 0x18<32> & 0x1F<32>
	branch Test(EQ,r18_1315) l0000DB1C_ds_t
l0000DB1C_ds_t:
	r3_1317 = r6_1310
l0000DB1C_ds_f:
	word32 r3_1318 = r6_1310
l0000DB20:
	r18_1315 = r18_1315 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1315) l0000DB28_ds_t
l0000DB28_ds_t:
	r3_1318 = r3_1318 * 2<32>
l0000DB28_ds_f:
	r3_1317 = r3_1318 * 2<32>
l0000DB2C:
	r19_1093 = r19_1093 + 0x20<32>
	r25_1089 = r25_1282 + r3_1317
l0000DB34:
	word32 r7_1394 = r29 - r26
	word32 r3_1396 = Mem1096[r22 + 32<i32>:word32] + r7_1394
	Mem1397[r23 + 20<i32>:word32] = Mem1096[r23 + 20<i32>:word32] + r7_1394
	Mem1398[r22 + 32<i32>:word32] = r3_1396
	branch Test(EQ,r4_1097 & 4<32>) l0000DB58_ds_t
l0000DB58_ds_t:
l0000DB58_thunk_fn0000DB90:
	fn0000DB90(r4_1097 & 4<32>)
	r3Out = r4_1097 & 4<32>
	r4Out = r4_1097
	r7Out = r7_1394
	r8Out = r8_1144
	r9Out = r9
	r19Out = r19_1093
	r21Out = r21_115
	r22Out = r22
	r23Out = r23
	r24Out = r31
	r25Out = r25_1089
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = r30
	r31Out = r31_1129
	return r0
l0000DB58_ds_f:
	word32 r5_1410 = -r7_1394
l0000DB5C:
	branch Test(GE,r5_1410 | r7_1394) l0000DB90
l0000DB60_thunk_fn0000DB90:
	fn0000DB90(r4_1097 & 4<32>)
	r3Out = r4_1097 & 4<32>
	r4Out = r4_1097
	r7Out = r7_1394
	r8Out = r8_1144
	r9Out = r9
	r19Out = r19_1093
	r21Out = r21_115
	r22Out = r22
	r23Out = r23
	r24Out = r31
	r25Out = r25_1089
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = r30
	r31Out = r31_1129
	return r0
l0000DB64:
	word32 r5_1413 = Mem1398[r22 + 28<i32>:word32]
	branch Test(EQ,Mem1398[r22 + 20<i32>:word32]) l0000DB70_ds_t
l0000DB70_ds_t:
	word32 r6_1425 = r28 - r7_1394
l0000F7F0:
	word32 r3_1429 = fn00015318(r5_1413, r6_1425, r7_1394)
	word32 r4_1437 = Mem1398[r22 + 12<i32>:word32]
l0000F7F8_thunk_fn0000DB84:
	r3Out = fn0000DB84(r3_1429, r4_1437, r22, r23)
	r4Out = r4_1437
	r7Out = r7_1433
	r8Out = r8_1434
	r9Out = r9_1435
	r19Out = r19_1093
	r21Out = r21_115
	r22Out = r22
	r23Out = r23
	r24Out = r31
	r25Out = r25_1089
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = r30
	r31Out = r31_1129
	return r0
l0000DB70_ds_f:
l0000DB70_thunk_fn0000DB74:
	word32 r24_1449
	r3Out = fn0000DB74(r19_1093, r21_115, r22, r23, out r24_1449)
	r4Out = r4_1458
	r7Out = r7_1461
	r8Out = r8_1144
	r9Out = r9
	r19Out = r19_1445
	r21Out = r21_1446
	r22Out = r22_1447
	r23Out = r23_1448
	r24Out = r24_1449
	r25Out = r25_1450
	r26Out = r26_1451
	r27Out = r27_1452
	r28Out = r28_1453
	r29Out = r29_1454
	r30Out = r30_1456
	r31Out = r31_1457
	return r0
fn0000D9E8_exit:


word32 fn0000DB74(word32 r19, word32 r21, word32 r22, word32 r23, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0002FFD0
// MayUse:  r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31]
// LiveOut: r24 r3
// Trashed: C r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7
// Preserved: r1
fn0000DB74_entry:
l0000DB74:
	word32 r22_12
	word32 r23_13
	word32 r24_14
	word32 r4_32
	word32 r6_33
	word32 r19_34
	word32 r21_35
	word32 r25_36
	word32 r26_37
	word32 r27_38
	word32 r31_39
	word32 r3_20 = fn00007044(r19, r21, r22, r23, out r4_32, out r6_33, out r19_34, out r21_35, out r22_12, out r23_13, out r24_14, out r25_36, out r26_37, out r27_38, out r31_39)
	word32 r4_29 = Mem0[r22_12 + 12<i32>:word32]
l0000DB80_thunk_fn0000DB84:
	word32 r3_30 = fn0000DB84(r3_20, r4_29, r22_12, r23_13)
	r24Out = r24_14
	return r3_30
fn0000DB74_exit:


word32 fn0000DB84(word32 r3, word32 r4, word32 r22, word32 r23)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DB74
// MayUse:  r22:[0..31] r23:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r3
// Trashed: r3
// Preserved: r1
fn0000DB84_entry:
l0000DB84:
	Mem6[r22 + 28<i32>:word32] = r3
	Mem8[r23 + 48<i32>:word32] = r3
l0000DB8C_thunk_fn0000DB90:
	fn0000DB90(r4 & 4<32>)
	return r4 & 4<32>
fn0000DB84_exit:


void fn0000DB90(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DB84
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed:
// Preserved: r1
fn0000DB90_entry:
	word32 r8
	word32 r22
	word32 r23
	word32 r25
l0000DB90:
	branch Test(EQ,r3) l0000DB90_thunk_fn0000DD00
l0000DB90_thunk_fn0000DD00:
	fn0000DD00()
	return
l0000DB90_thunk_fn0000DB94:
	fn0000DB94(r8, r22, r23, r25)
	return
fn0000DB90_exit:


void fn0000DB94(word32 r8, word32 r22, word32 r23, word32 r25)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DB74
//      fn0000DD00
// MayUse:  r22:[0..31] r23:[0..31] r25:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r19 r21 r22 r23 r24 r25 r26 r28 r29 r3 r31 r4 r5 r8
// Preserved: C r1 r6 r7
fn0000DB94_entry:
l0000DB94:
	word32 r3_7
	branch Test(NE,Mem0[r22 + 20<i32>:word32]) l0000DB9C_ds_t
l0000DB9C_ds_t:
	r3_7 = r25
l0000DB9C_ds_f:
l0000DBA0:
	word32 r7_41 = __rcr<word32,int32>(r25, 1<i32>, cond(r25 >>u 24<i32>))
	word32 r7_43 = __rcr<word32,int32>(r7_41, 1<i32>, cond(r7_41))
	word32 r7_45 = __rcr<word32,int32>(r7_43, 1<i32>, cond(r7_43))
	word32 r7_47 = __rcr<word32,int32>(r7_45, 1<i32>, cond(r7_45))
	word32 r7_49 = __rcr<word32,int32>(r7_47, 1<i32>, cond(r7_47))
	word32 r7_51 = __rcr<word32,int32>(r7_49, 1<i32>, cond(r7_49))
	word32 r7_53 = __rcr<word32,int32>(r7_51, 1<i32>, cond(r7_51))
	word32 r7_55 = __rcr<word32,int32>(r7_53, 1<i32>, cond(r7_53))
	r3_7 = (r25 >>u 24<i32>) + (__rcr<word32,int32>(r7_55, 1<i32>, cond(r7_55)) & 0xFF000000<32>) + (r25 >>u 8<i32> & 0xFFFFFF00<32>) + (r25 * 0x100<32> & 0xFF0000<32>)
l0000DC90:
	branch Test(EQ,Mem0[r22 + 28<i32>:word32] ^ r3_7) l0000DC9C_ds_t
l0000DC9C_ds_t:
l0000DC9C_thunk_fn0000DD00:
	fn0000DD00()
	return
l0000DC9C_ds_f:
l0000DCA0:
	Mem104[r23 + 24<i32>:word32] = 0xFFFFA02C<32>
	Mem105[r22 + 4<i32>:word32] = 0x3F51<32>
l0000DCB8_thunk_fn0000F4D8:
	word32 r3_152
	word32 r4_153
	word32 r7_154
	word32 r9_155
	word32 r19_156
	word32 r21_157
	word32 r22_158
	word32 r23_159
	word32 r24_160
	word32 r25_161
	word32 r26_162
	word32 r27_163
	word32 r28_164
	word32 r29_165
	word32 r31_166
	fn0000F4D8(r8, r22, out r3_152, out r4_153, out r7_154, out r9_155, out r19_156, out r21_157, out r22_158, out r23_159, out r24_160, out r25_161, out r26_162, out r27_163, out r28_164, out r29_165, out r31_166)
	return
fn0000DB94_exit:


void fn0000DCCC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DD20
// MayUse: 
// LiveOut:
// Trashed: r19 r21 r22 r23 r24 r25 r26 r28 r3 r31 r8
// Preserved: r1
fn0000DCCC_entry:
	word32 r19
	word32 r21
	word32 r23
	word32 r24
	word32 r25
l0000DCCC_thunk_fn0000DD20:
	fn0000DD20(r8, r19, r21, r22, r23, r24, r25)
	return
fn0000DCCC_exit:


void fn0000DD00()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DB94
// MayUse: 
// LiveOut:
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000DD00_entry:
	word32 r8
l0000DD00_thunk_fn0000DB94:
	fn0000DB94(r8, r22, r23, r25)
	return
fn0000DD00_exit:


void fn0000DD14(word32 r4, word32 r5, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DB74
// MayUse:  r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000DD14_entry:
l0000DD14:
	Mem46[r22 + 4<i32>:word32] = r5
	branch Test(EQ,r4) l0000DD1C_ds_t
l0000DD1C_ds_t:
l0000DD1C_thunk_fn0000F4D8:
	word32 r3_117
	word32 r4_118
	word32 r7_119
	word32 r9_120
	word32 r19_121
	word32 r21_122
	word32 r22_123
	word32 r23_124
	word32 r24_125
	word32 r25_126
	word32 r26_127
	word32 r27_128
	word32 r28_129
	word32 r29_130
	word32 r31_131
	fn0000F4D8(0x3F50<32>, r22, out r3_117, out r4_118, out r7_119, out r9_120, out r19_121, out r21_122, out r22_123, out r23_124, out r24_125, out r25_126, out r26_127, out r27_128, out r28_129, out r29_130, out r31_131)
	return
l0000DD1C_ds_f:
l0000DD1C_thunk_fn0000DD20:
	fn0000DD20(0x3F50<32>, r19, r21, r22, r23, r24, r25)
	return
fn0000DD14_exit:


void fn0000DD20(word32 r8, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000DB74
//      fn0000DCCC
//      fn0000DD14
// MayUse:  r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000DD20_entry:
l0000DD20:
	branch Test(EQ,Mem0[r22 + 20<i32>:word32]) l0000DD28_ds_t
l0000DD28_ds_t:
l0000DD28_thunk_fn0000F4D8:
	word32 r4_446
	word32 r9_448
	word32 r3_445
	word32 r7_447
	word32 r24_453
	word32 r22_451
	word32 r28_457
	word32 r26_455
	word32 r25_454
	word32 r27_456
	word32 r21_450
	word32 r23_452
	word32 r19_449
	word32 r29_458
	word32 r31_459
	fn0000F4D8(r8, r22, out r3_445, out r4_446, out r7_447, out r9_448, out r19_449, out r21_450, out r22_451, out r23_452, out r24_453, out r25_454, out r26_455, out r27_456, out r28_457, out r29_458, out r31_459)
	return
l0000DD28_ds_f:
l0000DD2C:
	branch 0x1F<32> -u r19 < 0<32> l0000DD34_ds_t
l0000DD34_ds_t:
l0000DD34_ds_f:
l0000DD38:
	branch Test(EQ,r21) l0000DD3C_ds_t
l0000DD3C_ds_t:
l0000DD3C_thunk_fn0000DCCC:
	fn0000DCCC()
	return
l0000DD3C_ds_f:
l0000DD40:
	word32 r7_50
	word32 r4_46 = CONVERT(Mem0[r24:byte], byte, word32)
	word32 r18_48 = r19 & 0x1F<32>
	branch Test(EQ,r19 & 0x1F<32>) l0000DD54_ds_t
l0000DD54_ds_t:
	r7_50 = r4_46
l0000DD54_ds_f:
	word32 r7_51 = r4_46
l0000DD58:
	r18_48 = r18_48 + 0xFFFFFFFF<32>
	branch Test(NE,r18_48) l0000DD60_ds_t
l0000DD60_ds_t:
	r7_51 = r7_51 * 2<32>
l0000DD60_ds_f:
	r7_50 = r7_51 * 2<32>
l0000DD64:
	branch 0x1F<32> -u (r19 + 8<32>) < 0<32> l0000DD70_ds_t
l0000DD70_ds_t:
	r25 = r25 + r7_50
l0000F400:
l0000DD70_ds_f:
	word32 r25_74 = r25 + r7_50
l0000DD74:
	branch Test(EQ,r21 + 0xFFFFFFFF<32>) l0000DD78_ds_t
l0000DD78_ds_t:
l0000F40C:
l0000F418_thunk_fn0000F4D8:
	word32 r9_433
	word32 r4_431
	word32 r7_432
	word32 r3_430
	word32 r22_436
	word32 r26_440
	word32 r24_438
	word32 r27_441
	word32 r28_442
	word32 r23_437
	word32 r25_439
	word32 r21_435
	word32 r19_434
	word32 r31_444
	word32 r29_443
	fn0000F4D8(r8, r22, out r3_430, out r4_431, out r7_432, out r9_433, out r19_434, out r21_435, out r22_436, out r23_437, out r24_438, out r25_439, out r26_440, out r27_441, out r28_442, out r29_443, out r31_444)
	return
l0000DD78_ds_f:
l0000DD7C:
	word32 r8_107
	word32 r4_101 = CONVERT(Mem0[r24 + 1<i32>:byte], byte, word32)
	word32 r18_105 = r19 + 8<32> & 0x1F<32>
	branch Test(EQ,r18_105) l0000DD90_ds_t
l0000DD90_ds_t:
	r8_107 = r4_101
l0000DD90_ds_f:
	word32 r8_108 = r4_101
l0000DD94:
	r18_105 = r18_105 + 0xFFFFFFFF<32>
	branch Test(NE,r18_105) l0000DD9C_ds_t
l0000DD9C_ds_t:
	r8_108 = r8_108 * 2<32>
l0000DD9C_ds_f:
	r8_107 = r8_108 * 2<32>
l0000DDA0:
	branch 0x1F<32> -u (r19 + 0x10<32>) < 0<32> l0000DDAC_ds_t
l0000DDAC_ds_t:
	r25 = r25_74 + r8_107
l0000F4BC:
l0000DDAC_ds_f:
	word32 r25_130 = r25_74 + r8_107
l0000DDB0:
	branch Test(EQ,r21 + 0xFFFFFFFE<32>) l0000F4E4
l0000F4E4:
l0000F4F0_thunk_fn0000F4D8:
	word32 r19_419
	word32 r31_429
	word32 r29_428
	word32 r21_420
	word32 r23_422
	word32 r25_424
	word32 r27_426
	word32 r28_427
	word32 r26_425
	word32 r24_423
	word32 r22_421
	word32 r7_417
	word32 r9_418
	word32 r3_415
	word32 r4_416
	fn0000F4D8(r8_107, r22, out r3_415, out r4_416, out r7_417, out r9_418, out r19_419, out r21_420, out r22_421, out r23_422, out r24_423, out r25_424, out r26_425, out r27_426, out r28_427, out r29_428, out r31_429)
	return
l0000DDB4:
	word32 r8_160
	word32 r4_151 = CONVERT(Mem0[r24 + 2<i32>:byte], byte, word32)
	word32 r18_158 = r19 + 0x10<32> & 0x1F<32>
	branch Test(EQ,r18_158) l0000DDCC_ds_t
l0000DDCC_ds_t:
	r8_160 = r4_151
l0000DDCC_ds_f:
	word32 r8_161 = r4_151
l0000DDD0:
	r18_158 = r18_158 + 0xFFFFFFFF<32>
	branch Test(NE,r18_158) l0000DDD8_ds_t
l0000DDD8_ds_t:
	r8_161 = r8_161 * 2<32>
l0000DDD8_ds_f:
	r8_160 = r8_161 * 2<32>
l0000DDDC:
	branch 0x1F<32> -u (r19 + 0x18<32>) < 0<32> l0000DDE8_ds_t
l0000DDE8_ds_t:
	r25 = r25_130 + r8_160
l0000F524:
l0000DDE8_ds_f:
	word32 r25_183 = r25_130 + r8_160
l0000DDEC:
	branch Test(EQ,r21 + 0xFFFFFFFD<32>) l0000F20C
l0000F20C:
l0000F214_thunk_fn0000F218:
	fn0000F218()
	return
l0000DDF0:
	word32 r3_198
	word32 r6_191 = CONVERT(Mem0[r24 + 3<i32>:byte], byte, word32)
	word32 r18_196 = r19 + 0x18<32> & 0x1F<32>
	branch Test(EQ,r18_196) l0000DE08_ds_t
l0000DE08_ds_t:
	r3_198 = r6_191
l0000DE08_ds_f:
	word32 r3_199 = r6_191
l0000DE0C:
	r18_196 = r18_196 + 0xFFFFFFFF<32>
	branch Test(NE,r18_196) l0000DE14_ds_t
l0000DE14_ds_t:
	r3_199 = r3_199 * 2<32>
l0000DE14_ds_f:
	r3_198 = r3_199 * 2<32>
l0000DE18:
	r25 = r25_183 + r3_198
l0000DE20:
	branch Test(EQ,Mem0[r22 + 32<i32>:word32] ^ r25) l0000F4C8
l0000F4C8:
l0000F4D4_thunk_fn0000F4D8:
	word32 r29_413
	word32 r31_414
	word32 r27_411
	word32 r28_412
	word32 r25_409
	word32 r26_410
	word32 r23_407
	word32 r24_408
	word32 r4_401
	word32 r9_403
	word32 r21_405
	word32 r22_406
	word32 r19_404
	word32 r7_402
	word32 r3_400
	fn0000F4D8(0x3F50<32>, r22, out r3_400, out r4_401, out r7_402, out r9_403, out r19_404, out r21_405, out r22_406, out r23_407, out r24_408, out r25_409, out r26_410, out r27_411, out r28_412, out r29_413, out r31_414)
	return
l0000DE2C:
l0000DE34_thunk_fn0000DE38:
	fn0000DE38(0xFFFFA044<32>, r22, r23)
	return
fn0000DD20_exit:


void fn0000DE38(word32 r6, word32 r22, word32 r23)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DD20
// MayUse:  r22:[0..31] r23:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31 r4 r5 r6 r7 r9
// Preserved: r1
fn0000DE38_entry:
l0000DE38:
	Mem18[r23 + 24<i32>:word32] = r6
	Mem21[r22 + 4<i32>:word32] = 0x3F51<32>
l0000DE44_thunk_fn0000D0B8:
	word32 r4_45
	word32 r3_44
	word32 r7_46
	word32 r9_47
	word32 r19_48
	word32 r21_49
	word32 r22_50
	word32 r23_51
	word32 r24_52
	word32 r25_53
	word32 r26_54
	word32 r27_55
	word32 r28_56
	word32 r29_57
	word32 r31_58
	fn0000D0B8(out r3_44, out r4_45, out r7_46, out r9_47, out r19_48, out r21_49, out r22_50, out r23_51, out r24_52, out r25_53, out r26_54, out r27_55, out r28_56, out r29_57, out r31_58)
	return
fn0000DE38_exit:


word32 fn0000EDD8(word32 r8, word32 r19, word32 r21, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CEE4
//      fn0000EE08
//      fn0000EE14
// MayUse:  r19:[0..31] r21:[0..31] r8:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r28 r29 r3 r31 r7 r8 r9
// Trashed: r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r28 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved: C r1
fn0000EDD8_entry:
	word32 r0
	word32 r29
	word32 r7
	word32 r9
l0000EDD8:
	branch Test(EQ,r21) l0000EDD8_thunk_fn0000DCCC
l0000EDD8_thunk_fn0000DCCC:
	fn0000DCCC()
	r3Out = r3_12
	r7Out = r7
	r8Out = r8_14
	r9Out = r9
	r19Out = r19_4
	r21Out = r21_5
	r22Out = r22_6
	r23Out = r23_7
	r24Out = r24_8
	r25Out = r25_9
	r26Out = r26_10
	r28Out = r28_11
	r29Out = r29
	r31Out = r31_13
	return r0
l0000EDDC:
	r21 = r21 + 0xFFFFFFFF<32>
	word32 r18_22 = r19 & 0x1F<32>
	branch Test(EQ,r18_22) l0000EDF4_ds_t
l0000EDF4_ds_t:
l0000EDF4_ds_f:
l0000EDF8:
	r18_22 = r18_22 + 0xFFFFFFFF<32>
	branch Test(NE,r18_22) l0000EE00_ds_t
l0000EE00_ds_t:
l0000EE00_ds_f:
l0000EE04:
	r19 = r19 + 8<32>
	branch r19 -u r8 < 0<32> l0000EE10_ds_t
l0000EE10_ds_t:
l0000EE10_ds_f:
l0000EE10_thunk_fn0000EE14:
	word32 r21_48
	word32 r24_49
	word32 r19_51
	word32 r3_53
	word32 r8_54
	word32 r25_55
	word32 r9_57
	word32 r31_59
	word32 r22_62
	word32 r23_65
	word32 r7_67
	word32 r26_69
	word32 r29_70
	word32 r28_71
	word32 r0_68 = fn0000EE14(out r3_53, out r7_67, out r8_54, out r9_57, out r19_51, out r21_48, out r22_62, out r23_65, out r24_49, out r25_55, out r26_69, out r28_71, out r29_70, out r31_59)
	r3Out = r3_53
	r7Out = r7_67
	r8Out = r8_54
	r9Out = r9_57
	r19Out = r19_51
	r21Out = r21_48
	r22Out = r22_62
	r23Out = r23_65
	r24Out = r24_49
	r25Out = r25_55
	r26Out = r26_69
	r28Out = r28_71
	r29Out = r29_70
	r31Out = r31_59
	return r0_68
fn0000EDD8_exit:


word32 fn0000EE08(word32 r8, word32 r19, word32 r21, ptr32 & r3Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r19:[0..31] r21:[0..31] r8:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r25 r26 r28 r29 r3 r31
// Trashed: r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: C r1
fn0000EE08_entry:
l0000EE08:
	branch r19 -u r8 < 0<32> l0000EE10_ds_t
l0000EE10_ds_t:
l0000EE10_thunk_fn0000EDD8:
	word32 r19_17
	word32 r21_19
	word32 r22_20
	word32 r23_21
	word32 r25_23
	word32 r26_24
	word32 r28_25
	word32 r29_26
	word32 r3_27
	word32 r31_28
	word32 r7_104
	word32 r8_105
	word32 r9_106
	word32 r24_107
	word32 r0_11 = fn0000EDD8(r8, r19, r21, out r3_27, out r7_104, out r8_105, out r9_106, out r19_17, out r21_19, out r22_20, out r23_21, out r24_107, out r25_23, out r26_24, out r28_25, out r29_26, out r31_28)
	r3Out = r3_27
	r19Out = r19_17
	r21Out = r21_19
	r22Out = r22_20
	r23Out = r23_21
	r25Out = r25_23
	r26Out = r26_24
	r28Out = r28_25
	r29Out = r29_26
	r31Out = r31_28
	return r0_11
l0000EE10_ds_f:
l0000EE10_thunk_fn0000EE14:
	word32 r19_42
	word32 r21_44
	word32 r22_45
	word32 r23_46
	word32 r25_48
	word32 r26_49
	word32 r28_51
	word32 r29_52
	word32 r3_53
	word32 r31_55
	word32 r7_108
	word32 r8_109
	word32 r9_110
	word32 r24_111
	word32 r0_36 = fn0000EE14(out r3_53, out r7_108, out r8_109, out r9_110, out r19_42, out r21_44, out r22_45, out r23_46, out r24_111, out r25_48, out r26_49, out r28_51, out r29_52, out r31_55)
	r3Out = r3_53
	r19Out = r19_42
	r21Out = r21_44
	r22Out = r22_45
	r23Out = r23_46
	r25Out = r25_48
	r26Out = r26_49
	r28Out = r28_51
	r29Out = r29_52
	r31Out = r31_55
	return r0_36
fn0000EE08_exit:


word32 fn0000EE14(ptr32 & r3Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EDD8
//      fn0000EE08
// MayUse: 
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r28 r29 r3 r31 r7 r8 r9
// Trashed: C r0 r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
l0000EE18:
	r24_1305 = r24_1294
	r21_1190 = r21_1179
	r9_2 = r12
	r18_4 = r4_674 & 0x1F<32>
	branch Test(EQ,r18_4) l0000EE28_ds_t
l0000EE28_ds_t:
	r3_7 = r25_725
l0000EE28_ds_f:
	r3_8 = r25_725
l0000EE2C:
	r3_11 = PHI((r3_8, l0000EE28_ds_f), (r3_12, l0000EE34_ds_t))
	r18_9 = PHI((r18_4, l0000EE28_ds_f), (r18_10, l0000EE34_ds_t))
	r18_10 = r18_9 + 0xFFFFFFFF<32>
	branch Test(NE,r18_10) l0000EE34_ds_t
l0000EE34_ds_t:
	r3_12 = r3_11 >>u 1<i32>
l0000EE34_ds_f:
	r3_14 = r3_11 >>u 1<i32>
l0000EE38:
	r3_22 = PHI((r3_7, l0000EE28_ds_t), (r3_14, l0000EE34_ds_f))
	r6_24 = (r3_22 & 0x7F<32>) + 0xB<32>
	r19_28 = r19_676 + (0xFFFFFFF9<32> - r4_674)
	r25_35 = r3_22 >>u 7<i32>
l0000EE68:
	r8_1562 = PHI((r8_918, l0000EE38), (r8_825, l0000F3BC), (r8_810, l0000F490))
	r19_1326 = PHI((r19_28, l0000EE38), (r19_903, l0000F3BC), (r19_822, l0000F490))
	r25_1321 = PHI((r25_35, l0000EE38), (r25_898, l0000F3BC), (r25_821, l0000F490))
	r24_1303 = PHI((r24_1305, l0000EE38), (r24_1308, l0000F3BC), (r24_1313, l0000F490))
	r21_1188 = PHI((r21_1190, l0000EE38), (r21_1193, l0000F3BC), (r21_1198, l0000F490))
	r9_79 = PHI((r9_2, l0000EE38), (r9_917, l0000F3BC), (r9_819, l0000F490))
	r6_37 = PHI((r6_24, l0000EE38), (r6_895, l0000F3BC), (r6_820, l0000F490))
	r11_39 = r6_37 + r31_190
	branch r5 -u r11_39 < 0<32> l0000EE74_ds_t
l0000EE74_ds_t:
l0000F968:
	Mem47[r23 + 24<i32>:word32] = 0xFFFF9F60<32>
	Mem49[r22 + 4<i32>:word32] = 0x3F51<32>
l0000F97C_thunk_fn0000D0B8:
	r0_50 = fn0000D0B8(out r3_63, out r4_1617, out r7_68, out r9_69, out r19_53, out r21_54, out r22_55, out r23_56, out r24_57, out r25_58, out r26_59, out r27_1618, out r28_61, out r29_62, out r31_64)
	r3Out = r3_63
	r7Out = r7_68
	r8Out = r8_1562
	r9Out = r9_69
	r19Out = r19_53
	r21Out = r21_54
	r22Out = r22_55
	r23Out = r23_56
	r24Out = r24_57
	r25Out = r25_58
	r26Out = r26_59
	r28Out = r28_61
	r29Out = r29_62
	r31Out = r31_64
	return r0_50
l0000EE74_ds_f:
	r4_70 = r31_190 + 0x3A<32>
l0000EE78:
	Mem73[r1 + 56<i32>:word32] = r4_70 * 2<32>
	r8_74 = r22 + r4_70 * 2<32>
	r10_77 = r6_37 + 0xFFFFFFFF<32>
	branch 4<32> -u r10_77 >= 0<32> l0000EEA0_ds_t
l0000EEA0_ds_t:
	r8_82 = r8_74 >>u 1<i32> & 1<32>
l0000F88C:
	Mem87[Mem73[r1 + 56<i32>:word32] + r22:word16] = SLICE(r9_79, word16, 0)
	r31_84 = r31_190 + 1<32>
	r6_85 = r6_37 + 0xFFFFFFFE<32>
l0000EEA0_ds_f:
	r8_88 = r8_74 >>u 1<i32> & 1<32>
l0000EEA4:
	branch Test(EQ,r8_88) l0000EEA8_ds_t
l0000EEA8_ds_t:
l0000F6E0:
	Mem90[r1 + 40<i32>:word32] = r31_190
l0000EEA8_ds_f:
	r3_91 = Mem73[r1 + 56<i32>:word32]
l0000EEAC:
	Mem93[r1 + 40<i32>:word32] = r31_190 + 1<32>
	Mem95[r3_91 + r22:word16] = SLICE(r9_79, word16, 0)
	r10_96 = r6_37 + 0xFFFFFFFE<32>
l0000EEBC:
	r10_143 = PHI((r10_96, l0000EEAC), (r10_77, l0000F6E0))
	r6_118 = r6_37 - r8_88
	r3_123 = r9_79 * 0x10000<32> & 0xFFFF0000<32> | r9_79
	r4_125 = r22 + (r8_88 + r4_70) * 2<32>
	r8_126 = 0<32>
l0000EF20:
	r8_130 = PHI((r8_131, l0000EF30_ds_t), (r8_126, l0000EEBC))
	r4_128 = PHI((r4_134, l0000EF30_ds_t), (r4_125, l0000EEBC))
	Mem129[r4_128:word32] = r3_123
	r8_131 = r8_130 + 1<32>
	branch r8_131 -u (r6_118 >>u 1<i32>) < 0<32> l0000EF30_ds_t
l0000EF30_ds_t:
	r4_134 = r4_128 + 4<32>
l0000EF30_ds_f:
l0000EF34:
	r4_138 = Mem129[r1 + 40<i32>:word32]
	r10_144 = r10_143 - (r6_118 & 0xFFFFFFFE<32>)
	branch Test(EQ,r6_118 & 0xFFFFFFFE<32> ^ r6_118) l0000EF48_ds_t
l0000EF48_ds_t:
l0000EF48_ds_f:
	r31_146 = (r6_118 & 0xFFFFFFFE<32>) + r4_138
l0000EF4C:
	Mem152[(r31_146 + 0x3A<32>) * 2<32> + r22:word16] = SLICE(r9_79, word16, 0)
	r31_153 = r31_146 + 1<32>
	branch Test(EQ,r10_144) l0000EF60_ds_t
l0000EF60_ds_t:
l0000EF60_ds_f:
	r6_155 = r10_144 + 0xFFFFFFFF<32>
l0000EF64:
	r8_1560 = PHI((r8_131, l0000EF60_ds_f), (r8_82, l0000F88C))
	r6_159 = PHI((r6_155, l0000EF60_ds_f), (r6_85, l0000F88C))
	r31_156 = PHI((r31_153, l0000EF60_ds_f), (r31_84, l0000F88C))
	r3_157 = r31_156 + 0x3A<32>
	branch Test(EQ,r6_159) l0000EF70_ds_t
l0000EF70_ds_t:
	Mem163[r3_157 * 2<32> + r22:word16] = SLICE(r9_79, word16, 0)
l0000EF70_ds_f:
	Mem165[r3_157 * 2<32> + r22:word16] = SLICE(r9_79, word16, 0)
l0000EF74:
	Mem169[(r31_156 + 0x3B<32>) * 2<32> + r22:word16] = SLICE(r9_79, word16, 0)
	branch Test(EQ,r6_159 ^ 1<32>) l0000EF88_ds_t
l0000EF88_ds_t:
l0000EF88_ds_f:
	r6_172 = r6_159 ^ 2<32>
l0000EF8C:
	r3_173 = r31_156 + 0x3C<32>
	branch Test(EQ,r6_172) l0000EF98_ds_t
l0000EF98_ds_t:
	Mem176[r3_173 * 2<32> + r22:word16] = SLICE(r9_79, word16, 0)
l0000EF98_ds_f:
	Mem178[r3_173 * 2<32> + r22:word16] = SLICE(r9_79, word16, 0)
l0000EF9C:
	Mem182[(r31_156 + 0x3D<32>) * 2<32> + r22:word16] = SLICE(r9_79, word16, 0)
l0000EFA8:
	r8_1559 = PHI((r8_131, l0000EF48_ds_t), (r8_131, l0000EF60_ds_t), (r8_1560, l0000EF70_ds_t), (r8_1560, l0000EF88_ds_t), (r8_1560, l0000EF98_ds_t), (r8_1560, l0000EF9C))
	Mem189[r22 + 108<i32>:word32] = r11_39
	r31_187 = r11_39
l0000E85C:
	r8_1558 = PHI((r8_980, l0000E93C), (r8_1559, l0000EFA8))
	r19_289 = PHI((r19_986, l0000E93C), (r19_1326, l0000EFA8))
	r25_287 = PHI((r25_981, l0000E93C), (r25_1321, l0000EFA8))
	r24_284 = PHI((r24_1294, l0000E93C), (r24_1303, l0000EFA8))
	r21_271 = PHI((r21_1179, l0000E93C), (r21_1188, l0000EFA8))
	Mem195 = PHI((Mem979, l0000E93C), (Mem189, l0000EFA8))
	r31_190 = PHI((r31_989, l0000E93C), (r31_187, l0000EFA8))
	branch r31_190 -u r5 >= 0<32> l0000E864_ds_t
l0000E864_ds_t:
l0000F7CC:
	branch Test(NE,CONVERT(Mem195[r22 + 628<i32>:word16], word16, word32)) l0000F7D4_ds_t
l0000F7D4_ds_t:
l0000F8F8:
	Mem203[r22 + 88<i32>:word32] = 9<32>
	Mem208[r22 + 112<i32>:word32] = r22 + 0x534<32>
	Mem209[r22 + 80<i32>:word32] = r22 + 0x534<32>
	Mem213[r1 + 44<i32>:word32] = r22 + 0x70<32>
	Mem214[r1 + 48<i32>:word32] = r22 + 0x2F4<32>
	Mem217[r1 + 52<i32>:word32] = r20
	r3_225 = fn000109C0(r0, 1<32>, r22 + 0x74<32>, r7, r22 + 0x70<32>, r22 + 0x58<32>, r22 + 0x2F4<32>)
	r4_233 = Mem217[r1 + 44<i32>:word32]
	r11_234 = Mem217[r1 + 48<i32>:word32]
	branch Test(EQ,r3_225) l0000F948_ds_t
l0000F948_ds_t:
	r20_235 = Mem217[r1 + 52<i32>:word32]
l0000F984:
	r6_236 = Mem217[r22 + 100<i32>:word32]
	r5_237 = Mem217[r22 + 112<i32>:word32]
	Mem239[r22 + 92<i32>:word32] = 6<32>
	r7_241 = Mem239[r22 + 104<i32>:word32]
	Mem244[r22 + 84<i32>:word32] = r5_237
	Mem249[r1 + 52<i32>:word32] = r20_235
	branch Test(EQ,fn000109C0(r0, 2<32>, r22 + 0x74<32> + r6_236 * 2<32>, r7_241, r4_233, r22 + 0x5C<32>, r11_234)) l0000F9C0_ds_t
l0000F9C0_ds_t:
	r20_263 = Mem249[r1 + 52<i32>:word32]
l0000FA94:
	Mem265[r22 + 4<i32>:word32] = 0x3F47<32>
	branch Test(NE,Mem265[r1 + 36<i32>:word32]) l0000FAA4_ds_t
l0000FAA4_ds_t:
l0000E60C:
	Mem269[r22 + 4<i32>:word32] = 0x3F48<32>
l0000CE24:
	branch 5<32> -u r21_271 < 0<32> l0000CE30_ds_t
l0000CE30_ds_t:
l0000DF78:
	branch 0x101<32> -u r26 >= 0<32> l0000DF80_ds_t
l0000DF80_ds_t:
l0000DF80_ds_f:
l0000DF84:
	Mem282[r23 + 12<i32>:word32] = r28
	Mem283[r23 + 16<i32>:word32] = r26
	Mem285[r23:word32] = r24_284
	Mem286[r23 + 4<i32>:word32] = r21_271
	Mem288[r22 + 60<i32>:word32] = r25_287
	Mem290[r22 + 64<i32>:word32] = r19_289
	Mem292[r1 + 52<i32>:word32] = r20_263
	r22_297 = fn000070A4()
	r4_310 = Mem292[r22_297 + 4<i32>:word32]
	branch Test(NE,r4_310 ^ 0x3F3F<32>) l0000DFD0_ds_t
l0000DFD0_ds_t:
l0000DFD0_ds_f:
l0000DFD4:
	Mem321[r22_297 + 7112<i32>:word32] = 0xFFFFFFFF<32>
l0000DFDC:
	Mem345 = PHI((Mem292, l0000DFD0_ds_t), (Mem321, l0000DFD4))
l0000CD94:
	branch 0x1E<32> -u (r4_310 + 0xFFFFC0CC<32>) < 0<32> l0000CDBC
l0000CDBC:
l0000CDBC_thunk_fn0000CCE8:
	r3Out = fn0000CCE8(out r23_332, out r26_335, out r29_338)
	r7Out = r7_258
	r8Out = r8_259
	r9Out = r9_260
	r19Out = r19_329
	r21Out = r21_330
	r22Out = r22_331
	r23Out = r23_332
	r24Out = r24_333
	r25Out = r25_334
	r26Out = r26_335
	r28Out = r28_337
	r29Out = r29_338
	r31Out = r31_341
	return r0
l0000CDA0:
	r3_346 = Mem345[(r4_310 + 0xFFFFC0CC<32>) * 4<32> + 0xFFFFA05C<32>:word32]
	call r3_346 (retsize: 0;)
		uses: r3:r3_346
		defs: r0:r0_369,r19:r19_356,r21:r21_363,r22:r22_361,r23:r23_366,r24:r24_364,r25:r25_354,r26:r26_370,r28:r28_372,r29:r29_371,r3:r3_355,r31:r31_357,r7:r7_368,r8:r8_360,r9:r9_351
	r3Out = r3_355
	r7Out = r7_368
	r8Out = r8_360
	r9Out = r9_351
	r19Out = r19_356
	r21Out = r21_363
	r22Out = r22_361
	r23Out = r23_366
	r24Out = r24_364
	r25Out = r25_354
	r26Out = r26_370
	r28Out = r28_372
	r29Out = r29_371
	r31Out = r31_357
	return r0_369
l0000CE30_ds_f:
l0000CE34:
	r3_379 = Mem269[r22 + 88<i32>:word32]
	r5_381 = Mem269[r22 + 80<i32>:word32]
	r18_382 = r3_379 & 0x1F<32>
	branch Test(EQ,r3_379 & 0x1F<32>) l0000CE4C_ds_t
l0000CE4C_ds_t:
	r6_384 = 0xFFFFFFFF<32>
l0000CE4C_ds_f:
	r6_385 = 0xFFFFFFFF<32>
l0000CE50:
	r6_388 = PHI((r6_385, l0000CE4C_ds_f), (r6_389, l0000CE58_ds_t))
	r18_386 = PHI((r18_382, l0000CE4C_ds_f), (r18_387, l0000CE58_ds_t))
	r18_387 = r18_386 + 0xFFFFFFFF<32>
	branch Test(NE,r18_387) l0000CE58_ds_t
l0000CE58_ds_t:
	r6_389 = r6_388 * 2<32>
l0000CE58_ds_f:
	r6_390 = r6_388 * 2<32>
l0000CE5C:
	r6_391 = PHI((r6_384, l0000CE4C_ds_t), (r6_390, l0000CE58_ds_f))
	r7_405 = CONVERT(Mem269[r5_381 + (~r6_391 & r25_287) * 4<32> + 1<i32>:byte], byte, word32)
	Mem411[r22 + 7112<i32>:word32] = r0
	branch r19_289 -u r7_405 >= 0<32> l0000CE84_ds_t
l0000CE84_ds_t:
l0000CE84_thunk_fn0000CEE4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg32 = <invalid>
	stackArg36 = <invalid>
	r0_444 = fn0000CEE4(r0, r3, r4, r5, r7, r19, r21, r22, r23, r24, r25, r26, r28, r29, stackArg32, stackArg36, out r3_430, out r7_443, out r8_435, out r9_426, out r19_431, out r21_438, out r22_436, out r23_441, out r24_439, out r25_429, out r26_445, out r28_447, out r29_446, out r31_432)
	r3Out = r3_430
	r7Out = r7_443
	r8Out = r8_435
	r9Out = r9_426
	r19Out = r19_431
	r21Out = r21_438
	r22Out = r22_436
	r23Out = r23_441
	r24Out = r24_439
	r25Out = r25_429
	r26Out = r26_445
	r28Out = r28_447
	r29Out = r29_446
	r31Out = r31_432
	return r0_444
l0000CE84_ds_f:
l0000CE84_thunk_fn0000CE88:
	r0_474 = fn0000CE88(out r3_460, out r7_473, out r8_465, out r9_456, out r19_461, out r21_468, out r22_466, out r23_471, out r24_469, out r25_459, out r26_475, out r28_477, out r29_476, out r31_462)
	r3Out = r3_460
	r7Out = r7_473
	r8Out = r8_465
	r9Out = r9_456
	r19Out = r19_461
	r21Out = r21_468
	r22Out = r22_466
	r23Out = r23_471
	r24Out = r24_469
	r25Out = r25_459
	r26Out = r26_475
	r28Out = r28_477
	r29Out = r29_476
	r31Out = r31_462
	return r0_474
l0000FAA4_ds_f:
l0000FAA8:
	r3_482 = Mem265[r22 + 44<i32>:word32]
l0000FAA8_thunk_fn0000D0BC:
	r0_484 = fn0000D0BC(r0, r3_482, r19_289, r21_271, r22, r23, r24_284, r25_287, r26, r27, r28, r29, out r3_492, out r7_497, out r9_498, out r19_487, out r22_488, out r23_489, out r26_490, out r29_491, out r31_493)
	r3Out = r3_492
	r7Out = r7_497
	r8Out = r8_259
	r9Out = r9_498
	r19Out = r19_487
	r21Out = r21_271
	r22Out = r22_488
	r23Out = r23_489
	r24Out = r24_284
	r25Out = r25_287
	r26Out = r26_490
	r28Out = r28
	r29Out = r29_491
	r31Out = r31_493
	return r0_484
l0000F9C0_ds_f:
l0000F9C4:
	Mem503[r23 + 24<i32>:word32] = 0xFFFF9FC0<32>
	Mem504[r22 + 4<i32>:word32] = 0x3F51<32>
	r8_500 = 0xFFFF9FC0<32>
l0000F9D8_thunk_fn0000D0B8:
	r0_505 = fn0000D0B8(out r3_518, out r4_1612, out r7_523, out r9_524, out r19_508, out r21_509, out r22_510, out r23_511, out r24_512, out r25_513, out r26_514, out r27_1613, out r28_516, out r29_517, out r31_519)
	r3Out = r3_518
	r7Out = r7_523
	r8Out = 0xFFFF9FC0<32>
	r9Out = r9_524
	r19Out = r19_508
	r21Out = r21_509
	r22Out = r22_510
	r23Out = r23_511
	r24Out = r24_512
	r25Out = r25_513
	r26Out = r26_514
	r28Out = r28_516
	r29Out = r29_517
	r31Out = r31_519
	return r0_505
l0000F948_ds_f:
l0000F94C:
	Mem529[r23 + 24<i32>:word32] = 0xFFFF9FA4<32>
	Mem530[r22 + 4<i32>:word32] = 0x3F51<32>
l0000F960_thunk_fn0000D0B8:
	r0_531 = fn0000D0B8(out r3_544, out r4_1610, out r7_549, out r9_550, out r19_534, out r21_535, out r22_536, out r23_537, out r24_538, out r25_539, out r26_540, out r27_1611, out r28_542, out r29_543, out r31_545)
	r3Out = r3_544
	r7Out = r7_549
	r8Out = r8_229
	r9Out = r9_550
	r19Out = r19_534
	r21Out = r21_535
	r22Out = r22_536
	r23Out = r23_537
	r24Out = r24_538
	r25Out = r25_539
	r26Out = r26_540
	r28Out = r28_542
	r29Out = r29_543
	r31Out = r31_545
	return r0_531
l0000F7D4_ds_f:
l0000F7D8:
	Mem554[r23 + 24<i32>:word32] = 0xFFFF9F7C<32>
	Mem555[r22 + 4<i32>:word32] = 0x3F51<32>
l0000F7E8_thunk_fn0000D0B8:
	r0_556 = fn0000D0B8(out r3_569, out r4_1608, out r7_574, out r9_575, out r19_559, out r21_560, out r22_561, out r23_562, out r24_563, out r25_564, out r26_565, out r27_1609, out r28_567, out r29_568, out r31_570)
	r3Out = r3_569
	r7Out = r7_574
	r8Out = r8_1558
	r9Out = r9_575
	r19Out = r19_559
	r21Out = r21_560
	r22Out = r22_561
	r23Out = r23_562
	r24Out = r24_563
	r25Out = r25_564
	r26Out = r26_565
	r28Out = r28_567
	r29Out = r29_568
	r31Out = r31_570
	return r0_556
l0000E864_ds_f:
	r9_576 = 0xFFFFFFFF<32>
l0000E868:
	r3_577 = Mem195[r22 + 88<i32>:word32]
	r8_578 = Mem195[r22 + 80<i32>:word32]
	r18_579 = r3_577 & 0x1F<32>
	branch Test(EQ,r3_577 & 0x1F<32>) l0000E87C_ds_t
l0000E87C_ds_t:
	r6_581 = 0xFFFFFFFF<32>
l0000E87C_ds_f:
	r6_582 = 0xFFFFFFFF<32>
l0000E880:
	r6_585 = PHI((r6_582, l0000E87C_ds_f), (r6_586, l0000E888_ds_t))
	r18_583 = PHI((r18_579, l0000E87C_ds_f), (r18_584, l0000E888_ds_t))
	r18_584 = r18_583 + 0xFFFFFFFF<32>
	branch Test(NE,r18_584) l0000E888_ds_t
l0000E888_ds_t:
	r6_586 = r6_585 * 2<32>
l0000E888_ds_f:
	r6_587 = r6_585 * 2<32>
l0000E88C:
	r6_588 = PHI((r6_581, l0000E87C_ds_t), (r6_587, l0000E888_ds_f))
	r6_589 = ~r6_588
	r3_597 = r8_578 + (r25_287 & r6_589) * 4<32>
	r4_601 = CONVERT(Mem195[r3_597 + 1<i32>:byte], byte, word32)
	branch r19_289 -u r4_601 >= 0<32> l0000E8AC_ds_t
l0000E8AC_ds_t:
	r3_606 = CONVERT(Mem195[r3_597 + 2<i32>:word16], word16, word32)
l0000E8AC_ds_f:
l0000E8B0:
	r25_638 = PHI((r25_287, l0000E8AC_ds_f), (r25_641, l0000E900_ds_t))
	r19_627 = PHI((r19_289, l0000E8AC_ds_f), (r19_658, l0000E900_ds_t))
	r24_621 = PHI((r24_284, l0000E8AC_ds_f), (r24_622, l0000E900_ds_t))
	r21_609 = PHI((r21_271, l0000E8AC_ds_f), (r21_626, l0000E900_ds_t))
	branch Test(EQ,r21_609) l0000E8B0_thunk_fn0000DCCC
l0000E8B0_thunk_fn0000DCCC:
	fn0000DCCC()
	r3Out = r3_618
	r7Out = r7
	r8Out = r8_620
	r9Out = 0xFFFFFFFF<32>
	r19Out = r19_610
	r21Out = r21_611
	r22Out = r22_612
	r23Out = r23_613
	r24Out = r24_614
	r25Out = r25_615
	r26Out = r26_616
	r28Out = r28_617
	r29Out = r29
	r31Out = r31_619
	return r0
l0000E8B4:
	r24_622 = r24_621 + 1<32>
	r4_625 = CONVERT(Mem195[r24_622 - 1<i32>:byte], byte, word32)
	r21_626 = r21_609 + 0xFFFFFFFF<32>
	r18_628 = r19_627 & 0x1F<32>
	branch Test(EQ,r18_628) l0000E8CC_ds_t
l0000E8CC_ds_t:
	r3_630 = r4_625
l0000E8CC_ds_f:
	r3_631 = r4_625
l0000E8D0:
	r3_634 = PHI((r3_631, l0000E8CC_ds_f), (r3_635, l0000E8D8_ds_t))
	r18_632 = PHI((r18_628, l0000E8CC_ds_f), (r18_633, l0000E8D8_ds_t))
	r18_633 = r18_632 + 0xFFFFFFFF<32>
	branch Test(NE,r18_633) l0000E8D8_ds_t
l0000E8D8_ds_t:
	r3_635 = r3_634 * 2<32>
l0000E8D8_ds_f:
	r3_636 = r3_634 * 2<32>
l0000E8DC:
	r3_640 = PHI((r3_630, l0000E8CC_ds_t), (r3_636, l0000E8D8_ds_f))
	r25_641 = r25_638 + r3_640
	r3_651 = r8_578 + (r25_641 & r6_589) * 4<32>
	r4_655 = CONVERT(Mem195[r3_651 + 1<i32>:byte], byte, word32)
	r19_658 = r19_627 + 8<32>
	branch r19_658 -u r4_655 < 0<32> l0000E900_ds_t
l0000E900_ds_t:
l0000E900_ds_f:
	r3_663 = CONVERT(Mem195[r3_651 + 2<i32>:word16], word16, word32)
l0000E904:
	r24_1294 = PHI((r24_284, l0000E8AC_ds_t), (r24_622, l0000E900_ds_f))
	r21_1179 = PHI((r21_271, l0000E8AC_ds_t), (r21_626, l0000E900_ds_f))
	r25_725 = PHI((r25_287, l0000E8AC_ds_t), (r25_641, l0000E900_ds_f))
	r19_676 = PHI((r19_289, l0000E8AC_ds_t), (r19_658, l0000E900_ds_f))
	r4_674 = PHI((r4_601, l0000E8AC_ds_t), (r4_655, l0000E900_ds_f))
	r3_670 = PHI((r3_606, l0000E8AC_ds_t), (r3_663, l0000E900_ds_f))
	branch r20 -u r3_670 < 0<32> l0000E90C_ds_t
l0000E90C_ds_t:
	r6_672 = r3_670 ^ 0x10<32>
l0000EDBC:
	branch Test(EQ,r6_672) l0000EDC0_ds_t
l0000EDC0_ds_t:
l0000F420:
	r8_675 = r4_674 + 2<32>
	branch r19_676 -u r8_675 >= 0<32> l0000F468
l0000F42C:
	r25_714 = PHI((r25_725, l0000F420), (r25_717, l0000F464_ds_t))
	r19_696 = PHI((r19_676, l0000F420), (r19_708, l0000F464_ds_t))
	r24_690 = PHI((r24_1294, l0000F420), (r24_691, l0000F464_ds_t))
	r21_678 = PHI((r21_1179, l0000F420), (r21_695, l0000F464_ds_t))
	branch Test(EQ,r21_678) l0000F42C_thunk_fn0000DCCC
l0000F42C_thunk_fn0000DCCC:
	fn0000DCCC()
	r3Out = r3_687
	r7Out = r7
	r8Out = r8_689
	r9Out = 0xFFFFFFFF<32>
	r19Out = r19_679
	r21Out = r21_680
	r22Out = r22_681
	r23Out = r23_682
	r24Out = r24_683
	r25Out = r25_684
	r26Out = r26_685
	r28Out = r28_686
	r29Out = r29
	r31Out = r31_688
	return r0
l0000F430:
	r24_691 = r24_690 + 1<32>
	r6_694 = CONVERT(Mem195[r24_691 - 1<i32>:byte], byte, word32)
	r21_695 = r21_678 + 0xFFFFFFFF<32>
	r18_697 = r19_696 & 0x1F<32>
	branch Test(EQ,r18_697) l0000F448_ds_t
l0000F448_ds_t:
	r3_699 = r6_694
l0000F448_ds_f:
	r3_700 = r6_694
l0000F44C:
	r3_703 = PHI((r3_700, l0000F448_ds_f), (r3_704, l0000F454_ds_t))
	r18_701 = PHI((r18_697, l0000F448_ds_f), (r18_702, l0000F454_ds_t))
	r18_702 = r18_701 + 0xFFFFFFFF<32>
	branch Test(NE,r18_702) l0000F454_ds_t
l0000F454_ds_t:
	r3_704 = r3_703 * 2<32>
l0000F454_ds_f:
	r3_705 = r3_703 * 2<32>
l0000F458:
	r3_716 = PHI((r3_699, l0000F448_ds_t), (r3_705, l0000F454_ds_f))
	r19_708 = r19_696 + 8<32>
	branch r19_708 -u r8_675 < 0<32> l0000F464_ds_t
l0000F464_ds_t:
	r25_717 = r25_714 + r3_716
l0000F464_ds_f:
	r25_718 = r25_714 + r3_716
l0000F468:
	r24_1313 = PHI((r24_1294, l0000F420), (r24_691, l0000F464_ds_f))
	r21_1198 = PHI((r21_1179, l0000F420), (r21_695, l0000F464_ds_f))
	r19_737 = PHI((r19_676, l0000F420), (r19_708, l0000F464_ds_f))
	r25_724 = PHI((r25_725, l0000F420), (r25_718, l0000F464_ds_f))
	r18_723 = r4_674 & 0x1F<32>
	branch Test(EQ,r18_723) l0000F474_ds_t
l0000F474_ds_t:
	r9_727 = r25_724
l0000F474_ds_f:
	r9_728 = r25_724
l0000F478:
	r9_731 = PHI((r9_728, l0000F474_ds_f), (r9_732, l0000F480_ds_t))
	r18_729 = PHI((r18_723, l0000F474_ds_f), (r18_730, l0000F480_ds_t))
	r18_730 = r18_729 + 0xFFFFFFFF<32>
	branch Test(NE,r18_730) l0000F480_ds_t
l0000F480_ds_t:
	r9_732 = r9_731 >>u 1<i32>
l0000F480_ds_f:
	r9_734 = r9_731 >>u 1<i32>
l0000F484:
	r9_754 = PHI((r9_727, l0000F474_ds_t), (r9_734, l0000F480_ds_f))
	r19_741 = r19_737 - r4_674
	branch Test(EQ,r31_190) l0000F48C_ds_t
l0000F48C_ds_t:
l0000FAB0:
	Mem771[r23 + 24<i32>:word32] = 0xFFFF9F60<32>
	Mem784[r22 + 4<i32>:word32] = 0x3F51<32>
l0000FAC4_thunk_fn0000D0B8:
	r0_785 = fn0000D0B8(out r3_798, out r4_1606, out r7_803, out r9_804, out r19_788, out r21_789, out r22_790, out r23_791, out r24_792, out r25_793, out r26_794, out r27_1607, out r28_796, out r29_797, out r31_799)
	r3Out = r3_798
	r7Out = r7_803
	r8Out = r8_675
	r9Out = r9_804
	r19Out = r19_788
	r21Out = r21_789
	r22Out = r22_790
	r23Out = r23_791
	r24Out = r24_792
	r25Out = r25_793
	r26Out = r26_794
	r28Out = r28_796
	r29Out = r29_797
	r31Out = r31_799
	return r0_785
l0000F48C_ds_f:
l0000F490:
	r8_809 = r9_754 >>u 1<i32>
	r8_810 = r8_809 >>u 1<i32>
	r9_819 = CONVERT(Mem195[(r31_190 + 0x39<32>) * 2<32> + r22:word16], word16, word32)
	r6_820 = (r9_754 & 3<32>) + 3<32>
	r25_821 = r8_809 >>u 1<i32>
	r19_822 = r19_741 + 0xFFFFFFFE<32>
l0000EDC0_ds_f:
	r3_823 = r3_670 ^ 0x11<32>
l0000EDC4:
	branch Test(EQ,r3_823) l0000EDC8_ds_t
l0000EDC8_ds_t:
l0000F350:
	r8_825 = r4_674 + 3<32>
	branch r19_676 -u r8_825 >= 0<32> l0000F35C_ds_t
l0000F35C_ds_t:
l0000F35C_ds_f:
	r9_828 = 0xFFFFFFFD<32>
l0000F360:
	r25_865 = PHI((r25_725, l0000F35C_ds_f), (r25_868, l0000F398_ds_t))
	r19_847 = PHI((r19_676, l0000F35C_ds_f), (r19_859, l0000F398_ds_t))
	r24_841 = PHI((r24_1294, l0000F35C_ds_f), (r24_842, l0000F398_ds_t))
	r21_829 = PHI((r21_1179, l0000F35C_ds_f), (r21_846, l0000F398_ds_t))
	branch Test(EQ,r21_829) l0000F360_thunk_fn0000DCCC
l0000F360_thunk_fn0000DCCC:
	fn0000DCCC()
	r3Out = r3_838
	r7Out = r7
	r8Out = r8_840
	r9Out = 0xFFFFFFFD<32>
	r19Out = r19_830
	r21Out = r21_831
	r22Out = r22_832
	r23Out = r23_833
	r24Out = r24_834
	r25Out = r25_835
	r26Out = r26_836
	r28Out = r28_837
	r29Out = r29
	r31Out = r31_839
	return r0
l0000F364:
	r24_842 = r24_841 + 1<32>
	r6_845 = CONVERT(Mem195[r24_842 - 1<i32>:byte], byte, word32)
	r21_846 = r21_829 + 0xFFFFFFFF<32>
	r18_848 = r19_847 & 0x1F<32>
	branch Test(EQ,r18_848) l0000F37C_ds_t
l0000F37C_ds_t:
	r3_850 = r6_845
l0000F37C_ds_f:
	r3_851 = r6_845
l0000F380:
	r3_854 = PHI((r3_851, l0000F37C_ds_f), (r3_855, l0000F388_ds_t))
	r18_852 = PHI((r18_848, l0000F37C_ds_f), (r18_853, l0000F388_ds_t))
	r18_853 = r18_852 + 0xFFFFFFFF<32>
	branch Test(NE,r18_853) l0000F388_ds_t
l0000F388_ds_t:
	r3_855 = r3_854 * 2<32>
l0000F388_ds_f:
	r3_856 = r3_854 * 2<32>
l0000F38C:
	r3_867 = PHI((r3_850, l0000F37C_ds_t), (r3_856, l0000F388_ds_f))
	r19_859 = r19_847 + 8<32>
	branch r19_859 -u r8_825 < 0<32> l0000F398_ds_t
l0000F398_ds_t:
	r25_868 = r25_865 + r3_867
l0000F398_ds_f:
	r25_869 = r25_865 + r3_867
l0000F39C:
l0000F3A0:
	r24_1308 = PHI((r24_1294, l0000F35C_ds_t), (r24_842, l0000F39C))
	r21_1193 = PHI((r21_1179, l0000F35C_ds_t), (r21_846, l0000F39C))
	r19_901 = PHI((r19_676, l0000F35C_ds_t), (r19_859, l0000F39C))
	r25_876 = PHI((r25_725, l0000F35C_ds_t), (r25_869, l0000F39C))
	r18_875 = r4_674 & 0x1F<32>
	branch Test(EQ,r18_875) l0000F3AC_ds_t
l0000F3AC_ds_t:
	r3_878 = r25_876
l0000F3AC_ds_f:
	r3_879 = r25_876
l0000F3B0:
	r3_882 = PHI((r3_879, l0000F3AC_ds_f), (r3_883, l0000F3B8_ds_t))
	r18_880 = PHI((r18_875, l0000F3AC_ds_f), (r18_881, l0000F3B8_ds_t))
	r18_881 = r18_880 + 0xFFFFFFFF<32>
	branch Test(NE,r18_881) l0000F3B8_ds_t
l0000F3B8_ds_t:
	r3_883 = r3_882 >>u 1<i32>
l0000F3B8_ds_f:
	r3_885 = r3_882 >>u 1<i32>
l0000F3BC:
	r3_893 = PHI((r3_878, l0000F3AC_ds_t), (r3_885, l0000F3B8_ds_f))
	r6_895 = (r3_893 & 7<32>) + 3<32>
	r25_898 = r3_893 >>u 3<i32>
	r19_903 = r19_901 + (0xFFFFFFFD<32> - r4_674)
	r9_917 = r12
l0000EDC8_ds_f:
	r8_918 = r4_674 + 7<32>
l0000EDCC:
	branch r19_676 -u r8_918 >= 0<32> l0000EDD4_ds_t
l0000EDD4_ds_t:
l0000EDD4_ds_f:
l0000EDD4_thunk_fn0000EDD8:
	r0_949 = fn0000EDD8(r8, r19, r21, out r3_935, out r7_948, out r8_940, out r9_931, out r19_936, out r21_943, out r22_941, out r23_946, out r24_944, out r25_934, out r26_950, out r28_952, out r29_951, out r31_937)
	r3Out = r3_935
	r7Out = r7_948
	r8Out = r8_940
	r9Out = r9_931
	r19Out = r19_936
	r21Out = r21_943
	r22Out = r22_941
	r23Out = r23_946
	r24Out = r24_944
	r25Out = r25_934
	r26Out = r26_950
	r28Out = r28_952
	r29Out = r29_951
	r31Out = r31_937
	return r0_949
l0000E90C_ds_f:
l0000E910:
	r6_957 = r31_190 + 1<32>
	Mem960[r22 + 108<i32>:word32] = r6_957
	r31_958 = r31_190 + 0x3A<32>
	r18_961 = r4_674 & 0x1F<32>
	branch Test(EQ,r18_961) l0000E92C_ds_t
l0000E92C_ds_t:
	r8_963 = r25_725
l0000E92C_ds_f:
	r8_964 = r25_725
l0000E930:
	r8_967 = PHI((r8_964, l0000E92C_ds_f), (r8_968, l0000E938_ds_t))
	r18_965 = PHI((r18_961, l0000E92C_ds_f), (r18_966, l0000E938_ds_t))
	r18_966 = r18_965 + 0xFFFFFFFF<32>
	branch Test(NE,r18_966) l0000E938_ds_t
l0000E938_ds_t:
	r8_968 = r8_967 >>u 1<i32>
l0000E938_ds_f:
	r8_970 = r8_967 >>u 1<i32>
l0000E93C:
	r8_980 = PHI((r8_963, l0000E92C_ds_t), (r8_970, l0000E938_ds_f))
	Mem979[r31_958 * 2<32> + r22:word16] = SLICE(r3_670, word16, 0)
	r25_981 = r8_980
	r19_986 = r19_676 - r4_674
	r31_989 = r6_957
fn0000EE14_entry:
	def r8
	def r3
l0000EE14_thunk_fn0000EDD8:
	r0_1013 = fn0000EDD8(r8, r19, r21, out r3_999, out r7_1012, out r8_1004, out r9_995, out r19_1000, out r21_1007, out r22_1005, out r23_1010, out r24_1008, out r25_998, out r26_1014, out r28_1016, out r29_1015, out r31_1001)
	r3Out = r3_999
	r7Out = r7_1012
	r8Out = r8_1004
	r9Out = r9_995
	r19Out = r19_1000
	r21Out = r21_1007
	r22Out = r22_1005
	r23Out = r23_1010
	r24Out = r24_1008
	r25Out = r25_998
	r26Out = r26_1014
	r28Out = r28_1016
	r29Out = r29_1015
	r31Out = r31_1001
	return r0_1013
fn0000EE14_exit:


word32 fn0000F218()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DD20
// MayUse: 
// LiveOut: r31
// Trashed: r31
// Preserved: r1
fn0000F218_entry:
l0000F218:
l0000F218_thunk_fn0000D0B8:
	word32 r3_4
	word32 r4_5
	word32 r7_6
	word32 r9_7
	word32 r19_8
	word32 r21_9
	word32 r22_10
	word32 r23_11
	word32 r24_12
	word32 r25_13
	word32 r26_14
	word32 r27_15
	word32 r28_16
	word32 r29_17
	word32 r31_18
	fn0000D0B8(out r3_4, out r4_5, out r7_6, out r9_7, out r19_8, out r21_9, out r22_10, out r23_11, out r24_12, out r25_13, out r26_14, out r27_15, out r28_16, out r29_17, out r31_18)
	return 0<32>
fn0000F218_exit:


word32 fn0000F4D8(word32 r8, word32 r22, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D0B8
//      fn0000DB74
//      fn0000DD14
// MayUse:  r22:[0..31] r8:[0..31]
// LiveOut: r0 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31 r4 r7 r9
// Trashed: r19 r21 r22 r23 r24 r25 r26 r28 r3 r31 r8
// Preserved: r1
fn0000F4D8_entry:
l0000F4D8:
	Mem5[r22 + 4<i32>:word32] = r8
l0000F4DC_thunk_fn0000D0B8:
	word32 r22_9
	word32 r31_10
	word32 r3_11
	word32 r28_12
	word32 r23_13
	word32 r26_14
	word32 r24_15
	word32 r21_16
	word32 r25_17
	word32 r19_18
	word32 r4_36
	word32 r7_37
	word32 r9_38
	word32 r27_39
	word32 r29_40
	fn0000D0B8(out r3_11, out r4_36, out r7_37, out r9_38, out r19_18, out r21_16, out r22_9, out r23_13, out r24_15, out r25_17, out r26_14, out r27_39, out r28_12, out r29_40, out r31_10)
	r3Out = r3_11
	r4Out = <invalid>
	r7Out = <invalid>
	r9Out = <invalid>
	r19Out = r19_18
	r21Out = r21_16
	r22Out = r22_9
	r23Out = r23_13
	r24Out = r24_15
	r25Out = r25_17
	r26Out = r26_14
	r27Out = <invalid>
	r28Out = r28_12
	r29Out = <invalid>
	r31Out = r31_10
	return <invalid>
fn0000F4D8_exit:


word32 fn000109C0(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
// MayUse:  r0:[0..31] r10:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r3
// Trashed: C r10 r11 r12 r18 r20 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
fn000109C0_entry:
	ptr32 fp
l000109C0:
	word16 wLoc6E_1884 = SLICE(r0, word16, 0)
	word16 wLoc6C_1890 = SLICE(r0, word16, 16)
	word16 wLoc6A_1893 = SLICE(r0, word16, 0)
	word16 wLoc68_1896 = SLICE(r0, word16, 16)
	word16 wLoc66_1920 = SLICE(r0, word16, 0)
	word16 wLoc62_1914 = SLICE(r0, word16, 0)
	word16 wLoc64_1917 = SLICE(r0, word16, 16)
	word16 wLoc5E_1908 = SLICE(r0, word16, 0)
	word16 wLoc60_1911 = SLICE(r0, word16, 16)
	word16 wLoc5A_1902 = SLICE(r0, word16, 0)
	word16 wLoc5C_1905 = SLICE(r0, word16, 16)
	word16 wLoc56_1887 = SLICE(r0, word16, 0)
	word16 wLoc58_1899 = SLICE(r0, word16, 16)
	word16 wLoc52_1878 = SLICE(r0, word16, 0)
	word16 wLoc54_1881 = SLICE(r0, word16, 16)
	branch Test(EQ,r7) l00010A1C_ds_t
l00010A1C_ds_t:
l00010A1C_ds_f:
l00010A20:
	word32 r4_44 = r6
	word32 r12_46 = r6 + r7 * 2<32>
l00010A30:
	word32 r3_57 = fp + 0xFFFFFF70<32> + CONVERT(Mem49[r4_44:word16], word16, word32) * 2<32>
	r4_44 = r4_44 + 2<32>
	word32 r9_59 = CONVERT(Mem49[r3_57 + 32<i32>:word16], word16, word32)
	branch Test(NE,r4_44 ^ r12_46) l00010A50_ds_t
l00010A50_ds_t:
	Mem62[r3_57 + 32<i32>:word16] = SLICE(r9_59, word16, 0) + 1<16>
l00010A50_ds_f:
	Mem64[r3_57 + 32<i32>:word16] = SLICE(r9_59, word16, 0) + 1<16>
l00010A54:
	word32 r3_1175
	word32 r4_1002
	word32 r9_106
	word32 r12_329
	word32 r3_196
	word32 r11_105
	word32 r3_208
	word32 r22_69 = CONVERT(wLoc52_1878, word16, word32)
	branch Test(NE,r22_69) l00010A5C_ds_t
l00010A5C_ds_t:
l000115E4:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(NE,r11_105) l000115EC_ds_t
l000115EC_ds_t:
	r9_106 = 0xF<32>
l000115EC_ds_f:
	r9_106 = 0xF<32>
l00010A5C_ds_f:
	word32 r3_77 = CONVERT(wLoc54_1881, word16, word32)
l00010A60:
	branch Test(NE,r3_77) l00010A64_ds_t
l00010A64_ds_t:
l00010B34:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(NE,r11_105) l00010B3C_ds_t
l00010B3C_ds_t:
l00011810:
	r9_106 = 0xE<32>
l00010B3C_ds_f:
	word32 r3_87 = CONVERT(wLoc6C_1890, word16, word32)
l00010B40:
	branch Test(NE,r3_87) l00010B44_ds_t
l00010B44_ds_t:
	r4_1002 = 2<32>
l00011710:
	r9_106 = 0xE<32>
	r3_196 = 2<32>
l00010B44_ds_f:
l00010B48:
	branch Test(NE,CONVERT(wLoc6A_1893, word16, word32)) l00010B50_ds_t
l00010B50_ds_t:
	r9_106 = 0xE<32>
l00011620:
	r4_1002 = 3<32>
	r3_196 = 2<32>
l00010B50_ds_f:
	r9_106 = 0xE<32>
l00010B54:
	r3_208 = CONVERT(wLoc68_1896, word16, word32)
l00010A64_ds_f:
	word32 r3_101 = CONVERT(wLoc56_1887, word16, word32)
l00010A68:
	branch Test(NE,r3_101) l00010A6C_ds_t
l00010A6C_ds_t:
l00011654:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l0001165C_ds_t
l0001165C_ds_t:
	r9_106 = 0xD<32>
l0001165C_ds_f:
	r9_106 = 0xD<32>
l00011660:
l00010A6C_ds_f:
	word32 r3_110 = CONVERT(wLoc58_1899, word16, word32)
l00010A70:
	branch Test(NE,r3_110) l00010A74_ds_t
l00010A74_ds_t:
l00011668:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l00011670_ds_t
l00011670_ds_t:
	r9_106 = 0xC<32>
l00011670_ds_f:
	r9_106 = 0xC<32>
l00011674:
l00010A74_ds_f:
	word32 r3_119 = CONVERT(wLoc5A_1902, word16, word32)
l00010A78:
	branch Test(NE,r3_119) l00010A7C_ds_t
l00010A7C_ds_t:
l0001167C:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l00011684_ds_t
l00011684_ds_t:
	r9_106 = 0xB<32>
l00011684_ds_f:
	r9_106 = 0xB<32>
l00011688:
l00010A7C_ds_f:
	word32 r3_128 = CONVERT(wLoc5C_1905, word16, word32)
l00010A80:
	branch Test(NE,r3_128) l00010A84_ds_t
l00010A84_ds_t:
l000116E0:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l000116E8_ds_t
l000116E8_ds_t:
	r9_106 = 0xA<32>
l000116E8_ds_f:
	r9_106 = 0xA<32>
l000116EC:
l00010A84_ds_f:
	word32 r3_137 = CONVERT(wLoc5E_1908, word16, word32)
l00010A88:
	branch Test(NE,r3_137) l00010A8C_ds_t
l00010A8C_ds_t:
l000116F4:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l000116FC_ds_t
l000116FC_ds_t:
	r9_106 = 9<32>
l000116FC_ds_f:
	r9_106 = 9<32>
l00011700:
l00010A8C_ds_f:
	word32 r3_146 = CONVERT(wLoc60_1911, word16, word32)
l00010A90:
	branch Test(NE,r3_146) l00010A94_ds_t
l00010A94_ds_t:
l0001171C:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l00011724_ds_t
l00011724_ds_t:
	r9_106 = 8<32>
l00011724_ds_f:
	r9_106 = 8<32>
l00011728:
l00010A94_ds_f:
	word32 r3_155 = CONVERT(wLoc62_1914, word16, word32)
l00010A98:
	branch Test(NE,r3_155) l00010A9C_ds_t
l00010A9C_ds_t:
l00011640:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l00011648_ds_t
l00011648_ds_t:
	r9_106 = 7<32>
l00011648_ds_f:
	r9_106 = 7<32>
l0001164C:
l00010A9C_ds_f:
	word32 r3_164 = CONVERT(wLoc64_1917, word16, word32)
l00010AA0:
	branch Test(NE,r3_164) l00010AA4_ds_t
l00010AA4_ds_t:
l0001173C:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l00011744_ds_t
l00011744_ds_t:
	r9_106 = 6<32>
l00011744_ds_f:
	r9_106 = 6<32>
l00011748:
l00010AA4_ds_f:
	word32 r3_173 = CONVERT(wLoc66_1920, word16, word32)
l00010AA8:
	branch Test(NE,r3_173) l00010AAC_ds_t
l00010AAC_ds_t:
l00011750:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l00011758_ds_t
l00011758_ds_t:
	r9_106 = 5<32>
l00011758_ds_f:
	r9_106 = 5<32>
l0001175C:
l00010AAC_ds_f:
	word32 r3_182 = CONVERT(wLoc68_1896, word16, word32)
l00010AB0:
	branch Test(NE,r3_182) l00010AB4_ds_t
l00010AB4_ds_t:
l0001177C:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(EQ,r11_105) l00011784_ds_t
l00011784_ds_t:
	r9_106 = 4<32>
l000115F0:
	branch Test(NE,CONVERT(wLoc6C_1890, word16, word32)) l000115F8_ds_t
l000115F8_ds_t:
l00011764:
	r4_1002 = 2<32>
	r3_196 = 2<32> - r11_105
l000115F8_ds_f:
	word32 r12_198 = CONVERT(wLoc6A_1893, word16, word32)
l000115FC:
	r4_1002 = 3<32>
	branch Test(NE,r12_198) l00011608_ds_t
l00011608_ds_t:
	r3_196 = 2<32> - r11_105
l00011608_ds_f:
	r3_196 = 2<32> - r11_105
l0001160C:
	branch Test(EQ,r9_106 ^ 4<32>) l00011614_ds_t
l00011614_ds_t:
	r4_1002 = r9_106
l00011614_ds_f:
l00011618:
	r3_208 = CONVERT(wLoc68_1896, word16, word32)
l00010B58:
	branch Test(NE,r3_208) l00010B5C_ds_t
l00010B5C_ds_t:
l00011770:
	r4_1002 = 4<32>
	r3_196 = 2<32> - r11_105
l00010B5C_ds_f:
l00010B60:
	branch Test(EQ,r9_106 ^ 5<32>) l00010B68_ds_t
l00010B68_ds_t:
l00010B68_ds_f:
l00010B6C:
	branch Test(NE,CONVERT(wLoc66_1920, word16, word32)) l00010B74_ds_t
l00010B74_ds_t:
l00011790:
	r4_1002 = 5<32>
	r3_196 = 2<32> - r11_105
l00010B74_ds_f:
l00010B78:
	branch Test(EQ,r9_106 ^ 6<32>) l00010B80_ds_t
l00010B80_ds_t:
l00010B80_ds_f:
l00010B84:
	branch Test(NE,CONVERT(wLoc64_1917, word16, word32)) l00010B8C_ds_t
l00010B8C_ds_t:
	r4_1002 = 6<32>
l000117E0:
	r3_196 = 2<32> - r11_105
l00010B8C_ds_f:
l00010B90:
	branch Test(EQ,r9_106 ^ 7<32>) l00010B98_ds_t
l00010B98_ds_t:
l00010B98_ds_f:
l00010B9C:
	branch Test(NE,CONVERT(wLoc62_1914, word16, word32)) l00010BA4_ds_t
l00010BA4_ds_t:
	r4_1002 = 7<32>
l000117E8:
	r3_196 = 2<32> - r11_105
l00010BA4_ds_f:
l00010BA8:
	branch Test(EQ,r9_106 ^ 8<32>) l00010BB0_ds_t
l00010BB0_ds_t:
	r4_1002 = r9_106
l00010BB0_ds_f:
l00010BB4:
	branch Test(NE,CONVERT(wLoc60_1911, word16, word32)) l00010BBC_ds_t
l00010BBC_ds_t:
	r4_1002 = 8<32>
l000117F0:
	r3_196 = 2<32> - r11_105
l00010BBC_ds_f:
l00010BC0:
	branch Test(EQ,r9_106 ^ 9<32>) l00010BC8_ds_t
l00010BC8_ds_t:
l00010BC8_ds_f:
l00010BCC:
	branch Test(NE,CONVERT(wLoc5E_1908, word16, word32)) l00010BD4_ds_t
l00010BD4_ds_t:
	r4_1002 = 9<32>
l000117F8:
	r3_196 = 2<32> - r11_105
l00010BD4_ds_f:
l00010BD8:
	branch Test(EQ,r9_106 ^ 0xA<32>) l00010BE0_ds_t
l00010BE0_ds_t:
l00010BE0_ds_f:
l00010BE4:
	branch Test(NE,CONVERT(wLoc5C_1905, word16, word32)) l00010BEC_ds_t
l00010BEC_ds_t:
	r4_1002 = 0xA<32>
l00011808:
	r3_196 = 2<32> - r11_105
l00010BEC_ds_f:
l00010BF0:
	branch Test(EQ,r9_106 ^ 0xB<32>) l00010BF8_ds_t
l00010BF8_ds_t:
	r4_1002 = r9_106
l00010BF8_ds_f:
l00010BFC:
	branch Test(NE,CONVERT(wLoc5A_1902, word16, word32)) l00010C04_ds_t
l00010C04_ds_t:
	r4_1002 = 0xB<32>
l00011800:
	r3_196 = 2<32> - r11_105
l00010C04_ds_f:
l00010C08:
	branch Test(EQ,r9_106 ^ 0xC<32>) l00010C10_ds_t
l00010C10_ds_t:
l000116D8:
	r4_1002 = r9_106
	r3_196 = 2<32> - r11_105
l00010C10_ds_f:
l00010C14:
	branch Test(NE,CONVERT(wLoc58_1899, word16, word32)) l00010C1C_ds_t
l00010C1C_ds_t:
	r4_1002 = 0xC<32>
l0001181C:
	r3_196 = 2<32> - r11_105
l00010C1C_ds_f:
l00010C20:
	branch Test(EQ,r9_106 ^ 0xD<32>) l00010C28_ds_t
l00010C28_ds_t:
l00011708:
	r4_1002 = r9_106
	r3_196 = 2<32> - r11_105
l00010C28_ds_f:
l00010C2C:
	branch Test(NE,CONVERT(wLoc56_1887, word16, word32)) l00010C34_ds_t
l00010C34_ds_t:
	r4_1002 = 0xD<32>
l00011824:
	r3_196 = 2<32> - r11_105
l00010C34_ds_f:
l00010C38:
	branch Test(NE,r9_106 ^ 0xF<32>) l00010C40_ds_t
l00010C40_ds_t:
l0001162C:
	r9_106 = 0xE<32>
l00011634:
	r4_1002 = r9_106
l00011638:
	r3_196 = 2<32> - r11_105
l00010C40_ds_f:
	word32 r12_310 = CONVERT(wLoc54_1881, word16, word32)
l00010C44:
	r4_1002 = r9_106
	branch Test(NE,r12_310) l00010C50_ds_t
l00010C50_ds_t:
	r3_196 = 2<32> - r11_105
l0001182C:
	r4_1002 = 0xE<32>
l00010C50_ds_f:
	r3_196 = 2<32> - r11_105
l00011784_ds_f:
	r9_106 = 4<32>
l00011788:
l00010AB4_ds_f:
	word32 r3_319 = CONVERT(wLoc6A_1893, word16, word32)
l00010AB8:
	branch Test(NE,r3_319) l00010ABC_ds_t
l00010ABC_ds_t:
l0001179C:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
	branch Test(NE,r11_105) l000117A4_ds_t
l000117A4_ds_t:
l00010F60:
	r9_106 = 3<32>
l00010F64:
l000117A4_ds_f:
	r12_329 = CONVERT(wLoc6C_1890, word16, word32)
l000117A8:
	r9_106 = 3<32>
	r4_1002 = 3<32>
	branch Test(EQ,r12_329) l000117B4_ds_t
l000117B4_ds_t:
	r3_196 = 2<32>
l000117B4_ds_f:
	r3_196 = 2<32>
l000117B8:
	r4_1002 = 2<32>
l00010ABC_ds_f:
	word32 r3_336 = CONVERT(wLoc6C_1890, word16, word32)
l00010AC0:
	branch Test(NE,r3_336) l00010AC4_ds_t
l00010AC4_ds_t:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
l000117C0:
	r9_106 = 2<32>
	r4_1002 = 2<32>
	branch Test(EQ,r11_105) l000117CC_ds_t
l000117CC_ds_t:
	r3_196 = 2<32>
l000117CC_ds_f:
l000117D0:
l00010AC4_ds_f:
	r11_105 = CONVERT(wLoc6E_1884, word16, word32)
l00010AC8:
	branch Test(NE,r11_105) l00010ACC_ds_t
l00010ACC_ds_t:
l00011730:
	r9_106 = 1<32>
l00010F68:
	r4_1002 = 1<32>
	r3_196 = 2<32> - r11_105
	branch Test(GE,r3_196) l00010C54
l00010C54:
	r12_329 = CONVERT(wLoc6C_1890, word16, word32)
l00010C58:
	word32 r3_373 = r3_196 * 2<32> - r12_329
	branch Test(LT,r3_373) l00010C64_ds_t
l00010C64_ds_t:
l00010C64_ds_f:
	word32 r20_379 = CONVERT(wLoc6A_1893, word16, word32)
l00010C68:
	word32 r3_381 = r3_373 * 2<32> - r20_379
	branch Test(LT,r3_381) l00010C74_ds_t
l00010C74_ds_t:
l00010C74_ds_f:
	word32 r19_385 = CONVERT(wLoc68_1896, word16, word32)
l00010C78:
	word32 r3_387 = r3_381 * 2<32> - r19_385
	branch Test(LT,r3_387) l00010C84_ds_t
l00010C84_ds_t:
l00010C84_ds_f:
	word32 r21_391 = CONVERT(wLoc66_1920, word16, word32)
l00010C88:
	word32 r3_393 = r3_387 * 2<32> - r21_391
	branch Test(LT,r3_393) l00010C94_ds_t
l00010C94_ds_t:
l00010C94_ds_f:
	word32 r23_397 = CONVERT(wLoc64_1917, word16, word32)
l00010C98:
	word32 r3_399 = r3_393 * 2<32> - r23_397
	branch Test(LT,r3_399) l00010CA4_ds_t
l00010CA4_ds_t:
l00010CA4_ds_f:
	word32 r24_403 = CONVERT(wLoc62_1914, word16, word32)
l00010CA8:
	word32 r3_405 = r3_399 * 2<32> - r24_403
	branch Test(LT,r3_405) l00010CB4_ds_t
l00010CB4_ds_t:
l00010CB4_ds_f:
	word32 r25_409 = CONVERT(wLoc60_1911, word16, word32)
l00010CB8:
	word32 r3_411 = r3_405 * 2<32> - r25_409
	branch Test(LT,r3_411) l00010CC4_ds_t
l00010CC4_ds_t:
l00010CC4_ds_f:
	word32 r26_415 = CONVERT(wLoc5E_1908, word16, word32)
l00010CC8:
	word32 r3_417 = r3_411 * 2<32> - r26_415
	branch Test(LT,r3_417) l00010CD4_ds_t
l00010CD4_ds_t:
l00010CD4_ds_f:
	word32 r27_421 = CONVERT(wLoc5C_1905, word16, word32)
l00010CD8:
	word32 r3_423 = r3_417 * 2<32> - r27_421
	branch Test(LT,r3_423) l00010CE4_ds_t
l00010CE4_ds_t:
l00010CE4_ds_f:
	word32 r28_427 = CONVERT(wLoc5A_1902, word16, word32)
l00010CE8:
	word32 r3_429 = r3_423 * 2<32> - r28_427
	branch Test(LT,r3_429) l00010CF4_ds_t
l00010CF4_ds_t:
l00010CF4_ds_f:
	word32 r29_433 = CONVERT(wLoc58_1899, word16, word32)
l00010CF8:
	word32 r3_435 = r3_429 * 2<32> - r29_433
	branch Test(LT,r3_435) l00010D04_ds_t
l00010D04_ds_t:
l00010D04_ds_f:
	word32 r30_439 = CONVERT(wLoc56_1887, word16, word32)
l00010D08:
	word32 r3_441 = r3_435 * 2<32> - r30_439
	branch Test(LT,r3_441) l00010D14_ds_t
l00010D14_ds_t:
l00010D14_ds_f:
	word32 r31_445 = CONVERT(wLoc54_1881, word16, word32)
l00010D18:
	word32 r3_447 = r3_441 * 2<32> - r31_445
	branch Test(LT,r3_447) l00010F74
l00010D24:
	word32 r3_459 = r3_447 * 2<32> - r22_69
	branch Test(LT,r3_459) l00010F74
l00010D30:
	branch Test(EQ,r3_459) l00010D34_ds_t
l00010D34_ds_t:
l00010D34_ds_f:
l00010D38:
	branch Test(GE,-r5 | r5) l00010D44_ds_t
l00010D44_ds_t:
	r3_1175 = 0xFFFFFFFF<32>
l00010D44_ds_f:
l00010D48:
	branch Test(NE,-(r9_106 ^ 1<32>) >>u 31<i32>) l00010F74
l00010DD4:
l00010DD8:
	word32 r27_606 = Mem605[r9:word32]
	branch Test(EQ,r7) l00010EB4_ds_t
l00010EB4_ds_t:
l00010EB4_ds_f:
	word32 r3_622 = 0<32>
l00010EB8:
	word32 r11_623 = 0<32>
l00010EBC:
	word32 r11_628 = CONVERT(Mem626[r11_623 + r6:word16], word16, word32)
	branch Test(EQ,r11_628) l00010EC4_ds_t
l00010EC4_ds_t:
l00010F4C:
	r3_622 = r3_622 + 1<32>
	branch Test(NE,r7 ^ r3_622) l00010F58_ds_t
l00010F58_ds_t:
	r11_623 = r3_622 * 2<32>
l00010F58_ds_f:
l00010F5C:
l00010EC4_ds_f:
l00010EC8:
	word32 r11_639 = CONVERT(Mem626[r11_628 * 2<32> + (fp + 0xFFFFFF70<32>):word16], word16, word32)
	Mem643[r11_639 * 2<32> + r10:word16] = SLICE(r3_622, word16, 0)
	Mem647[r11_628 * 2<32> + (fp + 0xFFFFFF70<32>):word16] = SLICE(r11_639, word16, 0) + 1<16>
	r3_622 = r3_622 + 1<32>
	branch Test(NE,r7 ^ r3_622) l00010EE8_ds_t
l00010EE8_ds_t:
	r11_623 = r3_622 * 2<32>
l00010EE8_ds_f:
l00010EEC:
	branch r9_106 -u r27_606 >= 0<32> l00010EF8
l00010EF4:
	r27_606 = r9_106
l00010EF8:
	branch r27_606 -u r4_1002 >= 0<32> l00010F04
l00010F00:
	r27_606 = r4_1002
l00010F04:
	word32 r11_702
	word32 r11_692 = Mem691[r8:word32]
	word32 r18_700 = r27_606 & 0x1F<32>
	branch Test(EQ,r18_700) l00010F1C_ds_t
l00010F1C_ds_t:
	r11_702 = 1<32>
l00010F1C_ds_f:
	word32 r11_703 = 1<32>
l00010F20:
	r18_700 = r18_700 + 0xFFFFFFFF<32>
	branch Test(NE,r18_700) l00010F28_ds_t
l00010F28_ds_t:
	r11_703 = r11_703 * 2<32>
l00010F28_ds_f:
	r11_702 = r11_703 * 2<32>
l00010F2C:
	word32 dwLoc40_2082
	word32 dwLoc3C_2087
	word32 dwLoc44_2081
	word32 dwLoc48_2080
	word32 r28_1707
	word32 r3_719
	branch Test(EQ,r5) l00010F30_ds_t
l00010F30_ds_t:
l00011040:
	r3_719 = 1<32>
	dwLoc48_2080 = r10
	dwLoc44_2081 = r10
	dwLoc40_2082 = r5
	r28_1707 = 0x14<32>
l00010F30_ds_f:
	r3_719 = r5 ^ 1<32>
l00010F34:
	branch Test(NE,r5 ^ 1<32>) l00010F7C
l00010F7C:
	word32 r5_749 = ~(-(r5 ^ 2<32>) | r5 ^ 2<32>)
	branch 0x250<32> -u r11_702 >= 0<32> l00011018_ds_t
l00011018_ds_t:
l00011018_ds_f:
l0001101C:
	branch Test(NE,r5_749 >>u 31<i32>) l00010F44
l00011020:
	dwLoc40_2082 = r5_749 >>u 31<i32>
	r28_1707 = 0<32>
	dwLoc48_2080 = 0xFFFFA980<32>
	dwLoc44_2081 = 0xFFFFA9C0<32>
l00011054:
	dwLoc3C_2087 = ~(-r3_719 | r3_719) >>u 31<i32>
l00010F38:
	branch 0x354<32> -u r11_702 >= 0<32> l00011834
l00011834:
	dwLoc3C_2087 = 1<32>
	dwLoc48_2080 = 0xFFFFAA00<32>
	dwLoc44_2081 = 0xFFFFAA40<32>
	dwLoc40_2082 = r5 ^ 1<32>
	r28_1707 = 0x101<32>
l000110E4:
	word32 r30_1145 = r11_702
	word32 r11_1758 = 0<32>
	word32 r21_1241 = 0xFFFFFFFF<32>
	word32 r29_1291 = r11_692
	word32 r23_1478 = r27_606
	word32 r25_1253 = 0<32>
	word32 r24_1225 = r4_1002
	word32 r31_864 = r11_702 + 0xFFFFFFFF<32>
l00011114:
	word32 r12_1764
	word32 r7_1781 = CONVERT(Mem875[r10:word16], word16, word32)
	word32 r20_879 = r24_1225 & 0xFF<32>
	branch r7_1781 + 1<32> -u r28_1707 < 0<32> l00011128_ds_t
l00011128_ds_t:
	r12_1764 = 0<32>
l00011128_ds_f:
l0001112C:
	branch r7_1781 -u r28_1707 < 0<32> l00011134_ds_t
l00011134_ds_t:
l000115D8:
	r7_1781 = 0<32>
	r12_1764 = 0x60<32>
l00011134_ds_f:
l00011138:
	word32 r7_891 = r7_1781 - r28_1707
	r7_1781 = CONVERT(Mem875[r7_891 * 2<32> + dwLoc44_2081:word16], word16, word32)
	r12_1764 = CONVERT(Mem875[r7_891 * 2<32> + dwLoc48_2080:word16], word16, word32) & 0xFF<32>
l00011150:
	word32 r5_905
	word32 r18_901 = r23_1478 & 0x1F<32>
	branch Test(EQ,r18_901) l0001115C_ds_t
l0001115C_ds_t:
	r5_905 = 1<32>
l0001115C_ds_f:
	word32 r5_906 = 1<32>
l00011160:
	r18_901 = r18_901 + 0xFFFFFFFF<32>
	branch Test(NE,r18_901) l00011168_ds_t
l00011168_ds_t:
	r5_906 = r5_906 * 2<32>
l00011168_ds_f:
	r5_905 = r5_906 * 2<32>
l0001116C:
	word32 r3_922
	word32 r18_916 = r25_1253 & 0x1F<32>
	branch Test(EQ,r18_916) l00011178_ds_t
l00011178_ds_t:
	r3_922 = r11_1758
l00011178_ds_f:
	word32 r3_923 = r11_1758
l0001117C:
	r18_916 = r18_916 + 0xFFFFFFFF<32>
	branch Test(NE,r18_916) l00011184_ds_t
l00011184_ds_t:
	r3_923 = r3_923 >>u 1<i32>
l00011184_ds_f:
	r3_922 = r3_923 >>u 1<i32>
l00011188:
	word32 r8_947
	word32 r3_935 = r3_922 + r5_905
	word32 r18_941 = r24_1225 & 0x1F<32>
	branch Test(EQ,r18_941) l00011198_ds_t
l00011198_ds_t:
	r8_947 = 1<32>
l00011198_ds_f:
	word32 r8_948 = 1<32>
l0001119C:
	r18_941 = r18_941 + 0xFFFFFFFF<32>
	branch Test(NE,r18_941) l000111A4_ds_t
l000111A4_ds_t:
	r8_948 = r8_948 * 2<32>
l000111A4_ds_f:
	r8_947 = r8_948 * 2<32>
l000111A8:
	word32 r19_974
	word32 r3_969 = r29_1291 + (r3_935 - r8_947) * 4<32>
	word32 r18_972 = r24_1225 & 0x1F<32>
	branch Test(EQ,r18_972) l000111C8_ds_t
l000111C8_ds_t:
	r19_974 = 0xFFFFFFFC<32>
l000111C8_ds_f:
	word32 r19_975 = 0xFFFFFFFC<32>
l000111CC:
	r18_972 = r18_972 + 0xFFFFFFFF<32>
	branch Test(NE,r18_972) l000111D4_ds_t
l000111D4_ds_t:
	r19_975 = r19_975 * 2<32>
l000111D4_ds_f:
	r19_974 = r19_975 * 2<32>
l000111D8:
	Mem984[r3_969:byte] = SLICE(r12_1764, byte, 0)
	Mem987[r3_969 + 1<i32>:byte] = SLICE(r20_879, byte, 0)
	Mem990[r3_969 + 2<i32>:word16] = SLICE(r7_1781, word16, 0)
	r5_905 = r5_905 - r8_947
	branch Test(NE,r5_905) l000111EC_ds_t
l000111EC_ds_t:
	r3_969 = r3_969 + r19_974
l000111EC_ds_f:
l000111F0:
	word32 r3_1014
	word32 r5_1007 = r4_1002 + 0xFFFFFFFF<32>
	word32 r18_1008 = r5_1007 & 0x1F<32>
	branch Test(EQ,r5_1007 & 0x1F<32>) l00011200_ds_t
l00011200_ds_t:
	r3_1014 = 1<32>
l00011200_ds_f:
	word32 r3_1015 = 1<32>
l00011204:
	r18_1008 = r18_1008 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1008) l0001120C_ds_t
l0001120C_ds_t:
	r3_1015 = r3_1015 * 2<32>
l0001120C_ds_f:
	r3_1014 = r3_1015 * 2<32>
l00011210:
	branch Test(EQ,r11_1758 & r3_1014) l00011224
l00011218:
	r3_1014 = r3_1014 >>u 1<i32>
	branch Test(NE,r11_1758 & r3_1014) l00011218
l00011224:
	word32 r7_1041
	branch Test(EQ,r3_1014) l00011228_ds_t
l00011228_ds_t:
	r7_1041 = r4_1002 * 2<32>
l00011228_ds_f:
	r7_1041 = r4_1002 * 2<32>
l0001122C:
	r3_1014 = r3_1014 + (r3_1014 + 0xFFFFFFFF<32> & r11_1758)
l00011238:
	word32 r7_1063 = fp + 0xFFFFFF70<32> + r7_1041
	word32 r5_1070 = CONVERT(Mem990[r7_1063 + 32<i32>:word16], word16, word32)
	branch Test(NE,r5_1070 + 0xFFFFFFFF<32>) l00011250_ds_t
l00011250_ds_t:
	Mem1074[r7_1063 + 32<i32>:word16] = SLICE(r5_1070, word16, 0) + 0xFFFF<16>
l00011250_ds_f:
	Mem1076[r7_1063 + 32<i32>:word16] = SLICE(r5_1070, word16, 0) + 0xFFFF<16>
l00011254:
	word32 r4_1093 = r4_1002 ^ r9_106
	branch Test(EQ,r4_1093) l00011690
l00011690:
	branch Test(EQ,r3_1014) l00011694_ds_t
l00011694_ds_t:
l00011694_ds_f:
l00011698:
	word32 r3_1111 = r3_1014 * 2<32>
	Mem1123[r3_1111 * 2<32> + r29_1291:byte] = 0x40<8>
	word32 r5_1121 = r29_1291 + r3_1111 * 2<32>
	Mem1130[r5_1121 + 1<i32>:byte] = SLICE(r20_879, byte, 0)
	Mem1132[r5_1121 + 2<i32>:word16] = SLICE(r4_1093, word16, 0)
l000116B4:
	Mem1156[r8:word32] = r11_692 + r30_1145 * 4<32>
	Mem1174[r9:word32] = r27_606
	r3_1175 = 0<32>
l0001125C:
	r4_1002 = CONVERT(Mem1076[CONVERT(Mem1076[r10 + 2<i32>:word16], word16, word32) * 2<32> + r6:word16], word16, word32)
l00011268:
	branch r27_606 -u r4_1002 >= 0<32> l00011270_ds_t
l00011270_ds_t:
	r24_1225 = r4_1002 - r25_1253
l00011270_ds_f:
	r24_1225 = r4_1002 - r25_1253
l00011274:
	word32 r7_1231 = r31_864 & r3_1014
	branch Test(EQ,r7_1231 ^ r21_1241) l00011284_ds_t
l00011284_ds_t:
l00011284_ds_f:
l00011288:
	branch Test(NE,r25_1253) l0001128C_ds_t
l0001128C_ds_t:
l0001128C_ds_f:
l00011290:
	r25_1253 = r27_606
l00011294:
	word32 r5_1272
	word32 r18_1269 = r23_1478 & 0x1F<32>
	branch Test(EQ,r18_1269) l000112A0_ds_t
l000112A0_ds_t:
	r5_1272 = 4<32>
l000112A0_ds_f:
	word32 r5_1273 = 4<32>
l000112A4:
	r18_1269 = r18_1269 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1269) l000112AC_ds_t
l000112AC_ds_t:
	r5_1273 = r5_1273 * 2<32>
l000112AC_ds_f:
	r5_1272 = r5_1273 * 2<32>
l000112B0:
	word32 r5_1303
	word32 r23_1285 = r4_1002 - r25_1253
	r29_1291 = r29_1291 + r5_1272
	word32 r18_1292 = r23_1285 & 0x1F<32>
	branch Test(EQ,r23_1285 & 0x1F<32>) l000112C4_ds_t
l000112C4_ds_t:
	r5_1303 = 1<32>
l000112C4_ds_f:
	word32 r5_1304 = 1<32>
l000112C8:
	r18_1292 = r18_1292 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1292) l000112D0_ds_t
l000112D0_ds_t:
	r5_1304 = r5_1304 * 2<32>
l000112D0_ds_f:
	r5_1303 = r5_1304 * 2<32>
l000112D4:
	branch r4_1002 -u r9_106 >= 0<32> l000112DC_ds_t
l000112DC_ds_t:
	r23_1478 = r23_1285
l000112DC_ds_f:
l000112E0:
	word32 r5_1339 = r5_1303 - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r4_1002 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1339) l000112F4_ds_t
l000112F4_ds_t:
	r23_1478 = r23_1285
l000112F4_ds_f:
	word32 r11_1341 = r23_1285 + 1<32>
l000112F8:
	word32 r8_1344 = r23_1285 + 1<32> + r25_1253
	branch r8_1344 -u r9_106 >= 0<32> l00011304_ds_t
l00011304_ds_t:
l00011304_ds_f:
l00011308:
	word32 r5_1352 = r5_1339 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1344 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1352) l00011550
l0001131C:
	r11_1341 = r23_1285 + 2<32>
	word32 r8_1354 = r25_1253 + (r23_1285 + 2<32>)
	branch r8_1354 -u r9_106 >= 0<32> l0001132C_ds_t
l0001132C_ds_t:
l0001132C_ds_f:
l00011330:
	word32 r5_1362 = r5_1352 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1354 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1362) l00011550
l00011344:
	r11_1341 = r23_1285 + 3<32>
	word32 r8_1364 = r25_1253 + (r23_1285 + 3<32>)
	branch r8_1364 -u r9_106 >= 0<32> l00011354_ds_t
l00011354_ds_t:
l00011354_ds_f:
l00011358:
	word32 r5_1372 = r5_1362 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1364 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1372) l00011550
l0001136C:
	r11_1341 = r23_1285 + 4<32>
	word32 r8_1374 = r25_1253 + (r23_1285 + 4<32>)
	branch r8_1374 -u r9_106 >= 0<32> l0001137C_ds_t
l0001137C_ds_t:
l0001137C_ds_f:
l00011380:
	word32 r5_1382 = r5_1372 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1374 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1382) l00011550
l00011394:
	r11_1341 = r23_1285 + 5<32>
	word32 r8_1384 = r25_1253 + (r23_1285 + 5<32>)
	branch r8_1384 -u r9_106 >= 0<32> l000113A4_ds_t
l000113A4_ds_t:
l000113A4_ds_f:
l000113A8:
	word32 r5_1392 = r5_1382 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1384 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1392) l00011550
l000113BC:
	r11_1341 = r23_1285 + 6<32>
	word32 r8_1394 = r25_1253 + (r23_1285 + 6<32>)
	branch r8_1394 -u r9_106 >= 0<32> l000113CC_ds_t
l000113CC_ds_t:
l000113CC_ds_f:
l000113D0:
	word32 r5_1402 = r5_1392 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1394 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1402) l00011550
l000113E4:
	r11_1341 = r23_1285 + 7<32>
	word32 r8_1404 = r25_1253 + (r23_1285 + 7<32>)
	branch r8_1404 -u r9_106 >= 0<32> l000113F4_ds_t
l000113F4_ds_t:
l000113F4_ds_f:
l000113F8:
	word32 r5_1412 = r5_1402 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1404 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1412) l00011550
l0001140C:
	r11_1341 = r23_1285 + 8<32>
	word32 r8_1414 = r25_1253 + (r23_1285 + 8<32>)
	branch r8_1414 -u r9_106 >= 0<32> l0001141C_ds_t
l0001141C_ds_t:
l0001141C_ds_f:
l00011420:
	word32 r5_1422 = r5_1412 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1414 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1422) l00011550
l00011434:
	r11_1341 = r23_1285 + 9<32>
	word32 r8_1424 = r25_1253 + (r23_1285 + 9<32>)
	branch r8_1424 -u r9_106 >= 0<32> l00011444_ds_t
l00011444_ds_t:
l00011444_ds_f:
l00011448:
	word32 r5_1432 = r5_1422 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1424 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1432) l00011550
l0001145C:
	r11_1341 = r23_1285 + 0xA<32>
	word32 r8_1434 = r25_1253 + (r23_1285 + 0xA<32>)
	branch r8_1434 -u r9_106 >= 0<32> l0001146C_ds_t
l0001146C_ds_t:
l0001146C_ds_f:
l00011470:
	word32 r5_1442 = r5_1432 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1434 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1442) l00011484_ds_t
l00011484_ds_t:
l00011484_ds_f:
	word32 r8_1444 = r23_1285 + 0xB<32>
l00011488:
	word32 r11_1445 = r25_1253 + (r23_1285 + 0xB<32>)
	branch r11_1445 -u r9_106 >= 0<32> l00011494_ds_t
l00011494_ds_t:
l00011494_ds_f:
l00011498:
	word32 r5_1453 = r5_1442 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r11_1445 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1453) l000114AC_ds_t
l000114AC_ds_t:
l000114AC_ds_f:
	r11_1341 = r23_1285 + 0xC<32>
l000114B0:
	word32 r8_1456 = r25_1253 + (r23_1285 + 0xC<32>)
	branch r8_1456 -u r9_106 >= 0<32> l000114BC_ds_t
l000114BC_ds_t:
l000114BC_ds_f:
l000114C0:
	word32 r5_1464 = r5_1453 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1456 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1464) l000114D4_ds_t
l000114D4_ds_t:
l000114D4_ds_f:
	r8_1444 = r23_1285 + 0xD<32>
l000114D8:
	word32 r11_1467 = r25_1253 + (r23_1285 + 0xD<32>)
	branch r11_1467 -u r9_106 >= 0<32> l000114E4_ds_t
l000114E4_ds_t:
l000114E4_ds_f:
l000114E8:
	word32 r5_1475 = r5_1464 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r11_1467 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1475) l000114FC_ds_t
l000114FC_ds_t:
l000117D8:
	r23_1478 = r8_1444
l000114FC_ds_f:
	r11_1341 = r23_1285 + 0xE<32>
l00011500:
	word32 r8_1480 = r25_1253 + (r23_1285 + 0xE<32>)
	branch r8_1480 -u r9_106 >= 0<32> l0001150C_ds_t
l0001150C_ds_t:
l0001150C_ds_f:
l00011510:
	word32 r5_1488 = r5_1475 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1480 * 2<32>) + 32<i32>:word16], word16, word32)
	branch Test(LE,r5_1488) l00011550
l00011524:
	r11_1341 = r23_1285 + 0xF<32>
	word32 r8_1490 = r25_1253 + (r23_1285 + 0xF<32>)
	branch r8_1490 -u r9_106 >= 0<32> l00011534_ds_t
l00011534_ds_t:
l00011534_ds_f:
l00011538:
	branch Test(GT,r5_1488 * 2<32> - CONVERT(Mem1228[((fp + 0xFFFFFF70<32>) + r8_1490 * 2<32>) + 32<i32>:word16], word16, word32)) l0001154C_ds_t
l0001154C_ds_t:
	r23_1478 = r23_1285 + 0x10<32>
l0001154C_ds_f:
l00011550:
	r23_1478 = r11_1341
l00011554:
	word32 r18_1504 = r23_1478 & 0x1F<32>
	branch Test(EQ,r18_1504) l00011560_ds_t
l00011560_ds_t:
	r5_1303 = 1<32>
l00011560_ds_f:
	word32 r5_1512 = 1<32>
l00011564:
	r18_1504 = r18_1504 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1504) l0001156C_ds_t
l0001156C_ds_t:
	r5_1512 = r5_1512 * 2<32>
l0001156C_ds_f:
	r5_1303 = r5_1512 * 2<32>
l00011570:
	r24_1225 = r23_1285
	r30_1145 = r30_1145 + r5_1303
	branch 0x354<32> -u r30_1145 >= 0<32> l00011580_ds_t
l00011580_ds_t:
l00011580_ds_f:
l00011584:
	branch Test(NE,dwLoc3C_2087) l00010F44
l0001158C:
	branch 0x250<32> -u r30_1145 >= 0<32> l00011594_ds_t
l00011594_ds_t:
l00011594_ds_f:
l00011598:
	branch Test(NE,dwLoc40_2082) l00010F44
l000115A0:
	Mem1581[r7_1231 * 4<32> + r11_692:byte] = SLICE(r23_1478, byte, 0)
	word32 r5_1575 = r11_692 + r7_1231 * 4<32>
	Mem1608[r5_1575 + 1<i32>:byte] = SLICE(r27_606, byte, 0)
	Mem1610[r5_1575 + 2<i32>:word16] = SLICE(r29_1291 - r11_692 >> 2<i32>, word16, 0)
	r21_1241 = r7_1231
l000115CC:
l000115D0:
	r11_1758 = r3_1014
	r10 = r10 + 2<32>
l00010F44:
	r3_1175 = 1<32>
l00010F74:
	r3_1175 = 0xFFFFFFFF<32>
l00010ACC_ds_f:
	r3_1175 = r11_105
l00010AD0:
	word32 r4_1644 = Mem67[r8:word32]
	Mem1647[r4_1644:word16] = 0x4001<16>
	Mem1649[r4_1644 + 2<i32>:word16] = SLICE(r11_105, word16, 0)
	Mem1651[r8:word32] = r4_1644 + 8<32>
	Mem1653[r4_1644 + 4<i32>:word16] = 0x4001<16>
	Mem1655[r4_1644 + 6<i32>:word16] = SLICE(r11_105, word16, 0)
	Mem1658[r9:word32] = 1<32>
l00010AFC:
	return r3_1175
fn000109C0_exit:


void fn0001185C(word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: C r10 r11 r12 r18 r20 r3 r4 r6 r7 r8 r9
// Preserved: r1 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
fn0001185C_entry:
l0001185C:
	word32 r28_1386
	word32 r9_1445
	word32 r8_1756 = CONVERT(Mem29[r6 + 2<i32>:word16], word16, word32)
	branch Test(EQ,r8_1756) l0001189C_ds_t
l0001189C_ds_t:
	r28_1386 = 3<32>
l000121A4:
	r9_1445 = 0x8A<32>
l0001189C_ds_f:
l000118A0:
	r28_1386 = 4<32>
	r9_1445 = 7<32>
l000118A8:
	branch Test(LT,r7) l000118AC_ds_t
l000118AC_ds_t:
l000118AC_ds_f:
l000118B0:
	word32 r3_1449 = 0<32>
	word32 r10_1692 = r6 + 6<32>
	word32 r29_1327 = 0xFFFFFFFF<32>
	word32 r6_49 = r6 + (r7 * 4<32> + 0xA<32>)
l000118F0:
	word32 r11_1188
	word32 r9_569
	word32 r7_70
	word32 r4_572 = r3_1449 + 1<32>
	branch r4_572 >= r9_1445 l000118FC_ds_t
l000118FC_ds_t:
	r11_1188 = CONVERT(Mem64[r10_1692:word16], word16, word32)
l00011B0C:
	r9_569 = Mem64[r5 + 5820<i32>:word32]
	r7_70 = CONVERT(Mem64[r5 + 5816<i32>:word16], word16, word32)
l000118FC_ds_f:
	r11_1188 = CONVERT(Mem64[r10_1692:word16], word16, word32)
l00011900:
	branch Test(EQ,r11_1188 ^ r8_1756) l0001218C
l0001218C:
	r3_1449 = r4_572
l00011908:
	r9_569 = Mem64[r5 + 5820<i32>:word32]
	branch r4_572 >= r28_1386 l00011914_ds_t
l00011914_ds_t:
	r7_70 = CONVERT(Mem64[r5 + 5816<i32>:word16], word16, word32)
l00011B14:
	branch Test(EQ,r8_1756) l00011B18_ds_t
l00011B18_ds_t:
	word32 r7_84 = CONVERT(SLICE(r7_70, int16, 0), int16, int32)
l00011DC0:
	branch r4_572 > 0xA<32> l00011F84
l00011F84:
	word32 r30_104
	word32 r29_92 = CONVERT(Mem64[r5 + 2756<i32>:word16], word16, word32)
	word32 r28_94 = CONVERT(Mem64[r5 + 2758<i32>:word16], word16, word32)
	word32 r18_100 = r9_569 & 0x1F<32>
	branch Test(EQ,r18_100) l00011F98_ds_t
l00011F98_ds_t:
	r30_104 = r29_92
l00011F98_ds_f:
	word32 r30_102 = r29_92
l00011F9C:
	r18_100 = r18_100 + 0xFFFFFFFF<32>
	branch Test(NE,r18_100) l00011FA4_ds_t
l00011FA4_ds_t:
	r30_102 = r30_102 * 2<32>
l00011FA4_ds_f:
	r30_104 = r30_102 * 2<32>
l00011FA8:
	word32 r30_186
	word32 r9_170
	word32 r30_188
	word32 r7_111 = CONVERT(SLICE(r7_84 | r30_104, int16, 0), int16, int32)
	branch 0x10<32> - r28_94 < r9_569 l00011FC8_ds_t
l00011FC8_ds_t:
l000121AC:
	word32 r30_157
	word32 r9_124 = Mem64[r5 + 20<i32>:word32]
	word32 r31_125 = Mem64[r5 + 8<i32>:word32]
	Mem127[r5 + 5816<i32>:word16] = SLICE(r7_111, word16, 0)
	Mem129[r5 + 20<i32>:word32] = r9_124 + 1<32>
	Mem131[r9_124 + r31_125:byte] = SLICE(r7_111, byte, 0)
	word32 r7_132 = Mem131[r5 + 20<i32>:word32]
	word32 r31_134 = CONVERT(Mem131[r5 + 5816<i32>:word16], word16, word32)
	word32 r9_135 = Mem131[r5 + 8<i32>:word32]
	Mem137[r5 + 20<i32>:word32] = r7_132 + 1<32>
	Mem148[r7_132 + r9_135:byte] = SLICE(r31_134 >>u 8<i32>, byte, 0)
	word32 r7_149 = Mem148[r5 + 5820<i32>:word32]
	word32 r28_152 = 0x10<32> - r7_149
	word32 r18_153 = r28_152 & 0x1F<32>
	branch Test(EQ,r28_152 & 0x1F<32>) l0001221C_ds_t
l0001221C_ds_t:
	r30_157 = r29_92
l0001221C_ds_f:
	word32 r30_158 = r29_92
l00012220:
	r18_153 = r18_153 + 0xFFFFFFFF<32>
	branch Test(NE,r18_153) l00012228_ds_t
l00012228_ds_t:
	r30_158 = r30_158 >> 1<i32>
l00012228_ds_f:
	r30_157 = r30_158 >> 1<i32>
l0001222C:
	Mem176[r5 + 5816<i32>:word16] = SLICE(r30_157, word16, 0)
	r9_170 = r28_94 + 0xFFFFFFF0<32> + r7_149
	Mem177[r5 + 5820<i32>:word32] = r9_170
	branch r9_170 > 9<32> l00012248_ds_t
l00012248_ds_t:
	r30_186 = CONVERT(SLICE(r30_157, int16, 0), int16, int32)
l00012248_ds_f:
	r30_188 = CONVERT(SLICE(r30_157, int16, 0), int16, int32)
l00011FC8_ds_f:
	r9_170 = r28_94 + r9_569
l00011FCC:
	Mem191[r5 + 5816<i32>:word16] = SLICE(r7_111, word16, 0)
	Mem192[r5 + 5820<i32>:word32] = r9_170
	branch r9_170 <= 9<32> l00011FDC_ds_t
l00011FDC_ds_t:
	r30_188 = CONVERT(SLICE(r7_111, int16, 0), int16, int32)
l0001224C:
	word32 r4_206
	word32 r18_204 = r9_170 & 0x1F<32>
	branch Test(EQ,r18_204) l00012264_ds_t
l00012264_ds_t:
	r4_206 = r4_572 + 0xFFFFFFF5<32>
l00012264_ds_f:
	word32 r4_207 = r4_572 + 0xFFFFFFF5<32>
l00012268:
	r18_204 = r18_204 + 0xFFFFFFFF<32>
	branch Test(NE,r18_204) l00012270_ds_t
l00012270_ds_t:
	r4_207 = r4_207 * 2<32>
l00012270_ds_f:
	r4_206 = r4_207 * 2<32>
l00012274:
	Mem225[r5 + 5816<i32>:word16] = SLICE(r30_188 | r4_206, word16, 0)
	Mem226[r5 + 5820<i32>:word32] = r9_170 + 7<32>
l00011FDC_ds_f:
	r30_186 = CONVERT(SLICE(r7_111, int16, 0), int16, int32)
l00011FE0:
	word32 r4_244
	word32 r7_231 = Mem230[r5 + 20<i32>:word32]
	word32 r3_238 = r3_1449 + 0xFFFFFFF6<32>
	word32 r28_240 = Mem230[r5 + 8<i32>:word32]
	word32 r18_242 = r9_170 & 0x1F<32>
	branch Test(EQ,r18_242) l00012000_ds_t
l00012000_ds_t:
	r4_244 = r3_238
l00012000_ds_f:
	word32 r4_245 = r3_238
l00012004:
	r18_242 = r18_242 + 0xFFFFFFFF<32>
	branch Test(NE,r18_242) l0001200C_ds_t
l0001200C_ds_t:
	r4_245 = r4_245 * 2<32>
l0001200C_ds_f:
	r4_244 = r4_245 * 2<32>
l00012010:
	word32 r7_295
	word32 r4_257 = CONVERT(SLICE(r30_186 | r4_244, int16, 0), int16, int32)
	Mem264[r5 + 5816<i32>:word16] = SLICE(r4_257, word16, 0)
	Mem265[r5 + 20<i32>:word32] = r7_231 + 1<32>
	Mem269[r7_231 + r28_240:byte] = SLICE(r4_257, byte, 0)
	word32 r4_270 = Mem269[r5 + 20<i32>:word32]
	word32 r28_272 = CONVERT(Mem269[r5 + 5816<i32>:word16], word16, word32)
	word32 r7_273 = Mem269[r5 + 8<i32>:word32]
	Mem275[r5 + 20<i32>:word32] = r4_270 + 1<32>
	Mem286[r4_270 + r7_273:byte] = SLICE(r28_272 >>u 8<i32>, byte, 0)
	word32 r4_287 = Mem286[r5 + 5820<i32>:word32]
	word32 r9_289 = 0x10<32> - r4_287
	word32 r18_291 = r9_289 & 0x1F<32>
	branch Test(EQ,r9_289 & 0x1F<32>) l00012080_ds_t
l00012080_ds_t:
	r7_295 = r3_238
l00012080_ds_f:
	word32 r7_296 = r3_238
l00012084:
	r18_291 = r18_291 + 0xFFFFFFFF<32>
	branch Test(NE,r18_291) l0001208C_ds_t
l0001208C_ds_t:
	r7_296 = r7_296 >> 1<i32>
l0001208C_ds_f:
	r7_295 = r7_296 >> 1<i32>
l00012090:
	Mem308[r5 + 5820<i32>:word32] = r4_287 + 0xFFFFFFF7<32>
	Mem311[r5 + 5816<i32>:word16] = SLICE(r7_295, word16, 0)
l00011DC8:
	word32 r30_318
	word32 r29_313 = CONVERT(Mem64[r5 + 2752<i32>:word16], word16, word32)
	word32 r28_315 = CONVERT(Mem64[r5 + 2754<i32>:word16], word16, word32)
	word32 r18_316 = r9_569 & 0x1F<32>
	branch Test(EQ,r18_316) l00011DDC_ds_t
l00011DDC_ds_t:
	r30_318 = r29_313
l00011DDC_ds_f:
	word32 r30_319 = r29_313
l00011DE0:
	r18_316 = r18_316 + 0xFFFFFFFF<32>
	branch Test(NE,r18_316) l00011DE8_ds_t
l00011DE8_ds_t:
	r30_319 = r30_319 * 2<32>
l00011DE8_ds_f:
	r30_318 = r30_319 * 2<32>
l00011DEC:
	word32 r30_406
	word32 r9_390
	word32 r30_408
	word32 r7_331 = CONVERT(SLICE(r7_84 | r30_318, int16, 0), int16, int32)
	branch 0x10<32> - r28_315 < r9_569 l00011E0C_ds_t
l00011E0C_ds_t:
l00012288:
	word32 r30_377
	word32 r9_344 = Mem64[r5 + 20<i32>:word32]
	word32 r31_345 = Mem64[r5 + 8<i32>:word32]
	Mem347[r5 + 5816<i32>:word16] = SLICE(r7_331, word16, 0)
	Mem349[r5 + 20<i32>:word32] = r9_344 + 1<32>
	Mem351[r9_344 + r31_345:byte] = SLICE(r7_331, byte, 0)
	word32 r7_352 = Mem351[r5 + 20<i32>:word32]
	word32 r31_354 = CONVERT(Mem351[r5 + 5816<i32>:word16], word16, word32)
	word32 r9_355 = Mem351[r5 + 8<i32>:word32]
	Mem357[r5 + 20<i32>:word32] = r7_352 + 1<32>
	Mem368[r7_352 + r9_355:byte] = SLICE(r31_354 >>u 8<i32>, byte, 0)
	word32 r7_369 = Mem368[r5 + 5820<i32>:word32]
	word32 r28_372 = 0x10<32> - r7_369
	word32 r18_373 = r28_372 & 0x1F<32>
	branch Test(EQ,r28_372 & 0x1F<32>) l000122F8_ds_t
l000122F8_ds_t:
	r30_377 = r29_313
l000122F8_ds_f:
	word32 r30_378 = r29_313
l000122FC:
	r18_373 = r18_373 + 0xFFFFFFFF<32>
	branch Test(NE,r18_373) l00012304_ds_t
l00012304_ds_t:
	r30_378 = r30_378 >> 1<i32>
l00012304_ds_f:
	r30_377 = r30_378 >> 1<i32>
l00012308:
	Mem396[r5 + 5816<i32>:word16] = SLICE(r30_377, word16, 0)
	r9_390 = r28_315 + 0xFFFFFFF0<32> + r7_369
	Mem397[r5 + 5820<i32>:word32] = r9_390
	branch r9_390 > 0xD<32> l00012324_ds_t
l00012324_ds_t:
	r30_406 = CONVERT(SLICE(r30_377, int16, 0), int16, int32)
l00012324_ds_f:
	r30_408 = CONVERT(SLICE(r30_377, int16, 0), int16, int32)
l00011E0C_ds_f:
	r9_390 = r28_315 + r9_569
l00011E10:
	Mem411[r5 + 5816<i32>:word16] = SLICE(r7_331, word16, 0)
	Mem412[r5 + 5820<i32>:word32] = r9_390
	branch r9_390 <= 0xD<32> l00011E20_ds_t
l00011E20_ds_t:
	r30_408 = CONVERT(SLICE(r7_331, int16, 0), int16, int32)
l00012328:
	word32 r3_426
	word32 r18_424 = r9_390 & 0x1F<32>
	branch Test(EQ,r18_424) l00012340_ds_t
l00012340_ds_t:
	r3_426 = r4_572 + 0xFFFFFFFD<32>
l00012340_ds_f:
	word32 r3_427 = r4_572 + 0xFFFFFFFD<32>
l00012344:
	r18_424 = r18_424 + 0xFFFFFFFF<32>
	branch Test(NE,r18_424) l0001234C_ds_t
l0001234C_ds_t:
	r3_427 = r3_427 * 2<32>
l0001234C_ds_f:
	r3_426 = r3_427 * 2<32>
l00012350:
	Mem445[r5 + 5816<i32>:word16] = SLICE(r30_408 | r3_426, word16, 0)
	Mem446[r5 + 5820<i32>:word32] = r9_390 + 3<32>
l00011E20_ds_f:
	r30_406 = CONVERT(SLICE(r7_331, int16, 0), int16, int32)
l00011E24:
	word32 r4_463
	word32 r7_451 = Mem450[r5 + 20<i32>:word32]
	word32 r3_457 = r3_1449 + 0xFFFFFFFE<32>
	word32 r28_459 = Mem450[r5 + 8<i32>:word32]
	word32 r18_461 = r9_390 & 0x1F<32>
	branch Test(EQ,r18_461) l00011E44_ds_t
l00011E44_ds_t:
	r4_463 = r3_457
l00011E44_ds_f:
	word32 r4_464 = r3_457
l00011E48:
	r18_461 = r18_461 + 0xFFFFFFFF<32>
	branch Test(NE,r18_461) l00011E50_ds_t
l00011E50_ds_t:
	r4_464 = r4_464 * 2<32>
l00011E50_ds_f:
	r4_463 = r4_464 * 2<32>
l00011E54:
	word32 r7_514
	word32 r30_476 = CONVERT(SLICE(r30_406 | r4_463, int16, 0), int16, int32)
	Mem483[r5 + 5816<i32>:word16] = SLICE(r30_476, word16, 0)
	Mem484[r5 + 20<i32>:word32] = r7_451 + 1<32>
	Mem488[r7_451 + r28_459:byte] = SLICE(r30_476, byte, 0)
	word32 r4_489 = Mem488[r5 + 20<i32>:word32]
	word32 r28_491 = CONVERT(Mem488[r5 + 5816<i32>:word16], word16, word32)
	word32 r7_492 = Mem488[r5 + 8<i32>:word32]
	Mem494[r5 + 20<i32>:word32] = r4_489 + 1<32>
	Mem505[r4_489 + r7_492:byte] = SLICE(r28_491 >>u 8<i32>, byte, 0)
	word32 r4_506 = Mem505[r5 + 5820<i32>:word32]
	word32 r9_508 = 0x10<32> - r4_506
	word32 r18_510 = r9_508 & 0x1F<32>
	branch Test(EQ,r9_508 & 0x1F<32>) l00011EC4_ds_t
l00011EC4_ds_t:
	r7_514 = r3_457
l00011EC4_ds_f:
	word32 r7_515 = r3_457
l00011EC8:
	r18_510 = r18_510 + 0xFFFFFFFF<32>
	branch Test(NE,r18_510) l00011ED0_ds_t
l00011ED0_ds_t:
	r7_515 = r7_515 >> 1<i32>
l00011ED0_ds_f:
	r7_514 = r7_515 >> 1<i32>
l00011ED4:
	Mem527[r5 + 5820<i32>:word32] = r4_506 + 0xFFFFFFF3<32>
	Mem530[r5 + 5816<i32>:word16] = SLICE(r7_514, word16, 0)
l00011B18_ds_f:
	word32 r7_532 = CONVERT(SLICE(r7_70, int16, 0), int16, int32)
l00011B1C:
	branch Test(EQ,r8_1756 ^ r29_1327) l00011B24_ds_t
l00011B24_ds_t:
l00011B24_ds_f:
l00011B28:
	word32 r4_547
	word32 r4_540 = r5 + r8_1756 * 4<32>
	word32 r28_542 = CONVERT(Mem64[r4_540 + 2684<i32>:word16], word16, word32)
	word32 r29_544 = CONVERT(Mem64[r4_540 + 2686<i32>:word16], word16, word32)
	word32 r18_545 = r9_569 & 0x1F<32>
	branch Test(EQ,r18_545) l00011B48_ds_t
l00011B48_ds_t:
	r4_547 = r28_542
l00011B48_ds_f:
	word32 r4_548 = r28_542
l00011B4C:
	r18_545 = r18_545 + 0xFFFFFFFF<32>
	branch Test(NE,r18_545) l00011B54_ds_t
l00011B54_ds_t:
	r4_548 = r4_548 * 2<32>
l00011B54_ds_f:
	r4_547 = r4_548 * 2<32>
l00011B58:
	r7_532 = CONVERT(SLICE(r7_532 | r4_547, int16, 0), int16, int32)
	branch 0x10<32> - r29_544 >= r9_569 l00011B74_ds_t
l00011B74_ds_t:
	r9_569 = r9_569 + r29_544
l00012194:
	Mem576[r5 + 5816<i32>:word16] = SLICE(r7_532, word16, 0)
	Mem577[r5 + 5820<i32>:word32] = r9_569
	r4_572 = r3_1449
l00011B74_ds_f:
l00011B78:
	word32 r7_616
	word32 r4_581 = Mem64[r5 + 20<i32>:word32]
	word32 r9_582 = Mem64[r5 + 8<i32>:word32]
	Mem584[r5 + 5816<i32>:word16] = SLICE(r7_532, word16, 0)
	Mem586[r5 + 20<i32>:word32] = r4_581 + 1<32>
	Mem588[r4_581 + r9_582:byte] = SLICE(r7_532, byte, 0)
	word32 r4_589 = Mem588[r5 + 20<i32>:word32]
	word32 r30_591 = CONVERT(Mem588[r5 + 5816<i32>:word16], word16, word32)
	word32 r7_592 = Mem588[r5 + 8<i32>:word32]
	Mem594[r5 + 20<i32>:word32] = r4_589 + 1<32>
	Mem605[r4_589 + r7_592:byte] = SLICE(r30_591 >>u 8<i32>, byte, 0)
	word32 r9_606 = Mem605[r5 + 5820<i32>:word32]
	word32 r3_610 = 0x10<32> - r9_606
	r4_572 = r3_1449
	r9_569 = r29_544 + 0xFFFFFFF0<32> + r9_606
	word32 r18_612 = r3_610 & 0x1F<32>
	branch Test(EQ,r3_610 & 0x1F<32>) l00011BF0_ds_t
l00011BF0_ds_t:
	r7_616 = r28_542
l00011BF0_ds_f:
	word32 r7_617 = r28_542
l00011BF4:
	r18_612 = r18_612 + 0xFFFFFFFF<32>
	branch Test(NE,r18_612) l00011BFC_ds_t
l00011BFC_ds_t:
	r7_617 = r7_617 >> 1<i32>
l00011BFC_ds_f:
	r7_616 = r7_617 >> 1<i32>
l00011C00:
	Mem629[r5 + 5820<i32>:word32] = r9_569
	Mem632[r5 + 5816<i32>:word16] = SLICE(r7_616, word16, 0)
	r7_532 = CONVERT(SLICE(r7_616, int16, 0), int16, int32)
l00011C0C:
	word32 r28_644
	word32 r29_638 = CONVERT(Mem636[r5 + 2748<i32>:word16], word16, word32)
	word32 r3_640 = CONVERT(Mem636[r5 + 2750<i32>:word16], word16, word32)
	word32 r18_642 = r9_569 & 0x1F<32>
	branch Test(EQ,r18_642) l00011C20_ds_t
l00011C20_ds_t:
	r28_644 = r29_638
l00011C20_ds_f:
	word32 r28_645 = r29_638
l00011C24:
	r18_642 = r18_642 + 0xFFFFFFFF<32>
	branch Test(NE,r18_642) l00011C2C_ds_t
l00011C2C_ds_t:
	r28_645 = r28_645 * 2<32>
l00011C2C_ds_f:
	r28_644 = r28_645 * 2<32>
l00011C30:
	word32 r3_666
	word32 r7_658 = CONVERT(SLICE(r7_532 | r28_644, int16, 0), int16, int32)
	word32 r28_662 = r7_658
	branch 0x10<32> - r3_640 >= r9_569 l000120D8
l000120D8:
	Mem670[r5 + 5816<i32>:word16] = SLICE(r7_658, word16, 0)
	r3_666 = r3_640 + r9_569
	Mem671[r5 + 5820<i32>:word32] = r3_666
l00011C50:
	word32 r28_707
	word32 r9_674 = Mem636[r5 + 20<i32>:word32]
	word32 r30_675 = Mem636[r5 + 8<i32>:word32]
	Mem677[r5 + 5816<i32>:word16] = SLICE(r7_658, word16, 0)
	Mem679[r5 + 20<i32>:word32] = r9_674 + 1<32>
	Mem681[r9_674 + r30_675:byte] = SLICE(r7_658, byte, 0)
	word32 r7_682 = Mem681[r5 + 20<i32>:word32]
	word32 r30_684 = CONVERT(Mem681[r5 + 5816<i32>:word16], word16, word32)
	word32 r9_685 = Mem681[r5 + 8<i32>:word32]
	Mem687[r5 + 20<i32>:word32] = r7_682 + 1<32>
	Mem698[r7_682 + r9_685:byte] = SLICE(r30_684 >>u 8<i32>, byte, 0)
	word32 r7_699 = Mem698[r5 + 5820<i32>:word32]
	word32 r9_702 = 0x10<32> - r7_699
	word32 r18_703 = r9_702 & 0x1F<32>
	branch Test(EQ,r9_702 & 0x1F<32>) l00011CC0_ds_t
l00011CC0_ds_t:
	r28_707 = r29_638
l00011CC0_ds_f:
	word32 r28_708 = r29_638
l00011CC4:
	r18_703 = r18_703 + 0xFFFFFFFF<32>
	branch Test(NE,r18_703) l00011CCC_ds_t
l00011CCC_ds_t:
	r28_708 = r28_708 >> 1<i32>
l00011CCC_ds_f:
	r28_707 = r28_708 >> 1<i32>
l00011CD0:
	Mem726[r5 + 5816<i32>:word16] = SLICE(r28_707, word16, 0)
	r3_666 = r3_640 + 0xFFFFFFF0<32> + r7_699
	Mem727[r5 + 5820<i32>:word32] = r3_666
	r28_662 = r28_707
l00011CE4:
	branch r3_666 <= 0xE<32> l00011CEC_ds_t
l00011CEC_ds_t:
	word32 r28_744 = CONVERT(SLICE(r28_662, int16, 0), int16, int32)
l0001209C:
	word32 r7_757
	word32 r4_753 = r4_572 + 0xFFFFFFFD<32>
	word32 r18_755 = r3_666 & 0x1F<32>
	branch Test(EQ,r18_755) l000120B4_ds_t
l000120B4_ds_t:
	r7_757 = r4_753
l000120B4_ds_f:
	word32 r7_758 = r4_753
l000120B8:
	r18_755 = r18_755 + 0xFFFFFFFF<32>
	branch Test(NE,r18_755) l000120C0_ds_t
l000120C0_ds_t:
	r7_758 = r7_758 * 2<32>
l000120C0_ds_f:
	r7_757 = r7_758 * 2<32>
l000120C4:
	Mem775[r5 + 5816<i32>:word16] = SLICE(r28_744 | r7_757, word16, 0)
	Mem776[r5 + 5820<i32>:word32] = r3_666 + 2<32>
l00011CEC_ds_f:
	word32 r28_778 = CONVERT(SLICE(r28_662, int16, 0), int16, int32)
l00011CF0:
	word32 r7_785
	word32 r9_780 = Mem779[r5 + 20<i32>:word32]
	word32 r4_781 = r4_572 + 0xFFFFFFFD<32>
	word32 r18_783 = r3_666 & 0x1F<32>
	branch Test(EQ,r18_783) l00011D0C_ds_t
l00011D0C_ds_t:
	r7_785 = r4_781
l00011D0C_ds_f:
	word32 r7_786 = r4_781
l00011D10:
	r18_783 = r18_783 + 0xFFFFFFFF<32>
	branch Test(NE,r18_783) l00011D18_ds_t
l00011D18_ds_t:
	r7_786 = r7_786 * 2<32>
l00011D18_ds_f:
	r7_785 = r7_786 * 2<32>
l00011D1C:
	word32 r7_836
	word32 r28_802 = CONVERT(SLICE(r28_778 | r7_785, int16, 0), int16, int32)
	word32 r29_796 = Mem779[r5 + 8<i32>:word32]
	Mem807[r5 + 5816<i32>:word16] = SLICE(r28_802, word16, 0)
	Mem808[r5 + 20<i32>:word32] = r9_780 + 1<32>
	Mem810[r9_780 + r29_796:byte] = SLICE(r28_802, byte, 0)
	word32 r3_811 = Mem810[r5 + 20<i32>:word32]
	word32 r28_813 = CONVERT(Mem810[r5 + 5816<i32>:word16], word16, word32)
	word32 r7_814 = Mem810[r5 + 8<i32>:word32]
	Mem816[r5 + 20<i32>:word32] = r3_811 + 1<32>
	Mem827[r3_811 + r7_814:byte] = SLICE(r28_813 >>u 8<i32>, byte, 0)
	word32 r3_828 = Mem827[r5 + 5820<i32>:word32]
	word32 r9_830 = 0x10<32> - r3_828
	word32 r18_832 = r9_830 & 0x1F<32>
	branch Test(EQ,r9_830 & 0x1F<32>) l00011D90_ds_t
l00011D90_ds_t:
	r7_836 = r4_781
l00011D90_ds_f:
	word32 r7_837 = r4_781
l00011D94:
	r18_832 = r18_832 + 0xFFFFFFFF<32>
	branch Test(NE,r18_832) l00011D9C_ds_t
l00011D9C_ds_t:
	r7_837 = r7_837 >> 1<i32>
l00011D9C_ds_f:
	r7_836 = r7_837 >> 1<i32>
l00011DA0:
	Mem849[r5 + 5820<i32>:word32] = r3_828 + 0xFFFFFFF2<32>
	branch Test(NE,r11_1188) l00011DA8_ds_t
l00011DA8_ds_t:
	Mem867[r5 + 5816<i32>:word16] = SLICE(r7_836, word16, 0)
l00011DA8_ds_f:
	Mem869[r5 + 5816<i32>:word16] = SLICE(r7_836, word16, 0)
l00011DAC:
l00011914_ds_f:
	word32 r7_888 = CONVERT(Mem64[r5 + 5816<i32>:word16], word16, word32)
l00011918:
	word32 r30_898
	word32 r4_891 = r5 + r8_1756 * 4<32>
	word32 r29_893 = CONVERT(Mem64[r4_891 + 2684<i32>:word16], word16, word32)
	word32 r28_895 = CONVERT(Mem64[r4_891 + 2686<i32>:word16], word16, word32)
	word32 r18_896 = r9_569 & 0x1F<32>
	branch Test(EQ,r9_569 & 0x1F<32>) l00011938_ds_t
l00011938_ds_t:
	r30_898 = r29_893
l00011938_ds_f:
	word32 r30_899 = r29_893
l0001193C:
	r18_896 = r18_896 + 0xFFFFFFFF<32>
	branch Test(NE,r18_896) l00011944_ds_t
l00011944_ds_t:
	r30_899 = r30_899 * 2<32>
l00011944_ds_f:
	r30_898 = r30_899 * 2<32>
l00011948:
	word32 r9_969
	word32 r7_911 = CONVERT(SLICE(r30_898 | r7_888, int16, 0), int16, int32)
	word32 r30_1008 = r7_911
	branch 0x10<32> - r28_895 < r9_569 l00011EEC
l00011EEC:
	word32 r30_956
	word32 r9_923 = Mem64[r5 + 20<i32>:word32]
	word32 r31_924 = Mem64[r5 + 8<i32>:word32]
	Mem926[r5 + 5816<i32>:word16] = SLICE(r7_911, word16, 0)
	Mem928[r5 + 20<i32>:word32] = r9_923 + 1<32>
	Mem930[r9_923 + r31_924:byte] = SLICE(r7_911, byte, 0)
	word32 r7_931 = Mem930[r5 + 20<i32>:word32]
	word32 r31_933 = CONVERT(Mem930[r5 + 5816<i32>:word16], word16, word32)
	word32 r9_934 = Mem930[r5 + 8<i32>:word32]
	Mem936[r5 + 20<i32>:word32] = r7_931 + 1<32>
	Mem947[r7_931 + r9_934:byte] = SLICE(r31_933 >>u 8<i32>, byte, 0)
	word32 r7_948 = Mem947[r5 + 5820<i32>:word32]
	word32 r28_951 = 0x10<32> - r7_948
	word32 r18_952 = r28_951 & 0x1F<32>
	branch Test(EQ,r28_951 & 0x1F<32>) l00011F5C_ds_t
l00011F5C_ds_t:
	r30_956 = r29_893
l00011F5C_ds_f:
	word32 r30_957 = r29_893
l00011F60:
	r18_952 = r18_952 + 0xFFFFFFFF<32>
	branch Test(NE,r18_952) l00011F68_ds_t
l00011F68_ds_t:
	r30_957 = r30_957 >> 1<i32>
l00011F68_ds_f:
	r30_956 = r30_957 >> 1<i32>
l00011F6C:
	Mem975[r5 + 5816<i32>:word16] = SLICE(r30_956, word16, 0)
	r9_969 = r28_895 + 0xFFFFFFF0<32> + r7_948
	Mem976[r5 + 5820<i32>:word32] = r9_969
	r30_1008 = r30_956
l00011968:
	Mem979[r5 + 5816<i32>:word16] = SLICE(r7_911, word16, 0)
	r9_969 = r28_895 + r9_569
	Mem980[r5 + 5820<i32>:word32] = r9_969
l00011974:
	branch Test(EQ,r3_1449) l00011AA4
l00011978:
	word32 r28_1005
	word32 r29_993 = CONVERT(Mem991[r4_891 + 2684<i32>:word16], word16, word32)
	word32 r7_995 = CONVERT(Mem991[r4_891 + 2686<i32>:word16], word16, word32)
	word32 r18_1001 = r9_969 & 0x1F<32>
	branch Test(EQ,r18_1001) l0001198C_ds_t
l0001198C_ds_t:
	r28_1005 = r29_993
l0001198C_ds_f:
	word32 r28_1000 = r29_993
l00011990:
	r18_1001 = r18_1001 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1001) l00011998_ds_t
l00011998_ds_t:
	r28_1000 = r28_1000 * 2<32>
l00011998_ds_f:
	r28_1005 = r28_1000 * 2<32>
l0001199C:
	word32 r7_1072
	word32 r28_1013 = CONVERT(SLICE(r28_1005 | r30_1008, int16, 0), int16, int32)
	word32 r30_1017 = r28_1013
	branch 0x10<32> - r7_995 < r9_969 l000120E8
l000120E8:
	word32 r30_1059
	word32 r9_1026 = Mem991[r5 + 20<i32>:word32]
	word32 r31_1027 = Mem991[r5 + 8<i32>:word32]
	Mem1029[r5 + 5816<i32>:word16] = SLICE(r28_1013, word16, 0)
	Mem1031[r5 + 20<i32>:word32] = r9_1026 + 1<32>
	Mem1033[r9_1026 + r31_1027:byte] = SLICE(r28_1013, byte, 0)
	word32 r9_1034 = Mem1033[r5 + 20<i32>:word32]
	word32 r31_1036 = CONVERT(Mem1033[r5 + 5816<i32>:word16], word16, word32)
	word32 r28_1037 = Mem1033[r5 + 8<i32>:word32]
	Mem1039[r5 + 20<i32>:word32] = r9_1034 + 1<32>
	Mem1050[r9_1034 + r28_1037:byte] = SLICE(r31_1036 >>u 8<i32>, byte, 0)
	word32 r9_1051 = Mem1050[r5 + 5820<i32>:word32]
	word32 r28_1054 = 0x10<32> - r9_1051
	word32 r18_1055 = r28_1054 & 0x1F<32>
	branch Test(EQ,r28_1054 & 0x1F<32>) l00012158_ds_t
l00012158_ds_t:
	r30_1059 = r29_993
l00012158_ds_f:
	word32 r30_1060 = r29_993
l0001215C:
	r18_1055 = r18_1055 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1055) l00012164_ds_t
l00012164_ds_t:
	r30_1060 = r30_1060 >> 1<i32>
l00012164_ds_f:
	r30_1059 = r30_1060 >> 1<i32>
l00012168:
	Mem1078[r5 + 5816<i32>:word16] = SLICE(r30_1059, word16, 0)
	r7_1072 = r7_995 + 0xFFFFFFF0<32> + r9_1051
	Mem1079[r5 + 5820<i32>:word32] = r7_1072
	r30_1017 = r30_1059
l000119BC:
	Mem1082[r5 + 5816<i32>:word16] = SLICE(r28_1013, word16, 0)
	r7_1072 = r7_995 + r9_969
	Mem1083[r5 + 5820<i32>:word32] = r7_1072
l000119C8:
	branch Test(EQ,r3_1449 ^ 1<32>) l00011AA4
l000119D0:
	word32 r3_1104
	word32 r28_1097 = CONVERT(Mem1095[r4_891 + 2684<i32>:word16], word16, word32)
	word32 r9_1099 = CONVERT(Mem1095[r4_891 + 2686<i32>:word16], word16, word32)
	word32 r18_1102 = r7_1072 & 0x1F<32>
	branch Test(EQ,r18_1102) l000119E8_ds_t
l000119E8_ds_t:
	r3_1104 = r28_1097
l000119E8_ds_f:
	word32 r3_1105 = r28_1097
l000119EC:
	r18_1102 = r18_1102 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1102) l000119F4_ds_t
l000119F4_ds_t:
	r3_1105 = r3_1105 * 2<32>
l000119F4_ds_f:
	r3_1104 = r3_1105 * 2<32>
l000119F8:
	word32 r3_1117 = CONVERT(SLICE(r3_1104 | r30_1017, int16, 0), int16, int32)
	branch 0x10<32> - r9_1099 >= r7_1072 l00011A14_ds_t
l00011A14_ds_t:
	word32 r7_1127 = r9_1099 + r7_1072
l00012180:
	Mem1132[r5 + 5816<i32>:word16] = SLICE(r3_1117, word16, 0)
	Mem1133[r5 + 5820<i32>:word32] = r7_1127
l00011A14_ds_f:
l00011A18:
	word32 r3_1171
	word32 r7_1137 = Mem1095[r5 + 20<i32>:word32]
	word32 r29_1138 = Mem1095[r5 + 8<i32>:word32]
	Mem1140[r5 + 5816<i32>:word16] = SLICE(r3_1117, word16, 0)
	Mem1142[r5 + 20<i32>:word32] = r7_1137 + 1<32>
	Mem1144[r7_1137 + r29_1138:byte] = SLICE(r3_1117, byte, 0)
	word32 r3_1145 = Mem1144[r5 + 20<i32>:word32]
	word32 r29_1147 = CONVERT(Mem1144[r5 + 5816<i32>:word16], word16, word32)
	word32 r4_1148 = Mem1144[r5 + 8<i32>:word32]
	Mem1150[r5 + 20<i32>:word32] = r3_1145 + 1<32>
	Mem1161[r3_1145 + r4_1148:byte] = SLICE(r29_1147 >>u 8<i32>, byte, 0)
	word32 r3_1162 = Mem1161[r5 + 5820<i32>:word32]
	word32 r4_1166 = 0x10<32> - r3_1162
	word32 r7_1165 = r9_1099 + 0xFFFFFFF0<32> + r3_1162
	word32 r18_1167 = r4_1166 & 0x1F<32>
	branch Test(EQ,r4_1166 & 0x1F<32>) l00011A8C_ds_t
l00011A8C_ds_t:
	r3_1171 = r28_1097
l00011A8C_ds_f:
	word32 r3_1172 = r28_1097
l00011A90:
	r18_1167 = r18_1167 + 0xFFFFFFFF<32>
	branch Test(NE,r18_1167) l00011A98_ds_t
l00011A98_ds_t:
	r3_1172 = r3_1172 >> 1<i32>
l00011A98_ds_f:
	r3_1171 = r3_1172 >> 1<i32>
l00011A9C:
	Mem1184[r5 + 5820<i32>:word32] = r7_1165
	Mem1187[r5 + 5816<i32>:word16] = SLICE(r3_1171, word16, 0)
l00011AA4:
	branch Test(EQ,r11_1188) l00011AA8_ds_t
l00011AA8_ds_t:
l00011DB0:
	r3_1449 = 0<32>
	r29_1327 = r8_1756
	r28_1386 = 3<32>
	r9_1445 = 0x8A<32>
l00011AA8_ds_f:
l00011AAC:
	r3_1449 = r11_1188 ^ r8_1756
	branch Test(EQ,r3_1449) l00011AB4_ds_t
l00011AB4_ds_t:
	r29_1327 = r8_1756
l00011EE0:
	r28_1386 = 3<32>
	r9_1445 = 6<32>
l00011AB4_ds_f:
	r29_1327 = r8_1756
l00011AB8:
	r28_1386 = 4<32>
	r9_1445 = 7<32>
	r3_1449 = 0<32>
l00011AC4:
	r10_1692 = r10_1692 + 4<32>
	branch Test(NE,r6_49 ^ r10_1692) l00011AD0_ds_t
l00011AD0_ds_t:
	r8_1756 = r11_1188
l00011AD0_ds_f:
l00011AD4:
	return
fn0001185C_exit:


void fn00012364(word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: C r18 r3 r4 r6 r7 r8 r9
// Preserved: r1 r10 r11 r12 r19 r20 r21 r22 r23 r24
fn00012364_entry:
l00012364:
	word32 r4_22
	word32 r3_37 = CONVERT(Mem5[r5 + 5816<i32>:word16], word16, word32)
	word32 r22_107 = Mem5[r5 + 5792<i32>:word32]
	word32 r9_20 = Mem19[r5 + 5820<i32>:word32]
	branch Test(EQ,r22_107) l00012390_ds_t
l00012390_ds_t:
	r4_22 = CONVERT(SLICE(r3_37, int16, 0), int16, int32)
l00012390_ds_f:
l00012394:
	word32 r8_27 = 0<32>
l000124AC:
	word32 r9_106
	word32 r19_110
	word32 r4_115
	word32 r4_34 = Mem30[r5 + 5784<i32>:word32]
	word32 r21_36 = CONVERT(Mem30[r8_27 * 2<32> + Mem30[r5 + 5796<i32>:word32]:word16], word16, word32)
	word32 r3_39 = CONVERT(SLICE(r3_37, int16, 0), int16, int32)
	word32 r10_40 = r8_27 + 1<32>
	branch Test(EQ,r21_36) l000124C8_ds_t
l000124C8_ds_t:
	word32 r19_42 = CONVERT(Mem30[r8_27 + r4_34:byte], byte, word32)
l000123B0:
	word32 r4_54
	word32 r21_48 = CONVERT(Mem30[r19_42 * 4<32> + r6:word16], word16, word32)
	word32 r19_50 = CONVERT(Mem30[r6 + r19_42 * 4<32> + 2<i32>:word16], word16, word32)
	word32 r18_52 = r9_20 & 0x1F<32>
	branch Test(EQ,r18_52) l000123D0_ds_t
l000123D0_ds_t:
	r4_54 = r21_48
l000123D0_ds_f:
	word32 r4_55 = r21_48
l000123D4:
	r18_52 = r18_52 + 0xFFFFFFFF<32>
	branch Test(NE,r18_52) l000123DC_ds_t
l000123DC_ds_t:
	r4_55 = r4_55 * 2<32>
l000123DC_ds_f:
	r4_54 = r4_55 * 2<32>
l000123E0:
	r4_22 = CONVERT(SLICE(r3_39 | r4_54, int16, 0), int16, int32)
	r3_37 = r4_22
	branch 0x10<32> - r19_50 >= r9_20 l00012400_ds_t
l00012400_ds_t:
	r9_20 = r9_20 + r19_50
l00012400_ds_f:
l00012404:
	word32 r8_81 = Mem30[r5 + 20<i32>:word32]
	word32 r9_82 = Mem30[r5 + 8<i32>:word32]
	Mem84[r5 + 5816<i32>:word16] = SLICE(r4_22, word16, 0)
	Mem86[r5 + 20<i32>:word32] = r8_81 + 1<32>
	Mem88[r8_81 + r9_82:byte] = SLICE(r4_22, byte, 0)
	word32 r3_89 = Mem88[r5 + 20<i32>:word32]
	word32 r9_91 = CONVERT(Mem88[r5 + 5816<i32>:word16], word16, word32)
	word32 r4_92 = Mem88[r5 + 8<i32>:word32]
	Mem94[r5 + 20<i32>:word32] = r3_89 + 1<32>
	Mem105[r3_89 + r4_92:byte] = SLICE(r9_91 >>u 8<i32>, byte, 0)
	r9_106 = Mem105[r5 + 5820<i32>:word32]
	word32 r3_109 = 0x10<32> - r9_106
	r22_107 = Mem105[r5 + 5792<i32>:word32]
	r19_110 = r19_50 + 0xFFFFFFF0<32>
	word32 r18_111 = r3_109 & 0x1F<32>
	branch Test(EQ,r3_109 & 0x1F<32>) l00012478_ds_t
l00012478_ds_t:
	r4_115 = r21_48
l00012478_ds_f:
	word32 r4_116 = r21_48
l0001247C:
	r18_111 = r18_111 + 0xFFFFFFFF<32>
	branch Test(NE,r18_111) l00012484_ds_t
l00012484_ds_t:
	r4_116 = r4_116 >> 1<i32>
l00012484_ds_f:
	r4_115 = r4_116 >> 1<i32>
l000124C8_ds_f:
	word32 r19_125 = CONVERT(Mem30[r8_27 + r4_34:byte], byte, word32)
l000124CC:
	word32 r8_140
	word32 r23_128 = CONVERT(Mem30[r19_125 + 0xFFFFABD8<32>:byte], byte, word32)
	word32 r8_130 = (r23_128 + 0x101<32>) * 2<32>
	word32 r24_134 = CONVERT(Mem30[r8_130 * 2<32> + r6:word16], word16, word32)
	word32 r22_136 = CONVERT(Mem30[r6 + r8_130 * 2<32> + 2<i32>:word16], word16, word32)
	word32 r18_138 = r9_20 & 0x1F<32>
	branch Test(EQ,r18_138) l000124F8_ds_t
l000124F8_ds_t:
	r8_140 = r24_134
l000124F8_ds_f:
	word32 r8_141 = r24_134
l000124FC:
	r18_138 = r18_138 + 0xFFFFFFFF<32>
	branch Test(NE,r18_138) l00012504_ds_t
l00012504_ds_t:
	r8_141 = r8_141 * 2<32>
l00012504_ds_f:
	r8_140 = r8_141 * 2<32>
l00012508:
	word32 r22_162
	word32 r8_152 = CONVERT(SLICE(r3_39 | r8_140, int16, 0), int16, int32)
	word32 r4_158 = r8_152
	branch 0x10<32> - r22_136 >= r9_20 l000128AC
l000128AC:
	Mem166[r5 + 5816<i32>:word16] = SLICE(r8_152, word16, 0)
	r22_162 = r22_136 + r9_20
	Mem167[r5 + 5820<i32>:word32] = r22_162
l00012524:
	word32 r4_203
	word32 r3_170 = Mem30[r5 + 20<i32>:word32]
	word32 r9_171 = Mem30[r5 + 8<i32>:word32]
	Mem173[r5 + 5816<i32>:word16] = SLICE(r8_152, word16, 0)
	Mem175[r5 + 20<i32>:word32] = r3_170 + 1<32>
	Mem177[r3_170 + r9_171:byte] = SLICE(r8_152, byte, 0)
	word32 r3_178 = Mem177[r5 + 20<i32>:word32]
	word32 r9_180 = CONVERT(Mem177[r5 + 5816<i32>:word16], word16, word32)
	word32 r4_181 = Mem177[r5 + 8<i32>:word32]
	Mem183[r5 + 20<i32>:word32] = r3_178 + 1<32>
	Mem194[r3_178 + r4_181:byte] = SLICE(r9_180 >>u 8<i32>, byte, 0)
	word32 r3_195 = Mem194[r5 + 5820<i32>:word32]
	word32 r8_198 = 0x10<32> - r3_195
	word32 r18_199 = r8_198 & 0x1F<32>
	branch Test(EQ,r8_198 & 0x1F<32>) l00012594_ds_t
l00012594_ds_t:
	r4_203 = r24_134
l00012594_ds_f:
	word32 r4_204 = r24_134
l00012598:
	r18_199 = r18_199 + 0xFFFFFFFF<32>
	branch Test(NE,r18_199) l000125A0_ds_t
l000125A0_ds_t:
	r4_204 = r4_204 >> 1<i32>
l000125A0_ds_f:
	r4_203 = r4_204 >> 1<i32>
l000125A4:
	Mem222[r5 + 5816<i32>:word16] = SLICE(r4_203, word16, 0)
	r22_162 = r22_136 + 0xFFFFFFF0<32> + r3_195
	Mem223[r5 + 5820<i32>:word32] = r22_162
	r4_158 = r4_203
l000125B8:
	word32 r4_236
	word32 r8_233 = Mem232[r23_128 * 4<32> + 0xFFFFB4A8<32>:word32]
	branch Test(EQ,r8_233) l000125D0_ds_t
l000125D0_ds_t:
	r4_236 = CONVERT(SLICE(r4_158, int16, 0), int16, int32)
l000125D0_ds_f:
	word32 r4_238 = CONVERT(SLICE(r4_158, int16, 0), int16, int32)
l000125D4:
	word32 r9_252
	word32 r3_247 = r19_125 - Mem232[r23_128 * 4<32> + 0xFFFFAB64<32>:word32]
	word32 r18_250 = r22_162 & 0x1F<32>
	branch Test(EQ,r18_250) l000125FC_ds_t
l000125FC_ds_t:
	r9_252 = r3_247
l000125FC_ds_f:
	word32 r9_253 = r3_247
l00012600:
	r18_250 = r18_250 + 0xFFFFFFFF<32>
	branch Test(NE,r18_250) l00012608_ds_t
l00012608_ds_t:
	r9_253 = r9_253 * 2<32>
l00012608_ds_f:
	r9_252 = r9_253 * 2<32>
l0001260C:
	r4_236 = CONVERT(SLICE(r4_238 | r9_252, int16, 0), int16, int32)
	branch 0x10<32> - r8_233 >= r22_162 l00012628_ds_t
l00012628_ds_t:
	r22_162 = r22_162 + r8_233
l00012980:
	Mem279[r5 + 5816<i32>:word16] = SLICE(r4_236, word16, 0)
	Mem280[r5 + 5820<i32>:word32] = r22_162
l00012628_ds_f:
l0001262C:
	word32 r4_317
	word32 r9_284 = Mem232[r5 + 20<i32>:word32]
	word32 r22_285 = Mem232[r5 + 8<i32>:word32]
	Mem287[r5 + 5816<i32>:word16] = SLICE(r4_236, word16, 0)
	Mem289[r5 + 20<i32>:word32] = r9_284 + 1<32>
	Mem291[r9_284 + r22_285:byte] = SLICE(r4_236, byte, 0)
	word32 r4_292 = Mem291[r5 + 20<i32>:word32]
	word32 r22_294 = CONVERT(Mem291[r5 + 5816<i32>:word16], word16, word32)
	word32 r9_295 = Mem291[r5 + 8<i32>:word32]
	Mem297[r5 + 20<i32>:word32] = r4_292 + 1<32>
	Mem308[r4_292 + r9_295:byte] = SLICE(r22_294 >>u 8<i32>, byte, 0)
	word32 r22_309 = Mem308[r5 + 5820<i32>:word32]
	word32 r19_311 = 0x10<32> - r22_309
	r22_162 = r8_233 + 0xFFFFFFF0<32> + r22_309
	word32 r18_313 = r19_311 & 0x1F<32>
	branch Test(EQ,r19_311 & 0x1F<32>) l0001269C_ds_t
l0001269C_ds_t:
	r4_317 = r3_247
l0001269C_ds_f:
	word32 r4_318 = r3_247
l000126A0:
	r18_313 = r18_313 + 0xFFFFFFFF<32>
	branch Test(NE,r18_313) l000126A8_ds_t
l000126A8_ds_t:
	r4_318 = r4_318 >> 1<i32>
l000126A8_ds_f:
	r4_317 = r4_318 >> 1<i32>
l000126AC:
	Mem330[r5 + 5820<i32>:word32] = r22_162
	Mem333[r5 + 5816<i32>:word16] = SLICE(r4_317, word16, 0)
	r4_236 = CONVERT(SLICE(r4_317, int16, 0), int16, int32)
l000126B8:
	word32 r8_370
	branch 0xFF<32> -u (r21_36 + 0xFFFFFFFF<32>) < 0<32> l000128CC
l000128CC:
	r8_370 = CONVERT(Mem368[(r21_36 + 0xFFFFFFFF<32> >>u 7<i32>) + 0xFFFFADD8<32>:byte], byte, word32)
l000126C4:
	r8_370 = CONVERT(Mem368[r21_36 + 0xFFFFACD7<32>:byte], byte, word32)
l000126C8:
	word32 r3_409
	word32 r8_385 = r8_370 * 2<32>
	word32 r19_401 = CONVERT(Mem368[r8_385 * 2<32> + r7:word16], word16, word32)
	word32 r9_404 = CONVERT(Mem368[r7 + r8_385 * 2<32> + 2<i32>:word16], word16, word32)
	word32 r18_407 = r22_162 & 0x1F<32>
	branch Test(EQ,r18_407) l000126E8_ds_t
l000126E8_ds_t:
	r3_409 = r19_401
l000126E8_ds_f:
	word32 r3_410 = r19_401
l000126EC:
	r18_407 = r18_407 + 0xFFFFFFFF<32>
	branch Test(NE,r18_407) l000126F4_ds_t
l000126F4_ds_t:
	r3_410 = r3_410 * 2<32>
l000126F4_ds_f:
	r3_409 = r3_410 * 2<32>
l000126F8:
	word32 r4_424 = CONVERT(SLICE(r4_236 | r3_409, int16, 0), int16, int32)
	r3_37 = r4_424
	branch 0x10<32> - r9_404 >= r22_162 l000128BC
l000128BC:
	Mem438[r5 + 5816<i32>:word16] = SLICE(r4_424, word16, 0)
	r9_20 = r9_404 + r22_162
	Mem439[r5 + 5820<i32>:word32] = r9_20
l00012718:
	word32 r3_475
	word32 r22_442 = Mem368[r5 + 20<i32>:word32]
	word32 r23_443 = Mem368[r5 + 8<i32>:word32]
	Mem445[r5 + 5816<i32>:word16] = SLICE(r4_424, word16, 0)
	Mem447[r5 + 20<i32>:word32] = r22_442 + 1<32>
	Mem449[r22_442 + r23_443:byte] = SLICE(r4_424, byte, 0)
	word32 r3_450 = Mem449[r5 + 20<i32>:word32]
	word32 r23_452 = CONVERT(Mem449[r5 + 5816<i32>:word16], word16, word32)
	word32 r4_453 = Mem449[r5 + 8<i32>:word32]
	Mem455[r5 + 20<i32>:word32] = r3_450 + 1<32>
	Mem466[r3_450 + r4_453:byte] = SLICE(r23_452 >>u 8<i32>, byte, 0)
	word32 r4_467 = Mem466[r5 + 5820<i32>:word32]
	word32 r22_470 = 0x10<32> - r4_467
	word32 r18_471 = r22_470 & 0x1F<32>
	branch Test(EQ,r22_470 & 0x1F<32>) l00012788_ds_t
l00012788_ds_t:
	r3_475 = r19_401
l00012788_ds_f:
	word32 r3_476 = r19_401
l0001278C:
	r18_471 = r18_471 + 0xFFFFFFFF<32>
	branch Test(NE,r18_471) l00012794_ds_t
l00012794_ds_t:
	r3_476 = r3_476 >> 1<i32>
l00012794_ds_f:
	r3_475 = r3_476 >> 1<i32>
l00012798:
	Mem494[r5 + 5816<i32>:word16] = SLICE(r3_475, word16, 0)
	r9_20 = r9_404 + 0xFFFFFFF0<32> + r4_467
	Mem495[r5 + 5820<i32>:word32] = r9_20
	r3_37 = r3_475
l000127AC:
	word32 r19_504 = Mem503[r8_385 * 2<32> + 0xFFFFB430<32>:word32]
	branch Test(NE,r19_504) l000127C0_ds_t
l000127C0_ds_t:
	word32 r4_507 = CONVERT(SLICE(r3_37, int16, 0), int16, int32)
l00012840:
	word32 r3_522
	word32 r8_517 = r21_36 + 0xFFFFFFFF<32> - Mem503[r8_385 * 2<32> + 0xFFFFAAEC<32>:word32]
	word32 r18_520 = r9_20 & 0x1F<32>
	branch Test(EQ,r18_520) l00012868_ds_t
l00012868_ds_t:
	r3_522 = r8_517
l00012868_ds_f:
	word32 r3_523 = r8_517
l0001286C:
	r18_520 = r18_520 + 0xFFFFFFFF<32>
	branch Test(NE,r18_520) l00012874_ds_t
l00012874_ds_t:
	r3_523 = r3_523 * 2<32>
l00012874_ds_f:
	r3_522 = r3_523 * 2<32>
l00012878:
	r4_22 = CONVERT(SLICE(r4_507 | r3_522, int16, 0), int16, int32)
	r3_37 = r4_22
	branch 0x10<32> - r19_504 < r9_20 l00012894_ds_t
l00012894_ds_t:
l000128FC:
	word32 r9_550 = Mem503[r5 + 20<i32>:word32]
	word32 r21_551 = Mem503[r5 + 8<i32>:word32]
	Mem553[r5 + 5816<i32>:word16] = SLICE(r4_22, word16, 0)
	Mem555[r5 + 20<i32>:word32] = r9_550 + 1<32>
	Mem557[r9_550 + r21_551:byte] = SLICE(r4_22, byte, 0)
	word32 r3_558 = Mem557[r5 + 20<i32>:word32]
	word32 r21_560 = CONVERT(Mem557[r5 + 5816<i32>:word16], word16, word32)
	word32 r4_561 = Mem557[r5 + 8<i32>:word32]
	Mem563[r5 + 20<i32>:word32] = r3_558 + 1<32>
	Mem574[r3_558 + r4_561:byte] = SLICE(r21_560 >>u 8<i32>, byte, 0)
	r9_106 = Mem574[r5 + 5820<i32>:word32]
	word32 r3_577 = 0x10<32> - r9_106
	r19_110 = r19_504 + 0xFFFFFFF0<32>
	word32 r18_578 = r3_577 & 0x1F<32>
	branch Test(EQ,r3_577 & 0x1F<32>) l00012968_ds_t
l00012968_ds_t:
	r4_115 = r8_517
l00012968_ds_f:
	word32 r4_583 = r8_517
l0001296C:
	r18_578 = r18_578 + 0xFFFFFFFF<32>
	branch Test(NE,r18_578) l00012974_ds_t
l00012974_ds_t:
	r4_583 = r4_583 >> 1<i32>
l00012974_ds_f:
	r4_115 = r4_583 >> 1<i32>
l00012978:
	r22_107 = Mem574[r5 + 5792<i32>:word32]
l00012488:
	Mem611[r5 + 5816<i32>:word16] = SLICE(r4_115, word16, 0)
	r9_20 = r19_110 + r9_106
	Mem612[r5 + 5820<i32>:word32] = r9_20
	r3_37 = r4_115
	r4_22 = CONVERT(SLICE(r4_115, int16, 0), int16, int32)
l00012894_ds_f:
l00012898:
	r22_107 = Mem503[r5 + 5792<i32>:word32]
	r9_20 = r9_20 + r19_504
l000128A0:
	Mem621[r5 + 5816<i32>:word16] = SLICE(r3_37, word16, 0)
	Mem623[r5 + 5820<i32>:word32] = r9_20
l000124A0:
	branch r10_40 -u r22_107 >= 0<32> l000124A8_ds_t
l000124A8_ds_t:
l000124A8_ds_f:
	r8_27 = r10_40
l000127C0_ds_f:
	r4_22 = CONVERT(SLICE(r3_37, int16, 0), int16, int32)
l000127C4:
	r22_107 = Mem503[r5 + 5792<i32>:word32]
	branch r10_40 -u r22_107 < 0<32> l000127D0_ds_t
l000127D0_ds_t:
	r8_27 = r10_40
l000127D0_ds_f:
l000127D4:
	word32 r6_704
	word32 r7_697 = CONVERT(Mem694[r6 + 1024<i32>:word16], word16, word32)
	word32 r3_699 = CONVERT(Mem694[r6 + 1026<i32>:word16], word16, word32)
	word32 r18_702 = r9_20 & 0x1F<32>
	branch Test(EQ,r18_702) l000127E8_ds_t
l000127E8_ds_t:
	r6_704 = r7_697
l000127E8_ds_f:
	word32 r6_705 = r7_697
l000127EC:
	r18_702 = r18_702 + 0xFFFFFFFF<32>
	branch Test(NE,r18_702) l000127F4_ds_t
l000127F4_ds_t:
	r6_705 = r6_705 * 2<32>
l000127F4_ds_f:
	r6_704 = r6_705 * 2<32>
l000127F8:
	word32 r4_720 = CONVERT(SLICE(r4_22 | r6_704, int16, 0), int16, int32)
	branch 0x10<32> - r3_699 < r9_20 l00012818_ds_t
l00012818_ds_t:
l0001298C:
	word32 r4_804
	word32 r8_765 = Mem694[r5 + 20<i32>:word32]
	word32 r9_766 = Mem694[r5 + 8<i32>:word32]
	Mem768[r5 + 5816<i32>:word16] = SLICE(r4_720, word16, 0)
	Mem770[r5 + 20<i32>:word32] = r8_765 + 1<32>
	Mem772[r8_765 + r9_766:byte] = SLICE(r4_720, byte, 0)
	word32 r4_773 = Mem772[r5 + 20<i32>:word32]
	word32 r9_775 = CONVERT(Mem772[r5 + 5816<i32>:word16], word16, word32)
	word32 r6_776 = Mem772[r5 + 8<i32>:word32]
	Mem778[r5 + 20<i32>:word32] = r4_773 + 1<32>
	Mem789[r4_773 + r6_776:byte] = SLICE(r9_775 >>u 8<i32>, byte, 0)
	word32 r4_790 = Mem789[r5 + 5820<i32>:word32]
	word32 r6_799 = 0x10<32> - r4_790
	word32 r3_798 = r3_699 + 0xFFFFFFF0<32> + r4_790
	word32 r18_800 = r6_799 & 0x1F<32>
	branch Test(EQ,r6_799 & 0x1F<32>) l00012A14_ds_t
l00012A14_ds_t:
	r4_804 = r7_697
l00012A14_ds_f:
	word32 r4_805 = r7_697
l00012A18:
	r18_800 = r18_800 + 0xFFFFFFFF<32>
	branch Test(NE,r18_800) l00012A20_ds_t
l00012A20_ds_t:
	r4_805 = r4_805 >> 1<i32>
l00012A20_ds_f:
	r4_804 = r4_805 >> 1<i32>
l00012A24:
	Mem817[r5 + 5820<i32>:word32] = r3_798
	Mem820[r5 + 5816<i32>:word16] = SLICE(r4_804, word16, 0)
	return
l00012818_ds_f:
l0001281C:
	Mem831[r5 + 5816<i32>:word16] = SLICE(r4_720, word16, 0)
	Mem832[r5 + 5820<i32>:word32] = r3_699 + r9_20
	return
fn00012364_exit:


void fn00012A34(word32 r0, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r10 r11 r12 r18 r20 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
fn00012A34_entry:
	ptr32 fp
l00012A34:
	word32 r4_104
	word32 r22_108
	word32 r26_139
	word32 r5_73
	word32 r3_33 = Mem31[r6 + 8<i32>:word32]
	word32 r21_34 = Mem31[r6:word32]
	word32 r24_1370 = Mem35[r3_33 + 12<i32>:word32]
	word32 r7_37 = Mem35[r3_33:word32]
	Mem40[r5 + 5204<i32>:word32] = 0x23D<32>
	Mem42[r5 + 5200<i32>:word32] = r0
	branch Test(LE,r24_1370) l00012A94_ds_t
l00012A94_ds_t:
l00013654:
	r4_104 = 0<32>
	r22_108 = 0xFFFFFFFF<32>
l00012A94_ds_f:
l00012A98:
	word32 r6_49 = r21_34
	word32 r3_50 = r5 + 0x1458<32>
	word32 r9_51 = r5 + (r24_1370 + 0x1458<32>)
	r4_104 = 0<32>
	r22_108 = 0xFFFFFFFF<32>
	word32 r10_55 = 0xFFFFEBA8<32> - r5
l00012AB8:
	word32 r5_59 = CONVERT(Mem57[r6_49:word16], word16, word32)
	branch Test(EQ,r5_59) l00012AC0_ds_t
l00012AC0_ds_t:
l00012FB0:
	Mem65[r6_49 + 2<i32>:word16] = SLICE(r5_59, word16, 0)
	r3_50 = r3_50 + 1<32>
	branch Test(NE,r3_50 ^ r9_51) l00012FC0_ds_t
l00012FC0_ds_t:
	r6_49 = r6_49 + 4<32>
l00012FC0_ds_f:
l00012FC4:
	branch Test(NE,r7_37) l00012FC8_ds_t
l00012FC8_ds_t:
l00012FC8_ds_f:
	r5_73 = r4_104 + 0x2D8<32>
l00012AC0_ds_f:
	word32 r8_74 = r10_55 + r3_50
l00012AC4:
	r4_104 = r4_104 + 1<32>
	Mem79[r5 + 5200<i32>:word32] = r4_104
	Mem81[(r4_104 + 0x2D7<32>) * 4<32> + r5:word32] = r8_74
	Mem84[r3_50:byte] = SLICE(r0, byte, 0)
	r3_50 = r3_50 + 1<32>
	r22_108 = r8_74
	branch Test(NE,r9_51 ^ r3_50) l00012AF0_ds_t
l00012AF0_ds_t:
	r6_49 = r6_49 + 4<32>
l00012AF0_ds_f:
l00012AF4:
	branch Test(EQ,r7_37) l00012AF8_ds_t
l00012AF8_ds_t:
	r5_73 = r4_104 + 0x2D8<32>
l00012FCC:
	word32 r5_100 = r5 + r5_73 * 4<32>
l00013028:
	word32 r3_102 = r7_37
	branch r4_104 <= 1<32> l00013034_ds_t
l00013034_ds_t:
	word32 r6_107 = r21_34
l00012FE4:
	branch r22_108 > 1<32> l00013000
l00012FEC:
	r22_108 = r22_108 + 1<32>
	r3_102 = r22_108
	r6_107 = r21_34 + r22_108 * 4<32>
l00013000:
	r4_104 = r4_104 + 1<32>
	Mem119[r5 + 5200<i32>:word32] = r4_104
	Mem123[r5_100:word32] = r3_102
	Mem128[r6_107:word16] = 1<16>
	Mem133[r5 + r3_102 + 5208<i32>:byte] = SLICE(r0, byte, 0)
	Mem137[r5 + 5800<i32>:word32] = Mem133[r5 + 5800<i32>:word32] + 0xFFFFFFFF<32>
	r5_100 = r5_100 + 4<32>
l00013034_ds_f:
l00013038:
	r26_139 = r4_104 >> 1<i32>
l00012AF8_ds_f:
l00012AFC:
	word32 r6_148 = r5 + (r4_104 + 0x2D8<32>) * 4<32>
l00012B74:
	word32 r5_152 = 0<32>
	word32 r8_154 = r21_34
	branch r4_104 <= 1<32> l00012B84_ds_t
l00012B84_ds_t:
	word32 r3_158 = 0<32>
l00012B1C:
	branch r22_108 > 1<32> l00012B38
l00012B24:
	r22_108 = r22_108 + 1<32>
	r5_152 = r22_108
	r3_158 = r22_108 * 4<32>
	r8_154 = r21_34 + r22_108 * 4<32>
l00012B38:
	r4_104 = r4_104 + 1<32>
	Mem170[r5 + 5200<i32>:word32] = r4_104
	Mem174[r6_148:word32] = r5_152
	Mem179[r8_154:word16] = 1<16>
	Mem184[r5 + r5_152 + 5208<i32>:byte] = SLICE(r0, byte, 0)
	word32 r3_195 = Mem184[r5 + 5804<i32>:word32] - CONVERT(Mem184[(r7_37 + r3_158) + 2<i32>:word16], word16, word32)
	Mem196[r5 + 5800<i32>:word32] = Mem184[r5 + 5800<i32>:word32] + 0xFFFFFFFF<32>
	Mem197[r5 + 5804<i32>:word32] = r3_195
	r6_148 = r6_148 + 4<32>
l00012B84_ds_f:
l00012B88:
	r26_139 = r4_104 >> 1<i32>
l00012B8C:
	Mem222[r6 + 4<i32>:word32] = r22_108
	word32 r10_224 = r5 + (r26_139 + 0x2D7<32>) * 4<32>
	word32 r11_225 = r26_139 * 2<32>
l00012BA8:
	word32 r3_244
	word32 r12_228 = Mem227[r10_224:word32]
	branch r4_104 < r11_225 l00012BB4_ds_t
l00012BB4_ds_t:
l0001356C:
	Mem241[(r26_139 + 0x2D7<32>) * 4<32> + r5:word32] = r12_228
	r26_139 = r26_139 + 0xFFFFFFFF<32>
	r10_224 = r10_224 + 0xFFFFFFFC<32>
	branch Test(NE,r26_139) l0001358C_ds_t
l0001358C_ds_t:
	r11_225 = r11_225 + 0xFFFFFFFE<32>
l0001358C_ds_f:
l00013590:
	r3_244 = r4_104 + 0x2D7<32>
l00012BB4_ds_f:
	word32 r8_245 = r11_225
l00012BB8:
	word32 r9_250 = CONVERT(Mem227[r12_228 * 4<32> + r21_34:word16], word16, word32)
	word32 r5_251 = r26_139
	word32 r23_252 = r5 + r12_228
l00012BEC:
	word32 r7_267
	word32 r3_257 = r5 + r8_245 * 4<32>
	word32 r25_259 = Mem258[r3_257 + 2908<i32>:word32]
	word32 r6_260 = r8_245
	branch r8_245 >= r4_104 l00012C10_ds_t
l00012C10_ds_t:
	r7_267 = CONVERT(Mem258[r25_259 * 4<32> + r21_34:word16], word16, word32)
l00012C10_ds_f:
	r7_267 = CONVERT(Mem258[r25_259 * 4<32> + r21_34:word16], word16, word32)
l00012C14:
	word32 r27_270 = Mem258[r3_257 + 2912<i32>:word32]
	word32 r3_274 = CONVERT(Mem258[r27_270 * 4<32> + r21_34:word16], word16, word32)
	branch r3_274 -u r7_267 < 0<32> l00012C2C_ds_t
l00012C2C_ds_t:
	r6_260 = r8_245 + 1<32>
l00012F38:
	r7_267 = r3_274
	r25_259 = r27_270
l00012C2C_ds_f:
	r6_260 = r8_245 + 1<32>
l00012C30:
	branch Test(EQ,r3_274 ^ r7_267) l00012C38_ds_t
l00012C38_ds_t:
	word32 r29_281 = r5 + r27_270
l00012F84:
	branch CONVERT(Mem258[r5 + r25_259 + 5208<i32>:byte], byte, word32) -u CONVERT(Mem258[r29_281 + 5208<i32>:byte], byte, word32) >= 0<32> l00013050
l00013050:
	r25_259 = r27_270
l00012F98:
	r7_267 = r3_274
	r6_260 = r8_245
l00012C38_ds_f:
l00012C3C:
	r6_260 = r8_245
l00012C40:
	branch r9_250 -u r7_267 < 0<32> l00012C48_ds_t
l00012C48_ds_t:
l00012C48_ds_f:
	word32 r7_298 = r9_250 ^ r7_267
l00012C4C:
	word32 r3_301
	branch Test(NE,r7_298) l00012C50_ds_t
l00012C50_ds_t:
	r3_301 = r5_251 + 0x2D7<32>
l00012C50_ds_f:
l00012C54:
	branch CONVERT(Mem258[r5 + r25_259 + 5208<i32>:byte], byte, word32) -u CONVERT(Mem258[r23_252 + 5208<i32>:byte], byte, word32) < 0<32> l00012C68_ds_t
l00012C68_ds_t:
	r3_301 = r5_251 + 0x2D7<32>
l00012BD0:
	Mem320[r3_301 * 4<32> + r5:word32] = r25_259
	r8_245 = r6_260 * 2<32>
	branch r4_104 < r8_245 l00012BE8_ds_t
l00012BE8_ds_t:
	r5_251 = r6_260
l00012BE8_ds_f:
	r5_251 = r6_260
l00012C68_ds_f:
l00012C6C:
	Mem339[(r5_251 + 0x2D7<32>) * 4<32> + r5:word32] = r12_228
	r26_139 = r26_139 + 0xFFFFFFFF<32>
	r10_224 = r10_224 + 0xFFFFFFFC<32>
	branch Test(NE,r26_139) l00012C88_ds_t
l00012C88_ds_t:
	r11_225 = r11_225 + 0xFFFFFFFE<32>
l00012C88_ds_f:
l00012C8C:
	r3_244 = r4_104 + 0x2D7<32>
l00012C90:
	word32 r28_1360
	word32 r3_1373
	word32 r3_362 = r5 + r3_244 * 4<32>
	word32 r30_1365 = Mem370[r5 + 5204<i32>:word32]
	word32 r22_1341 = Mem379[r3_362:word32]
	word32 r12_1344 = Mem379[r5 + 2912<i32>:word32]
	Mem404[r5 + 2912<i32>:word32] = r22_1341
	word32 r4_1343 = r4_104 + 0xFFFFFFFF<32>
	word32 r26_1338 = r3_362
	word32 r28_382 = (r30_1365 + 0x2D5<32>) * 2<32>
	word32 r27_1345 = r4_1343 ^ 1<32>
	word32 r25_1351 = r24_1370 * 4<32>
	word32 r20_1354 = r5 + (r24_1370 + 0x1458<32>)
	branch Test(EQ,r4_1343 ^ 1<32>) l00012CDC_ds_t
l00012CDC_ds_t:
	r28_1360 = r5 + r28_382 * 2<32>
l00012CDC_ds_f:
	r28_1360 = r5 + r28_382 * 2<32>
l00012CE0:
	word32 r9_430 = CONVERT(Mem428[r22_1341 * 4<32> + r21_34:word16], word16, word32)
	word32 r7_431 = 2<32>
	r3_1373 = 1<32>
	word32 r23_434 = r5 + r22_1341
l00012D1C:
	word32 r8_449
	word32 r5_439 = r5 + r7_431 * 4<32>
	word32 r10_441 = Mem440[r5_439 + 2908<i32>:word32]
	word32 r6_442 = r7_431
	branch r7_431 >= r4_1343 l00012D40_ds_t
l00012D40_ds_t:
	r8_449 = CONVERT(Mem440[r10_441 * 4<32> + r21_34:word16], word16, word32)
l00012D40_ds_f:
	r8_449 = CONVERT(Mem440[r10_441 * 4<32> + r21_34:word16], word16, word32)
l00012D44:
	word32 r11_452 = Mem440[r5_439 + 2912<i32>:word32]
	word32 r5_456 = CONVERT(Mem440[r11_452 * 4<32> + r21_34:word16], word16, word32)
	branch r5_456 -u r8_449 < 0<32> l00012D5C_ds_t
l00012D5C_ds_t:
	r6_442 = r7_431 + 1<32>
l00012F2C:
	r8_449 = r5_456
	r10_441 = r11_452
l00012D5C_ds_f:
	r6_442 = r7_431 + 1<32>
l00012D60:
	branch Test(EQ,r5_456 ^ r8_449) l00012D68_ds_t
l00012D68_ds_t:
	word32 r31_463 = r5 + r11_452
l00012F44:
	branch CONVERT(Mem440[r5 + r10_441 + 5208<i32>:byte], byte, word32) -u CONVERT(Mem440[r31_463 + 5208<i32>:byte], byte, word32) >= 0<32> l00013048
l00013048:
	r10_441 = r11_452
l00012F58:
	r8_449 = r5_456
	r6_442 = r7_431
l00012D68_ds_f:
l00012D6C:
	r6_442 = r7_431
l00012D70:
	branch r9_430 -u r8_449 < 0<32> l00012D78_ds_t
l00012D78_ds_t:
l00012D78_ds_f:
	word32 r8_480 = r9_430 ^ r8_449
l00012D7C:
	word32 r3_486
	branch Test(NE,r8_480) l00012D80_ds_t
l00012D80_ds_t:
l00012CFC:
	r3_486 = r3_1373 + 0x2D7<32>
l00012D80_ds_f:
	word32 r5_487 = r5 + r10_441
l00012D84:
	branch CONVERT(Mem440[r5_487 + 5208<i32>:byte], byte, word32) -u CONVERT(Mem440[r23_434 + 5208<i32>:byte], byte, word32) < 0<32> l00012D94_ds_t
l00012D94_ds_t:
	r3_486 = r3_1373 + 0x2D7<32>
l00012D00:
	Mem502[r3_486 * 4<32> + r5:word32] = r10_441
	r7_431 = r6_442 * 2<32>
	branch r4_1343 < r7_431 l00012D18_ds_t
l00012D18_ds_t:
	r3_1373 = r6_442
l00012D18_ds_f:
	r3_1373 = r6_442
l00012D94_ds_f:
	word32 r3_511 = r3_1373 + 0x2D7<32>
l00012D98:
	r3_1373 = r3_511 + 0xFFFFFD29<32>
l00012D9C:
	word32 r6_549
	word32 r5_551
	Mem519[(r3_1373 + 0x2D7<32>) * 4<32> + r5:word32] = r22_1341
	word32 r3_522 = r12_1344 * 2<32>
	word32 r5_520 = Mem519[r5 + 2912<i32>:word32]
	word32 r7_528 = CONVERT(Mem519[r3_522 * 2<32> + r21_34:word16], word16, word32)
	word32 r8_530 = CONVERT(Mem519[r5_520 * 4<32> + r21_34:word16], word16, word32)
	Mem534[r28_1360 + 4<i32>:word32] = r12_1344
	word32 r23_532 = r30_1365 + 0xFFFFFFFE<32>
	Mem535[r5 + 5204<i32>:word32] = r23_532
	Mem536[r28_1360:word32] = r5_520
	Mem540[r25_1351 + r21_34:word16] = SLICE(r7_528 + r8_530, word16, 0)
	word32 r7_544 = CONVERT(Mem540[r5 + r12_1344 + 5208<i32>:byte], byte, word32)
	word32 r5_546 = CONVERT(Mem540[r5 + r5_520 + 5208<i32>:byte], byte, word32)
	word32 r3_547 = r21_34 + r3_522 * 2<32>
	branch r7_544 -u r5_546 < 0<32> l00012DFC_ds_t
l00012DFC_ds_t:
	r6_549 = r21_34 + r5_520 * 4<32>
l00012FA4:
	r5_551 = r5_546 + 1<32> & 0xFF<32>
l00012DFC_ds_f:
	r6_549 = r21_34 + r5_520 * 4<32>
l00012E00:
	r5_551 = r7_544 + 1<32> & 0xFF<32>
l00012E08:
	Mem559[r20_1354:byte] = SLICE(r5_551, byte, 0)
	Mem565[r6_549 + 2<i32>:word16] = SLICE(r24_1370, word16, 0)
	Mem568[r3_547 + 2<i32>:word16] = SLICE(r24_1370, word16, 0)
	Mem570[r5 + 2912<i32>:word32] = r24_1370
	branch Test(EQ,r27_1345) l00012E24_ds_t
l00012E24_ds_t:
l00013058:
	word32 r8_580 = Mem570[r6 + 8<i32>:word32]
	Mem581[r5 + 5200<i32>:word32] = 1<32>
	word32 r31_585 = Mem581[r6:word32]
	Mem587[r5 + 5204<i32>:word32] = r30_1365 + 0xFFFFFFFD<32>
	Mem588[(r30_1365 + 0x2D4<32>) * 4<32> + r5:word32] = r24_1370
	word32 r24_589 = Mem588[r6 + 4<i32>:word32]
	word32 r4_590 = Mem588[r8_580:word32]
	word32 r4_594 = Mem593[r8_580 + 4<i32>:word32]
	word32 r29_599 = Mem598[r8_580 + 8<i32>:word32]
	word32 r28_600 = Mem598[r8_580 + 16<i32>:word32]
	fn00018C64()
	word32 r25_603 = r31_585 + r25_1351
	branch r23_532 > 0x23C<32> l000130CC_ds_t
l000130CC_ds_t:
	Mem608[r25_603 + 2<i32>:word16] = SLICE(r27_1345, word16, 0)
l000130CC_ds_f:
	Mem610[r25_603 + 2<i32>:word16] = SLICE(r27_1345, word16, 0)
l000130D0:
	word32 r27_1501
	branch Test(EQ,r4_590) l000130D8_ds_t
l000130D8_ds_t:
l00013598:
	r27_1501 = r26_139
	word32 r25_618 = r5 + (r23_532 + 0x2D7<32>) * 4<32>
l000135B4:
	word32 r5_622 = Mem621[r25_618:word32]
	word32 r8_626 = r31_585 + r5_622 * 4<32>
	word32 r6_633 = CONVERT(Mem621[r31_585 + CONVERT(Mem621[r8_626 + 2<i32>:word16], word16, word32) * 4<32> + 2<i32>:word16], word16, word32)
	word32 r6_634 = r6_633 + 1<32>
	branch r28_600 >= r6_633 + 1<32> l000135EC
l000135E4:
	r6_634 = r28_600
	r27_1501 = r27_1501 + 1<32>
l000135EC:
	Mem644[r8_626 + 2<i32>:word16] = SLICE(r6_634, word16, 0)
	word32 r7_641 = r6_634 * 2<32>
	branch r24_589 < r5_622 l000135FC_ds_t
l000135FC_ds_t:
l000135FC_ds_f:
	word32 r7_652 = r5 + r7_641
l00013600:
	Mem661[r7_652 + 2876<i32>:word16] = Mem644[r7_652 + 2876<i32>:word16] + 1<16>
	word32 r3_657 = r5_622 - r29_599
	branch r5_622 < r29_599 l0001361C_ds_t
l0001361C_ds_t:
l0001361C_ds_f:
l00013620:
	r6_634 = r6_634 + Mem661[r3_657 * 4<32> + r4_594:word32]
l00013628:
	Mem687[r5 + 5800<i32>:word32] = Mem661[r5 + 5800<i32>:word32] + fn00017F30(CONVERT(Mem661[r5_622 * 4<32> + r31_585:word16], word16, word32), r6_634)
l0001363C:
	r25_618 = r25_618 + 4<32>
	branch Test(NE,r25_618 ^ r5 + 0x1450<32>) l000135B4
l00013648:
	branch Test(NE,r27_1501) l000131DC
l0001364C:
l000130D8_ds_f:
l000130DC:
	r27_1501 = r26_139
	word32 r19_714 = r5 + (r23_532 + 0x2D7<32>) * 4<32>
l00013104:
	word32 r6_718 = Mem717[r19_714:word32]
	word32 r10_724 = r31_585 + r6_718 * 4<32>
	word32 r5_731 = CONVERT(Mem717[r31_585 + CONVERT(Mem717[r10_724 + 2<i32>:word16], word16, word32) * 4<32> + 2<i32>:word16], word16, word32)
	word32 r22_720 = r26_139
	word32 r5_732 = r5_731 + 1<32>
	branch r28_600 >= r5_731 + 1<32> l00013138_ds_t
l00013138_ds_t:
	r19_714 = r19_714 + 4<32>
l00013138_ds_f:
	r19_714 = r19_714 + 4<32>
l0001313C:
	r5_732 = r28_600
	r27_1501 = r27_1501 + 1<32>
l00013144:
	Mem744[r10_724 + 2<i32>:word16] = SLICE(r5_732, word16, 0)
	word32 r9_741 = r5_732 * 2<32>
	branch r24_589 < r6_718 l00013154_ds_t
l00013154_ds_t:
l00013154_ds_f:
	word32 r9_752 = r5 + r9_741
l00013158:
	Mem761[r9_752 + 2876<i32>:word16] = Mem744[r9_752 + 2876<i32>:word16] + 1<16>
	word32 r3_757 = r6_718 - r29_599
	branch r6_718 < r29_599 l00013174_ds_t
l00013174_ds_t:
l00013174_ds_f:
l00013178:
	r22_720 = Mem761[r3_757 * 4<32> + r4_594:word32]
	r5_732 = r5_732 + r22_720
l00013184:
	word32 r25_776 = CONVERT(Mem761[r6_718 * 4<32> + r31_585:word16], word16, word32)
	word32 r3_780 = fn00017F30(r5_732, r25_776)
	word32 r5_793 = CONVERT(Mem761[r4_590 + r6_718 * 4<32> + 2<i32>:word16], word16, word32)
	Mem795[r5 + 5800<i32>:word32] = Mem761[r5 + 5800<i32>:word32] + r3_780
	Mem808[r5 + 5804<i32>:word32] = Mem795[r5 + 5804<i32>:word32] + fn00017F30(r5_793 + r22_720, r25_776)
l000131C0:
	branch Test(NE,r19_714 ^ r5 + 0x1450<32>) l000131C8_ds_t
l000131C8_ds_t:
l000131C8_ds_f:
l000131CC:
	branch Test(EQ,r27_1501) l000131D8_ds_t
l000131D8_ds_t:
l000131D8_ds_f:
l000131DC:
	word32 r28_1032 = r28_600
	word32 r25_1031 = r28_600 + 0xFFFFFFFF<32>
l0001332C:
	word32 r6_859
	word32 r4_858
	word32 r5_849 = r5 + r28_600 * 2<32>
	word32 r3_852 = CONVERT(Mem850[r5_849 + 2874<i32>:word16], word16, word32)
	branch Test(EQ,r3_852) l00013338_ds_t
l00013338_ds_t:
l0001320C:
	r3_852 = CONVERT(Mem850[r5_849 + 2872<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFFE<32>
	branch Test(NE,r3_852) l00013218_ds_t
l00013218_ds_t:
	r6_859 = r28_600 + 0xFFFFFFFF<32>
l00013218_ds_f:
l0001321C:
	r3_852 = CONVERT(Mem850[r5_849 + 2870<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFFD<32>
	branch Test(NE,r3_852) l00013228_ds_t
l00013228_ds_t:
	r6_859 = r28_600 + 0xFFFFFFFE<32>
l00013228_ds_f:
l0001322C:
	r3_852 = CONVERT(Mem850[r5_849 + 2868<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFFC<32>
	branch Test(NE,r3_852) l00013238_ds_t
l00013238_ds_t:
	r6_859 = r28_600 + 0xFFFFFFFD<32>
l00013238_ds_f:
l0001323C:
	r3_852 = CONVERT(Mem850[r5_849 + 2866<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFFB<32>
	branch Test(NE,r3_852) l00013248_ds_t
l00013248_ds_t:
	r6_859 = r28_600 + 0xFFFFFFFC<32>
l00013248_ds_f:
l0001324C:
	r3_852 = CONVERT(Mem850[r5_849 + 2864<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFFA<32>
	branch Test(NE,r3_852) l00013258_ds_t
l00013258_ds_t:
	r6_859 = r28_600 + 0xFFFFFFFB<32>
l00013258_ds_f:
l0001325C:
	r3_852 = CONVERT(Mem850[r5_849 + 2862<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF9<32>
	branch Test(NE,r3_852) l00013268_ds_t
l00013268_ds_t:
	r6_859 = r28_600 + 0xFFFFFFFA<32>
l00013268_ds_f:
l0001326C:
	r3_852 = CONVERT(Mem850[r5_849 + 2860<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF8<32>
	branch Test(NE,r3_852) l00013278_ds_t
l00013278_ds_t:
	r6_859 = r28_600 + 0xFFFFFFF9<32>
l00013278_ds_f:
l0001327C:
	r3_852 = CONVERT(Mem850[r5_849 + 2858<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF7<32>
	branch Test(NE,r3_852) l00013288_ds_t
l00013288_ds_t:
	r6_859 = r28_600 + 0xFFFFFFF8<32>
l00013288_ds_f:
l0001328C:
	r3_852 = CONVERT(Mem850[r5_849 + 2856<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF6<32>
	branch Test(NE,r3_852) l00013298_ds_t
l00013298_ds_t:
	r6_859 = r28_600 + 0xFFFFFFF7<32>
l00013298_ds_f:
l0001329C:
	r3_852 = CONVERT(Mem850[r5_849 + 2854<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF5<32>
	branch Test(NE,r3_852) l000132A8_ds_t
l000132A8_ds_t:
l0001366C:
	r6_859 = r28_600 + 0xFFFFFFF6<32>
l000132A8_ds_f:
	r6_859 = r28_600 + 0xFFFFFFF5<32>
l000132AC:
	r3_852 = CONVERT(Mem850[r5_849 + 2852<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF4<32>
	branch Test(NE,r3_852) l000132B8_ds_t
l000132B8_ds_t:
l000132B8_ds_f:
	word32 r7_920 = r28_600 + 0xFFFFFFF4<32>
l000132BC:
	r3_852 = CONVERT(Mem850[r5_849 + 2850<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF3<32>
	branch Test(NE,r3_852) l000132C8_ds_t
l000132C8_ds_t:
l000132C8_ds_f:
	r6_859 = r28_600 + 0xFFFFFFF3<32>
l000132CC:
	r3_852 = CONVERT(Mem850[r5_849 + 2848<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF2<32>
	branch Test(NE,r3_852) l000132D8_ds_t
l000132D8_ds_t:
l000132D8_ds_f:
	r7_920 = r28_600 + 0xFFFFFFF2<32>
l000132DC:
	r3_852 = CONVERT(Mem850[r5_849 + 2846<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF1<32>
	branch Test(NE,r3_852) l000132E8_ds_t
l000132E8_ds_t:
l00013664:
	r6_859 = r7_920
l000132E8_ds_f:
	r6_859 = r28_600 + 0xFFFFFFF1<32>
l000132EC:
	r3_852 = CONVERT(Mem850[r5_849 + 2844<i32>:word16], word16, word32)
	r4_858 = r28_600 + 0xFFFFFFF0<32>
l00013338_ds_f:
	r4_858 = r28_600 + 0xFFFFFFFF<32>
l0001333C:
	r6_859 = r28_600
l000132F4:
	Mem955[(r4_858 + 0x59E<32>) * 2<32> + r5:word16] = SLICE(r3_852, word16, 0) + 0xFFFF<16>
	word32 r6_956 = r5 + r6_859 * 2<32>
	Mem965[r6_956 + 2876<i32>:word16] = Mem955[r6_956 + 2876<i32>:word16] + 2<16>
	r27_1501 = r27_1501 + 0xFFFFFFFE<32>
	word32 r3_969 = CONVERT(Mem965[r5_849 + 2876<i32>:word16], word16, word32)
	branch Test(LE,r27_1501) l00013328_ds_t
l00013328_ds_t:
	Mem972[r5_849 + 2876<i32>:word16] = SLICE(r3_969, word16, 0) + 0xFFFF<16>
l000134D4:
	branch Test(EQ,r28_600) l000134D8_ds_t
l000134D8_ds_t:
l000134D8_ds_f:
l000134DC:
	word32 r26_1237 = r5 + (r28_600 + 0x59E<32>) * 2<32>
	word32 r30_1502 = 0x23D<32>
l000134E8:
	word32 r27_1005 = CONVERT(Mem981[r26_1237:word16], word16, word32)
	branch Test(EQ,r27_1005) l00013550
l000134F0:
	word32 r23_1001 = r5 + (r30_1502 + 0x2D6<32>) * 4<32>
l00013500:
	word32 r4_992 = Mem991[r23_1001:word32]
	r30_1502 = r30_1502 + 0xFFFFFFFF<32>
	branch r24_589 < r4_992 l00013518_ds_t
l00013518_ds_t:
l00013564:
	r23_1001 = r23_1001 + 0xFFFFFFFC<32>
l00013518_ds_f:
	word32 r29_1002 = r31_585 + r4_992 * 4<32>
l0001351C:
	word32 r4_1004 = CONVERT(Mem991[r29_1002 + 2<i32>:word16], word16, word32)
	r27_1005 = r27_1005 + 0xFFFFFFFF<32>
	word32 r5_1008 = r28_1032 - r4_1004
	branch Test(EQ,r4_1004 ^ r28_1032) l00013530_ds_t
l00013530_ds_t:
	r23_1001 = r23_1001 + 0xFFFFFFFC<32>
l00013530_ds_f:
	r23_1001 = r23_1001 + 0xFFFFFFFC<32>
l00013534:
	Mem1024[r5 + 5800<i32>:word32] = Mem991[r5 + 5800<i32>:word32] + fn00017F30(r5_1008, CONVERT(Mem991[r4_992 * 4<32> + r31_585:word16], word16, word32))
	Mem1026[r29_1002 + 2<i32>:word16] = SLICE(r28_1032, word16, 0)
l0001354C:
	branch Test(NE,r27_1005) l00013500
l00013550:
	r28_1032 = r25_1031
	branch Test(EQ,r25_1031) l00013558_ds_t
l00013558_ds_t:
l00013344:
l00013348:
	branch Test(LT,r22_108) l00013430_ds_t
l00013430_ds_t:
l00013430_ds_f:
l00013434:
	word32 r7_1179 = r21_34 + 2<32>
	word32 r21_1181 = r21_34 + (r22_108 * 4<32> + 6<32>)
l00013450:
	word32 r4_1186 = CONVERT(Mem1184[r7_1179:word16], word16, word32)
	branch Test(EQ,r4_1186) l00013458_ds_t
l00013458_ds_t:
l00013458_ds_f:
l0001345C:
	word32 r3_1191 = CONVERT(Mem1184[r4_1186 * 2<32> + (fp + 0xFFFFFF9C<32>):word16], word16, word32)
	Mem1197[r4_1186 * 2<32> + (fp + 0xFFFFFF9C<32>):word16] = SLICE(r3_1191, word16, 0) + 1<16>
	word32 r6_1193 = 0<32>
	word32 r5_1194 = r3_1191
l00013470:
	word32 r3_1201 = r5_1194 & 1<32> | r6_1193
	r4_1186 = r4_1186 + 0xFFFFFFFF<32>
	r5_1194 = r5_1194 >>u 1<i32>
	branch Test(NE,r4_1186) l00013484_ds_t
l00013484_ds_t:
	r6_1193 = r3_1201 * 2<32>
l00013484_ds_f:
l00013488:
	Mem1210[r7_1179 - 2<i32>:word16] = SLICE(r3_1201, word16, 0)
l0001348C:
	r7_1179 = r7_1179 + 4<32>
	branch Test(NE,r21_1181 ^ r7_1179) l00013450
l00013498:
	return
fn00012A34_exit:
l00013558_ds_f:
	r26_1237 = r26_1237 + 0xFFFFFFFE<32>
l0001355C:
	r25_1031 = r25_1031 + 0xFFFFFFFF<32>
l00013328_ds_f:
	Mem1240[r5_849 + 2876<i32>:word16] = SLICE(r3_969, word16, 0) + 0xFFFF<16>
l00012E24_ds_f:
	word32 r8_1241 = r24_1370 + 1<32>
l00012E28:
	word32 r9_1243 = CONVERT(Mem570[r25_1351 + r21_34:word16], word16, word32)
	word32 r5_1244 = 1<32>
	word32 r10_1245 = 2<32>
l00012E58:
	word32 r7_1260
	word32 r3_1250 = r5 + r10_1245 * 4<32>
	word32 r11_1252 = Mem1251[r3_1250 + 2908<i32>:word32]
	word32 r6_1253 = r10_1245
	branch r10_1245 >= r4_1343 l00012E7C_ds_t
l00012E7C_ds_t:
	r7_1260 = CONVERT(Mem1251[r11_1252 * 4<32> + r21_34:word16], word16, word32)
l00012E7C_ds_f:
	r7_1260 = CONVERT(Mem1251[r11_1252 * 4<32> + r21_34:word16], word16, word32)
l00012E80:
	word32 r12_1263 = Mem1251[r3_1250 + 2912<i32>:word32]
	word32 r3_1267 = CONVERT(Mem1251[r12_1263 * 4<32> + r21_34:word16], word16, word32)
	branch r3_1267 -u r7_1260 < 0<32> l00012E98_ds_t
l00012E98_ds_t:
	r6_1253 = r10_1245 + 1<32>
l00012F20:
	r7_1260 = r3_1267
	r11_1252 = r12_1263
l00012E98_ds_f:
	r6_1253 = r10_1245 + 1<32>
l00012E9C:
	branch Test(EQ,r3_1267 ^ r7_1260) l00012EA4_ds_t
l00012EA4_ds_t:
	word32 r27_1274 = r5 + r12_1263
l00012F64:
	branch CONVERT(Mem1251[r5 + r11_1252 + 5208<i32>:byte], byte, word32) -u CONVERT(Mem1251[r27_1274 + 5208<i32>:byte], byte, word32) >= 0<32> l00013040
l00013040:
	r11_1252 = r12_1263
l00012F78:
	r7_1260 = r3_1267
	r6_1253 = r10_1245
l00012EA4_ds_f:
l00012EA8:
	r6_1253 = r10_1245
l00012EAC:
	branch r9_1243 -u r7_1260 < 0<32> l00012EB4_ds_t
l00012EB4_ds_t:
l00012EB4_ds_f:
	word32 r7_1291 = r9_1243 ^ r7_1260
l00012EB8:
	word32 r5_1297
	branch Test(NE,r7_1291) l00012EBC_ds_t
l00012EBC_ds_t:
l00012E38:
	r5_1297 = r5_1244 + 0x2D7<32>
l00012EBC_ds_f:
	word32 r3_1298 = r5 + r11_1252
l00012EC0:
	branch CONVERT(Mem1251[r3_1298 + 5208<i32>:byte], byte, word32) -u CONVERT(Mem1251[r20_1354:byte], byte, word32) < 0<32> l00012ED0_ds_t
l00012ED0_ds_t:
	r5_1297 = r5_1244 + 0x2D7<32>
l00012E3C:
	Mem1313[r5_1297 * 4<32> + r5:word32] = r11_1252
	r10_1245 = r6_1253 * 2<32>
	branch r4_1343 < r10_1245 l00012E54_ds_t
l00012E54_ds_t:
	r5_1244 = r6_1253
l00012E54_ds_f:
	r5_1244 = r6_1253
l00012ED0_ds_f:
	word32 r5_1322 = r5_1244 + 0x2D7<32>
l00012ED4:
	r5_1244 = r5_1322 + 0xFFFFFD29<32>
l00012ED8:
	Mem1333[(r5_1244 + 0x2D7<32>) * 4<32> + r5:word32] = r24_1370
	r26_1338 = r26_1338 + 0xFFFFFFFC<32>
	r22_1341 = Mem1333[r26_1338:word32]
	r12_1344 = Mem1333[r5 + 2912<i32>:word32]
	Mem1346[r5 + 2912<i32>:word32] = r22_1341
	r4_1343 = r4_1343 + 0xFFFFFFFF<32>
	r27_1345 = r4_1343 ^ 1<32>
	r25_1351 = r25_1351 + 4<32>
	r20_1354 = r20_1354 + 1<32>
	r28_1360 = r28_1360 + 0xFFFFFFF8<32>
	r30_1365 = r23_532
	branch Test(NE,r4_1343 ^ 1<32>) l00012F14_ds_t
l00012F14_ds_t:
	r24_1370 = r8_1241
l00012F14_ds_f:
	r24_1370 = r8_1241
l00012F18:
	r3_1373 = r4_1343


void fn0001371C(word32 r0, word32 r5, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r5:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r10 r11 r12 r18 r3 r4 r5 r8 r9
// Preserved: r1 r15 r19 r21 r7
fn0001371C_entry:
l0001371C:
	word32 r5_21
	word32 r3_13 = Mem9[r5 + 5820<i32>:word32]
	word32 r4_12 = CONVERT(Mem9[r5 + 5816<i32>:word16], word16, word32)
	word32 r10_14 = Mem9[r5 + 20<i32>:word32]
	word32 r11_15 = Mem9[r5 + 8<i32>:word32]
	word32 r18_19 = r3_13 & 0x1F<32>
	branch Test(EQ,r3_13 & 0x1F<32>) l00013754_ds_t
l00013754_ds_t:
	r5_21 = r8
l00013754_ds_f:
	word32 r5_22 = r8
l00013758:
	r18_19 = r18_19 + 0xFFFFFFFF<32>
	branch Test(NE,r18_19) l00013760_ds_t
l00013760_ds_t:
	r5_22 = r5_22 * 2<32>
l00013760_ds_f:
	r5_21 = r5_22 * 2<32>
l00013764:
	word32 r4_106
	word32 r3_108
	word32 r5_33 = CONVERT(SLICE(r5_21 | r4_12, int16, 0), int16, int32)
	word32 r9_103 = r10_14 + 1<32>
	word32 r7_118 = r5_33
	branch r3_13 > 0xD<32> l00013788_ds_t
l00013788_ds_t:
l000138F8:
	word32 r7_82
	Mem51[r5 + 20<i32>:word32] = r10_14 + 1<32>
	Mem53[r5 + 5816<i32>:word16] = SLICE(r5_33, word16, 0)
	Mem55[r10_14 + r11_15:byte] = SLICE(r5_33, byte, 0)
	word32 r3_56 = Mem55[r5 + 20<i32>:word32]
	word32 r7_58 = CONVERT(Mem55[r5 + 5816<i32>:word16], word16, word32)
	word32 r4_59 = Mem55[r5 + 8<i32>:word32]
	Mem61[r5 + 20<i32>:word32] = r3_56 + 1<32>
	Mem72[r3_56 + r4_59:byte] = SLICE(r7_58 >>u 8<i32>, byte, 0)
	word32 r3_73 = Mem72[r5 + 5820<i32>:word32]
	word32 r9_77 = 0x10<32> - r3_73
	word32 r5_74 = Mem72[r5 + 20<i32>:word32]
	word32 r4_76 = Mem72[r5 + 8<i32>:word32]
	word32 r18_78 = r9_77 & 0x1F<32>
	branch Test(EQ,r9_77 & 0x1F<32>) l00013960_ds_t
l00013960_ds_t:
	r7_82 = r8
l00013960_ds_f:
	word32 r7_83 = r8
l00013964:
	r18_78 = r18_78 + 0xFFFFFFFF<32>
	branch Test(NE,r18_78) l0001396C_ds_t
l0001396C_ds_t:
	r7_83 = r7_83 >> 1<i32>
l0001396C_ds_f:
	r7_82 = r7_83 >> 1<i32>
l00013970:
	Mem99[r5 + 5816<i32>:word16] = SLICE(r7_82, word16, 0)
	Mem100[r5 + 5820<i32>:word32] = r3_73 + 0xFFFFFFF3<32>
	r3_108 = r3_73 + 0xFFFFFFF3<32>
	r7_118 = r7_82
	r9_103 = r5_74 + 1<32>
	r4_106 = r4_76 + r5_74
l00013788_ds_f:
	r4_106 = r11_15 + r10_14
l0001378C:
	Mem110[r5 + 5816<i32>:word16] = SLICE(r5_33, word16, 0)
	Mem111[r5 + 5820<i32>:word32] = r3_13 + 3<32>
	r3_108 = r3_13 + 3<32>
l00013798:
	branch r3_108 > 8<32> l000138A0
l000138A0:
	Mem117[r5 + 20<i32>:word32] = r9_103
	Mem121[r4_106:byte] = SLICE(r7_118, byte, 0)
	word32 r3_122 = Mem121[r5 + 20<i32>:word32]
	word32 r7_124 = CONVERT(Mem121[r5 + 5816<i32>:word16], word16, word32)
	word32 r4_125 = Mem121[r5 + 8<i32>:word32]
	Mem127[r5 + 20<i32>:word32] = r3_122 + 1<32>
	Mem138[r3_122 + r4_125:byte] = SLICE(r7_124 >>u 8<i32>, byte, 0)
	word32 r3_139 = Mem138[r5 + 20<i32>:word32]
	r9_103 = r3_139 + 1<32>
	r4_106 = Mem138[r5 + 8<i32>:word32] + r3_139
l000137A4:
	branch Test(LE,r3_108) l000137C0
l000137A8:
	Mem143[r5 + 20<i32>:word32] = r9_103
	Mem145[r4_106:byte] = SLICE(r7_118, byte, 0)
	word32 r3_146 = Mem145[r5 + 20<i32>:word32]
	r9_103 = r3_146 + 1<32>
	r4_106 = Mem145[r5 + 8<i32>:word32] + r3_146
l000137C0:
	Mem152[r5 + 20<i32>:word32] = r9_103
	Mem161[r5 + 5816<i32>:word16] = SLICE(r0, word16, 0)
	Mem162[r5 + 5820<i32>:word32] = r0
	Mem170[r4_106:byte] = SLICE(r7, byte, 0)
	word32 r4_171 = Mem170[r5 + 20<i32>:word32]
	word32 r7_172 = Mem170[r5 + 8<i32>:word32]
	Mem175[r5 + 20<i32>:word32] = r4_171 + 1<32>
	Mem185[r4_171 + r7_172:byte] = SLICE(r7 >>u 8<i32>, byte, 0)
	word32 r4_186 = Mem185[r5 + 20<i32>:word32]
	word32 r7_187 = Mem185[r5 + 8<i32>:word32]
	Mem190[r5 + 20<i32>:word32] = r4_186 + 1<32>
	Mem192[r4_186 + r7_187:byte] = SLICE(~(r7 & 0xFF<32>), byte, 0)
	word32 r4_193 = Mem192[r5 + 20<i32>:word32]
	word32 r5_194 = Mem192[r5 + 8<i32>:word32]
	Mem197[r5 + 20<i32>:word32] = r4_193 + 1<32>
	Mem208[r4_193 + r5_194:byte] = SLICE((r7 ^ 0xFFFFFF00<32>) >>u 8<i32>, byte, 0)
	fn00018C34()
	Mem216[r5 + 20<i32>:word32] = Mem208[r5 + 20<i32>:word32] + r7
	return
fn0001371C_exit:


word32 fn00014C9C(word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00015318
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3
// Trashed: C r10 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26
fn00014C9C_entry:
l00014C9C:
	word32 r3_180
	word32 r3_285
	word32 r23_496
	word32 r23_102 = r5 >>u 16<i32>
	word32 r26_101 = r5
	branch Test(EQ,r7 ^ 1<32>) l00014D14_ds_t
l00014D14_ds_t:
l00014E4C:
	r26_101 = CONVERT(Mem19[r6:byte], byte, word32) + r5
	branch 0xFFFFFFF0<32> -u r26_101 < 0<32> l00015304
l00015304:
	r26_101 = r26_101 + 0xF<32>
l00014E64:
	word32 r23_52 = r26_101 + (r5 >>u 16<i32>)
	branch 0xFFFFFFF0<32> -u r23_52 >= 0<32> l00014E78_ds_t
l00014E78_ds_t:
	r3_285 = r23_52 * 2<32>
l00014E78_ds_f:
l00014E7C:
	r23_496 = r23_52 + 0xF<32>
l00014D14_ds_f:
	word32 r22_189 = r6
l00014D18:
	branch Test(EQ,r6) l00014D1C_ds_t
l00014D1C_ds_t:
	r3_180 = 1<32>
l00014D1C_ds_f:
l00014D20:
	branch 0xF<32> -u r7 >= 0<32> l00014D2C_ds_t
l00014D2C_ds_t:
l00014EF0:
	branch Test(EQ,r7) l00014EF4_ds_t
l00014EF4_ds_t:
l00014EF4_ds_f:
l00014EF8:
	word32 r26_69 = r5 + CONVERT(Mem19[r6:byte], byte, word32)
	word32 r23_70 = (r5 >>u 16<i32>) + r26_69
	r26_101 = r26_69 + CONVERT(Mem19[r6 + 1<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 2<32>) l00014F10_ds_t
l00014F10_ds_t:
	r23_102 = r23_70 + r26_101
l00014F10_ds_f:
	word32 r23_73 = r23_70 + r26_101
l00014F14:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 2<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 3<32>) l00014F24_ds_t
l00014F24_ds_t:
	r23_102 = r23_73 + r26_101
l00014F24_ds_f:
	word32 r23_79 = r23_73 + r26_101
l00014F28:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 3<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 4<32>) l00014F38_ds_t
l00014F38_ds_t:
	r23_102 = r23_79 + r26_101
l00014F38_ds_f:
	word32 r23_85 = r23_79 + r26_101
l00014F3C:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 4<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 5<32>) l00014F4C_ds_t
l00014F4C_ds_t:
	r23_102 = r23_85 + r26_101
l00014F4C_ds_f:
	word32 r23_91 = r23_85 + r26_101
l00014F50:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 5<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 6<32>) l00014F60_ds_t
l00014F60_ds_t:
	r23_102 = r23_91 + r26_101
l00014F60_ds_f:
	word32 r23_97 = r23_91 + r26_101
l00014F64:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 6<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 7<32>) l00014F74_ds_t
l00014F74_ds_t:
	r23_102 = r23_97 + r26_101
l00014F74_ds_f:
	word32 r23_103 = r23_97 + r26_101
l00014F78:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 7<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 8<32>) l00014F88_ds_t
l00014F88_ds_t:
	r23_102 = r23_103 + r26_101
l00014F88_ds_f:
	word32 r23_109 = r23_103 + r26_101
l00014F8C:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 8<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 9<32>) l00014F9C_ds_t
l00014F9C_ds_t:
	r23_102 = r23_109 + r26_101
l00014F9C_ds_f:
	word32 r23_115 = r23_109 + r26_101
l00014FA0:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 9<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 0xA<32>) l00014FB0_ds_t
l00014FB0_ds_t:
	r23_102 = r23_115 + r26_101
l00014FB0_ds_f:
	word32 r23_121 = r23_115 + r26_101
l00014FB4:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 10<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 0xB<32>) l00014FC4_ds_t
l00014FC4_ds_t:
	r23_102 = r23_121 + r26_101
l00014FC4_ds_f:
	word32 r23_127 = r23_121 + r26_101
l00014FC8:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 11<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 0xC<32>) l00014FD8_ds_t
l00014FD8_ds_t:
	r23_102 = r23_127 + r26_101
l00014FD8_ds_f:
	word32 r23_133 = r23_127 + r26_101
l00014FDC:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 12<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 0xD<32>) l00014FEC_ds_t
l00014FEC_ds_t:
	r23_102 = r23_133 + r26_101
l00014FEC_ds_f:
	word32 r23_139 = r23_133 + r26_101
l00014FF0:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 13<i32>:byte], byte, word32)
	branch Test(EQ,r7 ^ 0xE<32>) l00015000_ds_t
l00015000_ds_t:
	r23_102 = r23_139 + r26_101
l00015000_ds_f:
	word32 r23_145 = r23_139 + r26_101
l00015004:
	r26_101 = r26_101 + CONVERT(Mem19[r6 + 14<i32>:byte], byte, word32)
	r23_102 = r23_145 + r26_101
l00015010:
	branch 0xFFFFFFF0<32> -u r26_101 >= 0<32> l00015028
l00015020:
	r26_101 = r26_101 + 0xF<32>
l00015028:
	r3_180 = fn00018030(r23_102, 0xFFFFFFF1<32>) * 0x10000<32> | r26_101
l00014D2C_ds_f:
	word32 r24_181 = r7 + 0xFFFFEA4F<32>
l00014D30:
	word32 r24_290
	word32 r25_184
	branch 0x15AF<32> -u r7 >= 0<32> l00014D3C_ds_t
l00014D3C_ds_t:
	r25_184 = r7
l00014D3C_ds_f:
l00014D40:
l00014D48:
	r25_184 = r24_181 + 0xFFFFEA50<32>
	word32 r6_190 = r22_189 + 0x15B0<32>
l00014D50:
	word32 r3_200 = CONVERT(Mem19[r22_189:byte], byte, word32) + r26_101
	word32 r5_205 = CONVERT(Mem19[r22_189 + 1<i32>:byte], byte, word32) + r3_200
	word32 r9_206 = CONVERT(Mem19[r22_189 + 2<i32>:byte], byte, word32) + r5_205
	word32 r8_210 = CONVERT(Mem19[r22_189 + 3<i32>:byte], byte, word32) + r9_206
	word32 r7_214 = CONVERT(Mem19[r22_189 + 4<i32>:byte], byte, word32) + r8_210
	word32 r4_218 = CONVERT(Mem19[r22_189 + 5<i32>:byte], byte, word32) + r7_214
	word32 r5_224 = CONVERT(Mem19[r22_189 + 6<i32>:byte], byte, word32) + r4_218
	word32 r9_228 = CONVERT(Mem19[r22_189 + 7<i32>:byte], byte, word32) + r5_224
	word32 r3_232 = CONVERT(Mem19[r22_189 + 8<i32>:byte], byte, word32) + r9_228
	word32 r10_234 = CONVERT(Mem19[r22_189 + 9<i32>:byte], byte, word32) + r3_232
	word32 r3_240 = CONVERT(Mem19[r22_189 + 10<i32>:byte], byte, word32) + r10_234
	word32 r4_244 = CONVERT(Mem19[r22_189 + 11<i32>:byte], byte, word32) + r3_240
	word32 r9_246 = CONVERT(Mem19[r22_189 + 12<i32>:byte], byte, word32) + r4_244
	word32 r8_250 = CONVERT(Mem19[r22_189 + 13<i32>:byte], byte, word32) + r9_246
	word32 r5_252 = CONVERT(Mem19[r22_189 + 14<i32>:byte], byte, word32) + r8_250
	r26_101 = CONVERT(Mem19[r22_189 + 15<i32>:byte], byte, word32) + r5_252
	r22_189 = r22_189 + 0x10<32>
	word32 r4_257 = r3_200 + r5_205 + r9_206 + r8_210 + r7_214 + r4_218 + r5_224 + r9_228 + r3_232 + r10_234 + r3_240 + r4_244 + r9_246 + r8_250 + r5_252 + r26_101
	branch Test(NE,r22_189 ^ r6_190) l00014E18_ds_t
l00014E18_ds_t:
	r23_102 = r23_102 + r4_257
l00014E18_ds_f:
	word32 r23_262 = r23_102 + r4_257
l00014E1C:
	r26_101 = fn00018030(r26_101, 0xFFFFFFF1<32>)
	word32 r3_276 = fn00018030(r23_262, 0xFFFFFFF1<32>)
	branch 0x15AF<32> -u r25_184 >= 0<32> l00014E40_ds_t
l00014E40_ds_t:
	r23_102 = r3_276
l00015084:
	branch Test(EQ,r25_184) l00015088_ds_t
l00015088_ds_t:
	r3_285 = r3_276 * 2<32>
l00015088_ds_f:
l0001508C:
	branch 0xF<32> -u r25_184 >= 0<32> l00015310
l00015310:
	r24_290 = r24_181 + 0<32>
l00015098:
	word32 r3_292 = r25_184 + 0xFFFFFFF0<32>
	word32 r5_304 = r22_189 + ((r3_292 >>u 4<i32>) + 1<32>) * 0x10<32>
l000150C8:
	word32 r3_314 = CONVERT(Mem19[r22_189:byte], byte, word32) + r26_101
	word32 r9_319 = CONVERT(Mem19[r22_189 + 1<i32>:byte], byte, word32) + r3_314
	word32 r8_320 = CONVERT(Mem19[r22_189 + 2<i32>:byte], byte, word32) + r9_319
	word32 r7_324 = CONVERT(Mem19[r22_189 + 3<i32>:byte], byte, word32) + r8_320
	word32 r6_328 = CONVERT(Mem19[r22_189 + 4<i32>:byte], byte, word32) + r7_324
	word32 r10_332 = CONVERT(Mem19[r22_189 + 5<i32>:byte], byte, word32) + r6_328
	word32 r9_336 = CONVERT(Mem19[r22_189 + 6<i32>:byte], byte, word32) + r10_332
	word32 r8_340 = CONVERT(Mem19[r22_189 + 7<i32>:byte], byte, word32) + r9_336
	word32 r7_344 = CONVERT(Mem19[r22_189 + 8<i32>:byte], byte, word32) + r8_340
	word32 r6_348 = CONVERT(Mem19[r22_189 + 9<i32>:byte], byte, word32) + r7_344
	word32 r10_352 = CONVERT(Mem19[r22_189 + 10<i32>:byte], byte, word32) + r6_348
	word32 r9_356 = CONVERT(Mem19[r22_189 + 11<i32>:byte], byte, word32) + r10_352
	word32 r8_362 = CONVERT(Mem19[r22_189 + 12<i32>:byte], byte, word32) + r9_356
	word32 r7_364 = CONVERT(Mem19[r22_189 + 13<i32>:byte], byte, word32) + r8_362
	word32 r6_366 = CONVERT(Mem19[r22_189 + 14<i32>:byte], byte, word32) + r7_364
	r26_101 = CONVERT(Mem19[r22_189 + 15<i32>:byte], byte, word32) + r6_366
	r22_189 = r22_189 + 0x10<32>
	word32 r3_371 = r3_314 + r9_319 + r8_320 + r7_324 + r6_328 + r10_332 + r9_336 + r8_340 + r7_344 + r6_348 + r10_352 + r9_356 + r8_362 + r7_364 + r6_366 + r26_101
	branch Test(NE,r22_189 ^ r5_304) l00015190_ds_t
l00015190_ds_t:
	r23_102 = r23_102 + r3_371
l00015190_ds_f:
	r23_102 = r23_102 + r3_371
l00015194:
	word32 r24_378 = r25_184 + 0xFFFFFFEF<32>
	word32 r3_381 = (r3_292 >>u 4<i32>) * 2<32>
	branch Test(EQ,r25_184 & 0xF<32>) l000151B4_ds_t
l000151B4_ds_t:
l000151B4_ds_f:
	r24_290 = r24_378 - r3_381 * 8<32>
l000151B8:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189:byte], byte, word32)
	branch Test(EQ,r24_290) l000151C4_ds_t
l000151C4_ds_t:
	r23_102 = r23_102 + r26_101
l000151C4_ds_f:
	word32 r23_396 = r23_102 + r26_101
l000151C8:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 1<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 1<32>) l000151D8_ds_t
l000151D8_ds_t:
	r23_102 = r23_396 + r26_101
l000151D8_ds_f:
	word32 r23_402 = r23_396 + r26_101
l000151DC:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 2<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 2<32>) l000151EC_ds_t
l000151EC_ds_t:
	r23_102 = r23_402 + r26_101
l000151EC_ds_f:
	word32 r23_408 = r23_402 + r26_101
l000151F0:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 3<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 3<32>) l00015200_ds_t
l00015200_ds_t:
	r23_102 = r23_408 + r26_101
l00015200_ds_f:
	word32 r23_414 = r23_408 + r26_101
l00015204:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 4<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 4<32>) l00015214_ds_t
l00015214_ds_t:
	r23_102 = r23_414 + r26_101
l00015214_ds_f:
	word32 r23_420 = r23_414 + r26_101
l00015218:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 5<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 5<32>) l00015228_ds_t
l00015228_ds_t:
	r23_102 = r23_420 + r26_101
l00015228_ds_f:
	word32 r23_426 = r23_420 + r26_101
l0001522C:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 6<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 6<32>) l0001523C_ds_t
l0001523C_ds_t:
	r23_102 = r23_426 + r26_101
l0001523C_ds_f:
	word32 r23_432 = r23_426 + r26_101
l00015240:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 7<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 7<32>) l00015250_ds_t
l00015250_ds_t:
	r23_102 = r23_432 + r26_101
l00015250_ds_f:
	word32 r23_438 = r23_432 + r26_101
l00015254:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 8<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 8<32>) l00015264_ds_t
l00015264_ds_t:
	r23_102 = r23_438 + r26_101
l00015264_ds_f:
	word32 r23_444 = r23_438 + r26_101
l00015268:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 9<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 9<32>) l00015278_ds_t
l00015278_ds_t:
	r23_102 = r23_444 + r26_101
l00015278_ds_f:
	word32 r23_450 = r23_444 + r26_101
l0001527C:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 10<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 0xA<32>) l0001528C_ds_t
l0001528C_ds_t:
	r23_102 = r23_450 + r26_101
l0001528C_ds_f:
	word32 r23_456 = r23_450 + r26_101
l00015290:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 11<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 0xB<32>) l000152A0_ds_t
l000152A0_ds_t:
	r23_102 = r23_456 + r26_101
l000152A0_ds_f:
	word32 r23_462 = r23_456 + r26_101
l000152A4:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 12<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 0xC<32>) l000152B4_ds_t
l000152B4_ds_t:
	r23_102 = r23_462 + r26_101
l000152B4_ds_f:
	word32 r23_468 = r23_462 + r26_101
l000152B8:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 13<i32>:byte], byte, word32)
	branch Test(EQ,r24_290 ^ 0xD<32>) l000152C8_ds_t
l000152C8_ds_t:
	r23_102 = r23_468 + r26_101
l000152C8_ds_f:
	word32 r23_474 = r23_468 + r26_101
l000152CC:
	r26_101 = r26_101 + CONVERT(Mem19[r22_189 + 14<i32>:byte], byte, word32)
	r23_102 = r23_474 + r26_101
l000152D8:
	r26_101 = fn00018030(r26_101, 0xFFFFFFF1<32>)
	r23_496 = fn00018030(r23_102, 0xFFFFFFF1<32>)
l00014E84:
	r3_285 = r23_496 * 2<32>
l00014E88:
	r3_180 = r3_285 * 0x8000<32> | r26_101
l00014EC8:
	return r3_180
fn00014C9C_exit:
l00014E40_ds_f:
	r23_102 = r3_276
l00014E44:
	r24_181 = r25_184


word32 fn00015318(word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D008
//      fn0000DB74
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3
// Trashed: C r10 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15
fn00015318_entry:
l00015318:
	return fn00014C9C(r5, r6, r7)
fn00015318_exit:


word32 fn000156B4(word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00017044
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3
// Trashed: C r10 r11 r12 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn000156B4_entry:
l000156B4:
	word32 r4_1020
	word32 r9_36 = __rcr<word32,int32>(r5, 1<i32>, cond(r5 >>u 24<i32>))
	word32 r9_38 = __rcr<word32,int32>(r9_36, 1<i32>, cond(r9_36))
	word32 r9_40 = __rcr<word32,int32>(r9_38, 1<i32>, cond(r9_38))
	word32 r9_42 = __rcr<word32,int32>(r9_40, 1<i32>, cond(r9_40))
	word32 r9_44 = __rcr<word32,int32>(r9_42, 1<i32>, cond(r9_42))
	word32 r9_46 = __rcr<word32,int32>(r9_44, 1<i32>, cond(r9_44))
	word32 r9_48 = __rcr<word32,int32>(r9_46, 1<i32>, cond(r9_46))
	word32 r9_50 = __rcr<word32,int32>(r9_48, 1<i32>, cond(r9_48))
	word32 r3_68 = (r5 >>u 24<i32>) + (__rcr<word32,int32>(r9_50, 1<i32>, cond(r9_50)) & 0xFF000000<32>) + (r5 >>u 8<i32> & 0xFFFFFF00<32>) + (r5 * 0x100<32> & 0xFF0000<32>)
	branch Test(EQ,r7) l000157A8_ds_t
l000157A8_ds_t:
	r4_1020 = ~r3_68
l000157A8_ds_f:
	r4_1020 = ~r3_68
l000157AC:
	word32 r6_1159
	branch Test(NE,r6 & 3<32>) l000157B4_ds_t
l000157B4_ds_t:
	r6_1159 = r6 + 1<32>
l000157D0:
	word32 r3_76 = r4_1020 * 2<32>
	word32 r4_114 = Mem0[(r4_1020 >>u 24<i32> ^ CONVERT(Mem0[r6_1159 - 1<i32>:byte], byte, word32)) * 4<32> + 0xFFFFC5D0<32>:word32]
	r7 = r7 + 0xFFFFFFFF<32>
	word32 r5_120 = r6_1159 & 3<32>
	branch Test(NE,r7) l00015880_ds_t
l00015880_ds_t:
	r4_1020 = r4_114 ^ r3_76 * 0x80<32>
l000157C4:
	branch Test(EQ,r5_120) l000157C8_ds_t
l000157C8_ds_t:
l000157C8_ds_f:
l000157CC:
	r6_1159 = r6_1159 + 1<32>
l00015880_ds_f:
	r4_1020 = r4_114 ^ r3_76 * 0x80<32>
l000157B4_ds_f:
l000157B8:
	r6_1159 = r6
l0001597C:
	branch 0x1F<32> -u r7 >= 0<32> l00015984_ds_t
l00015984_ds_t:
l00015984_ds_f:
l00015988:
	word32 r5_148 = r6_1159 + ((r7 + 0xFFFFFFE0<32> >>u 5<i32>) + 1<32>) * 0x20<32>
l000159C0:
	word32 r3_155 = r4_1020 ^ Mem0[r6_1159:word32]
	word32 r4_218 = Mem0[(r3_155 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32] ^ (((Mem0[(r3_155 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_155 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32]) ^ Mem0[r6_1159 + 4<i32>:word32]) ^ Mem0[(r3_155 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32])
	word32 r4_281 = Mem0[(r4_218 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32] ^ (((Mem0[(r4_218 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r4_218 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32]) ^ Mem0[r6_1159 + 8<i32>:word32]) ^ Mem0[(r4_218 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32])
	word32 r4_345 = Mem0[(r4_281 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32] ^ (((Mem0[(r4_281 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r4_281 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32]) ^ Mem0[r6_1159 + 12<i32>:word32]) ^ Mem0[(r4_281 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32])
	word32 r4_409 = Mem0[(r4_345 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32] ^ (((Mem0[(r4_345 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r4_345 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32]) ^ Mem0[r6_1159 + 16<i32>:word32]) ^ Mem0[(r4_345 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32])
	word32 r4_473 = Mem0[(r4_409 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32] ^ (((Mem0[(r4_409 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r4_409 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32]) ^ Mem0[r6_1159 + 20<i32>:word32]) ^ Mem0[(r4_409 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32])
	word32 r8_537 = Mem0[(r4_473 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32] ^ (((Mem0[(r4_473 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r4_473 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32]) ^ Mem0[r6_1159 + 24<i32>:word32]) ^ Mem0[(r4_473 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32])
	r6_1159 = r6_1159 + 0x20<32>
	word32 r3_602 = Mem0[(r8_537 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32] ^ (((Mem0[(r8_537 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r8_537 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32]) ^ Mem0[r6_1159 - 4<i32>:word32]) ^ Mem0[(r8_537 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32])
	word32 r4_662 = Mem0[(r3_602 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32]
	word32 r3_664 = Mem0[(r3_602 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_602 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32] ^ Mem0[(r3_602 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32]
	branch Test(NE,r6_1159 ^ r5_148) l000162E8_ds_t
l000162E8_ds_t:
	r4_1020 = r4_662 ^ r3_664
l000162E8_ds_f:
	r4_1020 = r4_662 ^ r3_664
l000162EC:
	r7 = r7 & 0x1F<32>
l000162F4:
	branch 3<32> -u r7 >= 0<32> l000162FC_ds_t
l000162FC_ds_t:
l000162FC_ds_f:
	word32 r5_676 = r7 + 0xFFFFFFFC<32>
l00016300:
	word32 r3_684 = r4_1020 ^ Mem0[r6_1159:word32]
	word32 r4_744 = Mem0[(r3_684 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32]
	word32 r3_746 = Mem0[(r3_684 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32] ^ Mem0[(r3_684 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_684 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32]
	branch 3<32> -u r5_676 >= 0<32> l00016428_ds_t
l00016428_ds_t:
	r4_1020 = r3_746 ^ r4_744
l00016428_ds_f:
	word32 r4_749 = r3_746 ^ r4_744
l0001642C:
	word32 r3_752 = r4_749 ^ Mem0[r6_1159 + 4<i32>:word32]
	word32 r4_812 = Mem0[(r3_752 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32]
	word32 r3_814 = Mem0[(r3_752 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32] ^ Mem0[(r3_752 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_752 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32]
	branch 3<32> -u (r7 + 0xFFFFFFF8<32>) >= 0<32> l00016558_ds_t
l00016558_ds_t:
	r4_1020 = r3_814 ^ r4_812
l00016558_ds_f:
	word32 r4_817 = r3_814 ^ r4_812
l0001655C:
	word32 r3_820 = r4_817 ^ Mem0[r6_1159 + 8<i32>:word32]
	word32 r4_880 = Mem0[(r3_820 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32]
	word32 r3_882 = Mem0[(r3_820 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32] ^ Mem0[(r3_820 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_820 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32]
	branch 3<32> -u (r7 + 0xFFFFFFF4<32>) >= 0<32> l00016688_ds_t
l00016688_ds_t:
	r4_1020 = r3_882 ^ r4_880
l00016688_ds_f:
	word32 r4_885 = r3_882 ^ r4_880
l0001668C:
	word32 r3_888 = r4_885 ^ Mem0[r6_1159 + 12<i32>:word32]
	word32 r4_948 = Mem0[(r3_888 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32]
	word32 r3_950 = Mem0[(r3_888 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32] ^ Mem0[(r3_888 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_888 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32]
	branch 3<32> -u (r7 + 0xFFFFFFF0<32>) >= 0<32> l000167B8_ds_t
l000167B8_ds_t:
	r4_1020 = r3_950 ^ r4_948
l000167B8_ds_f:
	word32 r4_953 = r3_950 ^ r4_948
l000167BC:
	word32 r3_956 = r4_953 ^ Mem0[r6_1159 + 16<i32>:word32]
	word32 r4_1016 = Mem0[(r3_956 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32]
	word32 r3_1018 = Mem0[(r3_956 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32] ^ Mem0[(r3_956 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_956 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32]
	branch 3<32> -u (r7 + 0xFFFFFFEC<32>) >= 0<32> l000168E8_ds_t
l000168E8_ds_t:
	r4_1020 = r3_1018 ^ r4_1016
l000168E8_ds_f:
	word32 r4_1021 = r3_1018 ^ r4_1016
l000168EC:
	word32 r3_1024 = r4_1021 ^ Mem0[r6_1159 + 20<i32>:word32]
	word32 r4_1084 = Mem0[(r3_1024 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32]
	word32 r3_1086 = Mem0[(r3_1024 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32] ^ Mem0[(r3_1024 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_1024 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32]
	branch 3<32> -u (r7 + 0xFFFFFFE8<32>) >= 0<32> l00016A18_ds_t
l00016A18_ds_t:
	r4_1020 = r3_1086 ^ r4_1084
l00016A18_ds_f:
	word32 r4_1089 = r3_1086 ^ r4_1084
l00016A1C:
	word32 r3_1091 = r4_1089 ^ Mem0[r6_1159 + 24<i32>:word32]
	r4_1020 = Mem0[(r3_1091 >>u 14<i32> & 0x3FC<32>) + 0xFFFFCDD0<32>:word32] ^ ((Mem0[(r3_1091 & 0xFF<32>) * 4<32> + 0xFFFFC5D0<32>:word32] ^ Mem0[(r3_1091 >>u 24<i32>) * 4<32> + 0xFFFFD1D0<32>:word32]) ^ Mem0[(r3_1091 >>u 6<i32> & 0x3FC<32>) + 0xFFFFC9D0<32>:word32])
l00016B40:
	r6_1159 = r6_1159 + ((r5_676 & 0xFFFFFFFC<32>) + 4<32>)
	r7 = r7 & 3<32>
l00016B50:
	branch Test(EQ,r7) l00016B54_ds_t
l00016B54_ds_t:
l00016B54_ds_f:
	word32 r5_1166 = r4_1020 * 2<32>
l00016B58:
	word32 r4_1205 = Mem0[(CONVERT(Mem0[r6_1159:byte], byte, word32) ^ r4_1020 >>u 24<i32>) * 4<32> + 0xFFFFC5D0<32>:word32]
	branch Test(EQ,r7 + 0xFFFFFFFF<32>) l00016C00_ds_t
l00016C00_ds_t:
	r4_1020 = r5_1166 * 0x80<32> ^ r4_1205
l00016C00_ds_f:
	word32 r4_1211 = r5_1166 * 0x80<32> ^ r4_1205
l00016C04:
	word32 r3_1248 = Mem0[(CONVERT(Mem0[r6_1159 + 1<i32>:byte], byte, word32) ^ r4_1211 >>u 24<i32>) * 4<32> + 0xFFFFC5D0<32>:word32]
	branch Test(EQ,r7 ^ 2<32>) l00016CB0_ds_t
l00016CB0_ds_t:
	r4_1020 = r4_1211 * 0x100<32> ^ r3_1248
l00016CB0_ds_f:
	word32 r4_1254 = r4_1211 * 0x100<32> ^ r3_1248
l00016CB4:
	r4_1020 = Mem0[(r4_1254 >>u 24<i32> ^ CONVERT(Mem0[r6_1159 + 2<i32>:byte], byte, word32)) * 4<32> + 0xFFFFC5D0<32>:word32] ^ r4_1254 * 0x100<32>
l00015884:
	word32 r3_1297 = ~r4_1020
	word32 r7_1338 = __rcr<word32,int32>(r3_1297, 1<i32>, cond(r3_1297 >>u 8<i32>))
	word32 r7_1340 = __rcr<word32,int32>(r7_1338, 1<i32>, cond(r7_1338))
	word32 r7_1342 = __rcr<word32,int32>(r7_1340, 1<i32>, cond(r7_1340))
	word32 r7_1344 = __rcr<word32,int32>(r7_1342, 1<i32>, cond(r7_1342))
	word32 r7_1346 = __rcr<word32,int32>(r7_1344, 1<i32>, cond(r7_1344))
	word32 r7_1348 = __rcr<word32,int32>(r7_1346, 1<i32>, cond(r7_1346))
	word32 r7_1350 = __rcr<word32,int32>(r7_1348, 1<i32>, cond(r7_1348))
	word32 r7_1352 = __rcr<word32,int32>(r7_1350, 1<i32>, cond(r7_1350))
	return (r3_1297 >>u 24<i32>) + (__rcr<word32,int32>(r7_1352, 1<i32>, cond(r7_1352)) & 0xFF000000<32>) + (r3_1297 >>u 8<i32> & 0xFFFFFF00<32>) + (r3_1297 * 0x100<32> & 0xFF0000<32>)
fn000156B4_exit:


void fn00016D60(word32 r5, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: C r10 r11 r12 r3 r4 r5 r7 r8 r9
// Preserved: r1 r6
fn00016D60_entry:
	ptr32 fp
l00016D60:
	branch Test(LE,r7) l00017004
l00017004:
	return
l00016D64:
	word32 r4_13 = fp + 0xFFFFFF04<32>
	word32 r3_11 = 1<32>
l00016D80:
	Mem14[r4_13:word32] = r3_11
	r4_13 = r4_13 + 4<32>
	word32 r12_17 = fp + 0xFFFFFF80<32> ^ r4_13
	branch Test(NE,r12_17) l00016D90_ds_t
l00016D90_ds_t:
	r3_11 = r3_11 * 2<32>
l00016D90_ds_f:
l00016D94:
	word32 r3_22 = fp + 0xFFFFFEFC<32> + r12_17
l00016D98:
	word32 r10_100
	word32 r3_44
	word32 r9_26
	word32 r3_25 = Mem24[r3_22 + 4<i32>:word32]
	branch Test(EQ,r3_25) l00016DA0_ds_t
l00016DA0_ds_t:
	r9_26 = r3_25
l00016DA0_ds_f:
l00016DA4:
	word32 r9_28 = 0<32>
	word32 r4_30 = fp + 0xFFFFFF00<32>
l00016DAC:
	branch Test(EQ,r3_25 & 1<32>) l00016F38
l00016F38:
	r3_25 = r3_25 >>u 1<i32>
	branch Test(NE,r3_25) l00016F40_ds_t
l00016F40_ds_t:
	r4_30 = r4_30 + 4<32>
l00016F40_ds_f:
l00016F44:
	Mem41[r12_17 + (fp + 0xFFFFFF80<32>):word32] = r9_28
	r12_17 = r12_17 + 4<32>
	r10_100 = r12_17 ^ 0x80<32>
	branch Test(NE,r12_17 ^ 0x80<32>) l00016D94
l00016F54:
	r3_44 = Mem41[(r12_17 ^ 0x80<32>) + (fp + 0xFFFFFF80<32>):word32]
l00016DB4:
	word32 r8_46 = Mem24[r4_30:word32]
	r3_25 = r3_25 >>u 1<i32>
	r4_30 = r4_30 + 4<32>
	branch Test(NE,r3_25) l00016DC4_ds_t
l00016DC4_ds_t:
	r9_28 = r9_28 ^ r8_46
l00016DC4_ds_f:
	r9_26 = r9_28 ^ r8_46
l00016DC8:
	Mem57[r12_17 + (fp + 0xFFFFFF80<32>):word32] = r9_26
	r12_17 = r12_17 + 4<32>
	r10_100 = r12_17 ^ 0x80<32>
	branch Test(NE,r12_17 ^ 0x80<32>) l00016DD8_ds_t
l00016DD8_ds_t:
	r3_22 = fp + 0xFFFFFEFC<32> + r12_17
l00016DD8_ds_f:
l00016DDC:
	r3_44 = Mem66[r10_100 + (fp + 0xFFFFFF80<32>):word32]
l00016DE0:
	word32 r10_106
	word32 r9_103
	word32 r5_161 = r5
	word32 r7_146 = r7
	branch Test(EQ,r3_44) l00016DE4_ds_t
l00016DE4_ds_t:
	r9_103 = r3_44
l00016DE4_ds_f:
l00016DE8:
	word32 r4_72 = fp + 0xFFFFFF80<32>
	word32 r9_73 = 0<32>
l00016DF0:
	branch Test(EQ,r3_44 & 1<32>) l00016F5C
l00016F5C:
	r3_44 = r3_44 >>u 1<i32>
	branch Test(NE,r3_44) l00016F64_ds_t
l00016F64_ds_t:
	r4_72 = r4_72 + 4<32>
l00016F64_ds_f:
l00016F68:
	Mem86[fp + 0xFFFFFEFC<32> + r10_100 + 4<i32>:word32] = r9_73
	r10_100 = r10_100 + 4<32>
	branch Test(NE,r10_100 ^ 0x80<32>) l00016DDC
l00016F7C:
	r10_106 = 0<32>
l00016DF8:
	word32 r8_90 = Mem318[r4_72:word32]
	r3_44 = r3_44 >>u 1<i32>
	r4_72 = r4_72 + 4<32>
	branch Test(NE,r3_44) l00016E08_ds_t
l00016E08_ds_t:
	r9_73 = r9_73 ^ r8_90
l00016E08_ds_f:
	r9_103 = r9_73 ^ r8_90
l00016E0C:
	Mem104[fp + 0xFFFFFEFC<32> + r10_100 + 4<i32>:word32] = r9_103
	r10_100 = r10_100 + 4<32>
	branch Test(NE,r10_100 ^ 0x80<32>) l00016DDC
l00016E20:
	r10_106 = 0<32>
l00016E24:
	word32 r4_130
	word32 r9_112
	word32 r3_111 = Mem110[fp + 0xFFFFFEFC<32> + r10_401 + 4<i32>:word32]
	branch Test(EQ,r3_111) l00016E30_ds_t
l00016E30_ds_t:
	r9_112 = r3_111
l00016E30_ds_f:
l00016E34:
	word32 r9_114 = 0<32>
	word32 r4_115 = fp + 0xFFFFFF00<32>
l00016E3C:
	branch Test(EQ,r3_111 & 1<32>) l00016EEC
l00016EEC:
	r3_111 = r3_111 >>u 1<i32>
	branch Test(NE,r3_111) l00016EF4_ds_t
l00016EF4_ds_t:
	r4_115 = r4_115 + 4<32>
l00016EF4_ds_f:
l00016EF8:
	Mem126[r10_401 + (fp + 0xFFFFFF80<32>):word32] = r9_114
	r10_106 = r10_401 + 4<32>
	r10_402 = r10_106
	branch Test(NE,r10_106 ^ 0x80<32>) l00016E24
l00016F08:
	r4_130 = r7_146 & 1<32>
l00016E44:
	word32 r8_132 = Mem110[r4_115:word32]
	r3_111 = r3_111 >>u 1<i32>
	r4_115 = r4_115 + 4<32>
	branch Test(NE,r3_111) l00016E54_ds_t
l00016E54_ds_t:
	r9_114 = r9_114 ^ r8_132
l00016E54_ds_f:
	r9_112 = r9_114 ^ r8_132
l00016E58:
	Mem142[r10_401 + (fp + 0xFFFFFF80<32>):word32] = r9_112
	r10_106 = r10_401 + 4<32>
	r10_401 = r10_106
	branch Test(NE,r10_106 ^ 0x80<32>) l00016E24
l00016E68:
	r4_130 = r7_146 & 1<32>
l00016E6C:
	word32 r3_183 = r10_401 + 4<32> ^ 0x80<32>
	branch Test(NE,r4_130) l00016F84
l00016F84:
	branch Test(EQ,r5_161) l00016F88_ds_t
l00016F88_ds_t:
l00016F88_ds_f:
	word32 r4_175 = fp + 0xFFFFFF80<32>
l00016F8C:
	branch Test(EQ,r5_161 & 1<32>) l00016FB0
l00016FB0:
	r5_161 = r5_161 >>u 1<i32>
	branch Test(NE,r5_161) l00016FB8_ds_t
l00016FB8_ds_t:
	r4_175 = r4_175 + 4<32>
l00016FB8_ds_f:
l00016FBC:
	r5_161 = r3_183
l00016F94:
	word32 r8_186 = Mem330[r4_175:word32]
	r5_161 = r5_161 >>u 1<i32>
	r4_175 = r4_175 + 4<32>
	branch Test(NE,r5_161) l00016FA4_ds_t
l00016FA4_ds_t:
	r3_183 = r3_183 ^ r8_186
l00016FA4_ds_f:
	word32 r3_191 = r3_183 ^ r8_186
l00016FA8:
	r5_161 = r3_191
l00016E70:
	branch Test(EQ,r7_146 >> 1<i32>) l00016E78_ds_t
l00016E78_ds_t:
l00016E78_ds_f:
l00016E7C:
	word32 r10_218 = 0<32>
l00016E80:
	word32 r9_223
	word32 r3_222 = Mem221[r10_403 + (fp + 0xFFFFFF80<32>):word32]
	branch Test(EQ,r3_222) l00016E88_ds_t
l00016E88_ds_t:
	r9_223 = r3_222
l00016E88_ds_f:
l00016E8C:
	word32 r4_225 = fp + 0xFFFFFF80<32>
	word32 r9_226 = 0<32>
l00016E94:
	branch Test(EQ,r3_222 & 1<32>) l00016F10
l00016F10:
	r3_222 = r3_222 >>u 1<i32>
	branch Test(NE,r3_222) l00016F18_ds_t
l00016F18_ds_t:
	r4_225 = r4_225 + 4<32>
l00016F18_ds_f:
l00016F1C:
	Mem239[fp + 0xFFFFFEFC<32> + r10_403 + 4<i32>:word32] = r9_226
	r10_218 = r10_403 + 4<32>
	r10_404 = r10_218
	branch Test(NE,r10_218 ^ 0x80<32>) l00016E80
l00016F30:
l00016E9C:
	word32 r8_244 = Mem221[r4_225:word32]
	r3_222 = r3_222 >>u 1<i32>
	r4_225 = r4_225 + 4<32>
	branch Test(NE,r3_222) l00016EAC_ds_t
l00016EAC_ds_t:
	r9_226 = r9_226 ^ r8_244
l00016EAC_ds_f:
	r9_223 = r9_226 ^ r8_244
l00016EB0:
	Mem256[fp + 0xFFFFFEFC<32> + r10_403 + 4<i32>:word32] = r9_223
	r10_218 = r10_403 + 4<32>
	r10_403 = r10_218
	branch Test(NE,r10_218 ^ 0x80<32>) l00016E80
l00016EC4:
l00016EC8:
	word32 r3_275 = r10_403 + 4<32> ^ 0x80<32>
	branch Test(NE,r7_146 >> 1<i32> & 1<32>) l00016FC4
l00016FC4:
	branch Test(EQ,r5_161) l00016ECC
l00016FC8:
	word32 r4_267 = fp + 0xFFFFFF00<32>
l00016FCC:
	branch Test(EQ,r5_161 & 1<32>) l00016FF0
l00016FF0:
	r5_161 = r5_161 >>u 1<i32>
	branch Test(NE,r5_161) l00016FF8_ds_t
l00016FF8_ds_t:
	r4_267 = r4_267 + 4<32>
l00016FF8_ds_f:
l00016FFC:
	r5_161 = r3_275
l00016FD4:
	word32 r8_278 = Mem322[r4_267:word32]
	r5_161 = r5_161 >>u 1<i32>
	r4_267 = r4_267 + 4<32>
	branch Test(NE,r5_161) l00016FE4_ds_t
l00016FE4_ds_t:
	r3_275 = r3_275 ^ r8_278
l00016FE4_ds_f:
	word32 r3_283 = r3_275 ^ r8_278
l00016FE8:
	r5_161 = r3_283
l00016ECC:
	word32 r3_291 = r7_146 >> 1<i32>
	branch Test(NE,r3_291 >> 1<i32>) l00016EDC_ds_t
l00016EDC_ds_t:
	r7_146 = r3_291 >> 1<i32>
l00016EDC_ds_f:
l00016EE0:
l00016EE4:
	return
fn00016D60_exit:


word32 fn00017044(word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00005B0C
//      fn00005F20
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3
// Trashed: r10 r11 r12 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: C r1 r15
fn00017044_entry:
l00017044:
	branch Test(EQ,r6) l00017064
l00017064:
	return r6
l00017048:
	return fn000156B4(r5, r6, r7)
fn00017044_exit:


word32 fn00017F30(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012A34
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: C r3 r4 r5 r6 r7
// Preserved: r1
fn00017F30_entry:
l00017F30:
	word32 r3_16 = 0<32>
	branch Test(EQ,r5) l00017F80
l00017F38:
	branch Test(EQ,r6) l00017F80
l00017F80:
	return 0<32>
l00017F3C:
	word32 r4_27
	branch Test(GE,r5) l00017F40_ds_t
l00017F40_ds_t:
	r4_27 = r5 ^ r6
l00017F40_ds_f:
	r4_27 = r5 ^ r6
l00017F44:
	r5 = -r5
l00017F48:
	branch Test(GE,r6) l00017F50
l00017F4C:
	r6 = -r6
l00017F50:
l00017F58:
	r6 = r6 >>u 1<i32>
	branch r6 == 0<32> l00017F54
l00017F64:
	branch Test(NE,r6) l00017F68_ds_t
l00017F68_ds_t:
	r3_16 = r3_16 + r5
l00017F54:
	r5 = r5 * 2<32>
l00017F68_ds_f:
	word32 r3_23 = r3_16 + r5
l00017F6C:
	branch Test(LT,r4_27) l00017F78
l00017F78:
	return -r3_23
l00017F70:
	return r3_23
fn00017F30_exit:


void fn00017F88(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r18 r3 r5
// Preserved: r1 r29 r30 r31
fn00017F88_entry:
l00017F88:
	branch Test(EQ,r6) l00018018
l00017F9C:
	branch Test(EQ,r5) l00017FA0_ds_t
l00017FA0_ds_t:
l00018018:
l00017FA0_ds_f:
	word32 r30_14 = 0<32>
l00017FA4:
	word32 r29_15 = 0x1F<32>
	branch Test(EQ,r6 - r5) l00017FB0_ds_t
l00017FB0_ds_t:
l00017FB0_ds_f:
l00017FB4:
	branch Test(GE,r5 ^ r6) l00017FBC_ds_t
l00017FBC_ds_t:
l00017FC8:
	branch Test(LT,r5 - r6) l0001801C
l00017FBC_ds_f:
l00017FC0:
	branch Test(LT,r6) l0001801C
l00017FC4:
l00017FD0:
	branch Test(GT,r6) l00017FDC
l00017FDC:
	branch Test(LT,r5) l00017FEC
l00017FE0:
	r5 = r5 * 2<32>
	branch Test(GT,r5) l00017FE8_ds_t
l00017FE8_ds_t:
	r29_15 = r29_15 + 0xFFFFFFFF<32>
l00017FE8_ds_f:
	r29_15 = r29_15 + 0<32>
l00017FEC:
	r5 = r5 * 2<32>
	r30_14 = r30_14 * 2<32> + CONVERT(r5 <u 0<32>, bool, word32)
	word32 r31_39 = r30_14 - r6
	branch Test(LT,r31_39) l00018004
l00017FFC:
	r30_14 = r31_39
l00018004:
	r29_15 = r29_15 + 0xFFFFFFFF<32>
	branch Test(EQ,r29_15) l00018014
l00018014:
l0001800C:
l00017FD4:
l0001801C:
	return
fn00017F88_exit:


word32 fn00018030(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00014C9C
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: C r18 r3 r5
// Preserved: r1 r29 r30 r31 r6
fn00018030_entry:
l00018030:
	word32 r3_112
	branch Test(EQ,r6) l000180D4
l00018044:
	branch Test(EQ,r5) l00018048_ds_t
l00018048_ds_t:
l000180D4:
	r3_112 = 0<32>
l00018048_ds_f:
	r3_112 = 0<32>
l0001804C:
	word32 r29_16 = 0x1F<32>
	branch Test(EQ,r6 - r5) l000180D8
l0001805C:
	branch Test(GE,r5 ^ r6) l00018064_ds_t
l00018064_ds_t:
	r3_112 = r5
l00018070:
	branch Test(GT,r6 - r5) l000180D8
l00018064_ds_f:
	r3_112 = r5
l00018068:
	branch Test(LT,r6) l000180D8
l0001806C:
l00018078:
	branch Test(GT,r6) l0001807C_ds_t
l0001807C_ds_t:
	r3_112 = 0<32>
l00018098:
	branch Test(LT,r5) l000180A8
l0001809C:
	r5 = r5 * 2<32>
	branch Test(GE,r5) l000180A4_ds_t
l000180A4_ds_t:
	r29_16 = r29_16 + 0xFFFFFFFF<32>
l000180A4_ds_f:
	r29_16 = r29_16 + 0<32>
l000180A8:
	r5 = r5 * 2<32>
	r3_112 = r3_112 * 2<32> + CONVERT(r5 <u 0<32>, bool, word32)
	word32 r31_39 = r3_112 - r6
	branch Test(LT,r31_39) l000180C0
l000180B8:
	r3_112 = r31_39
l000180C0:
	r29_16 = r29_16 + 0xFFFFFFFF<32>
	branch Test(EQ,r29_16) l000180D0
l000180D0:
l000180C8:
l0001807C_ds_f:
l00018080:
	r3_112 = r5 - r6
l000180D8:
	return r3_112
fn00018030_exit:


void fn000180F8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1 r19
// Preserved:
fn000180F8_entry:
l000180F8:
	return
fn000180F8_exit:


void fn00018150()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000002CC
//      fn000003C4
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00018150_entry:
l00018150:
	return
fn00018150_exit:


void fn000181D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000248
//      fn000002CC
//      fn00000770
//      fn00001A68
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn000181D0_entry:
l000181D0:
	return
fn000181D0_exit:


void fn0001831C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0001831C_entry:
l0001831C:
	return
fn0001831C_exit:


void fn00018670()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00018670_entry:
l00018670:
	return
fn00018670_exit:


void fn000187F4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1
fn000187F4_entry:
l000187F4:
	return
fn000187F4_exit:


void fn0001881C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1
fn0001881C_entry:
l0001881C:
	return
fn0001881C_exit:


void fn000188F0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000770
//      fn00000A64
//      fn00001A68
//      fn00001E88
//      fn00003894
//      fn00003990
//      fn00003A60
//      fn00005538
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn000188F0_entry:
l000188F0:
	return
fn000188F0_exit:


void fn00018918()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001A68
//      fn00001E88
//      fn00003964
//      fn00003990
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00018918_entry:
l00018918:
	return
fn00018918_exit:


void fn00018C34()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001E88
//      fn000023C8
//      fn0000371C
//      fn00003EC8
//      fn00005B0C
//      fn00005F20
//      fn00007044
//      fn00007F88
//      fn0001371C
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00018C34_entry:
l00018C34:
	return
fn00018C34_exit:


void fn00018C64()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003C74
//      fn00005B0C
//      fn00008234
//      fn00012A34
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00018C64_entry:
l00018C64:
	return
fn00018C64_exit:


void fn00018C94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000371C
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00018C94_entry:
l00018C94:
	return
fn00018C94_exit:


void fn00018CC4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001A68
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00018CC4_entry:
l00018CC4:
	return
fn00018CC4_exit:


void fn00018E00()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1
// Preserved: r19
fn00018E00_entry:
l00018E00:
	return
fn00018E00_exit:


void fn00018EE4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1
// Preserved: r19
fn00018EE4_entry:
l00018EE4:
	return
fn00018EE4_exit:


void fn00018FBC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r1
// Preserved: r19
fn00018FBC_entry:
l00018FBC:
	return
fn00018FBC_exit:


void fn0001908C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003AA4
//      fn00003CA8
//      fn00003EC8
//      fn00005318
//      fn00005538
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0001908C_entry:
l0001908C:
	return
fn0001908C_exit:


void fn000190F0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001BBC
//      fn00001E88
//      fn00002274
//      fn000023C8
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn000190F0_entry:
l000190F0:
	return
fn000190F0_exit:


void fn00019120()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00019120_entry:
l00019120:
	return
fn00019120_exit:


void fn00019150()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003894
//      fn00005538
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn00019150_entry:
l00019150:
	return
fn00019150_exit:


void fn00019980(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut:
// Trashed: r3 r5
// Preserved: r1 r15
fn00019980_entry:
l00019980:
	branch Test(EQ,0<32>) l000199C0
l00019998:
	branch Test(EQ,0<32>) l000199C0
l000199C0:
	return
l000199A4:
	call 0x000199AC<p32> (retsize: 0;)
		uses: r15:0x000199AC<p32>,Stack +0000:r15
	return
fn00019980_exit:


void fn000199C8(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31]
// LiveOut:
// Trashed: C r3 r4 r5 r6
// Preserved: r1 r15
fn000199C8_entry:
l000199C8:
	branch Test(EQ,0<32>) l00019A9C
l00019A74:
	branch Test(EQ,0<32>) l00019A9C
l00019A9C:
	return
l00019A80:
	call 0x00019A88<p32> (retsize: 0;)
		uses: r15:0x00019A88<p32>,Stack +0000:r15
	return
fn000199C8_exit:


void fn00019BC8(word32 r0, word32 dwArg01B4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
// MayUse:  r0:[0..31] Stack +01B4:[0..31]
// LiveOut:
// Trashed: r0 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8
// Preserved: C r1
fn00019BC8_entry:
	word32 dwLoc58
	word32 dwLoc54
l00019BC8:
	fn0002EB28()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	fn0002F128()
	word32 r8_112 = Mem9[0x00008EB8<p32>:word32]
	fn0002F128()
	fn0002F274()
	word32 r3_144 = Mem143[1<32>:word32]
	Mem147[0x00008EA0<p32>:word32] = r0
	Mem148[0x00008E9C<p32>:word32] = 1<32>
	Mem149[0x00008E88<p32>:word32] = r0
	Mem150[0x00008E8C<p32>:word32] = r0
	Mem151[0x00008E90<p32>:word32] = r0
	branch true l00019F10_ds_t
l00019F10_ds_t:
	Mem153[r3_144 + 104<i32>:word32] = r0
l0001A1C0:
l00019F10_ds_f:
	Mem155[r3_144 + 104<i32>:word32] = r0
l00019F14:
	word32 r25_156 = 0<32>
	word32 r21_158 = 0x38<32>
	word32 r22_159 = 1<32>
	word32 r23_160 = 1<32>
	word32 r26_161 = 0<32>
	word32 r30_162 = 1<32>
l00019F3C:
	word32 r19_166 = r30_162 * 2<32>
	word32 r19_170 = Mem169[r19_166 * 2<32> + 0x38<32>:word32]
	word32 r3_174 = CONVERT(Mem169[r19_170:byte], byte, int32)
	branch Test(EQ,r3_174 ^ 0x2D<32>) l00019FBC
l00019FBC:
	word32 r18_302
	word32 r3_328
	word32 r5_190
	word32 r18_1300
	word32 r3_182 = fn0001B134(r3_174 ^ 0x2D<32>, r19_170 + 1<32>, 0x6E0C<32>, 1<32>, out r18_1300)
	branch Test(NE,r3_182) l00019FD8_ds_t
l00019FD8_ds_t:
l0001A374:
	fn0002EB28()
	fn0002F274()
	r5_190 = 1<32>
l00019FD8_ds_f:
l00019FDC:
	word32 r18_1302
	word32 r3_197 = fn0001B134(r3_182, r19_170 + 1<32>, 0x6E44<32>, 1<32>, out r18_1302)
	branch Test(EQ,r3_197) l00019FF4_ds_t
l00019FF4_ds_t:
l0001A030:
	word32 r18_1303
	word32 r3_204 = fn0001B134(r3_197, r19_170 + 1<32>, 0x6E64<32>, 1<32>, out r18_1303)
	branch Test(EQ,r3_204) l0001A044_ds_t
l0001A044_ds_t:
l0001A0B8:
	word32 r18_1310
	word32 r3_211 = fn0001B134(r3_204, r19_170 + 1<32>, 0x6E6C<32>, 1<32>, out r18_1310)
	branch Test(NE,r3_211) l0001A0CC_ds_t
l0001A0CC_ds_t:
l0001A0CC_ds_f:
l0001A0D0:
	word32 r18_1311
	word32 r3_219 = fn0001B134(r3_211, r19_170 + 1<32>, 0x6EDC<32>, 1<32>, out r18_1311)
	branch Test(EQ,r3_219) l0001A0E4_ds_t
l0001A0E4_ds_t:
l0001A194:
	word32 r18_1312
	word32 r3_226 = fn0001B134(r3_219, r19_170 + 1<32>, 0x6EFC<32>, 1<32>, out r18_1312)
	branch Test(EQ,r3_226) l0001A1A8_ds_t
l0001A1A8_ds_t:
l0001A1F8:
	word32 r18_1314
	branch Test(NE,fn0001B134(r3_226, r19_170 + 1<32>, 0x6F08<32>, 1<32>, out r18_1314)) l0001A20C_ds_t
l0001A20C_ds_t:
l0001A20C_ds_f:
l0001A210:
	word32 r18_1315
	word32 r3_242 = fn0001B134(1<32>, r19_170 + 1<32>, 0x6F14<32>, 3<32>, out r18_1315)
	branch Test(EQ,r3_242) l0001A228_ds_t
l0001A228_ds_t:
l0001A2F8:
	word32 r18_1316
	word32 r3_249 = fn0001B134(r3_242, r19_170 + 1<32>, 0x6F28<32>, 1<32>, out r18_1316)
	branch Test(EQ,r3_249) l0001A30C_ds_t
l0001A30C_ds_t:
l0001A31C:
	word32 r18_1318
	branch Test(NE,fn0001B134(r3_249, r19_170 + 1<32>, 0x6F34<32>, 1<32>, out r18_1318)) l0001A330_ds_t
l0001A330_ds_t:
l0001A330_ds_f:
l0001A334:
	word32 r18_1319
	r3_182 = fn0001B134(1<32>, r19_170 + 1<32>, 0x6F40<32>, 4<32>, out r18_1319)
	branch Test(EQ,r3_182) l0001A34C_ds_t
l0001A34C_ds_t:
	r5_190 = r19_170 + 1<32>
l0001A3A4:
	word32 r18_1320
	word32 r3_274 = fn0001B134(r3_182, r5_190, 0x6F48<32>, 1<32>, out r18_1320)
	branch Test(EQ,r3_274) l0001A3B8_ds_t
l0001A3B8_ds_t:
l0001A3D0:
	word32 r18_1306
	word32 r3_282 = fn0001B134(r3_274, r19_170 + 1<32>, 0x6F54<32>, 1<32>, out r18_1306)
	branch Test(EQ,r3_282) l0001A3E4_ds_t
l0001A3E4_ds_t:
l0001A450:
	word32 r18_1307
	word32 r3_289 = fn0001B134(r3_282, r19_170 + 1<32>, 0x6F5C<32>, 2<32>, out r18_1307)
	branch Test(EQ,r3_289) l0001A464_ds_t
l0001A464_ds_t:
l0001A544:
	word32 r18_1308
	word32 r3_296 = fn0001B134(r3_289, r19_170 + 1<32>, 0x6F70<32>, 1<32>, out r18_1308)
	branch Test(EQ,r3_296) l0001A558_ds_t
l0001A558_ds_t:
l0001A57C:
	word32 r3_303 = fn0001B134(r3_296, r19_170 + 1<32>, 0x6F78<32>, 1<32>, out r18_302)
	branch Test(EQ,r3_303) l0001A590_ds_t
l0001A590_ds_t:
l0001A5C0:
	word32 r3_310 = fn0001B134(r3_303, r19_170 + 1<32>, 0x6F84<32>, 6<32>, out r18_302)
	branch Test(EQ,r3_310) l0001A5D4_ds_t
l0001A5D4_ds_t:
l0001A5F0:
	word32 r18_1317
	branch Test(EQ,fn0001B134(r3_310, r19_170 + 1<32>, 0x6F90<32>, 3<32>, out r18_1317)) l0001A604_ds_t
l0001A604_ds_t:
l0001A604_ds_f:
l0001A608:
	Mem323[0xFFFF8E8C<32>:word32] = 1<32>
l0001A5D4_ds_f:
l0001A5D8:
	branch Test(NE,Mem169[0xFFFF8E88<32>:word32] & 0xFFFFFFFB<32>) l0001A5E4_ds_t
l0001A5E4_ds_t:
	r3_328 = 4<32>
l0001A5E4_ds_f:
l0001A5E8:
	Mem330[0xFFFF8E88<32>:word32] = 4<32>
l0001A590_ds_f:
l0001A594:
	word32 r3_332 = Mem169[0xFFFF8E88<32>:word32]
	branch Test(GE,-r3_332 | r3_332) l0001A5A4_ds_t
l0001A5A4_ds_t:
l0001A5A4_ds_f:
l0001A5A8:
	r3_328 = -(r3_332 ^ 3<32>) | r3_332 ^ 3<32>
	branch Test(LT,r3_328) l0001A3C4
l0001A5B4:
	Mem341[0xFFFF8E88<32>:word32] = 3<32>
l0001A558_ds_f:
l0001A55C:
	r30_162 = r30_162 + 1<32>
	branch r30_162 >= 1<32> l0001A568_ds_t
l0001A568_ds_t:
l0001A568_ds_f:
	word32 r19_351 = r19_166 * 2<32> + 0x38<32>
l0001A56C:
	r25_156 = Mem169[r19_351 + 4<i32>:word32]
l0001A464_ds_f:
l0001A468:
	r30_162 = r30_162 + 1<32>
	branch r30_162 >= 1<32> l0001A474_ds_t
l0001A474_ds_t:
l0001A474_ds_f:
	word32 r31_357 = r19_166 * 2<32> + 4<32>
l0001A478:
	word32 r3_363 = fn0001B134(r3_289, Mem169[r19_166 * 2<32> + 0x3C<32>:word32], 0x6F64<32>, 2<32>, out r18_302)
	branch Test(EQ,r3_363) l0001A4BC
l0001A4BC:
	word32 r3_370 = fn0001B134(r3_363, Mem169[r31_357 + 0x38<32>:word32], 0x6F68<32>, 3<32>, out r18_302)
	branch Test(EQ,r3_370) l0001A500
l0001A500:
	branch Test(EQ,fn0001B134(r3_370, Mem169[r31_357 + 0x38<32>:word32], 0x6F6C<32>, 3<32>, out r18_302)) l0001A1B8
l0001A518:
	word32 r3_379 = Mem169[0xFFFF8E88<32>:word32]
	branch Test(GE,-r3_379 | r3_379) l0001A528_ds_t
l0001A528_ds_t:
l0001A528_ds_f:
l0001A52C:
	r3_328 = -(r3_379 ^ 7<32>) | r3_379 ^ 7<32>
	branch Test(LT,r3_328) l0001A3C4
l0001A538:
	Mem388[0xFFFF8E88<32>:word32] = 7<32>
l0001A4D4:
	word32 r3_389 = Mem169[0xFFFF8E88<32>:word32]
	branch Test(GE,-r3_389 | r3_389) l0001A4E4_ds_t
l0001A4E4_ds_t:
l0001A4E4_ds_f:
l0001A4E8:
	r3_328 = -(r3_389 ^ 6<32>) | r3_389 ^ 6<32>
	branch Test(LT,r3_328) l0001A3C4
l0001A4F4:
	Mem398[0xFFFF8E88<32>:word32] = 6<32>
l0001A490:
	word32 r3_399 = Mem169[0xFFFF8E88<32>:word32]
	branch Test(GE,-r3_399 | r3_399) l0001A4A0_ds_t
l0001A4A0_ds_t:
l0001A4A0_ds_f:
l0001A4A4:
	r3_328 = -(r3_399 ^ 5<32>) | r3_399 ^ 5<32>
	branch Test(LT,r3_328) l0001A3C4
l0001A4B0:
	Mem408[0xFFFF8E88<32>:word32] = 5<32>
l0001A3E4_ds_f:
l0001A3E8:
	r30_162 = r30_162 + 1<32>
	branch r30_162 >= 1<32> l0001A3F4_ds_t
l0001A3F4_ds_t:
l0001A3F4_ds_f:
l0001A3F8:
	fn0002EE08()
	branch Test(LE,r3_282) l0001A1B8
l0001A41C:
	branch 0xFFFFFFFF<32> -u dwLoc58 < 0<32> l0001A430_ds_t
l0001A430_ds_t:
l0001A430_ds_f:
l0001A434:
	branch Test(NE,0x1A<32>) l0001A574
l0001A574:
	Mem439[0xF9<32>:word32] = dwLoc58
l0001A444:
	Mem440[0xF5<32>:word32] = dwLoc58
	Mem441[0xF9<32>:word32] = 0x1A<32>
l0001A3B8_ds_f:
l0001A3BC:
	r26_161 = 1<32>
l0001A34C_ds_f:
l0001A350:
	word32 r30_445 = r30_162 + 1<32>
	branch r30_445 >= 1<32> l0001A35C_ds_t
l0001A35C_ds_t:
l0001A35C_ds_f:
	word32 r19_448 = r19_166 * 2<32> + 0x38<32>
l0001A360:
	Mem450[0x00008EA0<p32>:word32] = Mem169[r19_448 + 4<i32>:word32]
	r30_162 = r30_445 + 1<32>
l0001A30C_ds_f:
l0001A310:
l0001A314:
	Mem456[0xE5<32>:word32] = 1<32>
l0001A228_ds_f:
l0001A22C:
	r30_162 = r30_162 + 1<32>
	branch r30_162 >= 1<32> l0001A238_ds_t
l0001A238_ds_t:
l0001A238_ds_f:
l0001A23C:
	fn0002EE08()
	branch Test(LE,r3_242) l0001A260_ds_t
l0001A260_ds_t:
l0001A260_ds_f:
l0001A264:
	word32 r5_478
	branch Test(NE,0x15<32>) l0001A274_ds_t
l0001A274_ds_t:
	r5_478 = dwLoc54
l0001A274_ds_f:
l0001A278:
	r5_478 = dwLoc54 * 0x3E8<32>
	dwLoc54 = dwLoc54 * 0x3E8<32>
l0001A2B4:
	Mem513[Mem508[5<32>:word32] + 44<i32>:word32] = r5_478 * 0x3E8<32>
l0001A1A8_ds_f:
l0001A1AC:
l0001A1B0:
	Mem518[0xFFFF8E90<32>:word32] = 1<32>
l0001A0E4_ds_f:
l0001A0E8:
	r30_162 = r30_162 + 1<32>
	branch r30_162 >= 1<32> l0001A0F4_ds_t
l0001A0F4_ds_t:
l0001A0F4_ds_f:
	word32 r31_523 = r19_166 * 2<32> + 4<32>
l0001A0F8:
	word32 r18_1313
	branch Test(EQ,fn0001B134(r3_219, Mem169[r19_166 * 2<32> + 0x3C<32>:word32], 0x6EE4<32>, 1<32>, out r18_1313)) l0001A110_ds_t
l0001A110_ds_t:
l0001A1C8:
	branch Test(EQ,fn0001B134(1<32>, Mem169[r31_523 + 0x38<32>:word32], 0x6EF0<32>, 1<32>, out r18_302)) l0001A1B8
l0001A1E0:
	branch Test(NE,Mem169[0xFFFF8E88<32>:word32] & 0xFFFFFFFD<32>) l0001A1EC_ds_t
l0001A1EC_ds_t:
	r3_328 = 2<32>
l0001A1EC_ds_f:
l0001A1F0:
	Mem543[0xFFFF8E88<32>:word32] = 2<32>
l0001A110_ds_f:
	r3_328 = 1<32>
l0001A114:
	word32 r5_545 = Mem169[0xFFFF8E88<32>:word32]
	r18_302 = cond(1<32> -u r5_545)
	branch 1<32> -u r5_545 < 0<32> l0001A3C4
l0001A3C4:
	fn0002FFD0(r3_328, r18_302, dwLoc54, dwArg01B4)
l0001A120:
	Mem552[0xFFFF8E88<32>:word32] = 1<32>
l0001A044_ds_f:
l0001A048:
	word32 r5_564
	branch Test(EQ,Mem169[0x00008E84<p32>:word32]) l0001A128
l0001A128:
	fn0002EB28()
	Mem562[0x00008E84<p32>:word32] = 1<32>
	r5_564 = Mem562[1<32>:word32]
l0001A054:
	r5_564 = Mem169[1<32>:word32]
l0001A058:
	Mem570[r5_564 + 104<i32>:word32] = Mem567[r5_564 + 104<i32>:word32] + 1<32>
l0001A064:
	r30_162 = r30_162 + 1<32>
l00019FF4_ds_f:
l00019FF8:
	word32 r30_583 = r30_162 + 1<32>
	branch r30_583 >= 1<32> l0001A004_ds_t
l0001A004_ds_t:
l0001A004_ds_f:
l0001A008:
	word32 r18_1304
	word32 r3_592 = fn0001B134(r3_197, Mem169[r19_166 * 2<32> + 0x3C<32>:word32], 0x6E4C<32>, 1<32>, out r18_1304)
	branch Test(EQ,r3_592) l0001A08C
l0001A08C:
	word32 r18_1305
	branch Test(EQ,fn0001B134(r3_592, Mem169[r19_166 * 2<32> + 0x3C<32>:word32], 0x6E54<32>, 1<32>, out r18_1305)) l0001A0A4_ds_t
l0001A0A4_ds_t:
l0001A168:
	word32 r18_1309
	branch Test(EQ,fn0001B134(1<32>, Mem169[r19_166 * 2<32> + 0x3C<32>:word32], 0x6E60<32>, 1<32>, out r18_1309)) l0001A180_ds_t
l0001A180_ds_t:
l0001A180_ds_f:
l0001A184:
	Mem611[0x00008E9C<p32>:word32] = 2<32>
	r30_162 = r30_583 + 1<32>
l0001A0A4_ds_f:
l0001A0A8:
	Mem614[0x00008E9C<p32>:word32] = 1<32>
	r30_162 = r30_583 + 1<32>
l0001A020:
	Mem616[0x00008E9C<p32>:word32] = r3_182
	r30_162 = r30_583 + 1<32>
l0001A068:
	branch r30_162 < 1<32> l00019F3C
l0001A070:
l00019F58:
	branch Test(EQ,r8_112) l00019F5C_ds_t
l00019F5C_ds_t:
l00019F5C_ds_f:
	word32 r3_647 = r30_162
l00019F60:
	branch Test(NE,r26_161) l0001A074
l0001A074:
	r0 = fn0001E93C(r0, 1<32>, 1<32>, 1<32>, out r3_647, out r21_158, out r22_159, out r23_160)
	branch Test(NE,r25_156) l0001A080_ds_t
l0001A080_ds_t:
l0001A080_ds_f:
l0001A084:
l00019F64:
	branch Test(EQ,r25_156) l00019F68_ds_t
l00019F68_ds_t:
l00019F68_ds_f:
l00019F6C:
l00019F70:
	word32 r3_761
	r0 = fn0001AAB0(r0, r3_647, r23_160, r25_156, r21_158, r22_159, out r3_761)
	branch Test(EQ,r3_761) l0001A1B8
l0001A1B8:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg436 = <invalid>
	fn00019BC8(r0, stackArg436)
l00019F7C:
l00019F80:
l00019F84:
	return
fn00019BC8_exit:


void fn0001A610(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001A700
//      fn0001A7E4
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: C r4 r5 r6 r7
// Preserved: r1 r15 r19
fn0001A610_entry:
l0001A610:
	fn0002EF80()
	branch Test(EQ,r3 ^ 0x23<32>) l0001A630_ds_t
l0001A630_ds_t:
l0001A6C8:
	fn0002EF80()
	word32 r6_19 = ~r3
	word32 r5_21 = -r6_19
	branch Test(LT,-(r3 ^ 0xA<32>) | r3 ^ 0xA<32>) l0001A6EC_ds_t
l0001A6EC_ds_t:
	word32 r5_23 = r5_21 | r6_19
l0001A640:
	branch Test(EQ,r5_23 >>u 31<i32>) l0001A6C4_ds_t
l0001A6C4_ds_t:
l0001A6C4_ds_f:
l0001A6EC_ds_f:
l0001A6F0:
	return
l0001A630_ds_f:
l0001A634:
	return
fn0001A610_exit:


word32 fn0001A700(word32 r3, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001A7E4
// MayUse:  r3:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3
// Trashed: C r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25
fn0001A700_entry:
l0001A700:
l0001A744:
	fn0001A610(r3)
	r3 = ~r3
	branch Test(NE,r3) l0001A75C_ds_t
l0001A75C_ds_t:
l0001A730:
	fn0002F940()
	branch Test(EQ,r3) l0001A740_ds_t
l0001A740_ds_t:
	word32 r22_38 = r3 + 0xFFFFFFD0<32>
l0001A788:
	branch 9<32> -u (r3 + 0xFFFFFFD0<32>) >= 0<32> l0001A7A8
l0001A7A8:
	fn0001A610(r3)
	word32 r4_53 = r22_38 * 5<32>
	branch Test(NE,~r3) l0001A7C8_ds_t
l0001A7C8_ds_t:
l0001A79C:
	branch 9<32> -u (r3 + 0xFFFFFFD0<32>) < 0<32> l0001A7CC
l0001A7A4:
	r22_38 = r3 + 0xFFFFFFD0<32> + r4_53 * 2<32>
l0001A7C8_ds_f:
l0001A7CC:
	Mem65[r6:word32] = r22_38
	Mem70[r7:word32] = r3
	r3 = 1<32>
l0001A794:
	Mem72[r7:word32] = r3
l0001A7DC:
l0001A740_ds_f:
l0001A75C_ds_f:
l0001A760:
	Mem77[r7:word32] = 0xFFFFFFFF<32>
l0001A764:
l0001A768:
	return r3
fn0001A700_exit:


word32 fn0001A7E4(word32 r3, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001AAB0
// MayUse:  r3:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r3
// Trashed: C r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22
fn0001A7E4_entry:
l0001A7E4:
	branch Test(EQ,fn0001A700(r3, r6, r7)) l0001A808_ds_t
l0001A808_ds_t:
l0001A808_ds_f:
l0001A80C:
	word32 r19_28 = Mem11[r7:word32]
	word32 r3_29 = ~r19_28
	branch Test(NE,r3_29) l0001A834
l0001A834:
	fn0002F940()
	branch Test(NE,r3_29) l0001A844_ds_t
l0001A844_ds_t:
l0001A820:
	fn0001A610(r3_29)
	r19_28 = r3_29
	r3_29 = ~r3_29
	branch Test(EQ,r3_29) l0001A818
l0001A844_ds_f:
l0001A848:
	word32 r3_45 = r19_28 + 0xFFFFFFD0<32>
	branch 9<32> -u r3_45 < 0<32> l0001A858_ds_t
l0001A858_ds_t:
l0001A8B0:
	branch Test(EQ,r19_28 ^ 0x3B<32>) l0001A8B8_ds_t
l0001A8B8_ds_t:
l0001A8B8_ds_f:
	word32 r3_51 = r19_28 ^ 0x3A<32>
l0001A8BC:
	branch Test(NE,r3_51) l0001A874
l0001A8C0:
	Mem53[r7:word32] = r19_28
l0001A858_ds_f:
l0001A85C:
	fn0002EF2C()
	branch Test(EQ,~r3_45) l0001A870_ds_t
l0001A870_ds_t:
l0001A898:
	return 0<32>
l0001A870_ds_f:
l0001A874:
	r19_28 = 0x20<32>
l0001A818:
	r19_28 = 0xFFFFFFFF<32>
l0001A878:
	Mem75[r7:word32] = r19_28
l0001A87C:
	return 1<32>
fn0001A7E4_exit:


word32 fn0001AAB0(word32 r0, word32 r3, word32 r5, word32 r6, word32 r21, word32 r22, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
// MayUse:  r0:[0..31] r21:[0..31] r22:[0..31] r3:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r0 r3
// Trashed: C r0 r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28
fn0001AAB0_entry:
	ptr32 fp
	struct <anonymous> tLoc28
	word32 dwLoc2C
l0001AAB0:
	word32 r3_109
	fn0002F0A0()
	branch Test(EQ,r3) l0001AAFC_ds_t
l0001AAFC_ds_t:
l0001ABE0:
	fn0002EB28()
	r3_109 = r3
l0001AAFC_ds_f:
l0001AB00:
	word32 r24_257 = fp + 0xFFFFF1CC<32>
	word32 r26_314 = 0<32>
	r3_128 = r3
l0001AB0C:
	word32 r3_128
	word32 r3_51 = fn0001A7E4(r3_128, fp + 0xFFFFFFD4<32>, &tLoc28)
	branch Test(EQ,r3_51) l0001AB20_ds_t
l0001AB20_ds_t:
l0001ADB0:
	branch Test(EQ,~Mem58[&tLoc28:word32]) l0001AE1C
l0001AE1C:
	branch Test(EQ,r26_314) l0001AE6C
l0001AE20:
	word32 r19_67 = r26_314 * 9<32>
	word32 r3_72 = Mem58[Mem58[r5 + 4<i32>:word32]:word32]
	word32 r27_83
	word32 r26_91
	word32 r3_93
	word32 r4_95
	word32 r18_97
	call 0x0001AE48<p32> + r3_72 (retsize: 0;)
		uses: r0:r0_96,r15:0x0001AE48<p32>,r18:r18_97,r19:r19_67 * 4<32>,r21:r21_76,r22:r22_77,r23:r3,r24:r24_78,r25:r6,r26:r26_61,r27:r5,r28:0x3F<32>,r3:r3_72,r4:r4_95,r5:r5,r6:1<32>,r7:r19_67 * 4<32>,Stack +0E2C:dwLoc2C,Stack +0E30:tLoc28
		defs: r0:r0_96,r18:r18_97,r26:r26_91,r27:r27_83,r3:r3_93,r4:r4_95
	fn0002F60C()
	Mem103[r27_83 + 216<i32>:word32] = r3_93
	Mem104[r27_83 + 212<i32>:word32] = r26_91
l0001AE6C:
	fn0002F0CC()
	r3_109 = 1<32>
l0001ADBC:
	fn0002EB28()
	fn0002F0CC()
	r3_109 = r3_51
l0001AB20_ds_f:
l0001AB24:
	word32 r19_118 = r26_314 ^ 0x64<32>
	branch Test(EQ,r19_118) l0001AB2C_ds_t
l0001AB2C_ds_t:
l0001ADEC:
	fn0002EB28()
	fn0002F0CC()
	r3_109 = r19_118
l0001AB2C_ds_f:
l0001AB30:
	word32 r4_133
	r3_128 = Mem58[&tLoc28:word32]
	Mem130[r24_257 - 4<i32>:word32] = dwLoc2C
	r22 = r24_257
	branch Test(NE,r3_128 ^ 0x20<32>) l0001AB44_ds_t
l0001AB44_ds_t:
	r21 = 1<32>
l0001AC08:
	r4_133 = r3_128 ^ 0x3A<32>
l0001AB44_ds_f:
	r21 = 1<32>
l0001AB48:
	r21 = r21 + 1<32>
	branch Test(EQ,fn0001A7E4(r3_128, fp + 0xFFFFFFD4<32>, &tLoc28)) l0001AB64_ds_t
l0001AB64_ds_t:
l0001AB64_ds_f:
l0001AB68:
	r3_128 = Mem152[&tLoc28:word32]
	r22 = r22 + 4<32>
	Mem158[r22 - 4<i32>:word32] = dwLoc2C
	branch Test(NE,r3_128 ^ 0x20<32>) l0001AB7C_ds_t
l0001AB7C_ds_t:
	r4_133 = r3_128 ^ 0x3A<32>
l0001AC0C:
	branch Test(EQ,r4_133) l0001AC10_ds_t
l0001AC10_ds_t:
	Mem165[r24_257 - 8<i32>:word32] = r21
l0001AD08:
	branch Test(EQ,fn0001A7E4(r3_128, fp + 0xFFFFFFD4<32>, &tLoc28)) l0001AD1C_ds_t
l0001AD1C_ds_t:
l0001AD1C_ds_f:
l0001AD20:
	branch Test(NE,Mem165[&tLoc28:word32] ^ 0x20<32>) l0001AD2C_ds_t
l0001AD2C_ds_t:
l0001AD2C_ds_f:
l0001AD30:
	Mem192[r24_257 + 12<i32>:word32] = dwLoc2C
	branch Test(EQ,fn0001A7E4(dwLoc2C, fp + 0xFFFFFFD4<32>, &tLoc28)) l0001AD48_ds_t
l0001AD48_ds_t:
l0001AD48_ds_f:
l0001AD4C:
	word32 r3_202 = Mem192[&tLoc28:word32]
	branch Test(NE,r3_202 ^ 0x20<32>) l0001AD58_ds_t
l0001AD58_ds_t:
l0001AD58_ds_f:
l0001AD5C:
	Mem210[r24_257 + 16<i32>:word32] = dwLoc2C
	branch Test(EQ,fn0001A7E4(r3_202 ^ 0x20<32>, fp + 0xFFFFFFD4<32>, &tLoc28)) l0001AD74_ds_t
l0001AD74_ds_t:
l0001AD74_ds_f:
l0001AD78:
	branch Test(NE,Mem210[&tLoc28:word32] ^ 0x20<32>) l0001AD84_ds_t
l0001AD84_ds_t:
l0001AD84_ds_f:
l0001AD88:
	Mem228[r24_257 + 20<i32>:word32] = dwLoc2C
	branch Test(EQ,fn0001A7E4(dwLoc2C, fp + 0xFFFFFFD4<32>, &tLoc28)) l0001ADA0_ds_t
l0001ADA0_ds_t:
l0001ACD4:
l0001ADA0_ds_f:
l0001ADA4:
	r3_128 = Mem228[&tLoc28:word32]
	Mem241[r24_257 + 24<i32>:word32] = dwLoc2C
l0001AC10_ds_f:
	Mem242[r24_257 - 8<i32>:word32] = r21
l0001AC14:
	Mem246[r24_257 + 12<i32>:word32] = r0
	Mem249[r24_257 + 16<i32>:word32] = 0x3F<32>
	Mem250[r24_257 + 20<i32>:word32] = r0
	Mem251[r24_257 + 24<i32>:word32] = r0
l0001AC24:
	word32 r5_253 = r3_128 ^ 0x3B<32>
	branch Test(GE,-r5_253 | r5_253) l0001AC34_ds_t
l0001AC34_ds_t:
	r24_257 = r24_257 + 0x24<32>
l0001AC34_ds_f:
	r24_257 = r24_257 + 0x24<32>
l0001AC38:
	word32 r3_259 = ~r3_128
	r3_128 = -r3_259 | r3_259
	branch Test(NE,r3_128 >>u 31<i32>) l0001ACC8_ds_t
l0001ACC8_ds_t:
l0001ACD8:
	fn0002EB28()
	fn0002F0CC()
	r3_109 = 0<32>
l0001ACC8_ds_f:
l0001ACCC:
	r26_314 = r26_314 + 1<32>
l0001AB7C_ds_f:
l0001AB80:
	branch Test(NE,r21 ^ 4<32>) l0001AB48
l0001AB84:
	fn0002EB28()
	fn0002F0CC()
	r3_109 = r21 ^ 4<32>
l0001ABB0:
	r3Out = r3_109
	return r0
fn0001AAB0_exit:


word32 fn0001B134(word32 r3, word32 r5, word32 r6, word32 r7, ptr32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
// MayUse:  r3:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r18 r3
// Trashed: r18 r3 r5
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25
fn0001B134_entry:
	word32 r18
l0001B134:
	word32 r3_142
	word32 r22_25
	word32 r19_22 = CONVERT(Mem17[r5:byte], byte, int32)
	branch Test(EQ,r19_22) l0001B160_ds_t
l0001B160_ds_t:
l0001B1F4:
	r22_25 = r19_22
l0001B160_ds_f:
l0001B164:
	word32 r21_31 = CONVERT(Mem17[r6:byte], byte, int32)
	branch Test(EQ,r21_31) l0001B170_ds_t
l0001B170_ds_t:
l0001B170_ds_f:
l0001B174:
	r22_25 = 0<32>
l0001B19C:
	fn0002F9E0()
	r22_25 = r22_25 + 1<32>
	branch Test(EQ,r3) l0001B1B0_ds_t
l0001B1B0_ds_t:
l0001B1B0_ds_f:
l0001B1B4:
	fn0002FA08()
	r19_22 = r3
l0001B1C4:
	branch Test(EQ,r19_22 ^ r21_31) l0001B180
l0001B180:
	r19_22 = CONVERT(Mem17[r22_25 + r5:byte], byte, int32)
	branch Test(EQ,r19_22) l0001B1F8
l0001B1F8:
	r18 = cond(r22_25 - r7)
	branch r22_25 < r7 l0001B200_ds_t
l0001B200_ds_t:
l0001B20C:
	r3_142 = 0<32>
l0001B200_ds_f:
l0001B204:
	r3_142 = 1<32>
l0001B18C:
	r21_31 = CONVERT(Mem17[r22_25 + r6:byte], byte, int32)
	branch Test(EQ,r21_31) l0001B198_ds_t
l0001B198_ds_t:
	r3_142 = 0<32>
l0001B198_ds_f:
	r3 = 0<32>
l0001B1CC:
	r3_142 = 0<32>
l0001B1D0:
	r18Out = r18
	return r3_142
fn0001B134_exit:


void fn0001B238(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r3 r4 r6
// Preserved: r1 r12 r5 r7 r8 r9
fn0001B238_entry:
l0001B238:
	word32 r6_6 = Mem0[r5 + 32<i32>:word32]
	word32 r4_7 = Mem0[r5 + 56<i32>:word32]
	Mem8[r5 + 32<i32>:word32] = Mem0[r5 + 28<i32>:word32]
	branch Test(LE,r4_7) l0001B24C_ds_t
l0001B24C_ds_t:
	Mem9[r5 + 28<i32>:word32] = r6_6
l0001B24C_ds_f:
	Mem10[r5 + 28<i32>:word32] = r6_6
l0001B250:
	word32 r7_17 = Mem10[r5 + 64<i32>:word32]
	word32 r4_21 = r7_17 + 0xC<32>
	word32 r3_22 = r7_17 + 8<32>
	word32 r7_23 = r7_17 + (r4_7 * 0x54<32> + 8<32>)
l0001B284:
	word32 r6_28 = Mem25[r3_22:word32]
	r3_22 = r3_22 + 0x54<32>
	Mem30[r3_22 - 84<i32>:word32] = Mem25[r4_21:word32]
	Mem31[r4_21:word32] = r6_28
	branch Test(NE,r3_22 ^ r7_23) l0001B2A0_ds_t
l0001B2A0_ds_t:
	r4_21 = r4_21 + 0x54<32>
l0001B2A0_ds_f:
l0001B2A4:
	word32 r10_38 = r5 + 0x44<32>
l0001B2AC:
	word32 r6_42 = Mem41[r10_38:word32]
	branch Test(EQ,r6_42) l0001B310
l0001B2B4:
	word32 r7_44 = 1<32>
	word32 r9_46 = r6_42 + 0x20<32>
	word32 r8_47 = r6_42 + 4<32>
	branch Test(EQ,9<32>) l0001B2CC_ds_t
l0001B2CC_ds_t:
l0001B2CC_ds_f:
	word32 r6_49 = r6_42 + 0x24<32>
l0001B2D0:
	word32 r4_51 = r8_47
	word32 r3_53 = r9_46
l0001B2D8:
	word32 r5_58 = Mem55[r3_53:word32]
	r3_53 = r3_53 + 4<32>
	Mem60[r3_53 - 4<i32>:word32] = Mem55[r4_51:word32]
	Mem61[r4_51:word32] = r5_58
	branch Test(NE,r3_53 ^ r6_49) l0001B2F4_ds_t
l0001B2F4_ds_t:
	r4_51 = r4_51 + 0x20<32>
l0001B2F4_ds_f:
l0001B2F8:
	r7_44 = r7_44 + 1<32>
	r9_46 = r9_46 + 0x20<32>
	r8_47 = r8_47 + 4<32>
	branch Test(NE,r7_44 ^ 8<32>) l0001B30C_ds_t
l0001B30C_ds_t:
	r6_49 = r6_49 + 0x24<32>
l0001B30C_ds_f:
l0001B310:
	r10_38 = r10_38 + 4<32>
	branch Test(NE,r10_38 ^ r5 + 0x54<32>) l0001B2AC
l0001B31C:
	return
fn0001B238_exit:


word32 fn0001BB58(word32 r21, word32 r31, ptr32 & r19Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001CC8C
//      fn0001CC98
//      fn0001CCBC
//      fn0001CCF0
// MayUse:  r21:[0..31] r31:[0..31]
// LiveOut: r19 r23 r24 r25 r3 r30 r31
// Trashed: r1 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6
// Preserved: r8 r9
fn0001BB58_entry:
	word32 r30
	word32 dwArg58
	word32 dwArg68
	word32 dwArg6C
	word32 dwArg70
	word32 dwArg84
	word32 dwArg88
	word32 r3
l0001BB58:
	branch r31 + 1<32> < r21 l0001BB68_ds_t
l0001BB68_ds_t:
l0001BB68_thunk_fn0001CC8C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg28 = <invalid>
	word32 stackArg32 = <invalid>
	word32 r31_12
	word32 r30_13
	word32 r19_18
	word32 r23_20
	word32 r24_21
	word32 r25_22
	word32 r3_29 = fn0001CC8C(r30 + 0x54<32>, stackArg28, stackArg32, out r19_18, out r23_20, out r24_21, out r25_22, out r30_13, out r31_12)
	r19Out = r19_18
	r23Out = r23_20
	r24Out = r24_21
	r25Out = r25_22
	r30Out = r30_13
	r31Out = r31_12
	return r3_29
l0001BB68_ds_f:
l0001BB6C:
l0001BB70:
	r19Out = dwArg58
	r23Out = dwArg68
	r24Out = dwArg6C
	r25Out = dwArg70
	r30Out = dwArg84
	r31Out = dwArg88
	return r3
fn0001BB58_exit:


void fn0001CC00(word32 r3, word32 r10, word32 r19, word32 r21, word32 r22, word32 r23, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut:
// Trashed: r10 r11 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: C r1
fn0001CC00_entry:
	ptr32 fp
	word32 dwLoc70
	word32 dwLoc6C
	word32 dwLoc8C
	word32 dwLoc34
	word32 dwLoc2C
	word32 dwLoc28
	word32 dwLoc24
	word32 dwLoc20
	word32 dwLoc1C
	word32 dwLoc18
	word32 dwLoc14
	word32 dwLoc10
	word32 dwLoc0C
	word32 dwLoc08
	word32 dwLoc04
	word32 dwLoc5C
	word32 r1_124 = fp
l0001CC00:
	r21 = r21 + 1<32>
l0001CB38:
	branch r21 < r10 l0001CB40_ds_t
l0001CB40_ds_t:
	r27 = r27 + 4<32>
l0001CB40_ds_f:
l0001CB44:
	word32 r3_52
	word32 r29_16 = r29 + r10
	branch r29_16 -u Mem193[r28 + 32<i32>:word32] >= 0<32> l0001CB54_ds_t
l0001CB54_ds_t:
l0001CC24:
	word32 r21_21 = Mem193[dwLoc70 + 56<i32>:word32]
l0001CC2C:
	r30 = r30 + 1<32>
	r22 = r22 + 0x54<32>
	branch r30 < r21_21 l0001CC3C_ds_t
l0001CC3C_ds_t:
	r19 = r19 + 4<32>
l0001CA74:
	word32 r28_35 = Mem193[dwLoc70 + 64<i32>:word32] + r22
	fn0002E908(Mem193[r28_35 + 12<i32>:word32], dwLoc6C)
	branch Test(EQ,Mem193[r28_35 + 32<i32>:word32]) l0001CAA0_ds_t
l0001CAA0_ds_t:
l0001CAA0_ds_f:
l0001CAA4:
	r29_16 = 0<32>
	r3_52 = Mem193[r25 + 4<i32>:word32]
l0001CC3C_ds_f:
l0001CC40:
l0001BB70_in_fn0001CC00:
	return
fn0001CC00_exit:
l0001CB54_ds_f:
l0001CB58:
	r3_52 = Mem193[r25 + 4<i32>:word32]
l0001CAAC:
	word32 r10_184
	word32 r22_182
	word32 r30_181
	word32 r19_177
	word32 r31_176
	word32 r23_170
	word32 r26_169
	word32 r25_167
	word32 r29_165
	word32 r28_164
	word32 r3_163
	word32 r10_150
	word32 r22_148
	word32 r30_147
	word32 r19_143
	word32 r31_142
	word32 r23_136
	word32 r26_135
	word32 r25_133
	word32 r29_131
	word32 r28_130
	word32 r3_129
	word32 r3_78 = Mem193[r3_52 + 32<i32>:word32]
	word32 r1_87
	word32 r21_88
	word32 r10_90
	word32 r27_91
	word32 r3_92
	word32 r28_93
	word32 r29_94
	word32 r25_96
	word32 r23_99
	word32 r31_105
	word32 r19_106
	word32 r11_109
	word32 r30_110
	word32 r22_111
	call 0x0001CAC0<p32> + r3_78 (retsize: 0;)
		uses: r10:r10_90,r11:r11_109,r15:0x0001CAC0<p32>,r19:r19_106,r21:r21_88,r22:r22_111,r23:r23_99,r25:r25_96,r26:r3_92,r27:r27_91,r28:r28_93,r29:r29_94,r3:r3_78,r30:r30_110,r31:r31_105,r4:dwLoc5C,r5:r25_51,r6:Mem193[r19_81 + dwLoc5C:word32],r7:r29_79,r9:r31_74,Stack +0000:dwLoc8C,Stack +001C:dwLoc70,Stack +0020:dwLoc6C,Stack +0030:dwLoc5C,Stack +0058:dwLoc34,Stack +0060:dwLoc2C,Stack +0064:dwLoc28,Stack +0068:dwLoc24,Stack +006C:dwLoc20,Stack +0070:dwLoc1C,Stack +0074:dwLoc18,Stack +0078:dwLoc14,Stack +007C:dwLoc10,Stack +0080:dwLoc0C,Stack +0084:dwLoc08,Stack +0088:dwLoc04
		defs: r1:r1_87,r10:r10_90,r11:r11_109,r19:r19_106,r21:r21_88,r22:r22_111,r23:r23_99,r25:r25_96,r27:r27_91,r28:r28_93,r29:r29_94,r3:r3_92,r30:r30_110,r31:r31_105
	word32 r3_114 = Mem193[r25_96 + 4<i32>:word32]
	word32 r8_116 = Mem193[r28_93 + 12<i32>:word32]
	branch r29_94 -u r23_99 >= 0<32> l0001CAE0_ds_t
l0001CAE0_ds_t:
	word32 r3_118 = Mem193[r3_114 + 32<i32>:word32]
l0001CC08:
	word32 r4_119 = Mem193[r1_87 + 40<i32>:word32]
	word32 r21_125
	word32 r27_128
	word32 r9_141
	word32 r11_146
	call 0x0001CC14<p32> + r3_118 (retsize: 0;)
		uses: r10:r10_150,r11:r11_146,r15:0x0001CC14<p32>,r19:r19_143,r21:r21_125,r22:r22_148,r23:r23_136,r25:r25_133,r26:r26_135,r27:r27_128,r28:r28_130,r29:r29_131,r3:r3_129,r30:r30_147,r31:r31_142,r4:r4_119,r5:r25_96,r6:Mem193[r19_106 + r4_119:word32],r7:r29_94,r9:r9_141
		defs: r1:r1_124,r11:r11_146,r19:r19_143,r21:r21_125,r22:r22_148,r23:r23_136,r25:r25_133,r26:r26_135,r27:r27_128,r28:r28_130,r29:r29_131,r3:r3_129,r30:r30_147,r31:r31_142,r9:r9_141
	r10_150 = Mem193[r28_130 + 12<i32>:word32]
	r10 = r10_150
	r26 = r26_135
	r29 = r29_131
	r23 = r23_136
	r28 = r28_130
	r3 = r3_129
	r30 = r30_147
	r22 = r22_148
	r25 = r25_133
	r31 = r31_142
	r19 = r19_143
l0001CAE0_ds_f:
	word32 r3_151 = Mem193[r3_114 + 32<i32>:word32]
l0001CAE4:
	word32 r20_152 = Mem193[r1_87 + 40<i32>:word32]
	word32 r21_159
	word32 r27_162
	word32 r4_174
	word32 r9_175
	word32 r11_180
	call 0x0001CAF4<p32> + r3_151 (retsize: 0;)
		uses: r10:r10_184,r11:r11_180,r15:0x0001CAF4<p32>,r19:r19_177,r20:r20_152,r21:r21_159,r22:r22_182,r23:r23_170,r25:r25_167,r26:r26_169,r27:r27_162,r28:r28_164,r29:r29_165,r3:r3_163,r30:r30_181,r31:r31_176,r4:r4_174,r5:r25_96,r6:Mem193[r19_106 + r20_152:word32],r7:r23_99 - r29_94 - r8_116,r9:r9_175
		defs: r1:r1_158,r11:r11_180,r19:r19_177,r21:r21_159,r22:r22_182,r23:r23_170,r25:r25_167,r26:r26_169,r27:r27_162,r28:r28_164,r29:r29_165,r3:r3_163,r30:r30_181,r31:r31_176,r4:r4_174,r9:r9_175
	r10_184 = Mem193[r28_164 + 12<i32>:word32]
	r10 = r10_184
	r26 = r26_169
	r29 = r29_165
	r23 = r23_170
	r28 = r28_164
	r3 = r3_163
	r30 = r30_181
	r22 = r22_182
	r25 = r25_167
	r31 = r31_176
	r19 = r19_177
l0001CB00:
	branch Test(LE,r10) l0001CB44
l0001CB04:
	r27 = 0<32>
	r21 = 0<32>
l0001CB0C:
	word32 r6_195 = Mem193[r27 + r26:word32]
	branch r29 -u r23 < 0<32> l0001CB18_ds_t
l0001CB18_ds_t:
	word32 r7_206 = Mem193[r28 + 28<i32>:word32]
l0001CB60:
	word32 r4_211 = (r10 - r21 + 0xFFFFFFFF<32>) * 2<32>
	branch Test(EQ,r7_206) l0001CB78_ds_t
l0001CB78_ds_t:
l0001CB78_ds_f:
	word32 r11_217 = Mem193[r4_211 * 2<32> + r3:word32]
l0001CB7C:
	word32 r9_225 = r6_195
	word32 r8_227 = r11_217 + 0x80<32>
	word32 r11_228 = r11_217 + (r7_206 + 1<32>) * 0x80<32>
l0001CBA8:
	word32 r7_230 = r9_225
	word32 r6_232 = r8_227 + 0xFFFFFF80<32>
l0001CBB0:
	word32 r4_233 = 0<32>
l0001CBB4:
	Mem241[r4_233 + r7_230:word16] = Mem236[r4_233 + r6_232:word16]
	r4_233 = r4_233 + 2<32>
	branch Test(NE,r4_233 ^ 0x10<32>) l0001CBB4
l0001CBC8:
	Mem252[r4_233 + r7_230:word16] = SLICE(-CONVERT(Mem246[r4_233 + r6_232:word16], word16, word32), word16, 0)
	r4_233 = r4_233 + 2<32>
	branch Test(NE,r4_233 ^ 0x20<32>) l0001CBC8
l0001CBE0:
	r6_232 = r6_232 + 0x20<32>
	branch Test(NE,r6_232 ^ r8_227) l0001CBEC_ds_t
l0001CBEC_ds_t:
	r7_230 = r7_230 + 0x20<32>
l0001CBEC_ds_f:
l0001CBF0:
	r8_227 = r8_227 + 0x80<32>
	branch Test(NE,r11_228 ^ r8_227) l0001CBFC_ds_t
l0001CBFC_ds_t:
	r9_225 = r9_225 + 0x80<32>
l0001CBFC_ds_f:
l0001CB18_ds_f:
l0001CB1C:
	Mem279[r1_124 + 84<i32>:word32] = r3
	fn0002CDCC()
	r10 = Mem279[r28 + 12<i32>:word32]
	r3 = Mem279[r1_124 + 84<i32>:word32]
l0001CB34:
	r21 = r21 + 1<32>


void fn0001CC5C(word32 r5, word32 r30, word32 dwArg1C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r30:[0..31] r5:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: C r1 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7
// Preserved:
fn0001CC5C_entry:
l0001CC5C:
	word32 r3_9 = fn0002E960(r5, r30 * 4<32>)
	branch Test(LE,Mem15[dwArg1C + 56<i32>:word32]) l0001CC80_ds_t
l0001CC80_ds_t:
l0001BB6C_in_fn0001CC5C:
	return
l0001CC80_ds_f:
l0001CC84:
l0001CC88_thunk_fn0001CC8C:
	word32 r19_91
	word32 r23_92
	word32 r24_93
	word32 r25_94
	word32 r30_95
	word32 r31_96
	fn0001CC8C(0<32>, dwArg1C, r3_9, out r19_91, out r23_92, out r24_93, out r25_94, out r30_95, out r31_96)
	return
fn0001CC5C_exit:


word32 fn0001CC8C(word32 r30, word32 dwArg1C, word32 dwArg20, ptr32 & r19Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001BB58
//      fn0001CC5C
// MayUse:  r30:[0..31] Stack +001C:[0..31] Stack +0020:[0..31]
// LiveOut: r19 r23 r24 r25 r3 r30 r31
// Trashed: C r15 r19 r20 r22 r23 r3 r30 r4 r5 r6 r7
// Preserved: r1
fn0001CC8C_entry:
	word32 r21
	word32 r31
l0001CC8C:
	word32 r23_8 = Mem0[dwArg1C + 64<i32>:word32] + r30
	fn0002E908(Mem0[r23_8 + 12<i32>:word32], dwArg20)
	branch Test(EQ,Mem0[r23_8 + 32<i32>:word32]) l0001CCB8_ds_t
l0001CCB8_ds_t:
l0001CCB8_thunk_fn0001BB58:
	word32 r23_24
	word32 r30_25
	word32 r19_26
	word32 r24_75
	word32 r25_76
	word32 r31_77
	word32 r3_29 = fn0001BB58(r21, r31, out r19_26, out r23_24, out r24_75, out r25_76, out r30_25, out r31_77)
	r19Out = r19_26
	r23Out = r23_24
	r24Out = <invalid>
	r25Out = <invalid>
	r30Out = r30_25
	r31Out = <invalid>
	return r3_29
l0001CCB8_ds_f:
l0001CCB8_thunk_fn0001CCBC:
	word32 r23_38
	word32 r30_39
	word32 r19_40
	word32 r25_72
	word32 r3_43 = fn0001CCBC(out r19_40, out r23_38, out r25_72, out r30_39)
	r19Out = r19_40
	r23Out = r23_38
	r24Out = <invalid>
	r25Out = <invalid>
	r30Out = r30_39
	r31Out = <invalid>
	return r3_43
fn0001CC8C_exit:


word32 fn0001CC98(word32 r6, word32 r21, word32 r23, word32 r30, word32 r31, ptr32 & r19Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E004
// MayUse:  r21:[0..31] r23:[0..31] r30:[0..31] r31:[0..31] r6:[0..31]
// LiveOut: r19 r23 r24 r25 r3 r30 r31
// Trashed: C r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0001CC98_entry:
	word32 r24
l0001CC98:
	word32 r23_5 = r23 + r30
	fn0002E908(Mem0[r23_5 + 12<i32>:word32], r6)
	branch Test(EQ,Mem0[r23_5 + 32<i32>:word32]) l0001CCB8_ds_t
l0001CCB8_ds_t:
l0001CCB8_thunk_fn0001BB58:
	word32 r19_24
	word32 r23_27
	word32 r24_28
	word32 r25_29
	word32 r30_34
	word32 r31_35
	word32 r3_37 = fn0001BB58(r21, r31, out r19_24, out r23_27, out r24_28, out r25_29, out r30_34, out r31_35)
	r19Out = r19_24
	r23Out = r23_27
	r24Out = r24_28
	r25Out = r25_29
	r30Out = r30_34
	r31Out = r31_35
	return r3_37
l0001CCB8_ds_f:
l0001CCB8_thunk_fn0001CCBC:
	word32 r19_43
	word32 r25_45
	word32 r23_89
	word32 r30_90
	word32 r3_46 = fn0001CCBC(out r19_43, out r23_89, out r25_45, out r30_90)
	r19Out = r19_43
	r23Out = r23_5
	r24Out = r24
	r25Out = r25_45
	r30Out = r30
	r31Out = r31
	return r3_46
fn0001CC98_exit:


word32 fn0001CCBC(ptr32 & r19Out, ptr32 & r23Out, ptr32 & r25Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001BB58
//      fn0001CC98
// MayUse: 
// LiveOut: r19 r23 r25 r3 r30
// Trashed: r19 r21 r25 r3 r4 r8 r9
// Preserved: r1
fn0001CCBC_entry:
	word32 r21
	word32 r31
l0001CCBC_thunk_fn0001BB58:
	word32 r19_8
	word32 r25_12
	word32 r23_22
	word32 r24_23
	word32 r30_24
	word32 r31_25
	word32 r3_7 = fn0001BB58(r21, r31, out r19_8, out r23_22, out r24_23, out r25_12, out r30_24, out r31_25)
	r19Out = r19_8
	r23Out = <invalid>
	r25Out = r25_12
	r30Out = <invalid>
	return r3_7
fn0001CCBC_exit:


word32 fn0001CCC4(word32 r25, ptr32 & r8Out, ptr32 & r21Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001DE80
// MayUse:  r25:[0..31]
// LiveOut: r21 r3 r8
// Trashed: r21 r3 r4 r8 r9
// Preserved: r1
fn0001CCC4_entry:
	word32 r19
l0001CCC4:
l0001CCE4_thunk_fn0001CCE8:
	word32 r3_15 = fn0001CCE8(r25)
	r8Out = r19
	r21Out = 0<32>
	return r3_15
fn0001CCC4_exit:


word32 fn0001CCE8(word32 r25)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001CCBC
//      fn0001CCC4
// MayUse:  r25:[0..31]
// LiveOut: r3
// Trashed: r3 r9
// Preserved: r1
fn0001CCE8_entry:
	word32 r3
	word32 r4
	word32 r21
	word32 r29
l0001CCE8:
	word32 r3_5 = Mem0[r25 + 4<i32>:word32]
l0001CCEC_thunk_fn0001CCF0:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg28 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg48 = <invalid>
	word32 r4_15
	word32 r6_16
	word32 r7_17
	word32 r8_18
	word32 r19_19
	word32 r21_20
	word32 r22_21
	word32 r23_22
	word32 r24_23
	word32 r25_24
	word32 r26_25
	word32 r27_26
	word32 r28_27
	word32 r29_28
	word32 r30_29
	fn0001CCF0(r3, r4, r21, r25, r29, stackArg28, stackArg36, stackArg40, stackArg48, out r4_15, out r6_16, out r7_17, out r8_18, out r19_19, out r21_20, out r22_21, out r23_22, out r24_23, out r25_24, out r26_25, out r27_26, out r28_27, out r29_28, out r30_29)
	return r3_5
fn0001CCE8_exit:


word32 fn0001CCF0(word32 r3, word32 r4, word32 r21, word32 r25, word32 r29, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001BB58
//      fn0001F63C
//      fn0001FCE0
// MayUse:  r21:[0..31] r25:[0..31] r29:[0..31] r3:[0..31] r4:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r4 r6 r7 r8
// Trashed: r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0001CCF0_entry:
l0001CCF0:
	word32 r3_8 = Mem0[r3 + 32<i32>:word32]
	word32 r29_16
	word32 r3_18
	word32 r21_20
	word32 r25_23
	word32 r23_24
	word32 r19_25
	word32 r24_26
	word32 r27_27
	word32 r11_33
	call 0x0001CCFC<p32> + r3_8 (retsize: 0;)
		uses: r15:0x0001CCFC<p32>,r21:r21,r25:r25,r29:r29,r3:r3_8,r4:r4,r5:r25,r6:Mem0[r29 + r4:word32],r7:r21,Stack +001C:dwArg1C,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +0030:dwArg30
		defs: r11:r11_33,r19:r19_25,r21:r21_20,r23:r23_24,r24:r24_26,r25:r25_23,r27:r27_27,r29:r29_16,r3:r3_18
	branch Test(LE,Mem0[r23_24 + 12<i32>:word32]) l0001CE3C
l0001CD08_thunk_fn0001CE14:
	word32 r19_46
	word32 r21_48
	word32 r22_49
	word32 r23_50
	word32 r24_51
	word32 r25_52
	word32 r26_53
	word32 r27_54
	word32 r28_55
	word32 r29_56
	word32 r4_58
	word32 r6_60
	word32 r7_61
	word32 r8_62
	word32 r3_57 = fn0001CE14(r11_33, r19_25, r21_20, r23_24, r24_26, r25_23, r27_27, r29_16, dwArg1C, dwArg24, dwArg28, dwArg30, out r4_58, out r6_60, out r7_61, out r8_62, out r19_46, out r21_48, out r22_49, out r23_50, out r24_51, out r25_52, out r26_53, out r27_54, out r28_55, out r29_56)
	r4Out = r4_58
	r6Out = r6_60
	r7Out = r7_61
	r8Out = r8_62
	r19Out = r19_46
	r21Out = r21_48
	r22Out = r22_49
	r23Out = r23_50
	r24Out = r24_51
	r25Out = r25_52
	r26Out = r26_53
	r27Out = r27_54
	r28Out = r28_55
	r29Out = r29_56
	r30Out = <invalid>
	return r3_57
l0001CD0C:
l0001CD30_thunk_fn0001CE14:
	word32 r19_79
	word32 r21_81
	word32 r22_82
	word32 r23_83
	word32 r24_84
	word32 r25_85
	word32 r26_86
	word32 r27_87
	word32 r28_88
	word32 r29_89
	word32 r4_91
	word32 r6_93
	word32 r7_94
	word32 r8_95
	word32 r3_90 = fn0001CE14(r11_33, r21_20 * 0x80<32>, r21_20, r23_24, r3_18, r25_23, 0<32>, r29_16, dwArg1C, dwArg24, dwArg28, dwArg30, out r4_91, out r6_93, out r7_94, out r8_95, out r19_79, out r21_81, out r22_82, out r23_83, out r24_84, out r25_85, out r26_86, out r27_87, out r28_88, out r29_89)
	r4Out = r4_91
	r6Out = r6_93
	r7Out = r7_94
	r8Out = r8_95
	r19Out = r19_79
	r21Out = r21_81
	r22Out = r22_82
	r23Out = r23_83
	r24Out = r24_84
	r25Out = r25_85
	r26Out = r26_86
	r27Out = r27_87
	r28Out = r28_88
	r29Out = r29_89
	r30Out = <invalid>
	return r3_90
fn0001CCF0_exit:


word32 fn0001CE14(word32 r11, word32 r19, word32 r21, word32 r23, word32 r24, word32 r25, word32 r27, word32 r29, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001CCF0
// MayUse:  r11:[0..31] r19:[0..31] r21:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r27:[0..31] r29:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r4 r6 r7 r8
// Trashed: r10 r11 r12 r15 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0001CE14_entry:
	word32 r31
	r21_190 = r21
l0001CE14:
	word32 r29_65
	word32 r25_62
	word32 r21_58
	word32 r27_55
	word32 r23_49
	word32 r21_190
	word32 r3_146 = Mem4[r23 + 28<i32>:word32]
l0001CE18:
	word32 r28_27
	branch r11 -u r3_146 < 0<32> l0001CE20_ds_t
l0001CE20_ds_t:
	r28_27 = r11
l0001CE20_ds_f:
l0001CE24:
	word32 r4_13 = Mem12[r23 + 12<i32>:word32]
l0001CE28:
	r27 = r27 + 1<32>
	branch r27 < r4_13 l0001CE38_ds_t
l0001CE38_ds_t:
l0001CD34:
	branch Test(EQ,r3_146) l0001CE28
l0001CD38:
	r28_27 = 0<32>
l0001CD48:
	word32 r3_39 = Mem12[Mem12[r25 + 4<i32>:word32] + 32<i32>:word32]
	word32 r11_51
	word32 r28_53
	word32 r19_56
	word32 r24_57
	word32 r20_60
	word32 r26_61
	word32 r10_69
	word32 r22_70
	word32 r12_71
	word32 r3_141
	call 0x0001CD60<p32> + r3_39 (retsize: 0;)
		uses: r10:r10_69,r11:r11_51,r12:r12_71,r15:0x0001CD60<p32>,r19:r19_56,r20:r20_60,r21:r21_58,r22:r22_70,r23:r23_49,r24:r24_57,r25:r25_62,r26:r26_61,r27:r27_55,r29:r29_65,r3:r3_39,r4:dwArg28,r5:r25_33,r6:Mem12[r29_44 + dwArg28:word32],r7:r28_40,r9:0<32>,Stack +001C:dwArg1C,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +0030:dwArg30
		defs: r10:r10_69,r11:r11_51,r12:r12_71,r19:r19_56,r20:r20_60,r21:r21_58,r22:r22_70,r23:r23_49,r24:r24_57,r25:r25_62,r26:r26_61,r27:r27_55,r28:r28_53,r29:r29_65,r3:r3_50
	word32 r8_72 = Mem12[r23_49 + 8<i32>:word32]
	branch Test(LE,r8_72) l0001CD70_ds_t
l0001CD70_ds_t:
	r11 = r8_72 + r28_53
	r23 = r23_49
	r21_190 = r21_58
	r27 = r27_55
	r25 = r25_62
	r29 = r29_65
l0001CD70_ds_f:
	r11 = r8_72 + r28_53
l0001CD74:
	word32 r10_83 = Mem12[r24_57:word32]
	word32 r9_134 = r10_83 + r28_53 * 0x80<32>
	word32 r10_91 = r10_83 + r11 * 0x80<32>
l0001CDB8:
	branch r21_58 -u r22_70 < 0<32> l0001CDC0_ds_t
l0001CDC0_ds_t:
	word32 r7_97 = Mem96[r3_141:word32]
l0001CE58:
	word32 r12_103 = r9_134
	word32 r7_101 = r7_97 + r26_61
	word32 r28_102 = r9_134 + 0x10<32>
l0001CE64:
	word32 r4_104 = r12_103
	word32 r5_106 = r7_101
	word32 r20_107 = r12_103 + 0x80<32>
l0001CE70:
	r4_104 = r4_104 + 0x20<32>
	Mem116[r4_104 - 32<i32>:word16] = Mem109[r5_106:word16]
	r5_106 = r5_106 + 4<32>
	Mem121[r4_104 - 16<i32>:word16] = SLICE(-CONVERT(Mem116[r5_106 - 2<i32>:word16], word16, word32), word16, 0)
	branch Test(NE,r20_107 ^ r4_104) l0001CE70
l0001CE94:
	r12_103 = r12_103 + 2<32>
	branch Test(NE,r28_102 ^ r12_103) l0001CEA0_ds_t
l0001CEA0_ds_t:
	r7_101 = r7_101 + 0x10<32>
l0001CEA0_ds_f:
l0001CEA4:
	r9_134 = r9_134 + 0x80<32>
	branch Test(NE,r10_91 ^ r9_134) l0001CEB0_ds_t
l0001CEB0_ds_t:
	r3_141 = r3_141 + 4<32>
l0001CEB0_ds_f:
l0001CEB4:
	r3_146 = Mem121[r23_49 + 28<i32>:word32]
	r23 = r23_49
	r25 = r25_62
	r29 = r29_65
	r21_190 = r21_58
	r27 = r27_55
l0001CDC0_ds_f:
	word32 r7_147 = Mem96[r3_141:word32]
l0001CDC4:
	word32 r12_148 = r9_134
	word32 r20_150 = r7_147 + r19_56
	word32 r28_151 = r9_134 + 0x10<32>
l0001CDD0:
	word32 r4_153 = r12_148
	word32 r5_155 = r20_150
	word32 r7_156 = r12_148 + 0x80<32>
l0001CDDC:
	r4_153 = r4_153 + 0x10<32>
	Mem164[r4_153 - 16<i32>:word16] = Mem158[r5_155:word16]
	branch Test(NE,r7_156 ^ r4_153) l0001CDF0_ds_t
l0001CDF0_ds_t:
	r5_155 = r5_155 + 2<32>
l0001CDF0_ds_f:
l0001CDF4:
	r12_148 = r12_148 + 2<32>
	branch Test(NE,r28_151 ^ r12_148) l0001CE00_ds_t
l0001CE00_ds_t:
	r20_150 = r20_150 + 0x10<32>
l0001CE00_ds_f:
l0001CE04:
	r9_134 = r9_134 + 0x80<32>
	branch Test(NE,r10_91 ^ r9_134) l0001CE10_ds_t
l0001CE10_ds_t:
	r3_141 = r3_141 + 4<32>
l0001CE10_ds_f:
	r23 = r23_49
	r21_190 = r21_58
	r27 = r27_55
	r25 = r25_62
	r29 = r29_65
l0001CE38_ds_f:
l0001CE3C:
	word32 r21_197 = r21_190 + r4_13
	branch r21_197 -u Mem12[r23 + 32<i32>:word32] >= 0<32> l0001CE4C_ds_t
l0001CE4C_ds_t:
l0001BB50:
	word32 r21_201 = Mem12[dwArg1C + 56<i32>:word32]
l0001BB54_thunk_fn0001BB58:
	word32 r25_404
	word32 r31_406
	word32 r30_405
	word32 r19_401
	word32 r23_402
	word32 r24_403
	fn0001BB58(r21, r31, out r19_401, out r23_402, out r24_403, out r25_404, out r30_405, out r31_406)
	r4Out = r4_13
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = <invalid>
	r19Out = <invalid>
	r21Out = r21_201
	r22Out = <invalid>
	r23Out = <invalid>
	r24Out = <invalid>
	r25Out = <invalid>
	r26Out = <invalid>
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	return <invalid>
l0001CE4C_ds_f:
l0001CE50:
l0001CE50_thunk_fn0001BB58:
	word32 r24_397
	word32 r19_395
	word32 r25_398
	word32 r23_396
	word32 r31_400
	word32 r30_399
	fn0001BB58(r21, r31, out r19_395, out r23_396, out r24_397, out r25_398, out r30_399, out r31_400)
	r4Out = dwArg30
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = <invalid>
	r19Out = <invalid>
	r21Out = r21_197
	r22Out = <invalid>
	r23Out = <invalid>
	r24Out = <invalid>
	r25Out = <invalid>
	r26Out = <invalid>
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	return <invalid>
fn0001CE14_exit:


void fn0001D1B8(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r3 r4 r5 r7 r8
// Preserved: r1
fn0001D1B8_entry:
l0001D1B8:
	word32 r3_19 = r5 + 0x44<32>
l0001D1C0:
	word32 r7_11
	word32 r4_8 = Mem7[r3_19:word32]
	r3_19 = r3_19 + 4<32>
	branch Test(EQ,r4_8) l0001D1CC_ds_t
l0001D1CC_ds_t:
	r7_11 = r3_19 ^ r5 + 0x54<32>
l0001D1CC_ds_f:
	r7_11 = r3_19 ^ r5 + 0x54<32>
l0001D1D0:
	Mem14[r4_8 + 256<i32>:word32] = r6
l0001D1D4:
	branch Test(NE,r7_11) l0001D1C0
l0001D1D8:
l0001D1DC:
	word32 r4_21 = Mem20[r3_19:word32]
	branch Test(EQ,r4_21) l0001D1E8
l0001D1E4:
	Mem23[r4_21 + 548<i32>:word32] = r6
l0001D1E8:
	word32 r7_30
	word32 r4_26 = Mem25[r3_19 + 16<i32>:word32]
	r3_19 = r3_19 + 4<32>
	branch Test(EQ,r4_26) l0001D1F4_ds_t
l0001D1F4_ds_t:
	r7_30 = r5 + 0x64<32> ^ r3_19
l0001D1F4_ds_f:
	r7_30 = r5 + 0x64<32> ^ r3_19
l0001D1F8:
	Mem33[r4_26 + 548<i32>:word32] = r6
l0001D1FC:
	branch Test(NE,r7_30) l0001D1DC
l0001D200:
	return
fn0001D1B8_exit:


void fn0001D37C(word32 r5, word32 r6, word32 r7, word32 r8, word32 r23)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r23:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r18 r3 r4 r5 r6 r7 r8
// Preserved: r1 r15 r19 r21 r22 r23
fn0001D37C_entry:
l0001D37C:
	word32 r4_21
	word32 r3_25
	word32 r21_16 = r5
	word32 r19_18 = r7
	word32 r22_20 = r8
	branch Test(EQ,Mem13[r5 + 276<i32>:word32]) l0001D3A8_ds_t
l0001D3A8_ds_t:
	r4_21 = Mem13[r5 + 20<i32>:word32]
l0001D42C:
	branch 2<32> -u (r4_21 + 0xFFFFFF9B<32>) >= 0<32> l0001D3D0
l0001D43C:
	r3_25 = Mem13[r5:word32]
l0001D3A8_ds_f:
	r4_21 = Mem13[r5 + 20<i32>:word32]
l0001D3AC:
	r3_25 = Mem13[r5:word32]
l0001D3B0:
	Mem32[r3_25 + 20<i32>:word32] = 0x14<32>
	word32 r7_33 = Mem32[r3_25:word32]
	Mem35[r3_25 + 24<i32>:word32] = r4_21
	word32 r1_45
	call 0x0001D3C4<p32> + r7_33 (retsize: 0;)
		uses: r15:0x0001D3C4<p32>,r19:r7,r21:r5,r22:r8,r23:r23,r5:r5,r6:r6,r7:r7_33,r8:r8,Stack +001C:r6
		defs: r1:r1_45,r19:r19_46,r21:r21_47,r22:r22_48,r23:r23_50,r8:r8_54
	r6 = Mem40[r1_45 + 28<i32>:word32]
l0001D3D0:
	word32 r3_64 = Mem60[Mem60[r21_16 + 400<i32>:word32] + 20<i32>:word32]
	word32 r22_75
	word32 r19_105
	word32 r21_106
	word32 r7_101
	word32 r8_102
	call 0x0001D3DC<p32> + r3_64 (retsize: 0;)
		uses: r15:0x0001D3DC<p32>,r19:r19_67,r21:r21_59,r22:r22_62,r23:r23_68,r3:r3_64,r5:r21_59,r6:r6_70,r7:r22_62,r8:r8_69
		defs: r19:r19_73,r21:r21_74,r22:r22_75,r7:r7_80,r8:r8_81
	word32 r3_85 = Mem60[r21_106 + 400<i32>:word32]
	branch Test(EQ,r22_75) l0001D3EC_ds_t
l0001D3EC_ds_t:
l0001D3EC_ds_f:
	word32 r23_109 = Mem60[r3_85 + 24<i32>:word32]
l0001D3F0:
	word32 r22_100 = r19_105 + r22_75
l0001D3F4:
	call 0x0001D400<p32> + r23_109 (retsize: 0;)
		uses: r15:0x0001D400<p32>,r19:r19_89 + 1<32>,r21:r21_93,r22:r22_100,r23:r23_99,r5:r21_93,r6:CONVERT(Mem60[r19_89:byte], byte, int32),r7:r7_101,r8:r8_102
		defs: r19:r19_105,r21:r21_106,r22:r22_107,r23:r23_109,r7:r7_112,r8:r8_113
	branch Test(NE,r19_105 ^ r22_100) l0001D3F4
l0001D410:
	return
fn0001D37C_exit:


void fn0001DE80(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8, word32 r25)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E7C0
// MayUse:  r0:[0..31] r25:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24
fn0001DE80_entry:
l0001DE80:
	word32 r8_30
	word32 r21_22 = r7
	branch Test(EQ,Mem15[r6:word32]) l0001DEB0_ds_t
l0001DEB0_ds_t:
l0001DF54:
	Mem32[r6:word32] = fn0001CCC4(r25, out r8_30, out r21_22)
l0001DEB0_ds_f:
	r8_30 = r8
l0001DEB4:
	fn0002F60C()
	word32 r19_40 = 0<32>
	word32 r3_41 = r21_22 + 2<32>
	word32 r7_42 = r21_22 + 0x22<32>
l0001DED4:
	r3_41 = r3_41 + 2<32>
	word32 r4_51 = CONVERT(Mem113[r3_41:word16], word16, int32)
	branch Test(NE,r7_42 ^ r3_41) l0001DEE8_ds_t
l0001DEE8_ds_t:
	r19_40 = r19_40 + r4_51
l0001DEE8_ds_f:
	word32 r19_54 = r19_40 + r4_51
l0001DEEC:
	branch 0xFF<32> -u (r19_54 + 0xFFFFFFFF<32>) >= 0<32> l0001DEFC_ds_t
l0001DEFC_ds_t:
l0001DF14:
	fn0002F60C()
	Mem72[Mem113[r6:word32] + 548<i32>:word32] = r0
	return
fn0001DE80_exit:
l0001DEFC_ds_f:
l0001DF00:
	word32 r3_85 = Mem113[r5:word32]
	Mem86[r3_85 + 20<i32>:word32] = 8<32>
	word32 r3_87 = Mem86[r3_85:word32]
	word32 r9_112
	call 0x0001DF0C<p32> + r3_87 (retsize: 0;)
		uses: r0:r0,r15:0x0001DF0C<p32>,r19:r19_54,r21:r21_34,r22:r6,r23:r5,r24:r8,r25:r25,r3:r3_87,r5:r5,r6:r21_34,r7:r7_42,r8:r8_93,r9:r9_112
		defs: r9:r9_112


void fn0001DF68(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001EA08
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r10 r18 r3 r4 r9
// Preserved: r1
fn0001DF68_entry:
l0001DF68:
	branch r6 > 4<32> l0001DF74_ds_t
l0001DF74_ds_t:
	word32 r4_11 = r5
l0001DFB4:
	word32 r9_10 = 0<32>
l0001DFBC:
	Mem12[r4_11 + 4<i32>:word32] = r9_10
	Mem15[r4_11:word32] = 1<32>
	Mem17[r4_11 + 20<i32>:word32] = r0
	Mem18[r4_11 + 24<i32>:word32] = r0
	Mem20[r4_11 + 28<i32>:word32] = r7
	Mem22[r4_11 + 32<i32>:word32] = r8
	r9_10 = r9_10 + 1<32>
	branch Test(NE,r6 ^ r9_10) l0001DFE0_ds_t
l0001DFE0_ds_t:
	r4_11 = r4_11 + 0x24<32>
l0001DFE0_ds_f:
l0001DFE4:
	return
l0001DF74_ds_f:
l0001DF78:
	branch Test(LE,r6) l0001DF7C_ds_t
l0001DF7C_ds_t:
	Mem36[r5:word32] = r6
l0001DF7C_ds_f:
	Mem37[r5:word32] = r6
l0001DF80:
	word32 r3_38 = r5 + 4<32>
	word32 r4_39 = 0<32>
l0001DF88:
	Mem42[r3_38:word32] = r4_39
	r4_39 = r4_39 + 1<32>
	branch Test(NE,r6 ^ r4_39) l0001DF98_ds_t
l0001DF98_ds_t:
	r3_38 = r3_38 + 4<32>
l0001DF98_ds_f:
l0001DF9C:
	Mem53[r5 + 24<i32>:word32] = r0
	Mem54[r5 + 20<i32>:word32] = r0
	Mem58[r5 + 28<i32>:word32] = r7
	Mem62[r5 + 32<i32>:word32] = r8
	return
fn0001DF68_exit:


word32 fn0001E004(word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r22, word32 r26, word32 r27, word32 r28, word32 r30, word32 r31, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E1F8
// MayUse:  r22:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r30:[0..31] r31:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r30 r31
// Trashed: C r18 r20 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28
fn0001E004_entry:
l0001E004:
	word32 r4_25 = Mem23[r5 + 20<i32>:word32]
	word32 r24_239 = r7
	word32 r25_243 = r8
	branch Test(EQ,r4_25 ^ 0x64<32>) l0001E04C_ds_t
l0001E04C_ds_t:
	word32 r23_35 = r9
l0001E068:
	branch 3<32> -u r6 >= 0<32> l0001E074_ds_t
l0001E074_ds_t:
l0001E090:
	word32 r22_253 = Mem23[r5 + r6 * 4<32> + 68<i32>:word32]
	branch Test(EQ,r22_253) l0001E1E0
l0001E1E0:
	word32 r19_49
	word32 r3_60 = fn0001CC98(r6, r5, r9, r30, r31, out r19_49, out r23_35, out r24_239, out r25_243, out r30, out r31)
	Mem71[r19_49 + 68<i32>:word32] = r3_60
	r22_253 = r3_60
l0001E0A4:
	word32 r3_74 = -r23_35 | r23_35
	word32 r19_112 = 0<32>
l0001E170:
	word32 r3_129 = fn0002E7D0(fn0002E908(r25_243, Mem114[r19_366 + r24_239:word32]) + 0x32<32>, 0x64<32>)
	branch Test(GT,r3_129) l0001E194_ds_t
l0001E194_ds_t:
	word32 r4_133 = 0xFF<32>
l0001E144:
	branch Test(EQ,r3_74 >>u 31<i32>) l0001E150
l0001E148:
	branch r3_129 > 0xFF<32> l0001E160
l0001E150:
	branch r3_129 <= 0x7FFF<32> l0001E158_ds_t
l0001E158_ds_t:
	r4_133 = r3_129
l0001E158_ds_f:
l0001E15C:
	r4_133 = 0x7FFF<32>
l0001E160:
	Mem149[r19_366 + r22_253:word32] = r4_133
	r19_112 = r19_366 + 4<32>
	r19_367 = r19_112
	branch Test(EQ,r19_112 ^ 0x100<32>) l0001E1AC
l0001E194_ds_f:
l0001E198:
	Mem155[r19_366 + r22_253:word32] = 1<32>
	r19_112 = r19_366 + 4<32>
	r19_366 = r19_112
	branch Test(NE,r19_112 ^ 0x100<32>) l0001E170
l0001E1AC:
	Mem160[r22_253 + 256<i32>:word32] = r19_366 + 4<32> ^ 0x100<32>
	r31Out = r31
	return r30
fn0001E004_exit:
l0001E074_ds_f:
l0001E078:
	word32 r3_178 = Mem23[r5:word32]
	Mem180[r3_178 + 20<i32>:word32] = 0x1F<32>
	word32 r4_181 = Mem180[r3_178:word32]
	Mem183[r3_178 + 24<i32>:word32] = r6
	word32 r20_205
	word32 r29_206
	call 0x0001E088<p32> + r4_181 (retsize: 0;)
		uses: r15:0x0001E088<p32>,r19:r6,r20:r20_205,r21:r5,r22:r22,r23:r9,r24:r7,r25:r8,r26:r26,r27:r27,r28:r28,r29:r29_206,r3:r3_178,r30:r30,r31:r31,r4:r4_181,r5:r5,r6:r6,r7:r7,r8:r8,r9:r9
		defs: r20:r20_205,r29:r29_206
l0001E04C_ds_f:
l0001E050:
	word32 r3_209 = Mem23[r5:word32]
	Mem211[r3_209 + 20<i32>:word32] = 0x14<32>
	word32 r6_212 = Mem211[r3_209:word32]
	Mem214[r3_209 + 24<i32>:word32] = r4_25
	word32 r20_236
	word32 r29_237
	call 0x0001E060<p32> + r6_212 (retsize: 0;)
		uses: r15:0x0001E060<p32>,r19:r6,r20:r20_236,r21:r5,r22:r22,r23:r9,r24:r7,r25:r8,r26:r26,r27:r27,r28:r28,r29:r29_237,r3:r3_209,r30:r30,r31:r31,r5:r5,r6:r6_212,r7:r7,r8:r8,r9:r9
		defs: r20:r20_236,r29:r29_237


void fn0001E1F8(word32 r5, word32 r6, word32 r7, word32 r26, word32 r27, word32 r28, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E7C0
// MayUse:  r26:[0..31] r27:[0..31] r28:[0..31] r30:[0..31] r31:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: C r18 r20 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22
fn0001E1F8_entry:
l0001E1F8:
	word32 r31_33
	word32 r31_69
	fn0001E004(r5, 1<32>, 0x7534<32>, r6, r7, r5, r26, r27, r28, fn0001E004(r5, 0<32>, 0x7634<32>, r6, r7, r5, r26, r27, r28, r30, r31, out r31_33), r31_33, out r31_69)
	return
fn0001E1F8_exit:


void fn0001E384(word32 r0, word32 r5, word32 r6, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r15:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r0 r15 r18 r19 r21 r3 r4 r5 r6 r7
// Preserved: r1
fn0001E384_entry:
l0001E384:
	word32 r4_11 = Mem9[r5 + 20<i32>:word32]
	branch Test(EQ,r4_11 ^ 0x64<32>) l0001E3A4_ds_t
l0001E3A4_ds_t:
l0001E3C0:
	Mem16[r5 + 60<i32>:word32] = r6
	Mem18[r5 + 252<i32>:word32] = r0
	branch 5<32> -u r6 < 0<32> l0001E3D4_ds_t
l0001E3D4_ds_t:
	Mem21[r5 + 272<i32>:word32] = r0
l0001E6D8:
	word32 r3_22 = Mem21[r5:word32]
	Mem24[r3_22 + 20<i32>:word32] = 0xA<32>
	word32 r3_25 = Mem24[r3_22:word32]
	call 0x0001E6E8<p32> + r3_25 (retsize: 0;)
		uses: r0:r0,r15:0x0001E6E8<p32>,r19:r5,r21:r6,r3:r3_25,r5:r5,r6:r6,r7:0xA<32>
	return
l0001E3D4_ds_f:
	Mem43[r5 + 272<i32>:word32] = r0
l0001E3D8:
	word32 r3_47 = Mem43[r6 * 4<32> + 0x71BC<32>:word32]
	call r3_47 (retsize: 0;)
		uses: r0:r0,r15:r15,r19:r5,r21:r6,r3:r3_47,r5:r5,r6:r6
	return
fn0001E384_exit:
l0001E3A4_ds_f:
l0001E3A8:
	word32 r3_60 = Mem9[r5:word32]
	Mem62[r3_60 + 20<i32>:word32] = 0x14<32>
	word32 r6_63 = Mem62[r3_60:word32]
	Mem65[r3_60 + 24<i32>:word32] = r4_11
	call 0x0001E3B8<p32> + r6_63 (retsize: 0;)
		uses: r0:r0,r15:0x0001E3B8<p32>,r19:r5,r21:r6,r3:r3_60,r5:r5,r6:r6_63


void fn0001E530(word32 r7, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r19:[0..31] r7:[0..31]
// LiveOut:
// Trashed: r0 r15 r19 r21 r3 r4 r5 r6 r7
// Preserved: r1
fn0001E530_entry:
l0001E530:
	Mem5[r19 + 56<i32>:word32] = r7
	word32 r3_6 = Mem5[r19:word32]
	Mem9[r3_6 + 20<i32>:word32] = 0x1A<32>
	word32 r4_10 = Mem9[r3_6:word32]
	Mem12[r3_6 + 24<i32>:word32] = r7
	Mem14[r3_6 + 28<i32>:word32] = 0xA<32>
	word32 r19_17
	word32 r0_23
	call 0x0001E550<p32> + r4_10 (retsize: 0;)
		uses: r15:0x0001E550<p32>,r19:r19,r3:r3_6,r4:r4_10,r5:r19,r6:0xA<32>,r7:r7
		defs: r0:r0_23,r19:r19_17
	word32 r7_25 = Mem14[r19_17 + 56<i32>:word32]
	branch Test(LE,r7_25) l0001E560_ds_t
l0001E560_ds_t:
l0001E47C:
	return
l0001E560_ds_f:
l0001E564:
	word32 r3_31 = Mem14[r19_17 + 64<i32>:word32]
	word32 r4_32 = 0<32>
l0001E570:
	Mem36[r3_31:word32] = r4_32
	Mem39[r3_31 + 8<i32>:word32] = 1<32>
	Mem40[r3_31 + 12<i32>:word32] = 1<32>
	Mem42[r3_31 + 16<i32>:word32] = r0_23
	Mem43[r3_31 + 20<i32>:word32] = r0_23
	Mem44[r3_31 + 24<i32>:word32] = r0_23
	r4_32 = r4_32 + 1<32>
	branch Test(NE,r4_32 ^ r7_25) l0001E594_ds_t
l0001E594_ds_t:
	r3_31 = r3_31 + 0x54<32>
l0001E594_ds_f:
l0001E598:
	return
fn0001E530_exit:


word32 fn0001E704(word32 r5, word32 r15, ptr32 & r4Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E908
// MayUse:  r15:[0..31] r5:[0..31]
// LiveOut: r3 r4 r6
// Trashed: r15 r18 r3 r4 r5 r6
// Preserved: r1
fn0001E704_entry:
l0001E704:
	word32 r6_5 = Mem0[r5 + 40<i32>:word32]
	branch 5<32> -u r6_5 < 0<32> l0001E718_ds_t
l0001E718_ds_t:
l0001E79C:
	word32 r3_11 = Mem10[r5:word32]
	Mem13[r3_11 + 20<i32>:word32] = 9<32>
	word32 r3_14 = Mem13[r3_11:word32]
	word32 r6_17
	word32 r3_19
	word32 r4_22
	call 0x0001E7AC<p32> + r3_14 (retsize: 0;)
		uses: r15:0x0001E7AC<p32>,r3:r3_14,r4:9<32>,r5:r5
		defs: r3:r3_19,r4:r4_22,r6:r6_17
	r4Out = r4_22
	r6Out = r6_17
	return r3_19
l0001E718_ds_f:
l0001E71C:
	word32 r3_29 = Mem25[r6_5 * 4<32> + 0x71D4<32>:word32]
	word32 r6_31
	word32 r3_33
	word32 r4_36
	call r3_29 (retsize: 0;)
		uses: r15:r15,r3:r3_29,r5:r5
		defs: r3:r3_33,r4:r4_36,r6:r6_31
	r4Out = r4_36
	r6Out = r6_31
	return r3_33
fn0001E704_exit:


void fn0001E7C0(word32 r0, word32 r5, word32 r25, word32 r26, word32 r27, word32 r28, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r30:[0..31] r31:[0..31] r5:[0..31]
// LiveOut:
// Trashed: C r0 r15 r18 r19 r20 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0001E7C0_entry:
l0001E7C0:
	word32 r4_9 = Mem7[r5 + 20<i32>:word32]
	branch Test(EQ,r4_9 ^ 0x64<32>) l0001E7D8_ds_t
l0001E7D8_ds_t:
	word32 r19_11 = r5
l0001E7F4:
	branch Test(EQ,Mem7[r5 + 64<i32>:word32]) l0001E7FC_ds_t
l0001E7FC_ds_t:
l0001E924:
	word32 r3_15 = Mem7[Mem7[r5 + 4<i32>:word32]:word32]
	word32 r3_23
	call 0x0001E92C<p32> + r3_15 (retsize: 0;)
		uses: r0:r0_27,r15:0x0001E92C<p32>,r19:r5,r25:r25,r26:r26,r27:r27,r28:r28,r3:r3_15,r30:r30,r31:r31,r5:r5,r7:0x348<32>
		defs: r0:r0_27,r19:r19_19,r3:r3_23
	Mem29[r19_11 + 64<i32>:word32] = r3_23
l0001E7FC_ds_f:
l0001E800:
	Mem34[r19_11 + 52<i32>:word32] = 8<32>
	fn0001E1F8(r19_11, 0x32<32>, 1<32>, r26, r27, r28, r30, r31)
	fn0001DE80(r0, r19_11, r19_11 + 0x54<32>, 0x7510<32>, 0x74F8<32>, r25)
	fn0001DE80(r0, r19_11, r19_11 + 0x64<32>, 0x74D4<32>, 0x7390<32>, r25)
	fn0001DE80(r0, r19_11, r19_11 + 0x58<32>, 0x736C<32>, 0x7354<32>, r25)
	fn0001DE80(r0, r19_11, r19_11 + 0x68<32>, 0x7330<32>, 0x71EC<32>, r25)
	word32 r3_117 = r19_11 + 0x74<32>
	word32 r7_118 = r19_11 + 0x94<32>
l0001E898:
	Mem124[r3_117:word16] = SLICE(r0, word16, 0)
	Mem127[r3_117 + 32<i32>:word16] = 1<16>
	Mem130[r3_117 + 64<i32>:word16] = 5<16>
	r3_117 = r3_117 + 2<32>
	word32 r4_133 = r3_117 ^ r7_118
	branch Test(NE,r4_133) l0001E898
l0001E8B0:
	word32 r5_135 = Mem130[r19_11 + 52<i32>:word32]
	Mem136[r19_11 + 216<i32>:word32] = r4_133
	Mem137[r19_11 + 212<i32>:word32] = r4_133
	Mem138[r19_11 + 220<i32>:word32] = r4_133
	Mem139[r19_11 + 224<i32>:word32] = r4_133
	branch r5_135 <= 8<32> l0001E8D0_ds_t
l0001E8D0_ds_t:
	Mem142[r19_11 + 228<i32>:word32] = r4_133
l0001E8D0_ds_f:
	Mem143[r19_11 + 228<i32>:word32] = r4_133
l0001E8D4:
	Mem145[r19_11 + 228<i32>:word32] = 1<32>
l0001E8DC:
	Mem150[r19_11 + 232<i32>:word32] = r0
	Mem151[r19_11 + 256<i32>:word32] = 1<32>
	Mem153[r19_11 + 264<i32>:word32] = 1<32>
	Mem154[r19_11 + 268<i32>:word32] = 1<32>
	Mem155[r19_11 + 236<i32>:word32] = r0
	Mem156[r19_11 + 240<i32>:word32] = r0
	Mem157[r19_11 + 244<i32>:word32] = r0
l0001E904_thunk_fn0001E908:
	word32 r19_231
	word32 r4_229
	word32 r6_230
	fn0001E908(r0, r19_11, r19_11, out r4_229, out r6_230, out r19_231)
	return
fn0001E7C0_exit:
l0001E7D8_ds_f:
l0001E7DC:
	word32 r3_167 = Mem7[r5:word32]
	Mem169[r3_167 + 20<i32>:word32] = 0x14<32>
	word32 r6_170 = Mem169[r3_167:word32]
	Mem172[r3_167 + 24<i32>:word32] = r4_9
	call 0x0001E7EC<p32> + r6_170 (retsize: 0;)
		uses: r0:r0,r15:0x0001E7EC<p32>,r19:r5,r25:r25,r26:r26,r27:r27,r28:r28,r3:r3_167,r30:r30,r31:r31,r5:r5,r6:r6_170


word32 fn0001E908(word32 r0, word32 r5, word32 r19, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E7C0
//      fn0001F63C
//      fn0001FCE0
//      fn000261AC
// MayUse:  r0:[0..31] r19:[0..31] r5:[0..31]
// LiveOut: r1 r19 r3 r4 r6
// Trashed: r1 r15 r18 r19 r3 r4 r5 r6
// Preserved:
fn0001E908_entry:
	word32 dwArg1C
l0001E908:
	Mem5[r19 + 248<i32>:word32] = r0
	Mem8[r19 + 260<i32>:word16] = SLICE(r0, word16, 0)
	word32 r4_12
	word32 r6_14
	word32 r3_11 = fn0001E704(r5, 0x0001E90C<p32>, out r4_12, out r6_14)
	r4Out = r4_12
	r6Out = r6_14
	r19Out = dwArg1C
	return r3_11
fn0001E908_exit:


word32 fn0001E93C(word32 r0, word32 r5, word32 r22, word32 r23, ptr32 & r3Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
// MayUse:  r0:[0..31] r22:[0..31] r23:[0..31] r5:[0..31]
// LiveOut: r0 r1 r21 r22 r23 r3
// Trashed: r0 r1 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r7 r8
// Preserved:
fn0001E93C_entry:
l0001E93C:
	word32 r3_15 = Mem13[r5 + 20<i32>:word32]
	branch Test(EQ,r3_15 ^ 0x64<32>) l0001E964_ds_t
l0001E964_ds_t:
	word32 r19_18 = Mem13[r5 + 56<i32>:word32]
l0001E980:
	word32 r22_23
	branch Test(EQ,r19_18 ^ 3<32>) l0001E988_ds_t
l0001E988_ds_t:
l0001EB3C:
	branch Test(EQ,Mem13[r5 + 60<i32>:word32] ^ 3<32>) l0001EB7C
l0001EB7C:
	r22_23 = 0xA<32>
l0001EB48:
l0001E988_ds_f:
l0001E98C:
	branch r19_18 <= 4<32> l0001E994_ds_t
l0001E994_ds_t:
l0001EB4C:
	r22_23 = r19_18 * 4<32> + 2<32>
l0001E994_ds_f:
l0001E998:
	r22_23 = r19_18 * 6<32>
l0001E9A0:
	word32 r5_38 = Mem13[r5 + 420<i32>:word32]
	branch Test(EQ,r5_38) l0001E9A8_ds_t
l0001E9A8_ds_t:
l0001E9A8_ds_f:
l0001E9AC:
	branch Mem13[r5 + 424<i32>:word32] >= r22_23 l0001E9B8_ds_t
l0001E9B8_ds_t:
l0001E9B8_thunk_fn0001EA0C:
	word32 r6_172
	word32 r7_173
	word32 r21_55
	word32 r22_56
	word32 r23_57
	word32 r8_174
	word32 r19_175
	r3Out = fn0001EA0C(r0, r5_38, r19_18, r5, r22_23, r19_18 ^ 3<32>, out r6_172, out r7_173, out r8_174, out r19_175, out r21_55, out r22_56, out r23_57)
	r21Out = r21_55
	r22Out = r22_56
	r23Out = r23_57
	return r0
l0001E9B8_ds_f:
l0001E9BC:
	word32 r4_68
	branch r22_23 >= 0xA<32> l0001E9C4_ds_t
l0001E9C4_ds_t:
	r4_68 = r22_23
l0001E9C4_ds_f:
l0001E9C8:
	r4_68 = 0xA<32>
l0001E9CC:
	word32 r3_81 = Mem13[Mem13[r5 + 4<i32>:word32]:word32]
	Mem86[r5 + 424<i32>:word32] = r4_68
	word32 r7_80 = r4_68 * 9<32>
	word32 r21_101
	word32 r19_103
	word32 r22_104
	word32 r23_105
	word32 r3_106
	word32 r0_113
	call 0x0001E9FC<p32> + r3_81 (retsize: 0;)
		uses: r0:r0,r15:0x0001E9FC<p32>,r19:r19_18,r21:r5,r22:r22_42,r23:r19_18 ^ 3<32>,r3:r3_81,r5:r5,r6:0<32>,r7:r7_80 * 4<32>,r8:r7_80 * 4<32>
		defs: r0:r0_113,r19:r19_103,r21:r21_101,r22:r22_104,r23:r23_105,r3:r3_106
l0001EA04_thunk_fn0001EA08:
	word32 r21_118
	word32 r22_119
	word32 r23_120
	word32 r6_176
	word32 r7_177
	word32 r8_178
	word32 r19_179
	r3Out = fn0001EA08(r0_113, r3_106, r3_106, r19_103, r21_101, r22_104, r23_105, out r6_176, out r7_177, out r8_178, out r19_179, out r21_118, out r22_119, out r23_120)
	r21Out = r21_118
	r22Out = r22_119
	r23Out = r23_120
	return r0_113
fn0001E93C_exit:
l0001E964_ds_f:
	word32 r19_127 = Mem13[r5 + 56<i32>:word32]
l0001E968:
	word32 r4_128 = Mem13[r5:word32]
	Mem130[r4_128 + 20<i32>:word32] = 0x14<32>
	word32 r6_131 = Mem130[r4_128:word32]
	Mem133[r4_128 + 24<i32>:word32] = r3_15
	call 0x0001E978<p32> + r6_131 (retsize: 0;)
		uses: r0:r0,r15:0x0001E978<p32>,r19:r19_127,r21:r5,r22:r22,r23:r23,r4:r4_128,r5:r5,r6:r6_131


word32 fn0001EA08(word32 r0, word32 r3, word32 r5, word32 r19, word32 r21, word32 r22, word32 r23, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E93C
//      fn0001F63C
//      fn000261AC
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r3:[0..31] r5:[0..31]
// LiveOut: r19 r21 r22 r23 r3 r6 r7 r8
// Trashed: r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn0001EA08_entry:
l0001EA08:
	Mem5[r21 + 420<i32>:word32] = r3
l0001EA08_thunk_fn0001EA0C:
	word32 r19_13
	word32 r21_14
	word32 r22_15
	word32 r23_16
	word32 r6_20
	word32 r7_21
	word32 r8_22
	word32 r3_17 = fn0001EA0C(r0, r5, r19, r21, r22, r23, out r6_20, out r7_21, out r8_22, out r19_13, out r21_14, out r22_15, out r23_16)
	r6Out = r6_20
	r7Out = r7_21
	r8Out = r8_22
	r19Out = r19_13
	r21Out = r21_14
	r22Out = r22_15
	r23Out = r23_16
	return r3_17
fn0001EA08_exit:


word32 fn0001EA0C(word32 r0, word32 r5, word32 r19, word32 r21, word32 r22, word32 r23, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E93C
//      fn0001EA08
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r5:[0..31]
// LiveOut: r19 r21 r22 r23 r3 r6 r7 r8
// Trashed: r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn0001EA0C_entry:
l0001EA0C:
	Mem45[r21 + 216<i32>:word32] = r5
	branch Test(EQ,r23) l0001EA14_ds_t
l0001EA14_ds_t:
	Mem48[r21 + 212<i32>:word32] = r22
l0001EA14_thunk_fn0001EB58:
	word32 r19_53
	word32 r21_54
	word32 r22_55
	word32 r23_56
	word32 r6_59
	word32 r7_60
	word32 r8_61
	word32 r3_57 = fn0001EB58(r0, r5, r19, r21, r23, out r6_59, out r7_60, out r8_61, out r19_53, out r21_54, out r22_55, out r23_56)
	r6Out = r6_59
	r7Out = r7_60
	r8Out = r8_61
	r19Out = r19_53
	r21Out = r21_54
	r22Out = r22_55
	r23Out = r23_56
	return r3_57
l0001EA14_ds_f:
	Mem64[r21 + 212<i32>:word32] = r22
l0001EA14_thunk_fn0001EA18:
	word32 r19_67
	word32 r21_68
	word32 r22_69
	word32 r23_70
	word32 r6_73
	word32 r7_74
	word32 r8_75
	word32 r3_77 = fn0001EA18(r0, r5, r19, r21, r23, out r6_73, out r7_74, out r8_75, out r19_67, out r21_68, out r22_69, out r23_70)
	r6Out = r6_73
	r7Out = r7_74
	r8Out = r8_75
	r19Out = r19_67
	r21Out = r21_68
	r22Out = r22_69
	r23Out = r23_70
	return r3_77
fn0001EA0C_exit:


word32 fn0001EA18(word32 r0, word32 r5, word32 r19, word32 r21, word32 r23, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001EA08
//      fn0001EA0C
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r23:[0..31] r5:[0..31]
// LiveOut: r19 r21 r22 r23 r3 r6 r7 r8
// Trashed: r1 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r7 r8
// Preserved:
fn0001EA18_entry:
	word32 r3
	word32 dwArg1C
	word32 dwArg20
	word32 dwArg24
	word32 dwArg28
	word32 r6
	word32 r7
	word32 r8
l0001EA18:
	fn0001DF68(r0, r5, r6, r7, r8)
	branch Test(LE,r19) l0001EA2C_ds_t
l0001EA2C_ds_t:
l0001EB84:
	fn0001DF68(r0, r5, r6, r7, r8)
	r6Out = r19
	r7Out = 1<32>
	r8Out = 0<32>
	r19Out = dwArg1C
	r21Out = dwArg20
	r22Out = dwArg24
	r23Out = dwArg28
	return r3
l0001EA2C_ds_f:
l0001EA2C_thunk_fn0001EB58:
	word32 r19_29
	word32 r21_30
	word32 r22_31
	word32 r23_32
	word32 r6_35
	word32 r7_36
	word32 r8_37
	word32 r3_33 = fn0001EB58(r0, r5, r19, r21, r23, out r6_35, out r7_36, out r8_37, out r19_29, out r21_30, out r22_31, out r23_32)
	r6Out = r6_35
	r7Out = r7_36
	r8Out = r8_37
	r19Out = r19_29
	r21Out = r21_30
	r22Out = r22_31
	r23Out = r23_32
	return r3_33
fn0001EA18_exit:


word32 fn0001EB58(word32 r0, word32 r5, word32 r19, word32 r21, word32 r23, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001EA08
//      fn0001EA0C
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r23:[0..31] r5:[0..31]
// LiveOut: r19 r21 r22 r23 r3 r6 r7 r8
// Trashed: r1 r15 r18 r19 r21 r22 r23 r3 r4 r5 r6 r7 r8
// Preserved:
fn0001EB58_entry:
	word32 r6
	word32 r7
	word32 r8
l0001EB58:
	word32 r3_5 = Mem0[r21 + 60<i32>:word32]
	word32 r3_109 = r3_5 ^ 3<32>
	branch Test(EQ,r3_5 ^ 3<32>) l0001EB64_ds_t
l0001EB64_ds_t:
l0001EBB4:
	Mem15[r5 + 60<i32>:word32] = 5<32>
	Mem17[r5 + 4<i32>:word32] = r23
	Mem18[r5 + 24<i32>:word32] = r23
	Mem19[r5 + 20<i32>:word32] = r23
	Mem20[r5 + 28<i32>:word32] = r23
	Mem21[r5 + 40<i32>:word32] = r23
	Mem22[r5 + 64<i32>:word32] = r23
	Mem23[r5 + 100<i32>:word32] = r23
	Mem24[r5 + 136<i32>:word32] = r23
	Mem25[r5 + 148<i32>:word32] = r23
	Mem26[r5 + 172<i32>:word32] = r23
	Mem27[r5 + 164<i32>:word32] = 6<32>
	Mem28[r5:word32] = 3<32>
	Mem29[r5 + 8<i32>:word32] = 1<32>
	Mem30[r5 + 12<i32>:word32] = 2<32>
	Mem31[r5 + 32<i32>:word32] = 1<32>
	Mem32[r5 + 36<i32>:word32] = 1<32>
	Mem33[r5 + 56<i32>:word32] = 1<32>
	Mem34[r5 + 68<i32>:word32] = 2<32>
	Mem35[r5 + 72<i32>:word32] = 1<32>
	Mem36[r5 + 76<i32>:word32] = 2<32>
	Mem37[r5 + 92<i32>:word32] = 1<32>
	Mem38[r5 + 96<i32>:word32] = 0x3F<32>
	Mem39[r5 + 104<i32>:word32] = 1<32>
	Mem40[r5 + 108<i32>:word32] = 1<32>
	Mem41[r5 + 112<i32>:word32] = 1<32>
	Mem42[r5 + 128<i32>:word32] = 1<32>
	Mem43[r5 + 132<i32>:word32] = 0x3F<32>
	Mem44[r5 + 140<i32>:word32] = 1<32>
	Mem45[r5 + 144<i32>:word32] = 1<32>
	Mem46[r5 + 168<i32>:word32] = 0x3F<32>
	Mem47[r5 + 176<i32>:word32] = 2<32>
	Mem48[r5 + 180<i32>:word32] = 1<32>
	Mem49[r5 + 184<i32>:word32] = r23
	Mem50[r5 + 220<i32>:word32] = r23
	Mem51[r5 + 240<i32>:word32] = r23
	Mem52[r5 + 236<i32>:word32] = r23
	Mem53[r5 + 248<i32>:word32] = r23
	Mem54[r5 + 284<i32>:word32] = r23
	Mem55[r5 + 320<i32>:word32] = r23
	Mem56[r5 + 328<i32>:word32] = r23
	Mem57[r5 + 356<i32>:word32] = r23
	Mem58[r5 + 200<i32>:word32] = 1<32>
	Mem59[r5 + 204<i32>:word32] = 0x3F<32>
	Mem60[r5 + 208<i32>:word32] = 2<32>
	Mem61[r5 + 212<i32>:word32] = 1<32>
	Mem62[r5 + 216<i32>:word32] = 3<32>
	Mem63[r5 + 224<i32>:word32] = 1<32>
	Mem64[r5 + 228<i32>:word32] = 2<32>
	Mem65[r5 + 244<i32>:word32] = 1<32>
	Mem66[r5 + 252<i32>:word32] = 1<32>
	Mem67[r5 + 256<i32>:word32] = 2<32>
	Mem68[r5 + 272<i32>:word32] = 1<32>
	Mem69[r5 + 276<i32>:word32] = 0x3F<32>
	Mem70[r5 + 280<i32>:word32] = 1<32>
	Mem71[r5 + 288<i32>:word32] = 1<32>
	Mem72[r5 + 292<i32>:word32] = 1<32>
	Mem73[r5 + 308<i32>:word32] = 1<32>
	Mem74[r5 + 312<i32>:word32] = 0x3F<32>
	Mem75[r5 + 316<i32>:word32] = 1<32>
	Mem76[r5 + 324<i32>:word32] = 1<32>
	Mem77[r5 + 344<i32>:word32] = 1<32>
	Mem78[r5 + 348<i32>:word32] = 0x3F<32>
	Mem79[r5 + 352<i32>:word32] = 1<32>
	r6Out = 2<32>
	r7Out = 3<32>
	r8Out = 6<32>
	r19Out = <invalid>
	r21Out = <invalid>
	r22Out = <invalid>
	r23Out = <invalid>
	return 1<32>
l0001EB64_ds_f:
l0001EB68:
	fn0001DF68(r0, r5, r6, r7, r8)
	word32 r4_106 = 0<32>
l0001EA30:
l0001EA3C:
	Mem96[r3_109 + 4<i32>:word32] = r4_106
	Mem98[r3_109:word32] = 1<32>
	Mem99[r3_109 + 20<i32>:word32] = 1<32>
	Mem101[r3_109 + 24<i32>:word32] = 5<32>
	Mem103[r3_109 + 28<i32>:word32] = r0
	Mem105[r3_109 + 32<i32>:word32] = 2<32>
	r4_106 = r4_106 + 1<32>
	branch r4_106 < r19 l0001EA60_ds_t
l0001EA60_ds_t:
	r3_109 = r3_109 + 0x24<32>
l0001EA60_ds_f:
	word32 r3_110 = r3_109 + 0x24<32>
l0001EA64:
	word32 r4_111 = 0<32>
l0001EA78:
	Mem118[r3_110 + 4<i32>:word32] = r4_111
	Mem120[r3_110:word32] = 1<32>
	Mem122[r3_110 + 20<i32>:word32] = 6<32>
	Mem124[r3_110 + 24<i32>:word32] = 0x3F<32>
	Mem126[r3_110 + 28<i32>:word32] = r0
	Mem128[r3_110 + 32<i32>:word32] = 2<32>
	r4_111 = r4_111 + 1<32>
	branch r4_111 < r19 l0001EA9C_ds_t
l0001EA9C_ds_t:
	r3_110 = r3_110 + 0x24<32>
l0001EA9C_ds_f:
	word32 r3_133 = r3_110 + 0x24<32>
l0001EAA0:
	word32 r4_134 = 0<32>
l0001EAB0:
	Mem140[r3_133 + 4<i32>:word32] = r4_134
	Mem142[r3_133:word32] = 1<32>
	Mem143[r3_133 + 20<i32>:word32] = 1<32>
	Mem145[r3_133 + 24<i32>:word32] = 0x3F<32>
	Mem147[r3_133 + 28<i32>:word32] = 2<32>
	Mem148[r3_133 + 32<i32>:word32] = 1<32>
	r4_134 = r4_134 + 1<32>
	branch r4_134 < r19 l0001EAD4_ds_t
l0001EAD4_ds_t:
	r3_133 = r3_133 + 0x24<32>
l0001EAD4_ds_f:
	word32 r3_153 = r3_133 + 0x24<32>
l0001EAD8:
	fn0001DF68(r0, r5, r6, r7, r8)
	word32 r4_159 = 0<32>
l0001EAF8:
	Mem164[r3_153 + 4<i32>:word32] = r4_159
	Mem166[r3_153:word32] = 1<32>
	Mem167[r3_153 + 20<i32>:word32] = 1<32>
	Mem169[r3_153 + 24<i32>:word32] = 0x3F<32>
	Mem170[r3_153 + 28<i32>:word32] = 1<32>
	Mem172[r3_153 + 32<i32>:word32] = r0
	r4_159 = r4_159 + 1<32>
	branch r4_159 < r19 l0001EB1C_ds_t
l0001EB1C_ds_t:
	r3_153 = r3_153 + 0x24<32>
l0001EB1C_ds_f:
	word32 r3_177 = r3_153 + 0x24<32>
l0001EB20:
	r6Out = 0x3F<32>
	r7Out = 1<32>
	r8Out = 0<32>
	r19Out = <invalid>
	r21Out = <invalid>
	r22Out = <invalid>
	r23Out = <invalid>
	return r3_177
fn0001EB58_exit:


word32 fn0001EEC8(word32 r0, word32 r5, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, ptr32 & r23Out, ptr32 & r25Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001FCE0
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r5:[0..31]
// LiveOut: r19 r23 r25
// Trashed: C r1 r10 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r8 r9
// Preserved: r0
fn0001EEC8_entry:
	ptr32 fp
l0001EEC8:
	word32 r31_32
	word32 r1_3 = fp + 0xFFFFF578<32>
	word32 r10_31 = Mem29[r5 + 212<i32>:word32]
	branch Test(GT,r10_31) l0001EF08_ds_t
l0001EF08_ds_t:
	r31_32 = r5
l0001EF08_ds_f:
l0001EF0C:
	word32 r3_34 = Mem29[r5:word32]
	Mem36[r3_34 + 20<i32>:word32] = 0x13<32>
	word32 r4_37 = Mem36[r3_34:word32]
	Mem40[r3_34 + 24<i32>:word32] = r0
	word32 r9_62
	call 0x0001EF1C<p32> + r4_37 (retsize: 0;)
		uses: r0:r0,r15:0x0001EF1C<p32>,r19:r19,r21:r21,r22:r22,r23:r23,r24:r24,r25:r25,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_34,r30:r30,r31:r5,r4:r4_37,r5:r5,r9:r9_62
		defs: r0:r0_59,r22:r22_46,r23:r23_47,r24:r24_48,r25:r25_49,r26:r26_50,r28:r28_52,r30:r30_54,r31:r31_42,r9:r9_62
	r1_3 = fp
	r10_31 = Mem40[r31_32 + 212<i32>:word32]
l0001EF28:
	word32 r8_131
	word32 r27_68 = Mem67[r31_32 + 216<i32>:word32]
	branch Test(NE,Mem67[r27_68 + 20<i32>:word32]) l0001EF34_ds_t
l0001EF34_ds_t:
	r8_131 = Mem67[r31_32 + 56<i32>:word32]
l0001EF34_ds_f:
	r8_131 = Mem67[r31_32 + 56<i32>:word32]
l0001EF38:
	word32 r3_72 = Mem67[r27_68 + 24<i32>:word32]
	branch Test(EQ,r3_72 ^ 0x3F<32>) l0001F48C
l0001F48C:
	branch Test(LE,r8_131) l0001F490_ds_t
l0001F490_ds_t:
	Mem74[r31_32 + 280<i32>:word32] = r3_72 ^ 0x3F<32>
l0001F490_ds_f:
	Mem75[r31_32 + 280<i32>:word32] = r3_72 ^ 0x3F<32>
l0001F494:
	word32 r19_77 = r1_3 + 0xA1C<32>
	word32 r3_79 = r19_77
	word32 r4_81 = r19_77 + r8_131 * 4<32>
l0001F4A8:
	Mem84[r3_79:word32] = r0
	r3_79 = r3_79 + 4<32>
	branch Test(NE,r3_79 ^ r4_81) l0001F4A8
l0001F4B8:
	branch Test(LE,r10_31) l0001F4BC_ds_t
l0001F4BC_ds_t:
l0001F4BC_thunk_fn0001F10C:
	word32 r31_356
	word32 r29_355
	word32 r28_354
	word32 r27_353
	word32 r26_352
	word32 r24_351
	word32 r22_350
	word32 r19_110
	word32 r23_113
	word32 r25_115
	word32 r21_349
	fn0001F10C(r19_77, r22, r23, r24, r25, r26, r27_68, r28, r30, r31_32, out r19_110, out r21_349, out r22_350, out r23_113, out r24_351, out r25_115, out r26_352, out r27_353, out r28_354, out r29_355, out r31_356)
	r23Out = r23_113
	r25Out = r25_115
	return r19_110
l0001F4BC_ds_f:
l0001F4C0:
l0001EF44:
	branch Test(LE,r8_131) l0001EF4C_ds_t
l0001EF4C_ds_t:
	Mem133[r31_32 + 280<i32>:word32] = 1<32>
l0001F514:
	branch Test(GT,r10_31) l0001F518_ds_t
l0001F518_ds_t:
l0001F518_ds_f:
l0001F51C:
l0001F51C_thunk_fn0001F10C:
	word32 r29_347
	word32 r31_348
	word32 r28_346
	word32 r19_161
	word32 r23_164
	word32 r25_166
	word32 r21_341
	word32 r27_345
	word32 r22_342
	word32 r24_343
	word32 r26_344
	fn0001F10C(1<32>, r22, r23, r24, r25, r26, r27_68, r28, r30, r31_32, out r19_161, out r21_341, out r22_342, out r23_164, out r24_343, out r25_166, out r26_344, out r27_345, out r28_346, out r29_347, out r31_348)
	r23Out = r23_164
	r25Out = r25_166
	return r19_161
l0001EF4C_ds_f:
	Mem179[r31_32 + 280<i32>:word32] = 1<32>
l0001EF50:
	r26 = r1_3 + 0x1C<32>
	word32 r5_181 = r26
	word32 r9_182 = 0<32>
	word32 r3_184 = r26
l0001EF64:
	r5_181 = r5_181 + 0x100<32>
l0001EF68:
	Mem189[r3_184:word32] = 0xFFFFFFFF<32>
	r3_184 = r3_184 + 4<32>
	branch Test(NE,r5_181 ^ r3_184) l0001EF68
l0001EF78:
	r9_182 = r9_182 + 1<32>
	branch Test(NE,r9_182 ^ r8_131) l0001EF84_ds_t
l0001EF84_ds_t:
	r3_184 = r5_181
l0001EF84_ds_f:
l0001EF88:
	branch Test(LE,r10_31) l0001EF8C_ds_t
l0001EF8C_ds_t:
l0001EF8C_thunk_fn0001F10C:
	word32 r21_333
	word32 r22_334
	word32 r27_337
	word32 r26_336
	word32 r28_338
	word32 r29_339
	word32 r24_335
	word32 r31_340
	word32 r19_224
	word32 r23_227
	word32 r25_229
	fn0001F10C(0<32>, r22, r23, r24, r25, r26, r27_68, r28, r30, r31_32, out r19_224, out r21_333, out r22_334, out r23_227, out r24_335, out r25_229, out r26_336, out r27_337, out r28_338, out r29_339, out r31_340)
	r23Out = r23_227
	r25Out = r25_229
	return r19_224
l0001EF8C_ds_f:
l0001EF90:
l0001EF94:
l0001EF94_thunk_fn0001F10C:
	word32 r26_360
	word32 r24_359
	word32 r22_358
	word32 r21_357
	word32 r19_256
	word32 r23_259
	word32 r25_261
	word32 r27_361
	word32 r28_362
	word32 r29_363
	word32 r31_364
	fn0001F10C(1<32>, r22, r23, r24, 0x11<32>, r26, r27_68, r28, r30, r31_32, out r19_256, out r21_357, out r22_358, out r23_259, out r24_359, out r25_261, out r26_360, out r27_361, out r28_362, out r29_363, out r31_364)
	r23Out = r23_259
	r25Out = r25_261
	return r19_256
fn0001EEC8_exit:


word32 fn0001F0F4(word32 r19, word32 r22, word32 r23, word32 r24, word32 r25, word32 r27, word32 r28, word32 r31, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00025F38
// MayUse:  r19:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r27:[0..31] r28:[0..31] r31:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// Trashed: C r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r8
// Preserved: r1
fn0001F0F4_entry:
	ptr32 fp
l0001F0F4:
l0001F108_thunk_fn0001F10C:
	word32 r19_22
	word32 r21_23
	word32 r22_24
	word32 r23_25
	word32 r24_26
	word32 r25_27
	word32 r26_28
	word32 r27_29
	word32 r28_30
	word32 r29_31
	word32 r31_34
	word32 r3_32 = fn0001F10C(r19, r22, r23, r24, r25, fp + 0x1C<32>, r27, r28, r27 + 4<32>, r31, out r19_22, out r21_23, out r22_24, out r23_25, out r24_26, out r25_27, out r26_28, out r27_29, out r28_30, out r29_31, out r31_34)
	r19Out = r19_22
	r21Out = r21_23
	r22Out = r22_24
	r23Out = r23_25
	r24Out = r24_26
	r25Out = r25_27
	r26Out = r26_28
	r27Out = r27_29
	r28Out = r28_30
	r29Out = r29_31
	r31Out = r31_34
	return r3_32
fn0001F0F4_exit:


word32 fn0001F10C(word32 r19, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r30, word32 r31, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001EEC8
//      fn0001F0F4
// MayUse:  r19:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r31
// Trashed: C r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r8
// Preserved: r1
fn0001F10C_entry:
	ptr32 fp
	word32 dwLoc2C
	word32 dwLoc28
	word32 dwLoc24
	word32 dwLoc20
	word32 dwLoc1C
	word32 dwLoc18
	word32 dwLoc14
	word32 dwLoc10
	word32 dwLoc0C
	word32 dwLoc04
	word32 r1_110 = fp
l0001F10C:
	word32 r21_16
	word32 r3_18
	word32 r3_5 = Mem4[r30:word32]
	branch Test(EQ,r28) l0001F134_ds_t
l0001F134_ds_t:
	r21_16 = r26 + r3_5 * 0x100<32>
l0001F15C:
	r3_18 = Mem4[r1_110 + 2632<i32>:word32]
l0001F134_ds_f:
	r21_16 = r26 + r3_5 * 0x100<32>
l0001F138:
	branch Test(GE,Mem4[r3_5 * 0x100<32> + r26:word32]) l0001F140_ds_t
l0001F140_ds_t:
	r3_18 = Mem4[r1_110 + 2632<i32>:word32]
l0001F160:
	word32 r4_101
	branch r3_18 < r28 l0001F168_ds_t
l0001F168_ds_t:
l0001F168_ds_f:
	word32 r4_28 = Mem4[r1_110 + 2644<i32>:word32]
l0001F16C:
	word32 r29_31 = r21_16 + r4_28
	word32 r21_32 = r21_16 + Mem4[r1_110 + 2640<i32>:word32]
l0001F1AC:
	word32 r27_76
	word32 r23_75
	word32 r24_74
	word32 r22_73
	word32 r19_69
	word32 r25_67
	word32 r31_64
	word32 r26_62
	word32 r28_61
	word32 r30_59
	word32 r4_35 = Mem34[r29_31:word32]
	branch Test(GE,r4_35) l0001F1B8_ds_t
l0001F1B8_ds_t:
	word32 r6_39 = r4_35 ^ r22
l0001F17C:
	branch Test(EQ,r6_39) l0001F180_ds_t
l0001F180_ds_t:
	word32 r3_41 = Mem34[r1_110 + 2636<i32>:word32]
l0001F284:
	branch Test(NE,r3_41) l0001F184
l0001F288:
	Mem43[r29_31:word32] = r24
l0001F180_ds_f:
l0001F1B8_ds_f:
l0001F1BC:
	branch Test(NE,r22) l0001F184
l0001F184:
	word32 r4_48 = Mem34[r31:word32]
	word32 r6_49 = Mem34[r4_48:word32]
	Mem52[r4_48 + 20<i32>:word32] = r25
	Mem56[r4_48 + 24<i32>:word32] = r19
	word32 r5_65
	call 0x0001F190<p32> + r6_49 (retsize: 0;)
		uses: r15:0x0001F190<p32>,r19:r19_69,r22:r22_73,r23:r23_75,r24:r24_74,r25:r25_67,r26:r26_62,r27:r27_76,r28:r28_61,r30:r30_59,r31:r31_64,r4:r4_48,r5:r5_65,r6:r6_49
		defs: r1:r1_58,r19:r19_69,r21:r21_63,r22:r22_73,r23:r23_75,r24:r24_74,r25:r25_67,r26:r26_62,r27:r27_76,r28:r28_61,r29:r29_72,r30:r30_59,r31:r31_64,r5:r5_65
	Mem79[r29_31:word32] = r24_74
	r30 = r30_59
	r23 = r23_75
	r31 = r31_64
	r25 = r25_67
	r19 = r19_69
	r28 = r28_61
	r26 = r26_62
	r22 = r22_73
	r24 = r24_74
	r27 = r27_76
l0001F19C:
	r29_31 = r29_31 + 4<32>
	branch Test(EQ,r21_32 ^ r29_31) l0001F1A8_ds_t
l0001F1A8_ds_t:
	r4_101 = Mem86[r1_110 + 2628<i32>:word32]
l0001F1A8_ds_f:
l0001F1C0:
	Mem89[r29_31:word32] = r24
	r29_31 = r29_31 + 4<32>
	branch Test(NE,r21_32 ^ r29_31) l0001F1AC
l0001F1D0:
	r4_101 = Mem93[r1_110 + 2628<i32>:word32]
l0001F1D4:
	r30 = r30 + 4<32>
	word32 r4_102 = r4_101 + 1<32>
	branch r4_102 < r23 l0001F1E4_ds_t
l0001F1E4_ds_t:
	Mem111[r1_110 + 2628<i32>:word32] = r4_102
l0001F1E4_ds_f:
	Mem112[r1_110 + 2628<i32>:word32] = r4_102
l0001F1E8:
	word32 r3_313
	r19 = r19 + 1<32>
	branch Mem114[r31 + 212<i32>:word32] >= r19 l0001F1F8_ds_t
l0001F1F8_ds_t:
	r27 = r27 + 0x24<32>
l0001EF98:
	word32 r27_157
	word32 r23_156
	word32 r19_150
	word32 r25_148
	word32 r31_145
	r23 = Mem122[r27:word32]
	branch 3<32> -u (r23 + 0xFFFFFFFF<32>) >= 0<32> l0001EFAC_ds_t
l0001EFAC_ds_t:
l0001EFAC_ds_f:
l0001EFB0:
	word32 r3_130 = Mem122[r31:word32]
	word32 r4_132 = Mem122[r3_130:word32]
	Mem133[r3_130 + 28<i32>:word32] = 4<32>
	Mem135[r3_130 + 20<i32>:word32] = 0x1A<32>
	Mem137[r3_130 + 24<i32>:word32] = r23
	word32 r30_140
	word32 r28_142
	word32 r26_143
	word32 r22_154
	word32 r24_155
	call 0x0001EFC8<p32> + r4_132 (retsize: 0;)
		uses: r15:0x0001EFC8<p32>,r19:r19_150,r22:r22_154,r23:r23_156,r24:r24_155,r25:r25_148,r26:r26_143,r27:r27_157,r28:r28_142,r3:r3_130,r30:r30_140,r31:r31_145,r4:r4_132,r5:r31_129,r6:0x1A<32>
		defs: r1:r1_139,r19:r19_150,r22:r22_154,r23:r23_156,r24:r24_155,r25:r25_148,r26:r26_143,r27:r27_157,r28:r28_142,r30:r30_140,r31:r31_145
	r27 = r27_157
	r27 = r27_157
	r31 = r31_145
	r23 = r23_156
	r19 = r19_150
	r19 = r19_150
	r25 = r25_148
	r25 = r25_148
	r31 = r31_145
	r23 = r23_156
	branch Test(LE,r23_156) l0001F048
l0001EFD4:
	word32 r22_161 = r27
	word32 r21_162 = 0<32>
l0001EFDC:
	word32 r24_165 = Mem787[r22_161 + 4<i32>:word32]
	branch Test(LT,r24_165) l0001EFE4_ds_t
l0001EFE4_ds_t:
l0001EFE4_ds_f:
l0001EFE8:
	branch r24_165 < Mem787[r31 + 56<i32>:word32] l0001F00C
l0001F00C:
	branch Test(EQ,r21_162) l0001F010_ds_t
l0001F010_ds_t:
l0001F010_ds_f:
l0001F014:
	branch Mem787[r22_161:word32] < r24_165 l0001F020_ds_t
l0001F020_ds_t:
l0001F038:
	r21_162 = r21_162 + 1<32>
	branch Test(NE,r23 ^ r21_162) l0001F044_ds_t
l0001F044_ds_t:
	r22_161 = r22_161 + 4<32>
l0001F044_ds_f:
l0001F048:
	word32 r4_190 = Mem188[r27 + 24<i32>:word32]
	word32 r3_193 = Mem188[r31 + 280<i32>:word32]
	r28 = Mem188[r27 + 20<i32>:word32]
	Mem199[r1_110 + 2632<i32>:word32] = r4_190
	r22 = Mem199[r27 + 28<i32>:word32]
	branch Test(EQ,r3_193) l0001F060_ds_t
l0001F060_ds_t:
	word32 r24_201 = Mem199[r27 + 32<i32>:word32]
l0001F290:
	branch Test(NE,(-r28 | r28) >>u 31<i32>) l0001F31C_ds_t
l0001F31C_ds_t:
l0001F31C_ds_f:
	word32 r6_237 = Mem199[r1_110 + 2632<i32>:word32]
l0001F320:
	branch Test(NE,(-(r6_237 ^ 0x3F<32>) | r6_237 ^ 0x3F<32>) >>u 31<i32>) l0001F3B0_ds_t
l0001F3B0_ds_t:
l0001F3B0_ds_f:
	word32 r22_274 = r22 | r24_201
l0001F3B4:
	branch Test(EQ,r22_274) l0001F3D0
l0001F3D0:
	branch Test(LE,r23) l0001F1E8
l0001F3D4:
	word32 r23_279 = r27 + 4<32>
	word32 r22_280 = r27 + (r23 + 1<32>) * 4<32>
	word32 r26_281 = r1_110 + 0x1C<32>
l0001F3F0:
	word32 r21_285 = Mem284[r23_279:word32]
	branch Test(EQ,Mem284[r26_281 + r21_285 * 4<32> + 2560<i32>:word32]) l0001F40C_ds_t
l0001F40C_ds_t:
	r23_279 = r23_279 + 4<32>
l0001F428:
	word32 r21_295 = r26_281 + r21_285 * 4<32>
	branch Test(NE,r22_280 ^ r23_279) l0001F438_ds_t
l0001F438_ds_t:
	Mem299[r21_295 + 2560<i32>:word32] = 1<32>
l0001F438_ds_f:
	Mem300[r21_295 + 2560<i32>:word32] = 1<32>
l0001F43C:
	r19 = r19 + 1<32>
	branch Mem300[r31 + 212<i32>:word32] >= r19 l0001F44C_ds_t
l0001F44C_ds_t:
	r27 = r27 + 0x24<32>
l0001F44C_ds_f:
l0001F450:
	r3_313 = Mem300[r31 + 280<i32>:word32]
l0001F40C_ds_f:
l0001F410:
	word32 r3_315 = Mem284[r31:word32]
	word32 r4_317 = Mem284[r3_315:word32]
	Mem318[r3_315 + 20<i32>:word32] = 0x13<32>
	Mem320[r3_315 + 24<i32>:word32] = r19
	word32 r30_323
	word32 r28_325
	word32 r26_326
	word32 r31_328
	word32 r5_329
	word32 r25_331
	word32 r19_333
	word32 r22_337
	word32 r24_338
	word32 r23_339
	word32 r27_340
	call 0x0001F420<p32> + r4_317 (retsize: 0;)
		uses: r15:0x0001F420<p32>,r19:r19_333,r22:r22_337,r23:r23_339,r24:r24_338,r25:r25_331,r26:r26_326,r27:r27_340,r28:r28_325,r3:r3_315,r30:r30_323,r31:r31_328,r4:r4_317,r5:r5_329,r6:0x13<32>
		defs: r19:r19_333,r22:r22_337,r23:r23_339,r24:r24_338,r25:r25_331,r26:r26_326,r27:r27_340,r28:r28_325,r30:r30_323,r31:r31_328,r5:r5_329
l0001F3B8:
	word32 r3_345 = Mem199[r31:word32]
	word32 r4_347 = Mem199[r3_345:word32]
	Mem356[r3_345 + 20<i32>:word32] = r25
	Mem359[r3_345 + 24<i32>:word32] = r19
	word32 r30_362
	word32 r28_364
	word32 r26_365
	word32 r31_367
	word32 r25_370
	word32 r19_372
	word32 r6_374
	word32 r22_376
	word32 r24_377
	word32 r23_378
	word32 r27_379
	call 0x0001F3C8<p32> + r4_347 (retsize: 0;)
		uses: r15:0x0001F3C8<p32>,r19:r19_372,r22:r22_376,r23:r23_378,r24:r24_377,r25:r25_370,r26:r26_365,r27:r27_379,r28:r28_364,r3:r3_345,r30:r30_362,r31:r31_367,r4:r4_347,r5:r31_191,r6:r6_374
		defs: r19:r19_372,r22:r22_376,r23:r23_378,r24:r24_377,r25:r25_370,r26:r26_365,r27:r27_379,r28:r28_364,r30:r30_362,r31:r31_367,r6:r6_374
l0001F060_ds_f:
	r24 = Mem199[r27 + 32<i32>:word32]
l0001F064:
	word32 r27_448
	word32 r23_447
	word32 r24_446
	word32 r22_445
	word32 r19_441
	word32 r25_439
	word32 r31_436
	word32 r28_433
	word32 r27_416
	word32 r23_415
	word32 r24_414
	word32 r22_413
	word32 r19_409
	word32 r25_407
	word32 r31_404
	word32 r28_401
	branch 0x3F<32> -u r28 < 0<32> l0001F08C
l0001F070:
	branch r4_190 < r28 l0001F08C
l0001F078:
	branch r4_190 > 0x3F<32> l0001F080_ds_t
l0001F080_ds_t:
l0001F080_ds_f:
l0001F084:
	branch 0xA<32> -u r22 >= 0<32> l0001F468
l0001F468:
	branch 0xA<32> -u r24 >= 0<32> l0001F470_ds_t
l0001F470_ds_t:
l0001F470_ds_f:
l0001F474:
	word32 r3_393 = Mem199[r31:word32]
	word32 r4_394 = Mem199[r3_393:word32]
	Mem395[r3_393 + 20<i32>:word32] = r25
	Mem397[r3_393 + 24<i32>:word32] = r19
	word32 r30_399
	word32 r26_402
	word32 r5_405
	word32 r6_411
	call 0x0001F480<p32> + r4_394 (retsize: 0;)
		uses: r15:0x0001F480<p32>,r19:r19_409,r22:r22_413,r23:r23_415,r24:r24_414,r25:r25_407,r26:r26_402,r27:r27_416,r28:r28_401,r3:r3_393,r30:r30_399,r31:r31_404,r4:r4_394,r5:r5_405,r6:r6_411
		defs: r1:r1_398,r19:r19_409,r22:r22_413,r23:r23_415,r24:r24_414,r25:r25_407,r26:r26_402,r27:r27_416,r28:r28_401,r30:r30_399,r31:r31_404,r5:r5_405,r6:r6_411
	r28 = r28_401
	r23 = r23_415
	r22 = r22_413
	r24 = r24_414
	r27 = r27_416
	r31 = r31_404
	r25 = r25_407
	r19 = r19_409
l0001F08C:
	word32 r3_421 = Mem199[r31:word32]
	word32 r4_423 = Mem199[r3_421:word32]
	Mem425[r3_421 + 20<i32>:word32] = r25
	Mem428[r3_421 + 24<i32>:word32] = r19
	word32 r30_431
	word32 r26_434
	word32 r6_443
	call 0x0001F09C<p32> + r4_423 (retsize: 0;)
		uses: r15:0x0001F09C<p32>,r19:r19_441,r22:r22_445,r23:r23_447,r24:r24_446,r25:r25_439,r26:r26_434,r27:r27_448,r28:r28_433,r3:r3_421,r30:r30_431,r31:r31_436,r4:r4_423,r5:r31_191,r6:r6_443
		defs: r1:r1_430,r19:r19_441,r22:r22_445,r23:r23_447,r24:r24_446,r25:r25_439,r26:r26_434,r27:r27_448,r28:r28_433,r30:r30_431,r31:r31_436,r6:r6_443
	r28 = r28_433
	r23 = r23_447
	r22 = r22_445
	r24 = r24_446
	r27 = r27_448
	r31 = r31_436
	r25 = r25_439
	r19 = r19_441
l0001F0A4:
	word32 r5_459
	word32 r4_457
	branch Test(NE,r28) l0001F0A8_ds_t
l0001F0A8_ds_t:
	word32 r3_453 = r23 ^ 1<32>
l0001F458:
	branch Test(NE,r3_453) l0001F45C_ds_t
l0001F45C_ds_t:
l0001F45C_ds_f:
	r4_457 = Mem455[r1_110 + 2632<i32>:word32]
l0001F460:
	r5_459 = r22 + 0xFFFFFFFF<32>
l0001F0A8_ds_f:
l0001F0AC:
	branch Test(EQ,Mem455[r1_110 + 2632<i32>:word32]) l0001F0CC
l0001F0CC:
	branch Test(LE,r23) l0001F0D0_ds_t
l0001F0D0_ds_t:
l0001F0D0_ds_f:
	r4_457 = Mem455[r1_110 + 2632<i32>:word32]
l0001F0D4:
	r5_459 = r22 + 0xFFFFFFFF<32>
l0001F0D8:
	Mem473[r1_110 + 2640<i32>:word32] = (r4_457 + 1<32>) * 4<32>
	Mem475[r1_110 + 2644<i32>:word32] = r28 * 4<32>
	Mem483[r1_110 + 2628<i32>:word32] = 0<32>
	Mem485[r1_110 + 2636<i32>:word32] = r5_459 ^ r24
	r30 = r27 + 4<32>
	r26 = r1_110 + 0x1C<32>
l0001F0B4:
	word32 r3_489 = Mem455[r31:word32]
	word32 r4_491 = Mem455[r3_489:word32]
	Mem494[r3_489 + 20<i32>:word32] = r25
	Mem498[r3_489 + 24<i32>:word32] = r19
	word32 r30_501
	word32 r28_503
	word32 r26_504
	word32 r31_506
	word32 r25_509
	word32 r19_511
	word32 r6_513
	word32 r22_515
	word32 r24_516
	word32 r23_517
	word32 r27_518
	call 0x0001F0C4<p32> + r4_491 (retsize: 0;)
		uses: r15:0x0001F0C4<p32>,r19:r19_511,r22:r22_515,r23:r23_517,r24:r24_516,r25:r25_509,r26:r26_504,r27:r27_518,r28:r28_503,r3:r3_489,r30:r30_501,r31:r31_506,r4:r4_491,r5:r31_487,r6:r6_513
		defs: r19:r19_511,r22:r22_515,r23:r23_517,r24:r24_516,r25:r25_509,r26:r26_504,r27:r27_518,r28:r28_503,r30:r30_501,r31:r31_506,r6:r6_513
l0001F020_ds_f:
l0001F024:
	word32 r3_522 = Mem787[r31:word32]
	word32 r4_523 = Mem787[r3_522:word32]
	Mem524[r3_522 + 20<i32>:word32] = 0x13<32>
	Mem526[r3_522 + 24<i32>:word32] = r19
	word32 r30_528
	word32 r28_530
	word32 r26_531
	word32 r31_533
	word32 r5_534
	word32 r25_536
	word32 r19_538
	word32 r6_540
	word32 r22_542
	word32 r24_543
	word32 r23_544
	word32 r27_545
	call 0x0001F030<p32> + r4_523 (retsize: 0;)
		uses: r15:0x0001F030<p32>,r19:r19_538,r22:r22_542,r23:r23_544,r24:r24_543,r25:r25_536,r26:r26_531,r27:r27_545,r28:r28_530,r3:r3_522,r30:r30_528,r31:r31_533,r4:r4_523,r5:r5_534,r6:r6_540
		defs: r19:r19_538,r22:r22_542,r23:r23_544,r24:r24_543,r25:r25_536,r26:r26_531,r27:r27_545,r28:r28_530,r30:r30_528,r31:r31_533,r5:r5_534,r6:r6_540
l0001EFF4:
	word32 r3_550 = Mem787[r31:word32]
	word32 r4_552 = Mem787[r3_550:word32]
	Mem553[r3_550 + 20<i32>:word32] = 0x13<32>
	Mem556[r3_550 + 24<i32>:word32] = r19
	word32 r30_559
	word32 r28_561
	word32 r26_562
	word32 r31_564
	word32 r5_565
	word32 r25_567
	word32 r19_569
	word32 r22_573
	word32 r24_574
	word32 r23_575
	word32 r27_576
	call 0x0001F004<p32> + r4_552 (retsize: 0;)
		uses: r15:0x0001F004<p32>,r19:r19_569,r22:r22_573,r23:r23_575,r24:r24_574,r25:r25_567,r26:r26_562,r27:r27_576,r28:r28_561,r3:r3_550,r30:r30_559,r31:r31_564,r4:r4_552,r5:r5_565,r6:0x13<32>
		defs: r19:r19_569,r22:r22_573,r23:r23_575,r24:r24_574,r25:r25_567,r26:r26_562,r27:r27_576,r28:r28_561,r30:r30_559,r31:r31_564,r5:r5_565
l0001F1F8_ds_f:
l0001F1FC:
	r3_313 = Mem114[r31 + 280<i32>:word32]
l0001F200:
	word32 r19_636
	branch Test(EQ,r3_313) l0001F204_ds_t
l0001F204_ds_t:
	word32 r8_584 = Mem583[r31 + 56<i32>:word32]
l0001F4C8:
	branch Test(LE,r8_584) l0001F4CC_ds_t
l0001F4CC_ds_t:
l0001F4CC_ds_f:
	word32 r19_588 = r1_110 + 0xA1C<32>
l0001F4D0:
	word32 r21_589 = 0<32>
l0001F4D4:
	word32 r22_590 = 0x2D<32>
l0001F4D8:
	word32 r22_621
	word32 r19_617
	word32 r31_612
	r3_313 = Mem592[r19_588:word32]
	r21_589 = r21_589 + 1<32>
	branch Test(NE,r3_313) l0001F4E8_ds_t
l0001F4E8_ds_t:
	r19_588 = r19_588 + 4<32>
l0001F4E8_ds_f:
l0001F4EC:
	word32 r3_600 = Mem592[r31:word32]
	word32 r4_601 = Mem592[r3_600:word32]
	Mem604[r3_600 + 20<i32>:word32] = r22_590
	word32 r30_607
	word32 r28_609
	word32 r26_610
	word32 r5_613
	word32 r25_615
	word32 r6_619
	word32 r24_622
	word32 r23_623
	word32 r27_624
	call 0x0001F4F4<p32> + r4_601 (retsize: 0;)
		uses: r15:0x0001F4F4<p32>,r19:r19_617,r22:r22_621,r23:r23_623,r24:r24_622,r25:r25_615,r26:r26_610,r27:r27_624,r28:r28_609,r3:r3_600,r30:r30_607,r31:r31_612,r4:r4_601,r5:r5_613,r6:r6_619
		defs: r1:r1_606,r19:r19_617,r21:r21_611,r22:r22_621,r23:r23_623,r24:r24_622,r25:r25_615,r26:r26_610,r27:r27_624,r28:r28_609,r3:r3_608,r30:r30_607,r31:r31_612,r5:r5_613,r6:r6_619
	r8_584 = Mem604[r31_612 + 56<i32>:word32]
	r19_588 = r19_617
	r31 = r31_612
	r22_590 = r22_621
l0001F500:
	branch r21_589 < r8_584 l0001F508_ds_t
l0001F508_ds_t:
l0001F508_ds_f:
l0001F50C:
	r19_636 = Mem633[r1_110 + 2648<i32>:word32]
l0001F204_ds_f:
	word32 r8_637 = Mem583[r31 + 56<i32>:word32]
l0001F208:
	branch Test(LE,r8_637) l0001F20C_ds_t
l0001F20C_ds_t:
l0001F20C_ds_f:
	word32 r26_639 = r1_110 + 0x1C<32>
l0001F210:
	word32 r19_640 = 0<32>
l0001F214:
	word32 r21_641 = 0x2D<32>
l0001F218:
	word32 r19_668
	word32 r31_663
	word32 r26_661
	r3_313 = Mem643[r26_639:word32]
	r19_640 = r19_640 + 1<32>
	branch Test(GE,r3_313) l0001F224_ds_t
l0001F224_ds_t:
	r26_639 = r26_639 + 0x100<32>
l0001F224_ds_f:
l0001F228:
	word32 r3_650 = Mem643[r31:word32]
	word32 r4_652 = Mem643[r3_650:word32]
	Mem655[r3_650 + 20<i32>:word32] = r21_641
	word32 r30_658
	word32 r28_660
	word32 r25_666
	word32 r6_670
	word32 r22_672
	word32 r24_673
	word32 r23_674
	word32 r27_675
	call 0x0001F234<p32> + r4_652 (retsize: 0;)
		uses: r15:0x0001F234<p32>,r19:r19_668,r22:r22_672,r23:r23_674,r24:r24_673,r25:r25_666,r26:r26_661,r27:r27_675,r28:r28_660,r3:r3_650,r30:r30_658,r31:r31_663,r4:r4_652,r5:r31_649,r6:r6_670
		defs: r1:r1_657,r19:r19_668,r21:r21_662,r22:r22_672,r23:r23_674,r24:r24_673,r25:r25_666,r26:r26_661,r27:r27_675,r28:r28_660,r3:r3_659,r30:r30_658,r31:r31_663,r6:r6_670
	r8_637 = Mem655[r31_663 + 56<i32>:word32]
	r19_640 = r19_668
	r26_639 = r26_661
	r31 = r31_663
l0001F240:
	branch r19_640 < r8_637 l0001F218
l0001F248:
l0001F24C:
	r19_636 = Mem685[r1_110 + 2648<i32>:word32]
l0001F250:
	r19Out = r19_636
	r21Out = dwLoc2C
	r22Out = dwLoc28
	r23Out = dwLoc24
	r24Out = dwLoc20
	r25Out = dwLoc1C
	r26Out = dwLoc18
	r27Out = dwLoc14
	r28Out = dwLoc10
	r29Out = dwLoc0C
	r31Out = dwLoc04
	return r3_313
fn0001F10C_exit:
l0001F140_ds_f:
l0001F144:
	word32 r3_711 = Mem4[r31:word32]
	word32 r4_713 = Mem4[r3_711:word32]
	Mem721[r3_711 + 20<i32>:word32] = r25
	Mem730[r3_711 + 24<i32>:word32] = r19
	word32 r30_732
	word32 r28_734
	word32 r26_735
	word32 r6_744
	word32 r22_746
	word32 r24_747
	word32 r23_748
	word32 r27_749
	call 0x0001F154<p32> + r4_713 (retsize: 0;)
		uses: r15:0x0001F154<p32>,r19:r19_723,r22:r22_746,r23:r23_748,r24:r24_747,r25:r25_714,r26:r26_735,r27:r27_749,r28:r28_734,r3:r3_711,r30:r30_732,r31:r31_704,r4:r4_713,r5:r31_704,r6:r6_744
		defs: r22:r22_746,r23:r23_748,r24:r24_747,r26:r26_735,r27:r27_749,r28:r28_734,r30:r30_732,r6:r6_744


word32 fn0001F60C(word32 r3, word32 r19, ptr32 & r19Out, ptr32 & r21Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002283C
//      fn000261AC
// MayUse:  r19:[0..31] r3:[0..31]
// LiveOut: r19 r21 r3
// Trashed: r1 r15 r19 r21 r3
// Preserved:
fn0001F60C_entry:
	word32 dwArg1C
	word32 dwArg20
l0001F60C:
	Mem6[r19 + 24<i32>:word32] = r3 + 1<32>
	r19Out = dwArg1C
	r21Out = dwArg20
	return r3 + 1<32>
fn0001F60C_exit:


void fn0001F628(word32 r0, word32 r5, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r1 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r4 r5 r6 r7 r8
// Preserved:
fn0001F628_entry:
l0001F628:
l0001F638_thunk_fn0001F63C:
	word32 r7_43
	word32 r8_44
	word32 r19_45
	word32 r21_46
	word32 r22_47
	word32 r23_48
	word32 r24_49
	word32 r25_50
	word32 r26_51
	word32 r27_52
	word32 r28_53
	word32 r29_54
	fn0001F63C(r0, r5, r21, r22, r23, r24, r26, r27, r28, r29, r19, r25, out r7_43, out r8_44, out r19_45, out r21_46, out r22_47, out r23_48, out r24_49, out r25_50, out r26_51, out r27_52, out r28_53, out r29_54)
	return
fn0001F628_exit:


word32 fn0001F63C(word32 r0, word32 r5, word32 r21, word32 r22, word32 r23, word32 r24, word32 r26, word32 r27, word32 r28, word32 r29, word32 dwArg1C, word32 dwArg30, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001F628
//      fn0002225C
//      fn0002283C
// MayUse:  r0:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r5:[0..31] Stack +001C:[0..31] Stack +0030:[0..31]
// LiveOut: r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r6 r7 r8
// Trashed: r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r4 r5 r6 r7 r8
// Preserved: r1 r10 r11 r12 r20 r30 r31 r9
fn0001F63C_entry:
	word32 dwLoc28
	word32 dwLoc24
	word32 dwLoc20
	word32 dwLoc1C
	word32 dwLoc18
	word32 dwLoc14
	word32 dwLoc10
	word32 dwLoc0C
	word32 dwLoc08
	word32 dwLoc04
l0001F63C:
	word32 r8_125
	word32 r7_124
	word32 r6_123
	word32 r19_107
	word32 r25_113
	word32 r3_18 = Mem16[r5 + 296<i32>:word32]
	branch Test(EQ,r3_18 ^ 1<32>) l0001F664_ds_t
l0001F664_ds_t:
	r25_113 = r5
l0001F800:
	word32 r19_21 = Mem16[r5 + 300<i32>:word32]
	word32 r5_23 = Mem16[r19_21 + 32<i32>:word32]
	word32 r4_24 = Mem16[r19_21 + 28<i32>:word32]
	word32 r21_25 = Mem16[r19_21 + 12<i32>:word32]
	Mem26[r5 + 320<i32>:word32] = r5_23
	Mem27[r5 + 316<i32>:word32] = r4_24
	Mem28[r19_21 + 64<i32>:word32] = 8<32>
	Mem30[r19_21 + 52<i32>:word32] = r3_18
	Mem31[r19_21 + 56<i32>:word32] = r3_18
	Mem32[r19_21 + 60<i32>:word32] = r3_18
	Mem34[r19_21 + 68<i32>:word32] = r3_18
	word32 r22_607
	word32 r23_608
	word32 r21_39
	word32 r3_42 = fn0001EA08(r0, r3_18, r5_23, r19_21, r21_25, r22, r23, out r6_123, out r7_124, out r8_125, out r19_107, out r21_39, out r22_607, out r23_608)
	branch Test(EQ,r3_42) l0001F844
l0001F840:
	r21_39 = r3_42
l0001F844:
	Mem51[r19_107 + 72<i32>:word32] = r21_39
	Mem54[r5 + 324<i32>:word32] = 1<32>
	Mem56[r5 + 328<i32>:word32] = r0
l0001F664_ds_f:
l0001F668:
	branch 3<32> -u (r3_18 + 0xFFFFFFFF<32>) >= 0<32> l0001F698
l0001F698:
	word32 r21_76
	word32 r25_80
	word32 r29_84
	word32 r4_609
	word32 r6_610
	word32 r7_611
	word32 r8_612
	word32 r19_613
	word32 r22_614
	word32 r23_615
	word32 r26_617
	word32 r28_619
	word32 r30_620
	word32 r27_618
	word32 r24_616
	word32 r3_85 = fn0001CCF0(Mem16[r5 + 284<i32>:word32] * 8<32>, r3_18 + 0xFFFFFFFF<32>, r21, r5, r29, dwArg1C, r22, r23, dwArg30, out r4_609, out r6_610, out r7_611, out r8_612, out r19_613, out r21_76, out r22_614, out r23_615, out r24_616, out r25_80, out r26_617, out r27_618, out r28_619, out r29_84, out r30_620)
	word32 r6_94 = Mem16[r25_80 + 288<i32>:word32]
	Mem96[r25_80 + 316<i32>:word32] = r3_85
	word32 r29_629
	word32 r30_630
	word32 r21_622
	word32 r28_628
	word32 r23_624
	word32 r26_626
	word32 r27_627
	word32 r24_625
	word32 r22_623
	word32 r4_621
	word32 r3_118 = fn0001CCF0(r3_85, r6_94 * 8<32>, r21_76, r25_80, r29_84, dwArg1C, r22, r23, dwArg30, out r4_621, out r6_123, out r7_124, out r8_125, out r19_107, out r21_622, out r22_623, out r23_624, out r24_625, out r25_113, out r26_626, out r27_627, out r28_628, out r29_629, out r30_630)
	word32 r4_127 = Mem96[r25_113 + 296<i32>:word32]
	Mem128[r25_113 + 320<i32>:word32] = r3_118
	branch Test(LE,r4_127) l0001F6F0_ds_t
l0001F6F0_ds_t:
	Mem129[r25_113 + 324<i32>:word32] = r0
l0001F6F0_ds_f:
	Mem130[r25_113 + 324<i32>:word32] = r0
l0001F6F4:
	word32 r28_131 = 0<32>
	word32 r26_132 = 0<32>
	word32 r21_133 = r25_113 + 0x12C<32>
	word32 r22_134 = 0xA<32>
	word32 r23_135 = 0xD<32>
l0001F708:
	word32 r24_138 = Mem137[r21_133:word32]
	word32 r27_139 = Mem137[r24_138 + 8<i32>:word32]
	word32 r29_140 = Mem137[r24_138 + 12<i32>:word32]
	Mem143[r24_138 + 52<i32>:word32] = r27_139
	Mem145[r24_138 + 56<i32>:word32] = r29_140
	word32 r19_636
	word32 r6_635
	word32 r4_634
	word32 r3_152 = fn0001E908(r0, r27_139, r19_107, out r4_634, out r6_635, out r19_636)
	word32 r5_160 = Mem145[r24_138 + 28<i32>:word32]
	Mem162[r24_138 + 60<i32>:word32] = r3_152
	Mem164[r24_138 + 64<i32>:word32] = r27_139 * 8<32>
	word32 r19_169
	word32 r21_170
	word32 r22_171
	word32 r23_172
	word32 r7_638
	word32 r6_637
	word32 r8_639
	word32 r3_173 = fn0001EA08(r0, r27_139 * 8<32>, r5_160, r3_152, r21_133, r22_134, r23_135, out r6_637, out r7_638, out r8_639, out r19_169, out r21_170, out r22_171, out r23_172)
	branch Test(EQ,r3_173) l0001F758_ds_t
l0001F758_ds_t:
l0001F758_ds_f:
l0001F75C:
	r27_139 = r3_173
l0001F760:
	word32 r5_184 = Mem164[r24_138 + 32<i32>:word32]
	Mem187[r24_138 + 68<i32>:word32] = r27_139
	word32 r21_197
	word32 r7_633
	word32 r3_200 = fn0001EA08(r0, r3_173, r5_184, r19_169, r21_170, r22_171, r23_172, out r6_123, out r7_633, out r8_125, out r19_107, out r21_197, out r22_134, out r23_135)
	branch Test(EQ,r3_200) l0001F778
l0001F774:
	r29_140 = r3_200
l0001F778:
	word32 r28_211 = r19_107 + r28_131
	branch r22_134 >= r28_211 l0001F784_ds_t
l0001F784_ds_t:
	Mem217[r24_138 + 72<i32>:word32] = r29_140
l0001F79C:
	branch Test(LE,r19_107) l0001F7A0_ds_t
l0001F7A0_ds_t:
l0001F7A0_ds_f:
l0001F7A4:
	r6_123 = Mem217[r25_113 + 324<i32>:word32]
	word32 r3_230 = r25_113 + (r6_123 + 0x52<32>) * 4<32>
	word32 r4_231 = r25_113 + (r19_107 + (r6_123 + 0x52<32>)) * 4<32>
l0001F7C8:
	Mem234[r3_230:word32] = r26_132
	r3_230 = r3_230 + 4<32>
	branch Test(NE,r4_231 ^ r3_230) l0001F7C8
l0001F7D8:
	Mem243[r25_113 + 324<i32>:word32] = r6_123 + 1<32> + (r19_107 + 0xFFFFFFFF<32>)
l0001F7E4:
	r7_124 = r19_107 + 0xFFFFFFFF<32>
	r26_132 = r26_132 + 1<32>
	branch r26_132 >= Mem245[r25_113 + 296<i32>:word32] l0001F7F4_ds_t
l0001F7F4_ds_t:
l0001F854:
	word32 r5_259 = Mem258[r25_113 + 248<i32>:word32]
	branch Test(LE,r5_259) l0001F85C_ds_t
l0001F85C_ds_t:
l0001F85C_ds_f:
l0001F860:
	word32 r4_631
	word32 r19_632
	word32 r3_281 = fn0001E908(r0, r5_259, r19_107, out r4_631, out r6_123, out r19_632)
	branch r3_281 > 0xFFFFFFFE<32> l0001F8B4
l0001F8B4:
	Mem288[r25_113 + 244<i32>:word32] = 0xFFFFFFFF<32>
l0001F87C:
	Mem289[r25_113 + 244<i32>:word32] = r3_281
l0001F880:
l0001F884:
	r7Out = r7_124
	r8Out = r8_125
	r19Out = dwLoc28
	r21Out = dwLoc24
	r22Out = dwLoc20
	r23Out = dwLoc1C
	r24Out = dwLoc18
	r25Out = dwLoc14
	r26Out = dwLoc10
	r27Out = dwLoc0C
	r28Out = dwLoc08
	r29Out = dwLoc04
	return r6_123
fn0001F63C_exit:
l0001F7F4_ds_f:
	r21_133 = r21_197 + 4<32>
l0001F7F8:
	r28_131 = Mem245[r25_113 + 324<i32>:word32]
l0001F784_ds_f:
	Mem308[r24_138 + 72<i32>:word32] = r29_140
l0001F788:
	word32 r3_309 = Mem308[r25_113:word32]
	word32 r4_311 = Mem308[r3_309:word32]
	Mem314[r3_309 + 20<i32>:word32] = r23_135
	word32 r10_336
	word32 r11_337
	word32 r12_338
	word32 r20_339
	word32 r30_340
	word32 r31_341
	word32 r9_342
	call 0x0001F794<p32> + r4_311 (retsize: 0;)
		uses: r0:r0,r10:r10_336,r11:r11_337,r12:r12_338,r15:0x0001F794<p32>,r20:r20_339,r21:r21_197,r22:r22_198,r23:r23_199,r24:r24_138,r26:r26_250,r27:r27_186,r28:r28_211,r29:r29_214,r3:r3_309,r30:r30_340,r31:r31_341,r4:r4_311,r5:r25_113,r9:r9_342
		defs: r10:r10_336,r11:r11_337,r12:r12_338,r20:r20_339,r30:r30_340,r31:r31_341,r9:r9_342
l0001F678:
	word32 r4_343 = Mem16[r5:word32]
	Mem345[r4_343 + 20<i32>:word32] = 0x1A<32>
	Mem347[r4_343 + 28<i32>:word32] = 4<32>
	word32 r6_348 = Mem347[r4_343:word32]
	Mem350[r4_343 + 24<i32>:word32] = r3_18
	word32 r10_371
	word32 r11_372
	word32 r12_373
	word32 r20_374
	word32 r30_375
	word32 r31_376
	word32 r9_377
	call 0x0001F690<p32> + r6_348 (retsize: 0;)
		uses: r0:r0,r10:r10_371,r11:r11_372,r12:r12_373,r15:0x0001F690<p32>,r20:r20_374,r21:r21,r22:r22,r23:r23,r24:r24,r26:r26,r27:r27,r28:r28,r29:r29,r30:r30_375,r31:r31_376,r4:r4_343,r5:r5,r6:r6_348,r9:r9_377,Stack +001C:dwArg1C,Stack +0030:dwArg30
		defs: r10:r10_371,r11:r11_372,r12:r12_373,r20:r20_374,r30:r30_375,r31:r31_376,r9:r9_377


void fn0001F8C4(word32 r0, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r10 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19
fn0001F8C4_entry:
l0001F8C4:
	word32 r9_9 = Mem7[r5 + 216<i32>:word32]
	branch Test(EQ,r9_9) l0001F8D8_ds_t
l0001F8D8_ds_t:
	word32 r19_10 = r5
l0001F994:
	word32 r3_11 = Mem7[r5 + 56<i32>:word32]
	branch r3_11 <= 4<32> l0001F9A4_ds_t
l0001F9A4_ds_t:
l0001F9A4_ds_f:
l0001F9A8:
	word32 r4_16 = Mem7[r5:word32]
	Mem17[r4_16 + 20<i32>:word32] = 0x1A<32>
	word32 r7_18 = Mem17[r4_16:word32]
	Mem19[r4_16 + 24<i32>:word32] = r3_11
	Mem21[r4_16 + 28<i32>:word32] = 4<32>
	word32 r10_30
	word32 r8_31
	word32 r6_32
	word32 r18_33
	call 0x0001F9B8<p32> + r7_18 (retsize: 0;)
		uses: r0:r0_34,r10:r10_30,r15:0x0001F9B8<p32>,r18:r18_33,r19:r5,r4:r4_16,r5:r5,r6:r6_32,r7:r7_18,r8:r8_31
		defs: r0:r0_34,r10:r10_30,r18:r18_33,r19:r19_23,r6:r6_32,r8:r8_31
	r3_11 = Mem21[r19_10 + 56<i32>:word32]
l0001F9C4:
	branch Test(LE,r3_11) l0001F9C8_ds_t
l0001F9C8_ds_t:
	Mem38[r19_10 + 296<i32>:word32] = r3_11
l0001F9C8_ds_f:
	Mem39[r19_10 + 296<i32>:word32] = r3_11
l0001F9CC:
	word32 r5_42 = Mem39[r19_10 + 64<i32>:word32]
	word32 r4_44 = r19_10 + 0x12C<32>
	word32 r3_45 = r19_10 + (r3_11 + 0x4B<32>) * 4<32>
l0001F9E4:
	Mem48[r4_44:word32] = r5_42
	r4_44 = r4_44 + 4<32>
	branch Test(NE,r4_44 ^ r3_45) l0001F9F4_ds_t
l0001F9F4_ds_t:
	r5_42 = r5_42 + 0x54<32>
l0001F9F4_ds_f:
l0001F9F8:
	Mem57[r19_10 + 372<i32>:word32] = 0x3F<32>
	Mem62[r19_10 + 368<i32>:word32] = r0
	Mem63[r19_10 + 376<i32>:word32] = r0
	Mem64[r19_10 + 380<i32>:word32] = r0
	return
l0001F8D8_ds_f:
l0001F8DC:
	word32 r4_73 = Mem7[Mem7[r5 + 384<i32>:word32] + 32<i32>:word32]
	word32 r4_80 = Mem7[r4_73 * 0x24<32> + r9_9:word32]
	word32 r9_81 = r9_9 + r4_73 * 0x24<32>
	branch Test(LE,r4_80) l0001F908_ds_t
l0001F908_ds_t:
	Mem82[r5 + 296<i32>:word32] = r4_80
l0001F908_ds_f:
	Mem83[r5 + 296<i32>:word32] = r4_80
l0001F90C:
	word32 r10_87 = Mem83[r5 + 64<i32>:word32]
	word32 r8_109 = r9_81 + 4<32>
	word32 r5_89 = r5 + 0x12C<32>
	word32 r7_90 = r5 + (r4_80 + 0x4B<32>) * 4<32>
l0001F928:
	r5_89 = r5_89 + 4<32>
	Mem106[r5_89 - 4<i32>:word32] = r10_87 + Mem92[r8_109:word32] * 0x54<32>
	branch Test(NE,r5_89 ^ r7_90) l0001F960_ds_t
l0001F960_ds_t:
	r8_109 = r8_109 + 4<32>
l0001F960_ds_f:
l0001F964:
	word32 r7_115 = Mem113[r9_81 + 24<i32>:word32]
	Mem118[r5 + 368<i32>:word32] = Mem113[r9_81 + 20<i32>:word32]
	word32 r3_119 = Mem118[r9_81 + 28<i32>:word32]
	word32 r9_120 = Mem118[r9_81 + 32<i32>:word32]
	Mem121[r5 + 372<i32>:word32] = r7_115
	Mem122[r5 + 376<i32>:word32] = r3_119
	Mem123[r5 + 380<i32>:word32] = r9_120
	return
fn0001F8C4_exit:


void fn0001FCE0(word32 r5, word32 r6, word32 r15, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r29)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r29:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r0 r10 r11 r12 r18 r20 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27
fn0001FCE0_entry:
l0001FCE0:
	word32 r3_61
	word32 r3_27 = Mem21[Mem21[r5 + 4<i32>:word32]:word32]
	word32 r3_41
	word32 r21_130
	word32 r22_132
	word32 r24_134
	word32 r26_136
	word32 r19_110
	word32 r25_128
	word32 r1_140
	word32 r0_104
	word32 r27_138
	call 0x0001FD1C<p32> + r3_27 (retsize: 0;)
		uses: r15:0x0001FD1C<p32>,r19:r5,r21:r21,r22:r22,r23:r23,r24:r24,r25:r6,r26:r26,r27:r27,r29:r29,r3:r3_27,r5:r5,r6:1<32>,r7:0x24<32>,Stack +0000:r15,Stack +001C:r19,Stack +0020:r21,Stack +0024:r22,Stack +0028:r23,Stack +002C:r24,Stack +0030:r25,Stack +0034:r26,Stack +0038:r27
		defs: r0:r0_46,r1:r1_31,r19:r19_32,r21:r21_36,r22:r22_37,r24:r24_38,r25:r25_34,r26:r26_39,r27:r27_40,r3:r3_41
	word32 r3_106 = Mem21[r19_110 + 32<i32>:word32]
	Mem51[r19_110 + 384<i32>:word32] = r3_41
	Mem52[r3_41:word32] = 0x609C<32>
	Mem55[r3_41 + 16<i32>:word32] = r0_104
	Mem56[r3_41 + 4<i32>:word32] = 0x5BA4<32>
	word32 r23_126 = r3_41
	branch Test(NE,r3_106) l0001FD4C_ds_t
l0001FD4C_ds_t:
	Mem57[r3_41 + 8<i32>:word32] = 0x5BE8<32>
l0002008C:
	branch Test(EQ,Mem57[r19_110 + 28<i32>:word32]) l0001FD50
l00020094:
	branch Test(LE,Mem57[r19_110 + 56<i32>:word32]) l0001FD50
l0002009C:
	branch Test(GT,Mem57[r19_110 + 36<i32>:word32]) l0001FD6C
l000200A4:
	r3_61 = Mem57[r19_110:word32]
l0001FD4C_ds_f:
	Mem62[r3_41 + 8<i32>:word32] = 0x5BE8<32>
l0001FD50:
	r3_61 = Mem64[r19_110:word32]
l0001FD54:
	Mem68[r3_61 + 20<i32>:word32] = 0x20<32>
	word32 r3_69 = Mem68[r3_61:word32]
	call 0x0001FD60<p32> + r3_69 (retsize: 0;)
		uses: r15:0x0001FD60<p32>,r19:r19_32,r21:r21_36,r22:r22_37,r23:r3_41,r24:r24_38,r25:r25_34,r26:r26_39,r27:r27_40,r29:r29,r3:r3_69,r5:r19_32,r6:0x20<32>
		defs: r0:r0_104,r1:r1_89,r19:r19_90,r21:r21_94,r22:r22_95,r23:r23_91,r24:r24_96,r25:r25_92,r26:r26_97,r27:r27_98
	r3_106 = Mem68[r19_110 + 32<i32>:word32]
l0001FD6C:
	word32 r3_114
	branch r3_106 <= 0xFFFFFFDC<32> l00020078
l00020078:
	branch Mem111[r19_110 + 28<i32>:word32] <= 0xFFFFFFDC<32> l0001FDA0
l00020084:
	r3_114 = Mem111[r19_110:word32]
l0001FD7C:
	r3_114 = Mem111[r19_110:word32]
l0001FD80:
	Mem119[r3_114 + 20<i32>:word32] = 0x29<32>
	Mem120[r3_114 + 24<i32>:word32] = 0xFFFFFFDC<32>
	word32 r3_121 = Mem120[r3_114:word32]
	call 0x0001FD98<p32> + r3_121 (retsize: 0;)
		uses: r15:0x0001FD98<p32>,r19:r19_110,r21:r21_130,r22:r22_132,r23:r23_126,r24:r24_134,r25:r25_128,r26:r26_136,r27:r27_138,r29:r29,r3:r3_121,r4:0x29<32>,r5:r19_110,r6:0xFFFFFFDC<32>
		defs: r0:r0_156,r1:r1_141,r19:r19_142,r21:r21_146,r22:r22_147,r23:r23_143,r24:r24_148,r25:r25_144,r26:r26_149,r27:r27_150
l0001FDA0:
	word32 r4_160 = Mem159[r19_110 + 52<i32>:word32]
	branch Test(EQ,r4_160 ^ 8<32>) l0001FDAC_ds_t
l0001FDAC_ds_t:
l0001FDC8:
	word32 r6_166
	word32 r7_163 = Mem159[r19_110 + 56<i32>:word32]
	word32 r4_164 = 0xA<32>
	branch r7_163 <= 0xA<32> l0001FDD8_ds_t
l0001FDD8_ds_t:
	r6_166 = 0x1A<32>
l0001FDD8_ds_f:
l0001FDDC:
	word32 r3_168 = Mem159[r19_110:word32]
	Mem170[r3_168 + 20<i32>:word32] = 0x1A<32>
	word32 r6_171 = Mem170[r3_168:word32]
	Mem172[r3_168 + 24<i32>:word32] = r7_163
	Mem174[r3_168 + 28<i32>:word32] = 0xA<32>
	call 0x0001FDF0<p32> + r6_171 (retsize: 0;)
		uses: r15:0x0001FDF0<p32>,r19:r19_158,r21:r21_177,r22:r22_178,r23:r23_175,r24:r24_179,r25:r25_176,r26:r26_180,r27:r27_181,r29:r29,r3:r3_168,r5:r19_158,r6:r6_171
		defs: r0:r0_198,r1:r1_183,r19:r19_184,r23:r23_185,r25:r25_186,r27:r27_192,r4:r4_197,r6:r6_195
	r7_163 = Mem174[r19_110 + 56<i32>:word32]
l0001FDFC:
	word32 r21_206
	Mem203[r19_110 + 284<i32>:word32] = 1<32>
	Mem204[r19_110 + 288<i32>:word32] = 1<32>
	word32 r3_201 = 1<32>
	branch Test(LE,r7_163) l0001FE0C_ds_t
l0001FE0C_ds_t:
	r21_206 = Mem204[r19_110 + 64<i32>:word32]
l000200AC:
l0001FE0C_ds_f:
	word32 r21_208 = Mem204[r19_110 + 64<i32>:word32]
l0001FE10:
	r21_206 = r21_208 + 8<32>
	word32 r22_210 = 0<32>
	word32 r24_211 = 3<32>
	word32 r26_212 = 0x12<32>
l0001FE20:
	word32 r3_215 = Mem214[r21_206:word32]
	branch r24_211 -u (r3_215 + 0xFFFFFFFF<32>) < 0<32> l0001FE34_ds_t
l0001FE34_ds_t:
	r22_210 = r22_210 + 1<32>
l0001FE34_ds_f:
	r22_210 = r22_210 + 1<32>
l0001FE38:
	r4_164 = Mem214[r21_206 + 4<i32>:word32]
	r6_166 = r4_164 + 0xFFFFFFFF<32>
	branch r24_211 -u (r4_164 + 0xFFFFFFFF<32>) >= 0<32> l0001FE64
l0001FE48:
	word32 r3_229 = Mem214[r19_110:word32]
	word32 r4_230 = Mem214[r3_229:word32]
	Mem234[r3_229 + 20<i32>:word32] = r26_212
	call 0x0001FE50<p32> + r4_230 (retsize: 0;)
		uses: r15:0x0001FE50<p32>,r19:r19_216,r21:r21_213,r22:r22_240,r23:r23_236,r24:r24_219,r25:r25_238,r26:r26_233,r27:r27_243,r29:r29,r3:r3_229,r4:r4_230,r5:r19_216,r6:r6_245
		defs: r0:r0_264,r1:r1_249,r19:r19_250,r21:r21_254,r22:r22_255,r23:r23_251,r24:r24_256,r25:r25_252,r26:r26_257,r27:r27_258
	r3_215 = Mem234[r21_206:word32]
	r4_164 = Mem234[r21_206 + 4<i32>:word32]
	r7_163 = Mem234[r19_110 + 56<i32>:word32]
l0001FE64:
	r6_166 = Mem270[r19_110 + 284<i32>:word32]
	branch r6_166 >= r3_215 l0001FE70_ds_t
l0001FE70_ds_t:
	r21_206 = r21_206 + 0x54<32>
l0001FE70_ds_f:
	r21_206 = r21_206 + 0x54<32>
l0001FE74:
	r6_166 = r3_215
l0001FE78:
	r3_201 = Mem270[r19_110 + 288<i32>:word32]
	branch r3_201 >= r4_164 l0001FE84_ds_t
l0001FE84_ds_t:
	Mem285[r19_110 + 284<i32>:word32] = r6_166
l0001FE84_ds_f:
	Mem286[r19_110 + 284<i32>:word32] = r6_166
l0001FE88:
	r3_201 = r4_164
l0001FE8C:
	branch r22_210 < r7_163 l0001FE94_ds_t
l0001FE94_ds_t:
	Mem298[r19_110 + 288<i32>:word32] = r3_201
l0001FE94_ds_f:
	Mem299[r19_110 + 288<i32>:word32] = r3_201
l0001FE98:
	branch Test(LE,r7_163) l0001FE9C_ds_t
l0001FE9C_ds_t:
l000200B4:
l0001FE9C_ds_f:
	word32 r22_304 = Mem299[r19_110 + 64<i32>:word32]
l0001FEA0:
	word32 r22_305 = r22_304 + 4<32>
	word32 r27_306 = 0<32>
	word32 r26_307 = 8<32>
l0001FEB8:
	Mem311[r22_305:word32] = r27_306
	Mem313[r22_305 + 32<i32>:word32] = r26_307
	word32 r1_323 = <invalid>
	word32 r4_328
	word32 r19_343
	word32 r22_346
	word32 r25_349
	word32 r29_353
	word32 r6_1060
	word32 r19_1061
	word32 r4_1062
	word32 r26_1069
	word32 r27_1070
	word32 r30_1072
	word32 r28_1071
	word32 r6_1063
	word32 r7_1064
	word32 r21_1066
	word32 r23_1067
	word32 r8_1065
	word32 r24_1068
	Mem363[r22_346 - 60<i32>:word32] = fn0001CCF0(fn0001E908(r0_104, Mem313[r19_110 + 28<i32>:word32], r19_110, out r4_328, out r6_1060, out r19_1061), r4_328, r6_166 * 8<32>, r25_128, r29, Mem313[r1_323 + 28<i32>:word32], Mem313[r1_323 + 36<i32>:word32], Mem313[r1_323 + 40<i32>:word32], Mem313[r1_323 + 48<i32>:word32], out r4_1062, out r6_1063, out r7_1064, out r8_1065, out r19_343, out r21_1066, out r22_346, out r23_1067, out r24_1068, out r25_349, out r26_1069, out r27_1070, out r28_1071, out r29_353, out r30_1072)
	word32 r1_371 = <invalid>
	word32 r4_376
	word32 r19_387
	word32 r22_390
	word32 r25_393
	word32 r29_397
	word32 r4_1075
	word32 r21_1079
	word32 r23_1080
	word32 r24_1081
	word32 r26_1082
	word32 r27_1083
	word32 r30_1085
	word32 r28_1084
	word32 r6_1076
	word32 r7_1077
	word32 r8_1078
	word32 r6_1073
	word32 r19_1074
	Mem407[r22_390 - 56<i32>:word32] = fn0001CCF0(fn0001E908(r0_104, Mem363[r19_343 + 32<i32>:word32], r19_343, out r4_376, out r6_1073, out r19_1074), r4_376, Mem363[r19_343 + 288<i32>:word32] * 8<32>, r25_349, r29_353, Mem363[r1_371 + 28<i32>:word32], Mem363[r1_371 + 36<i32>:word32], Mem363[r1_371 + 40<i32>:word32], Mem363[r1_371 + 48<i32>:word32], out r4_1075, out r6_1076, out r7_1077, out r8_1078, out r19_387, out r21_1079, out r22_390, out r23_1080, out r24_1081, out r25_393, out r26_1082, out r27_1083, out r28_1084, out r29_397, out r30_1085)
	word32 r1_412 = <invalid>
	word32 r4_417
	word32 r19_428
	word32 r22_431
	word32 r25_434
	word32 r29_438
	word32 r24_1094
	word32 r30_1098
	word32 r26_1095
	word32 r27_1096
	word32 r28_1097
	word32 r4_1088
	word32 r6_1089
	word32 r8_1091
	word32 r21_1092
	word32 r23_1093
	word32 r7_1090
	word32 r6_1086
	word32 r19_1087
	Mem448[r22_431 - 48<i32>:word32] = fn0001CCF0(fn0001E908(r0_104, Mem407[r19_387 + 28<i32>:word32], r19_387, out r4_417, out r6_1086, out r19_1087), r4_417, Mem407[r19_387 + 284<i32>:word32], r25_393, r29_397, Mem407[r1_412 + 28<i32>:word32], Mem407[r1_412 + 36<i32>:word32], Mem407[r1_412 + 40<i32>:word32], Mem407[r1_412 + 48<i32>:word32], out r4_1088, out r6_1089, out r7_1090, out r8_1091, out r19_428, out r21_1092, out r22_431, out r23_1093, out r24_1094, out r25_434, out r26_1095, out r27_1096, out r28_1097, out r29_438, out r30_1098)
	r1_140 = <invalid>
	word32 r4_458
	word32 r24_474
	word32 r6_1099
	word32 r19_1100
	word32 r6_1101
	word32 r7_1102
	word32 r23_1104
	word32 r28_1105
	word32 r8_1103
	word32 r30_1106
	Mem489[r22_305 - 44<i32>:word32] = fn0001CCF0(fn0001E908(r0_104, Mem448[r19_428 + 32<i32>:word32], r19_428, out r4_458, out r6_1099, out r19_1100), r4_458, Mem448[r19_428 + 288<i32>:word32], r25_434, r29_438, Mem448[r1_140 + 28<i32>:word32], Mem448[r1_140 + 36<i32>:word32], Mem448[r1_140 + 40<i32>:word32], Mem448[r1_140 + 48<i32>:word32], out r4_164, out r6_1101, out r7_1102, out r8_1103, out r19_110, out r21_206, out r22_305, out r23_1104, out r24_474, out r25_128, out r26_307, out r27_306, out r28_1105, out r29, out r30_1106)
	Mem490[r22_305 - 40<i32>:word32] = r24_474
	r3_201 = Mem490[r19_110 + 56<i32>:word32]
	branch r27_306 < r3_201 l0001FEB4
l0001FEB4:
	r6_166 = Mem490[r19_110 + 284<i32>:word32]
l0001FF8C:
l0001FF9C:
	word32 r3_607
	word32 r21_539
	word32 r22_540
	word32 r24_542
	word32 r26_544
	word32 r27_545
	word32 r28_546
	word32 r29_547
	word32 r30_549
	word32 r4_1056
	word32 r6_1057
	word32 r7_1058
	word32 r8_1059
	word32 r25_543
	word32 r19_537
	word32 r23_541
	word32 r3_548 = fn0001CCF0(r3_201, r4_164, r21_206, r25_128, r29, Mem500[r1_140 + 28<i32>:word32], Mem500[r1_140 + 36<i32>:word32], Mem500[r1_140 + 40<i32>:word32], Mem500[r1_140 + 48<i32>:word32], out r4_1056, out r6_1057, out r7_1058, out r8_1059, out r19_537, out r21_539, out r22_540, out r23_541, out r24_542, out r25_543, out r26_544, out r27_545, out r28_546, out r29_547, out r30_549)
	word32 r4_557 = Mem500[r19_537 + 216<i32>:word32]
	branch Test(EQ,r4_557) l0001FFB0_ds_t
l0001FFB0_ds_t:
	Mem558[r19_537 + 292<i32>:word32] = r3_548
l0001FFEC:
	Mem560[r19_537 + 280<i32>:word32] = r4_557
	Mem561[r19_537 + 212<i32>:word32] = 1<32>
l0001FFB0_ds_f:
	Mem562[r19_537 + 292<i32>:word32] = r3_548
l0001FFB4:
	r19_537 = fn0001EEC8(r0_104, r19_537, r19_537, r21_539, r22_540, r23_541, r24_542, r25_543, r26_544, r27_545, r28_546, r29_547, r30_549, out r23_541, out r25_543)
	branch Test(EQ,Mem562[r19_537 + 280<i32>:word32]) l0001FFC4_ds_t
l0001FFC4_ds_t:
l0001FFF8:
	branch Test(EQ,r25_543) l0001FFFC_ds_t
l0001FFFC_ds_t:
	word32 r3_601 = Mem600[r19_537 + 228<i32>:word32]
l0002004C:
	Mem603[r23_541 + 20<i32>:word32] = r25_543
	Mem604[r23_541 + 32<i32>:word32] = r25_543
	branch Test(EQ,r3_601) l00020058_ds_t
l00020058_ds_t:
	Mem605[r23_541 + 24<i32>:word32] = r25_543
l00020058_ds_f:
	Mem606[r23_541 + 24<i32>:word32] = r25_543
l0002005C:
	r3_607 = Mem606[r19_537 + 212<i32>:word32]
l0001FFFC_ds_f:
	word32 r3_608 = Mem600[r19_537 + 228<i32>:word32]
l00020000:
	branch Test(NE,r3_608) l00020004_ds_t
l00020004_ds_t:
l00020004_ds_f:
l00020008:
	Mem612[r23_541 + 20<i32>:word32] = 2<32>
	Mem613[r23_541 + 32<i32>:word32] = r3_608
	Mem614[r23_541 + 24<i32>:word32] = r3_608
l00020018:
	Mem619[r23_541 + 28<i32>:word32] = Mem616[r19_537 + 212<i32>:word32]
l0001FFC4_ds_f:
l0001FFC8:
	branch Test(NE,r25_543) l0001FFCC_ds_t
l0001FFCC_ds_t:
	Mem621[r19_537 + 228<i32>:word32] = 1<32>
l00020064:
l00020068:
	Mem625[r23_541 + 20<i32>:word32] = 1<32>
	Mem628[r23_541 + 32<i32>:word32] = r0_104
	Mem629[r23_541 + 24<i32>:word32] = r0_104
l0001FFCC_ds_f:
	Mem630[r19_537 + 228<i32>:word32] = 1<32>
l0001FFD0:
	Mem631[r23_541 + 20<i32>:word32] = r25_543
	Mem632[r23_541 + 32<i32>:word32] = r25_543
	Mem633[r23_541 + 24<i32>:word32] = r25_543
l0001FFDC:
	r3_607 = Mem636[r19_537 + 212<i32>:word32]
l0001FFE0:
	Mem642[r23_541 + 28<i32>:word32] = r3_607 * 2<32>
l00020020:
	return
fn0001FCE0_exit:
l0001FDAC_ds_f:
l0001FDB0:
	word32 r3_661 = Mem159[r19_110:word32]
	Mem663[r3_661 + 20<i32>:word32] = 0xF<32>
	word32 r6_664 = Mem663[r3_661:word32]
	Mem666[r3_661 + 24<i32>:word32] = r4_160
	call 0x0001FDC0<p32> + r6_664 (retsize: 0;)
		uses: r15:0x0001FDC0<p32>,r19:r19_158,r21:r21_177,r22:r22_178,r23:r23_175,r24:r24_179,r25:r25_176,r26:r26_180,r27:r27_181,r29:r29,r3:r3_661,r5:r19_158,r6:r6_664


word32 fn000200C4(word32 r5, word32 r6, word32 r15, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00020134
//      fn00020198
//      fn00020310
//      fn00020468
// MayUse:  r15:[0..31] r19:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r6
// Trashed: r3 r4 r5 r6 r8
// Preserved: r1 r15 r19
fn000200C4_entry:
l000200C4:
	word32 r3_5 = Mem0[r5 + 24<i32>:word32]
	word32 r4_6 = Mem0[r3_5:word32]
	Mem8[r3_5:word32] = r4_6 + 1<32>
	Mem11[r4_6:byte] = SLICE(r6, byte, 0)
	word32 r4_12 = Mem11[r3_5 + 4<i32>:word32]
	branch Test(NE,r4_12 + 0xFFFFFFFF<32>) l000200E4_ds_t
l000200E4_ds_t:
	Mem14[r3_5 + 4<i32>:word32] = r4_12 + 0xFFFFFFFF<32>
l0002012C:
	return r6
l000200E4_ds_f:
	Mem15[r3_5 + 4<i32>:word32] = r4_12 + 0xFFFFFFFF<32>
l000200E8:
	word32 r3_21 = Mem20[r3_5 + 12<i32>:word32]
	word32 r3_25
	word32 r6_29
	word32 r19_30
	call 0x000200F8<p32> + r3_21 (retsize: 0;)
		uses: r15:0x000200F8<p32>,r19:r5,r3:r3_21,r5:r5,r6:r6,Stack +0000:r15,Stack +001C:r19
		defs: r19:r19_30,r3:r3_25,r6:r6_29
	branch Test(NE,r3_25) l00020104_ds_t
l00020104_ds_t:
l0002011C:
	return r6_29
fn000200C4_exit:
l00020104_ds_f:
l00020108:
	word32 r3_37 = Mem20[r19_30:word32]
	Mem38[r3_37 + 20<i32>:word32] = 0x18<32>
	word32 r3_39 = Mem38[r3_37:word32]
	call 0x00020114<p32> + r3_39 (retsize: 0;)
		uses: r15:0x00020114<p32>,r19:r19_30,r3:r3_39,r5:r19_30,r6:r6_29


word32 fn00020134(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00020198
//      fn00020310
//      fn00020468
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r6
// Trashed: C r3 r4 r5 r6 r8
// Preserved: r1 r15 r19 r21
fn00020134_entry:
l00020134:
	fn000200C4(r5, r6 >> 8<i32> & 0xFF<32>, 0x00020170<p32>, r6)
	return fn000200C4(r5, r6 & 0xFF<32>, 0x0002017C<p32>, r6)
fn00020134_exit:


void fn00020198(word32 r5, word32 r6, word32 r19, word32 r23, word32 r25)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r19:[0..31] r23:[0..31] r25:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r18 r3 r4 r5 r6 r7 r8
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25
fn00020198_entry:
l00020198:
	word32 r3_193
	word32 r22_36
	word32 r24_23 = Mem20[(r6 + 0x11<32>) * 4<32> + r5:word32]
	word32 r21_120 = r6
	branch Test(EQ,r24_23) l000201D0_ds_t
l000201D0_ds_t:
l000202F0:
	word32 r3_26 = Mem20[r5:word32]
	Mem28[r3_26 + 20<i32>:word32] = 0x34<32>
	word32 r4_29 = Mem28[r3_26:word32]
	Mem31[r3_26 + 24<i32>:word32] = r6
	call 0x00020300<p32> + r4_29 (retsize: 0;)
		uses: r15:0x00020300<p32>,r19:r19,r21:r6,r22:r5,r23:r23,r24:r24_23,r25:r25,r3:r3_26,r4:r4_29,r5:r5,r6:r6
		defs: r19:r19_38,r21:r21_35,r22:r22_36,r24:r24_40
	r3_193 = r24_23
l000201D0_ds_f:
	r22_36 = r5
l000201D4:
	r3_193 = r24_23
l000201D8:
	word32 r7_52 = r24_23 + 0x100<32>
	word32 r23_53 = 0<32>
l000201E8:
	word32 r4_63
	r3_193 = r3_193 + 4<32>
	branch 0xFF<32> -u Mem195[r3_193:word32] >= 0<32> l000201F8_ds_t
l000201F8_ds_t:
	r4_63 = r3_193 ^ r7_52
l000201F8_ds_f:
	r4_63 = r3_193 ^ r7_52
l000201FC:
	r23_53 = 1<32>
l00020200:
	branch Test(NE,r4_63) l000201E8
l00020204:
	branch Test(EQ,Mem195[r24_23 + 256<i32>:word32]) l0002020C_ds_t
l0002020C_ds_t:
l00020238:
	word32 r6_103
	fn000200C4(r22_36, 0xFF<32>, 0x00020238<p32>, r19)
	fn000200C4(r22_36, 0xDB<32>, 0x00020244<p32>, r19)
	branch Test(NE,r23_53) l00020250_ds_t
l00020250_ds_t:
	r6_103 = 0x83<32>
l00020250_ds_f:
l00020254:
	r6_103 = 0x43<32>
l00020258:
	fn00020134(r22_36, r6_103)
	fn000200C4(r22_36, r23_53 * 0x10<32> + r21_120, 0x0002027C<p32>, 0x7860<32>)
	word32 r19_128 = 0x7860<32>
l00020288:
	word32 r21_138
	word32 r3_130 = Mem195[r19_128:word32]
	r19_128 = r19_128 + 4<32>
	branch Test(EQ,r23_53) l000202A0_ds_t
l000202A0_ds_t:
	r21_138 = Mem195[r3_130 * 4<32> + r24_23:word32]
l000202A0_ds_f:
	r21_138 = Mem195[r3_130 * 4<32> + r24_23:word32]
l000202A4:
	fn000200C4(r22_36, r21_138 >>u 8<i32>, 0x000202C8<p32>, r19_128)
l000202D4:
	fn000200C4(r22_36, r21_138 & 0xFF<32>, 0x000202D4<p32>, r19_128)
	branch Test(NE,r19_128 ^ 0x7960<32>) l000202E4_ds_t
l000202E4_ds_t:
l000202E4_ds_f:
l000202E8:
	Mem172[r24_23 + 256<i32>:word32] = 1<32>
l0002020C_ds_f:
l00020210:
	return
fn00020198_exit:


void fn00020310(word32 r5, word32 r6, word32 r7, word32 r19, word32 r21, word32 r22)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r19:[0..31] r21:[0..31] r22:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: C r15 r3 r4 r5 r6 r7 r8
// Preserved: r1 r19 r21 r22 r23 r24 r25
fn00020310_entry:
l00020310:
	word32 r22_103
	word32 r25_117
	word32 r5_66
	word32 r24_26
	word32 r23_19 = r5
	branch Test(EQ,r7) l00020338_ds_t
l00020338_ds_t:
	r25_117 = r6
l00020384:
	r24_26 = Mem17[(r6 + 0x15<32>) * 4<32> + r5:word32]
	branch Test(NE,r24_26) l00020354
l00020338_ds_f:
l0002033C:
	r24_26 = Mem17[(r6 + 0x19<32>) * 4<32> + r5:word32]
	branch Test(EQ,r24_26) l00020350_ds_t
l00020350_ds_t:
	r25_117 = r6 + 0x10<32>
l00020398:
	word32 r3_35 = Mem17[r5:word32]
	Mem38[r3_35 + 20<i32>:word32] = 0x32<32>
	word32 r4_39 = Mem38[r3_35:word32]
	Mem42[r3_35 + 24<i32>:word32] = r25_117
	word32 r8_201
	call 0x000203AC<p32> + r4_39 (retsize: 0;)
		uses: r15:0x000203AC<p32>,r19:r19,r21:r21,r22:r22,r23:r5,r24:r24_46,r25:r25_41,r3:r3_35,r4:r4_39,r5:r5,r6:r6,r7:r7,r8:r8_201
		defs: r23:r23_51,r24:r24_57,r25:r25_52,r8:r8_201
	r22_103 = Mem42[r24_26 + 548<i32>:word32]
	branch Test(NE,r22_103) l000203BC_ds_t
l000203BC_ds_t:
l000203BC_ds_f:
l000203C0:
	r5_66 = r23_19
l00020350_ds_f:
	r25_117 = r6 + 0x10<32>
l00020354:
	r22_103 = Mem17[r24_26 + 548<i32>:word32]
	branch Test(EQ,r22_103) l0002035C_ds_t
l0002035C_ds_t:
	r5_66 = r5
l000203C4:
	word32 r19_128 = r24_26 + 2<32>
	fn000200C4(r5_66, 0xFF<32>, 0x000203C8<p32>, r19_128)
	fn000200C4(r23_19, 0xC4<32>, 0x000203D8<p32>, r19_128)
	word32 r21_87 = r19_128
	word32 r5_93 = r24_26 + 0x22<32>
l000203E4:
	r21_87 = r21_87 + 2<32>
	word32 r3_102 = CONVERT(Mem192[r21_87:word16], word16, int32)
	branch Test(NE,r21_87 ^ r5_93) l000203F8_ds_t
l000203F8_ds_t:
	r22_103 = r22_103 + r3_102
l000203F8_ds_f:
	word32 r22_105 = r22_103 + r3_102
l000203FC:
	fn00020134(r23_19, r22_105 + 0x13<32>)
	fn000200C4(r23_19, r25_117, 0x0002040C<p32>, r19_128)
l00020414:
	r19_128 = r19_128 + 2<32>
	fn000200C4(r23_19, CONVERT(Mem192[r19_128:word16], word16, int32), 0x00020420<p32>, r19_128)
	branch Test(NE,r19_128 ^ r21_87) l00020414
l00020430:
	branch Test(LE,r22_105) l00020434_ds_t
l00020434_ds_t:
l00020434_ds_f:
l00020438:
	word32 r22_151 = r24_26 + (r22_105 + 0x11<32>) * 2<32>
l00020440:
	r19_128 = r19_128 + 2<32>
	fn000200C4(r23_19, CONVERT(Mem192[r19_128:word16], word16, int32), 0x0002044C<p32>, r19_128)
	branch Test(NE,r19_128 ^ r22_151) l00020440
l0002045C:
	Mem172[r24_26 + 548<i32>:word32] = 1<32>
l0002035C_ds_f:
l00020360:
l00020364:
	return
fn00020310_exit:


void fn00020468(word32 r5, word32 r6, word32 r22)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r22:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r18 r3 r4 r5 r6 r8
// Preserved: r1 r15 r19 r21 r22
fn00020468_entry:
l00020468:
	word32 r3_48
	fn000200C4(r5, 0xFF<32>, 0x00020484<p32>, r5)
	fn000200C4(r5, r6, 0x00020490<p32>, r5)
	word32 r6_40 = fn00020134(r5, Mem17[r5 + 56<i32>:word32] * 3<32> + 8<32>)
	word32 r19_64 = r5
	branch Mem17[r5 + 32<i32>:word32] <= 0xFFFFFFFF<32> l00020590
l00020590:
	branch Mem17[r5 + 28<i32>:word32] <= 0xFFFFFFFF<32> l000204E8
l0002059C:
	r3_48 = Mem17[r5:word32]
l000204C4:
	r3_48 = Mem17[r5:word32]
l000204C8:
	Mem52[r3_48 + 20<i32>:word32] = 0x29<32>
	Mem54[r3_48 + 24<i32>:word32] = 0xFFFFFFFF<32>
	word32 r3_55 = Mem54[r3_48:word32]
	call 0x000204E0<p32> + r3_55 (retsize: 0;)
		uses: r15:0x000204E0<p32>,r19:r5,r21:r6,r22:r22,r3:r3_55,r4:0xFFFFFFFF<32>,r5:r5,r6:r6_40
		defs: r19:r19_64
l000204E8:
	fn000200C4(r19_64, Mem76[r19_64 + 52<i32>:word32], 0x000204EC<p32>, r19_64)
	fn00020134(r19_64, Mem76[r19_64 + 32<i32>:word32])
	fn00020134(r19_64, Mem76[r19_64 + 28<i32>:word32])
	fn000200C4(r19_64, Mem76[r19_64 + 56<i32>:word32], 0x00020510<p32>, r19_64)
	branch Test(LE,Mem76[r19_64 + 56<i32>:word32]) l00020520_ds_t
l00020520_ds_t:
l00020520_ds_f:
	word32 r21_113 = Mem76[r19_64 + 64<i32>:word32]
l00020524:
	word32 r22_114 = 0<32>
l00020528:
	fn000200C4(r19_64, Mem76[r21_113:word32], 0x00020534<p32>, r19_64)
	r21_113 = r21_113 + 0x54<32>
	fn000200C4(r19_64, Mem76[r21_113 - 76<i32>:word32] * 0x10<32> + Mem76[r21_113 - 72<i32>:word32], 0x00020558<p32>, r19_64)
	fn000200C4(r19_64, Mem76[r21_113 - 68<i32>:word32], 0x00020564<p32>, r19_64)
	r22_114 = r22_114 + 1<32>
	branch r22_114 < Mem76[r19_64 + 56<i32>:word32] l00020528
l00020578:
	return
fn00020468_exit:


void fn00020DBC(word32 r5, word32 r15, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r19:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19
fn00020DBC_entry:
l00020DBC:
	word32 r3_11 = Mem10[Mem0[r5 + 4<i32>:word32]:word32]
	word32 r3_17
	word32 r19_19
	word32 r0_24
	call 0x00020DD8<p32> + r3_11 (retsize: 0;)
		uses: r15:0x00020DD8<p32>,r19:r5,r3:r3_11,r5:r5,r6:1<32>,r7:0x20<32>,Stack +0000:r15,Stack +001C:r19
		defs: r0:r0_24,r19:r19_19,r3:r3_17
	Mem26[r19_19 + 400<i32>:word32] = r3_17
	Mem27[r3_17 + 28<i32>:word32] = r0_24
	Mem28[r3_17:word32] = 0x70CC<32>
	Mem30[r3_17 + 4<i32>:word32] = 0x6C24<32>
	Mem32[r3_17 + 8<i32>:word32] = 0x6DD8<32>
	Mem34[r3_17 + 12<i32>:word32] = 0x7310<32>
	Mem36[r3_17 + 16<i32>:word32] = 0x7344<32>
	Mem38[r3_17 + 20<i32>:word32] = 0x702C<32>
	Mem40[r3_17 + 24<i32>:word32] = 0x70B0<32>
	return
fn00020DBC_exit:


void fn0002225C(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r29, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r29:[0..31] r30:[0..31] r31:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r18 r3 r4 r5 r6 r7 r8
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
fn0002225C_entry:
	ptr32 fp
	byte bLoc0138
	word32 dwLoc053C
	word32 dwLoc0528
l0002225C:
	word32 r6_116
	word32 r19_121
	word32 r1_3 = fp + 0xFFFFFAA8<32>
	word32 r28_122 = r5
	branch 3<32> -u r7 >= 0<32> l000222A8_ds_t
l000222A8_ds_t:
	r19_121 = r8
	r6_116 = r6
l000222A8_ds_f:
l000222AC:
	word32 r3_40 = Mem32[r5:word32]
	Mem42[r3_40 + 20<i32>:word32] = 0x32<32>
	word32 r4_43 = Mem42[r3_40:word32]
	Mem44[r3_40 + 24<i32>:word32] = r7
	call 0x000222C0<p32> + r4_43 (retsize: 0;)
		uses: r0:r0,r15:0x000222C0<p32>,r19:r8,r21:r21,r22:r22,r23:r23,r24:r24,r25:r25,r26:r26,r27:r27,r28:r5,r29:r29,r3:r3_40,r30:r30,r31:r31,r4:r4_43,r5:r5,r6:r6,r7:r7,r8:r8,Stack +001C:dwLoc053C,Stack +0030:dwLoc0528,Stack +0420:bLoc0138,Stack +0524:r7
		defs: r1:r1_47,r19:r19_48,r21:r21_51,r23:r23_53,r24:r24_54,r25:r25_55,r26:r26_56,r27:r27_57,r28:r28_49,r29:r29_58,r30:r30_59,r31:r31_60,r6:r6_62,r8:r8_66
	r7 = Mem46[r1_3 + 1316<i32>:word32]
l000222CC:
	word32 r22_125
	word32 r23_142
	branch Test(EQ,Mem71[r1_3 + 1376<i32>:word32]) l000222D4_ds_t
l000222D4_ds_t:
	word32 r3_74 = r7 + 0x19<32>
l000225B0:
	r22_125 = Mem71[r3_74 * 4<32> + r28_122:word32]
	branch Test(NE,r22_125) l000222EC
l000222D4_ds_f:
l000222D8:
	r22_125 = Mem71[(r7 + 0x15<32>) * 4<32> + r28_122:word32]
	branch Test(EQ,r22_125) l000225C0
l000225C0:
	word32 r3_86 = Mem71[r28_122:word32]
	Mem89[r3_86 + 20<i32>:word32] = 0x32<32>
	word32 r4_90 = Mem89[r3_86:word32]
	Mem93[r3_86 + 24<i32>:word32] = r7
	call 0x000225D4<p32> + r4_90 (retsize: 0;)
		uses: r0:r0,r15:0x000225D4<p32>,r19:r19_95,r21:r21_97,r22:r22_98,r23:r23_100,r24:r24_102,r25:r25_104,r26:r26_106,r27:r27_108,r28:r28_77,r29:r29_110,r3:r3_86,r30:r30_112,r31:r31_114,r4:r4_90,r5:r28_77,r6:r6_116,r7:r7_73,r8:r8_118
		defs: r19:r19_121,r21:r21_124,r22:r22_125,r24:r24_127,r25:r25_128,r27:r27_130,r28:r28_122,r29:r29_131,r30:r30_132,r31:r31_133,r6:r6_135,r7:r7_138,r8:r8_139
	r23_142 = Mem93[r19_121:word32]
	branch Test(NE,r23_142) l000225E4_ds_t
l000225E4_ds_t:
l000225E4_ds_f:
	r26 = 1<32>
l000222EC:
	r23_142 = Mem71[r19_121:word32]
	branch Test(EQ,r23_142) l000225E8
l000225E8:
	word32 r3_154 = Mem150[Mem150[r28_122 + 4<i32>:word32]:word32]
	word32 r19_182
	word32 r3_195
	call 0x000225F8<p32> + r3_154 (retsize: 0;)
		uses: r0:r0,r15:0x000225F8<p32>,r19:r19_157,r21:r21_158,r22:r22_160,r23:r23_162,r24:r24_163,r25:r25_165,r26:r26_167,r27:r27_169,r28:r28_148,r29:r29_171,r3:r3_154,r30:r30_173,r31:r31_175,r5:r28_148,r6:1<32>,r7:0x500<32>,r8:r8_177
		defs: r19:r19_182,r22:r22_186,r24:r24_188,r27:r27_191,r28:r28_183,r3:r3_195,r30:r30_193,r31:r31_194,r6:r6_196,r7:r7_199,r8:r8_200
	Mem204[r19_182:word32] = r3_195
	r23_142 = r3_195
l000222F4:
l000222F8:
	word32 r26_209 = 1<32>
	word32 r29_206 = 0<32>
	word32 r21_207 = 8<32>
	word32 r3_210 = 2<32>
l00022308:
	word32 r19_217 = CONVERT(Mem213[r3_210 + r22_125:word16], word16, int32)
	branch Test(LT,r19_217) l00022314_ds_t
l00022314_ds_t:
l00022314_ds_f:
	word32 r3_220 = r19_217 + r29_206
l00022318:
	branch r3_220 <= 0x100<32> l00022334
l00022334:
	branch Test(EQ,r19_217) l00022338_ds_t
l00022338_ds_t:
l00022338_ds_f:
l0002233C:
	r6_116 = CONVERT(SLICE(r26_209, int8, 0), int8, int32)
	word32 r3_230 = 0<32>
	word32 r5_231 = fp - 0x138<32> + r29_206
l0002234C:
	Mem236[r3_230 + r5_231:byte] = SLICE(r6_116, byte, 0)
	r3_230 = r3_230 + 1<32>
	branch Test(NE,r3_230 ^ r19_217) l0002234C
l0002235C:
	r29_206 = r19_217 + 0xFFFFFFFF<32> + (r29_206 + 1<32>)
l00022364:
	r26_209 = r26_209 + 1<32>
	r7 = r19_217 + 0xFFFFFFFF<32>
	word32 r19_247 = r26_209 ^ 0x11<32>
	branch Test(NE,r26_209 ^ 0x11<32>) l00022370_ds_t
l00022370_ds_t:
	r3_210 = r26_209 * 2<32>
l00022370_ds_f:
l00022374:
	Mem256[fp - 0x53C<32> + r29_206 + 1028<i32>:byte] = SLICE(r26_209, byte, 0) ^ 0x11<8>
	word32 r26_260 = CONVERT(bLoc0138, byte, int32)
	branch Test(EQ,r26_260) l0002238C_ds_t
l0002238C_ds_t:
l0002238C_ds_f:
	word32 r30_262 = r26_260
l00022390:
	r21_207 = r26_260
	word32 r25_264 = r26_209 ^ 0x11<32>
	r24 = 1<32>
	r27 = 8<32>
l000223A4:
	branch Test(NE,r21_207 ^ r30_262) l000223AC_ds_t
l000223AC_ds_t:
l00022580:
	word32 r3_276
	word32 r18_273 = r30_262 & 0x1F<32>
	branch Test(EQ,r18_273) l0002258C_ds_t
l0002258C_ds_t:
	r3_276 = 1<32>
l0002258C_ds_f:
	word32 r3_277 = 1<32>
l00022590:
	r18_273 = r18_273 + 0xFFFFFFFF<32>
	branch Test(NE,r18_273) l00022598_ds_t
l00022598_ds_t:
	r3_277 = r3_277 * 2<32>
l00022598_ds_f:
	r3_276 = r3_277 * 2<32>
l0002259C:
	branch r19_247 >= r3_276 l00022400
l000225A4:
	r19_247 = r19_247 * 2<32>
	r30_262 = r30_262 + 1<32>
l000223AC_ds_f:
	word32 r3_292 = r25_264 * 2<32>
l000223B0:
	word32 r3_296 = fp - 0x53C<32> + r3_292 * 2<32>
l000223BC:
	r25_264 = r25_264 + 1<32>
	word32 r21_302 = CONVERT(Mem300[r25_264 + (fp - 0x138<32>):byte], byte, word32)
	Mem305[r3_296:word32] = r19_247
	r21_207 = CONVERT(SLICE(r21_302, int8, 0), int8, int32)
	r19_247 = r19_247 + 1<32>
	branch Test(EQ,r21_207 ^ r30_262) l000223D8_ds_t
l000223D8_ds_t:
	r3_296 = r3_296 + 4<32>
l000223D8_ds_f:
l000223DC:
	word32 r3_316
	word32 r18_313 = r30_262 & 0x1F<32>
	branch Test(EQ,r18_313) l000223E8_ds_t
l000223E8_ds_t:
	r3_316 = 1<32>
l000223E8_ds_f:
	word32 r3_317 = 1<32>
l000223EC:
	r18_313 = r18_313 + 0xFFFFFFFF<32>
	branch Test(NE,r18_313) l000223F4_ds_t
l000223F4_ds_t:
	r3_317 = r3_317 * 2<32>
l000223F4_ds_f:
	r3_316 = r3_317 * 2<32>
l000223F8:
	branch r19_247 < r3_316 l00022414
l00022414:
	r19_247 = r19_247 * 2<32>
	branch Test(NE,r21_207) l0002241C_ds_t
l0002241C_ds_t:
	r30_262 = r30_262 + 1<32>
l0002241C_ds_f:
l00022420:
	word32 r21_452
	word32 r22_437
	word32 r23_438
	word32 r28_443
	word32 r29_444
	word32 r7_449
	word32 r8_450
	word32 r27_1151
	word32 r25_1150
	word32 r24_1149
	word32 r21_1148
	word32 r19_1147
	word32 r26_441
	word32 r6_448 = fn0001F63C(r0, r23_142 + 0x400<32>, r21_207, r22_125, r23_142, r24, r26_260, r27, r28_122, r29_206, dwLoc053C, dwLoc0528, out r7_449, out r8_450, out r19_1147, out r21_1148, out r22_437, out r23_438, out r24_1149, out r25_1150, out r26_441, out r27_1151, out r28_443, out r29_444)
	branch Test(EQ,r6) l0002243C_ds_t
l0002243C_ds_t:
	r21_452 = 0xFF<32>
l0002243C_ds_f:
l00022440:
	r21_452 = 0xF<32>
l00022444:
	branch Test(EQ,r29_444) l00022448_ds_t
l00022448_ds_t:
l00022448_ds_f:
	word32 r24_458 = fp - 0x53C<32>
l0002244C:
	word32 r22_460 = r22_437 + 0x22<32>
	word32 r27_461 = 0<32>
l00022468:
	word32 r30_503
	word32 r19_469 = CONVERT(Mem465[r22_460:word16], word16, int32)
	branch Test(NE,r19_469 >>u 31<i32>) l000224F4_ds_t
l000224F4_ds_t:
	r30_503 = r23_438 + r19_469
l000224F4_ds_f:
	r30_503 = r23_438 + r19_469
l000224F8:
	branch r21_452 < r19_469 l00022508
l00022500:
	branch Test(EQ,CONVERT(Mem465[r30_503 + 1024<i32>:byte], byte, word32)) l0002251C
l0002251C:
	Mem513[r19_469 * 4<32> + r23_438:word32] = Mem465[r24_458:word32]
	Mem518[r30_503 + 1024<i32>:byte] = SLICE(r26_441, byte, 0)
	r27_461 = r27_461 + 1<32>
	r22_460 = r22_460 + 2<32>
	branch Test(NE,r27_461 ^ r29_444) l00022540_ds_t
l00022540_ds_t:
	r24_458 = r24_458 + 4<32>
l00022460:
	r26_441 = CONVERT(Mem518[fp - 0x138<32> + r27_461:byte], byte, int32)
l00022540_ds_f:
l00022544:
	return
fn0002225C_exit:
l00022508:
	word32 r3_551 = Mem465[r28_443:word32]
	word32 r4_553 = Mem465[r3_551:word32]
	Mem557[r3_551 + 20<i32>:word32] = 8<32>
	call 0x00022514<p32> + r4_553 (retsize: 0;)
		uses: r0:r0,r15:0x00022514<p32>,r19:r19_469,r21:r21_767,r22:r22_464,r23:r23_438,r24:r24_509,r25:8<32>,r26:r26_516,r27:r27_514,r28:r28_443,r29:r29_444,r3:r3_551,r30:r30_566,r31:fp - 0x138<32>,r4:r4_553,r5:r28_443,r6:r6_448,r7:r7_449,r8:r8_450,Stack +001C:dwLoc053C,Stack +0030:dwLoc0528,Stack +0420:bLoc0138
l00022400:
	word32 r3_609 = Mem605[r28_122:word32]
	word32 r4_611 = Mem605[r3_609:word32]
	Mem614[r3_609 + 20<i32>:word32] = 8<32>
	call 0x0002240C<p32> + r4_611 (retsize: 0;)
		uses: r0:r0,r15:0x0002240C<p32>,r19:r19_615,r21:r21_616,r22:r22_757,r23:r23_340,r24:1<32>,r25:r25_624,r26:r26_260,r27:8<32>,r28:r28_389,r29:r29_253,r3:r3_609,r30:r30_269,r31:fp - 0x138<32>,r4:r4_611,r5:r28_389,r6:r6_642,r7:r19_217 + 0xFFFFFFFF<32>,r8:r8_664,Stack +001C:dwLoc053C,Stack +0030:dwLoc0528,Stack +0420:bLoc0138
l00022320:
	word32 r3_699 = Mem213[r28_122:word32]
	word32 r4_701 = Mem213[r3_699:word32]
	Mem704[r3_699 + 20<i32>:word32] = 8<32>
	call 0x0002232C<p32> + r4_701 (retsize: 0;)
		uses: r0:r0,r15:0x0002232C<p32>,r19:r19_217,r21:8<32>,r22:r22_757,r23:r23_340,r24:r24_362,r25:0x100<32>,r26:r26_227,r27:r27_377,r28:r28_389,r29:r29_218,r3:r3_699,r30:r30_715,r31:r31_721,r4:r4_701,r5:r28_389,r6:r6_643,r7:r7_727,r8:r8_664,Stack +001C:dwLoc053C,Stack +0030:dwLoc0528,Stack +0420:bLoc0138


void fn0002283C(word32 r0, word32 r5, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r5:[0..31]
// LiveOut:
// Trashed: C r10 r11 r12 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15
fn0002283C_entry:
	ptr32 fp
	struct <anonymous> tLoc6C
	word32 dwLoc0874
	word32 dwLoc0860
l0002283C:
	Mem5[&tLoc6C + 84<i32>:word32] = r23
	Mem8[&tLoc6C + 88<i32>:word32] = r24
	Mem13[&tLoc6C + 68<i32>:word32] = r19
	Mem15[&tLoc6C + 92<i32>:word32] = r25
	Mem25[&tLoc6C + 72<i32>:word32] = r20
	Mem27[&tLoc6C + 76<i32>:word32] = r21
	Mem29[&tLoc6C + 80<i32>:word32] = r22
	Mem31[&tLoc6C + 96<i32>:word32] = r26
	Mem33[&tLoc6C + 100<i32>:word32] = r27
	Mem35[&tLoc6C + 104<i32>:word32] = r28
	word32 r21_43
	word32 r22_44
	word32 r23_45
	word32 r24_46
	word32 r26_48
	word32 r27_49
	word32 r28_50
	word32 r29_51
	word32 r8_940
	word32 r25_942
	word32 r19_941
	word32 r7_939
	fn0001F63C(r0, &tLoc6C, fp + 0xFFFFFB90<32>, r22, &tLoc6C, r5, r26, r27, r28, r29, dwLoc0874, dwLoc0860, out r7_939, out r8_940, out r19_941, out r21_43, out r22_44, out r23_45, out r24_46, out r25_942, out r26_48, out r27_49, out r28_50, out r29_51)
	word32 r19_64
	word32 r21_65
	word32 r23_67
	word32 r24_68
	word32 r25_69
	word32 r29_73
	word32 r28_948
	word32 r22_945
	word32 r8_944
	word32 r7_943
	word32 r26_946
	word32 r27_947
	fn0001F63C(r0, r21_43, r21_43, r22_44, r23_45, r24_46, r26_48, r27_49, r28_50, r29_51, dwLoc0874, dwLoc0860, out r7_943, out r8_944, out r19_64, out r21_65, out r22_945, out r23_67, out r24_68, out r25_69, out r26_946, out r27_947, out r28_948, out r29_73)
	word32 r3_81 = fp + 0xFFFFF78C<32>
l000228B4:
	Mem85[r3_81:word32] = 0xFFFFFFFF<32>
	r3_81 = r3_81 + 4<32>
	word32 r11_88 = r21_65 ^ r3_81
	branch Test(NE,r11_88) l000228C4_ds_t
l000228C4_ds_t:
l000228C4_ds_f:
l000228C8:
	Mem95[r25_69 + 1024<i32>:word32] = 1<32>
l000228DC:
l000228E0:
	word32 r8_127 = r25_69
	word32 r6_105 = r25_69
	word32 r7_101 = 0xFFFFCA00<32>
	word32 r9_103 = 0xFFFFFFFF<32>
	word32 r5_104 = 0<32>
l000228F0:
	word32 r3_107 = Mem599[r6_105:word32]
	branch Test(GE,-r3_107 | r3_107) l00022900_ds_t
l00022900_ds_t:
	r6_105 = r6_105 + 4<32>
l00022900_ds_f:
	r6_105 = r6_105 + 4<32>
l00022904:
	branch r7_101 < r3_107 l00022914
l0002290C:
	r9_103 = r5_104
	r7_101 = r3_107
l00022914:
	r5_104 = r5_104 + 1<32>
	word32 r3_119 = r5_104 ^ 0x101<32>
	branch Test(NE,r5_104 ^ 0x101<32>) l00022920_ds_t
l00022920_ds_t:
l00022920_ds_f:
	word32 r26_123 = 0xFFFFCA00<32>
l00022924:
	word32 r27_126 = 0xFFFFFFFF<32>
l00022928:
	word32 r28_172
	word32 r4_129 = Mem599[r8_127:word32]
	word32 r5_132 = r9_103 ^ r3_119
	word32 r7_135 = -r4_129 | r4_129
	word32 r6_136 = -r5_132 | r5_132
	branch r26_123 >= r4_129 l000229C8_ds_t
l000229C8_ds_t:
	r28_172 = 1<32>
l000229C8_ds_f:
l000229CC:
	r28_172 = r11_88
l000229D0:
	branch Test(EQ,r7_135 >>u 31<i32> & r28_172) l00022A64
l00022A58:
	branch Test(EQ,r6_136 >>u 31<i32>) l00022A64
l00022A5C:
	r27_126 = r3_119
	r26_123 = r4_129
l00022A64:
	r3_119 = r3_119 + 1<32>
	branch Test(NE,r3_119 ^ 0x101<32>) l00022A70_ds_t
l00022A70_ds_t:
	r8_127 = r8_127 + 4<32>
l00022A70_ds_f:
l00022A74:
	branch Test(LT,r27_126) l00022A78_ds_t
l00022A78_ds_t:
l00022B2C:
	word32 r26_235 = r21_65
l00022B38:
	word32 r25_240 = Mem239[r26_235:word32]
	branch Test(EQ,r25_240) l00022B40_ds_t
l00022B40_ds_t:
	r26_235 = r26_235 + 4<32>
l00022B40_ds_f:
	r26_235 = r26_235 + 4<32>
l00022B44:
	branch r25_240 <= 0x20<32> l00022B4C_ds_t
l00022B4C_ds_t:
l00022B60:
	word32 r3_249 = fp + 0xFFFFF78C<32> + r25_240 * 2<32>
	Mem254[r3_249 + 2056<i32>:word16] = Mem239[r3_249 + 2056<i32>:word16] + 1<16>
l00022B74:
	branch Test(NE,r23_67 ^ r26_235) l00022B7C_ds_t
l00022B7C_ds_t:
l00022B7C_ds_f:
	word32 r8_262 = &tLoc6C + 60<i32>
l00022B80:
	word32 r9_263 = &tLoc6C + 58<i32>
	word32 r11_264 = 0x20<32>
l00022B88:
	r11_264 = r11_264 + 0xFFFFFFFF<32>
	word32 r7_272 = CONVERT(Mem266[r8_262 + 4<i32>:word16], word16, int32)
	branch Test(LE,r7_272) l00022B98_ds_t
l00022B98_ds_t:
l00022B98_ds_f:
l00022B9C:
	word32 r5_284
	word32 r3_282
	branch Test(NE,CONVERT(Mem276[r8_262:word16], word16, word32)) l00022BA4_ds_t
l00022BA4_ds_t:
l00022CE4:
	r3_282 = r11_264
	r5_284 = r11_264 + 0xFFFFFFFF<32>
l00022BA4_ds_f:
	word32 r4_285 = r9_263
l00022BA8:
	r3_282 = r11_264 + 0xFFFFFFFF<32>
l00022BB4:
	r4_285 = r4_285 + 0xFFFFFFFE<32>
	branch Test(EQ,CONVERT(Mem276[r4_285 + 2<i32>:word16], word16, word32)) l00022BC0_ds_t
l00022BC0_ds_t:
	word32 r5_293 = r3_282 + 0xFFFFFFFF<32>
l00022BB0:
	r3_282 = r5_293
l00022BC0_ds_f:
	r5_284 = r3_282 + 0xFFFFFFFF<32>
l00022BC4:
	word32 r4_300 = CONVERT(Mem276[r8_262 + 2<i32>:word16], word16, word32)
	Mem309[r8_262 + 4<i32>:word16] = SLICE(r7_272, word16, 0) + 0xFFFE<16>
	Mem311[r8_262 + 2<i32>:word16] = SLICE(r4_300, word16, 0) + 1<16>
	word32 r3_315 = fp + 0xFFFFF78C<32> + r3_282 * 2<32>
	Mem323[r3_315 + 2056<i32>:word16] = Mem311[r3_315 + 2056<i32>:word16] + 2<16>
	word32 r5_320 = fp + 0xFFFFF78C<32> + r5_284 * 2<32>
	Mem328[r5_320 + 2056<i32>:word16] = Mem323[r5_320 + 2056<i32>:word16] + 0xFFFF<16>
	r7_272 = CONVERT(Mem328[r8_262 + 4<i32>:word16], word16, int32)
	branch Test(GT,r7_272) l00022B9C
l00022C0C:
	r8_262 = r8_262 + 0xFFFFFFFE<32>
	branch Test(NE,r11_264 ^ 0x10<32>) l00022C18_ds_t
l00022C18_ds_t:
	r9_263 = r9_263 + 0xFFFFFFFE<32>
l00022C18_ds_f:
l00022C1C:
	word32 r4_355
	word32 r3_354 = CONVERT(Mem350[&tLoc6C + 32<i32>:word16], word16, int32)
	branch Test(NE,r3_354) l00022C28_ds_t
l00022C28_ds_t:
	r4_355 = 0x20<32>
l00022C28_ds_f:
l00022C2C:
	word32 r11_357 = r11_264 + 0xFFFFFFFF<32>
l00022C30:
	r4_355 = r11_357 * 2<32>
	r3_354 = CONVERT(Mem350[r11_357 * 2<32> + r23_67:word16], word16, int32)
	branch Test(EQ,r3_354) l00022C40_ds_t
l00022C40_ds_t:
	r11_357 = r11_357 + 0xFFFFFFFF<32>
l00022C40_ds_f:
l00022C44:
	word32 r3_399 = r3_354 + 0xFFFFFFFF<32>
	Mem403[fp + 0xFFFFF78C<32> + r4_355 + 2056<i32>:word16] = SLICE(r3_399, word16, 0)
	word32 r19_406
	word32 r21_407
	fn0001F60C(r3_399, r19_64, out r19_406, out r21_407)
	word32 r6_409 = 1<32>
	word32 r7_410 = 0<32>
l00022C6C:
	word32 r5_412 = r21_407
	word32 r4_413 = 0<32>
l00022C74:
	branch Test(NE,Mem415[r5_412:word32] ^ r6_409) l00022C80_ds_t
l00022C80_ds_t:
	r5_412 = r5_412 + 4<32>
l00022C80_ds_f:
	r5_412 = r5_412 + 4<32>
l00022C84:
	Mem428[r19_406 + (r7_410 + 0x10<32>) * 2<32> + 2<i32>:word16] = SLICE(r4_413, word16, 0)
	r7_410 = r7_410 + 1<32>
l00022C98:
	r4_413 = r4_413 + 1<32>
	branch Test(NE,r4_413 ^ 0x100<32>) l00022C74
l00022CA4:
	r6_409 = r6_409 + 1<32>
	branch Test(NE,r6_409 ^ 0x21<32>) l00022C6C
l00022CB0:
	Mem437[r19_406 + 548<i32>:word32] = r6_409 ^ 0x21<32>
	return
fn0002283C_exit:
l00022B4C_ds_f:
l00022B50:
	word32 r3_453 = Mem239[r24_68:word32]
	word32 r4_454 = Mem239[r3_453:word32]
	Mem458[r3_453 + 20<i32>:word32] = 0x27<32>
	call 0x00022B58<p32> + r4_454 (retsize: 0;)
		uses: r0:r0,r15:0x00022B58<p32>,r19:r19_64,r20:0xFFFFCA00<32>,r21:r21_65,r22:fp + 0xFFFFF78C<32>,r23:r23_67,r24:r24_68,r25:r25_240,r26:r26_242,r27:0x27<32>,r28:0x20<32>,r29:r29_73,r3:r3_453,r4:r4_454,r5:r24_68,r6:r6_136,r7:r6_136 >>u 31<i32>,Stack +001C:dwLoc0874,Stack +0030:dwLoc0860,Stack +0824:tLoc6C
l00022A78_ds_f:
	word32 r9_514 = r9_103 * 2<32>
l00022A7C:
	word32 r3_541
	word32 r26_533 = fp + 0xFFFFF78C<32> + r9_514 * 2<32>
	word32 r8_515 = r27_126 * 2<32>
	word32 r6_534 = Mem599[r26_533 + 1028<i32>:word32]
	word32 r5_536 = Mem599[r9_514 * 2<32> + (fp + 0xFFFFF78C<32>):word32]
	Mem537[r9_514 * 2<32> + r25_69:word32] = Mem599[r9_514 * 2<32> + r25_69:word32] + Mem599[r8_515 * 2<32> + r25_69:word32]
	Mem539[r8_515 * 2<32> + r25_69:word32] = r3_119 ^ 0x101<32>
	branch Test(LT,r5_536) l00022AB0_ds_t
l00022AB0_ds_t:
	Mem540[r26_533 + 1028<i32>:word32] = r6_534 + 1<32>
l00022B24:
	r3_541 = r9_514
l00022AB0_ds_f:
	Mem542[r26_533 + 1028<i32>:word32] = r6_534 + 1<32>
l00022AB4:
	r3_541 = r5_536 * 2<32>
	word32 r7_547 = fp + 0xFFFFF78C<32> + r3_541 * 2<32>
	word32 r6_550 = Mem548[r3_541 * 2<32> + (fp + 0xFFFFF78C<32>):word32]
	Mem552[r7_547 + 1028<i32>:word32] = Mem548[r7_547 + 1028<i32>:word32] + 1<32>
	branch Test(GE,r6_550) l00022AD4_ds_t
l00022AD4_ds_t:
	r5_536 = r6_550
l00022AD4_ds_f:
l00022AD8:
	word32 r5_559 = fp + 0xFFFFF78C<32> + r8_515 * 2<32>
	word32 r4_561 = Mem560[r5_559 + 1028<i32>:word32]
	Mem566[r3_541 * 2<32> + (fp + 0xFFFFF78C<32>):word32] = r27_126
	word32 r3_567 = Mem566[r8_515 * 2<32> + (fp + 0xFFFFF78C<32>):word32]
	branch Test(LT,r3_567) l00022AF8_ds_t
l00022AF8_ds_t:
	Mem569[r5_559 + 1028<i32>:word32] = r4_561 + 1<32>
l00022AF8_ds_f:
	Mem570[r5_559 + 1028<i32>:word32] = r4_561 + 1<32>
l00022AFC:
	word32 r3_572 = r3_567 * 2<32>
	word32 r5_575 = fp + 0xFFFFF78C<32> + r3_572 * 2<32>
	word32 r4_577 = Mem576[r5_575 + 1028<i32>:word32]
	r3_567 = Mem576[r3_572 * 2<32> + (fp + 0xFFFFF78C<32>):word32]
	branch Test(GE,r3_567) l00022B18_ds_t
l00022B18_ds_t:
	Mem580[r5_575 + 1028<i32>:word32] = r4_577 + 1<32>
l00022B18_ds_f:
	Mem581[r5_575 + 1028<i32>:word32] = r4_577 + 1<32>
l00022B1C:


void fn00022E6C(word32 r5, word32 r15, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r19:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19
fn00022E6C_entry:
l00022E6C:
	word32 r3_12 = Mem7[Mem7[r5 + 4<i32>:word32]:word32]
	word32 r19_16
	word32 r3_18
	word32 r0_23
	call 0x00022E88<p32> + r3_12 (retsize: 0;)
		uses: r15:0x00022E88<p32>,r19:r5,r3:r3_12,r5:r5,r6:1<32>,r7:0x6C<32>,Stack +0000:r15,Stack +001C:r19
		defs: r0:r0_23,r19:r19_16,r3:r3_18
	Mem25[r19_16 + 416<i32>:word32] = r3_18
	Mem26[r3_18:word32] = 0xFFFF8C8C<32>
	word32 r4_27 = r3_18 + 0x2C<32>
l00022EA8:
	Mem31[r4_27 + 16<i32>:word32] = r0_23
	Mem32[r4_27:word32] = r0_23
	Mem33[r4_27 + 48<i32>:word32] = r0_23
	Mem34[r4_27 + 32<i32>:word32] = r0_23
	r4_27 = r4_27 + 4<32>
	branch Test(NE,r4_27 ^ r3_18 + 0x3C<32>) l00022EC4_ds_t
l00022EC4_ds_t:
l00022EC4_ds_f:
l00022EC8:
	return
fn00022E6C_exit:


void fn00022ED4(word32 r5, word32 r15, word32 r19, word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000231F4
//      fn000233B0
//      fn000237DC
// MayUse:  r15:[0..31] r19:[0..31] r21:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r3 r4 r5
// Preserved: r1 r15 r19 r21
fn00022ED4_entry:
l00022ED4:
	word32 r5_12 = Mem9[r5 + 32<i32>:word32]
	word32 r21_13 = Mem9[r5_12 + 24<i32>:word32]
	word32 r3_14 = Mem9[r21_13 + 12<i32>:word32]
	word32 r19_17
	word32 r21_19
	word32 r3_21
	call 0x00022EF4<p32> + r3_14 (retsize: 0;)
		uses: r15:0x00022EF4<p32>,r19:r5,r21:r21_13,r3:r3_14,r5:r5_12,Stack +0000:r15,Stack +001C:r19,Stack +0020:r21
		defs: r19:r19_17,r21:r21_19,r3:r3_21
	branch Test(NE,r3_21) l00022F00_ds_t
l00022F00_ds_t:
l00022F1C:
	word32 r21_25 = Mem9[r21_19 + 4<i32>:word32]
	Mem26[r19_17 + 16<i32>:word32] = Mem9[r21_19:word32]
	Mem27[r19_17 + 20<i32>:word32] = r21_25
	return
fn00022ED4_exit:
l00022F00_ds_f:
l00022F04:
	word32 r5_33 = Mem9[r19_17 + 32<i32>:word32]
	word32 r3_34 = Mem9[r5_33:word32]
	Mem35[r3_34 + 20<i32>:word32] = 0x18<32>
	word32 r3_36 = Mem35[r3_34:word32]
	call 0x00022F14<p32> + r3_36 (retsize: 0;)
		uses: r15:0x00022F14<p32>,r19:r19_17,r21:r21_19,r3:r3_36,r5:r5_33


void fn000231F4(word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000233B0
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: r3 r6
// Preserved: C r1 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r4 r5
fn000231F4_entry:
l000231F4:
	branch Test(EQ,r7) l000233A8
l000233A8:
	return
l000231F8:
	word32 r26_12 = r6
	word32 r22_27 = r6 + r7
l00023230:
	branch Test(NE,Mem30[r5 + 12<i32>:word32]) l00023238_ds_t
l00023238_ds_t:
l00023238_ds_f:
l0002323C:
	word32 r19_44
	word32 r21_34 = Mem30[r5 + 28<i32>:word32]
	word32 r5_41 = 0x18<32> - (r21_34 + 1<32>)
	word32 r3_37 = CONVERT(Mem30[r26_12:byte], byte, word32)
	word32 r4_38 = Mem30[r5 + 24<i32>:word32]
	word32 r25_131 = r21_34 + 1<32>
	word32 r18_42 = r5_41 & 0x1F<32>
	branch Test(EQ,r5_41 & 0x1F<32>) l00023260_ds_t
l00023260_ds_t:
	r19_44 = r3_37 & 1<32>
l00023260_ds_f:
	word32 r19_45 = r3_37 & 1<32>
l00023264:
	r18_42 = r18_42 + 0xFFFFFFFF<32>
	branch Test(NE,r18_42) l0002326C_ds_t
l0002326C_ds_t:
	r19_45 = r19_45 * 2<32>
l0002326C_ds_f:
	r19_44 = r19_45 * 2<32>
l00023270:
	branch r21_34 > 0xFFFFFFFA<32> l00023278_ds_t
l00023278_ds_t:
	word32 r19_135 = r19_44 | r4_38
l000232AC:
	word32 r4_63 = Mem62[r5 + 16<i32>:word32]
	Mem84[r5 + 16<i32>:word32] = r4_63 + 1<32>
	word32 r3_65 = r19_135 >> 1<i32>
	Mem86[r4_63:byte] = SLICE(r3_65 >> 15<i32>, byte, 0)
	word32 r23_82 = r3_65 >> 15<i32> & 0xFF<32>
	word32 r4_87 = Mem86[r5 + 20<i32>:word32]
	r25_131 = r25_131 + 0xFFFFFFF8<32>
	branch Test(NE,r4_87 + 0xFFFFFFFF<32>) l00023318_ds_t
l00023318_ds_t:
	Mem92[r5 + 20<i32>:word32] = r4_87 + 0xFFFFFFFF<32>
l00023324:
	branch Test(NE,r23_82 ^ 0xFF<32>) l0002332C_ds_t
l0002332C_ds_t:
l0002332C_ds_f:
l00023330:
	word32 r4_96 = Mem92[r5 + 16<i32>:word32]
	Mem98[r5 + 16<i32>:word32] = r4_96 + 1<32>
	Mem100[r4_96:byte] = ~SLICE(r23_82, byte, 0)
	word32 r3_101 = Mem100[r5 + 20<i32>:word32]
	branch Test(NE,r3_101 + 0xFFFFFFFF<32>) l0002334C_ds_t
l0002334C_ds_t:
	Mem103[r5 + 20<i32>:word32] = r3_101 + 0xFFFFFFFF<32>
l00023284:
l0002334C_ds_f:
	Mem107[r5 + 20<i32>:word32] = r3_101 + 0xFFFFFFFF<32>
l00023350:
	fn00022ED4(r5, 0x00023350<p32>, r19_135 * 2<32>, r21_34)
l0002328C:
	word32 r19_115 = r19_135 * 4<32>
	branch r25_131 <= 7<32> l000232A8_ds_t
l000232A8_ds_t:
l00023360:
	Mem134[r5 + 24<i32>:word32] = r19_115 * 0x40<32>
	r25_131 = r21_34 + 0xFFFFFFF9<32> & 7<32>
l000232A8_ds_f:
	r19_135 = r19_115 * 0x40<32>
l00023318_ds_f:
	Mem136[r5 + 20<i32>:word32] = r4_87 + 0xFFFFFFFF<32>
l0002331C:
	fn00022ED4(r5, 0x0002331C<p32>, r19_135, r21_34)
l00023278_ds_f:
	word32 r19_141 = r19_44 | r4_38
l0002327C:
	Mem144[r5 + 24<i32>:word32] = r19_141
l0002336C:
	Mem147[r5 + 28<i32>:word32] = r25_131
l00023370:
	r26_12 = r26_12 + 1<32>
	branch Test(NE,r26_12 ^ r22_27) l0002337C_ds_t
l0002337C_ds_t:
l0002337C_ds_f:
l00023380:
	return
fn000231F4_exit:


word32 fn000233B0(word32 r0, word32 r5, word32 r22, word32 r24, word32 r25, word32 r26)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000237DC
// MayUse:  r0:[0..31] r22:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r5:[0..31]
// LiveOut: r0
// Trashed: C r0 r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26
fn000233B0_entry:
l000233B0:
	word32 r19_21 = Mem19[r5 + 56<i32>:word32]
	branch Test(EQ,r19_21) l000233DC_ds_t
l000233DC_ds_t:
l000233DC_ds_f:
	word32 r19_24 = r19_21 >> 1<i32>
l000233E0:
	word32 r23_234
	branch Test(EQ,r19_21 >> 1<i32>) l000233E4_ds_t
l000233E4_ds_t:
l00023630:
	r23_234 = r19_21 >> 1<i32>
l000233E4_ds_f:
l000233E8:
	word32 r23_29 = 1<32>
l000233EC:
	r19_24 = r19_24 >> 1<i32>
	branch Test(NE,r19_24) l000233F4_ds_t
l000233F4_ds_t:
	r23_29 = r23_29 + 1<32>
l000233F4_ds_f:
	r23_234 = r23_29 + 0<32>
l000233F8:
	branch r23_234 <= 0xE<32> l00023410_ds_t
l00023410_ds_t:
	r19_24 = r23_234 * 0x10<32>
l00023430:
	word32 r21_42 = r5
	word32 r4_210 = Mem19[r5 + 12<i32>:word32]
	branch Test(EQ,r4_210) l00023438_ds_t
l00023438_ds_t:
	word32 r3_47 = Mem19[r5 + 52<i32>:word32]
l00023490:
	word32 r22_61
	word32 r5_51 = Mem19[(r3_47 + 0x13<32>) * 4<32> + r5:word32]
	word32 r19_55 = r5_51 + r19_24
	word32 r25_112 = Mem19[r19_24 * 4<32> + r5_51:word32]
	word32 r24_60 = CONVERT(Mem19[r19_55 + 1024<i32>:byte], byte, int32)
	branch Test(NE,r24_60) l000234BC_ds_t
l000234BC_ds_t:
	r22_61 = Mem19[r5 + 28<i32>:word32]
l000234BC_ds_f:
	word32 r22_62 = Mem19[r5 + 28<i32>:word32]
l000234C0:
	word32 r5_63 = Mem19[r5 + 32<i32>:word32]
	word32 r3_65 = Mem19[r5_63:word32]
	Mem66[r3_65 + 20<i32>:word32] = 0x28<32>
	word32 r3_67 = Mem66[r3_65:word32]
	word32 r18_85
	word32 r6_88
	word32 r7_89
	call 0x000234D4<p32> + r3_67 (retsize: 0;)
		uses: r0:r0_87,r15:0x000234D4<p32>,r18:r18_85,r19:r19_55,r21:r5,r22:r22_62,r23:r23_69,r24:r24_60,r25:r25_58,r26:r26,r3:r3_67,r4:0x28<32>,r5:r5_63,r6:r6_88,r7:r7_89
		defs: r0:r0_87,r18:r18_85,r21:r21_77,r22:r22_78,r23:r23_79,r24:r24_80,r25:r25_81,r6:r6_88,r7:r7_89
	r4_210 = Mem66[r21_42 + 12<i32>:word32]
	branch Test(NE,r4_210) l00023460
l000234E4:
	word32 r3_101
	word32 r5_95 = Mem94[r21_42 + 24<i32>:word32]
	word32 r22_214 = r24_60 + r22_61
	word32 r18_103 = r24_60 & 0x1F<32>
	branch Test(EQ,r18_103) l000234FC_ds_t
l000234FC_ds_t:
	r3_101 = 1<32>
l000234FC_ds_f:
	word32 r3_102 = 1<32>
l00023500:
	r18_103 = r18_103 + 0xFFFFFFFF<32>
	branch Test(NE,r18_103) l00023508_ds_t
l00023508_ds_t:
	r3_102 = r3_102 * 2<32>
l00023508_ds_f:
	r3_101 = r3_102 * 2<32>
l0002350C:
	word32 r19_121
	word32 r6_117 = 0x18<32> - r22_214
	word32 r3_114 = r3_101 + 0xFFFFFFFF<32> & r25_112
	word32 r18_119 = r6_117 & 0x1F<32>
	branch Test(EQ,r6_117 & 0x1F<32>) l0002352C_ds_t
l0002352C_ds_t:
	r19_121 = r3_114
l0002352C_ds_f:
	word32 r19_122 = r3_114
l00023530:
	r18_119 = r18_119 + 0xFFFFFFFF<32>
	branch Test(NE,r18_119) l00023538_ds_t
l00023538_ds_t:
	r19_122 = r19_122 * 2<32>
l00023538_ds_f:
	r19_121 = r19_122 * 2<32>
l0002353C:
	word32 r19_205
	word32 r25_130 = r22_214
	branch r22_214 > 7<32> l00023548_ds_t
l00023548_ds_t:
	word32 r19_139 = r19_121 | r5_95
l0002357C:
	word32 r4_142 = Mem141[r21_42 + 16<i32>:word32]
	Mem163[r21_42 + 16<i32>:word32] = r4_142 + 1<32>
	word32 r3_144 = r19_139 >> 1<i32>
	Mem165[r4_142:byte] = SLICE(r3_144 >> 15<i32>, byte, 0)
	word32 r24_161 = r3_144 >> 15<i32> & 0xFF<32>
	word32 r4_166 = Mem165[r21_42 + 20<i32>:word32]
	r25_130 = r25_130 + 0xFFFFFFF8<32>
	branch Test(NE,r4_166 + 0xFFFFFFFF<32>) l000235E8_ds_t
l000235E8_ds_t:
	Mem171[r21_42 + 20<i32>:word32] = r4_166 + 0xFFFFFFFF<32>
l000235F4:
	branch Test(NE,r24_161 ^ 0xFF<32>) l000235FC_ds_t
l000235FC_ds_t:
l000235FC_ds_f:
l00023600:
	word32 r4_175 = Mem171[r21_42 + 16<i32>:word32]
	Mem177[r21_42 + 16<i32>:word32] = r4_175 + 1<32>
	Mem179[r4_175:byte] = ~SLICE(r24_161, byte, 0)
	word32 r3_180 = Mem179[r21_42 + 20<i32>:word32]
	branch Test(NE,r3_180 + 0xFFFFFFFF<32>) l0002361C_ds_t
l0002361C_ds_t:
	Mem182[r21_42 + 20<i32>:word32] = r3_180 + 0xFFFFFFFF<32>
l00023554:
l0002361C_ds_f:
	Mem186[r21_42 + 20<i32>:word32] = r3_180 + 0xFFFFFFFF<32>
l00023620:
	fn00022ED4(r21_42, 0x00023620<p32>, r19_139 * 2<32>, r21_42)
l0002355C:
	word32 r19_193 = r19_139 * 4<32>
	branch r25_130 <= 7<32> l00023578_ds_t
l00023578_ds_t:
	r19_205 = r19_193 * 0x40<32>
l00023638:
	r4_210 = Mem208[r21_42 + 12<i32>:word32]
	Mem215[r21_42 + 24<i32>:word32] = r19_193 * 0x40<32>
	r22_214 = r22_214 & 7<32>
l00023578_ds_f:
	r19_139 = r19_193 * 0x40<32>
l000235E8_ds_f:
	Mem217[r21_42 + 20<i32>:word32] = r4_166 + 0xFFFFFFFF<32>
l000235EC:
	fn00022ED4(r21_42, 0x000235EC<p32>, r19_139, r21_42)
l00023548_ds_f:
	r19_205 = r19_121 | r5_95
l0002354C:
	Mem227[r21_42 + 24<i32>:word32] = r19_205
l00023644:
	word32 r3_246
	Mem230[r21_42 + 28<i32>:word32] = r22_214
	branch Test(EQ,r23_234) l0002364C_ds_t
l0002364C_ds_t:
	r3_246 = r4_210
l0002364C_ds_f:
l00023650:
	branch Test(NE,r4_210) l00023654_ds_t
l00023654_ds_t:
l00023654_ds_f:
	word32 r3_249 = Mem230[r21_42 + 56<i32>:word32]
l00023658:
	word32 r5_254
	word32 r22_251 = r23_234 + r22_214
	word32 r18_252 = r23_234 & 0x1F<32>
	branch Test(EQ,r18_252) l0002366C_ds_t
l0002366C_ds_t:
	r5_254 = 1<32>
l0002366C_ds_f:
	word32 r5_255 = 1<32>
l00023670:
	r18_252 = r18_252 + 0xFFFFFFFF<32>
	branch Test(NE,r18_252) l00023678_ds_t
l00023678_ds_t:
	r5_255 = r5_255 * 2<32>
l00023678_ds_f:
	r5_254 = r5_255 * 2<32>
l0002367C:
	word32 r3_273
	word32 r6_269 = 0x18<32> - r22_251
	word32 r5_266 = r5_254 + 0xFFFFFFFF<32> & r3_249
	word32 r18_271 = r6_269 & 0x1F<32>
	branch Test(EQ,r6_269 & 0x1F<32>) l0002369C_ds_t
l0002369C_ds_t:
	r3_273 = r5_266
l0002369C_ds_f:
	word32 r3_274 = r5_266
l000236A0:
	r18_271 = r18_271 + 0xFFFFFFFF<32>
	branch Test(NE,r18_271) l000236A8_ds_t
l000236A8_ds_t:
	r3_274 = r3_274 * 2<32>
l000236A8_ds_f:
	r3_273 = r3_274 * 2<32>
l000236AC:
	word32 r24_282 = r22_251
	branch r22_251 > 7<32> l000236B8_ds_t
l000236B8_ds_t:
	word32 r19_292 = r3_273 | r19_205
l000236EC:
	word32 r4_295 = Mem294[r21_42 + 16<i32>:word32]
	Mem316[r21_42 + 16<i32>:word32] = r4_295 + 1<32>
	word32 r3_297 = r19_292 >> 1<i32>
	Mem318[r4_295:byte] = SLICE(r3_297 >> 15<i32>, byte, 0)
	word32 r23_314 = r3_297 >> 15<i32> & 0xFF<32>
	word32 r4_319 = Mem318[r21_42 + 20<i32>:word32]
	r24_282 = r24_282 + 0xFFFFFFF8<32>
	branch Test(NE,r4_319 + 0xFFFFFFFF<32>) l00023758_ds_t
l00023758_ds_t:
	Mem324[r21_42 + 20<i32>:word32] = r4_319 + 0xFFFFFFFF<32>
l00023764:
	branch Test(NE,r23_314 ^ 0xFF<32>) l0002376C_ds_t
l0002376C_ds_t:
l0002376C_ds_f:
l00023770:
	word32 r4_328 = Mem324[r21_42 + 16<i32>:word32]
	Mem330[r21_42 + 16<i32>:word32] = r4_328 + 1<32>
	Mem332[r4_328:byte] = ~SLICE(r23_314, byte, 0)
	word32 r3_333 = Mem332[r21_42 + 20<i32>:word32]
	branch Test(NE,r3_333 + 0xFFFFFFFF<32>) l0002378C_ds_t
l0002378C_ds_t:
	Mem335[r21_42 + 20<i32>:word32] = r3_333 + 0xFFFFFFFF<32>
l000236C4:
l0002378C_ds_f:
	Mem339[r21_42 + 20<i32>:word32] = r3_333 + 0xFFFFFFFF<32>
l00023790:
	fn00022ED4(r21_42, 0x00023790<p32>, r19_292 * 2<32>, r21_42)
l000236CC:
	word32 r19_346 = r19_292 * 4<32>
	branch r24_282 <= 7<32> l000236E8_ds_t
l000236E8_ds_t:
l000237A0:
	r3_246 = Mem361[r21_42 + 12<i32>:word32]
	Mem368[r21_42 + 24<i32>:word32] = r19_346 * 0x40<32>
	Mem369[r21_42 + 28<i32>:word32] = r22_251 & 7<32>
l000237B0:
	branch Test(NE,r3_246) l000237B4_ds_t
l000237B4_ds_t:
	Mem388[r21_42 + 56<i32>:word32] = r0
l000237B4_ds_f:
	Mem389[r21_42 + 56<i32>:word32] = r0
l000236E8_ds_f:
	r19_292 = r19_346 * 0x40<32>
l00023758_ds_f:
	Mem391[r21_42 + 20<i32>:word32] = r4_319 + 0xFFFFFFFF<32>
l0002375C:
	fn00022ED4(r21_42, 0x0002375C<p32>, r19_292, r21_42)
l000236B8_ds_f:
	word32 r19_396 = r3_273 | r19_205
l000236BC:
	Mem401[r21_42 + 24<i32>:word32] = r19_396
l000237D0:
	Mem402[r21_42 + 28<i32>:word32] = r22_251
	Mem407[r21_42 + 56<i32>:word32] = r4_210
l000237B8:
	fn000231F4(r21_42, Mem409[r21_42 + 64<i32>:word32], Mem409[r21_42 + 60<i32>:word32])
	Mem421[r21_42 + 60<i32>:word32] = r0
l00023438_ds_f:
	word32 r3_422 = Mem19[r5 + 52<i32>:word32]
l0002343C:
	word32 r4_426 = Mem19[(r3_422 + 0x17<32>) * 4<32> + r5:word32]
	word32 r19_427 = r19_24 * 2<32>
	Mem431[r19_427 * 2<32> + r4_426:word32] = Mem19[r19_427 * 2<32> + r4_426:word32] + 1<32>
l00023460:
	Mem434[r21_42 + 56<i32>:word32] = r0
l00023464:
	Mem437[r21_42 + 60<i32>:word32] = r0
l00023468:
	return r0
fn000233B0_exit:
l00023410_ds_f:
l00023414:
	word32 r5_470 = Mem19[r5 + 32<i32>:word32]
	word32 r3_472 = Mem19[r5_470:word32]
	Mem473[r3_472 + 20<i32>:word32] = 0x28<32>
	word32 r3_474 = Mem473[r3_472:word32]
	word32 r18_490
	word32 r6_493
	word32 r7_494
	call 0x00023428<p32> + r3_474 (retsize: 0;)
		uses: r0:r0,r15:0x00023428<p32>,r18:r18_490,r19:r23_35 * 0x10<32>,r21:r5,r22:r22,r23:r23_35,r24:r24,r25:r25,r26:r26,r3:r3_474,r4:0x28<32>,r5:r5_470,r6:r6_493,r7:r7_494
		defs: r18:r18_490,r6:r6_493,r7:r7_494


void fn000237DC(word32 r0, word32 r5, word32 r6, word32 r24, word32 r25, word32 r26)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r0 r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25
fn000237DC_entry:
l000237DC:
	word32 r3_167
	word32 r0_31 = fn000233B0(r0, r5, r6, r24, r25, r26)
	branch Test(EQ,Mem19[r5 + 12<i32>:word32]) l00023810_ds_t
l00023810_ds_t:
l00023880:
	word32 r19_43
	word32 r24_35 = Mem19[r5 + 28<i32>:word32]
	word32 r4_38 = 0x18<32> - (r24_35 + 7<32>)
	word32 r3_36 = Mem19[r5 + 24<i32>:word32]
	word32 r24_120 = r24_35 + 7<32>
	word32 r18_41 = r4_38 & 0x1F<32>
	branch Test(EQ,r4_38 & 0x1F<32>) l000238A4_ds_t
l000238A4_ds_t:
	r19_43 = 0x7F<32>
l000238A4_ds_f:
	word32 r19_44 = 0x7F<32>
l000238A8:
	r18_41 = r18_41 + 0xFFFFFFFF<32>
	branch Test(NE,r18_41) l000238B0_ds_t
l000238B0_ds_t:
	r19_44 = r19_44 * 2<32>
l000238B0_ds_f:
	r19_43 = r19_44 * 2<32>
l000238B4:
	word32 r19_125
	word32 r5_110
	word32 r4_108 = Mem19[r5 + 16<i32>:word32]
	branch r24_35 <= 0<32> l000238C0_ds_t
l000238C0_ds_t:
	r19_125 = r19_43 | r3_36
l000239AC:
	r5_110 = r4_108 + 1<32>
l000238C0_ds_f:
	word32 r19_174 = r19_43 | r3_36
l000238C4:
	word32 r6_109 = r4_108 + 1<32>
l000238F8:
	Mem69[r5 + 16<i32>:word32] = r6_109
	word32 r3_71 = r19_174 >> 1<i32>
	Mem90[r4_108:byte] = SLICE(r3_71 >> 15<i32>, byte, 0)
	word32 r4_91 = Mem90[r5 + 20<i32>:word32]
	word32 r23_92 = r3_71 >> 15<i32> & 0xFF<32>
	branch Test(NE,r4_91 + 0xFFFFFFFF<32>) l00023958_ds_t
l00023958_ds_t:
	Mem95[r5 + 20<i32>:word32] = r4_91 + 0xFFFFFFFF<32>
l00023964:
	r4_108 = Mem95[r5 + 16<i32>:word32]
	r6_109 = r4_108 + 1<32>
	branch Test(NE,r23_92 ^ 0xFF<32>) l00023974_ds_t
l00023974_ds_t:
	r5_110 = r4_108 + 1<32>
l00023974_ds_f:
l00023978:
	Mem101[r5 + 16<i32>:word32] = r4_108 + 1<32>
	Mem103[r4_108:byte] = ~SLICE(r23_92, byte, 0)
	word32 r3_104 = Mem103[r5 + 20<i32>:word32]
	branch Test(NE,r3_104 + 0xFFFFFFFF<32>) l00023990_ds_t
l00023990_ds_t:
	Mem107[r5 + 20<i32>:word32] = r3_104 + 0xFFFFFFFF<32>
l0002399C:
	r4_108 = Mem107[r5 + 16<i32>:word32]
	r6_109 = r4_108 + 1<32>
	r5_110 = r4_108 + 1<32>
l000238CC:
	word32 r19_112 = r19_174 * 2<32>
	r24_120 = r24_120 + 0xFFFFFFF8<32>
	branch r24_120 <= 7<32> l000238F4_ds_t
l000238F4_ds_t:
	r19_125 = r19_112 * 0x80<32>
l000239B0:
	Mem134[r5 + 24<i32>:word32] = r0_31
	Mem135[r5 + 28<i32>:word32] = r0_31
	Mem138[r5 + 16<i32>:word32] = r5_110
	Mem142[r4_108:byte] = 0xFF<8>
	word32 r3_143 = Mem142[r5 + 20<i32>:word32]
	branch Test(NE,r3_143 + 0xFFFFFFFF<32>) l000239D0_ds_t
l000239D0_ds_t:
	Mem145[r5 + 20<i32>:word32] = r3_143 + 0xFFFFFFFF<32>
l000239DC:
	word32 r3_146 = Mem145[r5 + 16<i32>:word32]
	Mem154[r5 + 16<i32>:word32] = r3_146 + 1<32>
	Mem156[r3_146:byte] = SLICE(r6, byte, 0) + 0xD0<8>
	word32 r3_157 = Mem156[r5 + 20<i32>:word32]
	branch Test(NE,r3_157 + 0xFFFFFFFF<32>) l000239FC_ds_t
l000239FC_ds_t:
	Mem159[r5 + 20<i32>:word32] = r3_157 + 0xFFFFFFFF<32>
l000239FC_ds_f:
	Mem160[r5 + 20<i32>:word32] = r3_157 + 0xFFFFFFFF<32>
l00023A00:
	fn00022ED4(r5, 0x00023A00<p32>, r19_125, r5)
	r3_167 = Mem160[r5 + 32<i32>:word32]
l000239D0_ds_f:
	Mem168[r5 + 20<i32>:word32] = r3_143 + 0xFFFFFFFF<32>
l000239D4:
	fn00022ED4(r5, 0x000239D4<p32>, r19_125, r5)
l000238F4_ds_f:
	r19_174 = r19_112 * 0x80<32>
l00023990_ds_f:
	Mem175[r5 + 20<i32>:word32] = r3_104 + 0xFFFFFFFF<32>
l00023994:
	fn00022ED4(r5, 0x00023994<p32>, r19_174, r5)
l00023958_ds_f:
	Mem180[r5 + 20<i32>:word32] = r4_91 + 0xFFFFFFFF<32>
l0002395C:
	fn00022ED4(r5, 0x0002395C<p32>, r19_174, r5)
l00023810_ds_f:
l00023814:
	r3_167 = Mem187[r5 + 32<i32>:word32]
l00023818:
	branch Test(NE,Mem190[r3_167 + 368<i32>:word32]) l00023874
l00023874:
	Mem195[r5 + 56<i32>:word32] = r0_31
	Mem196[r5 + 60<i32>:word32] = r0_31
l00023820:
	word32 r3_197 = Mem190[r3_167 + 296<i32>:word32]
	branch Test(LE,r3_197) l00023828_ds_t
l00023828_ds_t:
l00023828_ds_f:
l0002382C:
	word32 r3_210 = r5 + 0x24<32>
	word32 r21_211 = r5 + (r3_197 + 9<32>) * 4<32>
l00023840:
	Mem214[r3_210:word32] = r0_31
	r3_210 = r3_210 + 4<32>
	branch Test(NE,r21_211 ^ r3_210) l00023840
l00023850:
l00023854:
	return
fn000237DC_exit:


void fn000255B0(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r0 r1 r15 r19 r3 r4 r5 r6 r7
// Preserved:
fn000255B0_entry:
l000255B0:
	word32 r3_5 = Mem0[r5 + 4<i32>:word32]
l000255BC_thunk_fn000255C0:
	fn000255C0(r3_5, r5)
	return
fn000255B0_exit:


word32 fn000255C0(word32 r3, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000255B0
//      fn0002FFD0
// MayUse:  r3:[0..31] r5:[0..31]
// LiveOut: r3
// Trashed: r0 r15 r19 r3 r4 r5 r6 r7
// Preserved: r1
fn000255C0_entry:
l000255C0:
	word32 r3_5 = Mem0[r3:word32]
	word32 r3_12
	word32 r19_16
	word32 r0_19
	call 0x000255CC<p32> + r3_5 (retsize: 0;)
		uses: r15:0x000255CC<p32>,r19:r5,r3:r3_5,r5:r5,r6:1<32>,r7:0x6C<32>
		defs: r0:r0_19,r19:r19_16,r3:r3_12
	Mem21[r19_16 + 416<i32>:word32] = r3_12
	Mem22[r3_12 + 76<i32>:word32] = r0_19
	Mem23[r3_12:word32] = 0xFFFF95C0<32>
	Mem24[r3_12 + 92<i32>:word32] = r0_19
	Mem25[r3_12 + 80<i32>:word32] = r0_19
	Mem26[r3_12 + 96<i32>:word32] = r0_19
	Mem27[r3_12 + 84<i32>:word32] = r0_19
	Mem28[r3_12 + 100<i32>:word32] = r0_19
	Mem29[r3_12 + 88<i32>:word32] = r0_19
	Mem30[r3_12 + 104<i32>:word32] = r0_19
	Mem31[r3_12 + 64<i32>:word32] = r0_19
	return r3_12
fn000255C0_exit:


word32 fn000256D8(word32 r0, word32 r5, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r5:[0..31]
// LiveOut: r1 r19
// Trashed: r0 r1 r15 r19 r21 r22 r3 r4 r5 r6 r7
// Preserved:
fn000256D8_entry:
	word32 dwArg1C
l000256D8:
	Mem5[r19 + 172<i32>:word32] = r0
	Mem6[r19 + 176<i32>:word32] = r0
	Mem7[r19 + 180<i32>:word32] = r0
	Mem8[r19 + 196<i32>:word32] = r0
	Mem9[r19 + 184<i32>:word32] = r0
	Mem10[r19 + 200<i32>:word32] = r0
	Mem11[r19 + 188<i32>:word32] = r0
	Mem12[r19 + 204<i32>:word32] = r0
	Mem13[r19 + 192<i32>:word32] = r0
	Mem14[r19 + 208<i32>:word32] = r0
	Mem16[r19 + 360<i32>:word32] = r0
	fn00028F08(r5, 0x00025700<p32>, r19)
	fn000268CC(r19, 0x00025708<p32>, r19)
	Mem33[r19 + 20<i32>:word32] = 0xC8<32>
	return dwArg1C
fn000256D8_exit:


void fn00025768(word32 r5, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r15 r18 r19 r3 r4 r5 r6 r7
// Preserved: r1
fn00025768_entry:
l00025768:
	word32 r6_9 = Mem7[r5 + 20<i32>:word32]
	branch 0xA<32> -u (r6_9 + 0xFFFFFF38<32>) < 0<32> l00025788_ds_t
l00025788_ds_t:
l0002582C:
	word32 r4_14 = Mem7[r5:word32]
	Mem17[r4_14 + 20<i32>:word32] = 0x14<32>
	word32 r7_18 = Mem17[r4_14:word32]
	Mem20[r4_14 + 24<i32>:word32] = r6_9
	call 0x00025848<p32> + r7_18 (retsize: 0;)
		uses: r15:0x00025848<p32>,r19:r5,r3:0<32>,r4:r4_14,r5:r5,r7:r7_18,Stack +001C:0<32>
	return
l00025788_ds_f:
l0002578C:
	word32 r3_40 = Mem7[(r6_9 + 0xFFFFFF38<32>) * 4<32> + 0x7734<32>:word32]
	call r3_40 (retsize: 0;)
		uses: r15:r15,r19:r5,r3:r3_40,r5:r5
	return
fn00025768_exit:


word32 fn00025A6C(word32 r0, word32 r3, word32 r7, word32 r8, word32 r9, word32 r19, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r19:[0..31] r3:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r0 r19 r3 r4 r7
// Trashed: r0 r10 r15 r19 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn00025A6C_entry:
	word32 dwLoc04
l00025A6C:
	branch Test(LT,-(r9 ^ 0x42<32>) | r9 ^ 0x42<32>) l00025A7C_ds_t
l00025A7C_ds_t:
l000259D0:
	word32 r4_10 = Mem0[r19:word32]
	Mem13[r4_10 + 20<i32>:word32] = 0x6F<32>
	word32 r10_14 = Mem13[r4_10 + 4<i32>:word32]
	Mem16[r4_10 + 24<i32>:word32] = r7
	Mem18[r4_10 + 28<i32>:word32] = r8
	Mem19[r4_10 + 32<i32>:word32] = r9
	word32 r1_24
	call 0x000259F4<p32> + r10_14 (retsize: 0;)
		uses: r0:r0_35,r10:r10_14,r15:0x000259F4<p32>,r19:r19,r3:r3,r4:r4_10,r5:r19,r6:1<32>,r7:r7,r8:r8,r9:r9,Stack +001C:r3
		defs: r0:r0_35,r1:r1_24,r19:r19_28
	Mem37[r19 + 40<i32>:word32] = 3<32>
	r3 = Mem37[r1_24 + 28<i32>:word32]
l00025A7C_ds_f:
l00025A80:
	Mem40[r19 + 40<i32>:word32] = 2<32>
l00025954:
	Mem43[r19 + 44<i32>:word32] = 2<32>
l00025888:
	Mem48[r19 + 56<i32>:word32] = 0<32>
	Mem49[r19 + 60<i32>:word32] = 0<32>
	Mem52[r19 + 48<i32>:word32] = 1<32>
	Mem53[r19 + 52<i32>:word32] = 1<32>
	Mem56[r19 + 64<i32>:word32] = r0
	Mem57[r19 + 68<i32>:word32] = r0
	Mem58[r19 + 72<i32>:word32] = r0
	Mem59[r19 + 76<i32>:word32] = 1<32>
	Mem60[r19 + 80<i32>:word32] = 1<32>
	Mem61[r19 + 84<i32>:word32] = r0
	Mem62[r19 + 88<i32>:word32] = 2<32>
	Mem63[r19 + 92<i32>:word32] = 1<32>
	Mem64[r19 + 96<i32>:word32] = 0x100<32>
	Mem65[r19 + 136<i32>:word32] = r0
	Mem66[r19 + 100<i32>:word32] = r0
	Mem67[r19 + 104<i32>:word32] = r0
	Mem68[r19 + 108<i32>:word32] = r0
	Mem69[r19 + 20<i32>:word32] = 0xCA<32>
	r3Out = r3
	r4Out = 1<32>
	r7Out = 2<32>
	r19Out = dwLoc04
	return r0
fn00025A6C_exit:


void fn00025BC4(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r5:[0..31]
// LiveOut: r1
// Trashed: r1 r18 r3 r4 r6
// Preserved: r15 r19
fn00025BC4_entry:
l00025BC4:
	word32 r3_6 = Mem0[r5 + 20<i32>:word32]
	branch 8<32> -u (r3_6 + 0xFFFFFF36<32>) >= 0<32> l00025BE8_ds_t
l00025BE8_ds_t:
l00025C04:
	return
fn00025BC4_exit:
l00025BE8_ds_f:
l00025BEC:
	word32 r4_22 = Mem11[r5:word32]
	Mem24[r4_22 + 20<i32>:word32] = 0x14<32>
	word32 r6_25 = Mem24[r4_22:word32]
	Mem27[r4_22 + 24<i32>:word32] = r3_6
	call 0x00025BFC<p32> + r6_25 (retsize: 0;)
		uses: r15:0x00025BFC<p32>,r19:r5,r4:r4_22,r5:r5,r6:r6_25


word32 fn00025CD4(word32 r5, word32 r19, ptr32 & r21Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r19:[0..31] r5:[0..31]
// LiveOut: r19 r21
// Trashed: r0 r15 r19 r21 r3 r4 r5 r6
// Preserved: r1
fn00025CD4_entry:
	word32 dwLoc08
	word32 dwLoc04
l00025CD4:
	Mem5[r5 + 20<i32>:word32] = 0xD2<32>
l00025C94:
	word32 r19_17
	word32 r3_8 = Mem5[r19 + 492<i32>:word32]
	branch Test(EQ,Mem5[r3_8 + 20<i32>:word32]) l00025CA0_ds_t
l00025CA0_ds_t:
l00025C80:
	word32 r3_11 = Mem5[r3_8:word32]
	word32 r3_15
	call 0x00025C84<p32> + r3_11 (retsize: 0;)
		uses: r15:0x00025C84<p32>,r19:r19_17,r3:r3_11,r5:r19_6
		defs: r19:r19_17,r3:r3_15
	branch Test(EQ,r3_15) l00025C90_ds_t
l00025C90_ds_t:
l00025C90_ds_f:
	r19 = r19_17
l00025CA0_ds_f:
l00025CA4:
	word32 r3_24 = Mem5[Mem5[r19 + 24<i32>:word32] + 24<i32>:word32]
	word32 r19_30
	call 0x00025CAC<p32> + r3_24 (retsize: 0;)
		uses: r15:0x00025CAC<p32>,r19:r19_30,r21:1<32>,r3:r3_24,r5:r19_6
		defs: r19:r19_30
	fn0002CC00(r19_30, 0x00025CB4<p32>, r19_30)
l00025CC0:
	r21Out = dwLoc04
	return dwLoc08
fn00025CD4_exit:


word32 fn00025F38(word32 r0, word32 r5, word32 r22, word32 r23, word32 r24, word32 r25, word32 r27, word32 r28, word32 r31, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00026018
// MayUse:  r0:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r27:[0..31] r28:[0..31] r31:[0..31] r5:[0..31]
// LiveOut: r0 r22 r23 r24 r25 r26 r27 r28 r29 r31
// Trashed: C r0 r18 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8
// Preserved: r1 r15 r19 r21
fn00025F38_entry:
l00025F38:
	word32 r21_28
	word32 r19_126
	word32 r22_110
	word32 r23_111
	word32 r24_105
	word32 r25_108
	word32 r26_113
	word32 r27_106
	word32 r28_109
	word32 r29_114
	word32 r31_107
	word32 r3_119 = fn0001F0F4(Mem9[r5 + 24<i32>:word32], r22, r23, r24, r25, r27, r28, r31, out r19_126, out r21_28, out r22_110, out r23_111, out r24_105, out r25_108, out r26_113, out r27_106, out r28_109, out r29_114, out r31_107)
	branch Test(NE,r3_119) l00025FC4
l00025F6C:
	word32 r3_46
	branch Test(EQ,Mem9[r19_126 + 36<i32>:word32]) l00025F74_ds_t
l00025F74_ds_t:
	r3_46 = Mem9[r21_28:word32]
l00025F74_ds_f:
	word32 r3_47 = Mem9[r21_28:word32]
l00025F78:
	Mem49[r3_47 + 20<i32>:word32] = 0x2A<32>
	word32 r3_50 = Mem49[r3_47:word32]
	word32 r0_63
	call 0x00025F84<p32> + r3_50 (retsize: 0;)
		uses: r0:r0_63,r15:0x00025F84<p32>,r19:r19_27,r21:r21_28,r22:r22_29,r23:r23_30,r24:r24_31,r25:r25_32,r27:r27_34,r28:r28_35,r3:r3_50,r31:r31_39,r4:0x2A<32>,r5:r21_28
		defs: r0:r0_63,r19:r19_56,r21:r21_54,r22:r22_69,r23:r23_70,r24:r24_64,r25:r25_67,r27:r27_65,r28:r28_68,r31:r31_66
	r3_46 = Mem49[r21_28:word32]
l00025F90:
	Mem79[r3_46 + 20<i32>:word32] = 0x78<32>
	word32 r3_80 = Mem79[r3_46 + 4<i32>:word32]
	call 0x00025FA0<p32> + r3_80 (retsize: 0;)
		uses: r0:r0_104,r15:0x00025FA0<p32>,r19:r19_85,r21:r21_81,r22:r22_91,r23:r23_92,r24:r24_86,r25:r25_89,r27:r27_87,r28:r28_90,r3:r3_80,r31:r31_88,r5:r21_81,r6:0xFFFFFFFF<32>
		defs: r0:r0_104,r19:r19_97,r22:r22_110,r23:r23_111,r24:r24_105,r25:r25_108,r26:r26_113,r27:r27_106,r28:r28_109,r29:r29_114,r31:r31_107
	Mem121[Mem79[r19_126 + 32<i32>:word32]:byte] = 0xFF<8>
	Mem125[Mem121[r19_126 + 32<i32>:word32] + 1<i32>:byte] = 0xD9<8>
	r3_119 = 2<32>
l00025FC4:
	word32 r4_128 = Mem127[r19_126 + 32<i32>:word32]
	Mem130[r19_126 + 4<i32>:word32] = r3_119
	Mem133[r19_126 + 36<i32>:word32] = r0
	Mem134[r19_126:word32] = r4_128
	r22Out = r22_110
	r23Out = r23_111
	r24Out = r24_105
	r25Out = r25_108
	r26Out = r26_113
	r27Out = r27_106
	r28Out = r28_109
	r29Out = r29_114
	r31Out = r31_107
	return r0
fn00025F38_exit:


word32 fn00026018(word32 r0, word32 r4, word32 r18, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r27, word32 r28, word32 r31, ptr32 & r3Out, ptr32 & r19Out, ptr32 & r21Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r24Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r28Out, ptr32 & r29Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r0:[0..31] r18:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r27:[0..31] r28:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r0 r1 r19 r21 r22 r23 r24 r25 r26 r28 r29 r3
// Trashed: r0 r1 r15 r18 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8
// Preserved: C
fn00026018_entry:
	word32 dwArg1C
	word32 dwArg20
	word32 dwArg24
	word32 r26
	word32 r29
l00026018:
	word32 r3_11
	branch Test(GE,r18) l0002601C_ds_t
l0002601C_ds_t:
	r3_11 = r4
l0002601C_ds_f:
	r3_11 = r4
l00026020:
	r0 = fn00025F38(r0, r22, r22, r23, r24, r25, r27, r28, r31, out r22, out r23, out r24, out r25, out r26, out r27, out r28, out r29, out r31)
	r19 = r19 - r3_11
	r3_11 = Mem0[r21 + 4<i32>:word32]
	branch r3_11 < r19 l00026038_ds_t
l00026038_ds_t:
l00026038_ds_f:
	r4 = r3_11
l0002603C:
	word32 r6_49 = Mem0[r21:word32]
	Mem54[r21 + 4<i32>:word32] = r4 - r19
	Mem56[r21:word32] = r6_49 + r19
	r3Out = r3_11
	r19Out = dwArg1C
	r21Out = dwArg20
	r22Out = dwArg24
	r23Out = r23
	r24Out = r24
	r25Out = r25
	r26Out = r26
	r28Out = r28
	r29Out = r29
	return r0
fn00026018_exit:


void fn000261AC(word32 r0, word32 r5, word32 r21, word32 r22, word32 r23, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r5:[0..31]
// LiveOut:
// Trashed: C r0 r18 r3 r4 r5 r6 r7 r8
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29
fn000261AC_entry:
l000261AC:
	word32 r24_236
	word32 r19_113 = Mem25[r5 + 384<i32>:word32]
	branch Test(EQ,r19_113 ^ 1<32>) l000261E8_ds_t
l000261E8_ds_t:
l000264AC:
	word32 r21_30 = Mem25[r5 + 388<i32>:word32]
	word32 r22_33 = Mem25[r21_30 + 12<i32>:word32]
	word32 r5_34 = Mem25[r21_30 + 32<i32>:word32]
	Mem35[r5 + 404<i32>:word32] = Mem25[r21_30 + 28<i32>:word32]
	word32 r4_36 = Mem35[r21_30 + 36<i32>:word32]
	Mem38[r5 + 408<i32>:word32] = r5_34
	Mem39[r21_30 + 64<i32>:word32] = r4_36
	Mem40[r21_30 + 52<i32>:word32] = 1<32>
	Mem41[r21_30 + 56<i32>:word32] = 1<32>
	Mem42[r21_30 + 60<i32>:word32] = 1<32>
	Mem44[r21_30 + 68<i32>:word32] = 1<32>
	word32 r22_50
	word32 r23_678
	word32 r8_677
	word32 r7_676
	word32 r6_675
	word32 r3_52 = fn0001EA08(r0, 1<32>, r5_34, r19_113, r21_30, r22_33, r23, out r6_675, out r7_676, out r8_677, out r19_113, out r21, out r22_50, out r23_678)
	branch Test(NE,r3_52) l00026504
l00026504:
	Mem60[r21 + 72<i32>:word32] = r3_52
	Mem61[r5 + 412<i32>:word32] = 1<32>
	Mem62[r5 + 416<i32>:word32] = r0
l000264F0:
	Mem63[r21 + 72<i32>:word32] = r22_50
	Mem65[r5 + 412<i32>:word32] = 1<32>
	Mem66[r5 + 416<i32>:word32] = r0
l000261E8_ds_f:
	r24_236 = r5
l000261EC:
	branch 3<32> -u (r19_113 + 0xFFFFFFFF<32>) >= 0<32> l000261FC_ds_t
l000261FC_ds_t:
l0002621C:
	word32 r3_79 = fn0002CCF0(Mem25[r5 + 28<i32>:word32], Mem25[r5 + 364<i32>:word32] * 8<32>)
	word32 r6_82 = Mem25[r5 + 368<i32>:word32]
	word32 r5_83 = Mem25[r5 + 32<i32>:word32]
	Mem84[r5 + 404<i32>:word32] = r3_79
	word32 r3_90 = fn0002CCF0(r5_83, r6_82 * 8<32>)
	word32 r4_93 = Mem84[r5 + 384<i32>:word32]
	Mem94[r5 + 408<i32>:word32] = r3_90
	branch Test(LE,r4_93) l0002626C_ds_t
l0002626C_ds_t:
	Mem95[r5 + 412<i32>:word32] = r0
l0002626C_ds_f:
	Mem96[r5 + 412<i32>:word32] = r0
l00026270:
	word32 r29_184 = 0<32>
	r26 = 0<32>
	word32 r21_102 = r5 + 0x184<32>
	r22 = 0xA<32>
	r23 = 0xD<32>
l00026284:
	r25 = Mem103[r21_102:word32]
	r27 = Mem103[r25 + 8<i32>:word32]
	r28 = Mem103[r25 + 12<i32>:word32]
	Mem109[r25 + 52<i32>:word32] = r27
	Mem111[r25 + 56<i32>:word32] = r28
	word32 r19_685
	word32 r6_684
	word32 r4_683
	word32 r3_118 = fn0001E908(r0, r27, r19_113, out r4_683, out r6_684, out r19_685)
	word32 r5_123 = Mem111[r25 + 36<i32>:word32]
	Mem124[r25 + 60<i32>:word32] = r3_118
	word32 r19_130
	word32 r6_687
	word32 r4_686
	word32 r3_131 = fn0001E908(r0, r5_123, r3_118, out r4_686, out r6_687, out r19_130)
	word32 r5_136 = Mem124[r25 + 28<i32>:word32]
	Mem138[r25 + 64<i32>:word32] = r3_131
	word32 r19_143
	word32 r21_144
	word32 r22_145
	word32 r23_146
	word32 r6_688
	word32 r7_689
	word32 r8_690
	word32 r3_147 = fn0001EA08(r0, r3_131, r5_136, r19_130, r21_102, r22, r23, out r6_688, out r7_689, out r8_690, out r19_143, out r21_144, out r22_145, out r23_146)
	branch Test(EQ,r3_147) l000262D8_ds_t
l000262D8_ds_t:
l000262D8_ds_f:
l000262DC:
	r27 = r3_147
l000262E0:
	word32 r5_158 = Mem138[r25 + 32<i32>:word32]
	Mem161[r25 + 68<i32>:word32] = r27
	word32 r19_170
	word32 r21_171
	word32 r8_681
	word32 r7_680
	word32 r6_679
	word32 r3_174 = fn0001EA08(r0, r3_147, r5_158, r19_143, r21_144, r22_145, r23_146, out r6_679, out r7_680, out r8_681, out r19_170, out r21_171, out r22, out r23)
	branch Test(EQ,r3_174) l000262F8
l000262F4:
	r28 = r3_174
l000262F8:
	r29 = r19_170 + r29_184
	branch r22 >= r29 l00026304_ds_t
l00026304_ds_t:
	Mem191[r25 + 72<i32>:word32] = r28
l0002631C:
	branch Test(LE,r19_170) l00026320_ds_t
l00026320_ds_t:
l00026320_ds_f:
l00026324:
	word32 r6_197 = Mem191[r5 + 412<i32>:word32]
	word32 r3_204 = r5 + (r6_197 + 0x68<32>) * 4<32>
	word32 r4_205 = r5 + (r19_170 + (r6_197 + 0x68<32>)) * 4<32>
l00026348:
	Mem208[r3_204:word32] = r26
	r3_204 = r3_204 + 4<32>
	branch Test(NE,r4_205 ^ r3_204) l00026348
l00026358:
	Mem217[r5 + 412<i32>:word32] = r6_197 + 1<32> + (r19_170 + 0xFFFFFFFF<32>)
l00026364:
	r19_113 = Mem219[r5 + 384<i32>:word32]
	r26 = r26 + 1<32>
	branch r26 >= r19_113 l00026374_ds_t
l00026374_ds_t:
	r21 = r21_171 + 4<32>
l00026380:
	branch Test(GT,r19_113) l000263E8
l000263E8:
	r21 = Mem219[r5 + 388<i32>:word32]
l000263EC:
	word32 r22_242
	r24_236 = r5
	r23 = r5 + 0x188<32>
	r27 = 3<32>
	r25 = 0x104<32>
	r26 = 1<32>
	r28 = 0x34<32>
	branch Test(EQ,Mem233[r21 + 76<i32>:word32]) l0002640C_ds_t
l0002640C_ds_t:
	r22_242 = 1<32>
l0002640C_ds_f:
	r22_242 = 1<32>
l00026410:
	branch r22_242 >= r19_113 l00026418_ds_t
l00026418_ds_t:
	r22 = r22_242 + 1<32>
l00026418_ds_f:
	r22_242 = r22_242 + 1<32>
l0002641C:
	r21 = Mem250[r23:word32]
	branch Test(NE,Mem250[r21 + 76<i32>:word32]) l00026428_ds_t
l00026428_ds_t:
	r23 = r23 + 4<32>
l00026428_ds_f:
	r23 = r23 + 4<32>
l0002642C:
	word32 r3_336
	word32 r4_257 = Mem256[r21 + 16<i32>:word32]
	word32 r19_261 = r4_257 + 0x29<32>
	word32 r3_262 = (r4_257 + 0x29<32>) * 2<32>
	branch r27 -u r4_257 < 0<32> l00026444_ds_t
l00026444_ds_t:
l00026444_ds_f:
l00026448:
	branch Test(EQ,Mem256[r3_262 * 2<32> + r24_236:word32]) l00026490
l00026490:
	word32 r3_271 = Mem256[r24_236:word32]
	word32 r6_272 = Mem256[r3_271:word32]
	Mem276[r3_271 + 20<i32>:word32] = r28
	Mem279[r3_271 + 24<i32>:word32] = r4_257
	call 0x0002649C<p32> + r6_272 (retsize: 0;)
		uses: r0:r0_301,r15:0x0002649C<p32>,r19:r4_257 + 0x29<32>,r21:r21_255,r22:r22_283,r23:r23_285,r24:r24_258,r25:r25_287,r26:r26_290,r27:r27_263,r28:r28_274,r29:r29_294,r3:r3_271,r5:r24_258,r6:r6_272
		defs: r0:r0_332,r19:r19_318,r21:r21_319,r22:r22_320,r23:r23_321,r24:r24_316,r25:r25_322,r26:r26_323,r27:r27_324,r28:r28_325,r29:r29_326
	r3_336 = Mem279[r24_236 + 4<i32>:word32]
l00026450:
	r3_336 = Mem256[r24_236 + 4<i32>:word32]
l00026454:
	word32 r3_346 = Mem345[r3_336:word32]
	word32 r19_362
	word32 r3_372
	call 0x00026468<p32> + r3_346 (retsize: 0;)
		uses: r0:r0_357,r15:0x00026468<p32>,r19:r19_347 * 4<32>,r21:r21_351,r22:r22_352,r23:r23_353,r24:r24_342,r25:r25_338,r26:r26_340,r27:r27_354,r28:r28_355,r29:r29_356,r3:r3_346,r5:r24_342,r6:r26_340,r7:r25_338
		defs: r0:r0_376,r19:r19_362,r22:r22_364,r23:r23_365,r24:r24_360,r25:r25_366,r26:r26_367,r27:r27_368,r28:r28_369,r29:r29_370,r3:r3_372
	word32 r19_682
	word32 r3_388 = fn0001F60C(r3_372, r19_362, out r19_682, out r21)
	r19_113 = Mem345[r24_236 + 384<i32>:word32]
	Mem390[r21 + 76<i32>:word32] = r3_388
l00026384:
	word32 r3_394 = Mem392[Mem392[r24_236 + 500<i32>:word32]:word32]
	word32 r24_422
	word32 r19_424
	word32 r21_425
	word32 r22_426
	word32 r23_427
	word32 r25_428
	word32 r26_429
	word32 r27_430
	word32 r28_431
	word32 r29_432
	word32 r0_438
	call 0x0002638C<p32> + r3_394 (retsize: 0;)
		uses: r0:r0_419,r15:0x0002638C<p32>,r19:r19_397,r21:r21_398,r22:r22_400,r23:r23_403,r24:r24_391,r25:r25_407,r26:r26_410,r27:r27_411,r28:r28_415,r29:r29_418,r3:r3_394,r5:r24_391
		defs: r0:r0_438,r19:r19_424,r21:r21_425,r22:r22_426,r23:r23_427,r24:r24_422,r25:r25_428,r26:r26_429,r27:r27_430,r28:r28_431,r29:r29_432
	word32 r3_443 = Mem392[Mem392[r24_422 + 484<i32>:word32]:word32]
	word32 r24_447
	call 0x0002639C<p32> + r3_443 (retsize: 0;)
		uses: r0:r0_438,r15:0x0002639C<p32>,r19:r19_424,r21:r21_425,r22:r22_426,r23:r23_427,r24:r24_422,r25:r25_428,r26:r26_429,r27:r27_430,r28:r28_431,r29:r29_432,r3:r3_443,r5:r24_422
		defs: r24:r24_447
	Mem470[Mem392[r24_447 + 492<i32>:word32]:word32] = Mem392[Mem392[r24_447 + 484<i32>:word32] + 4<i32>:word32]
	return
fn000261AC_exit:
l00026374_ds_f:
	r21_102 = r21_171 + 4<32>
l00026378:
	r29_184 = Mem219[r5 + 412<i32>:word32]
l00026304_ds_f:
	Mem485[r25 + 72<i32>:word32] = r28
l00026308:
	word32 r3_486 = Mem485[r5:word32]
	word32 r4_488 = Mem485[r3_486:word32]
	Mem490[r3_486 + 20<i32>:word32] = r23
	call 0x00026314<p32> + r4_488 (retsize: 0;)
		uses: r0:r0,r15:0x00026314<p32>,r19:r19_170,r21:r21_171,r22:r22_172,r23:r23_173,r24:r5,r25:r25_104,r26:r26_224,r27:r27_160,r28:r28_188,r29:r29_185,r3:r3_486,r4:r4_488,r5:r5
l000261FC_ds_f:
l00026200:
	word32 r3_513 = Mem25[r5:word32]
	Mem514[r3_513 + 20<i32>:word32] = 0x1A<32>
	Mem516[r3_513 + 28<i32>:word32] = 4<32>
	word32 r4_517 = Mem516[r3_513:word32]
	Mem519[r3_513 + 24<i32>:word32] = r19_113
	call 0x00026214<p32> + r4_517 (retsize: 0;)
		uses: r0:r0,r15:0x00026214<p32>,r19:r19_27,r21:r21,r22:r22,r23:r23,r24:r5,r25:r25,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_513,r4:r4_517,r5:r5


void fn000268CC(word32 r5, word32 r15, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000256D8
// MayUse:  r15:[0..31] r19:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19
fn000268CC_entry:
l000268CC:
	word32 r3_11 = Mem10[Mem0[r5 + 4<i32>:word32]:word32]
	word32 r3_17
	word32 r19_19
	word32 r0_24
	call 0x000268E8<p32> + r3_11 (retsize: 0;)
		uses: r15:0x000268E8<p32>,r19:r5,r3:r3_11,r5:r5,r6:0<32>,r7:0x1C<32>,Stack +0000:r15,Stack +001C:r19
		defs: r0:r0_24,r19:r19_19,r3:r3_17
	Mem26[r19_19 + 492<i32>:word32] = r3_17
	Mem27[r3_17 + 16<i32>:word32] = r0_24
	Mem28[r3_17:word32] = 0xFFFFCB9C<32>
	Mem30[r3_17 + 20<i32>:word32] = r0_24
	Mem31[r3_17 + 4<i32>:word32] = 0xFFFFC7CC<32>
	Mem33[r3_17 + 8<i32>:word32] = 0xFFFFC82C<32>
	Mem35[r3_17 + 12<i32>:word32] = 0xFFFFC7B8<32>
	Mem37[r3_17 + 24<i32>:word32] = 1<32>
	return
fn000268CC_exit:


void fn00026944(word32 r5, word32 r6, word32 r7, word32 r19, word32 r21, word32 r24, word32 r25, word32 r26, word32 r27)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r19:[0..31] r21:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: C r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27
fn00026944_entry:
l00026944:
	word32 r23_111 = Mem21[r5 + 24<i32>:word32]
	word32 r3_25 = Mem21[r23_111 + 4<i32>:word32]
	word32 r4_26 = Mem21[r23_111:word32]
	Mem28[r5 + 220<i32>:word32] = r6
	word32 r22_114 = r5
	branch Test(NE,r3_25) l00026984_ds_t
l00026984_ds_t:
	Mem30[r5 + 224<i32>:word32] = r7
l00026984_ds_f:
	Mem31[r5 + 224<i32>:word32] = r7
l00026988:
	word32 r3_32 = Mem31[r23_111 + 12<i32>:word32]
	word32 r3_45
	call 0x0002698C<p32> + r3_32 (retsize: 0;)
		uses: r15:0x0002698C<p32>,r19:r19,r21:r21,r22:r5,r23:r23_23,r24:r24,r25:r25,r26:r26,r27:r27,r3:r3_32,r5:r5,r6:r6,r7:r7
		defs: r21:r21_38,r22:r22_35,r23:r23_39,r24:r24_40,r25:r25_41,r26:r26_42,r27:r27_43,r3:r3_45,r6:r6_47,r7:r7_48
	branch Test(EQ,r3_45) l00026998_ds_t
l00026998_ds_t:
l00026998_ds_f:
l0002699C:
	r4_26 = Mem31[r23_111:word32]
	r3_25 = Mem31[r23_111 + 4<i32>:word32]
l000269A4:
	word32 r19_116
	word32 r19_58 = CONVERT(Mem56[r4_26:byte], byte, word32)
	word32 r3_104 = r3_25 + 0xFFFFFFFF<32>
	word32 r4_100 = r4_26 + 1<32>
	branch Test(NE,r3_104) l000269B4_ds_t
l000269B4_ds_t:
	r19_116 = CONVERT(SLICE(r19_58, int8, 0), int8, int32)
l000269B4_ds_f:
	word32 r19_65 = CONVERT(SLICE(r19_58, int8, 0), int8, int32)
l000269B8:
	word32 r3_67 = Mem56[r23_111 + 12<i32>:word32]
	word32 r3_90
	call 0x000269BC<p32> + r3_67 (retsize: 0;)
		uses: r15:0x000269BC<p32>,r19:r19_65,r21:r21_71,r22:r22_69,r23:r23_66,r24:r24_72,r25:r25_73,r26:r26_74,r27:r27_75,r3:r3_67,r5:r22_69,r6:r6_76,r7:r7_77
		defs: r19:r19_82,r21:r21_83,r22:r22_80,r23:r23_84,r25:r25_86,r26:r26_87,r27:r27_88,r3:r3_90,r6:r6_92,r7:r7_93
	branch Test(EQ,r3_90) l000269C8_ds_t
l000269C8_ds_t:
l000269C8_ds_f:
l000269CC:
	r4_100 = Mem56[r23_111:word32]
	r3_104 = Mem56[r23_111 + 4<i32>:word32]
l000269D4:
	word32 r24_108
	word32 r24_103 = CONVERT(Mem56[r4_100:byte], byte, word32)
	word32 r3_105 = r3_104 + 0xFFFFFFFF<32>
	word32 r4_106 = r4_100 + 1<32>
	branch Test(NE,r3_105) l000269E4_ds_t
l000269E4_ds_t:
	r24_108 = CONVERT(SLICE(r24_103, int8, 0), int8, int32)
l000269E4_ds_f:
	word32 r24_110 = CONVERT(SLICE(r24_103, int8, 0), int8, int32)
l000269E8:
	word32 r3_112 = Mem56[r23_111 + 12<i32>:word32]
	word32 r3_135
	call 0x000269EC<p32> + r3_112 (retsize: 0;)
		uses: r15:0x000269EC<p32>,r19:r19_116,r21:r21_117,r22:r22_114,r23:r23_111,r24:r24_110,r25:r25_118,r26:r26_119,r27:r27_120,r3:r3_112,r5:r22_114,r6:r6_121,r7:r7_122
		defs: r19:r19_127,r21:r21_128,r22:r22_125,r23:r23_129,r24:r24_130,r25:r25_131,r26:r26_132,r27:r27_133,r3:r3_135,r6:r6_137,r7:r7_138
	branch Test(EQ,r3_135) l000269F8_ds_t
l000269F8_ds_t:
l000269F8_ds_f:
l000269FC:
	r4_106 = Mem56[r23_111:word32]
	r3_105 = Mem56[r23_111 + 4<i32>:word32]
l00026A04:
	word32 r5_153
	Mem152[r22_114 + 212<i32>:word32] = CONVERT(Mem56[r4_106:byte], byte, word32)
	word32 r3_150 = r3_105 + 0xFFFFFFFF<32>
	branch Test(NE,r3_150) l00026A14_ds_t
l00026A14_ds_t:
	r5_153 = r4_106 + 1<32>
l00026A14_ds_f:
l00026A18:
	word32 r3_156 = Mem152[r23_111 + 12<i32>:word32]
	word32 r3_179
	call 0x00026A1C<p32> + r3_156 (retsize: 0;)
		uses: r15:0x00026A1C<p32>,r19:r19_159,r21:r21_160,r22:r22_151,r23:r23_155,r24:r24_161,r25:r25_162,r26:r26_163,r27:r27_164,r3:r3_156,r5:r22_151,r6:r6_165,r7:r7_166
		defs: r19:r19_171,r21:r21_172,r22:r22_169,r23:r23_173,r24:r24_174,r25:r25_175,r26:r26_176,r27:r27_177,r3:r3_179,r6:r6_181,r7:r7_182
	branch Test(EQ,r3_179) l00026A28_ds_t
l00026A28_ds_t:
l00026A28_ds_f:
l00026A2C:
	r5_153 = Mem152[r23_111:word32]
	r3_150 = Mem152[r23_111 + 4<i32>:word32]
l00026A34:
	word32 r4_197 = CONVERT(Mem152[r5_153:byte], byte, int32)
	word32 r3_194 = r3_150 + 0xFFFFFFFF<32>
	word32 r5_195 = r5_153 + 1<32>
	word32 r4_206 = r4_197 * 0x100<32>
	branch Test(NE,r3_194) l00026A70_ds_t
l00026A70_ds_t:
	Mem208[r22_114 + 32<i32>:word32] = r4_197 * 0x100<32>
l00026A70_ds_f:
	Mem209[r22_114 + 32<i32>:word32] = r4_197 * 0x100<32>
l00026A74:
	word32 r3_211 = Mem209[r23_111 + 12<i32>:word32]
	word32 r3_234
	call 0x00026A78<p32> + r3_211 (retsize: 0;)
		uses: r15:0x00026A78<p32>,r19:r19_214,r21:r21_215,r22:r22_207,r23:r23_210,r24:r24_216,r25:r25_217,r26:r26_218,r27:r27_219,r3:r3_211,r5:r22_207,r6:r6_220,r7:r7_221
		defs: r19:r19_226,r21:r21_227,r22:r22_224,r23:r23_228,r24:r24_229,r25:r25_230,r26:r26_231,r27:r27_232,r3:r3_234,r7:r7_237
	branch Test(EQ,r3_234) l00026A84_ds_t
l00026A84_ds_t:
l00026A84_ds_f:
l00026A88:
	r5_195 = Mem209[r23_111:word32]
	r3_194 = Mem209[r23_111 + 4<i32>:word32]
	r4_206 = Mem209[r22_114 + 32<i32>:word32]
l00026A94:
	word32 r6_248 = CONVERT(Mem246[r5_195:byte], byte, word32)
	word32 r3_250 = r3_194 + 0xFFFFFFFF<32>
	word32 r5_251 = r5_195 + 1<32>
	word32 r4_253 = r6_248 + r4_206
	branch Test(NE,r3_250) l00026AA8_ds_t
l00026AA8_ds_t:
	Mem255[r22_114 + 32<i32>:word32] = r4_253
l00026AA8_ds_f:
	Mem256[r22_114 + 32<i32>:word32] = r4_253
l00026AAC:
	word32 r3_258 = Mem256[r23_111 + 12<i32>:word32]
	word32 r3_280
	call 0x00026AB0<p32> + r3_258 (retsize: 0;)
		uses: r15:0x00026AB0<p32>,r19:r19_261,r21:r21_262,r22:r22_254,r23:r23_257,r24:r24_263,r25:r25_264,r26:r26_265,r27:r27_266,r3:r3_258,r5:r22_254,r6:r6_248,r7:r7_267
		defs: r19:r19_272,r21:r21_273,r22:r22_270,r23:r23_274,r24:r24_275,r25:r25_276,r26:r26_277,r27:r27_278,r3:r3_280,r6:r6_282,r7:r7_283
	branch Test(EQ,r3_280) l00026ABC_ds_t
l00026ABC_ds_t:
l00026ABC_ds_f:
l00026AC0:
	r5_251 = Mem256[r23_111:word32]
	r3_250 = Mem256[r23_111 + 4<i32>:word32]
l00026AC8:
	word32 r4_298 = CONVERT(Mem291[r5_251:byte], byte, int32)
	word32 r3_295 = r3_250 + 0xFFFFFFFF<32>
	word32 r5_296 = r5_251 + 1<32>
	word32 r4_307 = r4_298 * 0x100<32>
	branch Test(NE,r3_295) l00026B04_ds_t
l00026B04_ds_t:
	Mem309[r22_114 + 28<i32>:word32] = r4_298 * 0x100<32>
l00026B04_ds_f:
	Mem310[r22_114 + 28<i32>:word32] = r4_298 * 0x100<32>
l00026B08:
	word32 r3_312 = Mem310[r23_111 + 12<i32>:word32]
	word32 r3_335
	call 0x00026B0C<p32> + r3_312 (retsize: 0;)
		uses: r15:0x00026B0C<p32>,r19:r19_315,r21:r21_316,r22:r22_308,r23:r23_311,r24:r24_317,r25:r25_318,r26:r26_319,r27:r27_320,r3:r3_312,r5:r22_308,r6:r6_321,r7:r7_322
		defs: r19:r19_327,r22:r22_325,r23:r23_329,r24:r24_330,r25:r25_331,r26:r26_332,r27:r27_333,r3:r3_335,r7:r7_338
	branch Test(EQ,r3_335) l00026B18_ds_t
l00026B18_ds_t:
l00026B18_ds_f:
l00026B1C:
	r5_296 = Mem310[r23_111:word32]
	r3_295 = Mem310[r23_111 + 4<i32>:word32]
	r4_307 = Mem310[r22_114 + 28<i32>:word32]
l00026B28:
	word32 r6_349 = CONVERT(Mem347[r5_296:byte], byte, word32)
	word32 r3_351 = r3_295 + 0xFFFFFFFF<32>
	word32 r21_352 = r5_296 + 1<32>
	word32 r4_354 = r6_349 + r4_307
	branch Test(NE,r3_351) l00026B3C_ds_t
l00026B3C_ds_t:
	Mem356[r22_114 + 28<i32>:word32] = r4_354
l00026B3C_ds_f:
	Mem357[r22_114 + 28<i32>:word32] = r4_354
l00026B40:
	word32 r3_359 = Mem357[r23_111 + 12<i32>:word32]
	word32 r3_380
	call 0x00026B44<p32> + r3_359 (retsize: 0;)
		uses: r15:0x00026B44<p32>,r19:r19_362,r21:r21_352,r22:r22_355,r23:r23_358,r24:r24_363,r25:r25_364,r26:r26_365,r27:r27_366,r3:r3_359,r5:r22_355,r6:r6_349,r7:r7_367
		defs: r19:r19_372,r22:r22_370,r23:r23_374,r24:r24_375,r25:r25_376,r26:r26_377,r27:r27_378,r3:r3_380
	branch Test(EQ,r3_380) l00026B50_ds_t
l00026B50_ds_t:
l00026B50_ds_f:
l00026B54:
	r21_352 = Mem357[r23_111:word32]
	r3_351 = Mem357[r23_111 + 4<i32>:word32]
l00026B5C:
	word32 r5_395 = Mem391[r22_114:word32]
	Mem398[r22_114 + 36<i32>:word32] = CONVERT(Mem391[r21_352:byte], byte, word32)
	Mem402[r5_395 + 24<i32>:word32] = Mem398[r22_114 + 472<i32>:word32]
	Mem406[r5_395 + 28<i32>:word32] = Mem402[r22_114 + 28<i32>:word32]
	Mem410[r5_395 + 32<i32>:word32] = Mem406[r22_114 + 32<i32>:word32]
	word32 r7_411 = Mem410[r22_114 + 36<i32>:word32]
	Mem413[r5_395 + 20<i32>:word32] = 0x64<32>
	Mem414[r5_395 + 36<i32>:word32] = r7_411
	word32 r7_416 = Mem414[r5_395 + 4<i32>:word32]
	word32 r4_421 = (r24_108 & 0xFF<32>) + r19_116 * 0x100<32>
	word32 r6_446
	word32 r24_439
	word32 r27_442
	word32 r25_440
	word32 r26_441
	word32 r22_434
	word32 r21_437
	word32 r23_438
	word32 r19_436
	call 0x00026BD4<p32> + r7_416 (retsize: 0;)
		uses: r15:0x00026BD4<p32>,r19:r3_423 + 0xFFFFFFFF<32>,r21:r21_390 + 1<32>,r22:r22_394,r23:r23_428,r24:r4_421 + 0xFFFFFFF8<32>,r25:r25_429,r26:r26_430,r27:r27_431,r4:r4_421,r5:r22_394,r6:1<32>,r7:r7_416
		defs: r19:r19_436,r21:r21_437,r22:r22_434,r23:r23_438,r24:r24_439,r25:r25_440,r26:r26_441,r27:r27_442,r6:r6_446
	branch Test(EQ,Mem414[Mem414[r22_434 + 496<i32>:word32] + 16<i32>:word32]) l00026BE8_ds_t
l00026BE8_ds_t:
	word32 r7_452 = 0x3A<32>
l00026C00:
	word32 r3_455
	word32 r4_456
	word32 r3_458
	branch Test(EQ,Mem414[r22_434 + 32<i32>:word32]) l00026C10
l00026C08:
	branch Test(NE,Mem414[r22_434 + 28<i32>:word32]) l00026DFC
l00026DFC:
	r3_455 = Mem414[r22_434 + 36<i32>:word32]
	branch Test(GT,r3_455) l00026E04_ds_t
l00026E04_ds_t:
	r4_456 = r3_455 * 2<32>
l00026E04_ds_f:
l00026E08:
	r3_458 = Mem414[r22_434:word32]
l00026C10:
	r3_458 = Mem414[r22_434:word32]
l00026C14:
	Mem464[r3_458 + 20<i32>:word32] = 0x20<32>
	word32 r3_465 = Mem464[r3_458:word32]
	call 0x00026C20<p32> + r3_465 (retsize: 0;)
		uses: r15:0x00026C20<p32>,r19:r19_436,r21:r21_437,r22:r22_434,r23:r23_438,r24:r24_439,r25:r25_440,r26:r26_441,r27:r27_442,r3:r3_465,r4:0x20<32>,r5:r22_434,r6:r6_446,r7:0x3A<32>
		defs: r19:r19_492,r21:r21_493,r22:r22_490,r23:r23_494,r24:r24_495,r25:r25_496,r26:r26_497,r27:r27_498,r7:r7_503
	r3_455 = Mem464[r22_434 + 36<i32>:word32]
	r4_456 = r3_455 * 2<32>
l00026C30:
	word32 r6_513
	word32 r24_512 = r4_456 + r3_455 ^ r24_439
	branch Test(EQ,r24_512) l00026C3C_ds_t
l00026C3C_ds_t:
	r6_513 = 0xB<32>
l00026C3C_ds_f:
l00026C40:
	word32 r3_517 = Mem516[r22_434:word32]
	Mem518[r3_517 + 20<i32>:word32] = 0xB<32>
	word32 r3_519 = Mem518[r3_517:word32]
	call 0x00026C4C<p32> + r3_519 (retsize: 0;)
		uses: r15:0x00026C4C<p32>,r19:r19_522,r21:r21_523,r22:r22_515,r23:r23_524,r24:r24_512,r25:r25_525,r26:r26_526,r27:r27_527,r3:r3_519,r5:r22_515,r6:0xB<32>,r7:r7_528
		defs: r19:r19_533,r21:r21_534,r22:r22_531,r23:r23_535,r24:r24_536,r25:r25_537,r26:r26_538,r6:r6_543
	r3_455 = Mem518[r22_434 + 36<i32>:word32]
l00026C58:
	word32 r7_587
	word32 r27_550 = Mem549[r22_434 + 216<i32>:word32]
	branch Test(EQ,r27_550) l00026C60_ds_t
l00026C60_ds_t:
	word32 r7_552 = r3_455 * 2<32>
l00026DB4:
	word32 r7_553 = r7_552 + r3_455
	word32 r3_559 = Mem549[Mem549[r22_434 + 4<i32>:word32]:word32]
	word32 r3_584
	call 0x00026DE4<p32> + r3_559 (retsize: 0;)
		uses: r15:0x00026DE4<p32>,r19:r19_566,r21:r21_567,r22:r22_548,r23:r23_568,r24:r24_569,r25:r25_570,r26:r26_571,r27:r27_550,r3:r3_559,r4:r7_553 * 0x1C<32>,r5:r22_548,r6:1<32>,r7:r7_553 * 0x1C<32>
		defs: r19:r19_576,r21:r21_577,r22:r22_574,r23:r23_578,r3:r3_584,r6:r6_586,r7:r7_587
	r3_455 = Mem549[r22_434 + 36<i32>:word32]
	Mem592[r22_434 + 216<i32>:word32] = r3_584
	r27_550 = r3_584
l00026C60_ds_f:
	r7_587 = r3_455 * 2<32>
l00026C64:
	branch Test(LE,r3_455) l00026C68_ds_t
l00026C68_ds_t:
l00026C68_ds_f:
	word32 r24_596 = 0<32>
l00026C6C:
	word32 r26_597 = 0x65<32>
	word32 r25_598 = 1<32>
l00026C74:
	branch Test(NE,r19_436) l00026C78_ds_t
l00026C78_ds_t:
	Mem602[r27_550 + 4<i32>:word32] = r24_596
l00026C78_ds_f:
	Mem603[r27_550 + 4<i32>:word32] = r24_596
l00026C7C:
	word32 r3_605 = Mem603[r23_438 + 12<i32>:word32]
	word32 r3_626
	call 0x00026C80<p32> + r3_605 (retsize: 0;)
		uses: r15:0x00026C80<p32>,r19:r19_599,r21:r21_609,r22:r22_607,r23:r23_604,r24:r24_600,r25:r25_610,r26:r26_611,r27:r27_601,r3:r3_605,r5:r22_607,r6:r6_612,r7:r7_613
		defs: r22:r22_616,r23:r23_620,r24:r24_621,r25:r25_622,r26:r26_623,r27:r27_624,r3:r3_626,r6:r6_628,r7:r7_629
	branch Test(EQ,r3_626) l00026C8C_ds_t
l00026C8C_ds_t:
l00026C8C_ds_f:
l00026C90:
	r21_437 = Mem603[r23_438:word32]
	r19_436 = Mem603[r23_438 + 4<i32>:word32]
l00026C98:
	word32 r3_639 = CONVERT(Mem637[r21_437:byte], byte, word32)
	word32 r19_641 = r19_436 + 0xFFFFFFFF<32>
	word32 r21_642 = r21_437 + 1<32>
	branch Test(NE,r19_641) l00026CA8_ds_t
l00026CA8_ds_t:
	Mem644[r27_550:word32] = r3_639
l00026CA8_ds_f:
	Mem645[r27_550:word32] = r3_639
l00026CAC:
	word32 r3_647 = Mem645[r23_438 + 12<i32>:word32]
	word32 r3_668
	call 0x00026CB0<p32> + r3_647 (retsize: 0;)
		uses: r15:0x00026CB0<p32>,r19:r19_641,r21:r21_642,r22:r22_649,r23:r23_646,r24:r24_651,r25:r25_652,r26:r26_653,r27:r27_643,r3:r3_647,r5:r22_649,r6:r6_654,r7:r7_655
		defs: r22:r22_658,r23:r23_662,r24:r24_663,r25:r25_664,r26:r26_665,r27:r27_666,r3:r3_668,r6:r6_670,r7:r7_671
	branch Test(EQ,r3_668) l00026CBC_ds_t
l00026CBC_ds_t:
l00026CBC_ds_f:
l00026CC0:
	r21_642 = Mem645[r23_438:word32]
	r19_641 = Mem645[r23_438 + 4<i32>:word32]
l00026CC8:
	word32 r3_681 = CONVERT(Mem679[r21_642:byte], byte, word32)
	Mem692[r27_550 + 12<i32>:word32] = r3_681 & 0xF<32>
	word32 r19_683 = r19_641 + 0xFFFFFFFF<32>
	word32 r21_684 = r21_642 + 1<32>
	branch Test(NE,r19_683) l00026CF4_ds_t
l00026CF4_ds_t:
	Mem693[r27_550 + 8<i32>:word32] = r3_681 >>u 4<i32>
l00026CF4_ds_f:
	Mem694[r27_550 + 8<i32>:word32] = r3_681 >>u 4<i32>
l00026CF8:
	word32 r3_696 = Mem694[r23_438 + 12<i32>:word32]
	word32 r3_717
	call 0x00026CFC<p32> + r3_696 (retsize: 0;)
		uses: r15:0x00026CFC<p32>,r19:r19_683,r21:r21_684,r22:r22_698,r23:r23_695,r24:r24_700,r25:r25_701,r26:r26_702,r27:r27_691,r3:r3_696,r5:r22_698,r6:r6_703,r7:r7_704
		defs: r22:r22_707,r23:r23_711,r24:r24_712,r25:r25_713,r26:r26_714,r27:r27_715,r3:r3_717
	branch Test(EQ,r3_717) l00026D08_ds_t
l00026D08_ds_t:
l00026D08_ds_f:
l00026D0C:
	r21_684 = Mem694[r23_438:word32]
	r19_683 = Mem694[r23_438 + 4<i32>:word32]
l00026D14:
	word32 r3_732 = Mem728[r22_434:word32]
	word32 r7_734 = Mem728[r27_550:word32]
	Mem735[r27_550 + 16<i32>:word32] = CONVERT(Mem728[r21_684:byte], byte, word32)
	Mem737[r3_732 + 24<i32>:word32] = r7_734
	word32 r27_736 = r27_550 + 0x54<32>
	word32 r4_739 = Mem737[r3_732 + 4<i32>:word32]
	Mem742[r3_732 + 28<i32>:word32] = Mem737[r27_736 - 76<i32>:word32]
	Mem747[r3_732 + 32<i32>:word32] = Mem742[r27_736 - 72<i32>:word32]
	word32 r7_748 = Mem747[r27_736 - 68<i32>:word32]
	Mem750[r3_732 + 20<i32>:word32] = r26_597
	Mem754[r3_732 + 36<i32>:word32] = r7_748
	word32 r21_761
	call 0x00026D58<p32> + r4_739 (retsize: 0;)
		uses: r15:0x00026D58<p32>,r19:r19_751 + 0xFFFFFFFF<32>,r21:r21_727,r22:r22_731,r23:r23_755,r24:r24_745 + 1<32>,r25:r25_740,r26:r26_749,r27:r27_736,r3:r3_732,r4:r4_739,r5:r22_731,r6:r25_740,r7:r7_748
		defs: r19:r19_760,r21:r21_761,r22:r22_758,r23:r23_762,r24:r24_763,r25:r25_764,r26:r26_765,r27:r27_766,r6:r6_770,r7:r7_771
	branch r24_596 < Mem754[r22_434 + 36<i32>:word32] l00026D6C_ds_t
l00026D6C_ds_t:
	r21_437 = r21_761 + 1<32>
l00026D6C_ds_f:
	r21_437 = r21_761 + 1<32>
l00026D70:
	Mem785[Mem780[r22_434 + 496<i32>:word32] + 16<i32>:word32] = 1<32>
	Mem790[r23_438:word32] = r21_437
	Mem793[r23_438 + 4<i32>:word32] = r19_436
l00026D88:
	return
fn00026944_exit:
l00026BE8_ds_f:
l00026BEC:
	word32 r3_809 = Mem414[r22_434:word32]
	Mem810[r3_809 + 20<i32>:word32] = 0x3A<32>
	word32 r3_811 = Mem810[r3_809:word32]
	call 0x00026BF8<p32> + r3_811 (retsize: 0;)
		uses: r15:0x00026BF8<p32>,r19:r19_436,r21:r21_437,r22:r22_434,r23:r23_438,r24:r24_439,r25:r25_440,r26:r26_441,r27:r27_442,r3:r3_811,r5:r22_434,r6:r6_446,r7:0x3A<32>


void fn00026E10(word32 r5, word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r10 r11 r12 r15 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r19 r21
fn00026E10_entry:
	ptr32 fp
l00026E10:
	word32 r4_20
	word32 r6_376
	word32 r6_47
	word32 r6_30
	word32 r1_212 = fp + 0xFFFFFFD8<32>
	word32 r3_11 = Mem9[r5:word32]
	word32 r19_13 = r5
	word32 r21_15 = r6
	word32 r8_18 = r7 + r8
	branch 0xD<32> -u r7 >= 0<32> l00026E3C_ds_t
l00026E3C_ds_t:
	r4_20 = Mem9[r3_11 + 4<i32>:word32]
l00026E78:
	branch 5<32> -u r7 >= 0<32> l00026E4C
l00026E84:
	branch Test(NE,CONVERT(Mem9[r6:byte], byte, word32) ^ 0x4A<32>) l00026E4C
l00026E90:
	branch Test(NE,CONVERT(Mem9[r6 + 1<i32>:byte], byte, word32) ^ 0x46<32>) l00026E4C
l00026E9C:
	r6_30 = CONVERT(Mem9[r6 + 2<i32>:byte], byte, word32)
l00026E3C_ds_f:
	r4_20 = Mem9[r3_11 + 4<i32>:word32]
l00026E40:
	branch Test(EQ,CONVERT(Mem9[r6:byte], byte, word32) ^ 0x4A<32>) l00026F0C
l00026F0C:
	branch Test(NE,CONVERT(Mem9[r6 + 1<i32>:byte], byte, word32) ^ 0x46<32>) l00026F18_ds_t
l00026F18_ds_t:
	r6_376 = 0x4D<32>
l00026F18_ds_f:
l00026F1C:
	r6_30 = CONVERT(Mem9[r6 + 2<i32>:byte], byte, word32)
	r7 = r6_30 ^ 0x49<32>
	branch Test(NE,r6_30 ^ 0x49<32>) l00026EA0
l00026F28:
	word32 r7_44 = CONVERT(Mem9[r6 + 3<i32>:byte], byte, word32)
	r7 = r7_44 ^ 0x46<32>
	branch Test(NE,r7_44 ^ 0x46<32>) l00026EA0
l00026EA0:
	r6_47 = r6_30 & 0xFF<32>
l00026F34:
	r7 = CONVERT(Mem9[r6 + 4<i32>:byte], byte, word32)
	branch Test(NE,r7) l00026F3C_ds_t
l00026F3C_ds_t:
	r6_47 = r6_30 & 0xFF<32>
l00026EA4:
	branch Test(NE,r6_47 ^ 0x58<32>) l00026E4C
l00026EAC:
	branch Test(NE,CONVERT(Mem9[r6 + 3<i32>:byte], byte, word32) ^ 0x58<32>) l00026E4C
l00026EB8:
	branch Test(NE,CONVERT(Mem9[r6 + 4<i32>:byte], byte, word32)) l00026EC0_ds_t
l00026EC0_ds_t:
	r6_376 = 0x4D<32>
l00026EC0_ds_f:
l00026EC4:
	word32 r5_65 = CONVERT(Mem9[r6 + 5<i32>:byte], byte, word32)
	branch Test(EQ,r5_65 ^ 0x11<32>) l00026ED0_ds_t
l00026ED0_ds_t:
	r6_376 = 0x6D<32>
l00026ED0_ds_f:
l00026ED4:
	branch Test(EQ,r5_65 ^ 0x13<32>) l00026EDC_ds_t
l00026EDC_ds_t:
l00027128:
	Mem77[r3_11 + 20<i32>:word32] = 0x6E<32>
	Mem80[r3_11 + 24<i32>:word32] = r8_18
	call 0x00027138<p32> + r4_20 (retsize: 0;)
		uses: r15:0x00027138<p32>,r19:r5,r21:r6,r5:r5,r6:1<32>,r7:0x6E<32>,r8:r8_18
l00026EDC_ds_f:
l00026EE0:
	branch Test(EQ,r5_65 ^ 0x10<32>) l00026EE4_ds_t
l00026EE4_ds_t:
l00027108:
	Mem106[r3_11 + 20<i32>:word32] = 0x6C<32>
	Mem108[r3_11 + 24<i32>:word32] = r8_18
	call 0x00027118<p32> + r4_20 (retsize: 0;)
		uses: r15:0x00027118<p32>,r19:r5,r21:r6,r5:r5,r6:1<32>,r7:r7_111,r8:r8_18
l00026EE4_ds_f:
l00026EE8:
	Mem130[r3_11 + 20<i32>:word32] = 0x59<32>
	word32 r7_132 = CONVERT(Mem130[r6 + 5<i32>:byte], byte, word32)
	Mem135[r3_11 + 28<i32>:word32] = r8_18
	Mem137[r3_11 + 24<i32>:word32] = r7_132
	call 0x00026EFC<p32> + r4_20 (retsize: 0;)
		uses: r15:0x00026EFC<p32>,r19:r5,r21:r6,r5:r5,r6:1<32>,r7:r7_132,r8:r8_18
l00026F3C_ds_f:
l00026F40:
	Mem156[r5 + 328<i32>:word32] = 1<32>
	word32 r7_158 = CONVERT(Mem156[r6 + 5<i32>:byte], byte, word32)
	Mem160[r5 + 332<i32>:word16] = SLICE(r7_158, word16, 0)
	word32 r9_162 = CONVERT(Mem160[r6 + 6<i32>:byte], byte, word32)
	Mem165[r5 + 334<i32>:word16] = SLICE(r9_162, word16, 0)
	word32 r10_167 = CONVERT(Mem165[r6 + 7<i32>:byte], byte, word32)
	Mem169[r5 + 336<i32>:word16] = SLICE(r10_167, word16, 0)
	Mem186[r5 + 340<i32>:word32] = CONVERT(Mem169[r6 + 8<i32>:byte], byte, int32) * 0x100<32> + CONVERT(Mem169[r6 + 9<i32>:byte], byte, word32)
	word32 r6_202 = CONVERT(Mem186[r6 + 10<i32>:byte], byte, int32) * 0x100<32> + CONVERT(Mem186[r6 + 11<i32>:byte], byte, word32)
	branch Test(EQ,r7_158 ^ 1<32>) l00026FDC_ds_t
l00026FDC_ds_t:
	Mem203[r5 + 344<i32>:word32] = r6_202
l00026FDC_ds_f:
	Mem204[r5 + 344<i32>:word32] = r6_202
l00026FE0:
	Mem206[r3_11 + 20<i32>:word32] = 0x77<32>
	Mem207[r3_11 + 24<i32>:word32] = r7_158
	Mem208[r3_11 + 28<i32>:word32] = r9_162
	call 0x00026FF4<p32> + r4_20 (retsize: 0;)
		uses: r15:0x00026FF4<p32>,r19:r5,r21:r6,r5:r5,r6:0xFFFFFFFF<32>,r7:r7_158,r8:r8_18,Stack +001C:r8_18
		defs: r1:r1_212,r19:r19_213,r21:r21_214
	r3_11 = Mem209[r19_13:word32]
	r4_20 = Mem209[r3_11 + 4<i32>:word32]
	r8_18 = Mem209[r1_212 + 28<i32>:word32]
	r7_158 = CONVERT(Mem209[r19_13 + 332<i32>:word16], word16, int32)
	r9_162 = CONVERT(Mem209[r19_13 + 334<i32>:word16], word16, int32)
	r10_167 = CONVERT(Mem209[r19_13 + 336<i32>:word16], word16, int32)
l00027020:
	word32 r8_289
	Mem244[r3_11 + 24<i32>:word32] = r7_158
	Mem246[r3_11 + 28<i32>:word32] = r9_162
	Mem251[r3_11 + 32<i32>:word32] = Mem246[r19_13 + 340<i32>:word32]
	word32 r7_252 = Mem251[r19_13 + 344<i32>:word32]
	Mem254[r3_11 + 40<i32>:word32] = r10_167
	Mem255[r3_11 + 36<i32>:word32] = r7_252
	Mem257[r3_11 + 20<i32>:word32] = 0x57<32>
	Mem261[r1_212 + 28<i32>:word32] = r8_18
	word32 r1_264
	word32 r19_265
	word32 r21_266
	call 0x0002704C<p32> + r4_20 (retsize: 0;)
		uses: r15:0x0002704C<p32>,r19:r19_247,r21:r21_263,r5:r19_247,r6:1<32>,r7:0x57<32>,r8:r8_259
		defs: r1:r1_264,r19:r19_265,r21:r21_266
	word32 r5_284 = CONVERT(Mem261[r21_266 + 12<i32>:byte], byte, int32)
	word32 r6_286 = CONVERT(Mem261[r21_266 + 13<i32>:byte], byte, int32)
	branch Test(EQ,(r5_284 | r6_286) & 0xFF<32>) l00027070_ds_t
l00027070_ds_t:
	r8_289 = Mem261[r1_264 + 28<i32>:word32]
l00027070_ds_f:
	word32 r8_290 = Mem261[r1_264 + 28<i32>:word32]
l00027074:
	word32 r3_291 = Mem261[r19_265:word32]
	Mem294[r3_291 + 20<i32>:word32] = 0x5A<32>
	word32 r4_297 = Mem294[r3_291 + 4<i32>:word32]
	Mem299[r3_291 + 24<i32>:word32] = CONVERT(Mem294[r21_266 + 12<i32>:byte], byte, word32)
	word32 r7_301 = CONVERT(Mem299[r21_266 + 13<i32>:byte], byte, word32)
	Mem302[r3_291 + 28<i32>:word32] = r7_301
	Mem304[r1_264 + 28<i32>:word32] = r8_290
	call 0x0002709C<p32> + r4_297 (retsize: 0;)
		uses: r15:0x0002709C<p32>,r19:r19_265,r21:r21_266,r3:r3_291,r4:r4_297,r5:r19_265,r6:1<32>,r7:r7_301,r8:r8_290
		defs: r1:r1_305,r19:r19_306,r21:r21_307
	r8_289 = Mem304[r1_264 + 28<i32>:word32]
	r5_284 = CONVERT(Mem304[r21_266 + 12<i32>:byte], byte, int32)
	r6_286 = CONVERT(Mem304[r21_266 + 13<i32>:byte], byte, int32)
l000270B8:
	Mem336[r1_264 + 28<i32>:word32] = r8_289
	word32 r3_337 = fn0002E908(r5_284 & 0xFF<32>, r6_286 & 0xFF<32>)
	word32 r8_343 = Mem336[r1_264 + 28<i32>:word32]
	branch Test(EQ,r3_337 * 3<32> ^ r8_343 + 0xFFFFFFF2<32>) l000270E0_ds_t
l000270E0_ds_t:
l000270E0_ds_f:
l000270E4:
	word32 r3_351 = Mem336[r19_265:word32]
	word32 r4_353 = Mem336[r3_351 + 4<i32>:word32]
	Mem355[r3_351 + 20<i32>:word32] = 0x58<32>
	Mem357[r3_351 + 24<i32>:word32] = r8_343 + 0xFFFFFFF2<32>
	call 0x000270F8<p32> + r4_353 (retsize: 0;)
		uses: r15:0x000270F8<p32>,r19:r19_348,r21:r21_358,r3:r3_351,r4:r4_353,r5:r19_348,r6:1<32>,r7:0x58<32>,r8:r8_343 + 0xFFFFFFF2<32>
l00026E4C:
	r6_376 = 0x4D<32>
l00026E50:
	Mem383[r3_11 + 20<i32>:word32] = r6_376
	Mem386[r3_11 + 24<i32>:word32] = r8_18
	call 0x00026E5C<p32> + r4_20 (retsize: 0;)
		uses: r15:0x00026E5C<p32>,r19:r5,r21:r6,r5:r5,r6:1<32>,r7:r7_393,r8:r8_18
l00026E64:
l00026E68:
	return
fn00026E10_exit:


void fn00027148(word32 r5, word32 r19, word32 r21, word32 r24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r19:[0..31] r21:[0..31] r24:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r15 r3 r4 r5 r6
// Preserved: r1 r19 r21 r22 r23 r24
fn00027148_entry:
l00027148:
	word32 r23_19
	word32 r4_20
	word32 r22_106 = Mem15[r5 + 24<i32>:word32]
	word32 r6_18 = Mem15[r22_106 + 4<i32>:word32]
	branch Test(NE,r6_18) l00027170_ds_t
l00027170_ds_t:
	r23_19 = r5
l00027288:
	r4_20 = Mem15[r22_106:word32]
l00027170_ds_f:
l00027174:
	word32 r3_22 = Mem15[r22_106 + 12<i32>:word32]
	word32 r3_33
	call 0x00027178<p32> + r3_22 (retsize: 0;)
		uses: r15:0x00027178<p32>,r19:r19,r21:r21,r22:r22_17,r23:r5,r24:r24,r3:r3_22,r5:r5
		defs: r22:r22_29,r23:r23_25,r3:r3_33
	branch Test(EQ,r3_33) l00027184_ds_t
l00027184_ds_t:
l00027184_ds_f:
l00027188:
	r4_20 = Mem15[r22_106:word32]
	r6_18 = Mem15[r22_106 + 4<i32>:word32]
l00027190:
	word32 r21_56
	word32 r3_46 = CONVERT(Mem15[r4_20:byte], byte, int32)
	word32 r24_107 = r6_18 + 0xFFFFFFFF<32>
	word32 r19_55 = r3_46 * 0x100<32>
	branch Test(NE,r24_107) l000271C8_ds_t
l000271C8_ds_t:
	r21_56 = r4_20 + 1<32>
l000271C8_ds_f:
	word32 r21_57 = r4_20 + 1<32>
l000271CC:
	word32 r3_59 = Mem15[r22_106 + 12<i32>:word32]
	word32 r3_73
	call 0x000271D0<p32> + r3_59 (retsize: 0;)
		uses: r15:0x000271D0<p32>,r19:r3_46 * 0x100<32>,r21:r21_57,r22:r22_58,r23:r23_61,r24:r24_44,r3:r3_59,r5:r23_61
		defs: r19:r19_67,r22:r22_69,r23:r23_65,r3:r3_73
	branch Test(EQ,r3_73) l000271DC_ds_t
l000271DC_ds_t:
l00027268:
	return
l000271DC_ds_f:
l000271E0:
	r21_56 = Mem15[r22_106:word32]
	r24_107 = Mem15[r22_106 + 4<i32>:word32]
l000271E8:
	word32 r4_93 = Mem15[r23_19:word32]
	word32 r19_96 = CONVERT(Mem15[r21_56:byte], byte, word32) + r19_55
	word32 r3_97 = Mem15[r23_19 + 472<i32>:word32]
	Mem99[r4_93 + 28<i32>:word32] = r19_96 + 0xFFFFFFFE<32>
	Mem100[r4_93 + 24<i32>:word32] = r3_97
	Mem102[r4_93 + 20<i32>:word32] = 0x5B<32>
	word32 r3_103 = Mem102[r4_93 + 4<i32>:word32]
	word32 r23_110
	word32 r19_112
	word32 r21_113
	word32 r22_114
	word32 r24_115
	call 0x00027214<p32> + r3_103 (retsize: 0;)
		uses: r15:0x00027214<p32>,r19:r19_96 + 0xFFFFFFFE<32>,r21:r21_88,r22:r22_106,r23:r23_92,r24:r24_107,r3:r3_103,r4:r4_93,r5:r23_92,r6:1<32>
		defs: r19:r19_112,r21:r21_113,r22:r22_114,r23:r23_110,r24:r24_115
	Mem122[r22_114:word32] = r21_113 + 1<32>
	branch Test(LE,r19_112) l0002722C_ds_t
l0002722C_ds_t:
	Mem123[r22_114 + 4<i32>:word32] = r24_115 + 0xFFFFFFFF<32>
l00027290:
	return
l0002722C_ds_f:
	Mem132[r22_114 + 4<i32>:word32] = r24_115 + 0xFFFFFFFF<32>
l00027230:
	word32 r3_135 = Mem132[Mem132[r23_110 + 24<i32>:word32] + 16<i32>:word32]
	call 0x0002723C<p32> + r3_135 (retsize: 0;)
		uses: r15:0x0002723C<p32>,r19:r19_112,r21:r21_113,r22:r22_114,r23:r23_110,r24:r24_115,r3:r3_135,r5:r23_110,r6:r19_112
	return
fn00027148_exit:


void fn000272B4(word32 r5, word32 r24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r24:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24
fn000272B4_entry:
l000272B4:
	word32 r22_105 = Mem15[r5 + 24<i32>:word32]
	word32 r23_102 = r5
	word32 r19_137 = Mem15[r22_105:word32]
	word32 r21_101 = Mem15[r22_105 + 4<i32>:word32]
l000272E0:
	branch Test(NE,r21_101) l00027300
l000272E4:
	word32 r3_24 = Mem23[r22_105 + 12<i32>:word32]
	word32 r3_39
	word32 r6_40
	word32 r0_43
	call 0x000272E8<p32> + r3_24 (retsize: 0;)
		uses: r0:r0_43,r15:0x000272E8<p32>,r19:r19_28,r21:r21_21,r22:r22_22,r23:r23_26,r24:r24_29,r3:r3_24,r5:r23_26,r6:r6_40
		defs: r0:r0_43,r22:r22_36,r23:r23_32,r24:r24_37,r3:r3_39,r6:r6_40
	branch Test(EQ,r3_39) l000272F4_ds_t
l000272F4_ds_t:
l000272F4_ds_f:
l000272F8:
	r19_137 = Mem23[r22_105:word32]
	r21_101 = Mem23[r22_105 + 4<i32>:word32]
l00027300:
	word32 r19_100
	r21_101 = r21_101 + 0xFFFFFFFF<32>
	branch Test(EQ,CONVERT(Mem23[r19_137:byte], byte, word32) ^ 0xFF<32>) l00027310_ds_t
l00027310_ds_t:
	r19_100 = r19_137 + 1<32>
l00027310_ds_f:
	word32 r19_56 = r19_137 + 1<32>
l00027314:
	word32 r6_59 = Mem58[r23_102 + 496<i32>:word32]
	Mem65[r6_59 + 24<i32>:word32] = Mem58[r6_59 + 24<i32>:word32] + 1<32>
	Mem68[r22_105 + 4<i32>:word32] = r21_101
	word32 r4_62 = r19_56
	branch Test(NE,r21_101) l00027334_ds_t
l00027334_ds_t:
	Mem69[r22_105:word32] = r19_56
l00027334_ds_f:
	Mem70[r22_105:word32] = r19_56
l00027338:
	word32 r3_71 = Mem70[r22_105 + 12<i32>:word32]
	word32 r3_83
	word32 r6_84
	word32 r0_87
	call 0x0002733C<p32> + r3_71 (retsize: 0;)
		uses: r0:r0_87,r15:0x0002733C<p32>,r19:r19_61,r21:r21_66,r22:r22_67,r23:r23_57,r24:r24_73,r3:r3_71,r5:r23_57,r6:r6_84
		defs: r0:r0_87,r22:r22_80,r23:r23_76,r24:r24_81,r3:r3_83,r6:r6_84
	branch Test(EQ,r3_83) l00027348_ds_t
l00027348_ds_t:
l00027348_ds_f:
l0002734C:
	r4_62 = Mem70[r22_105:word32]
	r21_101 = Mem70[r22_105 + 4<i32>:word32]
l00027354:
	r21_101 = r21_101 + 0xFFFFFFFF<32>
	branch Test(NE,CONVERT(Mem93[r4_62:byte], byte, word32) ^ 0xFF<32>) l00027364_ds_t
l00027364_ds_t:
	r19_56 = r4_62 + 1<32>
l00027364_ds_f:
	r19_100 = r4_62 + 1<32>
l00027368:
	branch Test(NE,r21_101) l0002736C_ds_t
l0002736C_ds_t:
l0002736C_ds_f:
l00027370:
	word32 r3_107 = Mem106[r22_105 + 12<i32>:word32]
	word32 r3_120
	word32 r6_121
	word32 r0_124
	call 0x00027374<p32> + r3_107 (retsize: 0;)
		uses: r0:r0_124,r15:0x00027374<p32>,r19:r19_109,r21:r21_101,r22:r22_105,r23:r23_102,r24:r24_110,r3:r3_107,r5:r23_102,r6:r6_121
		defs: r0:r0_124,r22:r22_117,r23:r23_113,r3:r3_120,r6:r6_121
	branch Test(EQ,r3_120) l00027380_ds_t
l00027380_ds_t:
l00027380_ds_f:
l00027384:
	r19_100 = Mem106[r22_105:word32]
	r21_101 = Mem106[r22_105 + 4<i32>:word32]
l0002738C:
	r24 = CONVERT(Mem106[r19_100:byte], byte, word32)
	r21_101 = r21_101 + 0xFFFFFFFF<32>
	branch Test(EQ,r24 ^ 0xFF<32>) l0002739C_ds_t
l0002739C_ds_t:
	r19_100 = r19_100 + 1<32>
l0002739C_ds_f:
	r19_137 = r19_100 + 1<32>
l000273A0:
	word32 r4_139 = Mem106[r23_102 + 496<i32>:word32]
	branch Test(NE,r24) l000273A8_ds_t
l000273A8_ds_t:
	word32 r3_140 = Mem106[r4_139 + 24<i32>:word32]
l000273E0:
	branch Test(EQ,r3_140) l000273E4_ds_t
l000273E4_ds_t:
l000273E4_ds_f:
l000273E8:
	word32 r4_143 = Mem106[r23_102:word32]
	Mem145[r4_143 + 20<i32>:word32] = 0x74<32>
	word32 r7_146 = Mem145[r4_143 + 4<i32>:word32]
	Mem147[r4_143 + 24<i32>:word32] = r3_140
	Mem150[r4_143 + 28<i32>:word32] = r24
	word32 r0_165
	call 0x00027400<p32> + r7_146 (retsize: 0;)
		uses: r0:r0_165,r15:0x00027400<p32>,r19:r19_137,r21:r21_134,r22:r22_151,r23:r23_138,r24:r24_132,r4:r4_143,r5:r23_138,r6:0xFFFFFFFF<32>,r7:r7_146
		defs: r0:r0_165,r19:r19_156,r21:r21_157,r22:r22_158,r23:r23_154,r24:r24_159
	Mem167[Mem150[r23_102 + 496<i32>:word32] + 24<i32>:word32] = r0_165
l00027410:
	Mem170[r23_102 + 472<i32>:word32] = r24
	Mem173[r22_105:word32] = r19_137
	Mem175[r22_105 + 4<i32>:word32] = r21_101
l000273C0:
	return
fn000272B4_exit:
l000273A8_ds_f:
	word32 r3_187 = Mem106[r4_139 + 24<i32>:word32]
l000273AC:
	Mem189[r4_139 + 24<i32>:word32] = r3_187 + 2<32>
	Mem190[r22_105:word32] = r19_137
	Mem191[r22_105 + 4<i32>:word32] = r21_101


void fn00027448(word32 r5, word32 r19, word32 r20, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r19:[0..31] r20:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r31:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r10 r11 r12 r18 r20 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
fn00027448_entry:
	ptr32 fp
l00027448:
	word32 r23_105
	word32 r19_36
	word32 r22_110 = Mem31[r5 + 24<i32>:word32]
	word32 r1_103 = fp + 0xFFFFFD84<32>
	word32 r21_34 = Mem31[r22_110 + 4<i32>:word32]
	branch Test(NE,r21_34) l00027490_ds_t
l00027490_ds_t:
	r23_105 = r5
l00027844:
	r19_36 = Mem31[r22_110:word32]
l00027490_ds_f:
l00027494:
	word32 r3_38 = Mem31[r22_110 + 12<i32>:word32]
	word32 r3_56
	word32 r6_60
	word32 r0_61
	word32 r12_62
	word32 r11_63
	word32 r10_64
	word32 r9_65
	word32 r8_66
	call 0x00027498<p32> + r3_38 (retsize: 0;)
		uses: r0:r0_61,r10:r10_64,r11:r11_63,r12:r12_62,r15:0x00027498<p32>,r19:r19,r20:r20,r21:r21_34,r22:r22_33,r23:r5,r24:r24,r25:r25,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_38,r30:r30,r31:r31,r5:r5,r6:r6_60,r8:r8_66,r9:r9_65
		defs: r0:r0_61,r1:r1_40,r10:r10_64,r11:r11_63,r12:r12_62,r20:r20_44,r22:r22_46,r23:r23_41,r24:r24_47,r25:r25_48,r27:r27_50,r28:r28_51,r29:r29_52,r3:r3_56,r30:r30_53,r31:r31_54,r6:r6_60,r8:r8_66,r9:r9_65
	branch Test(EQ,r3_56) l000274A4_ds_t
l000274A4_ds_t:
l000274A4_ds_f:
l000274A8:
	r19_36 = Mem31[r22_110:word32]
	r21_34 = Mem31[r22_110 + 4<i32>:word32]
l000274B0:
	word32 r19_133
	word32 r3_78 = CONVERT(Mem31[r19_36:byte], byte, int32)
	word32 r21_134 = r21_34 + 0xFFFFFFFF<32>
	word32 r26_113 = r3_78 * 0x100<32>
	branch Test(NE,r21_134) l000274E8_ds_t
l000274E8_ds_t:
	r19_133 = r19_36 + 1<32>
l000274E8_ds_f:
	word32 r19_89 = r19_36 + 1<32>
l000274EC:
	word32 r3_91 = Mem31[r22_110 + 12<i32>:word32]
	word32 r3_120
	word32 r6_124
	word32 r0_125
	word32 r12_126
	word32 r11_127
	word32 r10_128
	word32 r9_129
	word32 r8_130
	call 0x000274F0<p32> + r3_91 (retsize: 0;)
		uses: r0:r0_125,r10:r10_128,r11:r11_127,r12:r12_126,r15:0x000274F0<p32>,r19:r19_89,r20:r20_95,r21:r21_76,r22:r22_90,r23:r23_93,r24:r24_96,r25:r25_97,r26:r3_78 * 0x100<32>,r27:r27_98,r28:r28_99,r29:r29_100,r3:r3_91,r30:r30_101,r31:r31_102,r5:r23_93,r6:r6_124,r8:r8_130,r9:r9_129
		defs: r0:r0_125,r1:r1_104,r10:r10_128,r11:r11_127,r12:r12_126,r20:r20_108,r22:r22_110,r23:r23_105,r24:r24_111,r25:r25_112,r26:r26_113,r27:r27_114,r28:r28_115,r29:r29_116,r3:r3_120,r30:r30_117,r31:r31_118,r6:r6_124,r8:r8_130,r9:r9_129
	branch Test(EQ,r3_120) l000274FC_ds_t
l000274FC_ds_t:
l000274FC_ds_f:
l00027500:
	r19_133 = Mem31[r22_110:word32]
	r21_134 = Mem31[r22_110 + 4<i32>:word32]
l00027508:
	word32 r19_146
	word32 r26_143 = CONVERT(Mem31[r19_133:byte], byte, word32) + r26_113
	word32 r21_141 = r21_134 + 0xFFFFFFFF<32>
	word32 r26_144 = r26_143 + 0xFFFFFFFE<32>
	branch r26_143 <= 0xFFFFFFEE<32> l00027524_ds_t
l00027524_ds_t:
	r19_146 = r19_133 + 1<32>
l00027524_ds_f:
	r19_146 = r19_133 + 1<32>
l00027528:
	r30 = 0x50<32>
	r25 = r1_103 + 0x23E<32>
	r29 = 0x56<32>
l00027534:
	branch Test(NE,r21_141) l00027554
l00027538:
	word32 r3_155 = Mem154[r22_110 + 12<i32>:word32]
	word32 r3_186
	word32 r6_190
	word32 r0_191
	word32 r12_192
	word32 r11_193
	word32 r10_194
	word32 r9_195
	word32 r8_196
	call 0x0002753C<p32> + r3_155 (retsize: 0;)
		uses: r0:r0_191,r10:r10_194,r11:r11_193,r12:r12_192,r15:0x0002753C<p32>,r19:r19_159,r20:r20_160,r21:r21_152,r22:r22_153,r23:r23_157,r24:r24_161,r25:r25_162,r26:r26_163,r27:r27_164,r28:r28_165,r29:r29_166,r3:r3_155,r30:r30_167,r31:r31_168,r5:r23_157,r6:r6_190,r8:r8_196,r9:r9_195
		defs: r0:r0_191,r10:r10_194,r11:r11_193,r12:r12_192,r20:r20_174,r22:r22_176,r23:r23_171,r24:r24_177,r25:r25_178,r26:r26_179,r29:r29_182,r3:r3_186,r30:r30_183,r31:r31_184,r6:r6_190,r8:r8_196,r9:r9_195
	branch Test(EQ,r3_186) l00027548_ds_t
l00027548_ds_t:
l00027548_ds_f:
l0002754C:
	r19_146 = Mem154[r22_110:word32]
	r21_141 = Mem154[r22_110 + 4<i32>:word32]
l00027554:
	word32 r3_203 = Mem154[r23_105:word32]
	word32 r4_208 = Mem154[r3_203 + 4<i32>:word32]
	word32 r27_210 = CONVERT(Mem154[r19_146:byte], byte, int32)
	Mem213[r3_203 + 20<i32>:word32] = r30
	Mem214[r3_203 + 24<i32>:word32] = r27_210 & 0xFF<32>
	word32 r21_231
	word32 r0_247
	word32 r12_248
	word32 r11_249
	word32 r10_250
	word32 r9_251
	word32 r8_252
	word32 r25_234
	word32 r23_227
	word32 r1_226
	word32 r29_238
	word32 r22_232
	word32 r26_235
	word32 r27_236
	word32 r28_237
	word32 r30_239
	word32 r19_229
	word32 r20_230
	call 0x00027574<p32> + r4_208 (retsize: 0;)
		uses: r0:r0_247,r10:r10_250,r11:r11_249,r12:r12_248,r15:0x00027574<p32>,r19:r19_204,r20:r20_217,r21:r21_218,r22:r22_219,r23:r23_201,r24:r24_220,r25:r25_221,r26:r26_222,r27:r27_210,r28:r27_210 & 0xFF<32>,r29:r29_223,r3:r3_203,r30:r30_212,r31:r31_224,r4:r4_208,r5:r23_201,r6:1<32>,r8:r8_252,r9:r9_251
		defs: r0:r0_247,r1:r1_226,r10:r10_250,r11:r11_249,r12:r12_248,r19:r19_229,r20:r20_230,r21:r21_231,r22:r22_232,r23:r23_227,r25:r25_234,r26:r26_235,r27:r27_236,r28:r28_237,r29:r29_238,r30:r30_239,r8:r8_252,r9:r9_251
	Mem256[r1_226 + 540<i32>:word16] = SLICE(r0_247, word16, 0)
	word32 r21_253 = r21_231 + 0xFFFFFFFF<32>
	word32 r3_254 = r19_229 + 1<32>
	word32 r24_257 = r1_226 + 0x21E<32>
	word32 r31_258 = 0<32>
l00027590:
	branch Test(NE,r21_253) l00027594_ds_t
l00027594_ds_t:
l00027594_ds_f:
l00027598:
	word32 r3_265 = Mem264[r22_232 + 12<i32>:word32]
	word32 r3_294
	word32 r6_298
	word32 r0_299
	word32 r12_300
	word32 r11_301
	word32 r10_302
	word32 r9_303
	word32 r8_304
	call 0x0002759C<p32> + r3_265 (retsize: 0;)
		uses: r0:r0_299,r10:r10_302,r11:r11_301,r12:r12_300,r15:0x0002759C<p32>,r19:r19_267,r20:r20_268,r21:r21_259,r22:r22_263,r23:r23_260,r24:r24_269,r25:r25_270,r26:r26_271,r27:r27_272,r28:r28_273,r29:r29_274,r3:r3_265,r30:r30_275,r31:r31_276,r5:r23_260,r6:r6_298,r8:r8_304,r9:r9_303
		defs: r0:r0_299,r1:r1_278,r10:r10_302,r11:r11_301,r12:r12_300,r19:r19_281,r20:r20_282,r22:r22_284,r23:r23_279,r24:r24_285,r25:r25_286,r26:r26_287,r27:r27_288,r28:r28_289,r29:r29_290,r3:r3_294,r30:r30_291,r31:r31_292,r6:r6_298,r8:r8_304,r9:r9_303
	branch Test(EQ,r3_294) l000275A8_ds_t
l000275A8_ds_t:
l000275A8_ds_f:
l000275AC:
	r3_254 = Mem264[r22_232:word32]
	r21_253 = Mem264[r22_232 + 4<i32>:word32]
l000275B4:
	r24_257 = r24_257 + 2<32>
	word32 r4_313 = CONVERT(Mem264[r3_254:byte], byte, word32)
	Mem319[r24_257 - 2<i32>:word16] = SLICE(r4_313, word16, 0)
	r21_253 = r21_253 + 0xFFFFFFFF<32>
	r3_254 = r3_254 + 1<32>
	branch Test(NE,r25_234 ^ r24_257) l000275D0_ds_t
l000275D0_ds_t:
	r31_258 = r31_258 + r4_313
l000275D0_ds_f:
	word32 r31_325 = r31_258 + r4_313
l000275D4:
	word32 r3_485
	word32 r4_327 = Mem319[r23_227:word32]
	word32 r24_345 = Mem319[r4_327 + 4<i32>:word32]
	word32 r20_347 = CONVERT(Mem319[r1_226 + 542<i32>:word16], word16, int32)
	word32 r12_349 = CONVERT(Mem319[r1_226 + 546<i32>:word16], word16, int32)
	word32 r11_351 = CONVERT(Mem319[r1_226 + 548<i32>:word16], word16, int32)
	word32 r10_353 = CONVERT(Mem319[r1_226 + 550<i32>:word16], word16, int32)
	word32 r9_355 = CONVERT(Mem319[r1_226 + 552<i32>:word16], word16, int32)
	word32 r8_357 = CONVERT(Mem319[r1_226 + 554<i32>:word16], word16, int32)
	word32 r7_359 = CONVERT(Mem319[r1_226 + 556<i32>:word16], word16, int32)
	word32 r19_362 = CONVERT(Mem319[r1_226 + 544<i32>:word16], word16, int32)
	Mem363[r4_327 + 24<i32>:word32] = r20_347
	Mem364[r4_327 + 28<i32>:word32] = r19_362
	Mem365[r4_327 + 32<i32>:word32] = r12_349
	Mem366[r4_327 + 36<i32>:word32] = r11_351
	Mem367[r4_327 + 40<i32>:word32] = r10_353
	Mem368[r4_327 + 44<i32>:word32] = r9_355
	Mem369[r4_327 + 48<i32>:word32] = r8_357
	Mem370[r4_327 + 52<i32>:word32] = r7_359
	Mem372[r4_327 + 20<i32>:word32] = r29_238
	Mem373[r1_226 + 580<i32>:word32] = r3_254
	word32 r1_381
	word32 r23_382
	word32 r21_386
	word32 r22_387
	word32 r24_388
	word32 r25_389
	word32 r26_390
	word32 r27_391
	word32 r28_392
	word32 r29_393
	word32 r30_394
	word32 r31_395
	call 0x00027648<p32> + r24_345 (retsize: 0;)
		uses: r0:r0_477,r10:r10_353,r11:r11_351,r12:r12_349,r15:0x00027648<p32>,r19:r19_362,r20:r20_347,r21:r21_321,r22:r22_376,r23:r23_326,r24:r24_345,r25:r25_316,r26:r26_377,r27:r27_378,r28:r28_379,r29:r29_371,r30:r30_380,r31:r31_325,r4:r4_327,r5:r23_326,r6:2<32>,r7:r7_359,r8:r8_357,r9:r9_355
		defs: r1:r1_381,r21:r21_386,r22:r22_387,r23:r23_382,r24:r24_388,r25:r25_389,r26:r26_390,r27:r27_391,r28:r28_392,r29:r29_393,r30:r30_394,r31:r31_395
	word32 r4_408 = Mem373[r23_382:word32]
	word32 r12_425 = Mem373[r4_408 + 4<i32>:word32]
	word32 r20_428 = CONVERT(Mem373[r1_381 + 558<i32>:word16], word16, int32)
	word32 r11_430 = CONVERT(Mem373[r1_381 + 562<i32>:word16], word16, int32)
	word32 r10_432 = CONVERT(Mem373[r1_381 + 564<i32>:word16], word16, int32)
	word32 r9_434 = CONVERT(Mem373[r1_381 + 566<i32>:word16], word16, int32)
	word32 r8_436 = CONVERT(Mem373[r1_381 + 568<i32>:word16], word16, int32)
	word32 r7_438 = CONVERT(Mem373[r1_381 + 570<i32>:word16], word16, int32)
	word32 r19_442 = CONVERT(Mem373[r1_381 + 560<i32>:word16], word16, int32)
	Mem443[r4_408 + 52<i32>:word32] = CONVERT(Mem373[r1_381 + 572<i32>:word16], word16, int32)
	Mem444[r4_408 + 24<i32>:word32] = r20_428
	Mem445[r4_408 + 28<i32>:word32] = r19_442
	Mem446[r4_408 + 32<i32>:word32] = r11_430
	Mem447[r4_408 + 36<i32>:word32] = r10_432
	Mem448[r4_408 + 40<i32>:word32] = r9_434
	Mem449[r4_408 + 44<i32>:word32] = r8_436
	Mem450[r4_408 + 48<i32>:word32] = r7_438
	Mem451[r4_408 + 20<i32>:word32] = r29_393
	Mem455[r1_381 + 576<i32>:word32] = r26_390 + 0xFFFFFFEF<32>
	word32 r19_459
	word32 r24_463
	word32 r0_477
	word32 r26_465
	word32 r1_456
	word32 r27_466
	call 0x000276C8<p32> + r12_425 (retsize: 0;)
		uses: r0:r0_477,r10:r10_432,r11:r11_430,r12:r12_425,r15:0x000276C8<p32>,r19:r19_442,r20:r20_428,r21:r21_386,r22:r22_387,r23:r23_382,r24:r24_388,r25:r25_389,r26:r26_390 + 0xFFFFFFEF<32>,r27:r27_391,r28:r28_392,r29:r29_393,r30:r30_394,r31:r31_395,r4:r4_408,r5:r23_382,r6:2<32>,r7:r7_438,r8:r8_436,r9:r9_434
		defs: r0:r0_477,r1:r1_456,r19:r19_459,r20:r20_460,r21:r21_461,r22:r22_462,r23:r23_457,r24:r24_463,r25:r25_464,r26:r26_465,r27:r27_466,r28:r28_467,r29:r29_468,r30:r30_469,r31:r31_470
	branch r31 > 0x100<32> l000276DC_ds_t
l000276DC_ds_t:
	r3_485 = Mem455[r1_456 + 580<i32>:word32]
l000276DC_ds_f:
	r3_485 = Mem455[r1_456 + 580<i32>:word32]
l000276E0:
	r26_465 = Mem455[r1_456 + 576<i32>:word32]
	branch r26_465 < r31 l00027820
l00027820:
	word32 r4_491 = Mem455[r23_105:word32]
	word32 r6_494 = Mem455[r4_491:word32]
	Mem495[r4_491 + 20<i32>:word32] = 8<32>
	Mem499[r1_456 + 580<i32>:word32] = r3_485
	word32 r0_533
	word32 r12_534
	word32 r11_535
	word32 r10_536
	word32 r9_537
	word32 r8_538
	call 0x00027834<p32> + r6_494 (retsize: 0;)
		uses: r0:r0_533,r10:r10_536,r11:r11_535,r12:r12_534,r15:0x00027834<p32>,r19:r19_459,r20:r20_460,r21:r21_461,r22:r22_462,r23:r23_457,r24:r24_463,r25:r25_464,r26:r26_506,r27:r27_466,r28:r28_467,r29:r29_468,r30:r30_469,r31:r31_470,r4:r4_491,r5:r23_457,r6:r6_494,r7:8<32>,r8:r8_538,r9:r9_537
		defs: r0:r0_533,r1:r1_512,r10:r10_536,r11:r11_535,r12:r12_534,r20:r20_516,r21:r21_517,r22:r22_518,r23:r23_513,r25:r25_520,r27:r27_522,r28:r28_523,r29:r29_524,r30:r30_525,r31:r31_526,r8:r8_538,r9:r9_537
	r3_485 = Mem499[r1_456 + 580<i32>:word32]
l000276EC:
	branch Test(EQ,r31) l000276F0_ds_t
l000276F0_ds_t:
l00027878:
	r19_146 = r3_485
l000276F0_ds_f:
	word32 r6_544 = r31 * 2<32>
l000276F4:
	word32 r24_547 = r1_456 + 0x1C<32>
	word32 r19_545 = r3_485
	word32 r26_548 = r24_547 + r6_544
l00027700:
	branch Test(NE,r21_141) l00027704_ds_t
l00027704_ds_t:
l00027704_ds_f:
l00027708:
	word32 r3_555 = Mem554[r22_110 + 12<i32>:word32]
	word32 r3_584
	word32 r6_588
	word32 r0_589
	word32 r12_590
	word32 r11_591
	word32 r10_592
	word32 r9_593
	word32 r8_594
	call 0x0002770C<p32> + r3_555 (retsize: 0;)
		uses: r0:r0_589,r10:r10_592,r11:r11_591,r12:r12_590,r15:0x0002770C<p32>,r19:r19_557,r20:r20_558,r21:r21_549,r22:r22_553,r23:r23_550,r24:r24_559,r25:r25_560,r26:r26_561,r27:r27_562,r28:r28_563,r29:r29_564,r3:r3_555,r30:r30_565,r31:r31_566,r5:r23_550,r6:r6_588,r8:r8_594,r9:r9_593
		defs: r0:r0_589,r1:r1_568,r10:r10_592,r11:r11_591,r12:r12_590,r20:r20_572,r22:r22_574,r23:r23_569,r24:r24_575,r25:r25_576,r26:r26_577,r27:r27_578,r28:r28_579,r29:r29_580,r3:r3_584,r30:r30_581,r31:r31_582,r6:r6_588,r8:r8_594,r9:r9_593
	branch Test(EQ,r3_584) l00027718_ds_t
l00027718_ds_t:
l00027718_ds_f:
l0002771C:
	r19_545 = Mem554[r22_110:word32]
	r21_141 = Mem554[r22_110 + 4<i32>:word32]
l00027724:
	r24_547 = r24_547 + 2<32>
	Mem608[r24_547 - 2<i32>:word16] = CONVERT(Mem554[r19_545:byte], byte, word16)
	r21_141 = r21_141 + 0xFFFFFFFF<32>
	branch Test(NE,r26_548 ^ r24_547) l0002773C_ds_t
l0002773C_ds_t:
	r19_545 = r19_545 + 1<32>
l0002773C_ds_f:
	r19_146 = r19_545 + 1<32>
l00027740:
	word32 r4_617 = Mem615[r1_456 + 576<i32>:word32]
	r27 = r27_466 & 0x10<32>
	branch Test(NE,r27) l0002774C_ds_t
l0002774C_ds_t:
	r26_144 = r4_617 - r31
l0002784C:
	r28 = r28 + 0xFFFFFFF0<32>
	r24 = r23_105 + (r28 + 0x31<32>) * 4<32>
l0002774C_ds_f:
	r26_144 = r4_617 - r31
l00027750:
	r24 = r23_105 + (r28 + 0x2D<32>) * 4<32>
l00027760:
	branch 3<32> -u r28 >= 0<32> l0002776C_ds_t
l0002776C_ds_t:
l00027788:
	branch Test(EQ,Mem615[r24:word32]) l00027864
l00027864:
	Mem657[r24:word32] = fn0002CCC4(r23_105, 0x00027864<p32>)
l00027790:
	fn0002F60C()
	fn0002F60C()
	branch r26_144 > 0x10<32> l00027534
l000277BC:
	branch Test(EQ,r26_144) l000277C0_ds_t
l000277C0_ds_t:
l000277D8:
	Mem687[r22_110:word32] = r19_146
	Mem693[r22_110 + 4<i32>:word32] = r21_141
l000277E4:
	return
fn00027448_exit:
l000277C0_ds_f:
l000277C4:
	word32 r3_717 = Mem716[r23_105:word32]
	Mem718[r3_717 + 20<i32>:word32] = 0xB<32>
	word32 r3_719 = Mem718[r3_717:word32]
	word32 r6_783
	word32 r0_784
	word32 r12_785
	word32 r11_786
	word32 r10_787
	word32 r9_788
	word32 r8_789
	call 0x000277D0<p32> + r3_719 (retsize: 0;)
		uses: r0:r0_784,r10:r10_787,r11:r11_786,r12:r12_785,r15:0x000277D0<p32>,r19:r19_676,r20:r20_722,r21:r21_688,r22:r22_680,r23:r23_713,r24:r24_729,r25:r25_731,r26:r26_674,r27:r27_738,r28:r28_742,r29:r29_745,r3:r3_719,r30:r30_752,r31:r31_759,r5:r23_713,r6:r6_783,r8:r8_789,r9:r9_788
		defs: r0:r0_784,r10:r10_787,r11:r11_786,r12:r12_785,r6:r6_783,r8:r8_789,r9:r9_788
l0002776C_ds_f:
l00027770:
	word32 r3_791 = Mem615[r23_105:word32]
	Mem793[r3_791 + 20<i32>:word32] = 0x1E<32>
	word32 r4_794 = Mem793[r3_791:word32]
	Mem796[r3_791 + 24<i32>:word32] = r28
	word32 r6_817
	word32 r0_818
	word32 r12_819
	word32 r11_820
	word32 r10_821
	word32 r9_822
	word32 r8_823
	call 0x00027780<p32> + r4_794 (retsize: 0;)
		uses: r0:r0_818,r10:r10_821,r11:r11_820,r12:r12_819,r15:0x00027780<p32>,r19:r19_679,r20:r20_726,r21:r21_691,r22:r22_684,r23:r23_632,r24:r24_645,r25:r25_735,r26:r26_672,r27:r27_621,r28:r28_642,r29:r29_749,r3:r3_791,r30:r30_756,r31:r31_622,r4:r4_794,r5:r23_632,r6:r6_817,r8:r8_823,r9:r9_822
		defs: r0:r0_818,r10:r10_821,r11:r11_820,r12:r12_819,r6:r6_817,r8:r8_823,r9:r9_822


void fn00028594(word32 r5, word32 r6, word32 r7, word32 r8, word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r21:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21
fn00028594_entry:
l00028594:
	word32 r9_110
	word32 r3_11 = Mem9[r5:word32]
	branch 0xB<32> -u r7 < 0<32> l000285B8_ds_t
l000285B8_ds_t:
	r9_110 = Mem9[r3_11 + 4<i32>:word32]
l000285EC:
	branch Test(NE,CONVERT(Mem9[r6:byte], byte, word32) ^ 0x41<32>) l000285BC
l000285F8:
	branch Test(NE,CONVERT(Mem9[r6 + 1<i32>:byte], byte, word32) ^ 0x64<32>) l000285BC
l00028604:
	branch Test(NE,CONVERT(Mem9[r6 + 2<i32>:byte], byte, word32) ^ 0x6F<32>) l000285BC
l00028610:
	branch Test(NE,CONVERT(Mem9[r6 + 3<i32>:byte], byte, word32) ^ 0x62<32>) l000285BC
l0002861C:
	branch Test(NE,CONVERT(Mem9[r6 + 4<i32>:byte], byte, word32) ^ 0x65<32>) l000285BC
l00028628:
	word32 r11_66 = CONVERT(Mem9[r6 + 10<i32>:byte], byte, word32)
	word32 r10_68 = CONVERT(Mem9[r6 + 6<i32>:byte], byte, word32)
	word32 r12_64 = CONVERT(Mem9[r6 + 8<i32>:byte], byte, word32)
	word32 r21_73 = CONVERT(Mem9[r6 + 11<i32>:byte], byte, word32)
	word32 r4_82 = CONVERT(Mem9[r6 + 9<i32>:byte], byte, int32) * 0x100<32> + r11_66
	word32 r7_83 = CONVERT(Mem9[r6 + 5<i32>:byte], byte, int32) * 0x100<32> + r10_68
	Mem84[r3_11 + 28<i32>:word32] = CONVERT(Mem9[r6 + 7<i32>:byte], byte, int32) * 0x100<32> + r12_64
	Mem85[r3_11 + 20<i32>:word32] = 0x4C<32>
	Mem86[r3_11 + 24<i32>:word32] = r7_83
	Mem87[r3_11 + 32<i32>:word32] = r4_82
	Mem88[r3_11 + 36<i32>:word32] = r21_73
	word32 r19_92
	word32 r21_94
	call 0x000286EC<p32> + r9_110 (retsize: 0;)
		uses: r10:r10_68,r11:r11_66,r12:r12_64,r15:0x000286EC<p32>,r19:r5,r21:r21_73,r4:r4_82,r5:r5,r6:1<32>,r7:r7_83,r8:0x4C<32>
		defs: r19:r19_92,r21:r21_94
	Mem107[r19_92 + 348<i32>:word32] = 1<32>
	Mem109[r19_92 + 352<i32>:word16] = SLICE(r21_94, word16, 0)
l000285B8_ds_f:
	r9_110 = Mem9[r3_11 + 4<i32>:word32]
l000285BC:
	Mem119[r3_11 + 20<i32>:word32] = 0x4E<32>
	word32 r8_117 = r8 + r7
	Mem120[r3_11 + 24<i32>:word32] = r8_117
	call 0x000285D0<p32> + r9_110 (retsize: 0;)
		uses: r15:0x000285D0<p32>,r19:r5,r21:r21,r4:0x4E<32>,r5:r5,r6:1<32>,r7:r7,r8:r8_117
l000285D8:
	return
fn00028594_exit:


void fn00028F08(word32 r5, word32 r15, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000256D8
// MayUse:  r15:[0..31] r19:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19
fn00028F08_entry:
l00028F08:
	word32 r3_12 = Mem7[Mem7[r5 + 4<i32>:word32]:word32]
	word32 r19_16
	word32 r3_18
	word32 r0_23
	call 0x00028F24<p32> + r3_12 (retsize: 0;)
		uses: r15:0x00028F24<p32>,r19:r5,r3:r3_12,r5:r5,r6:0<32>,r7:0xAC<32>,Stack +0000:r15,Stack +001C:r19
		defs: r0:r0_23,r19:r19_16,r3:r3_18
	Mem25[r19_16 + 496<i32>:word32] = r3_18
	Mem27[r3_18:word32] = 0xFFFFDAA4<32>
	Mem29[r3_18 + 28<i32>:word32] = 0xFFFFD7C8<32>
	Mem30[r3_18 + 96<i32>:word32] = r0_23
	Mem31[r3_18 + 4<i32>:word32] = 0xFFFFDF00<32>
	Mem34[r3_18 + 8<i32>:word32] = 0xFFFFF328<32>
	word32 r4_35 = r3_18 + 0x20<32>
l00028F6C:
	Mem38[r4_35:word32] = 0xFFFFD7C8<32>
	Mem40[r4_35 + 68<i32>:word32] = r0_23
	r4_35 = r4_35 + 4<32>
	word32 r5_43 = r4_35 ^ r3_18 + 0x60<32>
	branch Test(NE,r5_43) l00028F6C
l00028F80:
	Mem46[r3_18 + 32<i32>:word32] = 0xFFFFED84<32>
	Mem47[r3_18 + 88<i32>:word32] = 0xFFFFED84<32>
	Mem49[r19_16 + 216<i32>:word32] = r5_43
	Mem50[r19_16 + 144<i32>:word32] = r5_43
	Mem51[r19_16 + 472<i32>:word32] = r5_43
	Mem52[r3_18 + 12<i32>:word32] = r5_43
	Mem53[r3_18 + 16<i32>:word32] = r5_43
	Mem54[r3_18 + 24<i32>:word32] = r5_43
	Mem55[r3_18 + 164<i32>:word32] = r5_43
	return
fn00028F08_exit:


void fn000291C4(word32 r5, word32 r6, word32 r7, word32 r8, word32 r19, word32 r20, word32 r21, word32 r23, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r19:[0..31] r20:[0..31] r21:[0..31] r23:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r31:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r18 r20 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31
fn000291C4_entry:
	ptr32 fp
	byte bLoc013C
l000291C4:
	word32 r6_124
	word32 r22_101
	word32 r1_3 = fp + 0xFFFFFAA4<32>
	word32 r24_130 = r5
	branch 3<32> -u r7 >= 0<32> l00029214_ds_t
l00029214_ds_t:
	r22_101 = r8
	r6_124 = r6
l00029214_ds_f:
l00029218:
	word32 r3_42 = Mem34[r5:word32]
	Mem44[r3_42 + 20<i32>:word32] = 0x32<32>
	word32 r4_45 = Mem44[r3_42:word32]
	Mem46[r3_42 + 24<i32>:word32] = r7
	word32 r11_73
	word32 r10_74
	call 0x0002922C<p32> + r4_45 (retsize: 0;)
		uses: r10:r10_74,r11:r11_73,r15:0x0002922C<p32>,r19:r19,r20:r20,r21:r21,r22:r8,r23:r23,r24:r5,r25:r25,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_42,r30:r30,r31:r31,r4:r4_45,r5:r5,r6:r6,r7:r7,r8:r8,Stack +0420:bLoc013C,Stack +0524:r7
		defs: r1:r1_49,r10:r10_74,r11:r11_73,r19:r19_53,r20:r20_54,r21:r21_55,r22:r22_50,r24:r24_51,r25:r25_57,r26:r26_58,r27:r27_59,r28:r28_60,r29:r29_61,r30:r30_62,r31:r31_63,r6:r6_65,r8:r8_69
	r7 = Mem48[r1_3 + 1316<i32>:word32]
l00029238:
	word32 r21_154
	word32 r23_108
	branch Test(EQ,Mem77[r1_3 + 1380<i32>:word32]) l00029240_ds_t
l00029240_ds_t:
	word32 r3_80 = r7 + 0x31<32>
l000295D0:
	r23_108 = Mem77[r3_80 * 4<32> + r24_130:word32]
	branch Test(NE,r23_108) l00029258
l00029240_ds_f:
l00029244:
	r23_108 = Mem77[(r7 + 0x2D<32>) * 4<32> + r24_130:word32]
	branch Test(EQ,r23_108) l000295E0
l000295E0:
	word32 r3_92 = Mem77[r24_130:word32]
	Mem95[r3_92 + 20<i32>:word32] = 0x32<32>
	word32 r4_96 = Mem95[r3_92:word32]
	Mem99[r3_92 + 24<i32>:word32] = r7
	word32 r11_152
	word32 r10_153
	call 0x000295F4<p32> + r4_96 (retsize: 0;)
		uses: r10:r10_153,r11:r11_152,r15:0x000295F4<p32>,r19:r19_103,r20:r20_105,r21:r21_107,r22:r22_101,r23:r23_108,r24:r24_83,r25:r25_110,r26:r26_112,r27:r27_114,r28:r28_116,r29:r29_118,r3:r3_92,r30:r30_120,r31:r31_122,r4:r4_96,r5:r24_83,r6:r6_124,r7:r7_79,r8:r8_126
		defs: r10:r10_153,r11:r11_152,r19:r19_132,r20:r20_133,r22:r22_129,r23:r23_135,r24:r24_130,r25:r25_136,r26:r26_137,r27:r27_138,r28:r28_139,r29:r29_140,r30:r30_141,r31:r31_142,r6:r6_144,r7:r7_147,r8:r8_148
	r21_154 = Mem99[r22_101:word32]
	branch Test(NE,r21_154) l00029260
l00029258:
	r21_154 = Mem77[r22_101:word32]
	branch Test(EQ,r21_154) l00029604
l00029604:
	word32 r3_164 = Mem160[Mem160[r24_130 + 4<i32>:word32]:word32]
	word32 r22_194
	word32 r3_208
	word32 r11_217
	word32 r10_218
	call 0x00029614<p32> + r3_164 (retsize: 0;)
		uses: r10:r10_218,r11:r11_217,r15:0x00029614<p32>,r19:r19_168,r20:r20_170,r21:r21_172,r22:r22_167,r23:r23_173,r24:r24_158,r25:r25_175,r26:r26_177,r27:r27_179,r28:r28_181,r29:r29_183,r3:r3_164,r30:r30_185,r31:r31_187,r5:r24_158,r6:1<32>,r7:0x690<32>,r8:r8_189
		defs: r10:r10_218,r11:r11_217,r19:r19_197,r20:r20_198,r22:r22_194,r23:r23_200,r24:r24_195,r26:r26_202,r3:r3_208,r30:r30_206,r31:r31_207,r6:r6_209,r7:r7_212,r8:r8_213
	Mem220[r22_194:word32] = r3_208
	r21_154 = r3_208
l00029260:
	Mem223[r21_154 + 140<i32>:word32] = r23_108
	word32 r29_224 = 1<32>
	word32 r22_225 = 0<32>
	word32 r28_227 = 0x100<32>
	word32 r3_228 = 2<32>
l00029278:
	word32 r25_235 = CONVERT(Mem231[r3_228 + r23_108:word16], word16, int32)
	branch Test(LT,r25_235) l00029284_ds_t
l00029284_ds_t:
l00029284_ds_f:
	word32 r3_238 = r25_235 + r22_225
l00029288:
	branch r3_238 <= 0x100<32> l000292A4
l000292A4:
	branch Test(EQ,r25_235) l000292A8_ds_t
l000292A8_ds_t:
l000292A8_ds_f:
l000292AC:
	r6_124 = CONVERT(SLICE(r29_224, int8, 0), int8, int32)
	word32 r3_248 = 0<32>
	word32 r5_249 = fp - 0x13C<32> + r22_225
l000292BC:
	Mem254[r3_248 + r5_249:byte] = SLICE(r6_124, byte, 0)
	r3_248 = r3_248 + 1<32>
	branch Test(NE,r3_248 ^ r25_235) l000292BC
l000292CC:
	r22_225 = r22_225 + 1<32> + (r25_235 + 0xFFFFFFFF<32>)
l000292D4:
	r29_224 = r29_224 + 1<32>
	r7 = r25_235 + 0xFFFFFFFF<32>
	r26 = r29_224 ^ 0x11<32>
	branch Test(NE,r29_224 ^ 0x11<32>) l000292E0_ds_t
l000292E0_ds_t:
	r3_228 = r29_224 * 2<32>
l000292E0_ds_f:
l000292E4:
	word32 r30_279
	Mem274[fp - 0x540<32> + r22_225 + 1028<i32>:byte] = SLICE(r29_224, byte, 0) ^ 0x11<8>
	word32 r27_278 = CONVERT(bLoc013C, byte, int32)
	branch Test(EQ,r27_278) l000292FC_ds_t
l000292FC_ds_t:
	r30_279 = r27_278
l000292FC_ds_f:
	word32 r30_280 = r27_278
l00029300:
	r29_224 = r29_224 ^ 0x11<32>
	r28_227 = 8<32>
	r31 = fp - 0x13C<32>
l00029310:
	branch Test(NE,r27_278 ^ r30_280) l00029318_ds_t
l00029318_ds_t:
l000295A0:
	word32 r3_293
	word32 r18_290 = r30_280 & 0x1F<32>
	branch Test(EQ,r18_290) l000295AC_ds_t
l000295AC_ds_t:
	r3_293 = 1<32>
l000295AC_ds_f:
	word32 r3_294 = 1<32>
l000295B0:
	r18_290 = r18_290 + 0xFFFFFFFF<32>
	branch Test(NE,r18_290) l000295B8_ds_t
l000295B8_ds_t:
	r3_294 = r3_294 * 2<32>
l000295B8_ds_f:
	r3_293 = r3_294 * 2<32>
l000295BC:
	branch r26 >= r3_293 l00029368
l000295C4:
	r26 = r26 * 2<32>
	r30_280 = r30_280 + 1<32>
l00029318_ds_f:
	word32 r3_309 = r29_224 * 2<32>
l0002931C:
	word32 r3_312 = fp - 0x540<32> + r3_309 * 2<32>
l00029324:
	r29_224 = r29_224 + 1<32>
	word32 r27_318 = CONVERT(Mem316[r29_224 + (fp - 0x13C<32>):byte], byte, word32)
	Mem321[r3_312:word32] = r26
	r27_278 = CONVERT(SLICE(r27_318, int8, 0), int8, int32)
	r26 = r26 + 1<32>
	branch Test(EQ,r27_278 ^ r30_280) l00029340_ds_t
l00029340_ds_t:
	r3_312 = r3_312 + 4<32>
l00029340_ds_f:
l00029344:
	word32 r3_332
	word32 r18_329 = r30_280 & 0x1F<32>
	branch Test(EQ,r18_329) l00029350_ds_t
l00029350_ds_t:
	r3_332 = 1<32>
l00029350_ds_f:
	word32 r3_333 = 1<32>
l00029354:
	r18_329 = r18_329 + 0xFFFFFFFF<32>
	branch Test(NE,r18_329) l0002935C_ds_t
l0002935C_ds_t:
	r3_333 = r3_333 * 2<32>
l0002935C_ds_f:
	r3_332 = r3_333 * 2<32>
l00029360:
	branch r26 < r3_332 l0002937C
l0002937C:
	r26 = r26 * 2<32>
	branch Test(NE,r27_278) l00029384_ds_t
l00029384_ds_t:
	r30_280 = r30_280 + 1<32>
l00029384_ds_f:
	r30_279 = r30_280 + 1<32>
l00029388:
	word32 r7_359 = r23_108 + 2<32>
	word32 r3_370 = r21_154 + 4<32>
	word32 r8_371 = r21_154 + 0x44<32>
	word32 r6_372 = 0<32>
l000293D4:
	word32 r26_396
	word32 r4_375 = r6_372 * 2<32>
	word32 r4_382 = CONVERT(Mem378[r7_359:word16], word16, int32)
	branch Test(NE,r4_382) l000293A0
l000293A0:
	r6_372 = r6_372 + r4_382
	r3_370 = r3_370 + 4<32>
	word32 r4_393 = Mem378[(r6_372 + 0xFFFFFFFF<32>) * 4<32> + (fp - 0x540<32>):word32]
	Mem394[r3_370 + 68<i32>:word32] = r6_372 - Mem378[r4_375 * 2<32> + (fp - 0x540<32>):word32]
	r7_359 = r7_359 + 2<32>
	r26_396 = r3_370 ^ r8_371
	branch Test(EQ,r26_396) l000293D0_ds_t
l000293D0_ds_t:
	Mem397[r3_370 - 4<i32>:word32] = r4_393
l000293D0_ds_f:
	Mem398[r3_370 - 4<i32>:word32] = r4_393
l000293E8:
	Mem400[r3_370:word32] = 0xFFFFFFFF<32>
	r3_370 = r3_370 + 4<32>
	r26_396 = r3_370 ^ r8_371
	branch Test(NE,r26_396) l000293F8_ds_t
l000293F8_ds_t:
	r7_359 = r7_359 + 2<32>
l000293F8_ds_f:
l000293FC:
	Mem411[r21_154 + 68<i32>:word32] = 0xFFFFFFFF<32>
	fn0002F63C()
	word32 r6_407 = r26_396
	word32 r7_413 = 0x400<32>
	word32 r5_414 = 1<32>
	word32 r9_415 = r26_396
l00029424:
	word32 r12_424 = CONVERT(Mem420[r5_414 * 2<32> + r23_108:word16], word16, int32)
	branch Test(LE,r12_424) l00029500
l00029434:
	word32 r10_437
	word32 r6_426 = r9_415 + 0x11<32>
	word32 r11_430 = 8<32> - r5_414
	word32 r8_427 = r6_426 + r12_424
	word32 r7_428 = r9_415 * 2<32>
	word32 r18_434 = r11_430 & 0x1F<32>
	branch Test(EQ,r11_430 & 0x1F<32>) l00029460_ds_t
l00029460_ds_t:
	r10_437 = 1<32>
l00029460_ds_f:
	word32 r10_438 = 1<32>
l00029464:
	r18_434 = r18_434 + 0xFFFFFFFF<32>
	branch Test(NE,r18_434) l0002946C_ds_t
l0002946C_ds_t:
	r10_438 = r10_438 * 2<32>
l0002946C_ds_f:
	r10_437 = r10_438 * 2<32>
l00029470:
	word32 r7_449 = fp - 0x540<32> + r7_428 * 2<32>
	r6_407 = r23_108 + r6_426 * 2<32>
	r8_371 = r23_108 + r8_427 * 2<32>
	word32 r10_459 = r10_437 + 0x24<32>
l00029480:
	word32 r4_469
	word32 r3_462 = Mem461[r7_449:word32]
	word32 r28_465 = CONVERT(Mem461[r6_407:word16], word16, word32)
	word32 r18_467 = r11_430 & 0x1F<32>
	branch Test(EQ,r11_430 & 0x1F<32>) l00029494_ds_t
l00029494_ds_t:
	r4_469 = r3_462
l00029494_ds_f:
	word32 r4_470 = r3_462
l00029498:
	r18_467 = r18_467 + 0xFFFFFFFF<32>
	branch Test(NE,r18_467) l000294A0_ds_t
l000294A0_ds_t:
	r4_470 = r4_470 * 2<32>
l000294A0_ds_f:
	r4_469 = r4_470 * 2<32>
l000294A4:
	r28_227 = CONVERT(SLICE(r28_465, int16, 0), int16, int32)
	word32 r3_495 = r21_154 + (r4_469 + 0x24<32>) * 4<32>
	word32 r4_496 = r21_154 + (r4_469 + 0x248<32>) * 2<32>
	r26_396 = r21_154 + (r10_459 + r4_469) * 4<32>
l000294D4:
	Mem500[r3_495:word32] = r5_414
	Mem505[r4_496:word16] = SLICE(r28_227, word16, 0)
	r3_495 = r3_495 + 4<32>
	r27_278 = r3_495 ^ r26_396
	branch Test(NE,r27_278) l000294E8_ds_t
l000294E8_ds_t:
	r4_496 = r4_496 + 2<32>
l000294E8_ds_f:
l000294EC:
	r6_407 = r6_407 + 2<32>
	branch Test(NE,r6_407 ^ r8_371) l000294F8_ds_t
l000294F8_ds_t:
	r7_449 = r7_449 + 4<32>
l000294F8_ds_f:
	r7_413 = r7_449 + 4<32>
l000294FC:
	r9_415 = r9_415 + r12_424
l00029500:
	r5_414 = r5_414 + 1<32>
	branch Test(NE,r5_414 ^ 9<32>) l0002950C_ds_t
l0002950C_ds_t:
l0002950C_ds_f:
l00029510:
	branch Test(EQ,r6) l00029514_ds_t
l00029514_ds_t:
l00029514_ds_f:
l00029518:
	branch Test(EQ,r22_225) l0002951C_ds_t
l0002951C_ds_t:
l0002951C_ds_f:
	word32 r22_571 = r22_225 + 0x11<32>
l00029520:
	word32 r19_578 = r23_108 + 0x22<32>
	word32 r22_579 = r23_108 + r22_571 * 2<32>
l00029534:
	branch 0xF<32> -u CONVERT(Mem548[r19_578:word16], word16, int32) >= 0<32> l00029548_ds_t
l00029548_ds_t:
	r19_578 = r19_578 + 2<32>
l0002955C:
	branch Test(NE,r19_578 ^ r22_579) l00029534
l00029564:
l00029568:
	return
fn000291C4_exit:
l00029548_ds_f:
	word32 r19_612 = r19_578 + 2<32>
l0002954C:
	word32 r3_613 = Mem548[r24_130:word32]
	word32 r4_614 = Mem548[r3_613:word32]
	Mem617[r3_613 + 20<i32>:word32] = 8<32>
	word32 r11_733
	word32 r10_734
	call 0x00029554<p32> + r4_614 (retsize: 0;)
		uses: r10:r10_734,r11:r11_733,r15:0x00029554<p32>,r19:r19_612,r20:1<32>,r21:0xF<32>,r22:r22_579,r23:8<32>,r24:r24_741,r25:fp - 0x540<32>,r26:r26_633,r27:r27_636,r28:r28_642,r29:r29_664,r3:r3_613,r30:r30_678,r31:r31_690,r4:r4_614,r5:r24_741,r6:r6_700,r7:r7_703,r8:r8_706,Stack +0420:bLoc013C
		defs: r10:r10_734,r11:r11_733
l00029368:
	word32 r3_752 = Mem746[r24_130:word32]
	word32 r4_754 = Mem746[r3_752:word32]
	Mem757[r3_752 + 20<i32>:word32] = 8<32>
	word32 r11_856
	word32 r10_857
	call 0x00029374<p32> + r4_754 (retsize: 0;)
		uses: r10:r10_857,r11:r11_856,r15:0x00029374<p32>,r19:1<32>,r20:r20_770,r21:r21_222,r22:r22_271,r23:r23_221,r24:r24_741,r25:fp - 0x540<32>,r26:r26_783,r27:r27_784,r28:8<32>,r29:r29_787,r3:r3_752,r30:r30_286,r31:fp - 0x13C<32>,r4:r4_754,r5:r24_741,r6:r6_799,r7:r25_235 + 0xFFFFFFFF<32>,r8:r8_820,Stack +0420:bLoc013C
		defs: r10:r10_857,r11:r11_856
l00029290:
	word32 r3_860 = Mem231[r24_130:word32]
	word32 r4_862 = Mem231[r3_860:word32]
	Mem868[r3_860 + 20<i32>:word32] = 8<32>
	word32 r11_921
	word32 r10_922
	call 0x0002929C<p32> + r4_862 (retsize: 0;)
		uses: r10:r10_922,r11:r11_921,r15:0x0002929C<p32>,r19:r19_872,r20:r20_770,r21:r21_222,r22:r22_236,r23:r23_221,r24:r24_741,r25:r25_235,r26:r26_880,r27:8<32>,r28:0x100<32>,r29:r29_245,r3:r3_860,r30:r30_886,r31:r31_693,r4:r4_862,r5:r24_741,r6:r6_800,r7:r7_892,r8:r8_820,Stack +0420:bLoc013C
		defs: r10:r10_922,r11:r11_921


word32 fn0002980C(word32 r5, word32 r6, word32 r7, word32 r8, word32 r22, word32 r27, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000299CC
// MayUse:  r22:[0..31] r27:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r3 r8
// Trashed: r18 r3 r4 r5 r6 r7 r8
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27
fn0002980C_entry:
	ptr32 fp
l0002980C:
	word32 r26_121
	word32 r3_118
	word32 r24_108 = Mem21[r5 + 16<i32>:word32]
	word32 r1_100 = fp + 0xFFFFFFC0<32>
	word32 r21_103 = r5
	word32 r19_102 = r6
	word32 r25_105 = r7
	word32 r23_104 = r8
	word32 r3_131 = Mem21[r5:word32]
	branch Test(NE,Mem21[r24_108 + 472<i32>:word32]) l00029854_ds_t
l00029854_ds_t:
	r26_121 = Mem21[r5 + 4<i32>:word32]
l00029854_ds_f:
	r26_121 = Mem21[r5 + 4<i32>:word32]
l00029858:
	r22 = 0x18<32>
	branch r7 > 0x18<32> l000298CC
l00029864:
	branch Test(NE,r26_121) l00029888
l00029868:
	word32 r3_41 = Mem21[Mem21[r24_108 + 24<i32>:word32] + 12<i32>:word32]
	word32 r3_69
	call 0x00029870<p32> + r3_41 (retsize: 0;)
		uses: r15:0x00029870<p32>,r19:r19_44,r21:r21_45,r22:r22_48,r23:r23_46,r24:r24_38,r25:r25_47,r26:r26_37,r27:r27_49,r3:r3_41,r5:r24_38,r6:r6_50,r7:r7_51,r8:r8_52
		defs: r1:r1_54,r19:r19_55,r21:r21_56,r22:r22_60,r23:r23_57,r24:r24_61,r25:r25_58,r3:r3_69,r6:r6_65,r7:r7_67,r8:r8_68
	branch Test(EQ,r3_69) l000299C4
l0002987C:
	word32 r4_71 = Mem21[r24_108 + 24<i32>:word32]
	r3_131 = Mem21[r4_71:word32]
	r26_121 = Mem21[r4_71 + 4<i32>:word32]
l00029888:
	r27 = CONVERT(Mem21[r3_131:byte], byte, word32)
	r26_121 = r26_121 + 0xFFFFFFFF<32>
	branch Test(EQ,r27 ^ 0xFF<32>) l00029898_ds_t
l00029898_ds_t:
	word32 r3_120 = r3_131 + 1<32>
l0002990C:
	branch Test(NE,r26_121) l00029910_ds_t
l00029910_ds_t:
l00029910_ds_f:
l00029914:
	word32 r3_89 = Mem21[Mem21[r24_108 + 24<i32>:word32] + 12<i32>:word32]
	word32 r3_116
	call 0x0002991C<p32> + r3_89 (retsize: 0;)
		uses: r15:0x0002991C<p32>,r19:r19_91,r21:r21_92,r22:r22_95,r23:r23_93,r24:r24_84,r25:r25_94,r26:r26_83,r27:r27_96,r3:r3_89,r5:r24_84,r6:r6_97,r7:r7_98,r8:r8_99
		defs: r1:r1_101,r19:r19_102,r21:r21_103,r22:r22_107,r23:r23_104,r24:r24_108,r25:r25_105,r27:r27_110,r3:r3_116,r6:r6_112,r7:r7_114,r8:r8_115
	branch Test(EQ,r3_116) l000299C4
l000299C4:
	r3_118 = 0<32>
l00029928:
	word32 r4_119 = Mem21[r24_108 + 24<i32>:word32]
	r3_120 = Mem21[r4_119:word32]
	r26_121 = Mem21[r4_119 + 4<i32>:word32]
l00029934:
	word32 r4_126 = CONVERT(Mem21[r3_120:byte], byte, word32)
	r26_121 = r26_121 + 0xFFFFFFFF<32>
	branch Test(EQ,r4_126 ^ 0xFF<32>) l00029944_ds_t
l00029944_ds_t:
	r3_120 = r3_120 + 1<32>
l00029944_ds_f:
	r3_131 = r3_120 + 1<32>
l00029948:
	branch Test(EQ,r4_126) l0002989C
l0002994C:
	Mem133[r24_108 + 472<i32>:word32] = r4_126
l00029950:
	branch r25_105 >= r23_104 l000298CC
l00029958:
	branch Test(NE,Mem140[Mem140[r24_108 + 500<i32>:word32] + 8<i32>:word32]) l00029964_ds_t
l00029964_ds_t:
l00029964_ds_f:
l00029968:
	word32 r4_145 = Mem140[r24_108:word32]
	Mem147[r4_145 + 20<i32>:word32] = 0x75<32>
	word32 r4_148 = Mem147[r4_145 + 4<i32>:word32]
	Mem154[r1_100 + 28<i32>:word32] = r3_131
	word32 r1_166
	word32 r24_173
	call 0x0002997C<p32> + r4_148 (retsize: 0;)
		uses: r15:0x0002997C<p32>,r19:r19_155,r21:r21_157,r22:r22_159,r23:r23_136,r24:r24_139,r25:r25_134,r26:r26_161,r27:r27_162,r4:r4_148,r5:r24_139,r6:0xFFFFFFFF<32>,r7:0x75<32>,r8:r8_164
		defs: r1:r1_166,r19:r19_167,r21:r21_168,r24:r24_173,r25:r25_170,r26:r26_174,r8:r8_180
	r3_131 = Mem154[r1_166 + 28<i32>:word32]
	Mem186[Mem154[r24_173 + 500<i32>:word32] + 8<i32>:word32] = 1<32>
l00029994:
	word32 r5_193
	word32 r4_189 = 0x19<32> - r25_105
	word32 r18_190 = r4_189 & 0x1F<32>
	branch Test(EQ,r4_189 & 0x1F<32>) l000299A8_ds_t
l000299A8_ds_t:
	r5_193 = r19_102
l000299A8_ds_f:
	word32 r5_194 = r19_102
l000299AC:
	r18_190 = r18_190 + 0xFFFFFFFF<32>
	branch Test(NE,r18_190) l000299B4_ds_t
l000299B4_ds_t:
	r5_194 = r5_194 * 2<32>
l000299B4_ds_f:
	r5_193 = r5_194 * 2<32>
l000299B8:
	r25_105 = 0x19<32>
	r19_102 = r5_193
l00029898_ds_f:
	r3_131 = r3_131 + 1<32>
l0002989C:
	word32 r19_208 = r19_102 * 2<32>
	r25_105 = r25_105 + 8<32>
	branch r22 >= r25_105 l000298C8_ds_t
l000298C8_ds_t:
	r19_102 = r19_208 * 0x80<32> | r27
l000298C8_ds_f:
	r19_102 = r19_208 * 0x80<32> | r27
l000298CC:
	Mem236[r21_103:word32] = r3_131
	Mem242[r21_103 + 4<i32>:word32] = r26_121
	Mem244[r21_103 + 8<i32>:word32] = r19_102
	Mem246[r21_103 + 12<i32>:word32] = r25_105
	r3_118 = 1<32>
l000298E0:
	r8Out = r8
	return r3_118
fn0002980C_exit:


void fn000299CC(word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r19, word32 r27)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r19:[0..31] r27:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: C r18 r27 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25
fn000299CC_entry:
l000299CC:
	word32 r8_126
	word32 r9_111
	word32 r3_39
	word32 r23_160 = r9 + 1<32>
	branch r7 < r9 l000299FC_ds_t
l000299FC_ds_t:
l00029B68:
	branch Test(EQ,fn0002980C(r5, r6, r7, r9, r8, r27, out r8_126)) l00029B80
l00029B80:
l00029B74:
	r9_111 = Mem17[r5 + 8<i32>:word32]
	r3_39 = Mem17[r5 + 12<i32>:word32]
l000299FC_ds_f:
l00029A00:
	r3_39 = r7
	r9_111 = r6
	r8_126 = r8
l00029A08:
	word32 r3_54
	word32 r4_49 = Mem17[r9 * 4<32> + r8:word32]
	word32 r7_107 = r3_39 - r9
	word32 r18_52 = r9 & 0x1F<32>
	branch Test(EQ,r9 & 0x1F<32>) l00029A28_ds_t
l00029A28_ds_t:
	r3_54 = 1<32>
l00029A28_ds_f:
	word32 r3_55 = 1<32>
l00029A2C:
	r18_52 = r18_52 + 0xFFFFFFFF<32>
	branch Test(NE,r18_52) l00029A34_ds_t
l00029A34_ds_t:
	r3_55 = r3_55 * 2<32>
l00029A34_ds_f:
	r3_54 = r3_55 * 2<32>
l00029A38:
	word32 r5_70
	word32 r3_62 = r3_54 + 0xFFFFFFFF<32>
	word32 r18_65 = r7_107 & 0x1F<32>
	branch Test(EQ,r7_107 & 0x1F<32>) l00029A48_ds_t
l00029A48_ds_t:
	r5_70 = r9_111
l00029A48_ds_f:
	word32 r5_71 = r9_111
l00029A4C:
	r18_65 = r18_65 + 0xFFFFFFFF<32>
	branch Test(NE,r18_65) l00029A54_ds_t
l00029A54_ds_t:
	r5_71 = r5_71 >> 1<i32>
l00029A54_ds_f:
	r5_70 = r5_71 >> 1<i32>
l00029A58:
	word32 r21_104
	word32 r3_108 = r3_62 & r5_70
	branch r4_49 >= r3_108 l00029A64_ds_t
l00029A64_ds_t:
	r21_104 = r9 + 1<32>
l00029A64_ds_f:
l00029A68:
	r21_104 = r8 + (r9 + 1<32>) * 4<32>
l00029AB0:
	r21_104 = r21_104 + 4<32>
	branch Test(GT,r7_107) l00029AB8_ds_t
l00029AB8_ds_t:
	r19 = r3_108 * 2<32>
l00029AB8_ds_f:
	r19 = r3_108 * 2<32>
l00029ABC:
	branch Test(EQ,fn0002980C(r5, r9_111, r7_107, 1<32>, r8, r27, out r8_126)) l00029AD0_ds_t
l00029AD0_ds_t:
l00029AD0_ds_f:
l00029AD4:
	r9_111 = Mem17[r5 + 8<i32>:word32]
	r7_107 = Mem17[r5 + 12<i32>:word32]
l00029A78:
	word32 r3_140
	r7_107 = r7_107 + 0xFFFFFFFF<32>
	word32 r4_136 = Mem17[r21_104 - 4<i32>:word32]
	word32 r18_137 = r7_107 & 0x1F<32>
	branch Test(EQ,r7_107 & 0x1F<32>) l00029A8C_ds_t
l00029A8C_ds_t:
	r3_140 = r9_111
l00029A8C_ds_f:
	word32 r3_141 = r9_111
l00029A90:
	r18_137 = r18_137 + 0xFFFFFFFF<32>
	branch Test(NE,r18_137) l00029A98_ds_t
l00029A98_ds_t:
	r3_141 = r3_141 >> 1<i32>
l00029A98_ds_f:
	r3_140 = r3_141 >> 1<i32>
l00029A9C:
	r3_108 = r3_140 & 1<32> | r19
	branch r4_136 >= r3_108 l00029AAC_ds_t
l00029AAC_ds_t:
	r23_160 = r23_160 + 0<32>
l00029AE0:
	Mem177[r5 + 8<i32>:word32] = r9_111
	branch r23_160 > 0x10<32> l00029AF0_ds_t
l00029AF0_ds_t:
	Mem186[r5 + 12<i32>:word32] = r7_107
l00029B44:
	word32 r5_187 = Mem186[r5 + 16<i32>:word32]
	word32 r3_189 = Mem186[r5_187:word32]
	Mem190[r3_189 + 20<i32>:word32] = 0x76<32>
	word32 r3_191 = Mem190[r3_189 + 4<i32>:word32]
	call 0x00029B58<p32> + r3_191 (retsize: 0;)
		uses: r15:0x00029B58<p32>,r19:r19_198,r21:r21_204,r22:r8,r23:r23_179,r24:1<32>,r25:r5,r27:r27,r3:r3_191,r4:0x76<32>,r5:r5_187,r6:0xFFFFFFFF<32>,r7:r7_181,r8:r8_211,r9:r9_163
l00029AF0_ds_f:
	Mem259[r5 + 12<i32>:word32] = r7_107
l00029AF4:
l00029B20:
	return
fn000299CC_exit:
l00029AAC_ds_f:
	r23_160 = r23_160 + 1<32>


void fn0002A250(word32 r5, word32 r15, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r19:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19
fn0002A250_entry:
l0002A250:
	word32 r3_11 = Mem10[Mem0[r5 + 4<i32>:word32]:word32]
	word32 r3_17
	word32 r19_19
	word32 r0_24
	call 0x0002A26C<p32> + r3_11 (retsize: 0;)
		uses: r15:0x0002A26C<p32>,r19:r5,r3:r3_11,r5:r5,r6:1<32>,r7:0xE8<32>,Stack +0000:r15,Stack +001C:r19
		defs: r0:r0_24,r19:r19_19,r3:r3_17
	Mem26[r19_19 + 500<i32>:word32] = r3_17
	Mem27[r3_17 + 56<i32>:word32] = r0_24
	Mem28[r3_17:word32] = 0xFFFFFCA8<32>
	Mem30[r3_17 + 40<i32>:word32] = r0_24
	Mem31[r3_17 + 60<i32>:word32] = r0_24
	Mem32[r3_17 + 4<i32>:word32] = 0x208<32>
	Mem33[r3_17 + 44<i32>:word32] = r0_24
	Mem34[r3_17 + 64<i32>:word32] = r0_24
	Mem35[r3_17 + 48<i32>:word32] = r0_24
	Mem36[r3_17 + 68<i32>:word32] = r0_24
	Mem37[r3_17 + 52<i32>:word32] = r0_24
	return
fn0002A250_exit:


void fn0002A2C0(word32 r0, word32 r5, word32 r15, word32 r19, word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r15:[0..31] r19:[0..31] r21:[0..31] r5:[0..31]
// LiveOut:
// Trashed: C r0 r3 r4 r5 r6 r7 r8
// Preserved: r1 r15 r19 r21
fn0002A2C0_entry:
l0002A2C0:
	word32 r19_11 = Mem9[r5 + 500<i32>:word32]
	word32 r6_12 = Mem9[r5 + 496<i32>:word32]
	word32 r8_14 = Mem9[r19_11 + 16<i32>:word32]
	word32 r7_15 = Mem9[r6_12 + 24<i32>:word32]
	word32 r4_49 = (r8_14 >> 31<i32> & 7<32>) + r8_14
	word32 r3_16 = Mem9[r6_12 + 8<i32>:word32]
	word32 r4_54 = r7_15 + (r4_49 >> 3<i32>)
	Mem55[r6_12 + 24<i32>:word32] = r4_54
	Mem58[r19_11 + 16<i32>:word32] = r0
	word32 r21_60
	word32 r19_62
	word32 r3_67
	word32 r0_69
	call 0x0002A388<p32> + r3_16 (retsize: 0;)
		uses: r0:r0,r15:0x0002A388<p32>,r19:r19_11,r21:r5,r3:r3_16,r4:r4_54,r5:r5,r6:r6_12,r7:r7_15,r8:r4_49 >> 3<i32>,Stack +0000:r15,Stack +001C:r19,Stack +0020:r21
		defs: r0:r0_69,r19:r19_62,r21:r21_60,r3:r3_67
	branch Test(EQ,r3_67) l0002A394_ds_t
l0002A394_ds_t:
l0002A394_ds_f:
l0002A398:
	word32 r3_73 = Mem58[r21_60 + 384<i32>:word32]
	branch Test(LE,r3_73) l0002A3A0_ds_t
l0002A3A0_ds_t:
l0002A3A0_ds_f:
l0002A3A4:
	word32 r3_78 = r19_62 + 0x18<32>
	word32 r4_79 = r19_62 + (r3_73 + 6<32>) * 4<32>
l0002A3B4:
	Mem82[r3_78:word32] = r0_69
	r3_78 = r3_78 + 4<32>
	branch Test(NE,r3_78 ^ r4_79) l0002A3B4
l0002A3C4:
	word32 r4_89 = Mem88[r21_60 + 472<i32>:word32]
	word32 r21_90 = Mem88[r21_60 + 324<i32>:word32]
	Mem94[r19_62 + 20<i32>:word32] = r0_69
	branch Test(NE,r4_89) l0002A3D8_ds_t
l0002A3D8_ds_t:
	Mem96[r19_62 + 40<i32>:word32] = r21_90
l0002A3D8_ds_f:
	Mem97[r19_62 + 40<i32>:word32] = r21_90
l0002A3DC:
	Mem98[r19_62 + 8<i32>:word32] = r4_89
l0002A3E0:
l0002A3E4:
	return
fn0002A2C0_exit:


void fn0002B520(word32 r5, word32 r15, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r19:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19
fn0002B520_entry:
l0002B520:
	word32 r3_12 = Mem7[Mem7[r5 + 4<i32>:word32]:word32]
	word32 r19_17
	word32 r3_18
	word32 r0_23
	call 0x0002B53C<p32> + r3_12 (retsize: 0;)
		uses: r15:0x0002B53C<p32>,r19:r5,r3:r3_12,r5:r5,r6:1<32>,r7:0x40<32>,Stack +0000:r15,Stack +001C:r19
		defs: r0:r0_23,r19:r19_17,r3:r3_18
	word32 r7_25 = Mem7[r19_17 + 36<i32>:word32]
	word32 r4_26 = Mem7[r19_17 + 4<i32>:word32]
	Mem28[r19_17 + 500<i32>:word32] = r3_18
	word32 r4_29 = Mem28[r4_26:word32]
	Mem30[r3_18:word32] = 0xA74<32>
	Mem31[r3_18 + 44<i32>:word32] = r0_23
	Mem32[r3_18 + 48<i32>:word32] = r0_23
	Mem33[r3_18 + 52<i32>:word32] = r0_23
	Mem34[r3_18 + 56<i32>:word32] = r0_23
	word32 r19_49
	word32 r3_50
	call 0x0002B59C<p32> + r4_29 (retsize: 0;)
		uses: r15:0x0002B59C<p32>,r19:r19_17,r3:r7_25 * 0x100<32>,r4:r4_29,r5:r19_17,r6:1<32>,r7:r7_25 * 0x100<32>
		defs: r19:r19_49,r3:r3_50
	branch Test(LE,Mem34[r19_49 + 36<i32>:word32]) l0002B5AC_ds_t
l0002B5AC_ds_t:
	Mem58[r19_49 + 160<i32>:word32] = r3_50
l0002B5AC_ds_f:
	Mem59[r19_49 + 160<i32>:word32] = r3_50
l0002B5B0:
	word32 r5_60 = r3_50
	word32 r7_61 = 0<32>
	word32 r3_63 = r3_50
l0002B5C0:
	r5_60 = r5_60 + 0x100<32>
l0002B5C4:
	Mem68[r3_63:word32] = 0xFFFFFFFF<32>
	r3_63 = r3_63 + 4<32>
	branch Test(NE,r5_60 ^ r3_63) l0002B5C4
l0002B5D4:
	r7_61 = r7_61 + 1<32>
	branch r7_61 < Mem68[r19_49 + 36<i32>:word32] l0002B5E4_ds_t
l0002B5E4_ds_t:
	r3_63 = r5_60
l0002B5E4_ds_f:
l0002B5E8:
	return
fn0002B520_exit:


void fn0002CA58(word32 r5, word32 r6, word32 r15, word32 r19, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r0 r10 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29
fn0002CA58_entry:
l0002CA58:
	word32 r3_31 = Mem25[Mem25[r5 + 4<i32>:word32]:word32]
	word32 r19_36
	word32 r22_40
	word32 r24_41
	word32 r25_42
	word32 r26_43
	word32 r27_44
	word32 r28_45
	word32 r29_46
	word32 r3_47
	word32 r0_51
	word32 r21_123
	call 0x0002CA9C<p32> + r3_31 (retsize: 0;)
		uses: r15:0x0002CA9C<p32>,r19:r6,r21:r5,r22:r22,r23:r23,r24:r24,r25:r25,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_31,r5:r5,r6:1<32>,r7:0x74<32>,Stack +0000:r15,Stack +001C:r19,Stack +0020:r21,Stack +0024:r22,Stack +0028:r23,Stack +002C:r24,Stack +0030:r25,Stack +0034:r26,Stack +0038:r27,Stack +003C:r28,Stack +0040:r29
		defs: r0:r0_51,r19:r19_36,r21:r21_37,r22:r22_40,r24:r24_41,r25:r25_42,r26:r26_43,r27:r27_44,r28:r28_45,r29:r29_46,r3:r3_47
	Mem58[r21_123 + 484<i32>:word32] = r3_47
	Mem60[r3_47 + 112<i32>:word32] = r0_51
	Mem61[r3_47:word32] = 0x1C78<32>
	word32 r23_115 = r3_47
	branch Test(NE,r19_36) l0002CAC8_ds_t
l0002CAC8_ds_t:
	Mem63[r3_47 + 8<i32>:word32] = 0x2200<32>
l0002CB50:
	word32 r28_118
	word32 r19_65 = Mem63[r21_123 + 216<i32>:word32]
	branch Test(LE,Mem63[r21_123 + 36<i32>:word32]) l0002CB5C_ds_t
l0002CB5C_ds_t:
	r28_118 = r3_47 + 0x48<32>
l0002CB5C_ds_f:
	r28_118 = r3_47 + 0x48<32>
l0002CB60:
	word32 r25_128 = r3_47 + 0x48<32>
	word32 r19_122 = r19_65 + 8<32>
	word32 r24_127 = 0<32>
	word32 r29_109 = 1<32>
l0002CB70:
	word32 r22_104
	word32 r24_76 = r24_127 + 1<32>
	branch Test(EQ,Mem73[r21_123 + 220<i32>:word32]) l0002CB7C_ds_t
l0002CB7C_ds_t:
	r22_104 = Mem73[r19_122 + 4<i32>:word32]
l0002CB7C_ds_f:
	word32 r22_79 = Mem73[r19_122 + 4<i32>:word32]
l0002CB80:
	r22_104 = r22_79 * 3<32>
l0002CB88:
	word32 r26_93 = Mem73[Mem73[r21_123 + 4<i32>:word32] + 20<i32>:word32]
	word32 r19_88 = r19_122 + 0x54<32>
	word32 r3_94 = fn0002CD10(Mem73[r19_122 + 20<i32>:word32], Mem73[r19_122:word32])
	word32 r3_133
	call 0x0002CBC8<p32> + r26_93 (retsize: 0;)
		uses: r10:r22_104,r15:0x0002CBC8<p32>,r19:r19_88,r21:r21_72,r22:r22_104,r23:r23_115,r24:r24_76,r25:r25_90 + 4<32>,r26:r26_93,r27:r3_94,r28:r28_118,r29:r29_109,r5:r21_72,r6:1<32>,r7:r29_109,r8:r3_94,r9:fn0002CD10(Mem73[r19_88 - 60<i32>:word32], Mem73[r19_88 - 80<i32>:word32])
		defs: r19:r19_122,r21:r21_123,r23:r23_124,r24:r24_127,r25:r25_128,r28:r28_131,r29:r29_132,r3:r3_133
	branch r24_127 < Mem73[r21_123 + 36<i32>:word32] l0002CBDC_ds_t
l0002CBDC_ds_t:
	Mem146[r25_128 - 4<i32>:word32] = r3_133
l0002CBDC_ds_f:
	Mem147[r25_128 - 4<i32>:word32] = r3_133
l0002CBE0:
	Mem151[r23_115 + 16<i32>:word32] = r28_118
	Mem152[r23_115 + 4<i32>:word32] = 0x1CE0<32>
	Mem154[r23_115 + 12<i32>:word32] = 0x1FC4<32>
l0002CAC8_ds_f:
	Mem155[r3_47 + 8<i32>:word32] = 0x2200<32>
l0002CACC:
	word32 r3_159 = Mem155[Mem155[r21_123 + 4<i32>:word32] + 4<i32>:word32]
	word32 r23_165
	word32 r3_174
	call 0x0002CADC<p32> + r3_159 (retsize: 0;)
		uses: r15:0x0002CADC<p32>,r19:r19_36,r21:r21_37,r22:r22_40,r23:r3_47,r24:r24_41,r25:r25_42,r26:r26_43,r27:r27_44,r28:r28_45,r29:r29_46,r3:r3_159,r5:r21_37,r6:1<32>,r7:0x500<32>
		defs: r23:r23_165,r3:r3_174
	word32 r4_185 = r23_165 + 0x20<32>
l0002CAEC:
	Mem189[r4_185:word32] = r3_174
	r4_185 = r4_185 + 4<32>
	word32 r5_192 = r4_185 ^ r23_165 + 0x48<32>
	branch Test(NE,r5_192) l0002CAFC_ds_t
l0002CAFC_ds_t:
	r3_174 = r3_174 + 0x80<32>
l0002CAFC_ds_f:
l0002CB00:
	Mem197[r23_165 + 16<i32>:word32] = r5_192
	Mem198[r23_165 + 4<i32>:word32] = 0x1CD8<32>
	Mem200[r23_165 + 12<i32>:word32] = 0x2394<32>
l0002CB1C:
	return
fn0002CA58_exit:


void fn0002CC00(word32 r5, word32 r15, word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00025CD4
// MayUse:  r15:[0..31] r19:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r4 r5 r6
// Preserved: r1 r15 r19
fn0002CC00_entry:
l0002CC00:
	word32 r4_5 = Mem0[r5 + 4<i32>:word32]
	branch Test(NE,r4_5) l0002CC10
l0002CC10:
	word32 r3_11 = Mem10[r4_5 + 36<i32>:word32]
	word32 r19_19
	word32 r0_22
	call 0x0002CC24<p32> + r3_11 (retsize: 0;)
		uses: r0:r0_22,r15:0x0002CC24<p32>,r19:r5,r3:r3_11,r5:r5,r6:1<32>,Stack +0000:r15,Stack +001C:r19
		defs: r0:r0_22,r19:r19_19
	branch Test(NE,Mem10[r19_19 + 16<i32>:word32]) l0002CC34_ds_t
l0002CC34_ds_t:
l0002CC4C:
	Mem26[r19_19 + 20<i32>:word32] = 0xC8<32>
	Mem27[r19_19 + 360<i32>:word32] = r0_22
l0002CC34_ds_f:
l0002CC38:
	Mem29[r19_19 + 20<i32>:word32] = 0x64<32>
l0002CC3C:
	return
l0002CC08:
	return
fn0002CC00_exit:


void fn0002CC5C(word32 r0, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r3
// Preserved: r1 r15 r19
fn0002CC5C_entry:
l0002CC5C:
	word32 r3_5 = Mem0[r5 + 4<i32>:word32]
	branch Test(EQ,r3_5) l0002CC70_ds_t
l0002CC70_ds_t:
l0002CC80:
	Mem13[r5 + 4<i32>:word32] = r0
	Mem14[r5 + 20<i32>:word32] = r0
	return
fn0002CC5C_exit:
l0002CC70_ds_f:
l0002CC74:
	word32 r3_19 = Mem10[r3_5 + 40<i32>:word32]
	call 0x0002CC78<p32> + r3_19 (retsize: 0;)
		uses: r0:r0,r15:0x0002CC78<p32>,r19:r5,r3:r3_19,r5:r5


void fn0002CC98(word32 r5, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r5 r6 r7
// Preserved: r1 r15
fn0002CC98_entry:
l0002CC98:
	word32 r3_9 = Mem5[Mem5[r5 + 4<i32>:word32]:word32]
	word32 r3_14
	word32 r0_18
	call 0x0002CCAC<p32> + r3_9 (retsize: 0;)
		uses: r15:0x0002CCAC<p32>,r3:r3_9,r5:r5,r6:0<32>,r7:0x104<32>,Stack +0000:r15
		defs: r0:r0_18,r3:r3_14
	Mem19[r3_14 + 256<i32>:word32] = r0_18
	return
fn0002CC98_exit:


word32 fn0002CCC4(word32 r5, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00027448
// MayUse:  r15:[0..31] r5:[0..31]
// LiveOut: r3
// Trashed: r0 r3 r5 r6 r7
// Preserved: r1 r15
fn0002CCC4_entry:
l0002CCC4:
	word32 r3_9 = Mem5[Mem5[r5 + 4<i32>:word32]:word32]
	word32 r3_14
	word32 r0_18
	call 0x0002CCD8<p32> + r3_9 (retsize: 0;)
		uses: r15:0x0002CCD8<p32>,r3:r3_9,r5:r5,r6:0<32>,r7:0x228<32>,Stack +0000:r15
		defs: r0:r0_18,r3:r3_14
	Mem19[r3_14 + 548<i32>:word32] = r0_18
	return r3_14
fn0002CCC4_exit:


word32 fn0002CCF0(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000261AC
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: C r3 r5
// Preserved: r1 r15
fn0002CCF0_entry:
l0002CCF0:
	return fn0002E7D0(r5 + r6 + 0xFFFFFFFF<32>, r6)
fn0002CCF0_exit:


word32 fn0002CD10(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002CA58
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: C r3 r5
// Preserved: r1 r15 r19
fn0002CD10_entry:
l0002CD10:
	word32 r19_9 = r6 + 0xFFFFFFFF<32> + r5
	return r19_9 - fn0002E86C(r19_9, r6)
fn0002CD10_exit:


void fn0002CDCC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001CC00
// MayUse: 
// LiveOut:
// Trashed: r3 r4 r5 r6 r7
// Preserved: r1 r15
fn0002CDCC_entry:
l0002CDCC:
	fn0002F60C()
	return
fn0002CDCC_exit:


void fn0002CE14()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r6 r7
// Preserved: r1 r15
fn0002CE14_entry:
l0002CE14:
	fn0002F63C()
	return
fn0002CE14_exit:


word32 fn0002CFE4(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r3:[0..31]
// LiveOut: r3
// Trashed: r15 r3 r5 r6 r7
// Preserved: r1
fn0002CFE4_entry:
	ptr32 fp
l0002CFE4:
	word32 r3_8
	call 0x0002CFE4<p32> + r3 (retsize: 0;)
		uses: r15:0x0002CFE4<p32>,r3:r3,r6:fp + 0x1C<32>
		defs: r3:r3_8
	fn0002EB28()
	return r3_8
fn0002CFE4_exit:


void fn0002D0AC(word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: C r15 r18 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r19 r21 r22 r23 r24 r25 r26 r27
fn0002D0AC_entry:
l0002D0AC:
	word32 r22_23 = Mem21[r6 + 8<i32>:word32]
	word32 r21_24 = Mem21[r6 + 24<i32>:word32]
	word32 r23_105 = fn0002E908(r22_23 * 0x80<32>, r21_24)
	word32 r19_126 = r6
	word32 r22_132 = r22_23 * 0x80<32>
	word32 r25_108 = r5
	word32 r24_128 = r7
	word32 r3_47 = Mem21[r6 + 16<i32>:word32]
	branch Test(LE,r3_47) l0002D11C_ds_t
l0002D11C_ds_t:
l0002D11C_ds_f:
l0002D120:
	word32 r6_167
	word32 r3_54
	word32 r6_56
	word32 r4_50 = Mem21[r6 + 20<i32>:word32]
	branch r3_47 < r4_50 l0002D244
l0002D244:
	r4_50 = r3_47
	r3_54 = Mem21[r6 + 28<i32>:word32] - r21_24
	branch r3_47 >= r3_54 l0002D13C
l0002D258:
	r6_56 = Mem21[r6 + 4<i32>:word32]
l0002D12C:
	r3_54 = Mem21[r6 + 28<i32>:word32] - r21_24
	branch r4_50 < r3_54 l0002D228
l0002D228:
	r6_56 = Mem21[r6 + 4<i32>:word32]
l0002D22C:
	r6_167 = r6_56 - r21_24
	branch r4_50 >= r6_167 l0002D14C
l0002D23C:
	r6_167 = r4_50
l0002D13C:
	r6_167 = Mem21[r6 + 4<i32>:word32] - r21_24
	branch r3_54 < r6_167 l0002D220
l0002D220:
	r6_167 = r3_54
l0002D14C:
	branch Test(LE,r6_167) l0002D150_ds_t
l0002D150_ds_t:
l0002D150_ds_f:
	word32 r26_113 = r6 + 0x30<32>
l0002D154:
	word32 r21_147 = 0<32>
l0002D158:
	word32 r7_100
	word32 r3_101
	word32 r3_86 = fn0002E908(r22_132, r6_167)
	word32 r3_95 = Mem21[r19_126:word32]
	word32 r4_97 = r21_147 * 2<32>
	branch Test(EQ,r24_128) l0002D174_ds_t
l0002D174_ds_t:
	r7_100 = Mem21[r4_97 * 2<32> + r3_95:word32]
l0002D218:
	r3_101 = Mem21[r19_126 + 48<i32>:word32]
l0002D174_ds_f:
	r7_100 = Mem21[r4_97 * 2<32> + r3_95:word32]
l0002D178:
	r3_101 = Mem21[r19_126 + 52<i32>:word32]
l0002D17C:
	word32 r21_131
	call 0x0002D18C<p32> + r3_101 (retsize: 0;)
		uses: r15:0x0002D18C<p32>,r18:r18_148,r19:r19_93,r21:r21_96,r22:r22_83,r23:r23_105 + r3_86,r24:r24_99,r25:r25_108,r26:r26_113,r27:r3_86,r5:r25_108,r6:r26_113,r7:r7_122,r8:r23_105,r9:r3_86
		defs: r19:r19_126,r21:r21_131,r22:r22_132,r23:r23_127,r24:r24_128,r25:r25_129,r26:r26_133
	word32 r5_145 = Mem21[r19_126 + 20<i32>:word32]
	word32 r4_146 = Mem21[r19_126 + 16<i32>:word32]
	r21_147 = r5_145 + r21_131
	word32 r18_148 = cond(r21_147 - r4_146)
	branch r21_147 >= r4_146 l0002D1A8_ds_t
l0002D1A8_ds_t:
l0002D1A8_ds_f:
	word32 r3_150 = r4_146 - r21_147
l0002D1AC:
	branch r5_145 >= r3_150 l0002D1B8
l0002D1B4:
	r3_150 = r5_145
l0002D1B8:
	word32 r5_158 = r21_147 + Mem21[r19_126 + 24<i32>:word32]
	word32 r4_159 = Mem21[r19_126 + 28<i32>:word32] - r5_158
	branch r3_150 >= r4_159 l0002D1D4
l0002D1D0:
	r4_159 = r3_150
l0002D1D4:
	r6_167 = Mem21[r19_126 + 4<i32>:word32] - r5_158
	branch r4_159 >= r6_167 l0002D1E8
l0002D1E4:
	r6_167 = r4_159
l0002D1E8:
	branch Test(GT,r6_167) l0002D158
l0002D1EC:
l0002D1F0:
	return
fn0002D0AC_exit:


word32 fn0002D260(word32 r0, word32 r5, word32 r6, word32 r7, word32 r21, word32 r24, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002DB20
//      fn0002DC74
// MayUse:  r0:[0..31] r21:[0..31] r24:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r0 r3
// Trashed: C r0 r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30
fn0002D260_entry:
l0002D260:
	word32 r23_103 = r5
	word32 r22_112 = r7
	branch 0xFFFFC9F4<32> -u r7 >= 0<32> l0002D2B0_ds_t
l0002D2B0_ds_t:
	word32 r25_114 = Mem28[r5 + 4<i32>:word32]
l0002D2D4:
	branch Test(EQ,r7 & 7<32>) l0002D2DC_ds_t
l0002D2DC_ds_t:
l0002D2DC_ds_f:
l0002D2E0:
	r22_112 = r7 + 8<32> - (r7 & 7<32>)
l0002D2E4:
	branch 1<32> -u r6 >= 0<32> l0002D2F0_ds_t
l0002D2F0_ds_t:
l0002D30C:
	word32 r3_121
	word32 r5_189
	word32 r6_188
	word32 r4_162
	word32 r27_100
	word32 r26_115 = r25_114 + r6 * 4<32>
	word32 r21_113 = Mem28[r26_115 + 52<i32>:word32]
	branch Test(EQ,r21_113) l0002D320_ds_t
l0002D320_ds_t:
	r27_100 = r22_112 + 0xC<32>
l0002D460:
	r3_121 = Mem28[r6 * 4<32> + 0xFFFF8E3C<32>:word32]
l0002D320_ds_f:
l0002D324:
	r4_162 = Mem28[r21_113 + 8<i32>:word32]
	branch r4_162 -u r22_112 < 0<32> l0002D348
l0002D348:
	r3_121 = Mem28[r21_113:word32]
	branch Test(NE,r3_121) l0002D350_ds_t
l0002D350_ds_t:
l0002D338:
	r4_162 = Mem28[r3_121 + 8<i32>:word32]
	branch r4_162 -u r22_112 >= 0<32> l0002D344_ds_t
l0002D344_ds_t:
l0002D448:
	word32 r5_66 = Mem28[r3_121 + 4<i32>:word32]
	r6_188 = r22_112 + r5_66
	r5_189 = r5_66 + 0xC<32>
l0002D344_ds_f:
	r21_113 = r3_121
l0002D350_ds_f:
	r27_100 = r22_112 + 0xC<32>
l0002D354:
	r3_121 = Mem28[r6 * 4<32> + 0xFFFF8E34<32>:word32]
l0002D364:
	word32 r19_122 = 0xFFFFCA00<32> - r27_100
	branch r3_121 -u r19_122 < 0<32> l0002D458
l0002D458:
	r19_122 = r3_121
l0002D378:
	word32 r28_131 = 0x31<32>
	word32 r30_107 = 0x36<32>
	word32 r29_110 = 2<32>
l0002D384:
	word32 r24_127 = r27_100 + r19_122
	fn0002E71C()
	word32 r6_118 = r24_127
	branch Test(NE,r3_121) l0002D398_ds_t
l0002D398_ds_t:
l0002D398_ds_f:
	word32 r5_116 = r23_103
l0002D39C:
	r19_122 = r19_122 >>u 1<i32>
	branch r28_131 -u r19_122 < 0<32> l0002D3A8_ds_t
l0002D3A8_ds_t:
l0002D3A8_ds_f:
	word32 r24_102 = r27_100 + r19_122
l0002D3AC:
	word32 r3_105 = Mem104[r23_103:word32]
	word32 r4_106 = Mem104[r3_105:word32]
	Mem108[r3_105 + 20<i32>:word32] = r30_107
	Mem111[r3_105 + 24<i32>:word32] = r29_110
	call 0x0002D3B8<p32> + r4_106 (retsize: 0;)
		uses: r0:r0_139,r15:0x0002D3B8<p32>,r19:r19_96,r21:r21_113,r22:r22_112,r23:r23_103,r24:r24_102,r25:r25_114,r26:r26_115,r27:r27_100,r28:r28_98,r29:r29_110,r3:r3_105,r30:r30_107,r4:r4_106,r5:r5_116,r6:r6_118,r7:r7_117
		defs: r0:r0_139,r19:r19_122,r21:r21_126,r22:r22_123,r23:r23_124,r24:r24_127,r25:r25_128,r26:r26_129,r27:r27_130,r28:r28_131,r29:r29_132,r3:r3_121,r30:r30_133,r7:r7_135
	fn0002E71C()
	r6_118 = r24_127
	branch Test(EQ,r3_121) l0002D3D0_ds_t
l0002D3D0_ds_t:
	r5_116 = r23_103
l0002D3D0_ds_f:
l0002D3D4:
	Mem165[r25_114 + 76<i32>:word32] = Mem152[r25_114 + 76<i32>:word32] + r24_127
	Mem175[r3_121:word32] = r0
	Mem176[r3_121 + 4<i32>:word32] = r0
	r4_162 = r22_112 + r19_122
	branch Test(EQ,r21_113) l0002D3F0_ds_t
l0002D3F0_ds_t:
	Mem181[r3_121 + 8<i32>:word32] = r4_162
l0002D470:
	Mem187[r26_115 + 52<i32>:word32] = r3_121
	r6_188 = r22_112
	r5_189 = 0xC<32>
l0002D3F0_ds_f:
	Mem190[r3_121 + 8<i32>:word32] = r4_162
l0002D3F4:
	Mem192[r21_113:word32] = r3_121
	r6_188 = r22_112
	r5_189 = 0xC<32>
l0002D330:
	word32 r5_194 = Mem28[r21_113 + 4<i32>:word32]
l0002D480:
	r3_121 = r21_113
	r6_188 = r22_112 + r5_194
	r5_189 = r5_194 + 0xC<32>
l0002D400:
	Mem203[r3_121 + 4<i32>:word32] = r6_188
	Mem204[r3_121 + 8<i32>:word32] = r4_162 - r22_112
	r3Out = r3_121 + r5_189
	return r0
fn0002D260_exit:
l0002D2F0_ds_f:
l0002D2F4:
	word32 r3_229 = Mem28[r5:word32]
	Mem231[r3_229 + 20<i32>:word32] = 0xE<32>
	word32 r4_232 = Mem231[r3_229:word32]
	Mem234[r3_229 + 24<i32>:word32] = r6
	call 0x0002D304<p32> + r4_232 (retsize: 0;)
		uses: r0:r0,r15:0x0002D304<p32>,r19:r6,r21:r21,r22:r22_51,r23:r5,r24:r24,r25:r25_36,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_229,r30:r30,r4:r4_232,r5:r5,r6:r6,r7:r7
l0002D2B0_ds_f:
	word32 r25_265 = Mem28[r5 + 4<i32>:word32]
l0002D2B4:
	word32 r3_266 = Mem28[r5:word32]
	Mem268[r3_266 + 20<i32>:word32] = 0x36<32>
	Mem270[r3_266 + 24<i32>:word32] = 1<32>
	word32 r3_271 = Mem270[r3_266:word32]
	call 0x0002D2CC<p32> + r3_271 (retsize: 0;)
		uses: r0:r0,r15:0x0002D2CC<p32>,r19:r6,r21:r21,r22:r7,r23:r5,r24:r24,r25:r25_265,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_271,r30:r30,r4:1<32>,r5:r5,r6:r6,r7:r7


void fn0002D5F8(word32 r0, word32 r5, word32 r6, word32 r19, word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r18 r3
// Preserved: r0 r1 r15 r19 r21 r22 r23 r24 r4 r5 r6 r7
fn0002D5F8_entry:
l0002D5F8:
	word32 r22_111
	word32 r24_107 = r6
	branch 1<32> -u r6 >= 0<32> l0002D628_ds_t
l0002D628_ds_t:
	r22_111 = Mem15[r5 + 4<i32>:word32]
l0002D6F0:
	branch Test(NE,r6 ^ 1<32>) l0002D644
l0002D6F8:
	word32 r19_24 = Mem15[r22_111 + 68<i32>:word32]
	branch Test(EQ,r19_24) l0002D724
l0002D700:
	branch Test(EQ,Mem15[r19_24 + 40<i32>:word32]) l0002D70C_ds_t
l0002D70C_ds_t:
l0002D71C:
	r19_24 = Mem15[r19_24 + 44<i32>:word32]
	branch Test(NE,r19_24) l0002D700
l0002D724:
	word32 r19_35 = Mem15[r22_111 + 72<i32>:word32]
	branch Test(EQ,r19_35) l0002D72C_ds_t
l0002D72C_ds_t:
	Mem39[r22_111 + 68<i32>:word32] = r0
l0002D72C_ds_f:
	Mem40[r22_111 + 68<i32>:word32] = r0
l0002D730:
	branch Test(EQ,Mem40[r19_35 + 40<i32>:word32]) l0002D73C_ds_t
l0002D73C_ds_t:
l0002D74C:
	r19_35 = Mem40[r19_35 + 44<i32>:word32]
	branch Test(NE,r19_35) l0002D730
l0002D754:
	Mem52[r22_111 + 72<i32>:word32] = r0
l0002D73C_ds_f:
	word32 r6_53 = r19_35 + 0x30<32>
l0002D740:
	word32 r3_54 = Mem40[r19_35 + 56<i32>:word32]
	Mem56[r19_35 + 40<i32>:word32] = r0
	word32 r4_77
	word32 r7_79
	call 0x0002D744<p32> + r3_54 (retsize: 0;)
		uses: r0:r0,r15:0x0002D744<p32>,r19:r19_41,r21:r21,r22:r22_22,r23:r5,r24:r6,r3:r3_54,r4:r4_77,r5:r5,r6:r6_53,r7:r7_79
		defs: r4:r4_77,r7:r7_79
l0002D70C_ds_f:
	word32 r6_80 = r19_24 + 0x30<32>
l0002D710:
	word32 r3_81 = Mem15[r19_24 + 56<i32>:word32]
	Mem83[r19_24 + 40<i32>:word32] = r0
	word32 r4_95
	word32 r7_97
	call 0x0002D714<p32> + r3_81 (retsize: 0;)
		uses: r0:r0,r15:0x0002D714<p32>,r19:r19_25,r21:r21,r22:r22_22,r23:r5,r24:r6,r3:r3_81,r4:r4_95,r5:r5,r6:r6_80,r7:r7_97
		defs: r4:r4_95,r7:r7_97
l0002D628_ds_f:
	word32 r22_98 = Mem15[r5 + 4<i32>:word32]
l0002D62C:
	word32 r3_99 = Mem15[r5:word32]
	Mem101[r3_99 + 20<i32>:word32] = 0xE<32>
	word32 r4_102 = Mem101[r3_99:word32]
	Mem104[r3_99 + 24<i32>:word32] = r6
	word32 r7_118
	call 0x0002D63C<p32> + r4_102 (retsize: 0;)
		uses: r0:r0,r15:0x0002D63C<p32>,r19:r19,r21:r21,r22:r22_98,r23:r5,r24:r6,r3:r3_99,r4:r4_102,r5:r5,r6:r6,r7:r7_118
		defs: r0:r0_117,r22:r22_111,r24:r24_107,r7:r7_118
l0002D644:
	word32 r24_124 = r22_111 + r24_107 * 4<32>
	word32 r19_126 = Mem125[r24_124 + 60<i32>:word32]
	branch Test(EQ,r19_126) l0002D658_ds_t
l0002D658_ds_t:
	Mem128[r24_124 + 60<i32>:word32] = r0
l0002D658_ds_f:
	Mem129[r24_124 + 60<i32>:word32] = r0
l0002D65C:
	word32 r21_137 = Mem131[r19_126 + 4<i32>:word32] + Mem131[r19_126 + 8<i32>:word32]
	r19_126 = Mem131[r19_126:word32]
	fn0002E770()
	word32 r21_145 = Mem131[r22_111 + 76<i32>:word32] - (r21_137 + 0xC<32>)
	branch Test(NE,r19_126) l0002D68C_ds_t
l0002D68C_ds_t:
	Mem146[r22_111 + 76<i32>:word32] = r21_145
l0002D68C_ds_f:
	Mem147[r22_111 + 76<i32>:word32] = r21_145
l0002D690:
	word32 r19_151 = Mem150[r24_124 + 52<i32>:word32]
	branch Test(EQ,r19_151) l0002D698_ds_t
l0002D698_ds_t:
	Mem154[r24_124 + 52<i32>:word32] = r0
l0002D698_ds_f:
	Mem155[r24_124 + 52<i32>:word32] = r0
l0002D69C:
	word32 r21_163 = Mem157[r19_151 + 4<i32>:word32] + Mem157[r19_151 + 8<i32>:word32]
	r19_151 = Mem157[r19_151:word32]
	fn0002E738()
	word32 r21_171 = Mem157[r22_111 + 76<i32>:word32] - (r21_163 + 0xC<32>)
	branch Test(NE,r19_151) l0002D6CC_ds_t
l0002D6CC_ds_t:
	Mem172[r22_111 + 76<i32>:word32] = r21_171
l0002D6CC_ds_f:
	Mem173[r22_111 + 76<i32>:word32] = r21_171
l0002D6D0:
	return
fn0002D5F8_exit:


word32 fn0002DA08(word32 r0, word32 r5, word32 r6, word32 r7, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002DB20
//      fn0002DC74
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r0 r3
// Trashed: r0 r18 r3 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23
fn0002DA08_entry:
l0002DA08:
	word32 r21_18 = r7
	word32 r19_20 = r6
	branch 0xFFFFC9F4<32> -u r7 >= 0<32> l0002DA3C_ds_t
l0002DA3C_ds_t:
	word32 r22_22 = Mem14[r5 + 4<i32>:word32]
l0002DA60:
	branch Test(EQ,r7 & 7<32>) l0002DA70
l0002DA68:
	r21_18 = r7 + 8<32> - (r7 & 7<32>)
l0002DA70:
	word32 r3_26 = 1<32>
	branch 1<32> -u r6 >= 0<32> l0002DA7C_ds_t
l0002DA7C_ds_t:
l0002DA98:
	fn0002E754()
	branch Test(NE,1<32>) l0002DAA8_ds_t
l0002DAA8_ds_t:
l0002DAA8_ds_f:
l0002DAAC:
	word32 r4_39 = Mem14[r5:word32]
	Mem41[r4_39 + 20<i32>:word32] = 0x36<32>
	Mem43[r4_39 + 24<i32>:word32] = 4<32>
	word32 r4_44 = Mem43[r4_39:word32]
	word32 r1_50
	call 0x0002DAC4<p32> + r4_44 (retsize: 0;)
		uses: r0:r0_62,r15:0x0002DAC4<p32>,r19:r6,r21:r21_33,r22:r22_22,r23:r5,r4:r4_44,r5:r5,r6:4<32>,r7:r7,Stack +001C:1<32>
		defs: r0:r0_62,r1:r1_50,r19:r19_52,r21:r21_53,r22:r22_56
	r3_26 = Mem47[r1_50 + 28<i32>:word32]
l0002DAD0:
	Mem73[r22_22 + 76<i32>:word32] = Mem65[r22_22 + 76<i32>:word32] + 0xC<32> + r21_18
	word32 r19_74 = r22_22 + r19_20 * 4<32>
	word32 r4_75 = Mem73[r19_74 + 60<i32>:word32]
	Mem77[r3_26 + 4<i32>:word32] = r21_18
	Mem81[r3_26 + 8<i32>:word32] = r0
	Mem82[r3_26:word32] = r4_75
	Mem83[r19_74 + 60<i32>:word32] = r3_26
	r3Out = r3_26 + 0xC<32>
	return r0
fn0002DA08_exit:
l0002DA7C_ds_f:
l0002DA80:
	word32 r3_93 = Mem14[r5:word32]
	Mem95[r3_93 + 20<i32>:word32] = 0xE<32>
	word32 r4_96 = Mem95[r3_93:word32]
	Mem98[r3_93 + 24<i32>:word32] = r6
	call 0x0002DA90<p32> + r4_96 (retsize: 0;)
		uses: r0:r0,r15:0x0002DA90<p32>,r19:r6,r21:r21_33,r22:r22_22,r23:r5,r3:r3_93,r4:r4_96,r5:r5,r6:r6,r7:r7
l0002DA3C_ds_f:
	word32 r22_113 = Mem14[r5 + 4<i32>:word32]
l0002DA40:
	word32 r3_114 = Mem14[r5:word32]
	Mem117[r3_114 + 20<i32>:word32] = 0x36<32>
	Mem118[r3_114 + 24<i32>:word32] = 3<32>
	word32 r3_119 = Mem118[r3_114:word32]
	call 0x0002DA58<p32> + r3_119 (retsize: 0;)
		uses: r0:r0,r15:0x0002DA58<p32>,r19:r6,r21:r7,r22:r22_113,r23:r5,r3:r3_119,r4:0x36<32>,r5:r5,r6:3<32>,r7:r7


void fn0002DB20(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r0 r18 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26
fn0002DB20_entry:
l0002DB20:
	word32 r3_37 = fn0002E960(0xFFFFC9F4<32>, r7 * 0x80<32>)
	word32 r19_41 = Mem33[r5 + 4<i32>:word32]
	branch Test(NE,r3_37) l0002DB88_ds_t
l0002DB88_ds_t:
	word32 r25_116 = r3_37
l0002DBA4:
	branch r3_37 < r8 l0002DBAC_ds_t
l0002DBAC_ds_t:
l0002DBAC_ds_f:
l0002DBB0:
	r25_116 = r8
l0002DBB4:
	Mem55[r19_41 + 80<i32>:word32] = r25_116
	word32 r3_70
	word32 r0_108 = fn0002D260(r0, r5, r6, r8 * 4<32>, r7 * 0x80<32>, r8, r26, r27, r28, r29, r30, out r3_70)
	branch Test(EQ,r8) l0002DBD0_ds_t
l0002DBD0_ds_t:
l0002DBD0_ds_f:
l0002DBD4:
	word32 r19_118 = 0<32>
	word32 r3_144 = r8
l0002DBDC:
	word32 r6_84
	branch r3_144 -u r25_116 >= 0<32> l0002DBE4_ds_t
l0002DBE4_ds_t:
	r6_84 = r25_116
l0002DBE4_ds_f:
l0002DBE8:
	r25_116 = r3_144
	r6_84 = r3_144
l0002DBF0:
	word32 r3_110
	r0_108 = fn0002DA08(r0_108, r5, r6, fn0002E908(r7 * 0x80<32>, r6_84), out r3_110)
	branch Test(EQ,r25_116) l0002DC3C
l0002DC0C:
	r19_118 = r19_118 + r25_116
	word32 r4_126 = r3_70 + r19_118 * 4<32>
	word32 r6_127 = r3_70 + r19_118 * 4<32>
l0002DC28:
	Mem130[r4_126:word32] = r3_110
	r4_126 = r4_126 + 4<32>
	branch Test(NE,r4_126 ^ r6_127) l0002DC38_ds_t
l0002DC38_ds_t:
	r3_110 = r3_110 + r7 * 0x80<32>
l0002DC38_ds_f:
l0002DC3C:
	branch r19_118 -u r8 < 0<32> l0002DC44_ds_t
l0002DC44_ds_t:
	r3_144 = r8 - r19_118
l0002DC44_ds_f:
l0002DC48:
	return
fn0002DB20_exit:
l0002DB88_ds_f:
l0002DB8C:
	word32 r3_170 = Mem33[r5:word32]
	Mem172[r3_170 + 20<i32>:word32] = 0x46<32>
	word32 r3_173 = Mem172[r3_170:word32]
	call 0x0002DB9C<p32> + r3_173 (retsize: 0;)
		uses: r0:r0,r15:0x0002DB9C<p32>,r19:r19_41,r21:r7 * 0x80<32>,r22:r5,r23:r6,r24:r8,r25:r3_37,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_173,r30:r30,r4:0x46<32>,r5:r5,r6:r7 * 0x80<32>,r7:r7,r8:r8


void fn0002DC74(word32 r0, word32 r5, word32 r6, word32 r7, word32 r8, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut:
// Trashed: C r0 r18 r4 r5 r6 r7
// Preserved: r1 r15 r19 r21 r22 r23 r24 r25 r26
fn0002DC74_entry:
l0002DC74:
	word32 r3_31 = fn0002E960(0xFFFFC9F4<32>, r7)
	word32 r19_35 = Mem26[r5 + 4<i32>:word32]
	branch Test(NE,r3_31) l0002DCC0_ds_t
l0002DCC0_ds_t:
	word32 r25_110 = r3_31
l0002DCDC:
	branch r3_31 < r8 l0002DCE4_ds_t
l0002DCE4_ds_t:
l0002DCE4_ds_f:
l0002DCE8:
	r25_110 = r8
l0002DCEC:
	Mem49[r19_35 + 80<i32>:word32] = r25_110
	word32 r3_64
	word32 r0_102 = fn0002D260(r0, r5, r6, r8 * 4<32>, r7, r8, r26, r27, r28, r29, r30, out r3_64)
	branch Test(EQ,r8) l0002DD08_ds_t
l0002DD08_ds_t:
l0002DD08_ds_f:
l0002DD0C:
	word32 r19_112 = 0<32>
	word32 r3_138 = r8
l0002DD14:
	word32 r6_78
	branch r3_138 -u r25_110 >= 0<32> l0002DD1C_ds_t
l0002DD1C_ds_t:
	r6_78 = r25_110
l0002DD1C_ds_f:
l0002DD20:
	r25_110 = r3_138
	r6_78 = r3_138
l0002DD28:
	word32 r3_104
	r0_102 = fn0002DA08(r0_102, r5, r6, fn0002E908(r7, r6_78), out r3_104)
	branch Test(EQ,r25_110) l0002DD74
l0002DD44:
	r19_112 = r19_112 + r25_110
	word32 r4_120 = r3_64 + r19_112 * 4<32>
	word32 r6_121 = r3_64 + r19_112 * 4<32>
l0002DD60:
	Mem124[r4_120:word32] = r3_104
	r4_120 = r4_120 + 4<32>
	branch Test(NE,r4_120 ^ r6_121) l0002DD70_ds_t
l0002DD70_ds_t:
	r3_104 = r3_104 + r7
l0002DD70_ds_f:
l0002DD74:
	branch r19_112 -u r8 < 0<32> l0002DD7C_ds_t
l0002DD7C_ds_t:
	r3_138 = r8 - r19_112
l0002DD7C_ds_f:
l0002DD80:
	return
fn0002DC74_exit:
l0002DCC0_ds_f:
l0002DCC4:
	word32 r3_164 = Mem26[r5:word32]
	Mem166[r3_164 + 20<i32>:word32] = 0x46<32>
	word32 r3_167 = Mem166[r3_164:word32]
	call 0x0002DCD4<p32> + r3_167 (retsize: 0;)
		uses: r0:r0,r15:0x0002DCD4<p32>,r19:r19_35,r21:r7,r22:r5,r23:r6,r24:r8,r25:r3_31,r26:r26,r27:r27,r28:r28,r29:r29,r3:r3_167,r30:r30,r4:0x46<32>,r5:r5,r6:r7,r7:r7,r8:r8


void fn0002E530(word32 r0, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r0 r3 r4 r5 r6 r7 r8
// Preserved: r1 r15 r19 r21
fn0002E530_entry:
l0002E530:
	word32 r19_33
	Mem14[r5 + 4<i32>:word32] = r0
	word32 r3_15 = fn0002E7C0()
	fn0002E71C()
	word32 r21_11 = r5
	branch Test(EQ,r3_15) l0002E560_ds_t
l0002E560_ds_t:
l0002E6F4:
	fn0002E7C8()
	word32 r3_24 = Mem19[r5:word32]
	Mem27[r3_24 + 20<i32>:word32] = 0x36<32>
	word32 r4_28 = Mem27[r3_24:word32]
	Mem30[r3_24 + 24<i32>:word32] = r3_15
	word32 r8_40
	word32 r7_41
	call 0x0002E710<p32> + r4_28 (retsize: 0;)
		uses: r0:r0,r15:0x0002E710<p32>,r19:r3_15,r21:r5,r3:r3_24,r4:r4_28,r5:r5,r7:r7_41,r8:r8_40
		defs: r0:r0_36,r19:r19_33,r21:r21_34,r7:r7_41,r8:r8_40
l0002E560_ds_f:
	r19_33 = r3_15
l0002E564:
	Mem47[r19_33:word32] = 0x38E0<32>
	Mem49[r19_33 + 4<i32>:word32] = 0x4088<32>
	Mem51[r19_33 + 8<i32>:word32] = 0x42F4<32>
	Mem53[r19_33 + 12<i32>:word32] = 0x41A0<32>
	Mem55[r19_33 + 16<i32>:word32] = 0x3BC4<32>
	Mem57[r19_33 + 20<i32>:word32] = 0x3B10<32>
	Mem59[r19_33 + 24<i32>:word32] = 0x442C<32>
	Mem61[r19_33 + 28<i32>:word32] = 0x474C<32>
	Mem63[r19_33 + 32<i32>:word32] = 0x3E2C<32>
	Mem65[r19_33 + 36<i32>:word32] = 0x3C78<32>
	Mem67[r19_33 + 40<i32>:word32] = 0x3DDC<32>
	Mem70[r19_33 + 48<i32>:word32] = 0xFFFFCA00<32>
	Mem72[r19_33 + 44<i32>:word32] = r3_15
	Mem73[r19_33 + 76<i32>:word32] = 0x54<32>
	Mem75[r19_33 + 56<i32>:word32] = r0
	Mem76[r19_33 + 64<i32>:word32] = r0
	Mem77[r19_33 + 52<i32>:word32] = r0
	Mem78[r19_33 + 60<i32>:word32] = r0
	Mem79[r19_33 + 68<i32>:word32] = r0
	Mem80[r19_33 + 72<i32>:word32] = r0
	Mem83[r21_11 + 4<i32>:word32] = r19_33
	fn0002F448()
	branch Test(EQ,r3_15) l0002E630_ds_t
l0002E630_ds_t:
l0002E630_ds_f:
l0002E634:
	fn0002EE08()
	branch Test(LE,0x78<32>) l0002E654_ds_t
l0002E654_ds_t:
l0002E654_ds_f:
l0002E658:
	word32 r3_115
	branch Test(NE,0x15<32>) l0002E6A0_ds_t
l0002E6A0_ds_t:
	r3_115 = r3_15 * 0x3E8<32>
l0002E6A0_ds_f:
l0002E6A4:
	r3_115 = r3_15 * 0xF4240<32>
l0002E6DC:
	Mem133[r19_33 + 44<i32>:word32] = r3_115
l0002E6E0:
	return
fn0002E530_exit:


void fn0002E71C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002D260
//      fn0002E530
// MayUse: 
// LiveOut:
// Trashed: r5
// Preserved: r1 r15
fn0002E71C_entry:
l0002E71C:
	fn0002F2F0()
	return
fn0002E71C_exit:


void fn0002E738()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002D5F8
// MayUse: 
// LiveOut:
// Trashed: r5
// Preserved: r1 r15
fn0002E738_entry:
l0002E738:
	fn0002F2C8()
	return
fn0002E738_exit:


void fn0002E754()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002DA08
// MayUse: 
// LiveOut:
// Trashed: r5
// Preserved: r1 r15
fn0002E754_entry:
l0002E754:
	fn0002F2F0()
	return
fn0002E754_exit:


void fn0002E770()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002D5F8
// MayUse: 
// LiveOut:
// Trashed: r5
// Preserved: r1 r15
fn0002E770_entry:
l0002E770:
	fn0002F2C8()
	return
fn0002E770_exit:


void fn0002E78C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r3
// Preserved: r1
fn0002E78C_entry:
l0002E78C:
	return
fn0002E78C_exit:


void fn0002E794(word32 r5, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r3 r4 r5
// Preserved: r1 r15
fn0002E794_entry:
l0002E794:
	word32 r3_5 = Mem0[r5:word32]
	Mem10[r3_5 + 20<i32>:word32] = 0x31<32>
	word32 r3_11 = Mem10[r3_5:word32]
	call 0x0002E7AC<p32> + r3_11 (retsize: 0;)
		uses: r15:0x0002E7AC<p32>,r3:r3_11,r4:0x31<32>,r5:r5,Stack +0000:r15
	return
fn0002E794_exit:


word32 fn0002E7C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002E530
// MayUse: 
// LiveOut: r3
// Trashed: r3
// Preserved: r1
fn0002E7C0_entry:
l0002E7C0:
	return 0<32>
fn0002E7C0_exit:


void fn0002E7C8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002E530
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1
fn0002E7C8_entry:
l0002E7C8:
	return
fn0002E7C8_exit:


word32 fn0002E7D0(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001E004
//      fn0002CCF0
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: C r3 r5
// Preserved: r1 r28 r29 r30 r31 r6
fn0002E7D0_entry:
l0002E7D0:
	word32 r3_116
	branch Test(EQ,r6) l0002E850
l0002E7E8:
	branch Test(EQ,r5) l0002E850
l0002E850:
	r3_116 = 0<32>
l0002E7EC:
	word32 r28_15
	branch Test(GE,r5) l0002E7F0_ds_t
l0002E7F0_ds_t:
	r28_15 = r5 ^ r6
l0002E7F0_ds_f:
	r28_15 = r5 ^ r6
l0002E7F4:
	r5 = -r5
l0002E7F8:
	branch Test(GE,r6) l0002E800
l0002E7FC:
	r6 = -r6
l0002E800:
	word32 r30_20 = 0<32>
	r3_116 = 0<32>
	word32 r29_22 = 0x1F<32>
	branch Test(LT,r5) l0002E81C
l0002E810:
	r5 = r5 * 2<32>
	branch Test(GT,r5) l0002E818_ds_t
l0002E818_ds_t:
	r29_22 = r29_22 + 0xFFFFFFFF<32>
l0002E818_ds_f:
	r29_22 = r29_22 + 0<32>
l0002E81C:
	r5 = r5 * 2<32>
	r30_20 = r30_20 * 2<32> + CONVERT(r5 <u 0<32>, bool, word32)
	word32 r31_37 = r30_20 - r6
	branch Test(LT,r31_37) l0002E834
l0002E82C:
	r30_20 = r31_37
	r3_116 = r3_116 + 1<32>
l0002E834:
	r29_22 = r29_22 + 0xFFFFFFFF<32>
	branch Test(EQ,r29_22) l0002E844
l0002E844:
	branch Test(GE,r28_15) l0002E854
l0002E848:
	r3_116 = -r3_116
l0002E854:
	return r3_116
fn0002E7D0_exit:
l0002E83C:
	r3_116 = r3_116 * 2<32>


word32 fn0002E86C(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002CD10
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: C r3 r5
// Preserved: r1 r28 r29 r30 r31 r6
fn0002E86C_entry:
l0002E86C:
	word32 r3_117
	branch Test(EQ,r6) l0002E8EC
l0002E884:
	branch Test(EQ,r5) l0002E8EC
l0002E8EC:
	r3_117 = 0<32>
l0002E888:
	word32 r5_17
	branch Test(GE,r5) l0002E88C_ds_t
l0002E88C_ds_t:
	r5_17 = r5
l0002E88C_ds_f:
l0002E890:
	r5_17 = -r5
l0002E894:
	branch Test(GE,r6) l0002E89C
l0002E898:
	r6 = -r6
l0002E89C:
	word32 r29_24
	r3_117 = 0<32>
	branch Test(LT,r5_17) l0002E8A8_ds_t
l0002E8A8_ds_t:
	r29_24 = 0x20<32>
l0002E8A8_ds_f:
	word32 r29_25 = 0x1F<32>
l0002E8AC:
	r5_17 = r5_17 * 2<32>
	branch Test(GE,r5_17) l0002E8B4_ds_t
l0002E8B4_ds_t:
	r29_25 = r29_25 + 0xFFFFFFFF<32>
l0002E8B4_ds_f:
	r29_24 = r29_25 + 0<32>
l0002E8B8:
	r5_17 = r5_17 * 2<32>
	r3_117 = r3_117 * 2<32> + CONVERT(r5_17 <u 0<32>, bool, word32)
	word32 r31_38 = r3_117 - r6
	branch Test(LT,r31_38) l0002E8D0
l0002E8C8:
	r3_117 = r31_38
l0002E8D0:
	r29_24 = r29_24 + 0xFFFFFFFF<32>
	branch Test(EQ,r29_24) l0002E8E0
l0002E8E0:
	branch Test(GE,r5) l0002E8F0
l0002E8E4:
	r3_117 = -r3_117
l0002E8F0:
	return r3_117
fn0002E86C_exit:
l0002E8D8:


word32 fn0002E908(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001CC00
//      fn0001CC98
//      fn0001CCF0
//      fn0001E004
//      fn00026E10
//      fn0002D0AC
//      fn0002DB20
//      fn0002DC74
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: C r3 r4 r5 r6 r7
// Preserved: r1
fn0002E908_entry:
l0002E908:
	word32 r3_16 = 0<32>
	branch Test(EQ,r5) l0002E958
l0002E910:
	branch Test(EQ,r6) l0002E958
l0002E958:
	return 0<32>
l0002E914:
	word32 r4_27
	branch Test(GE,r5) l0002E918_ds_t
l0002E918_ds_t:
	r4_27 = r5 ^ r6
l0002E918_ds_f:
	r4_27 = r5 ^ r6
l0002E91C:
	r5 = -r5
l0002E920:
	branch Test(GE,r6) l0002E928
l0002E924:
	r6 = -r6
l0002E928:
l0002E930:
	r6 = r6 >>u 1<i32>
	branch r6 == 0<32> l0002E92C
l0002E93C:
	branch Test(NE,r6) l0002E940_ds_t
l0002E940_ds_t:
	r3_16 = r3_16 + r5
l0002E92C:
	r5 = r5 * 2<32>
l0002E940_ds_f:
	word32 r3_23 = r3_16 + r5
l0002E944:
	branch Test(LT,r4_27) l0002E950
l0002E950:
	return -r3_23
l0002E948:
	return r3_23
fn0002E908_exit:


word32 fn0002E960(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001CC5C
//      fn0002DB20
//      fn0002DC74
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: C r18 r3 r5
// Preserved: r1 r29 r30 r31
fn0002E960_entry:
l0002E960:
	word32 r3_109
	branch Test(EQ,r6) l0002E9F0
l0002E974:
	branch Test(EQ,r5) l0002E978_ds_t
l0002E978_ds_t:
l0002E9F0:
	r3_109 = 0<32>
l0002E978_ds_f:
	word32 r30_14 = 0<32>
l0002E97C:
	word32 r29_15 = 0x1F<32>
	branch Test(EQ,r6 - r5) l0002E988_ds_t
l0002E988_ds_t:
	r3_109 = 1<32>
l0002E988_ds_f:
l0002E98C:
	branch Test(GE,r5 ^ r6) l0002E994_ds_t
l0002E994_ds_t:
	r3_109 = 0<32>
l0002E9A0:
	branch Test(LT,r5 - r6) l0002E9F4
l0002E994_ds_f:
	r3_109 = 0<32>
l0002E998:
	branch Test(LT,r6) l0002E9F4
l0002E99C:
l0002E9A8:
	r3_109 = 0<32>
	branch Test(GT,r6) l0002E9B4
l0002E9B4:
	branch Test(LT,r5) l0002E9C4
l0002E9B8:
	r5 = r5 * 2<32>
	branch Test(GT,r5) l0002E9C0_ds_t
l0002E9C0_ds_t:
	r29_15 = r29_15 + 0xFFFFFFFF<32>
l0002E9C0_ds_f:
	r29_15 = r29_15 + 0<32>
l0002E9C4:
	r5 = r5 * 2<32>
	r30_14 = r30_14 * 2<32> + CONVERT(r5 <u 0<32>, bool, word32)
	word32 r31_39 = r30_14 - r6
	branch Test(LT,r31_39) l0002E9DC
l0002E9D4:
	r30_14 = r31_39
	r3_109 = r3_109 + 1<32>
l0002E9DC:
	r29_15 = r29_15 + 0xFFFFFFFF<32>
	branch Test(EQ,r29_15) l0002E9EC
l0002E9EC:
l0002E9E4:
	r3_109 = r3_109 * 2<32>
l0002E9AC:
	r3_109 = 1<32>
l0002E9F4:
	return r3_109
fn0002E960_exit:


void fn0002EA08(word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: C r18 r3 r5
// Preserved: r1 r29 r30 r31 r6
fn0002EA08_entry:
l0002EA08:
	branch Test(EQ,r6) l0002EAAC
l0002EA1C:
	branch Test(EQ,r5) l0002EA20_ds_t
l0002EA20_ds_t:
l0002EAAC:
l0002EA20_ds_f:
l0002EA24:
	word32 r29_16 = 0x1F<32>
	branch Test(EQ,r6 - r5) l0002EAB0
l0002EA34:
	branch Test(GE,r5 ^ r6) l0002EA3C_ds_t
l0002EA3C_ds_t:
l0002EA48:
	branch Test(GT,r6 - r5) l0002EAB0
l0002EA3C_ds_f:
l0002EA40:
	branch Test(LT,r6) l0002EAB0
l0002EA44:
l0002EA50:
	branch Test(GT,r6) l0002EA54_ds_t
l0002EA54_ds_t:
	word32 r3_25 = 0<32>
l0002EA70:
	branch Test(LT,r5) l0002EA80
l0002EA74:
	r5 = r5 * 2<32>
	branch Test(GE,r5) l0002EA7C_ds_t
l0002EA7C_ds_t:
	r29_16 = r29_16 + 0xFFFFFFFF<32>
l0002EA7C_ds_f:
	r29_16 = r29_16 + 0<32>
l0002EA80:
	r5 = r5 * 2<32>
	r3_25 = r3_25 * 2<32> + CONVERT(r5 <u 0<32>, bool, word32)
	word32 r31_39 = r3_25 - r6
	branch Test(LT,r31_39) l0002EA98
l0002EA90:
	r3_25 = r31_39
l0002EA98:
	r29_16 = r29_16 + 0xFFFFFFFF<32>
	branch Test(EQ,r29_16) l0002EAA8
l0002EAA8:
l0002EAA0:
l0002EA54_ds_f:
l0002EA58:
l0002EAB0:
	return
fn0002EA08_exit:


word32 fn0002EAD0(word32 r19)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse:  r19:[0..31]
// LiveOut: r19
// Trashed: r1 r19
// Preserved:
fn0002EAD0_entry:
l0002EAD0:
	return Mem0[r19 + 4<i32>:word32]
fn0002EAD0_exit:


void fn0002EB28()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
//      fn0001AAB0
//      fn0002CFE4
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002EB28_entry:
l0002EB28:
	return
fn0002EB28_exit:


void fn0002EB68()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002EB68_entry:
l0002EB68:
	return
fn0002EB68_exit:


void fn0002EE08()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
//      fn0002E530
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002EE08_entry:
l0002EE08:
	return
fn0002EE08_exit:


void fn0002EF2C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001A7E4
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002EF2C_entry:
l0002EF2C:
	return
fn0002EF2C_exit:


void fn0002EF80()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001A610
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002EF80_entry:
l0002EF80:
	return
fn0002EF80_exit:


void fn0002F048()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F048_entry:
l0002F048:
	return
fn0002F048_exit:


void fn0002F074()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002FFD0
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F074_entry:
l0002F074:
	return
fn0002F074_exit:


void fn0002F0A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001AAB0
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F0A0_entry:
l0002F0A0:
	return
fn0002F0A0_exit:


void fn0002F0CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001AAB0
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F0CC_entry:
l0002F0CC:
	return
fn0002F0CC_exit:


void fn0002F128()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F128_entry:
l0002F128:
	return
fn0002F128_exit:


void fn0002F15C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F15C_entry:
l0002F15C:
	return
fn0002F15C_exit:


void fn0002F1FC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F1FC_entry:
l0002F1FC:
l0002F218_thunk_fn0002F21C:
	fn0002F21C()
	return
fn0002F1FC_exit:


void fn0002F21C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002F1FC
//      fn0002FFD0
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1
fn0002F21C_entry:
l0002F21C:
	return
fn0002F21C_exit:


void fn0002F274()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F274_entry:
l0002F274:
	return
fn0002F274_exit:


void fn0002F2C8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002E738
//      fn0002E770
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F2C8_entry:
l0002F2C8:
	return
fn0002F2C8_exit:


void fn0002F2F0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002E71C
//      fn0002E754
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F2F0_entry:
l0002F2F0:
	return
fn0002F2F0_exit:


void fn0002F448()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0002E530
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F448_entry:
l0002F448:
	return
fn0002F448_exit:


void fn0002F60C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001AAB0
//      fn0001DE80
//      fn00027448
//      fn0002CDCC
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F60C_entry:
l0002F60C:
	return
fn0002F60C_exit:


void fn0002F63C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000291C4
//      fn0002CE14
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F63C_entry:
l0002F63C:
	return
fn0002F63C_exit:


void fn0002F940()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001A700
//      fn0001A7E4
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F940_entry:
l0002F940:
	return
fn0002F940_exit:


void fn0002F9E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001B134
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002F9E0_entry:
l0002F9E0:
	return
fn0002F9E0_exit:


void fn0002FA08()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0001B134
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r1 r19
fn0002FA08_entry:
l0002FA08:
	return
fn0002FA08_exit:


void fn0002FFD0(word32 r3, word32 r18, word32 dwArg20, word32 dwArg0228)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00019BC8
// MayUse:  r18:[0..31] r3:[0..31] Stack +0020:[0..31] Stack +0228:[0..31]
// LiveOut:
// Trashed:
// Preserved: r1
// Terminates process
fn0002FFD0_exit:
fn0002FFD0_entry:
	ptr32 fp
l0002FFD0:
	word32 r3_11
	Mem6[0x00008EA4<p32>:word32] = r3
	branch Test(EQ,r3) l0002FFE0_ds_t
l0002FFE0_ds_t:
l0002FFE0_ds_f:
l0002FFE4:
	r3_11 = CONVERT(Mem6[r3:byte], byte, word32)
	branch Test(EQ,r3_11) l0003021C
l0003021C:
	Mem13[0x00008EA4<p32>:word32] = 0x6F98<32>
	r3_11 = 0x6F98<32>
l0002FFEC:
	fn0002CFE4(fn000255C0(fn0002CFE4(r3_11), fp + 0x1C<32>))
	word32 r19_58
	word32 r21_60
	word32 r22_61
	word32 r23_62
	word32 r24_63
	word32 r25_64
	word32 r26_65
	word32 r3_68
	word32 r31_69
	word32 r0_52 = fn0000D008(r18, out r3_68, out r19_58, out r21_60, out r22_61, out r23_62, out r24_63, out r25_64, out r26_65, out r31_69)
	word32 r19_85
	word32 r23_88
	word32 r24_89
	word32 r25_90
	word32 r26_91
	word32 r27_92
	word32 r28_93
	word32 r7_100
	word32 r8_101
	word32 r21_162
	word32 r22_163
	word32 r3_95 = fn00009E48(r0_52, r3_68, 0<32>, r19_58, r21_60, r22_61, r23_62, r24_63, r25_64, r26_65, out r7_100, out r8_101, out r19_85, out r21_162, out r22_163, out r23_88, out r24_89, out r25_90, out r26_91, out r27_92, out r28_93)
	word32 r6_107 = Mem48[dwArg0228 + 44<i32>:word32]
	word32 r4_109 = r21_162 + 0xFFFFFFFF<32>
	branch r3_95 < r21_162 + 0xFFFFFFFF<32> l00030064_ds_t
l00030064_ds_t:
	Mem111[dwArg20 + 44<i32>:word32] = r6_107
l00030278:
	fn00009B70(r0_52, r8_101, fn0002EAD0(r19_85), r21_162, r22_163, r23_88, r24_89, r25_90, r26_91)
l00030064_ds_f:
	Mem145[dwArg20 + 44<i32>:word32] = r6_107
l00030068:
	word32 r23_152
	word32 r19_148
	word32 r3_147
	word32 r6_149
	word32 r18_146 = cond(r3_95 - r21_162)
	branch r3_95 < r21_162 l00030070_ds_t
l00030070_ds_t:
	r3_147 = r3_95 * 2<32>
l00030230:
	fn0002F048()
	r19_148 = r3_95 * 4<32>
	r6_149 = 0x6FC0<32>
	branch Test(NE,r3_95 * 2<32>) l00030248_ds_t
l00030248_ds_t:
	r23_152 = r3_95 * 2<32>
l00030248_ds_f:
l0003024C:
l00030070_ds_f:
l00030074:
	r3_147 = fn0000B1C0(r0_52, r3_95 * 2<32>, dwArg20, r6_107, r8_101, r19_85, r22_163, r23_88, out r4_109, out r6_149, out r7_100, out r8_101, out r18_146, out r19_148, out r21_162, out r22_163)
	r23_152 = r3_147
l00030084:
	word32 r19_198
	word32 r5_175 = Mem145[0x00008EA0<p32>:word32]
	branch Test(EQ,r5_175) l000302AC
l000302AC:
	word32 r8_619
	word32 r6_618
	word32 r19_620
	r19_198 = fn0000B1D0(r0_52, r5_175, r6_149, r7_100, r8_101, r19_148, r22_163, r23_152, out r4_109, out r6_618, out r8_619, out r18_146, out r19_620, out r21_162, out r22_163, out r23_152)
l00030090:
	fn0002F048()
	branch Test(EQ,r3_147) l000300A4_ds_t
l000300A4_ds_t:
	r19_148 = r3_147
l000302C0:
l00030258:
	fn0002EAD0(r19_148)
	fn0002F21C()
l000300A4_ds_f:
	r19_198 = r3_147
l000300A8:
	word32 r1_240 = <invalid>
	word32 r27_626
	word32 r28_627
	word32 r25_624
	word32 r26_625
	word32 r7_621
	word32 r23_623
	word32 r19_242
	word32 r21_243
	word32 r22_244
	word32 r3_245
	word32 r23_250
	word32 r24_251
	word32 r25_252
	word32 r26_253
	word32 r28_255
	word32 r29_256
	word32 r22_622
	word32 r19_272
	word32 r22_275
	word32 r23_276
	word32 r3_283
	word32 r7_289
	word32 r8_290
	word32 r9_291
	word32 r19_298
	word32 r3_299
	word32 r4_300
	word32 r7_303
	word32 r10_309
	word32 r19_312
	word32 r22_314
	word32 r23_315
	word32 r21_328
	word32 r24_342
	word32 r19_362
	word32 r21_363
	word32 r22_364
	word32 r23_365
	word32 r24_366
	word32 r26_368
	word32 r3_371
	word32 r19_392
	word32 r21_393
	word32 r24_396
	word32 r8_408
	fn00009E48(fn0000B51C(fn0000DB74(fn00025CD4(r1_240 + 0x1C<32>, r19_312, out r21_328), r21_328, r22_314, r23_315, out r24_342), r1_240 + 0x1C<32>, r1_240 + 0x224<32>, r24_342, 0xFFFF8E88<32>, fn0000B2CC(fn00025A6C(fn0000CE64(fn00026018(r0_52, r4_109, r18_146, r19_198, r21_162, r22_163, r23_152, r24_89, r25_90, r27_92, r28_93, r31_69, out r3_245, out r19_242, out r21_243, out r22_244, out r23_250, out r24_251, out r25_252, out r26_253, out r28_255, out r29_256), r3_245, r1_240 + 0x1C<32>, r19_242, r21_243, r22_244, r23_250, r24_251, r25_252, r26_253, r28_255, r29_256, Mem145[r1_240 + 32<i32>:word32], Mem145[r1_240 + 36<i32>:word32], out r3_283, out r7_289, out r8_290, out r9_291, out r19_272, out r22_275, out r23_276), r3_283, r7_289, r8_290, r9_291, r19_272, out r3_299, out r4_300, out r7_303, out r19_298), r3_299, r4_300, r1_240 + 0x1C<32>, 0xFFFF8E88<32>, r7_303, r19_298, r22_275, r23_276, out r10_309, out r19_312, out r22_314, out r23_315), r10_309, Mem145[r1_240 + 96<i32>:word32], out r3_371, out r19_362, out r21_363, out r22_364, out r23_365, out r24_366, out r26_368), r3_371, 1<32>, r19_362, r21_363, r22_364, r23_365, r24_366, r3_371, r26_368, out r7_621, out r8_408, out r19_392, out r21_393, out r22_622, out r23_623, out r24_396, out r25_624, out r26_625, out r27_626, out r28_627)
	word32 r19_420
	word32 r21_422
	word32 r22_423
	word32 r23_424
	word32 r25_426
	word32 r26_427
	word32 r28_428
	word32 r29_429
	word32 r3_430
	word32 r31_431
	word32 r19_449
	word32 r21_451
	word32 r22_452
	word32 r23_453
	word32 r24_454
	word32 r25_455
	word32 r26_456
	word32 r28_458
	word32 r29_459
	word32 r3_460
	word32 r4_463
	word32 r23_483
	word32 r26_486
	word32 r27_487
	word32 r28_488
	word32 r29_489
	word32 r30_491
	word32 r31_492
	word32 r19_506
	word32 r22_508
	word32 r3_509
	word32 r4_510
	word32 r8_511
	word32 r0_512 = fn0000BA7C(fn0000CEF0(fn0000D9D8(fn0000EE08(r8_408, r19_392, r21_393, out r3_430, out r19_420, out r21_422, out r22_423, out r23_424, out r25_426, out r26_427, out r28_428, out r29_429, out r31_431), r3_430, r19_420, r21_422, r22_423, r23_424, r25_426, r26_427, r28_428, r29_429, r31_431, Mem145[r1_240 + 32<i32>:word32], Mem145[r1_240 + 36<i32>:word32], out r3_460, out r4_463, out r19_449, out r21_451, out r22_452, out r23_453, out r24_454, out r25_455, out r26_456, out r28_458, out r29_459), r3_460, r4_463, Mem145[0x00008E9C<p32>:word32], r19_449, r21_451, r22_452, r23_453, r24_454, r25_455, r26_456, r28_458, r29_459, Mem145[r1_240 + 32<i32>:word32], Mem145[r1_240 + 36<i32>:word32], out r23_483, out r26_486, out r27_487, out r28_488, out r29_489, out r30_491, out r31_492), r1_240 + 0x1C<32>, r1_240 + 0x224<32>, 0xFFFF8E88<32>, out r3_509, out r4_510, out r8_511, out r19_506, out r22_508)
	word32 r23_530
	word32 r26_533
	word32 r29_536
	word32 r19_551
	word32 r23_553
	word32 r0_548 = fn0000D120(r0_512, fn0000D1B0(r0_512, r3_509, r4_510, r1_240 + 0x224<32>, r8_511, r19_506, r22_508, r23_483, r26_486, r27_487, r28_488, r29_489, r30_491, r31_492, out r23_530, out r26_533, out r29_536), r1_240 + 0x224<32>, r23_530, r26_533, r29_536, out r19_551, out r23_553)
	fn00025BC4(r1_240 + 0x1C<32>)
	word32 r1_566 = <invalid>
	word32 r19_576 = fn000256D8(r0_548, r1_566 + 0x1C<32>, r19_551)
	word32 r1_574 = <invalid>
	branch Test(EQ,Mem145[0x00008EB4<p32>:word32] ^ r23_553) l000301E4
l000301E4:
	word32 r3_588
	branch Test(EQ,Mem145[0x00008EA8<p32>:word32] ^ r19_576) l000301F4_ds_t
l000301F4_ds_t:
	r3_588 = Mem145[r1_574 + 1216<i32>:word32]
l000301F4_ds_f:
l000301F8:
	fn0002F074()
	r3_588 = Mem145[r1_574 + 1216<i32>:word32]
l00030204:
	branch Test(EQ,r3_588 + Mem145[r1_574 + 1084<i32>:word32]) l00030210_ds_t
l00030210_ds_t:
l000302A4:
	fn0002F21C()
l00030210_ds_f:
l00030214:
	fn0002F21C()
l000301DC:
	fn0002F074()


