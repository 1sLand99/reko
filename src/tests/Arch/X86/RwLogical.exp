// fn0C00_0000
// Return size: 2
// Mem0:Mem
// fp:fp
// %continuation:%continuation
// sp:sp
// ax:ax
// SZ:SZ
// O:O
// C:C
// ebx:ebx
// Z:Z
// ds:ds
// Top:Top
// return address size: 2
define fn0C00_0000
fn0C00_0000_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l0C00_0000
l0C00_0000:
	ax = ax & 0xF<16>
	SZ = cond(ax)
	O = 0<32>
	C = 0<32>
	ebx = ebx & ebx
	SZ = cond(ebx)
	O = 0<32>
	C = 0<32>
	branch Test(EQ,Z) l0C00_000C
	// succ:  l0C00_0008 l0C00_000C
l0C00_0008:
	Mem0[ds:0x300<16>:word16] = ax
	// succ:  l0C00_000C
l0C00_000C:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

