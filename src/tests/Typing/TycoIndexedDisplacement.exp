// ProcedureBuilder
// Return size: 0
void ProcedureBuilder()
ProcedureBuilder_entry:
	// succ:  l1
l1:
	Mem3[ds:Mem0[ds:0x0C00:word16] + 0x000A + si:byte] = 0xF8
ProcedureBuilder_exit:

// Equivalence classes ////////////
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr (struct))
  OrigDataType: (ptr (struct "Globals"))
T_2: (in 0xF8 : byte)
  Class: Eq_2
  DataType: byte
  OrigDataType: byte
T_3: (in ds : selector)
  Class: Eq_3
  DataType: (ptr (segment (C00 T_5 t0C00)))
  OrigDataType: (ptr (segment (C00 T_5 t0C00)))
T_4: (in 0x0C00 : word16)
  Class: Eq_4
  DataType: (memptr T_3 (struct (0 T_5 t0000)))
  OrigDataType: (memptr T_3 (struct (0 T_5 t0000)))
T_5: (in Mem0[ds:0x0C00:word16] : word16)
  Class: Eq_5
  DataType: (memptr T_3 (struct (A T_11 t000A)))
  OrigDataType: (memptr T_3 (struct (A T_11 t000A)))
T_6: (in 0x000A : word16)
  Class: Eq_6
  DataType: int16
  OrigDataType: int16
T_7: (in Mem0[ds:0x0C00:word16] + 0x000A : word16)
  Class: Eq_7
  DataType: (memptr T_3 (struct (0 (arr T_11) a0000)))
  OrigDataType: (memptr T_3 (struct (0 (arr T_11) a0000)))
T_8: (in si : int16)
  Class: Eq_8
  DataType: int16
  OrigDataType: int16
T_9: (in Mem0[ds:0x0C00:word16] + 0x000A + si : word16)
  Class: Eq_9
  DataType: (memptr T_3 (struct (0 T_10 t0000)))
  OrigDataType: (memptr T_3 (struct (0 T_10 t0000)))
T_10: (in Mem3[ds:Mem0[ds:0x0C00:word16] + 0x000A + si:byte] : byte)
  Class: Eq_2
  DataType: byte
  OrigDataType: byte
T_11:
  Class: Eq_11
  DataType: (struct 0001 (0 T_10 t0000))
  OrigDataType: (struct 0001 (0 T_10 t0000))
