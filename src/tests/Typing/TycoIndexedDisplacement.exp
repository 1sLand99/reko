// proc1
// Return size: 0
define proc1
proc1_entry:
	// succ:  l1
l1:
	bx = Mem0[ds:0xC00<16>:word16]
	Mem0[ds:bx + 0xA<16> + si:byte] = 0xF8<8>
proc1_exit:

// Equivalence classes ////////////
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 (struct))
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in ds : selector)
  Class: Eq_2
  DataType: (ptr16 (segment (C00 T_5 t0C00)))
  OrigDataType: (ptr16 (segment (C00 T_5 t0C00)))
T_3: (in 0xC00<16> : word16)
  Class: Eq_3
  DataType: (memptr T_2 (struct (0 T_5 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_5 t0000)))
T_4: (in ds:0xC00<16> : segptr32)
  Class: Eq_4
  DataType: segptr32
  OrigDataType: segptr32
T_5: (in Mem0[ds:0xC00<16>:word16] : word16)
  Class: Eq_5
  DataType: word16
  OrigDataType: word16
T_6: (in bx : word16)
  Class: Eq_5
  DataType: (memptr T_2 (struct (A (arr T_14) a000A)))
  OrigDataType: (memptr T_2 (struct (A (arr T_14) a000A)))
T_7: (in 0xF8<8> : byte)
  Class: Eq_7
  DataType: byte
  OrigDataType: byte
T_8: (in 0xA<16> : word16)
  Class: Eq_8
  DataType: int16
  OrigDataType: int16
T_9: (in bx + 0xA<16> : word16)
  Class: Eq_9
  DataType: (memptr T_2 (struct (0 (arr T_14) a0000)))
  OrigDataType: (memptr T_2 (struct (0 (arr T_14) a0000)))
T_10: (in si : int16)
  Class: Eq_10
  DataType: int16
  OrigDataType: int16
T_11: (in bx + 0xA<16> + si : word16)
  Class: Eq_11
  DataType: (memptr T_2 (struct (0 T_13 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_13 t0000)))
T_12: (in ds:bx + 0xA<16> + si : segptr32)
  Class: Eq_12
  DataType: segptr32
  OrigDataType: segptr32
T_13: (in Mem0[ds:bx + 0xA<16> + si:byte] : byte)
  Class: Eq_7
  DataType: byte
  OrigDataType: byte
T_14:
  Class: Eq_14
  DataType: (struct 0001 (0 T_13 t0000))
  OrigDataType: (struct 0001 (0 T_13 t0000))
T_15:
  Class: Eq_15
  DataType: (arr T_14)
  OrigDataType: (arr T_14)
