// SegmentedDoubleReferenceMock
// Return size: 0
void SegmentedDoubleReferenceMock()
SegmentedDoubleReferenceMock_entry:
	word16 ds
	// succ:  l1
l1:
	Mem6[ds:0x100<16>:word16] = Mem0[ds:Mem0[ds:0x300<16>:word16] + 4<16>:word16]
	Mem8[ds:0x102<16>:word16] = Mem6[ds:Mem6[ds:0x300<16>:word16] + 4<16>:word16]
SegmentedDoubleReferenceMock_exit:

// Equivalence classes ////////////
Eq_1: (ptr32 (struct "Globals"))
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: (ptr16 (segment (100 T_12 t0100) (102 T_21 t0102) (300 T_5 t0300)))
	T_2 (in ds : word16)
Eq_3: (memptr T_2 (struct (0 T_5 t0000)))
	T_3 (in 0x300<16> : word16)
Eq_4: segptr32
	T_4 (in ds:0x300<16> : segptr32)
Eq_5: (memptr T_2 (struct (4 T_9 t0004)))
	T_5 (in Mem0[ds:0x300<16>:word16] : word16)
	T_14 (in Mem6[ds:0x300<16>:word16] : word16)
Eq_6: word16
	T_6 (in 4<16> : word16)
Eq_7: word16
	T_7 (in Mem0[ds:0x300<16>:word16] + 4<16> : word16)
Eq_8: segptr32
	T_8 (in ds:Mem0[ds:0x300<16>:word16] + 4<16> : segptr32)
Eq_9: word16
	T_9 (in Mem0[ds:Mem0[ds:0x300<16>:word16] + 4<16>:word16] : word16)
	T_12 (in Mem6[ds:0x100<16>:word16] : word16)
	T_18 (in Mem6[ds:Mem6[ds:0x300<16>:word16] + 4<16>:word16] : word16)
	T_21 (in Mem8[ds:0x102<16>:word16] : word16)
Eq_10: (memptr T_2 (struct (0 T_12 t0000)))
	T_10 (in 0x100<16> : word16)
Eq_11: segptr32
	T_11 (in ds:0x100<16> : segptr32)
Eq_13: segptr32
	T_13 (in ds:0x300<16> : segptr32)
Eq_15: word16
	T_15 (in 4<16> : word16)
Eq_16: word16
	T_16 (in Mem6[ds:0x300<16>:word16] + 4<16> : word16)
Eq_17: segptr32
	T_17 (in ds:Mem6[ds:0x300<16>:word16] + 4<16> : segptr32)
Eq_19: (memptr T_2 (struct (0 T_21 t0000)))
	T_19 (in 0x102<16> : word16)
Eq_20: segptr32
	T_20 (in ds:0x102<16> : segptr32)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 (struct "Globals"))
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in ds : word16)
  Class: Eq_2
  DataType: (ptr16 (segment (100 T_12 t0100) (102 T_21 t0102) (300 T_5 t0300)))
  OrigDataType: (ptr16 (segment (100 T_12 t0100) (102 T_21 t0102) (300 T_5 t0300)))
T_3: (in 0x300<16> : word16)
  Class: Eq_3
  DataType: (memptr T_2 (struct (0 T_5 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_5 t0000)))
T_4: (in ds:0x300<16> : segptr32)
  Class: Eq_4
  DataType: segptr32
  OrigDataType: segptr32
T_5: (in Mem0[ds:0x300<16>:word16] : word16)
  Class: Eq_5
  DataType: (memptr T_2 (struct (4 T_9 t0004)))
  OrigDataType: (memptr T_2 (struct (4 T_9 t0004)))
T_6: (in 4<16> : word16)
  Class: Eq_6
  DataType: word16
  OrigDataType: word16
T_7: (in Mem0[ds:0x300<16>:word16] + 4<16> : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_8: (in ds:Mem0[ds:0x300<16>:word16] + 4<16> : segptr32)
  Class: Eq_8
  DataType: segptr32
  OrigDataType: segptr32
T_9: (in Mem0[ds:Mem0[ds:0x300<16>:word16] + 4<16>:word16] : word16)
  Class: Eq_9
  DataType: word16
  OrigDataType: word16
T_10: (in 0x100<16> : word16)
  Class: Eq_10
  DataType: (memptr T_2 (struct (0 T_12 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_12 t0000)))
T_11: (in ds:0x100<16> : segptr32)
  Class: Eq_11
  DataType: segptr32
  OrigDataType: segptr32
T_12: (in Mem6[ds:0x100<16>:word16] : word16)
  Class: Eq_9
  DataType: word16
  OrigDataType: word16
T_13: (in ds:0x300<16> : segptr32)
  Class: Eq_13
  DataType: segptr32
  OrigDataType: segptr32
T_14: (in Mem6[ds:0x300<16>:word16] : word16)
  Class: Eq_5
  DataType: (memptr T_2 (struct (4 T_9 t0004)))
  OrigDataType: (memptr T_2 (struct (4 T_18 t0004)))
T_15: (in 4<16> : word16)
  Class: Eq_15
  DataType: word16
  OrigDataType: word16
T_16: (in Mem6[ds:0x300<16>:word16] + 4<16> : word16)
  Class: Eq_16
  DataType: word16
  OrigDataType: word16
T_17: (in ds:Mem6[ds:0x300<16>:word16] + 4<16> : segptr32)
  Class: Eq_17
  DataType: segptr32
  OrigDataType: segptr32
T_18: (in Mem6[ds:Mem6[ds:0x300<16>:word16] + 4<16>:word16] : word16)
  Class: Eq_9
  DataType: word16
  OrigDataType: word16
T_19: (in 0x102<16> : word16)
  Class: Eq_19
  DataType: (memptr T_2 (struct (0 T_21 t0000)))
  OrigDataType: (memptr T_2 (struct (0 T_21 t0000)))
T_20: (in ds:0x102<16> : segptr32)
  Class: Eq_20
  DataType: segptr32
  OrigDataType: segptr32
T_21: (in Mem8[ds:0x102<16>:word16] : word16)
  Class: Eq_9
  DataType: word16
  OrigDataType: word16
