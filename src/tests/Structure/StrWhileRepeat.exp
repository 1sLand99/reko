// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, word16 si, selector ds)
fn0C00_0000_entry:
	word16 ax_13 = 0x0000
	goto l0C00_000A
	// succ:  l0C00_000A
l0C00_0000:
l0C00_0005:
	ax_13 = ax_13 + Mem0[ds:bx:word16]
	bx = Mem0[ds:bx + 0x0002:word16]
	// succ:  l0C00_000A
l0C00_000A:
	branch bx != 0x0000 l0C00_0005
	// succ:  l0C00_000E l0C00_0005
l0C00_000E:
	Mem19[ds:0x0300:word16] = ax_13
	word16 ax_20 = 0x0000
	// succ:  l0C00_0014
l0C00_0014:
	word16 si_29 = Mem19[ds:si + 0x0002:word16]
	ax_20 = ax_20 + Mem19[ds:si:word16]
	si = si_29
	branch si_29 != 0x0000 l0C00_0014
	// succ:  l0C00_001D l0C00_0014
l0C00_001D:
	Mem34[ds:0x0302:word16] = ax_20
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

void fn0C00_0000(word16 bx, word16 si, selector ds)
{
	word16 ax_13 = 0x0000;
	ds_47 = ds;
	while (bx != 0x0000)
	{
		ax_13 = ax_13 + Mem0[ds:bx:word16];
		bx = Mem0[ds:bx + 0x0002:word16];
	}
	Mem19[ds:0x0300:word16] = ax_13;
	word16 ax_20 = 0x0000;
	do
	{
		word16 si_29 = Mem19[ds_47:si + 0x0002:word16];
		ax_20 = ax_20 + Mem19[ds_47:si:word16];
		si = si_29;
	} while (si_29 != 0x0000);
	Mem34[ds_47:0x0302:word16] = ax_20;
	return;
}
===========================
