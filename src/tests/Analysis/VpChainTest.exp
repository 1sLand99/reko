= fn0C00_0000 ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
dx_3: orig: dx
    def:  dx_3 = 0x001E
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
sp_4: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
dx_5: orig: dx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
ds:ds
    def:  def ds
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
ds_7: orig: ds
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
    uses: Mem10[ds_7:0x012C:word16] = ax_9
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
ax_9: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
    uses: Mem10[ds_7:0x012C:word16] = ax_9
Mem10: orig: Mem0
    def:  Mem10[ds_7:0x012C:word16] = ax_9
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ds
	def ax
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_3 = 0x001E
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,ds:ds,dx:dx_3,sp:sp_2
		defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
	Mem10[ds_7:0x012C:word16] = ax_9
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:0x001E,sp:fp	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
sp_2: orig: sp
    def:  sp_2 = fp
dx_3: orig: dx
    def:  dx_3 = 0x001E
sp_4: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:0x001E,sp:fp	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
dx_5: orig: dx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:0x001E,sp:fp	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
ds:ds
    def:  def ds
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:0x001E,sp:fp	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
ds_7: orig: ds
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:0x001E,sp:fp	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
    uses: Mem10[ds_7:0x012C:word16] = ax_9
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:0x001E,sp:fp	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
ax_9: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,ds:ds,dx:0x001E,sp:fp	defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
    uses: Mem10[ds_7:0x012C:word16] = ax_9
Mem10: orig: Mem0
    def:  Mem10[ds_7:0x012C:word16] = ax_9
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ds
	def ax
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_3 = 0x001E
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,ds:ds,dx:0x001E,sp:fp
		defs: ax:ax_9,ds:ds_7,dx:dx_5,sp:sp_4
	Mem10[ds_7:0x012C:word16] = ax_9
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
= fn0C00_000B ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000F (retsize: 2;)	uses: sp:sp_2	defs: sp:sp_3
sp_3: orig: sp
    def:  call fn0C00_000F (retsize: 2;)	uses: sp:sp_2	defs: sp:sp_3
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	call fn0C00_000F (retsize: 2;)
		uses: sp:sp_2
		defs: sp:sp_3
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          call fn0C00_000F (retsize: 2;)	uses: sp:fp	defs: sp:sp_3
sp_2: orig: sp
    def:  sp_2 = fp
sp_3: orig: sp
    def:  call fn0C00_000F (retsize: 2;)	uses: sp:fp	defs: sp:sp_3
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	call fn0C00_000F (retsize: 2;)
		uses: sp:fp
		defs: sp:sp_3
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
= fn0C00_000F ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_3 = sp_2 - 0x0002
sp_3: orig: sp
    def:  sp_3 = sp_2 - 0x0002
    uses: Mem6[ss:sp_3:word16] = si
          si_21 = Mem6[ss:sp_3:word16]
          sp_22 = sp_3 + 0x0002
si:si
    def:  def si
    uses: Mem6[ss:sp_3:word16] = si
          si_7 = si ^ si
          si_7 = si ^ si
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_3:word16] = si
          si_21 = Mem6[ss:sp_3:word16]
Mem6: orig: Mem0
    def:  Mem6[ss:sp_3:word16] = si
    uses: si_21 = Mem6[ss:sp_3:word16]
si_7: orig: si
    def:  si_7 = si ^ si
    uses: SZO_8 = cond(si_7)
          si_12 = PHI(si_7, si_13)
SZO_8: orig: SZO
    def:  SZO_8 = cond(si_7)
C_9: orig: C
    def:  C_9 = false
dx_10: orig: dx
    def:  dx_10 = PHI(dx, dx_15)
    uses: SCZO_11 = cond(dx_10 - 0x0000)
          si_13 = si_12 + dx_10
          dx_15 = dx_10 - 0x0001
          branch dx_10 >= 0x0000 l0C00_0015
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(dx_10 - 0x0000)
si_12: orig: si
    def:  si_12 = PHI(si_7, si_13)
    uses: si_13 = si_12 + dx_10
          ax_17 = si_12
si_13: orig: si
    def:  si_13 = si_12 + dx_10
    uses: SCZO_14 = cond(si_13)
          si_12 = PHI(si_7, si_13)
SCZO_14: orig: SCZO
    def:  SCZO_14 = cond(si_13)
dx_15: orig: dx
    def:  dx_15 = dx_10 - 0x0001
    uses: SZO_16 = cond(dx_15)
          dx_10 = PHI(dx, dx_15)
SZO_16: orig: SZO
    def:  SZO_16 = cond(dx_15)
ax_17: orig: ax
    def:  ax_17 = si_12
ss_18: orig: ss
    def:  ss_18 = PHI(ss, ss_18)
sp_19: orig: sp
    def:  sp_19 = PHI(sp_3, sp_19)
Mem20: orig: Mem0
    def:  Mem20 = PHI(Mem6, Mem20)
si_21: orig: si
    def:  si_21 = Mem6[ss:sp_3:word16]
sp_22: orig: sp
    def:  sp_22 = sp_3 + 0x0002
dx:dx
    def:  def dx
    uses: dx_10 = PHI(dx, dx_15)
// fn0C00_000F
// Return size: 2
define fn0C00_000F
fn0C00_000F_entry:
	def fp
	def si
	def ss
	def dx
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	sp_3 = sp_2 - 0x0002
	Mem6[ss:sp_3:word16] = si
	si_7 = si ^ si
	SZO_8 = cond(si_7)
	C_9 = false
	goto l0C00_0018
	// succ:  l0C00_0018
l0C00_0015:
	si_13 = si_12 + dx_10
	SCZO_14 = cond(si_13)
	dx_15 = dx_10 - 0x0001
	SZO_16 = cond(dx_15)
	// succ:  l0C00_0018
l0C00_0018:
	si_12 = PHI(si_7, si_13)
	dx_10 = PHI(dx, dx_15)
	SCZO_11 = cond(dx_10 - 0x0000)
	branch dx_10 >= 0x0000 l0C00_0015
	// succ:  l0C00_001D l0C00_0015
l0C00_001D:
	ax_17 = si_12
	si_21 = Mem6[ss:sp_3:word16]
	sp_22 = sp_3 + 0x0002
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          sp_3 = fp - 0x0002
          si_21 = wLoc02_24
          sp_22 = fp
sp_2: orig: sp
    def:  sp_2 = fp
sp_3: orig: sp
    def:  sp_3 = fp - 0x0002
si:si
    def:  def si
    uses: wLoc02_24 = si
ss:ss
    def:  def ss
    uses: wLoc02_24 = si
          si_21 = wLoc02_24
Mem6: orig: Mem0
    uses: si_21 = wLoc02_24
si_7: orig: si
    def:  si_7 = 0x0000
    uses: si_12 = PHI(si_7, si_13)
SZO_8: orig: SZO
    def:  SZO_8 = cond(0x0000)
C_9: orig: C
    def:  C_9 = false
dx_10: orig: dx
    def:  dx_10 = PHI(dx, dx_15)
    uses: SCZO_11 = cond(dx_10)
          si_13 = si_12 + dx_10
          dx_15 = dx_10 - 0x0001
          branch dx_10 >= 0x0000 l0C00_0015
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(dx_10)
si_12: orig: si
    def:  si_12 = PHI(si_7, si_13)
    uses: si_13 = si_12 + dx_10
          ax_17 = si_12
si_13: orig: si
    def:  si_13 = si_12 + dx_10
    uses: SCZO_14 = cond(si_13)
          si_12 = PHI(si_7, si_13)
SCZO_14: orig: SCZO
    def:  SCZO_14 = cond(si_13)
dx_15: orig: dx
    def:  dx_15 = dx_10 - 0x0001
    uses: SZO_16 = cond(dx_15)
          dx_10 = PHI(dx, dx_15)
SZO_16: orig: SZO
    def:  SZO_16 = cond(dx_15)
ax_17: orig: ax
    def:  ax_17 = si_12
ss_18: orig: ss
    def:  ss_18 = PHI(ss, ss_18)
sp_19: orig: sp
    def:  sp_19 = PHI(sp_3, sp_19)
Mem20: orig: Mem0
    def:  Mem20 = PHI(Mem6, Mem20)
si_21: orig: si
    def:  si_21 = wLoc02_24
sp_22: orig: sp
    def:  sp_22 = fp
dx:dx
    def:  def dx
    uses: dx_10 = PHI(dx, dx_15)
wLoc02_24: orig: wLoc02
    def:  wLoc02_24 = si
    uses: si_21 = wLoc02_24
wLoc02_25: orig: wLoc02
    def:  wLoc02_25 = PHI(wLoc02_24, wLoc02_25)
// fn0C00_000F
// Return size: 2
define fn0C00_000F
fn0C00_000F_entry:
	def fp
	def si
	def ss
	def dx
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	sp_3 = fp - 0x0002
	wLoc02_24 = si
	si_7 = 0x0000
	SZO_8 = cond(0x0000)
	C_9 = false
	goto l0C00_0018
	// succ:  l0C00_0018
l0C00_0015:
	si_13 = si_12 + dx_10
	SCZO_14 = cond(si_13)
	dx_15 = dx_10 - 0x0001
	SZO_16 = cond(dx_15)
	// succ:  l0C00_0018
l0C00_0018:
	si_12 = PHI(si_7, si_13)
	dx_10 = PHI(dx, dx_15)
	SCZO_11 = cond(dx_10)
	branch dx_10 >= 0x0000 l0C00_0015
	// succ:  l0C00_001D l0C00_0015
l0C00_001D:
	ax_17 = si_12
	si_21 = wLoc02_24
	sp_22 = fp
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:
