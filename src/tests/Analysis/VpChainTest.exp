= fn0C00_0000 ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_3,sp:sp_2	defs: ax:ax_7,dx:dx_5,sp:sp_4
dx_3: orig: dx
    def:  dx_3 = 0x001E
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_3,sp:sp_2	defs: ax:ax_7,dx:dx_5,sp:sp_4
sp_4: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_3,sp:sp_2	defs: ax:ax_7,dx:dx_5,sp:sp_4
dx_5: orig: dx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_3,sp:sp_2	defs: ax:ax_7,dx:dx_5,sp:sp_4
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_3,sp:sp_2	defs: ax:ax_7,dx:dx_5,sp:sp_4
ax_7: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_3,sp:sp_2	defs: ax:ax_7,dx:dx_5,sp:sp_4
    uses: Mem9[ds:0x012C:word16] = ax_7
ds:ds
    def:  def ds
    uses: Mem9[ds:0x012C:word16] = ax_7
Mem9: orig: Mem0
    def:  Mem9[ds:0x012C:word16] = ax_7
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_3 = 0x001E
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,dx:dx_3,sp:sp_2
		defs: ax:ax_7,dx:dx_5,sp:sp_4
	Mem9[ds:0x012C:word16] = ax_7
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp	defs: ax:ax_7,dx:dx_5,sp:sp_4
sp_2: orig: sp
    def:  sp_2 = fp
dx_3: orig: dx
    def:  dx_3 = 0x001E
sp_4: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp	defs: ax:ax_7,dx:dx_5,sp:sp_4
dx_5: orig: dx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp	defs: ax:ax_7,dx:dx_5,sp:sp_4
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp	defs: ax:ax_7,dx:dx_5,sp:sp_4
ax_7: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp	defs: ax:ax_7,dx:dx_5,sp:sp_4
    uses: Mem9[ds:0x012C:word16] = ax_7
ds:ds
    def:  def ds
    uses: Mem9[ds:0x012C:word16] = ax_7
Mem9: orig: Mem0
    def:  Mem9[ds:0x012C:word16] = ax_7
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_3 = 0x001E
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,dx:0x001E,sp:fp
		defs: ax:ax_7,dx:dx_5,sp:sp_4
	Mem9[ds:0x012C:word16] = ax_7
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
= fn0C00_000B ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000F (retsize: 2;)	uses: sp:sp_2	defs: sp:sp_3
sp_3: orig: sp
    def:  call fn0C00_000F (retsize: 2;)	uses: sp:sp_2	defs: sp:sp_3
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	call fn0C00_000F (retsize: 2;)
		uses: sp:sp_2
		defs: sp:sp_3
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          call fn0C00_000F (retsize: 2;)	uses: sp:fp	defs: sp:sp_3
sp_2: orig: sp
    def:  sp_2 = fp
sp_3: orig: sp
    def:  call fn0C00_000F (retsize: 2;)	uses: sp:fp	defs: sp:sp_3
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	call fn0C00_000F (retsize: 2;)
		uses: sp:fp
		defs: sp:sp_3
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
= fn0C00_000F ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_3 = sp_2 - 0x0002
sp_3: orig: sp
    def:  sp_3 = sp_2 - 0x0002
    uses: Mem6[ss:sp_3:word16] = si
          si_22 = Mem6[ss:sp_3:word16]
          sp_23 = sp_3 + 0x0002
si:si
    def:  def si
    uses: Mem6[ss:sp_3:word16] = si
          si_7 = si ^ si
          si_7 = si ^ si
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_3:word16] = si
          si_22 = Mem6[ss:sp_3:word16]
Mem6: orig: Mem0
    def:  Mem6[ss:sp_3:word16] = si
    uses: si_22 = Mem6[ss:sp_3:word16]
si_7: orig: si
    def:  si_7 = si ^ si
    uses: SZO_8 = cond(si_7)
          si_13 = PHI(si_7, si_14)
SZO_8: orig: SZO
    def:  SZO_8 = cond(si_7)
C_9: orig: C
    def:  C_9 = false
dx_10: orig: dx
    def:  dx_10 = PHI(dx, dx_16)
    uses: SCZO_11 = cond(dx_10 - 0x0000)
          si_14 = si_13 + dx_10
          dx_16 = dx_10 - 0x0001
          branch dx_10 >= 0x0000 l0C00_0015
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(dx_10 - 0x0000)
    uses: SO_12 = SLICE(SCZO_11, bool, 4) (alias)
SO_12: orig: SO
    def:  SO_12 = SLICE(SCZO_11, bool, 4) (alias)
si_13: orig: si
    def:  si_13 = PHI(si_7, si_14)
    uses: si_14 = si_13 + dx_10
          ax_18 = si_13
si_14: orig: si
    def:  si_14 = si_13 + dx_10
    uses: SCZO_15 = cond(si_14)
          si_13 = PHI(si_7, si_14)
SCZO_15: orig: SCZO
    def:  SCZO_15 = cond(si_14)
dx_16: orig: dx
    def:  dx_16 = dx_10 - 0x0001
    uses: SZO_17 = cond(dx_16)
          dx_10 = PHI(dx, dx_16)
SZO_17: orig: SZO
    def:  SZO_17 = cond(dx_16)
ax_18: orig: ax
    def:  ax_18 = si_13
ss_19: orig: ss
    def:  ss_19 = PHI(ss, ss_19)
sp_20: orig: sp
    def:  sp_20 = PHI(sp_3, sp_20)
Mem21: orig: Mem0
    def:  Mem21 = PHI(Mem6, Mem21)
si_22: orig: si
    def:  si_22 = Mem6[ss:sp_3:word16]
sp_23: orig: sp
    def:  sp_23 = sp_3 + 0x0002
dx:dx
    def:  def dx
    uses: dx_10 = PHI(dx, dx_16)
// fn0C00_000F
// Return size: 2
define fn0C00_000F
fn0C00_000F_entry:
	def fp
	def si
	def ss
	def dx
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	sp_3 = sp_2 - 0x0002
	Mem6[ss:sp_3:word16] = si
	si_7 = si ^ si
	SZO_8 = cond(si_7)
	C_9 = false
	goto l0C00_0018
	// succ:  l0C00_0018
l0C00_0015:
	si_14 = si_13 + dx_10
	SCZO_15 = cond(si_14)
	dx_16 = dx_10 - 0x0001
	SZO_17 = cond(dx_16)
	// succ:  l0C00_0018
l0C00_0018:
	si_13 = PHI(si_7, si_14)
	dx_10 = PHI(dx, dx_16)
	SCZO_11 = cond(dx_10 - 0x0000)
	SO_12 = SLICE(SCZO_11, bool, 4) (alias)
	branch dx_10 >= 0x0000 l0C00_0015
	// succ:  l0C00_001D l0C00_0015
l0C00_001D:
	ax_18 = si_13
	si_22 = Mem6[ss:sp_3:word16]
	sp_23 = sp_3 + 0x0002
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          sp_3 = fp - 0x0002
          si_22 = wLoc02_25
          sp_23 = fp
sp_2: orig: sp
    def:  sp_2 = fp
sp_3: orig: sp
    def:  sp_3 = fp - 0x0002
si:si
    def:  def si
    uses: wLoc02_25 = si
ss:ss
    def:  def ss
    uses: wLoc02_25 = si
          si_22 = wLoc02_25
Mem6: orig: Mem0
    uses: si_22 = wLoc02_25
si_7: orig: si
    def:  si_7 = 0x0000
    uses: si_13 = PHI(si_7, si_14)
SZO_8: orig: SZO
    def:  SZO_8 = cond(0x0000)
C_9: orig: C
    def:  C_9 = false
dx_10: orig: dx
    def:  dx_10 = PHI(dx, dx_16)
    uses: SCZO_11 = cond(dx_10)
          si_14 = si_13 + dx_10
          dx_16 = dx_10 - 0x0001
          branch dx_10 >= 0x0000 l0C00_0015
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(dx_10)
    uses: SO_12 = SLICE(SCZO_11, bool, 4) (alias)
SO_12: orig: SO
    def:  SO_12 = SLICE(SCZO_11, bool, 4) (alias)
si_13: orig: si
    def:  si_13 = PHI(si_7, si_14)
    uses: si_14 = si_13 + dx_10
          ax_18 = si_13
si_14: orig: si
    def:  si_14 = si_13 + dx_10
    uses: SCZO_15 = cond(si_14)
          si_13 = PHI(si_7, si_14)
SCZO_15: orig: SCZO
    def:  SCZO_15 = cond(si_14)
dx_16: orig: dx
    def:  dx_16 = dx_10 - 0x0001
    uses: SZO_17 = cond(dx_16)
          dx_10 = PHI(dx, dx_16)
SZO_17: orig: SZO
    def:  SZO_17 = cond(dx_16)
ax_18: orig: ax
    def:  ax_18 = si_13
ss_19: orig: ss
    def:  ss_19 = PHI(ss, ss_19)
sp_20: orig: sp
    def:  sp_20 = PHI(sp_3, sp_20)
Mem21: orig: Mem0
    def:  Mem21 = PHI(Mem6, Mem21)
si_22: orig: si
    def:  si_22 = wLoc02_25
sp_23: orig: sp
    def:  sp_23 = fp
dx:dx
    def:  def dx
    uses: dx_10 = PHI(dx, dx_16)
wLoc02_25: orig: wLoc02
    def:  wLoc02_25 = si
    uses: si_22 = wLoc02_25
wLoc02_26: orig: wLoc02
    def:  wLoc02_26 = PHI(wLoc02_25, wLoc02_26)
// fn0C00_000F
// Return size: 2
define fn0C00_000F
fn0C00_000F_entry:
	def fp
	def si
	def ss
	def dx
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	sp_3 = fp - 0x0002
	wLoc02_25 = si
	si_7 = 0x0000
	SZO_8 = cond(0x0000)
	C_9 = false
	goto l0C00_0018
	// succ:  l0C00_0018
l0C00_0015:
	si_14 = si_13 + dx_10
	SCZO_15 = cond(si_14)
	dx_16 = dx_10 - 0x0001
	SZO_17 = cond(dx_16)
	// succ:  l0C00_0018
l0C00_0018:
	si_13 = PHI(si_7, si_14)
	dx_10 = PHI(dx, dx_16)
	SCZO_11 = cond(dx_10)
	SO_12 = SLICE(SCZO_11, bool, 4) (alias)
	branch dx_10 >= 0x0000 l0C00_0015
	// succ:  l0C00_001D l0C00_0015
l0C00_001D:
	ax_18 = si_13
	si_22 = wLoc02_25
	sp_23 = fp
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:
