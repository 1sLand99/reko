= fn0C00_0000 ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
dx_3: orig: dx
    def:  dx_3 = 0x001E
    uses: ax_4 = fn0C00_000B(dx_3)
ax_4: orig: ax
    def:  ax_4 = fn0C00_000B(dx_3)
    uses: Mem6[ds:0x012C:word16] = ax_4
ds:ds
    def:  def ds
    uses: Mem6[ds:0x012C:word16] = ax_4
Mem6: orig: Mem0
    def:  Mem6[ds:0x012C:word16] = ax_4
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_3 = 0x001E
	ax_4 = fn0C00_000B(dx_3)
	Mem6[ds:0x012C:word16] = ax_4
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
dx_3: orig: dx
    def:  dx_3 = 0x001E
ax_4: orig: ax
    def:  ax_4 = fn0C00_000B(0x001E)
    uses: Mem6[ds:0x012C:word16] = ax_4
ds:ds
    def:  def ds
    uses: Mem6[ds:0x012C:word16] = ax_4
Mem6: orig: Mem0
    def:  Mem6[ds:0x012C:word16] = ax_4
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_3 = 0x001E
	ax_4 = fn0C00_000B(0x001E)
	Mem6[ds:0x012C:word16] = ax_4
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
= fn0C00_000B ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
dx:dx
    def:  def dx
    uses: ax_4 = fn0C00_000F(dx)
ax_4: orig: ax
    def:  ax_4 = fn0C00_000F(dx)
    uses: return ax_4
// fn0C00_000B
// Return size: 0
word16 fn0C00_000B(word16 dx)
fn0C00_000B_entry:
	def fp
	def dx
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	ax_4 = fn0C00_000F(dx)
	return ax_4
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
dx:dx
    def:  def dx
    uses: ax_4 = fn0C00_000F(dx)
ax_4: orig: ax
    def:  ax_4 = fn0C00_000F(dx)
    uses: return ax_4
// fn0C00_000B
// Return size: 0
word16 fn0C00_000B(word16 dx)
fn0C00_000B_entry:
	def fp
	def dx
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	ax_4 = fn0C00_000F(dx)
	return ax_4
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
= fn0C00_000F ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
          sp_3 = fp - 0x0002
          sp_20 = fp
sp_2: orig: sp
    def:  sp_2 = fp
sp_3: orig: sp
    def:  sp_3 = fp - 0x0002
si:si
    def:  def si
    uses: wLoc02_5 = si
wLoc02_5: orig: wLoc02
    def:  wLoc02_5 = si
    uses: si_18 = wLoc02_5
si_6: orig: si
    def:  si_6 = 0x0000
    uses: si_11 = PHI(si_6, si_12)
SZO_7: orig: SZO
    def:  SZO_7 = cond(0x0000)
C_8: orig: C
    def:  C_8 = false
dx_9: orig: dx
    def:  dx_9 = PHI(dx, dx_14)
    uses: SCZO_10 = cond(dx_9 - 0x0000)
          si_12 = si_11 + dx_9
          dx_14 = dx_9 - 0x0001
          branch dx_9 >= 0x0000 l0C00_0015
SCZO_10: orig: SCZO
    def:  SCZO_10 = cond(dx_9 - 0x0000)
si_11: orig: si
    def:  si_11 = PHI(si_6, si_12)
    uses: si_12 = si_11 + dx_9
          ax_16 = si_11
si_12: orig: si
    def:  si_12 = si_11 + dx_9
    uses: SCZO_13 = cond(si_12)
          si_11 = PHI(si_6, si_12)
SCZO_13: orig: SCZO
    def:  SCZO_13 = cond(si_12)
dx_14: orig: dx
    def:  dx_14 = dx_9 - 0x0001
    uses: SZO_15 = cond(dx_14)
          dx_9 = PHI(dx, dx_14)
SZO_15: orig: SZO
    def:  SZO_15 = cond(dx_14)
ax_16: orig: ax
    def:  ax_16 = si_11
    uses: return ax_16
wLoc02_17: orig: wLoc02
    def:  wLoc02_17 = PHI(wLoc02_5, wLoc02_17)
si_18: orig: si
    def:  si_18 = wLoc02_5
fp_19: orig: fp
    def:  fp_19 = PHI(fp, fp_19)
sp_20: orig: sp
    def:  sp_20 = fp
dx:dx
    def:  def dx
    uses: dx_9 = PHI(dx, dx_14)
// fn0C00_000F
// Return size: 0
word16 fn0C00_000F(word16 dx)
fn0C00_000F_entry:
	def fp
	def si
	def dx
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	sp_3 = fp - 0x0002
	wLoc02_5 = si
	si_6 = 0x0000
	SZO_7 = cond(0x0000)
	C_8 = false
	goto l0C00_0018
	// succ:  l0C00_0018
l0C00_0015:
	si_12 = si_11 + dx_9
	SCZO_13 = cond(si_12)
	dx_14 = dx_9 - 0x0001
	SZO_15 = cond(dx_14)
	// succ:  l0C00_0018
l0C00_0018:
	si_11 = PHI(si_6, si_12)
	dx_9 = PHI(dx, dx_14)
	SCZO_10 = cond(dx_9 - 0x0000)
	branch dx_9 >= 0x0000 l0C00_0015
	// succ:  l0C00_001D l0C00_0015
l0C00_001D:
	ax_16 = si_11
	si_18 = wLoc02_5
	sp_20 = fp
	return ax_16
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          sp_3 = fp - 0x0002
          sp_20 = fp
sp_2: orig: sp
    def:  sp_2 = fp
sp_3: orig: sp
    def:  sp_3 = fp - 0x0002
si:si
    def:  def si
    uses: wLoc02_5 = si
          si_18 = si
wLoc02_5: orig: wLoc02
    def:  wLoc02_5 = si
si_6: orig: si
    def:  si_6 = 0x0000
    uses: si_11 = PHI(si_6, si_12)
SZO_7: orig: SZO
    def:  SZO_7 = cond(0x0000)
C_8: orig: C
    def:  C_8 = false
dx_9: orig: dx
    def:  dx_9 = PHI(dx, dx_14)
    uses: SCZO_10 = cond(dx_9)
          si_12 = si_11 + dx_9
          dx_14 = dx_9 - 0x0001
          branch dx_9 >= 0x0000 l0C00_0015
SCZO_10: orig: SCZO
    def:  SCZO_10 = cond(dx_9)
si_11: orig: si
    def:  si_11 = PHI(si_6, si_12)
    uses: si_12 = si_11 + dx_9
          ax_16 = si_11
          return si_11
si_12: orig: si
    def:  si_12 = si_11 + dx_9
    uses: SCZO_13 = cond(si_12)
          si_11 = PHI(si_6, si_12)
SCZO_13: orig: SCZO
    def:  SCZO_13 = cond(si_12)
dx_14: orig: dx
    def:  dx_14 = dx_9 - 0x0001
    uses: SZO_15 = cond(dx_14)
          dx_9 = PHI(dx, dx_14)
SZO_15: orig: SZO
    def:  SZO_15 = cond(dx_14)
ax_16: orig: ax
    def:  ax_16 = si_11
wLoc02_17: orig: wLoc02
    def:  wLoc02_17 = PHI(wLoc02_5, wLoc02_17)
si_18: orig: si
    def:  si_18 = si
fp_19: orig: fp
    def:  fp_19 = PHI(fp, fp_19)
sp_20: orig: sp
    def:  sp_20 = fp
dx:dx
    def:  def dx
    uses: dx_9 = PHI(dx, dx_14)
// fn0C00_000F
// Return size: 0
word16 fn0C00_000F(word16 dx)
fn0C00_000F_entry:
	def fp
	def si
	def dx
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	sp_3 = fp - 0x0002
	wLoc02_5 = si
	si_6 = 0x0000
	SZO_7 = cond(0x0000)
	C_8 = false
	goto l0C00_0018
	// succ:  l0C00_0018
l0C00_0015:
	si_12 = si_11 + dx_9
	SCZO_13 = cond(si_12)
	dx_14 = dx_9 - 0x0001
	SZO_15 = cond(dx_14)
	// succ:  l0C00_0018
l0C00_0018:
	si_11 = PHI(si_6, si_12)
	dx_9 = PHI(dx, dx_14)
	SCZO_10 = cond(dx_9)
	branch dx_9 >= 0x0000 l0C00_0015
	// succ:  l0C00_001D l0C00_0015
l0C00_001D:
	ax_16 = si_11
	si_18 = si
	sp_20 = fp
	return si_11
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:
