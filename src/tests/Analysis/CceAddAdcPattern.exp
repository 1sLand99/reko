r1:r1
    def:  def r1
    uses: r3_r1_10 = SEQ(r3, r1)
r2:r2
    def:  def r2
    uses: r4_r2_11 = SEQ(r4, r2)
r1_3: orig: r1
    def:  r1_3 = (word32) r3_r1_12
    uses: Mem8[0x00444400:word32] = r1_3
          r3_r1_12 = r3_r1_10 + r4_r2_11
SZC_4: orig: SZC
r3:r3
    def:  def r3
    uses: r3_r1_10 = SEQ(r3, r1)
r4:r4
    def:  def r4
    uses: r4_r2_11 = SEQ(r4, r2)
r3_7: orig: r3
    def:  r3_7 = SLICE(r3_r1_12, word32, 32)
    uses: Mem9[0x00444404:word32] = r3_7
          r3_r1_12 = r3_r1_10 + r4_r2_11
Mem8: orig: Mem0
    def:  Mem8[0x00444400:word32] = r1_3
Mem9: orig: Mem0
    def:  Mem9[0x00444404:word32] = r3_7
r3_r1_10: orig: r3_r1
    def:  r3_r1_10 = SEQ(r3, r1)
    uses: r3_r1_12 = r3_r1_10 + r4_r2_11
r4_r2_11: orig: r4_r2
    def:  r4_r2_11 = SEQ(r4, r2)
    uses: r3_r1_12 = r3_r1_10 + r4_r2_11
r3_r1_12: orig: r3_r1
    def:  r3_r1_12 = r3_r1_10 + r4_r2_11
// main
// Return size: 0
define main
main_entry:
	def r1
	def r2
	def r3
	def r4
	// succ:  l1
l1:
	r3_r1_10 = SEQ(r3, r1)
	r4_r2_11 = SEQ(r4, r2)
	r3_r1_12 = r3_r1_10 + r4_r2_11
	r1_3 = (word32) r3_r1_12
	r3_7 = SLICE(r3_r1_12, word32, 32)
	Mem8[0x00444400:word32] = r1_3
	Mem9[0x00444404:word32] = r3_7
	return
	// succ:  main_exit
main_exit:

