fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: use sp_2
Top_3: orig: Top
    def:  Top_3 = 0x00
    uses: use Top_3
ds:ds
    def:  def ds
    uses: ax_6 = Mem0[ds:0x0200:word16]
          dx_7 = Mem0[ds:0x0202:word16]
          cx_8 = Mem0[ds:0x0204:word16]
          bx_9 = Mem0[ds:0x0206:word16]
          Mem15[ds:0x0208:word16] = ax_10
          Mem16[ds:0x020A:word16] = dx_13
          ax_17 = Mem16[ds:0x0210:word16]
          dx_18 = Mem16[ds:0x0212:word16]
          es_cx_19 = Mem16[ds:0x0214:segptr32]
          Mem25[ds:0x0218:word16] = ax_23
          Mem29[ds:0x021A:word16] = dx_27
          cl_33 = Mem29[ds:0x0220:byte]
          cl_39 = Mem29[ds:0x0221:byte]
          Mem46[ds:0x0222:word16] = ax_44
Mem0:Global
    def:  def Mem0
    uses: ax_6 = Mem0[ds:0x0200:word16]
          dx_7 = Mem0[ds:0x0202:word16]
          cx_8 = Mem0[ds:0x0204:word16]
          bx_9 = Mem0[ds:0x0206:word16]
ax_6: orig: ax
    def:  ax_6 = Mem0[ds:0x0200:word16]
    uses: ax_10 = ax_6 + cx_8
dx_7: orig: dx
    def:  dx_7 = Mem0[ds:0x0202:word16]
    uses: dx_13 = dx_7 + bx_9 + C_12
cx_8: orig: cx
    def:  cx_8 = Mem0[ds:0x0204:word16]
    uses: ax_10 = ax_6 + cx_8
bx_9: orig: bx
    def:  bx_9 = Mem0[ds:0x0206:word16]
    uses: dx_13 = dx_7 + bx_9 + C_12
ax_10: orig: ax
    def:  ax_10 = ax_6 + cx_8
    uses: SCZO_11 = cond(ax_10)
          Mem15[ds:0x0208:word16] = ax_10
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(ax_10)
    uses: C_12 = SLICE(SCZO_11, bool, 1) (alias)
C_12: orig: C
    def:  C_12 = SLICE(SCZO_11, bool, 1) (alias)
    uses: dx_13 = dx_7 + bx_9 + C_12
dx_13: orig: dx
    def:  dx_13 = dx_7 + bx_9 + C_12
    uses: SCZO_14 = cond(dx_13)
          Mem16[ds:0x020A:word16] = dx_13
SCZO_14: orig: SCZO
    def:  SCZO_14 = cond(dx_13)
Mem15: orig: Mem0
    def:  Mem15[ds:0x0208:word16] = ax_10
Mem16: orig: Mem0
    def:  Mem16[ds:0x020A:word16] = dx_13
    uses: ax_17 = Mem16[ds:0x0210:word16]
          dx_18 = Mem16[ds:0x0212:word16]
          es_cx_19 = Mem16[ds:0x0214:segptr32]
ax_17: orig: ax
    def:  ax_17 = Mem16[ds:0x0210:word16]
    uses: ax_23 = ax_17 - cx_22
dx_18: orig: dx
    def:  dx_18 = Mem16[ds:0x0212:word16]
    uses: dx_27 = dx_18 - bx_21 - C_26
es_cx_19: orig: es_cx
    def:  es_cx_19 = Mem16[ds:0x0214:segptr32]
    uses: es_20 = SLICE(es_cx_19, selector, 16) (alias)
          cx_22 = (word16) es_cx_19 (alias)
          es_cx_34 = DPB(es_cx_19, cl_33, 0) (alias)
es_20: orig: es
    def:  es_20 = SLICE(es_cx_19, selector, 16) (alias)
    uses: bx_21 = es_20
          use es_20
bx_21: orig: bx
    def:  bx_21 = es_20
    uses: dx_27 = dx_18 - bx_21 - C_26
          use bx_21
cx_22: orig: cx
    def:  cx_22 = (word16) es_cx_19 (alias)
    uses: ax_23 = ax_17 - cx_22
ax_23: orig: ax
    def:  ax_23 = ax_17 - cx_22
    uses: SCZO_24 = cond(ax_23)
          Mem25[ds:0x0218:word16] = ax_23
          ax_30 = ax_23 ^ ax_23
          ax_30 = ax_23 ^ ax_23
SCZO_24: orig: SCZO
    def:  SCZO_24 = cond(ax_23)
    uses: C_26 = SLICE(SCZO_24, bool, 1) (alias)
Mem25: orig: Mem0
    def:  Mem25[ds:0x0218:word16] = ax_23
C_26: orig: C
    def:  C_26 = SLICE(SCZO_24, bool, 1) (alias)
    uses: dx_27 = dx_18 - bx_21 - C_26
dx_27: orig: dx
    def:  dx_27 = dx_18 - bx_21 - C_26
    uses: SCZO_28 = cond(dx_27)
          Mem29[ds:0x021A:word16] = dx_27
          use dx_27
SCZO_28: orig: SCZO
    def:  SCZO_28 = cond(dx_27)
Mem29: orig: Mem0
    def:  Mem29[ds:0x021A:word16] = dx_27
    uses: cl_33 = Mem29[ds:0x0220:byte]
          cl_39 = Mem29[ds:0x0221:byte]
ax_30: orig: ax
    def:  ax_30 = ax_23 ^ ax_23
    uses: SZO_31 = cond(ax_30)
          ax_37 = ax_30 + ax_30 + C_36
          ax_37 = ax_30 + ax_30 + C_36
SZO_31: orig: SZO
    def:  SZO_31 = cond(ax_30)
C_32: orig: C
    def:  C_32 = false
cl_33: orig: cl
    def:  cl_33 = Mem29[ds:0x0220:byte]
    uses: SCZO_35 = cond(cl_33 - 0x30)
          cl_40 = DPB(cl_33, cl_39, 0) (alias)
es_cx_34: orig: es_cx
    def:  es_cx_34 = DPB(es_cx_19, cl_33, 0) (alias)
SCZO_35: orig: SCZO
    def:  SCZO_35 = cond(cl_33 - 0x30)
    uses: C_36 = SLICE(SCZO_35, bool, 1) (alias)
C_36: orig: C
    def:  C_36 = SLICE(SCZO_35, bool, 1) (alias)
    uses: ax_37 = ax_30 + ax_30 + C_36
ax_37: orig: ax
    def:  ax_37 = ax_30 + ax_30 + C_36
    uses: SCZO_38 = cond(ax_37)
          ax_44 = ax_37 + ax_37 + C_43
          ax_44 = ax_37 + ax_37 + C_43
SCZO_38: orig: SCZO
    def:  SCZO_38 = cond(ax_37)
cl_39: orig: cl
    def:  cl_39 = Mem29[ds:0x0221:byte]
cl_40: orig: cl
    def:  cl_40 = DPB(cl_33, cl_39, 0) (alias)
    uses: SCZO_41 = cond(cl_40 - 0x3A)
          cx_49 = DPB(cx, cl_40, 0) (alias)
SCZO_41: orig: SCZO
    def:  SCZO_41 = cond(cl_40 - 0x3A)
    uses: C_42 = SLICE(SCZO_41, bool, 1) (alias)
C_42: orig: C
    def:  C_42 = SLICE(SCZO_41, bool, 1) (alias)
    uses: C_43 = !C_42
C_43: orig: C
    def:  C_43 = !C_42
    uses: ax_44 = ax_37 + ax_37 + C_43
ax_44: orig: ax
    def:  ax_44 = ax_37 + ax_37 + C_43
    uses: SCZO_45 = cond(ax_44)
          Mem46[ds:0x0222:word16] = ax_44
          use ax_44
SCZO_45: orig: SCZO
    def:  SCZO_45 = cond(ax_44)
    uses: C_47 = SLICE(SCZO_45, bool, 1) (alias)
          O_50 = SLICE(SCZO_45, bool, 4) (alias)
          S_51 = SLICE(SCZO_45, bool, 0) (alias)
          Z_52 = SLICE(SCZO_45, bool, 2) (alias)
Mem46: orig: Mem0
    def:  Mem46[ds:0x0222:word16] = ax_44
C_47: orig: C
    def:  C_47 = SLICE(SCZO_45, bool, 1) (alias)
    uses: use C_47
cx:cx
    def:  def cx
    uses: cx_49 = DPB(cx, cl_40, 0) (alias)
cx_49: orig: cx
    def:  cx_49 = DPB(cx, cl_40, 0) (alias)
    uses: use cx_49
O_50: orig: O
    def:  O_50 = SLICE(SCZO_45, bool, 4) (alias)
    uses: use O_50
S_51: orig: S
    def:  S_51 = SLICE(SCZO_45, bool, 0) (alias)
    uses: use S_51
Z_52: orig: Z
    def:  Z_52 = SLICE(SCZO_45, bool, 2) (alias)
    uses: use Z_52
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ds
	def Mem0
	def cx
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0x00
	ax_6 = Mem0[ds:0x0200:word16]
	dx_7 = Mem0[ds:0x0202:word16]
	cx_8 = Mem0[ds:0x0204:word16]
	bx_9 = Mem0[ds:0x0206:word16]
	ax_10 = ax_6 + cx_8
	SCZO_11 = cond(ax_10)
	C_12 = SLICE(SCZO_11, bool, 1) (alias)
	dx_13 = dx_7 + bx_9 + C_12
	SCZO_14 = cond(dx_13)
	Mem15[ds:0x0208:word16] = ax_10
	Mem16[ds:0x020A:word16] = dx_13
	ax_17 = Mem16[ds:0x0210:word16]
	dx_18 = Mem16[ds:0x0212:word16]
	es_cx_19 = Mem16[ds:0x0214:segptr32]
	es_20 = SLICE(es_cx_19, selector, 16) (alias)
	cx_22 = (word16) es_cx_19 (alias)
	bx_21 = es_20
	ax_23 = ax_17 - cx_22
	SCZO_24 = cond(ax_23)
	C_26 = SLICE(SCZO_24, bool, 1) (alias)
	Mem25[ds:0x0218:word16] = ax_23
	dx_27 = dx_18 - bx_21 - C_26
	SCZO_28 = cond(dx_27)
	Mem29[ds:0x021A:word16] = dx_27
	ax_30 = ax_23 ^ ax_23
	SZO_31 = cond(ax_30)
	C_32 = false
	cl_33 = Mem29[ds:0x0220:byte]
	es_cx_34 = DPB(es_cx_19, cl_33, 0) (alias)
	SCZO_35 = cond(cl_33 - 0x30)
	C_36 = SLICE(SCZO_35, bool, 1) (alias)
	ax_37 = ax_30 + ax_30 + C_36
	SCZO_38 = cond(ax_37)
	cl_39 = Mem29[ds:0x0221:byte]
	cl_40 = DPB(cl_33, cl_39, 0) (alias)
	cx_49 = DPB(cx, cl_40, 0) (alias)
	SCZO_41 = cond(cl_40 - 0x3A)
	C_42 = SLICE(SCZO_41, bool, 1) (alias)
	C_43 = !C_42
	ax_44 = ax_37 + ax_37 + C_43
	SCZO_45 = cond(ax_44)
	C_47 = SLICE(SCZO_45, bool, 1) (alias)
	O_50 = SLICE(SCZO_45, bool, 4) (alias)
	S_51 = SLICE(SCZO_45, bool, 0) (alias)
	Z_52 = SLICE(SCZO_45, bool, 2) (alias)
	Mem46[ds:0x0222:word16] = ax_44
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_44
	use bx_21
	use C_47
	use cx_49
	use dx_27
	use es_20
	use O_50
	use S_51
	use sp_2
	use Top_3
	use Z_52

