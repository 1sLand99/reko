fp:fp
    def:  def fp
    uses: sp_1 = fp
sp_1: orig: sp
    def:  sp_1 = fp
    uses: use sp_1
ds:ds
    def:  def ds
    uses: ax_4 = Mem0[ds:0x0200:word16]
          dx_5 = Mem0[ds:0x0202:word16]
          cx_6 = Mem0[ds:0x0204:word16]
          bx_7 = Mem0[ds:0x0206:word16]
          Mem12[ds:0x0208:word16] = ax_8
          Mem13[ds:0x020A:word16] = dx_10
          ax_14 = Mem13[ds:0x0210:word16]
          dx_15 = Mem13[ds:0x0212:word16]
          es_cx_16 = Mem13[ds:0x0214:segptr32]
          Mem22[ds:0x0218:word16] = ax_20
          Mem25[ds:0x021A:word16] = dx_23
          cl_29 = Mem25[ds:0x0220:byte]
          cl_34 = Mem25[ds:0x0221:byte]
          Mem39[ds:0x0222:word16] = ax_37
Mem0:Global memory
    def:  def Mem0
    uses: ax_4 = Mem0[ds:0x0200:word16]
          dx_5 = Mem0[ds:0x0202:word16]
          cx_6 = Mem0[ds:0x0204:word16]
          bx_7 = Mem0[ds:0x0206:word16]
ax_4: orig: ax
    def:  ax_4 = Mem0[ds:0x0200:word16]
    uses: ax_8 = ax_4 + cx_6
dx_5: orig: dx
    def:  dx_5 = Mem0[ds:0x0202:word16]
    uses: dx_10 = dx_5 + bx_7 + SCZO_9
cx_6: orig: cx
    def:  cx_6 = Mem0[ds:0x0204:word16]
    uses: ax_8 = ax_4 + cx_6
bx_7: orig: bx
    def:  bx_7 = Mem0[ds:0x0206:word16]
    uses: dx_10 = dx_5 + bx_7 + SCZO_9
ax_8: orig: ax
    def:  ax_8 = ax_4 + cx_6
    uses: SCZO_9 = cond(ax_8)
          Mem12[ds:0x0208:word16] = ax_8
SCZO_9: orig: SCZO
    def:  SCZO_9 = cond(ax_8)
    uses: dx_10 = dx_5 + bx_7 + SCZO_9
dx_10: orig: dx
    def:  dx_10 = dx_5 + bx_7 + SCZO_9
    uses: SCZO_11 = cond(dx_10)
          Mem13[ds:0x020A:word16] = dx_10
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(dx_10)
Mem12: orig: Mem0
    def:  Mem12[ds:0x0208:word16] = ax_8
Mem13: orig: Mem0
    def:  Mem13[ds:0x020A:word16] = dx_10
    uses: ax_14 = Mem13[ds:0x0210:word16]
          dx_15 = Mem13[ds:0x0212:word16]
          es_cx_16 = Mem13[ds:0x0214:segptr32]
ax_14: orig: ax
    def:  ax_14 = Mem13[ds:0x0210:word16]
    uses: ax_20 = ax_14 - cx_19
dx_15: orig: dx
    def:  dx_15 = Mem13[ds:0x0212:word16]
    uses: dx_23 = dx_15 - bx_18 - SCZO_21
es_cx_16: orig: es_cx
    def:  es_cx_16 = Mem13[ds:0x0214:segptr32]
    uses: es_17 = SLICE(es_cx_16, selector, 16) (alias)
          cx_19 = (word16) es_cx_16 (alias)
          es_cx_30 = DPB(es_cx_16, cl_29, 0) (alias)
es_17: orig: es
    def:  es_17 = SLICE(es_cx_16, selector, 16) (alias)
    uses: bx_18 = es_17
          use es_17
bx_18: orig: bx
    def:  bx_18 = es_17
    uses: dx_23 = dx_15 - bx_18 - SCZO_21
          use bx_18
cx_19: orig: cx
    def:  cx_19 = (word16) es_cx_16 (alias)
    uses: ax_20 = ax_14 - cx_19
ax_20: orig: ax
    def:  ax_20 = ax_14 - cx_19
    uses: SCZO_21 = cond(ax_20)
          Mem22[ds:0x0218:word16] = ax_20
SCZO_21: orig: SCZO
    def:  SCZO_21 = cond(ax_20)
    uses: dx_23 = dx_15 - bx_18 - SCZO_21
Mem22: orig: Mem0
    def:  Mem22[ds:0x0218:word16] = ax_20
dx_23: orig: dx
    def:  dx_23 = dx_15 - bx_18 - SCZO_21
    uses: SCZO_24 = cond(dx_23)
          Mem25[ds:0x021A:word16] = dx_23
          use dx_23
SCZO_24: orig: SCZO
    def:  SCZO_24 = cond(dx_23)
Mem25: orig: Mem0
    def:  Mem25[ds:0x021A:word16] = dx_23
    uses: cl_29 = Mem25[ds:0x0220:byte]
          cl_34 = Mem25[ds:0x0221:byte]
ax_26: orig: ax
    def:  ax_26 = 0x0000
SZO_27: orig: SZO
    def:  SZO_27 = cond(0x0000)
C_28: orig: C
    def:  C_28 = false
cl_29: orig: cl
    def:  cl_29 = Mem25[ds:0x0220:byte]
    uses: SCZO_31 = cond(cl_29 - 0x30)
es_cx_30: orig: es_cx
    def:  es_cx_30 = DPB(es_cx_16, cl_29, 0) (alias)
SCZO_31: orig: SCZO
    def:  SCZO_31 = cond(cl_29 - 0x30)
    uses: ax_32 = 0x0000 + SCZO_31
ax_32: orig: ax
    def:  ax_32 = 0x0000 + SCZO_31
    uses: SCZO_33 = cond(ax_32)
          ax_37 = ax_32 + ax_32 + C_36
          ax_37 = ax_32 + ax_32 + C_36
SCZO_33: orig: SCZO
    def:  SCZO_33 = cond(ax_32)
cl_34: orig: cl
    def:  cl_34 = Mem25[ds:0x0221:byte]
    uses: SCZO_35 = cond(cl_34 - 0x3A)
SCZO_35: orig: SCZO
    def:  SCZO_35 = cond(cl_34 - 0x3A)
    uses: C_36 = !SCZO_35
C_36: orig: C
    def:  C_36 = !SCZO_35
    uses: ax_37 = ax_32 + ax_32 + C_36
ax_37: orig: ax
    def:  ax_37 = ax_32 + ax_32 + C_36
    uses: SCZO_38 = cond(ax_37)
          Mem39[ds:0x0222:word16] = ax_37
          use ax_37
SCZO_38: orig: SCZO
    def:  SCZO_38 = cond(ax_37)
    uses: use SCZO_38
Mem39: orig: Mem0
    def:  Mem39[ds:0x0222:word16] = ax_37
cx:cx
    def:  def cx
    uses: cx_41 = DPB(cx, cl_34, 0) (alias)
cx_41: orig: cx
    def:  cx_41 = DPB(cx, cl_34, 0) (alias)
    uses: use cx_41
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	def Mem0
	def cx
	// succ:  l0C00_0000
l0C00_0000:
	sp_1 = fp
	ax_4 = Mem0[ds:0x0200:word16]
	dx_5 = Mem0[ds:0x0202:word16]
	cx_6 = Mem0[ds:0x0204:word16]
	bx_7 = Mem0[ds:0x0206:word16]
	ax_8 = ax_4 + cx_6
	SCZO_9 = cond(ax_8)
	dx_10 = dx_5 + bx_7 + SCZO_9
	SCZO_11 = cond(dx_10)
	Mem12[ds:0x0208:word16] = ax_8
	Mem13[ds:0x020A:word16] = dx_10
	ax_14 = Mem13[ds:0x0210:word16]
	dx_15 = Mem13[ds:0x0212:word16]
	es_cx_16 = Mem13[ds:0x0214:segptr32]
	es_17 = SLICE(es_cx_16, selector, 16) (alias)
	cx_19 = (word16) es_cx_16 (alias)
	bx_18 = es_17
	ax_20 = ax_14 - cx_19
	SCZO_21 = cond(ax_20)
	Mem22[ds:0x0218:word16] = ax_20
	dx_23 = dx_15 - bx_18 - SCZO_21
	SCZO_24 = cond(dx_23)
	Mem25[ds:0x021A:word16] = dx_23
	ax_26 = 0x0000
	SZO_27 = cond(0x0000)
	C_28 = false
	cl_29 = Mem25[ds:0x0220:byte]
	es_cx_30 = DPB(es_cx_16, cl_29, 0) (alias)
	SCZO_31 = cond(cl_29 - 0x30)
	ax_32 = 0x0000 + SCZO_31
	SCZO_33 = cond(ax_32)
	cl_34 = Mem25[ds:0x0221:byte]
	cx_41 = DPB(cx, cl_34, 0) (alias)
	SCZO_35 = cond(cl_34 - 0x3A)
	C_36 = !SCZO_35
	ax_37 = ax_32 + ax_32 + C_36
	SCZO_38 = cond(ax_37)
	Mem39[ds:0x0222:word16] = ax_37
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_37
	use bx_18
	use cx_41
	use dx_23
	use es_17
	use SCZO_38
	use sp_1

