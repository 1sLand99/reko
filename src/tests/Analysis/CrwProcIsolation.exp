void fn0C00_0000(Register word16 di, Register selector ds)
// MayUse:  di:0 ds:16
// LiveOut:
// Trashed: SCZO ax
// Preserved: di sp
// fn0C00_0000
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// di:di
// ss:ss
// ax:ax
// ds:ds
// S:S
// C:C
// Z:Z
// O:O
// wLoc02:Local -0002
// return address size: 2
void fn0C00_0000(word16 di, selector ds)
fn0C00_0000_entry:
	def ds
	def di
	// succ:  l0C00_0000
l0C00_0000:
	fn0C00_000F(di, ds)
	ax_10 = fn0C00_0014(0x0100)
	Mem15[ds:0x0300:word16] = ax_10
	// succ:  l0C00_000E_thunk_fn0C00_000F
l0C00_000E_thunk_fn0C00_000F:
	fn0C00_000F(di, ds)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
void fn0C00_000F(Register word16 di, Register selector ds)
// MayUse:  di:16 ds:16
// LiveOut:
// Trashed:
// Preserved: sp
// fn0C00_000F
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// di:di
// ds:ds
// return address size: 2
void fn0C00_000F(word16 di, selector ds)
fn0C00_000F_entry:
	def ds
	def di
	// succ:  l0C00_000F
l0C00_000F:
	Mem5[ds:di:word16] = 0x0000
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:
Register word16 fn0C00_0014(Register word16 ax)
// MayUse:  ax:16
// LiveOut: ax
// Trashed: SCZO ax di
// Preserved: sp
// fn0C00_0014
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// di:di
// SZO:SZO
// C:C
// ax:ax
// S:S
// Z:Z
// O:O
// return address size: 2
word16 fn0C00_0014(word16 ax)
fn0C00_0014_entry:
	def ax
	// succ:  l0C00_0014
l0C00_0014:
	ax_8 = ax - 0x0001
	return ax_8
	// succ:  fn0C00_0014_exit
fn0C00_0014_exit:
