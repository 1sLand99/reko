fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: use sp_2
dx:dx
    def:  def dx
    uses: dx_4 = dx ^ dx
          dx_4 = dx ^ dx
dx_4: orig: dx
    def:  dx_4 = dx ^ dx
    uses: SZO_5 = cond(dx_4)
          dx_14 = PHI(dx_4, dx_15, dx_15)
SZO_5: orig: SZO
    def:  SZO_5 = cond(dx_4)
C_6: orig: C
    def:  C_6 = false
cx_7: orig: cx
    def:  cx_7 = 0x0004
    uses: cx_17 = PHI(cx_7, cx_18, cx_19)
di_8: orig: di
    def:  di_8 = 0x0004
    uses: di_20 = PHI(di_8, di_20, di_21)
ds_9: orig: ds
    def:  ds_9 = PHI(ds, ds_9, ds_9)
    uses: use ds_9
si_10: orig: si
    def:  si_10 = PHI(si, si_13, si_13)
    uses: ax_12 = Mem0[ds:si_10:word16]
          si_13 = si_10 + 0x0002
ax_12: orig: ax
    def:  ax_12 = Mem0[ds:si_10:word16]
    uses: dx_15 = dx_14 + ax_12
          use ax_12
si_13: orig: si
    def:  si_13 = si_10 + 0x0002
    uses: si_10 = PHI(si, si_13, si_13)
          si_10 = PHI(si, si_13, si_13)
          use si_13
dx_14: orig: dx
    def:  dx_14 = PHI(dx_4, dx_15, dx_15)
    uses: dx_15 = dx_14 + ax_12
dx_15: orig: dx
    def:  dx_15 = dx_14 + ax_12
    uses: SCZO_16 = cond(dx_15)
          Mem23[ds:0x0300:word16] = dx_15
          dx_14 = PHI(dx_4, dx_15, dx_15)
          dx_14 = PHI(dx_4, dx_15, dx_15)
          use dx_15
SCZO_16: orig: SCZO
    def:  SCZO_16 = cond(dx_15)
    uses: use SCZO_16 | SZO_22
cx_17: orig: cx
    def:  cx_17 = PHI(cx_7, cx_18, cx_19)
    uses: cx_18 = cx_17 - 0x0001
cx_18: orig: cx
    def:  cx_18 = cx_17 - 0x0001
    uses: branch cx_18 != 0x0000 l0C00_0008
          cx_17 = PHI(cx_7, cx_18, cx_19)
cx_19: orig: cx
    def:  cx_19 = 0x0004
    uses: cx_17 = PHI(cx_7, cx_18, cx_19)
          use cx_19
di_20: orig: di
    def:  di_20 = PHI(di_8, di_20, di_21)
    uses: di_21 = di_20 - 0x0001
          di_20 = PHI(di_8, di_20, di_21)
di_21: orig: di
    def:  di_21 = di_20 - 0x0001
    uses: SZO_22 = cond(di_21)
          di_20 = PHI(di_8, di_20, di_21)
          use di_21
SZO_22: orig: SZO
    def:  SZO_22 = cond(di_21)
    uses: branch Test(NE,SZO_22) l0C00_0008
          use SCZO_16 | SZO_22
Mem23: orig: Mem0
    def:  Mem23[ds:0x0300:word16] = dx_15
ds:ds
    def:  def ds
si:si
    def:  def si
    uses: si_10 = PHI(si, si_13, si_13)
Mem0:Global memory
    def:  def Mem0
// fn0C00_0000
// Return size: 2
void fn0C00_0000()
fn0C00_0000_entry:
	def fp
	def dx
	def ds
	def si
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_4 = dx ^ dx
	SZO_5 = cond(dx_4)
	C_6 = false
	cx_7 = 0x0004
	di_8 = 0x0004
	// succ:  l0C00_0008
l0C00_0008:
	di_20 = PHI(di_8, di_20, di_21)
	cx_17 = PHI(cx_7, cx_18, cx_19)
	dx_14 = PHI(dx_4, dx_15, dx_15)
	si_10 = PHI(si, si_13, si_13)
	ax_12 = Mem0[ds:si_10:word16]
	si_13 = si_10 + 0x0002
	dx_15 = dx_14 + ax_12
	SCZO_16 = cond(dx_15)
	cx_18 = cx_17 - 0x0001
	branch cx_18 != 0x0000 l0C00_0008
	// succ:  l0C00_000D l0C00_0008
l0C00_000D:
	cx_19 = 0x0004
	di_21 = di_20 - 0x0001
	SZO_22 = cond(di_21)
	branch Test(NE,SZO_22) l0C00_0008
	// succ:  l0C00_0013 l0C00_0008
l0C00_0013:
	Mem23[ds:0x0300:word16] = dx_15
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_12
	use cx_19
	use di_21
	use ds_9
	use dx_15
	use SCZO_16 | SZO_22
	use si_13
	use sp_2

