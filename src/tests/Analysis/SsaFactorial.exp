fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_4 = sp_2 - 0x0002
cx_3: orig: cx
    def:  cx_3 = 0x0064
    uses: Mem6[ss:sp_4:word16] = cx_3
          call fn0C00_000F (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_4	defs: ax:ax_10,cx:cx_8,Flags:SCZO_11,sp:sp_7
sp_4: orig: sp
    def:  sp_4 = sp_2 - 0x0002
    uses: Mem6[ss:sp_4:word16] = cx_3
          call fn0C00_000F (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_4	defs: ax:ax_10,cx:cx_8,Flags:SCZO_11,sp:sp_7
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_4:word16] = cx_3
Mem6: orig: Mem0
    def:  Mem6[ss:sp_4:word16] = cx_3
sp_7: orig: sp
    def:  call fn0C00_000F (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_4	defs: ax:ax_10,cx:cx_8,Flags:SCZO_11,sp:sp_7
    uses: sp_12 = sp_7 + 0x0002
cx_8: orig: cx
    def:  call fn0C00_000F (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_4	defs: ax:ax_10,cx:cx_8,Flags:SCZO_11,sp:sp_7
    uses: use cx_8
ax:ax
    def:  def ax
    uses: call fn0C00_000F (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_4	defs: ax:ax_10,cx:cx_8,Flags:SCZO_11,sp:sp_7
ax_10: orig: ax
    def:  call fn0C00_000F (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_4	defs: ax:ax_10,cx:cx_8,Flags:SCZO_11,sp:sp_7
    uses: Mem15[ds:0x0064:word16] = ax_10
          use ax_10
SCZO_11: orig: SCZO
    def:  call fn0C00_000F (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_4	defs: ax:ax_10,cx:cx_8,Flags:SCZO_11,sp:sp_7
sp_12: orig: sp
    def:  sp_12 = sp_7 + 0x0002
    uses: SCZO_13 = cond(sp_12)
          use sp_12
SCZO_13: orig: SCZO
    def:  SCZO_13 = cond(sp_12)
    uses: use SCZO_13
          use SCZO_13
          use SCZO_13
          use SCZO_13
ds:ds
    def:  def ds
    uses: Mem15[ds:0x0064:word16] = ax_10
Mem15: orig: Mem0
    def:  Mem15[ds:0x0064:word16] = ax_10
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ss
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	cx_3 = 0x0064
	sp_4 = sp_2 - 0x0002
	Mem6[ss:sp_4:word16] = cx_3
	call fn0C00_000F (retsize: 2;)
		uses: ax:ax,cx:cx_3,sp:sp_4
		defs: ax:ax_10,cx:cx_8,Flags:SCZO_11,sp:sp_7
	sp_12 = sp_7 + 0x0002
	SCZO_13 = cond(sp_12)
	Mem15[ds:0x0064:word16] = ax_10
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_10
	use SCZO_13
	use cx_8
	use SCZO_13
	use SCZO_13
	use sp_12
	use SCZO_13

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_3 = sp_2 - 0x0002
sp_3: orig: sp
    def:  sp_3 = sp_2 - 0x0002
    uses: Mem6[ss:sp_3:word16] = bp
          bp_7 = sp_3
          sp_12 = sp_3 - 0x0002
          sp_29 = PHI(sp_21, sp_3)
bp:bp
    def:  def bp
    uses: Mem6[ss:sp_3:word16] = bp
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_3:word16] = bp
          ax_8 = Mem6[ss:bp_7 + 0x0004:word16]
          Mem13[ss:sp_12:word16] = ax_9
          dx_23 = Mem13[ss:bp_7 + 0x0004:word16]
          bp_31 = Mem30[ss:sp_29:word16]
          use ss
Mem6: orig: Mem0
    def:  Mem6[ss:sp_3:word16] = bp
    uses: ax_8 = Mem6[ss:bp_7 + 0x0004:word16]
          Mem30 = PHI(Mem13, Mem6)
bp_7: orig: bp
    def:  bp_7 = sp_3
    uses: ax_8 = Mem6[ss:bp_7 + 0x0004:word16]
          dx_23 = Mem13[ss:bp_7 + 0x0004:word16]
ax_8: orig: ax
    def:  ax_8 = Mem6[ss:bp_7 + 0x0004:word16]
    uses: ax_9 = ax_8 - 0x0001
ax_9: orig: ax
    def:  ax_9 = ax_8 - 0x0001
    uses: SZO_10 = cond(ax_9)
          Mem13[ss:sp_12:word16] = ax_9
          call fn0C00_000F (retsize: 2;)	uses: ax:ax_9,dx:dx,sp:sp_12	defs: ax:ax_15,dx:dx_17,Flags:SCZO_18,sp:sp_14
SZO_10: orig: SZO
    def:  SZO_10 = cond(ax_9)
    uses: branch Test(EQ,SZO_10) l0C00_0026
          O_37 = PHI(SCZO_27, SZO_10)
          S_38 = PHI(SCZO_27, SZO_10)
          Z_39 = PHI(SCZO_27, SZO_10)
ax_11: orig: ax
    def:  ax_11 = 0x0001
    uses: ax_33 = PHI(ax_26, ax_11)
sp_12: orig: sp
    def:  sp_12 = sp_3 - 0x0002
    uses: Mem13[ss:sp_12:word16] = ax_9
          call fn0C00_000F (retsize: 2;)	uses: ax:ax_9,dx:dx,sp:sp_12	defs: ax:ax_15,dx:dx_17,Flags:SCZO_18,sp:sp_14
Mem13: orig: Mem0
    def:  Mem13[ss:sp_12:word16] = ax_9
    uses: dx_23 = Mem13[ss:bp_7 + 0x0004:word16]
          Mem30 = PHI(Mem13, Mem6)
sp_14: orig: sp
    def:  call fn0C00_000F (retsize: 2;)	uses: ax:ax_9,dx:dx,sp:sp_12	defs: ax:ax_15,dx:dx_17,Flags:SCZO_18,sp:sp_14
    uses: sp_19 = sp_14 + 0x0001
ax_15: orig: ax
    def:  call fn0C00_000F (retsize: 2;)	uses: ax:ax_9,dx:dx,sp:sp_12	defs: ax:ax_15,dx:dx_17,Flags:SCZO_18,sp:sp_14
    uses: dx_ax_24 = dx_23 *s ax_15
dx:dx
    def:  def dx
    uses: call fn0C00_000F (retsize: 2;)	uses: ax:ax_9,dx:dx,sp:sp_12	defs: ax:ax_15,dx:dx_17,Flags:SCZO_18,sp:sp_14
          dx_36 = PHI(dx_25, dx)
dx_17: orig: dx
    def:  call fn0C00_000F (retsize: 2;)	uses: ax:ax_9,dx:dx,sp:sp_12	defs: ax:ax_15,dx:dx_17,Flags:SCZO_18,sp:sp_14
SCZO_18: orig: SCZO
    def:  call fn0C00_000F (retsize: 2;)	uses: ax:ax_9,dx:dx,sp:sp_12	defs: ax:ax_15,dx:dx_17,Flags:SCZO_18,sp:sp_14
sp_19: orig: sp
    def:  sp_19 = sp_14 + 0x0001
    uses: SZO_20 = cond(sp_19)
          sp_21 = sp_19 + 0x0001
SZO_20: orig: SZO
    def:  SZO_20 = cond(sp_19)
sp_21: orig: sp
    def:  sp_21 = sp_19 + 0x0001
    uses: SZO_22 = cond(sp_21)
          sp_29 = PHI(sp_21, sp_3)
SZO_22: orig: SZO
    def:  SZO_22 = cond(sp_21)
dx_23: orig: dx
    def:  dx_23 = Mem13[ss:bp_7 + 0x0004:word16]
    uses: dx_ax_24 = dx_23 *s ax_15
dx_ax_24: orig: dx_ax
    def:  dx_ax_24 = dx_23 *s ax_15
    uses: dx_25 = SLICE(dx_ax_24, word16, 16) (alias)
          ax_26 = (word16) dx_ax_24 (alias)
          SCZO_27 = cond(dx_ax_24)
dx_25: orig: dx
    def:  dx_25 = SLICE(dx_ax_24, word16, 16) (alias)
    uses: dx_36 = PHI(dx_25, dx)
ax_26: orig: ax
    def:  ax_26 = (word16) dx_ax_24 (alias)
    uses: ax_33 = PHI(ax_26, ax_11)
SCZO_27: orig: SCZO
    def:  SCZO_27 = cond(dx_ax_24)
    uses: C_34 = PHI(SCZO_27, C)
          O_37 = PHI(SCZO_27, SZO_10)
          S_38 = PHI(SCZO_27, SZO_10)
          Z_39 = PHI(SCZO_27, SZO_10)
sp_29: orig: sp
    def:  sp_29 = PHI(sp_21, sp_3)
    uses: bp_31 = Mem30[ss:sp_29:word16]
          sp_32 = sp_29 + 0x0002
Mem30: orig: Mem0
    def:  Mem30 = PHI(Mem13, Mem6)
    uses: bp_31 = Mem30[ss:sp_29:word16]
bp_31: orig: bp
    def:  bp_31 = Mem30[ss:sp_29:word16]
    uses: use bp_31
sp_32: orig: sp
    def:  sp_32 = sp_29 + 0x0002
    uses: use sp_32
ax_33: orig: ax
    def:  ax_33 = PHI(ax_26, ax_11)
    uses: use ax_33
C_34: orig: C
    def:  C_34 = PHI(SCZO_27, C)
    uses: use C_34
C:Flags
    def:  def C
    uses: C_34 = PHI(SCZO_27, C)
dx_36: orig: dx
    def:  dx_36 = PHI(dx_25, dx)
    uses: use dx_36
O_37: orig: O
    def:  O_37 = PHI(SCZO_27, SZO_10)
    uses: use O_37
S_38: orig: S
    def:  S_38 = PHI(SCZO_27, SZO_10)
    uses: use S_38
Z_39: orig: Z
    def:  Z_39 = PHI(SCZO_27, SZO_10)
    uses: use Z_39
// fn0C00_000F
// Return size: 2
define fn0C00_000F
fn0C00_000F_entry:
	def fp
	def bp
	def ss
	def dx
	def C
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	sp_3 = sp_2 - 0x0002
	Mem6[ss:sp_3:word16] = bp
	bp_7 = sp_3
	ax_8 = Mem6[ss:bp_7 + 0x0004:word16]
	ax_9 = ax_8 - 0x0001
	SZO_10 = cond(ax_9)
	branch Test(EQ,SZO_10) l0C00_0026
	// succ:  l0C00_0018 l0C00_0026
l0C00_0018:
	sp_12 = sp_3 - 0x0002
	Mem13[ss:sp_12:word16] = ax_9
	call fn0C00_000F (retsize: 2;)
		uses: ax:ax_9,dx:dx,sp:sp_12
		defs: ax:ax_15,dx:dx_17,Flags:SCZO_18,sp:sp_14
	sp_19 = sp_14 + 0x0001
	SZO_20 = cond(sp_19)
	sp_21 = sp_19 + 0x0001
	SZO_22 = cond(sp_21)
	dx_23 = Mem13[ss:bp_7 + 0x0004:word16]
	dx_ax_24 = dx_23 *s ax_15
	dx_25 = SLICE(dx_ax_24, word16, 16) (alias)
	ax_26 = (word16) dx_ax_24 (alias)
	SCZO_27 = cond(dx_ax_24)
	goto l0C00_0029
	// succ:  l0C00_0029
l0C00_0026:
	ax_11 = 0x0001
	// succ:  l0C00_0029
l0C00_0029:
	Z_39 = PHI(SCZO_27, SZO_10)
	S_38 = PHI(SCZO_27, SZO_10)
	O_37 = PHI(SCZO_27, SZO_10)
	dx_36 = PHI(dx_25, dx)
	C_34 = PHI(SCZO_27, C)
	ax_33 = PHI(ax_26, ax_11)
	Mem30 = PHI(Mem13, Mem6)
	sp_29 = PHI(sp_21, sp_3)
	bp_31 = Mem30[ss:sp_29:word16]
	sp_32 = sp_29 + 0x0002
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:
	use ax_33
	use bp_31
	use C_34
	use dx_36
	use O_37
	use S_38
	use sp_32
	use ss
	use Z_39

