fp:fp
sp_2: orig: sp
bx:bx
    def:  def bx
    uses: branch bx == 0x0000 l0C00_0013
          branch bx > 0x0000 l0C00_000D
SCZO_4: orig: SCZO
ax:ax
ax_6: orig: ax
    def:  ax_6 = 0x0000
    uses: ax_11 = PHI(ax_10, ax_6, ax_9)
SZO_7: orig: SZO
C_8: orig: C
ax_9: orig: ax
    def:  ax_9 = 0x0001
    uses: ax_11 = PHI(ax_10, ax_6, ax_9)
ax_10: orig: ax
    def:  ax_10 = 0xFFFF
    uses: ax_11 = PHI(ax_10, ax_6, ax_9)
ax_11: orig: ax
    def:  ax_11 = PHI(ax_10, ax_6, ax_9)
    uses: Mem14[ds:0x0100:word16] = ax_11
ds_12: orig: ds
    def:  ds_12 = PHI(ds, ds, ds)
ds:ds
    def:  def ds
    uses: Mem14[ds:0x0100:word16] = ax_11
Mem14: orig: Mem0
    def:  Mem14[ds:0x0100:word16] = ax_11
C_15: orig: C
O_16: orig: O
S_17: orig: S
Z_19: orig: Z
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	def bx
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	branch bx == 0x0000 l0C00_0013
	// succ:  l0C00_0005 l0C00_0013
l0C00_0005:
	branch bx > 0x0000 l0C00_000D
	// succ:  l0C00_0007 l0C00_000D
l0C00_0007:
	ax_10 = 0xFFFF
	goto l0C00_0015
	// succ:  l0C00_0015
l0C00_000D:
	ax_9 = 0x0001
	goto l0C00_0015
	// succ:  l0C00_0015
l0C00_0013:
	ax_6 = 0x0000
	// succ:  l0C00_0015
l0C00_0015:
	ax_11 = PHI(ax_10, ax_6, ax_9)
	Mem14[ds:0x0100:word16] = ax_11
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
