fp:fp
    def:  def fp
    uses: sp_1 = fp
sp_1: orig: sp
    def:  sp_1 = fp
    uses: use sp_1
ax_2: orig: ax
    def:  ax_2 = 0x0000
    uses: SCZO_8 = cond(ax_2 - bx)
          use ax_2
SZO_3: orig: SZO
    def:  SZO_3 = cond(0x0000)
C_4: orig: C
    def:  C_4 = false
SCZO_8: orig: SCZO
    def:  SCZO_8 = cond(ax_2 - bx)
    uses: branch Test(LT,SCZO_8) l0C00_0005
          use SCZO_8
          use SCZO_8
          use SCZO_8
bx:bx
    def:  def bx
    uses: SCZO_8 = cond(ax_2 - bx)
si_13: orig: si
    def:  si_13 = Mem0[ds:0x0300:word16]
    uses: si_16 = si_13 | si_13
          si_16 = si_13 | si_13
ds:ds
    def:  def ds
    uses: si_13 = Mem0[ds:0x0300:word16]
Mem0:Global memory
    def:  def Mem0
    uses: si_13 = Mem0[ds:0x0300:word16]
si_16: orig: si
    def:  si_16 = si_13 | si_13
    uses: SZO_17 = cond(si_16)
          ax_22 = ax_5 + Mem11[ds_9:si_16:word16]
si:si
    def:  def si
SZO_17: orig: SZO
    def:  SZO_17 = cond(si_16)
    uses: branch Test(EQ,SZO_17) l0C00_0012
C_18: orig: C
    def:  C_18 = false
si_19: orig: si
    def:  si_19 = Mem11[ds_9:0x0302:word16]
    uses: ax_20 = ax_5 + Mem11[ds_9:si_19 + 0x0004:word16]
ax_20: orig: ax
    def:  ax_20 = ax_5 + Mem11[ds_9:si_19 + 0x0004:word16]
    uses: SCZO_21 = cond(ax_20)
SCZO_21: orig: SCZO
    def:  SCZO_21 = cond(ax_20)
ax_22: orig: ax
    def:  ax_22 = ax_5 + Mem11[ds_9:si_16:word16]
    uses: SCZO_23 = cond(ax_22)
SCZO_23: orig: SCZO
    def:  SCZO_23 = cond(ax_22)
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	def fp
	def bx
	def ds
	def Mem0
	def si
	// succ:  l0C00_0000
l0C00_0000:
	sp_1 = fp
	ax_2 = 0x0000
	SZO_3 = cond(0x0000)
	C_4 = false
	goto l0C00_0019
	// succ:  l0C00_0019
l0C00_0005:
	si_13 = Mem0[ds:0x0300:word16]
	si_16 = si_13 | si_13
	SZO_17 = cond(si_16)
	C_18 = false
	branch Test(EQ,SZO_17) l0C00_0012
	// succ:  l0C00_000D l0C00_0012
l0C00_000D:
	ax_22 = ax_5 + Mem11[ds_9:si_16:word16]
	SCZO_23 = cond(ax_22)
	goto l0C00_0019
	// succ:  l0C00_0019
l0C00_0012:
	si_19 = Mem11[ds_9:0x0302:word16]
	ax_20 = ax_5 + Mem11[ds_9:si_19 + 0x0004:word16]
	SCZO_21 = cond(ax_20)
	// succ:  l0C00_0019
l0C00_0019:
	SCZO_8 = cond(ax_2 - bx)
	branch Test(LT,SCZO_8) l0C00_0005
	// succ:  l0C00_001D l0C00_0005
l0C00_001D:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_2
	use SCZO_8
	use si_14
	use sp_1

