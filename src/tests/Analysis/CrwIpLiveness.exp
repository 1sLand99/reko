void fn0C00_0000(Register selector ds)
// MayUse:  ds:16
// LiveOut:
// Trashed: ax bx C di O S si Top Z
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Global
// fp:fp
// sp:sp
// di:di
// ds:ds
// si:si
// ax:ax
// bx:bx
// Top:Top
// C:C
// O:O
// S:S
// Z:Z
// return address size: 2
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	di_6 = Mem0[ds:0x0100:word16]
	si_7 = Mem0[ds:di_6:word16]
	ax_8 = fn0C00_0026(si_7, ds)
	Mem14[ds:di_6 + 0x0002:word16] = ax_8
	bx_15 = Mem14[ds:0x0102:word16]
	si_16 = Mem14[ds:bx_15 + 0x0004:word16]
	ax_17 = fn0C00_0026(si_16, ds)
	Mem23[ds:bx_15 + 0x0008:word16] = ax_17
	di_24 = Mem23[ds:0x0104:word16]
	si_25 = Mem23[ds:di_24:word16]
	ax_26 = fn0C00_0033(si_25, ds)
	Mem32[ds:di_24 + 0x0002:word16] = ax_26
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
Register word16 fn0C00_0026(Register word16 si, Register selector ds)
// MayUse:  ds:16 si:16
// LiveOut: ax
// Trashed: ax C O S Top Z
// Preserved: di sp
// fn0C00_0026
// Return size: 0
// Mem0:Global
// fp:fp
// sp:sp
// di:di
// ss:ss
// ds:ds
// v6:v6
// SZO:SZO
// Top:Top
// si:si
// ax:ax
// C:C
// O:O
// S:S
// Z:Z
// wLoc02:Local -0002
// return address size: 2
word16 fn0C00_0026(word16 si, selector ds)
fn0C00_0026_entry:
	def ds
	def si
	// succ:  l0C00_0026
l0C00_0026:
	di_9 = Mem7[ds:0x0104:word16]
	v6_10 = Mem7[ds:di_9 + 0x0030:word16] + 0x0001
	Mem11[ds:di_9 + 0x0030:word16] = v6_10
	ax_14 = fn0C00_0033(si, ds)
	return ax_14
	// succ:  fn0C00_0026_exit
fn0C00_0026_exit:
Register word16 fn0C00_0033(Register word16 si, Register selector ds)
// MayUse:  ds:16 si:16
// LiveOut: ax
// Trashed: ax C O S Top Z
// Preserved: sp
// fn0C00_0033
// Return size: 0
// Mem0:Global
// fp:fp
// sp:sp
// ax:ax
// si:si
// ds:ds
// SCZO:SCZO
// Top:Top
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
word16 fn0C00_0033(word16 si, selector ds)
fn0C00_0033_entry:
	def ds
	def si
	def Mem0
	// succ:  l0C00_0033
l0C00_0033:
	ax_7 = Mem0[ds:si:word16]
	ax_8 = ax_7 * 0x0002
	return ax_8
	// succ:  fn0C00_0033_exit
fn0C00_0033_exit:
