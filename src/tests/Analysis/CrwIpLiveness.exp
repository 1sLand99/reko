void fn0C00_0000(Register selector ds)
// MayUse:  ds:16
// LiveOut:
// Trashed: SCZO ax bx di si
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// di:di
// ds:ds
// si:si
// ax:ax
// bx:bx
// S:Flags
// C:Flags
// Z:Flags
// O:Flags
// return address size: 2
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	di_5 = Mem0[ds:0x0100:word16]
	si_6 = Mem0[ds:di_5:word16]
	ax_7 = fn0C00_0026(si_6, ds)
	Mem12[ds:di_5 + 0x0002:word16] = ax_7
	bx_13 = Mem12[ds:0x0102:word16]
	si_14 = Mem12[ds:bx_13 + 0x0004:word16]
	ax_15 = fn0C00_0026(si_14, ds)
	Mem20[ds:bx_13 + 0x0008:word16] = ax_15
	di_21 = Mem20[ds:0x0104:word16]
	si_22 = Mem20[ds:di_21:word16]
	ax_23 = fn0C00_0033(si_22, ds)
	Mem28[ds:di_21 + 0x0002:word16] = ax_23
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
Register word16 fn0C00_0026(Register word16 si, Register selector ds)
// MayUse:  ds:16 si:0
// LiveOut: ax
// Trashed: SCZO ax
// Preserved: di sp
// fn0C00_0026
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// di:di
// ss:ss
// ds:ds
// v6:v6
// SZO:Flags
// si:si
// ax:ax
// S:Flags
// C:Flags
// Z:Flags
// O:Flags
// wLoc02:Local -0002
// return address size: 2
word16 fn0C00_0026(word16 si, selector ds)
fn0C00_0026_entry:
	def ds
	def si
	// succ:  l0C00_0026
l0C00_0026:
	di_8 = Mem6[ds:0x0104:word16]
	v6_9 = Mem6[ds:di_8 + 0x0030:word16] + 0x0001
	Mem10[ds:di_8 + 0x0030:word16] = v6_9
	ax_13 = fn0C00_0033(si, ds)
	return ax_13
	// succ:  fn0C00_0026_exit
fn0C00_0026_exit:
Register word16 fn0C00_0033(Register word16 si, Register selector ds)
// MayUse:  ds:16 si:16
// LiveOut: ax
// Trashed: SCZO ax
// Preserved: sp
// fn0C00_0033
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// ax:ax
// si:si
// ds:ds
// SCZO:Flags
// S:Flags
// C:Flags
// Z:Flags
// O:Flags
// return address size: 2
word16 fn0C00_0033(word16 si, selector ds)
fn0C00_0033_entry:
	def ds
	def si
	def Mem0
	// succ:  l0C00_0033
l0C00_0033:
	ax_6 = Mem0[ds:si:word16]
	ax_7 = ax_6 * 0x0002
	return ax_7
	// succ:  fn0C00_0033_exit
fn0C00_0033_exit:
