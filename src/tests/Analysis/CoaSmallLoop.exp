fp:fp
sp_2: orig: sp
Top_3: orig: Top
ax:ax
ax_5: orig: ax
    def:  ax_5 = 0x0000
    uses: ax_12 = PHI(ax_5, ax_16)
SZO_6: orig: SZO
C_7: orig: C
ds:ds
    def:  def ds
    uses: cx_11 = Mem0[ds:bx:word16]
          Mem20[ds:0x0300:word16] = ax_16
bx:bx
    def:  def bx
    uses: cx_11 = Mem0[ds:bx:word16]
Mem0:Global memory
    def:  def Mem0
    uses: cx_11 = Mem0[ds:bx:word16]
cx_11: orig: cx
    def:  cx_11 = Mem0[ds:bx:word16]
    uses: cx_13 = PHI(cx_11, cx_18)
ax_12: orig: ax
    def:  ax_12 = PHI(ax_5, ax_16)
    uses: ax_16 = ax_12 + cx_13 + cx_13
cx_13: orig: cx
    def:  cx_13 = PHI(cx_11, cx_18)
    uses: ax_16 = ax_12 + cx_13 + cx_13
          ax_16 = ax_12 + cx_13 + cx_13
          cx_18 = cx_13 - 0x0001
ax_14: orig: ax
SCZO_15: orig: SCZO
ax_16: orig: ax
    def:  ax_16 = ax_12 + cx_13 + cx_13
    uses: Mem20[ds:0x0300:word16] = ax_16
          ax_12 = PHI(ax_5, ax_16)
SCZO_17: orig: SCZO
cx_18: orig: cx
    def:  cx_18 = cx_13 - 0x0001
    uses: branch cx_18 != 0x0000 l0C00_0004
          cx_13 = PHI(cx_11, cx_18)
ds_19: orig: ds
    def:  ds_19 = PHI(ds, ds_19)
Mem20: orig: Mem0
    def:  Mem20[ds:0x0300:word16] = ax_16
C_21: orig: C
O_22: orig: O
S_23: orig: S
Z_26: orig: Z
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	def ds
	def bx
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	ax_5 = 0x0000
	cx_11 = Mem0[ds:bx:word16]
	// succ:  l0C00_0004
l0C00_0004:
	cx_13 = PHI(cx_11, cx_18)
	ax_12 = PHI(ax_5, ax_16)
	ax_16 = ax_12 + cx_13 + cx_13
	cx_18 = cx_13 - 0x0001
	branch cx_18 != 0x0000 l0C00_0004
	// succ:  l0C00_000A l0C00_0004
l0C00_000A:
	Mem20[ds:0x0300:word16] = ax_16
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

