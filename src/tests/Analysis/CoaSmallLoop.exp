fp:fp
sp_2: orig: sp
ax_3: orig: ax
    def:  ax_3 = 0x0000
    uses: ax_10 = PHI(ax_3, ax_13)
SZO_4: orig: SZO
C_5: orig: C
ds:ds
    def:  def ds
    uses: cx_9 = Mem0[ds:bx:word16]
          Mem17[ds:0x0300:word16] = ax_13
bx:bx
    def:  def bx
    uses: cx_9 = Mem0[ds:bx:word16]
Mem0:Global memory
    def:  def Mem0
    uses: cx_9 = Mem0[ds:bx:word16]
cx_9: orig: cx
    def:  cx_9 = Mem0[ds:bx:word16]
    uses: cx_11 = PHI(cx_9, cx_15)
ax_10: orig: ax
    def:  ax_10 = PHI(ax_3, ax_13)
    uses: ax_13 = ax_10 + cx_11 + cx_11
cx_11: orig: cx
    def:  cx_11 = PHI(cx_9, cx_15)
    uses: ax_13 = ax_10 + cx_11 + cx_11
          ax_13 = ax_10 + cx_11 + cx_11
          cx_15 = cx_11 - 0x0001
ax_12: orig: ax
ax_13: orig: ax
    def:  ax_13 = ax_10 + cx_11 + cx_11
    uses: Mem17[ds:0x0300:word16] = ax_13
          ax_10 = PHI(ax_3, ax_13)
SCZO_14: orig: SCZO
cx_15: orig: cx
    def:  cx_15 = cx_11 - 0x0001
    uses: branch cx_15 != 0x0000 l0C00_0004
          cx_11 = PHI(cx_9, cx_15)
ds_16: orig: ds
    def:  ds_16 = PHI(ds, ds_16)
Mem17: orig: Mem0
    def:  Mem17[ds:0x0300:word16] = ax_13
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	def ds
	def bx
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	ax_3 = 0x0000
	cx_9 = Mem0[ds:bx:word16]
	// succ:  l0C00_0004
l0C00_0004:
	cx_11 = PHI(cx_9, cx_15)
	ax_10 = PHI(ax_3, ax_13)
	ax_13 = ax_10 + cx_11 + cx_11
	cx_15 = cx_11 - 0x0001
	branch cx_15 != 0x0000 l0C00_0004
	// succ:  l0C00_000A l0C00_0004
l0C00_000A:
	Mem17[ds:0x0300:word16] = ax_13
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

