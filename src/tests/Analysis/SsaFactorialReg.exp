fp:fp
    def:  def fp
    uses: sp_1 = fp
sp_1: orig: sp
    def:  sp_1 = fp
    uses: use sp_1
cx_2: orig: cx
    def:  cx_2 = 0x0005
    uses: ax_3 = fn0C00_000B(cx_2)
          use cx_2
ax_3: orig: ax
    def:  ax_3 = fn0C00_000B(cx_2)
    uses: Mem5[ds:0x0064:word16] = ax_3
          use ax_3
ds:ds
    def:  def ds
    uses: Mem5[ds:0x0064:word16] = ax_3
Mem5: orig: Mem0
    def:  Mem5[ds:0x0064:word16] = ax_3
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_1 = fp
	cx_2 = 0x0005
	ax_3 = fn0C00_000B(cx_2)
	Mem5[ds:0x0064:word16] = ax_3
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_3
	use cx_2
	use sp_1

fp:fp
    def:  def fp
    uses: sp_1 = fp
          sp_2 = fp - 0x0002
          sp_20 = fp
sp_1: orig: sp
    def:  sp_1 = fp
sp_2: orig: sp
    def:  sp_2 = fp - 0x0002
si:si
    def:  def si
    uses: wLoc02_4 = si
          si_18 = PHI(si_8, si)
wLoc02_4: orig: wLoc02
    def:  wLoc02_4 = si
    uses: si_17 = wLoc02_4
cx:cx
    def:  def cx
    uses: SCZO_6 = cond(cx - 0x0001)
          si_8 = cx
          cx_9 = cx - 0x0001
          cx_23 = PHI(cx_9, cx)
SCZO_6: orig: SCZO
    def:  SCZO_6 = cond(cx - 0x0001)
    uses: branch Test(LE,SCZO_6) l0C00_001C
          S_26 = PHI(SCZO_15, SCZO_6)
          C_27 = PHI(SCZO_15, SCZO_6)
          Z_28 = PHI(SCZO_15, SCZO_6)
          O_29 = PHI(SCZO_15, SCZO_6)
ax_7: orig: ax
    def:  ax_7 = 0x0001
    uses: ax_22 = PHI(ax_14, ax_7)
si_8: orig: si
    def:  si_8 = cx
    uses: dx_ax_12 = si_8 *s ax_11
          si_18 = PHI(si_8, si)
cx_9: orig: cx
    def:  cx_9 = cx - 0x0001
    uses: SZO_10 = cond(cx_9)
          ax_11 = fn0C00_000B(cx_9)
          cx_23 = PHI(cx_9, cx)
SZO_10: orig: SZO
    def:  SZO_10 = cond(cx_9)
ax_11: orig: ax
    def:  ax_11 = fn0C00_000B(cx_9)
    uses: dx_ax_12 = si_8 *s ax_11
dx_ax_12: orig: dx_ax
    def:  dx_ax_12 = si_8 *s ax_11
    uses: dx_13 = SLICE(dx_ax_12, word16, 16) (alias)
          ax_14 = (word16) dx_ax_12 (alias)
          SCZO_15 = cond(dx_ax_12)
dx_13: orig: dx
    def:  dx_13 = SLICE(dx_ax_12, word16, 16) (alias)
    uses: dx_24 = PHI(dx_13, dx)
ax_14: orig: ax
    def:  ax_14 = (word16) dx_ax_12 (alias)
    uses: ax_22 = PHI(ax_14, ax_7)
SCZO_15: orig: SCZO
    def:  SCZO_15 = cond(dx_ax_12)
    uses: S_26 = PHI(SCZO_15, SCZO_6)
          C_27 = PHI(SCZO_15, SCZO_6)
          Z_28 = PHI(SCZO_15, SCZO_6)
          O_29 = PHI(SCZO_15, SCZO_6)
si_17: orig: si
    def:  si_17 = wLoc02_4
    uses: use si_17
si_18: orig: si
    def:  si_18 = PHI(si_8, si)
sp_20: orig: sp
    def:  sp_20 = fp
    uses: use sp_20
ax_22: orig: ax
    def:  ax_22 = PHI(ax_14, ax_7)
    uses: return ax_22
          use ax_22
cx_23: orig: cx
    def:  cx_23 = PHI(cx_9, cx)
    uses: use cx_23
dx_24: orig: dx
    def:  dx_24 = PHI(dx_13, dx)
    uses: use dx_24
dx:dx
    def:  def dx
    uses: dx_24 = PHI(dx_13, dx)
S_26: orig: S
    def:  S_26 = PHI(SCZO_15, SCZO_6)
    uses: use C_27 | O_29 | S_26 | Z_28
C_27: orig: C
    def:  C_27 = PHI(SCZO_15, SCZO_6)
    uses: use C_27 | O_29 | S_26 | Z_28
Z_28: orig: Z
    def:  Z_28 = PHI(SCZO_15, SCZO_6)
    uses: use C_27 | O_29 | S_26 | Z_28
O_29: orig: O
    def:  O_29 = PHI(SCZO_15, SCZO_6)
    uses: use C_27 | O_29 | S_26 | Z_28
// fn0C00_000B
// Return size: 0
word16 fn0C00_000B(word16 cx)
fn0C00_000B_entry:
	def fp
	def si
	def cx
	def dx
	// succ:  l0C00_000B
l0C00_000B:
	sp_1 = fp
	sp_2 = fp - 0x0002
	wLoc02_4 = si
	SCZO_6 = cond(cx - 0x0001)
	branch Test(LE,SCZO_6) l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	si_8 = cx
	cx_9 = cx - 0x0001
	SZO_10 = cond(cx_9)
	ax_11 = fn0C00_000B(cx_9)
	dx_ax_12 = si_8 *s ax_11
	dx_13 = SLICE(dx_ax_12, word16, 16) (alias)
	ax_14 = (word16) dx_ax_12 (alias)
	SCZO_15 = cond(dx_ax_12)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_7 = 0x0001
	// succ:  l0C00_001F
l0C00_001F:
	O_29 = PHI(SCZO_15, SCZO_6)
	Z_28 = PHI(SCZO_15, SCZO_6)
	C_27 = PHI(SCZO_15, SCZO_6)
	S_26 = PHI(SCZO_15, SCZO_6)
	dx_24 = PHI(dx_13, dx)
	cx_23 = PHI(cx_9, cx)
	ax_22 = PHI(ax_14, ax_7)
	si_18 = PHI(si_8, si)
	si_17 = wLoc02_4
	sp_20 = fp
	return ax_22
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
	use ax_22
	use cx_23
	use dx_24
	use C_27 | O_29 | S_26 | Z_28
	use si_17
	use sp_20

