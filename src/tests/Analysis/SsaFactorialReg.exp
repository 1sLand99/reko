fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_4,sp:sp_2	defs: ax:ax_8,cx:cx_6,sp:sp_5
Top_3: orig: Top
    def:  Top_3 = 0
    uses: use Top_3
cx_4: orig: cx
    def:  cx_4 = 0x0005
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_4,sp:sp_2	defs: ax:ax_8,cx:cx_6,sp:sp_5
sp_5: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_4,sp:sp_2	defs: ax:ax_8,cx:cx_6,sp:sp_5
    uses: use sp_5
cx_6: orig: cx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_4,sp:sp_2	defs: ax:ax_8,cx:cx_6,sp:sp_5
    uses: use cx_6
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_4,sp:sp_2	defs: ax:ax_8,cx:cx_6,sp:sp_5
ax_8: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_4,sp:sp_2	defs: ax:ax_8,cx:cx_6,sp:sp_5
    uses: Mem10[ds:0x0064:word16] = ax_8
          use ax_8
ds:ds
    def:  def ds
    uses: Mem10[ds:0x0064:word16] = ax_8
Mem10: orig: Mem0
    def:  Mem10[ds:0x0064:word16] = ax_8
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0
	cx_4 = 0x0005
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,cx:cx_4,sp:sp_2
		defs: ax:ax_8,cx:cx_6,sp:sp_5
	Mem10[ds:0x0064:word16] = ax_8
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_8
	use cx_6
	use sp_5
	use Top_3

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_4 = sp_2 - 0x0002
Top_3: orig: Top
    def:  Top_3 = 0
    uses: use Top_3
sp_4: orig: sp
    def:  sp_4 = sp_2 - 0x0002
    uses: Mem7[ss:sp_4:word16] = si
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_13,sp:sp_4	defs: ax:ax_18,cx:cx_16,SCZO:SCZO_19,sp:sp_15
          sp_25 = PHI(sp_15, sp_4)
si:si
    def:  def si
    uses: Mem7[ss:sp_4:word16] = si
ss:ss
    def:  def ss
    uses: Mem7[ss:sp_4:word16] = si
          si_27 = Mem7[ss:sp_25:word16]
          use ss
Mem7: orig: Mem0
    def:  Mem7[ss:sp_4:word16] = si
    uses: si_27 = Mem7[ss:sp_25:word16]
cx:cx
    def:  def cx
    uses: SCZO_9 = cond(cx - 0x0001)
          si_12 = cx
          cx_13 = cx - 0x0001
          cx_33 = PHI(cx_16, cx)
SCZO_9: orig: SCZO
    def:  SCZO_9 = cond(cx - 0x0001)
    uses: SZO_10 = SLICE(SCZO_9, bool, 4) (alias)
          C_32 = SLICE(SCZO_9, bool, 1) (alias)
          O_38 = SLICE(SCZO_9, bool, 4) (alias)
          S_41 = SLICE(SCZO_9, bool, 0) (alias)
          Z_45 = SLICE(SCZO_9, bool, 2) (alias)
SZO_10: orig: SZO
    def:  SZO_10 = SLICE(SCZO_9, bool, 4) (alias)
    uses: branch Test(LE,SZO_10) l0C00_001C
ax_11: orig: ax
    def:  ax_11 = 0x0001
    uses: ax_29 = PHI(ax_22, ax_11)
si_12: orig: si
    def:  si_12 = cx
    uses: dx_ax_20 = si_12 *s ax_18
cx_13: orig: cx
    def:  cx_13 = cx - 0x0001
    uses: SZO_14 = cond(cx_13)
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_13,sp:sp_4	defs: ax:ax_18,cx:cx_16,SCZO:SCZO_19,sp:sp_15
SZO_14: orig: SZO
    def:  SZO_14 = cond(cx_13)
sp_15: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_13,sp:sp_4	defs: ax:ax_18,cx:cx_16,SCZO:SCZO_19,sp:sp_15
    uses: sp_25 = PHI(sp_15, sp_4)
cx_16: orig: cx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_13,sp:sp_4	defs: ax:ax_18,cx:cx_16,SCZO:SCZO_19,sp:sp_15
    uses: cx_33 = PHI(cx_16, cx)
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_13,sp:sp_4	defs: ax:ax_18,cx:cx_16,SCZO:SCZO_19,sp:sp_15
ax_18: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_13,sp:sp_4	defs: ax:ax_18,cx:cx_16,SCZO:SCZO_19,sp:sp_15
    uses: dx_ax_20 = si_12 *s ax_18
SCZO_19: orig: SCZO
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_13,sp:sp_4	defs: ax:ax_18,cx:cx_16,SCZO:SCZO_19,sp:sp_15
dx_ax_20: orig: dx_ax
    def:  dx_ax_20 = si_12 *s ax_18
    uses: dx_21 = SLICE(dx_ax_20, word16, 16) (alias)
          ax_22 = (word16) dx_ax_20 (alias)
          SCZO_23 = cond(dx_ax_20)
dx_21: orig: dx
    def:  dx_21 = SLICE(dx_ax_20, word16, 16) (alias)
    uses: dx_34 = PHI(dx_21, dx)
ax_22: orig: ax
    def:  ax_22 = (word16) dx_ax_20 (alias)
    uses: ax_29 = PHI(ax_22, ax_11)
SCZO_23: orig: SCZO
    def:  SCZO_23 = cond(dx_ax_20)
    uses: C_31 = SLICE(SCZO_23, bool, 1) (alias)
          O_37 = SLICE(SCZO_23, bool, 4) (alias)
          S_40 = SLICE(SCZO_23, bool, 0) (alias)
          Z_44 = SLICE(SCZO_23, bool, 2) (alias)
sp_25: orig: sp
    def:  sp_25 = PHI(sp_15, sp_4)
    uses: si_27 = Mem7[ss:sp_25:word16]
          sp_28 = sp_25 + 0x0002
si_27: orig: si
    def:  si_27 = Mem7[ss:sp_25:word16]
    uses: use si_27
sp_28: orig: sp
    def:  sp_28 = sp_25 + 0x0002
    uses: use sp_28
ax_29: orig: ax
    def:  ax_29 = PHI(ax_22, ax_11)
    uses: use ax_29
C_30: orig: C
    def:  C_30 = PHI(C_31, C_32)
    uses: use C_30
C_31: orig: C
    def:  C_31 = SLICE(SCZO_23, bool, 1) (alias)
    uses: C_30 = PHI(C_31, C_32)
C_32: orig: C
    def:  C_32 = SLICE(SCZO_9, bool, 1) (alias)
    uses: C_30 = PHI(C_31, C_32)
cx_33: orig: cx
    def:  cx_33 = PHI(cx_16, cx)
    uses: use cx_33
dx_34: orig: dx
    def:  dx_34 = PHI(dx_21, dx)
    uses: use dx_34
dx:dx
    def:  def dx
    uses: dx_34 = PHI(dx_21, dx)
O_36: orig: O
    def:  O_36 = PHI(O_37, O_38)
    uses: use O_36
O_37: orig: O
    def:  O_37 = SLICE(SCZO_23, bool, 4) (alias)
    uses: O_36 = PHI(O_37, O_38)
O_38: orig: O
    def:  O_38 = SLICE(SCZO_9, bool, 4) (alias)
    uses: O_36 = PHI(O_37, O_38)
S_39: orig: S
    def:  S_39 = PHI(S_40, S_41)
    uses: use S_39
S_40: orig: S
    def:  S_40 = SLICE(SCZO_23, bool, 0) (alias)
    uses: S_39 = PHI(S_40, S_41)
S_41: orig: S
    def:  S_41 = SLICE(SCZO_9, bool, 0) (alias)
    uses: S_39 = PHI(S_40, S_41)
Z_43: orig: Z
    def:  Z_43 = PHI(Z_44, Z_45)
    uses: use Z_43
Z_44: orig: Z
    def:  Z_44 = SLICE(SCZO_23, bool, 2) (alias)
    uses: Z_43 = PHI(Z_44, Z_45)
Z_45: orig: Z
    def:  Z_45 = SLICE(SCZO_9, bool, 2) (alias)
    uses: Z_43 = PHI(Z_44, Z_45)
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	def si
	def ss
	def cx
	def ax
	def dx
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	Top_3 = 0
	sp_4 = sp_2 - 0x0002
	Mem7[ss:sp_4:word16] = si
	SCZO_9 = cond(cx - 0x0001)
	SZO_10 = SLICE(SCZO_9, bool, 4) (alias)
	C_32 = SLICE(SCZO_9, bool, 1) (alias)
	O_38 = SLICE(SCZO_9, bool, 4) (alias)
	S_41 = SLICE(SCZO_9, bool, 0) (alias)
	Z_45 = SLICE(SCZO_9, bool, 2) (alias)
	branch Test(LE,SZO_10) l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	si_12 = cx
	cx_13 = cx - 0x0001
	SZO_14 = cond(cx_13)
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,cx:cx_13,sp:sp_4
		defs: ax:ax_18,cx:cx_16,SCZO:SCZO_19,sp:sp_15
	dx_ax_20 = si_12 *s ax_18
	dx_21 = SLICE(dx_ax_20, word16, 16) (alias)
	ax_22 = (word16) dx_ax_20 (alias)
	SCZO_23 = cond(dx_ax_20)
	C_31 = SLICE(SCZO_23, bool, 1) (alias)
	O_37 = SLICE(SCZO_23, bool, 4) (alias)
	S_40 = SLICE(SCZO_23, bool, 0) (alias)
	Z_44 = SLICE(SCZO_23, bool, 2) (alias)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_11 = 0x0001
	// succ:  l0C00_001F
l0C00_001F:
	Z_43 = PHI(Z_44, Z_45)
	S_39 = PHI(S_40, S_41)
	O_36 = PHI(O_37, O_38)
	dx_34 = PHI(dx_21, dx)
	cx_33 = PHI(cx_16, cx)
	C_30 = PHI(C_31, C_32)
	ax_29 = PHI(ax_22, ax_11)
	sp_25 = PHI(sp_15, sp_4)
	si_27 = Mem7[ss:sp_25:word16]
	sp_28 = sp_25 + 0x0002
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
	use ax_29
	use C_30
	use cx_33
	use dx_34
	use O_36
	use S_39
	use si_27
	use sp_28
	use ss
	use Top_3
	use Z_43

