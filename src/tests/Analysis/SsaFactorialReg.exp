fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2	defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
cx_3: orig: cx
    def:  cx_3 = 0x0005
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2	defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
sp_4: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2	defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
    uses: use sp_4
cx_5: orig: cx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2	defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
    uses: use cx_5
ds:ds
    def:  def ds
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2	defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
ds_7: orig: ds
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2	defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
    uses: Mem10[ds_7:0x0064:word16] = ax_9
          use ds_7
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2	defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
ax_9: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2	defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
    uses: Mem10[ds_7:0x0064:word16] = ax_9
          use ax_9
Mem10: orig: Mem0
    def:  Mem10[ds_7:0x0064:word16] = ax_9
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ds
	def ax
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	cx_3 = 0x0005
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,cx:cx_3,ds:ds,sp:sp_2
		defs: ax:ax_9,cx:cx_5,ds:ds_7,sp:sp_4
	Mem10[ds_7:0x0064:word16] = ax_9
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_9
	use cx_5
	use ds_7
	use sp_4

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_3 = sp_2 - 0x0002
sp_3: orig: sp
    def:  sp_3 = sp_2 - 0x0002
    uses: Mem6[ss:sp_3:word16] = si
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
          sp_25 = PHI(sp_13, sp_3)
si:si
    def:  def si
    uses: Mem6[ss:sp_3:word16] = si
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_3:word16] = si
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
          ss_24 = PHI(ss_15, ss)
Mem6: orig: Mem0
    def:  Mem6[ss:sp_3:word16] = si
    uses: si_27 = Mem6[ss_24:sp_25:word16]
cx:cx
    def:  def cx
    uses: SCZO_8 = cond(cx - 0x0001)
          si_10 = cx
          cx_11 = cx - 0x0001
          cx_30 = PHI(cx_16, cx)
SCZO_8: orig: SCZO
    def:  SCZO_8 = cond(cx - 0x0001)
    uses: branch Test(LE,SCZO_8) l0C00_001C
          S_33 = PHI(SCZO_23, SCZO_8)
          C_34 = PHI(SCZO_23, SCZO_8)
          Z_35 = PHI(SCZO_23, SCZO_8)
          O_36 = PHI(SCZO_23, SCZO_8)
ax_9: orig: ax
    def:  ax_9 = 0x0001
    uses: ax_29 = PHI(ax_22, ax_9)
si_10: orig: si
    def:  si_10 = cx
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
cx_11: orig: cx
    def:  cx_11 = cx - 0x0001
    uses: SZO_12 = cond(cx_11)
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
SZO_12: orig: SZO
    def:  SZO_12 = cond(cx_11)
sp_13: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
    uses: sp_25 = PHI(sp_13, sp_3)
si_14: orig: si
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
    uses: dx_ax_20 = si_14 *s ax_18
ss_15: orig: ss
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
    uses: ss_24 = PHI(ss_15, ss)
cx_16: orig: cx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
    uses: cx_30 = PHI(cx_16, cx)
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
ax_18: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
    uses: dx_ax_20 = si_14 *s ax_18
SCZO_19: orig: SCZO
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss	defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
dx_ax_20: orig: dx_ax
    def:  dx_ax_20 = si_14 *s ax_18
    uses: dx_21 = SLICE(dx_ax_20, word16, 16) (alias)
          ax_22 = (word16) dx_ax_20 (alias)
          SCZO_23 = cond(dx_ax_20)
dx_21: orig: dx
    def:  dx_21 = SLICE(dx_ax_20, word16, 16) (alias)
    uses: dx_31 = PHI(dx_21, dx)
ax_22: orig: ax
    def:  ax_22 = (word16) dx_ax_20 (alias)
    uses: ax_29 = PHI(ax_22, ax_9)
SCZO_23: orig: SCZO
    def:  SCZO_23 = cond(dx_ax_20)
    uses: S_33 = PHI(SCZO_23, SCZO_8)
          C_34 = PHI(SCZO_23, SCZO_8)
          Z_35 = PHI(SCZO_23, SCZO_8)
          O_36 = PHI(SCZO_23, SCZO_8)
ss_24: orig: ss
    def:  ss_24 = PHI(ss_15, ss)
    uses: si_27 = Mem6[ss_24:sp_25:word16]
          use ss_24
sp_25: orig: sp
    def:  sp_25 = PHI(sp_13, sp_3)
    uses: si_27 = Mem6[ss_24:sp_25:word16]
          sp_28 = sp_25 + 0x0002
si_27: orig: si
    def:  si_27 = Mem6[ss_24:sp_25:word16]
    uses: use si_27
sp_28: orig: sp
    def:  sp_28 = sp_25 + 0x0002
    uses: use sp_28
ax_29: orig: ax
    def:  ax_29 = PHI(ax_22, ax_9)
    uses: use ax_29
cx_30: orig: cx
    def:  cx_30 = PHI(cx_16, cx)
    uses: use cx_30
dx_31: orig: dx
    def:  dx_31 = PHI(dx_21, dx)
    uses: use dx_31
dx:dx
    def:  def dx
    uses: dx_31 = PHI(dx_21, dx)
S_33: orig: S
    def:  S_33 = PHI(SCZO_23, SCZO_8)
    uses: use C_34 | O_36 | S_33 | Z_35
C_34: orig: C
    def:  C_34 = PHI(SCZO_23, SCZO_8)
    uses: use C_34 | O_36 | S_33 | Z_35
Z_35: orig: Z
    def:  Z_35 = PHI(SCZO_23, SCZO_8)
    uses: use C_34 | O_36 | S_33 | Z_35
O_36: orig: O
    def:  O_36 = PHI(SCZO_23, SCZO_8)
    uses: use C_34 | O_36 | S_33 | Z_35
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	def si
	def ss
	def cx
	def ax
	def dx
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	sp_3 = sp_2 - 0x0002
	Mem6[ss:sp_3:word16] = si
	SCZO_8 = cond(cx - 0x0001)
	branch Test(LE,SCZO_8) l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	si_10 = cx
	cx_11 = cx - 0x0001
	SZO_12 = cond(cx_11)
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,cx:cx_11,si:si_10,sp:sp_3,ss:ss
		defs: ax:ax_18,cx:cx_16,Flags:SCZO_19,si:si_14,sp:sp_13,ss:ss_15
	dx_ax_20 = si_14 *s ax_18
	dx_21 = SLICE(dx_ax_20, word16, 16) (alias)
	ax_22 = (word16) dx_ax_20 (alias)
	SCZO_23 = cond(dx_ax_20)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_9 = 0x0001
	// succ:  l0C00_001F
l0C00_001F:
	O_36 = PHI(SCZO_23, SCZO_8)
	Z_35 = PHI(SCZO_23, SCZO_8)
	C_34 = PHI(SCZO_23, SCZO_8)
	S_33 = PHI(SCZO_23, SCZO_8)
	dx_31 = PHI(dx_21, dx)
	cx_30 = PHI(cx_16, cx)
	ax_29 = PHI(ax_22, ax_9)
	sp_25 = PHI(sp_13, sp_3)
	ss_24 = PHI(ss_15, ss)
	si_27 = Mem6[ss_24:sp_25:word16]
	sp_28 = sp_25 + 0x0002
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
	use ax_29
	use cx_30
	use dx_31
	use C_34 | O_36 | S_33 | Z_35
	use si_27
	use sp_28
	use ss_24

