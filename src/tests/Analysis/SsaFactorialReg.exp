fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
cx_3: orig: cx
    def:  cx_3 = 0x0005
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
sp_4: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
    uses: use sp_4
cx_5: orig: cx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
    uses: use cx_5
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
ax_7: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
    uses: Mem9[ds:0x0064:word16] = ax_7
          use ax_7
ds:ds
    def:  def ds
    uses: Mem9[ds:0x0064:word16] = ax_7
Mem9: orig: Mem0
    def:  Mem9[ds:0x0064:word16] = ax_7
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	cx_3 = 0x0005
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,cx:cx_3,sp:sp_2
		defs: ax:ax_7,cx:cx_5,sp:sp_4
	Mem9[ds:0x0064:word16] = ax_7
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_7
	use cx_5
	use sp_4

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_3 = sp_2 - 0x0002
sp_3: orig: sp
    def:  sp_3 = sp_2 - 0x0002
    uses: Mem6[ss:sp_3:word16] = si
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_14,sp:sp_3	defs: ax:ax_19,cx:cx_17,Flags:SCZO_20,sp:sp_16
          sp_26 = PHI(sp_16, sp_3)
si:si
    def:  def si
    uses: Mem6[ss:sp_3:word16] = si
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_3:word16] = si
          si_28 = Mem6[ss:sp_26:word16]
          use ss
Mem6: orig: Mem0
    def:  Mem6[ss:sp_3:word16] = si
    uses: si_28 = Mem6[ss:sp_26:word16]
cx:cx
    def:  def cx
    uses: SCZO_8 = cond(cx - 0x0001)
          si_13 = cx
          cx_14 = cx - 0x0001
          cx_34 = PHI(cx_17, cx)
SCZO_8: orig: SCZO
    def:  SCZO_8 = cond(cx - 0x0001)
    uses: S_9 = SLICE(SCZO_8, bool, 0) (alias)
          Z_10 = SLICE(SCZO_8, bool, 2) (alias)
          O_11 = SLICE(SCZO_8, bool, 4) (alias)
          C_33 = SLICE(SCZO_8, bool, 1) (alias)
S_9: orig: S
    def:  S_9 = SLICE(SCZO_8, bool, 0) (alias)
    uses: branch Test(LE,O_11 | S_9 | Z_10) l0C00_001C
          S_39 = PHI(S_40, S_9)
Z_10: orig: Z
    def:  Z_10 = SLICE(SCZO_8, bool, 2) (alias)
    uses: branch Test(LE,O_11 | S_9 | Z_10) l0C00_001C
          Z_41 = PHI(Z_42, Z_10)
O_11: orig: O
    def:  O_11 = SLICE(SCZO_8, bool, 4) (alias)
    uses: branch Test(LE,O_11 | S_9 | Z_10) l0C00_001C
          O_37 = PHI(O_38, O_11)
ax_12: orig: ax
    def:  ax_12 = 0x0001
    uses: ax_30 = PHI(ax_23, ax_12)
si_13: orig: si
    def:  si_13 = cx
    uses: dx_ax_21 = si_13 *s ax_19
cx_14: orig: cx
    def:  cx_14 = cx - 0x0001
    uses: SZO_15 = cond(cx_14)
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_14,sp:sp_3	defs: ax:ax_19,cx:cx_17,Flags:SCZO_20,sp:sp_16
SZO_15: orig: SZO
    def:  SZO_15 = cond(cx_14)
sp_16: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_14,sp:sp_3	defs: ax:ax_19,cx:cx_17,Flags:SCZO_20,sp:sp_16
    uses: sp_26 = PHI(sp_16, sp_3)
cx_17: orig: cx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_14,sp:sp_3	defs: ax:ax_19,cx:cx_17,Flags:SCZO_20,sp:sp_16
    uses: cx_34 = PHI(cx_17, cx)
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_14,sp:sp_3	defs: ax:ax_19,cx:cx_17,Flags:SCZO_20,sp:sp_16
ax_19: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_14,sp:sp_3	defs: ax:ax_19,cx:cx_17,Flags:SCZO_20,sp:sp_16
    uses: dx_ax_21 = si_13 *s ax_19
SCZO_20: orig: SCZO
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_14,sp:sp_3	defs: ax:ax_19,cx:cx_17,Flags:SCZO_20,sp:sp_16
dx_ax_21: orig: dx_ax
    def:  dx_ax_21 = si_13 *s ax_19
    uses: dx_22 = SLICE(dx_ax_21, word16, 16) (alias)
          ax_23 = (word16) dx_ax_21 (alias)
          SCZO_24 = cond(dx_ax_21)
dx_22: orig: dx
    def:  dx_22 = SLICE(dx_ax_21, word16, 16) (alias)
    uses: dx_35 = PHI(dx_22, dx)
ax_23: orig: ax
    def:  ax_23 = (word16) dx_ax_21 (alias)
    uses: ax_30 = PHI(ax_23, ax_12)
SCZO_24: orig: SCZO
    def:  SCZO_24 = cond(dx_ax_21)
    uses: C_32 = SLICE(SCZO_24, bool, 1) (alias)
          O_38 = SLICE(SCZO_24, bool, 4) (alias)
          S_40 = SLICE(SCZO_24, bool, 0) (alias)
          Z_42 = SLICE(SCZO_24, bool, 2) (alias)
sp_26: orig: sp
    def:  sp_26 = PHI(sp_16, sp_3)
    uses: si_28 = Mem6[ss:sp_26:word16]
          sp_29 = sp_26 + 0x0002
si_28: orig: si
    def:  si_28 = Mem6[ss:sp_26:word16]
    uses: use si_28
sp_29: orig: sp
    def:  sp_29 = sp_26 + 0x0002
    uses: use sp_29
ax_30: orig: ax
    def:  ax_30 = PHI(ax_23, ax_12)
    uses: use ax_30
C_31: orig: C
    def:  C_31 = PHI(C_32, C_33)
    uses: use C_31
C_32: orig: C
    def:  C_32 = SLICE(SCZO_24, bool, 1) (alias)
    uses: C_31 = PHI(C_32, C_33)
C_33: orig: C
    def:  C_33 = SLICE(SCZO_8, bool, 1) (alias)
    uses: C_31 = PHI(C_32, C_33)
cx_34: orig: cx
    def:  cx_34 = PHI(cx_17, cx)
    uses: use cx_34
dx_35: orig: dx
    def:  dx_35 = PHI(dx_22, dx)
    uses: use dx_35
dx:dx
    def:  def dx
    uses: dx_35 = PHI(dx_22, dx)
O_37: orig: O
    def:  O_37 = PHI(O_38, O_11)
    uses: use O_37
O_38: orig: O
    def:  O_38 = SLICE(SCZO_24, bool, 4) (alias)
    uses: O_37 = PHI(O_38, O_11)
S_39: orig: S
    def:  S_39 = PHI(S_40, S_9)
    uses: use S_39
S_40: orig: S
    def:  S_40 = SLICE(SCZO_24, bool, 0) (alias)
    uses: S_39 = PHI(S_40, S_9)
Z_41: orig: Z
    def:  Z_41 = PHI(Z_42, Z_10)
    uses: use Z_41
Z_42: orig: Z
    def:  Z_42 = SLICE(SCZO_24, bool, 2) (alias)
    uses: Z_41 = PHI(Z_42, Z_10)
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	def si
	def ss
	def cx
	def ax
	def dx
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	sp_3 = sp_2 - 0x0002
	Mem6[ss:sp_3:word16] = si
	SCZO_8 = cond(cx - 0x0001)
	S_9 = SLICE(SCZO_8, bool, 0) (alias)
	Z_10 = SLICE(SCZO_8, bool, 2) (alias)
	O_11 = SLICE(SCZO_8, bool, 4) (alias)
	C_33 = SLICE(SCZO_8, bool, 1) (alias)
	branch Test(LE,O_11 | S_9 | Z_10) l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	si_13 = cx
	cx_14 = cx - 0x0001
	SZO_15 = cond(cx_14)
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,cx:cx_14,sp:sp_3
		defs: ax:ax_19,cx:cx_17,Flags:SCZO_20,sp:sp_16
	dx_ax_21 = si_13 *s ax_19
	dx_22 = SLICE(dx_ax_21, word16, 16) (alias)
	ax_23 = (word16) dx_ax_21 (alias)
	SCZO_24 = cond(dx_ax_21)
	C_32 = SLICE(SCZO_24, bool, 1) (alias)
	O_38 = SLICE(SCZO_24, bool, 4) (alias)
	S_40 = SLICE(SCZO_24, bool, 0) (alias)
	Z_42 = SLICE(SCZO_24, bool, 2) (alias)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_12 = 0x0001
	// succ:  l0C00_001F
l0C00_001F:
	Z_41 = PHI(Z_42, Z_10)
	S_39 = PHI(S_40, S_9)
	O_37 = PHI(O_38, O_11)
	dx_35 = PHI(dx_22, dx)
	cx_34 = PHI(cx_17, cx)
	C_31 = PHI(C_32, C_33)
	ax_30 = PHI(ax_23, ax_12)
	sp_26 = PHI(sp_16, sp_3)
	si_28 = Mem6[ss:sp_26:word16]
	sp_29 = sp_26 + 0x0002
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
	use ax_30
	use C_31
	use cx_34
	use dx_35
	use O_37
	use S_39
	use si_28
	use sp_29
	use ss
	use Z_41

