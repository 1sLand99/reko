fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
cx_3: orig: cx
    def:  cx_3 = 0x0005
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
sp_4: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
    uses: use sp_4
cx_5: orig: cx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
    uses: use cx_5
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
ax_7: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_3,sp:sp_2	defs: ax:ax_7,cx:cx_5,sp:sp_4
    uses: Mem9[ds:0x0064:word16] = ax_7
          use ax_7
ds:ds
    def:  def ds
    uses: Mem9[ds:0x0064:word16] = ax_7
Mem9: orig: Mem0
    def:  Mem9[ds:0x0064:word16] = ax_7
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	cx_3 = 0x0005
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,cx:cx_3,sp:sp_2
		defs: ax:ax_7,cx:cx_5,sp:sp_4
	Mem9[ds:0x0064:word16] = ax_7
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_7
	use cx_5
	use sp_4

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_3 = sp_2 - 0x0002
sp_3: orig: sp
    def:  sp_3 = sp_2 - 0x0002
    uses: Mem6[ss:sp_3:word16] = si
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,sp:sp_3	defs: ax:ax_16,cx:cx_14,Flags:SCZO_17,sp:sp_13
          sp_23 = PHI(sp_13, sp_3)
si:si
    def:  def si
    uses: Mem6[ss:sp_3:word16] = si
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_3:word16] = si
          si_25 = Mem6[ss:sp_23:word16]
          use ss
Mem6: orig: Mem0
    def:  Mem6[ss:sp_3:word16] = si
    uses: si_25 = Mem6[ss:sp_23:word16]
cx:cx
    def:  def cx
    uses: SCZO_8 = cond(cx - 0x0001)
          si_10 = cx
          cx_11 = cx - 0x0001
          cx_29 = PHI(cx_14, cx)
SCZO_8: orig: SCZO
    def:  SCZO_8 = cond(cx - 0x0001)
    uses: branch Test(LE,SCZO_8) l0C00_001C
          C_28 = PHI(SCZO_21, SCZO_8)
          O_32 = PHI(SCZO_21, SCZO_8)
          S_33 = PHI(SCZO_21, SCZO_8)
          Z_34 = PHI(SCZO_21, SCZO_8)
ax_9: orig: ax
    def:  ax_9 = 0x0001
    uses: ax_27 = PHI(ax_20, ax_9)
si_10: orig: si
    def:  si_10 = cx
    uses: dx_ax_18 = si_10 *s ax_16
cx_11: orig: cx
    def:  cx_11 = cx - 0x0001
    uses: SZO_12 = cond(cx_11)
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,sp:sp_3	defs: ax:ax_16,cx:cx_14,Flags:SCZO_17,sp:sp_13
SZO_12: orig: SZO
    def:  SZO_12 = cond(cx_11)
sp_13: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,sp:sp_3	defs: ax:ax_16,cx:cx_14,Flags:SCZO_17,sp:sp_13
    uses: sp_23 = PHI(sp_13, sp_3)
cx_14: orig: cx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,sp:sp_3	defs: ax:ax_16,cx:cx_14,Flags:SCZO_17,sp:sp_13
    uses: cx_29 = PHI(cx_14, cx)
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,sp:sp_3	defs: ax:ax_16,cx:cx_14,Flags:SCZO_17,sp:sp_13
ax_16: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,sp:sp_3	defs: ax:ax_16,cx:cx_14,Flags:SCZO_17,sp:sp_13
    uses: dx_ax_18 = si_10 *s ax_16
SCZO_17: orig: SCZO
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,cx:cx_11,sp:sp_3	defs: ax:ax_16,cx:cx_14,Flags:SCZO_17,sp:sp_13
dx_ax_18: orig: dx_ax
    def:  dx_ax_18 = si_10 *s ax_16
    uses: dx_19 = SLICE(dx_ax_18, word16, 16) (alias)
          ax_20 = (word16) dx_ax_18 (alias)
          SCZO_21 = cond(dx_ax_18)
dx_19: orig: dx
    def:  dx_19 = SLICE(dx_ax_18, word16, 16) (alias)
    uses: dx_30 = PHI(dx_19, dx)
ax_20: orig: ax
    def:  ax_20 = (word16) dx_ax_18 (alias)
    uses: ax_27 = PHI(ax_20, ax_9)
SCZO_21: orig: SCZO
    def:  SCZO_21 = cond(dx_ax_18)
    uses: C_28 = PHI(SCZO_21, SCZO_8)
          O_32 = PHI(SCZO_21, SCZO_8)
          S_33 = PHI(SCZO_21, SCZO_8)
          Z_34 = PHI(SCZO_21, SCZO_8)
sp_23: orig: sp
    def:  sp_23 = PHI(sp_13, sp_3)
    uses: si_25 = Mem6[ss:sp_23:word16]
          sp_26 = sp_23 + 0x0002
si_25: orig: si
    def:  si_25 = Mem6[ss:sp_23:word16]
    uses: use si_25
sp_26: orig: sp
    def:  sp_26 = sp_23 + 0x0002
    uses: use sp_26
ax_27: orig: ax
    def:  ax_27 = PHI(ax_20, ax_9)
    uses: use ax_27
C_28: orig: C
    def:  C_28 = PHI(SCZO_21, SCZO_8)
    uses: use C_28
cx_29: orig: cx
    def:  cx_29 = PHI(cx_14, cx)
    uses: use cx_29
dx_30: orig: dx
    def:  dx_30 = PHI(dx_19, dx)
    uses: use dx_30
dx:dx
    def:  def dx
    uses: dx_30 = PHI(dx_19, dx)
O_32: orig: O
    def:  O_32 = PHI(SCZO_21, SCZO_8)
    uses: use O_32
S_33: orig: S
    def:  S_33 = PHI(SCZO_21, SCZO_8)
    uses: use S_33
Z_34: orig: Z
    def:  Z_34 = PHI(SCZO_21, SCZO_8)
    uses: use Z_34
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	def si
	def ss
	def cx
	def ax
	def dx
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	sp_3 = sp_2 - 0x0002
	Mem6[ss:sp_3:word16] = si
	SCZO_8 = cond(cx - 0x0001)
	branch Test(LE,SCZO_8) l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	si_10 = cx
	cx_11 = cx - 0x0001
	SZO_12 = cond(cx_11)
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,cx:cx_11,sp:sp_3
		defs: ax:ax_16,cx:cx_14,Flags:SCZO_17,sp:sp_13
	dx_ax_18 = si_10 *s ax_16
	dx_19 = SLICE(dx_ax_18, word16, 16) (alias)
	ax_20 = (word16) dx_ax_18 (alias)
	SCZO_21 = cond(dx_ax_18)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_9 = 0x0001
	// succ:  l0C00_001F
l0C00_001F:
	Z_34 = PHI(SCZO_21, SCZO_8)
	S_33 = PHI(SCZO_21, SCZO_8)
	O_32 = PHI(SCZO_21, SCZO_8)
	dx_30 = PHI(dx_19, dx)
	cx_29 = PHI(cx_14, cx)
	C_28 = PHI(SCZO_21, SCZO_8)
	ax_27 = PHI(ax_20, ax_9)
	sp_23 = PHI(sp_13, sp_3)
	si_25 = Mem6[ss:sp_23:word16]
	sp_26 = sp_23 + 0x0002
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
	use ax_27
	use C_28
	use cx_29
	use dx_30
	use O_32
	use S_33
	use si_25
	use sp_26
	use ss
	use Z_34

