a:Stack +0004
    def:  def a
    uses: a_2 = a
          ecx_7 = Mem0[a:word32]
a_2: orig: a
    def:  a_2 = a
    uses: eax_5 = a_2
fp:fp
    def:  def fp
    uses: esp_4 = fp
          esp_8 = fp - 0x00000004
          esp_10 = fp - 0x00000008
esp_4: orig: esp
    def:  esp_4 = fp
eax_5: orig: eax
    def:  eax_5 = a_2
Mem0:Global memory
    def:  def Mem0
    uses: ecx_7 = Mem0[a:word32]
          Mem0[ecx_7 + 0x00000008:word32](dwLoc08_11, dwLoc04_9)
ecx_7: orig: ecx
    def:  ecx_7 = Mem0[a:word32]
    uses: Mem0[ecx_7 + 0x00000008:word32](dwLoc08_11, dwLoc04_9)
esp_8: orig: esp
    def:  esp_8 = fp - 0x00000004
dwLoc04_9: orig: dwLoc04
    def:  dwLoc04_9 = 0x0000000B
    uses: Mem0[ecx_7 + 0x00000008:word32](dwLoc08_11, dwLoc04_9)
esp_10: orig: esp
    def:  esp_10 = fp - 0x00000008
dwLoc08_11: orig: dwLoc08
    def:  dwLoc08_11 = 0x0000000A
    uses: Mem0[ecx_7 + 0x00000008:word32](dwLoc08_11, dwLoc04_9)
esp_12: orig: esp
eax_13: orig: eax
ecx_14: orig: ecx
// test
// Return size: 4
void test(str * a)
fn0C00_0000_entry:
	def a
	def fp
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	a_2 = a
	esp_4 = fp
	eax_5 = a_2
	ecx_7 = Mem0[a:word32]
	esp_8 = fp - 0x00000004
	dwLoc04_9 = 0x0000000B
	esp_10 = fp - 0x00000008
	dwLoc08_11 = 0x0000000A
	Mem0[ecx_7 + 0x00000008:word32](dwLoc08_11, dwLoc04_9)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

