= fn0C00_0000 ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
si:si
    def:  def si
    uses: bx_4 = si
          si_6 = PHI(si, si_9, si_9)
bx_4: orig: bx
    def:  bx_4 = si
    uses: ax_23 = ax_21 - bx_4
ds_5: orig: ds
    def:  ds_5 = PHI(ds, ds_5, ds_5)
si_6: orig: si
    def:  si_6 = PHI(si, si_9, si_9)
    uses: ax_8 = Mem7[ds:si_6:word16]
          si_9 = si_6 + 0x0002
Mem7: orig: Mem0
    def:  Mem7 = PHI(Mem0, Mem12, Mem18)
    uses: ax_8 = Mem7[ds:si_6:word16]
ax_8: orig: ax
    def:  ax_8 = Mem7[ds:si_6:word16]
    uses: SCZO_10 = cond(ax_8 - 0x0020)
          Mem12[ds:di:word16] = ax_8
          ax_13 = ax_8 | ax_8
          ax_13 = ax_8 | ax_8
          branch ax_8 != 0x0020 l0C00_0005
si_9: orig: si
    def:  si_9 = si_6 + 0x0002
    uses: ax_21 = si_9
          si_6 = PHI(si, si_9, si_9)
          si_6 = PHI(si, si_9, si_9)
SCZO_10: orig: SCZO
    def:  SCZO_10 = cond(ax_8 - 0x0020)
di_11: orig: di
    def:  di_11 = PHI(di, di_11, di_11)
Mem12: orig: Mem0
    def:  Mem12[ds:di:word16] = ax_8
    uses: v12_17 = Mem12[ds:0x0302:word16] + 0x0001
          Mem7 = PHI(Mem0, Mem12, Mem18)
ax_13: orig: ax
    def:  ax_13 = ax_8 | ax_8
    uses: SZO_14 = cond(ax_13)
          SCZO_16 = cond(ax_13 - 0x000D)
          branch ax_13 != 0x0000 l0C00_0011
          branch ax_13 != 0x000D l0C00_001A
SZO_14: orig: SZO
    def:  SZO_14 = cond(ax_13)
C_15: orig: C
    def:  C_15 = false
SCZO_16: orig: SCZO
    def:  SCZO_16 = cond(ax_13 - 0x000D)
v12_17: orig: v12
    def:  v12_17 = Mem12[ds:0x0302:word16] + 0x0001
    uses: Mem18[ds:0x0302:word16] = v12_17
          SZO_19 = cond(v12_17)
Mem18: orig: Mem0
    def:  Mem18[ds:0x0302:word16] = v12_17
    uses: Mem7 = PHI(Mem0, Mem12, Mem18)
SZO_19: orig: SZO
    def:  SZO_19 = cond(v12_17)
ax_20: orig: ax
    def:  ax_20 = 0xFFFF
    uses: ax_25 = PHI(ax_23, ax_20)
ax_21: orig: ax
    def:  ax_21 = si_9
    uses: ax_23 = ax_21 - bx_4
bx_22: orig: bx
    def:  bx_22 = PHI(bx_4, bx_22, bx_22)
ax_23: orig: ax
    def:  ax_23 = ax_21 - bx_4
    uses: SCZO_24 = cond(ax_23)
          ax_25 = PHI(ax_23, ax_20)
SCZO_24: orig: SCZO
    def:  SCZO_24 = cond(ax_23)
ax_25: orig: ax
    def:  ax_25 = PHI(ax_23, ax_20)
    uses: Mem27[ds:0x0300:word16] = ax_25
ds_26: orig: ds
    def:  ds_26 = PHI(ds_5, ds_5)
Mem27: orig: Mem0
    def:  Mem27[ds:0x0300:word16] = ax_25
ds:ds
    def:  def ds
    uses: ax_8 = Mem7[ds:si_6:word16]
          Mem12[ds:di:word16] = ax_8
          v12_17 = Mem12[ds:0x0302:word16] + 0x0001
          Mem18[ds:0x0302:word16] = v12_17
          Mem27[ds:0x0300:word16] = ax_25
Mem0:Global memory
    def:  def Mem0
    uses: Mem7 = PHI(Mem0, Mem12, Mem18)
di:di
    def:  def di
    uses: Mem12[ds:di:word16] = ax_8
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def si
	def ds
	def Mem0
	def di
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	bx_4 = si
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0005:
	Mem12[ds:di:word16] = ax_8
	ax_13 = ax_8 | ax_8
	SZO_14 = cond(ax_13)
	C_15 = false
	branch ax_13 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_20 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	SCZO_16 = cond(ax_13 - 0x000D)
	branch ax_13 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	v12_17 = Mem12[ds:0x0302:word16] + 0x0001
	Mem18[ds:0x0302:word16] = v12_17
	SZO_19 = cond(v12_17)
	// succ:  l0C00_001A
l0C00_001A:
	Mem7 = PHI(Mem0, Mem12, Mem18)
	si_6 = PHI(si, si_9, si_9)
	ax_8 = Mem7[ds:si_6:word16]
	si_9 = si_6 + 0x0002
	SCZO_10 = cond(ax_8 - 0x0020)
	branch ax_8 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_21 = si_9
	ax_23 = ax_21 - bx_4
	SCZO_24 = cond(ax_23)
	// succ:  l0C00_0024
l0C00_0024:
	ax_25 = PHI(ax_23, ax_20)
	Mem27[ds:0x0300:word16] = ax_25
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
si:si
    def:  def si
    uses: bx_4 = si
          ax_23 = si_9 - si
          si_6 = PHI(si, si_9, si_9)
bx_4: orig: bx
    def:  bx_4 = si
ds_5: orig: ds
    def:  ds_5 = PHI(ds, ds_5, ds_5)
si_6: orig: si
    def:  si_6 = PHI(si, si_9, si_9)
    uses: ax_8 = Mem7[ds:si_6:word16]
          si_9 = si_6 + 0x0002
Mem7: orig: Mem0
    def:  Mem7 = PHI(Mem0, Mem12, Mem18)
    uses: ax_8 = Mem7[ds:si_6:word16]
ax_8: orig: ax
    def:  ax_8 = Mem7[ds:si_6:word16]
    uses: SCZO_10 = cond(ax_8 - 0x0020)
          Mem12[ds:di:word16] = ax_8
          ax_13 = ax_8
          branch ax_8 != 0x0020 l0C00_0005
          SZO_14 = cond(ax_8)
          branch ax_8 != 0x0000 l0C00_0011
          SCZO_16 = cond(ax_8 - 0x000D)
          branch ax_8 != 0x000D l0C00_001A
si_9: orig: si
    def:  si_9 = si_6 + 0x0002
    uses: ax_21 = si_9
          ax_23 = si_9 - si
          si_6 = PHI(si, si_9, si_9)
          si_6 = PHI(si, si_9, si_9)
SCZO_10: orig: SCZO
    def:  SCZO_10 = cond(ax_8 - 0x0020)
di_11: orig: di
    def:  di_11 = PHI(di, di_11, di_11)
Mem12: orig: Mem0
    def:  Mem12[ds:di:word16] = ax_8
    uses: v12_17 = Mem12[ds:0x0302:word16] + 0x0001
          Mem7 = PHI(Mem0, Mem12, Mem18)
ax_13: orig: ax
    def:  ax_13 = ax_8
SZO_14: orig: SZO
    def:  SZO_14 = cond(ax_8)
C_15: orig: C
    def:  C_15 = false
SCZO_16: orig: SCZO
    def:  SCZO_16 = cond(ax_8 - 0x000D)
v12_17: orig: v12
    def:  v12_17 = Mem12[ds:0x0302:word16] + 0x0001
    uses: Mem18[ds:0x0302:word16] = v12_17
          SZO_19 = cond(v12_17)
Mem18: orig: Mem0
    def:  Mem18[ds:0x0302:word16] = v12_17
    uses: Mem7 = PHI(Mem0, Mem12, Mem18)
SZO_19: orig: SZO
    def:  SZO_19 = cond(v12_17)
ax_20: orig: ax
    def:  ax_20 = 0xFFFF
    uses: ax_25 = PHI(ax_23, ax_20)
ax_21: orig: ax
    def:  ax_21 = si_9
bx_22: orig: bx
    def:  bx_22 = PHI(bx_4, bx_22, bx_22)
ax_23: orig: ax
    def:  ax_23 = si_9 - si
    uses: SCZO_24 = cond(ax_23)
          ax_25 = PHI(ax_23, ax_20)
SCZO_24: orig: SCZO
    def:  SCZO_24 = cond(ax_23)
ax_25: orig: ax
    def:  ax_25 = PHI(ax_23, ax_20)
    uses: Mem27[ds:0x0300:word16] = ax_25
ds_26: orig: ds
    def:  ds_26 = PHI(ds_5, ds_5)
Mem27: orig: Mem0
    def:  Mem27[ds:0x0300:word16] = ax_25
ds:ds
    def:  def ds
    uses: ax_8 = Mem7[ds:si_6:word16]
          Mem12[ds:di:word16] = ax_8
          v12_17 = Mem12[ds:0x0302:word16] + 0x0001
          Mem18[ds:0x0302:word16] = v12_17
          Mem27[ds:0x0300:word16] = ax_25
Mem0:Global memory
    def:  def Mem0
    uses: Mem7 = PHI(Mem0, Mem12, Mem18)
di:di
    def:  def di
    uses: Mem12[ds:di:word16] = ax_8
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def si
	def ds
	def Mem0
	def di
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	bx_4 = si
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0005:
	Mem12[ds:di:word16] = ax_8
	ax_13 = ax_8
	SZO_14 = cond(ax_8)
	C_15 = false
	branch ax_8 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_20 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	SCZO_16 = cond(ax_8 - 0x000D)
	branch ax_8 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	v12_17 = Mem12[ds:0x0302:word16] + 0x0001
	Mem18[ds:0x0302:word16] = v12_17
	SZO_19 = cond(v12_17)
	// succ:  l0C00_001A
l0C00_001A:
	Mem7 = PHI(Mem0, Mem12, Mem18)
	si_6 = PHI(si, si_9, si_9)
	ax_8 = Mem7[ds:si_6:word16]
	si_9 = si_6 + 0x0002
	SCZO_10 = cond(ax_8 - 0x0020)
	branch ax_8 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_21 = si_9
	ax_23 = si_9 - si
	SCZO_24 = cond(ax_23)
	// succ:  l0C00_0024
l0C00_0024:
	ax_25 = PHI(ax_23, ax_20)
	Mem27[ds:0x0300:word16] = ax_25
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
