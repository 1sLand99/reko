fp:fp
sp_2: orig: sp
Top_3: orig: Top
si:si
    def:  def si
    uses: ax_27 = si_10 - si
          si_7 = PHI(si, si_10, si_10)
bx_5: orig: bx
ds_6: orig: ds
si_7: orig: si
    def:  si_7 = PHI(si, si_10, si_10)
    uses: ax_9 = Mem8[ds:si_7:word16]
          si_10 = si_7 + 0x0002
Mem8: orig: Mem0
    def:  Mem8 = PHI(Mem0, Mem14, Mem22)
    uses: ax_9 = Mem8[ds:si_7:word16]
ax_9: orig: ax
    def:  ax_9 = Mem8[ds:si_7:word16]
    uses: Mem14[ds:di:word16] = ax_9
          branch ax_9 != 0x0020 l0C00_0005
          branch ax_9 != 0x0000 l0C00_0011
          branch ax_9 != 0x000D l0C00_001A
si_10: orig: si
    def:  si_10 = si_7 + 0x0002
    uses: ax_27 = si_10 - si
          si_7 = PHI(si, si_10, si_10)
          si_7 = PHI(si, si_10, si_10)
SCZO_11: orig: SCZO
Z_12: orig: Z
di_13: orig: di
Mem14: orig: Mem0
    def:  Mem14[ds:di:word16] = ax_9
    uses: Mem22[ds:0x0302:word16] = Mem14[ds:0x0302:word16] + 0x0001
          Mem8 = PHI(Mem0, Mem14, Mem22)
ax_15: orig: ax
SZO_16: orig: SZO
C_17: orig: C
Z_18: orig: Z
SCZO_19: orig: SCZO
Z_20: orig: Z
v12_21: orig: v12
Mem22: orig: Mem0
    def:  Mem22[ds:0x0302:word16] = Mem14[ds:0x0302:word16] + 0x0001
    uses: Mem8 = PHI(Mem0, Mem14, Mem22)
SZO_23: orig: SZO
ax_24: orig: ax
    def:  ax_24 = 0xFFFF
    uses: ax_29 = PHI(ax_27, ax_24)
ax_25: orig: ax
bx_26: orig: bx
ax_27: orig: ax
    def:  ax_27 = si_10 - si
    uses: ax_29 = PHI(ax_27, ax_24)
SCZO_28: orig: SCZO
ax_29: orig: ax
    def:  ax_29 = PHI(ax_27, ax_24)
    uses: Mem31[ds:0x0300:word16] = ax_29
ds_30: orig: ds
Mem31: orig: Mem0
    def:  Mem31[ds:0x0300:word16] = ax_29
ds:ds
    def:  def ds
    uses: ax_9 = Mem8[ds:si_7:word16]
          Mem14[ds:di:word16] = ax_9
          Mem22[ds:0x0302:word16] = Mem14[ds:0x0302:word16] + 0x0001
          Mem22[ds:0x0302:word16] = Mem14[ds:0x0302:word16] + 0x0001
          Mem31[ds:0x0300:word16] = ax_29
Mem0:Global
    def:  def Mem0
    uses: Mem8 = PHI(Mem0, Mem14, Mem22)
di:di
    def:  def di
    uses: Mem14[ds:di:word16] = ax_9
bx_35: orig: bx
C_36: orig: C
C_37: orig: C
C_38: orig: C
O_39: orig: O
O_40: orig: O
O_41: orig: O
S_42: orig: S
S_43: orig: S
S_44: orig: S
sp_46: orig: sp
sp_47: orig: sp
Top_48: orig: Top
Top_49: orig: Top
Z_50: orig: Z
Z_51: orig: Z
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 si, word16 di, selector ds)
fn0C00_0000_entry:
	def si
	def ds
	def Mem0
	def di
	// succ:  l0C00_0000
l0C00_0000:
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0005:
	Mem14[ds:di:word16] = ax_9
	branch ax_9 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_24 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	branch ax_9 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	Mem22[ds:0x0302:word16] = Mem14[ds:0x0302:word16] + 0x0001
	// succ:  l0C00_001A
l0C00_001A:
	Mem8 = PHI(Mem0, Mem14, Mem22)
	si_7 = PHI(si, si_10, si_10)
	ax_9 = Mem8[ds:si_7:word16]
	si_10 = si_7 + 0x0002
	branch ax_9 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_27 = si_10 - si
	// succ:  l0C00_0024
l0C00_0024:
	ax_29 = PHI(ax_27, ax_24)
	Mem31[ds:0x0300:word16] = ax_29
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

