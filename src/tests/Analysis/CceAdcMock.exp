Mem0:Global memory
    def:  def Mem0
    uses: r0_2 = Mem0[0x01001000:word32]
r0_2: orig: r0
    def:  r0_2 = Mem0[0x01001000:word32]
    uses: r0_7 = r0_2 * 0x00000002 + (r1 <u 0x00000002)
r1:r1
    def:  def r1
    uses: SZC_4 = cond(r1 - 0x00000002)
          r0_7 = r0_2 * 0x00000002 + (r1 <u 0x00000002)
SZC_4: orig: SZC
    def:  SZC_4 = cond(r1 - 0x00000002)
    uses: C_5 = SZC_4
          use C_5 | SZC_4
C_5: orig: C
    def:  C_5 = SZC_4
    uses: use C_5 | SZC_4
r0_6: orig: r0
r0_7: orig: r0
    def:  r0_7 = r0_2 * 0x00000002 + (r1 <u 0x00000002)
    uses: Mem8[0x01001004:word32] = r0_7
Mem8: orig: Mem0
    def:  Mem8[0x01001004:word32] = r0_7
// AdcMock
// Return size: 0
void AdcMock(word32 r1)
AdcMock_entry:
	def Mem0
	def r1
	// succ:  l1
l1:
	r0_2 = Mem0[0x01001000:word32]
	SZC_4 = cond(r1 - 0x00000002)
	C_5 = SZC_4
	r0_7 = r0_2 * 0x00000002 + (r1 <u 0x00000002)
	Mem8[0x01001004:word32] = r0_7
	return
	// succ:  AdcMock_exit
AdcMock_exit:
	use C_5 | SZC_4

