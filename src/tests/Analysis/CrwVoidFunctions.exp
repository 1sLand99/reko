void fn0C00_0000(Register word16 di, Register selector ds)
// MayUse:  di:16 ds:16
// LiveOut:
// Trashed: SCZO ax bx si
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// si:si
// ss:ss
// SCZO:SCZO
// ds:ds
// di:di
// ax:ax
// bx:bx
// S:S
// C:C
// Z:Z
// O:O
// wLoc02:Local -0002
// return address size: 2
void fn0C00_0000(word16 di, selector ds)
fn0C00_0000_entry:
	def ds
	def di
	// succ:  l0C00_0000
l0C00_0000:
	fn0C00_0010(0x0100, di, ds)
	fn0C00_0017(di, ds, 0x0100)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
void fn0C00_0010(Register word16 si, Register word16 di, Register selector ds)
// MayUse:  di:16 ds:16 si:16
// LiveOut:
// Trashed: ax
// Preserved: sp
// fn0C00_0010
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// ax:ax
// si:si
// ds:ds
// di:di
// return address size: 2
void fn0C00_0010(word16 si, word16 di, selector ds)
fn0C00_0010_entry:
	def ds
	def si
	def Mem0
	def di
	// succ:  l0C00_0010
l0C00_0010:
	ax_6 = Mem0[ds:si + 0x0002:word16]
	fn0C00_0029(ax_6, di, ds)
	return
	// succ:  fn0C00_0010_exit
fn0C00_0010_exit:
void fn0C00_0017(Register word16 di, Register selector ds, Stack word16 wArg02)
// MayUse:  di:16 ds:16 Stack +0002:16
// LiveOut:
// Trashed: SCZO ax bx
// Preserved: bp sp
// fn0C00_0017
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// bp:bp
// ss:ss
// bx:bx
// ax:ax
// ds:ds
// SCZO:SCZO
// di:di
// wLoc02:Local -0002
// wArg02:Stack +0002
// wLoc04:Local -0004
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
void fn0C00_0017(word16 di, selector ds, word16 wArg02)
fn0C00_0017_entry:
	def ds
	def di
	def wArg02
	// succ:  l0C00_0017
l0C00_0017:
	ax_10 = Mem6[ds:wArg02 + 0x0002:word16]
	fn0C00_002C(di, ds, ax_10)
	return
	// succ:  fn0C00_0017_exit
fn0C00_0017_exit:
void fn0C00_0029(Register word16 ax, Register word16 di, Register selector ds)
// MayUse:  ax:16 di:16 ds:16
// LiveOut:
// Trashed:
// Preserved: sp
// fn0C00_0029
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// di:di
// ds:ds
// ax:ax
// return address size: 2
void fn0C00_0029(word16 ax, word16 di, selector ds)
fn0C00_0029_entry:
	def ax
	def ds
	def di
	// succ:  l0C00_0029
l0C00_0029:
	Mem6[ds:di:word16] = ax
	return
	// succ:  fn0C00_0029_exit
fn0C00_0029_exit:
void fn0C00_002C(Register word16 di, Register selector ds, Stack word16 wArg02)
// MayUse:  di:16 ds:16 Stack +0002:16
// LiveOut:
// Trashed: ax
// Preserved: bp sp
// fn0C00_002C
// Return size: 0
// Mem0:Global memory
// fp:fp
// sp:sp
// bp:bp
// ss:ss
// ax:ax
// di:di
// ds:ds
// wLoc02:Local -0002
// wArg02:Stack +0002
// return address size: 2
void fn0C00_002C(word16 di, selector ds, word16 wArg02)
fn0C00_002C_entry:
	def ds
	def di
	def wArg02
	// succ:  l0C00_002C
l0C00_002C:
	Mem11[ds:di:word16] = wArg02
	return
	// succ:  fn0C00_002C_exit
fn0C00_002C_exit:
