fp:fp
sp_2: orig: sp
Top_3: orig: Top
si_4: orig: si
ds:ds
    def:  def ds
    uses: Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
          Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
          Mem13[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
          Mem13[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
Top_6: orig: Top
    def:  Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
ax_7: orig: ax
Mem8: orig: Mem0
    def:  Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
si_9: orig: si
Top_10: orig: Top
    def:  Mem13[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
ax_11: orig: ax
al_12: orig: al
Mem13: orig: Mem0
    def:  Mem13[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	Mem8[ds:0x0202:word16] = fn0C00_0015(0x0200, ds)
	Mem13[ds:0x0302:byte] = (byte) fn0C00_0015(0x0300, ds)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_2: orig: sp
Top_3: orig: Top
ds:ds
    def:  def ds
    uses: return Mem0[ds:si:word16]
si:si
    def:  def si
    uses: return Mem0[ds:si:word16]
Mem0:Global memory
    def:  def Mem0
    uses: return Mem0[ds:si:word16]
ax_7: orig: ax
// fn0C00_0015
// Return size: 0
word16 fn0C00_0015(word16 si, selector ds)
fn0C00_0015_entry:
	def ds
	def si
	def Mem0
	// succ:  l0C00_0015
l0C00_0015:
	return Mem0[ds:si:word16]
	// succ:  fn0C00_0015_exit
fn0C00_0015_exit:

