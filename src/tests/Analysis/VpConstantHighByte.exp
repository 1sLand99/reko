= sum ========================
ah_1: orig: ah
    def:  ah_1 = 0<8>
    uses: ax_7 = SEQ(ah_1, al_4) (alias)
al_4: orig: al
    def:  al_4 = Mem0[si:byte]
    uses: ax_7 = SEQ(ah_1, al_4) (alias)
dx_5: orig: dx
    def:  dx_5 = PHI((dx, l1), (dx_8, m1))
    uses: dx_8 = dx_5 + ax_7
ax_7: orig: ax
    def:  ax_7 = SEQ(ah_1, al_4) (alias)
    uses: dx_8 = dx_5 + ax_7
dx_8: orig: dx
    def:  dx_8 = dx_5 + ax_7
    uses: dx_5 = PHI((dx, l1), (dx_8, m1))
si:si
    def:  def si
    uses: branch Mem0[si:byte] == 0<8> m3done
          al_4 = Mem0[si:byte]
Mem0:Mem
    def:  def Mem0
    uses: branch Mem0[si:byte] == 0<8> m3done
          al_4 = Mem0[si:byte]
dx:dx
    def:  def dx
    uses: dx_5 = PHI((dx, l1), (dx_8, m1))
// sum
// Return size: 0
define sum
sum_entry:
	def si
	def Mem0
	def dx
	// succ:  l1
l1:
	ah_1 = 0<8>
	// succ:  m0
m0:
	dx_5 = PHI((dx, l1), (dx_8, m1))
	branch Mem0[si:byte] == 0<8> m3done
	// succ:  m1 m3done
m1:
	al_4 = Mem0[si:byte]
	ax_7 = SEQ(ah_1, al_4) (alias)
	dx_8 = dx_5 + ax_7
	goto m0
	// succ:  m0
m3done:
	return
	// succ:  sum_exit
sum_exit:

ah_1: orig: ah
    def:  ah_1 = 0<8>
al_4: orig: al
    def:  al_4 = Mem0[si:byte]
    uses: ax_7 = CONVERT(al_4, uint8, uint16) (alias)
dx_5: orig: dx
    def:  dx_5 = PHI((dx, l1), (dx_8, m1))
    uses: dx_8 = dx_5 + ax_7
ax_7: orig: ax
    def:  ax_7 = CONVERT(al_4, uint8, uint16) (alias)
    uses: dx_8 = dx_5 + ax_7
dx_8: orig: dx
    def:  dx_8 = dx_5 + ax_7
    uses: dx_5 = PHI((dx, l1), (dx_8, m1))
si:si
    def:  def si
    uses: branch Mem0[si:byte] == 0<8> m3done
          al_4 = Mem0[si:byte]
Mem0:Mem
    def:  def Mem0
    uses: branch Mem0[si:byte] == 0<8> m3done
          al_4 = Mem0[si:byte]
dx:dx
    def:  def dx
    uses: dx_5 = PHI((dx, l1), (dx_8, m1))
// sum
// Return size: 0
define sum
sum_entry:
	def si
	def Mem0
	def dx
	// succ:  l1
l1:
	ah_1 = 0<8>
	// succ:  m0
m0:
	dx_5 = PHI((dx, l1), (dx_8, m1))
	branch Mem0[si:byte] == 0<8> m3done
	// succ:  m1 m3done
m1:
	al_4 = Mem0[si:byte]
	ax_7 = CONVERT(al_4, uint8, uint16) (alias)
	dx_8 = dx_5 + ax_7
	goto m0
	// succ:  m0
m3done:
	return
	// succ:  sum_exit
sum_exit:
