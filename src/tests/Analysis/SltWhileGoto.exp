fp:fp
sp_2: orig: sp
si:si
    def:  def si
    uses: ax_26 = si_9 - si
          si_6 = PHI(si, si_9, si_9)
bx_4: orig: bx
ds_5: orig: ds
    def:  ds_5 = PHI(ds, ds_5, ds_5)
si_6: orig: si
    def:  si_6 = PHI(si, si_9, si_9)
    uses: ax_8 = Mem7[ds:si_6:word16]
          si_9 = si_6 + 0x0002
Mem7: orig: Mem0
    def:  Mem7 = PHI(Mem0, Mem13, Mem21)
    uses: ax_8 = Mem7[ds:si_6:word16]
ax_8: orig: ax
    def:  ax_8 = Mem7[ds:si_6:word16]
    uses: Mem13[ds:di:word16] = ax_8
          branch ax_8 != 0x0020 l0C00_0005
          branch ax_8 != 0x0000 l0C00_0011
          branch ax_8 != 0x000D l0C00_001A
si_9: orig: si
    def:  si_9 = si_6 + 0x0002
    uses: ax_26 = si_9 - si
          si_6 = PHI(si, si_9, si_9)
          si_6 = PHI(si, si_9, si_9)
SCZO_10: orig: SCZO
Z_11: orig: Z
di_12: orig: di
    def:  di_12 = PHI(di, di_12, di_12)
Mem13: orig: Mem0
    def:  Mem13[ds:di:word16] = ax_8
    uses: Mem21[ds:0x0302:word16] = Mem13[ds:0x0302:word16] + 0x0001
          Mem7 = PHI(Mem0, Mem13, Mem21)
ax_14: orig: ax
SZO_15: orig: SZO
C_16: orig: C
Z_17: orig: Z
SCZO_18: orig: SCZO
Z_19: orig: Z
v12_20: orig: v12
Mem21: orig: Mem0
    def:  Mem21[ds:0x0302:word16] = Mem13[ds:0x0302:word16] + 0x0001
    uses: Mem7 = PHI(Mem0, Mem13, Mem21)
SZO_22: orig: SZO
ax_23: orig: ax
    def:  ax_23 = 0xFFFF
    uses: ax_28 = PHI(ax_26, ax_23)
ax_24: orig: ax
bx_25: orig: bx
    def:  bx_25 = PHI(bx_4, bx_25, bx_25)
ax_26: orig: ax
    def:  ax_26 = si_9 - si
    uses: ax_28 = PHI(ax_26, ax_23)
SCZO_27: orig: SCZO
ax_28: orig: ax
    def:  ax_28 = PHI(ax_26, ax_23)
    uses: Mem30[ds:0x0300:word16] = ax_28
ds_29: orig: ds
    def:  ds_29 = PHI(ds_5, ds_5)
Mem30: orig: Mem0
    def:  Mem30[ds:0x0300:word16] = ax_28
ds:ds
    def:  def ds
    uses: ax_8 = Mem7[ds:si_6:word16]
          Mem13[ds:di:word16] = ax_8
          Mem21[ds:0x0302:word16] = Mem13[ds:0x0302:word16] + 0x0001
          Mem21[ds:0x0302:word16] = Mem13[ds:0x0302:word16] + 0x0001
          Mem30[ds:0x0300:word16] = ax_28
Mem0:Global memory
    def:  def Mem0
    uses: Mem7 = PHI(Mem0, Mem13, Mem21)
di:di
    def:  def di
    uses: Mem13[ds:di:word16] = ax_8
// fn0C00_0000
define fn0C00_0000
	// liveIn: 
fn0C00_0000_entry:
	def si
	def ds
	def Mem0
	def di
	// liveOut: si ds Mem0 di
	// liveIn: si ds Mem0 di
l0C00_0000:
	goto l0C00_001A
	// liveOut: si ds Mem0 di
	// liveIn: si ax_8 si_9 ds di
l0C00_0005:
	Mem13[ds:di:word16] = ax_8
	branch ax_8 != 0x0000 l0C00_0011
	// liveOut: si ax_8 si_9 Mem13 ds di
	// liveIn: ds
l0C00_000B:
	ax_23 = 0xFFFF
	goto l0C00_0024
	// liveOut: ax_23 ds
	// liveIn: si ax_8 si_9 Mem13 ds di
l0C00_0011:
	branch ax_8 != 0x000D l0C00_001A
	// liveOut: si si_9 Mem13 ds di
	// liveIn: si Mem13 ds di
l0C00_0016:
	Mem21[ds:0x0302:word16] = Mem13[ds:0x0302:word16] + 0x0001
	// liveOut: si Mem21 ds di
	// liveIn: si ds di
l0C00_001A:
	Mem7 = PHI(Mem0, Mem13, Mem21)
	si_6 = PHI(si, si_9, si_9)
	ax_8 = Mem7[ds:si_6:word16]
	si_9 = si_6 + 0x0002
	branch ax_8 != 0x0020 l0C00_0005
	// liveOut: si ax_8 si_9 ds di
	// liveIn: si si_9 ds
l0C00_0020:
	ax_26 = si_9 - si
	// liveOut: ax_26 ds
	// liveIn: ds
l0C00_0024:
	ax_28 = PHI(ax_26, ax_23)
	Mem30[ds:0x0300:word16] = ax_28
	return
	// liveOut: 
	// liveIn: 
fn0C00_0000_exit:
	// liveOut: 

