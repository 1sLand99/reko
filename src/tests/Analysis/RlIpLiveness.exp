// fn0C00_0000 /////////////////////
	LiveOut:  
	BitsUsed:  ds:[0..15]
	Trashed:   SCZO ax bx di si Top
	Preserved: sp
// fn0C00_0000
define fn0C00_0000
fn0C00_0000_entry:
	def ds
	def Mem0
l0C00_0000:
	di_6 = Mem0[ds:0x0100:word16]
	si_7 = Mem0[ds:di_6:word16]
	call fn0C00_0026 (retsize: 2;)
		uses: ds:ds,si:si_7
		defs: ax:ax_8
	Mem13[ds:di_6 + 0x0002:word16] = ax_8
	bx_14 = Mem13[ds:0x0102:word16]
	si_15 = Mem13[ds:bx_14 + 0x0004:word16]
	call fn0C00_0026 (retsize: 2;)
		uses: ds:ds,si:si_15
		defs: ax:ax_16
	Mem21[ds:bx_14 + 0x0008:word16] = ax_16
	di_22 = Mem21[ds:0x0104:word16]
	si_23 = Mem21[ds:di_22:word16]
	call fn0C00_0033 (retsize: 2;)
		uses: ds:ds,si:si_23
		defs: ax:ax_24
	Mem29[ds:di_22 + 0x0002:word16] = ax_24
	return
fn0C00_0000_exit:
// fn0C00_0026 /////////////////////
	LiveOut:   ax:[0..15]
	BitsUsed:  ds:[0..15] si:[0..15]
	Trashed:   SCZO ax Top
	Preserved: di sp
// fn0C00_0026
define fn0C00_0026
fn0C00_0026_entry:
	def ds
	def si
l0C00_0026:
	di_9 = Mem7[ds:0x0104:word16]
	v6_10 = Mem7[ds:di_9 + 0x0030:word16] + 0x0001
	Mem11[ds:di_9 + 0x0030:word16] = v6_10
	call fn0C00_0033 (retsize: 2;)
		uses: ds:ds,si:si
		defs: ax:ax_14
	return
fn0C00_0026_exit:
	use ax_14
// fn0C00_0033 /////////////////////
	LiveOut:   ax:[0..15]
	BitsUsed:  ds:[0..15] si:[0..15]
	Trashed:   SCZO ax Top
	Preserved: sp
// fn0C00_0033
define fn0C00_0033
fn0C00_0033_entry:
	def ds
	def si
	def Mem0
l0C00_0033:
	ax_7 = Mem0[ds:si:word16]
	ax_8 = ax_7 * 0x0002
	return
fn0C00_0033_exit:
	use ax_8
