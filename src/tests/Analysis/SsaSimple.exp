fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: bp_3 = sp_2
bp_3: orig: bp
    def:  bp_3 = sp_2
    uses: ax_6 = Mem0[ss:bp_3 + 0x0006:word16]
          sp_13 = bp_3
          use bp_3
ss:ss
    def:  def ss
    uses: ax_6 = Mem0[ss:bp_3 + 0x0006:word16]
Mem0:Global memory
    def:  def Mem0
    uses: ax_6 = Mem0[ss:bp_3 + 0x0006:word16]
ax_6: orig: ax
    def:  ax_6 = Mem0[ss:bp_3 + 0x0006:word16]
    uses: ax_7 = ax_6 | ax_6
          ax_7 = ax_6 | ax_6
ax_7: orig: ax
    def:  ax_7 = ax_6 | ax_6
    uses: SZO_8 = cond(ax_7)
          ax_14 = PHI(ax_7, ax_11)
SZO_8: orig: SZO
    def:  SZO_8 = cond(ax_7)
    uses: Z_10 = SLICE(SZO_8, bool, 2) (alias)
          O_17 = SLICE(SZO_8, bool, 4) (alias)
          S_19 = SLICE(SZO_8, bool, 0) (alias)
C_9: orig: C
    def:  C_9 = false
    uses: use C_9
Z_10: orig: Z
    def:  Z_10 = SLICE(SZO_8, bool, 2) (alias)
    uses: branch Test(NE,Z_10) l0C00_000C
          use Z_10
ax_11: orig: ax
    def:  ax_11 = 0xFFFF
    uses: ax_14 = PHI(ax_7, ax_11)
sp_13: orig: sp
    def:  sp_13 = bp_3
    uses: use sp_13
ax_14: orig: ax
    def:  ax_14 = PHI(ax_7, ax_11)
    uses: use ax_14
O_17: orig: O
    def:  O_17 = SLICE(SZO_8, bool, 4) (alias)
    uses: use O_17
S_19: orig: S
    def:  S_19 = SLICE(SZO_8, bool, 0) (alias)
    uses: use S_19
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ss
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	bp_3 = sp_2
	ax_6 = Mem0[ss:bp_3 + 0x0006:word16]
	ax_7 = ax_6 | ax_6
	SZO_8 = cond(ax_7)
	Z_10 = SLICE(SZO_8, bool, 2) (alias)
	O_17 = SLICE(SZO_8, bool, 4) (alias)
	S_19 = SLICE(SZO_8, bool, 0) (alias)
	C_9 = false
	branch Test(NE,Z_10) l0C00_000C
	// succ:  l0C00_0009 l0C00_000C
l0C00_0009:
	ax_11 = 0xFFFF
	// succ:  l0C00_000C
l0C00_000C:
	ax_14 = PHI(ax_7, ax_11)
	sp_13 = bp_3
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_14
	use bp_3
	use C_9
	use O_17
	use S_19
	use sp_13
	use Z_10

