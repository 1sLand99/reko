void fn0C00_0000(Register word16 dx)
// MayUse:  dx:[0..15]
// DataTypes: 
//   dx: word16
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Mem
// fp:fp
// %continuation:%continuation
// sp:sp
// Top:Top
// dx:dx
// ax:ax
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
void fn0C00_0000(word16 dx)
fn0C00_0000_entry:
	def dx
	// succ:  l0C00_0000
l0C00_0000:
	fn0C00_0004(dx, out dx_11)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
Register word16 fn0C00_0004(Register word16 dx, Register out word16 dxOut)
// MayUse:  dx:[0..15]
// DataTypes: 
//   dx: word16
// LiveOut: ax:[0..15]-fn0C00_0013 dx:[0..15]-fn0C00_0013
// Trashed: SCZO ax dx Top
// Preserved: sp
// fn0C00_0004
// Return size: 0
// Mem0:Mem
// fp:fp
// %continuation:%continuation
// sp:sp
// dx:dx
// SCZO:SCZO
// Z:Z
// SZO:SZO
// ax:ax
// Top:Top
// S:S
// C:C
// O:O
// dxOut:Out:dx
// return address size: 2
word16 fn0C00_0004(word16 dx, word16 & dxOut)
fn0C00_0004_entry:
	def dx
	// succ:  l0C00_0004
l0C00_0004:
	branch dx != 0x1E<16> l0C00_000F
	// succ:  l0C00_0009 l0C00_000F
l0C00_0009:
	dx_11 = fn0C00_0013(dx)
	goto l0C00_0010
	// succ:  l0C00_0010
l0C00_000F:
	dx_7 = dx - 1<16>
	// succ:  l0C00_0010
l0C00_0010:
	dx_15 = PHI((dx_11, l0C00_0009), (dx_7, l0C00_000F))
	ax_16 = dx_15
	dxOut = dx_15
	return ax_16
	// succ:  fn0C00_0004_exit
fn0C00_0004_exit:
Register word16 fn0C00_0013(Register word16 dx)
// MayUse:  dx:[0..15]
// DataTypes: 
//   dx: ci16
// LiveOut: dx:[0..15]-fn0C00_0004
// Trashed: SCZO ax dx Top
// Preserved: sp
// fn0C00_0013
// Return size: 0
// Mem0:Mem
// fp:fp
// %continuation:%continuation
// sp:sp
// dx:dx
// SCZO:SCZO
// SO:SO
// SZO:SZO
// ax:ax
// Top:Top
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
word16 fn0C00_0013(word16 dx)
fn0C00_0013_entry:
	def dx
	// succ:  l0C00_0013
l0C00_0013:
	branch dx < 0x14<16> l0C00_001F
	// succ:  l0C00_0018 l0C00_001F
l0C00_0018:
	fn0C00_0004(dx - 1<16>, out dx_18)
	goto l0C00_0025
	// succ:  l0C00_0025
l0C00_001F:
	fn0C00_0004(dx - 0xA<16>, out dx_11)
	// succ:  l0C00_0025
l0C00_0025:
	dx_28 = PHI((dx_18, l0C00_0018), (dx_11, l0C00_001F))
	return dx_28
	// succ:  fn0C00_0013_exit
fn0C00_0013_exit:
