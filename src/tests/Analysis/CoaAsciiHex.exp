fp:fp
sp_1: orig: sp
al:al
    def:  def al
    uses: branch fn0C00_000A(al, out al_3) l0C00_0009
al_3: orig: al
    def:  branch fn0C00_000A(al, out al_3) l0C00_0009
    uses: Mem5[ds:0x0300:byte] = al_3
C_4: orig: C
Mem5: orig: Mem0
    def:  Mem5[ds:0x0300:byte] = al_3
ds:ds
    def:  def ds
    uses: Mem5[ds:0x0300:byte] = al_3
// fn0C00_0000
// Return size: 0
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	def al
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	branch fn0C00_000A(al, out al_3) l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem5[ds:0x0300:byte] = al_3
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_1: orig: sp
al:al
    def:  def al
    uses: al_19 = al - 0x30
          branch al <u 0x30 l0C00_0032
          branch al <=u 0x39 l0C00_0022
          branch al <u 0x41 l0C00_0032
          branch al <=u 0x46 l0C00_0022
          branch al <u 0x61 l0C00_0032
          branch al >u 0x66 l0C00_0032
          branch al <u 0x3A l0C00_0030
          al_29 = al - 0x37
          branch al <u 0x47 l0C00_0030
          al_33 = al - 0x57
          al_6 = PHI((al, l0C00_0032), (al_23, l0C00_0030))
SCZO_3: orig: SCZO
C_4: orig: C
CZ_5: orig: CZ
al_6: orig: al
    def:  al_6 = PHI((al, l0C00_0032), (al_23, l0C00_0030))
    uses: use al_6 (=> alOut)
C_7: orig: C
SCZO_8: orig: SCZO
CZ_9: orig: CZ
alOut:Out:al
SCZO_11: orig: SCZO
CZ_12: orig: CZ
C_13: orig: C
SCZO_14: orig: SCZO
CZ_15: orig: CZ
SCZO_16: orig: SCZO
C_17: orig: C
CZ_18: orig: CZ
al_19: orig: al
    def:  al_19 = al - 0x30
    uses: al_23 = PHI((al_19, l0C00_0022), (al_29, l0C00_0028), (al_33, l0C00_002E))
SCZO_20: orig: SCZO
C_21: orig: C
CZ_22: orig: CZ
al_23: orig: al
    def:  al_23 = PHI((al_19, l0C00_0022), (al_29, l0C00_0028), (al_33, l0C00_002E))
    uses: al_6 = PHI((al, l0C00_0032), (al_23, l0C00_0030))
SCZO_24: orig: SCZO
CZ_25: orig: CZ
C_26: orig: C
SCZO_27: orig: SCZO
CZ_28: orig: CZ
al_29: orig: al
    def:  al_29 = al - 0x37
    uses: al_23 = PHI((al_19, l0C00_0022), (al_29, l0C00_0028), (al_33, l0C00_002E))
SCZO_30: orig: SCZO
C_31: orig: C
CZ_32: orig: CZ
al_33: orig: al
    def:  al_33 = al - 0x57
    uses: al_23 = PHI((al_19, l0C00_0022), (al_29, l0C00_0028), (al_33, l0C00_002E))
SCZO_34: orig: SCZO
C_35: orig: C
CZ_36: orig: CZ
SCZO_37: orig: SCZO
C_38: orig: C
CZ_39: orig: CZ
SCZO_40: orig: SCZO
C_41: orig: C
CZ_42: orig: CZ
SCZO_43: orig: SCZO
C_44: orig: C
CZ_45: orig: CZ
SCZO_46: orig: SCZO
C_47: orig: C
CZ_48: orig: CZ
// fn0C00_000A
// Return size: 0
bool fn0C00_000A(byte al, ptr16 & alOut)
fn0C00_000A_entry:
	def al
	// succ:  l0C00_000A
l0C00_000A:
	branch al <u 0x30 l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	branch al <=u 0x39 l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	branch al <u 0x41 l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	branch al <=u 0x46 l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	branch al <u 0x61 l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	branch al >u 0x66 l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	al_19 = al - 0x30
	branch al <u 0x3A l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_29 = al - 0x37
	branch al <u 0x47 l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_33 = al - 0x57
	// succ:  l0C00_0030
l0C00_0030:
	al_23 = PHI((al_19, l0C00_0022), (al_29, l0C00_0028), (al_33, l0C00_002E))
	return false
	// succ:  fn0C00_000A_exit
l0C00_0032:
	return true
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:
	al_6 = PHI((al, l0C00_0032), (al_23, l0C00_0030))
	use al_6 (=> alOut)

