fp:fp
sp_2: orig: sp
al:al
    def:  def al
    uses: branch fn0C00_000A(al, out al_4) l0C00_0009
al_4: orig: al
    def:  branch fn0C00_000A(al, out al_4) l0C00_0009
    uses: Mem6[ds:0x0300:byte] = al_4
C_5: orig: C
Mem6: orig: Mem0
    def:  Mem6[ds:0x0300:byte] = al_4
ds:ds
    def:  def ds
    uses: Mem6[ds:0x0300:byte] = al_4
// fn0C00_0000
// Return size: 0
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	def al
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	branch fn0C00_000A(al, out al_4) l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem6[ds:0x0300:byte] = al_4
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_2: orig: sp
al:al
    def:  def al
    uses: al_7 = PHI(al, al_22)
          al_18 = al - 0x30
          branch al <u 0x30 l0C00_0032
          branch al <=u 0x39 l0C00_0022
          branch al <u 0x41 l0C00_0032
          branch al <=u 0x46 l0C00_0022
          branch al <u 0x61 l0C00_0032
          branch al >u 0x66 l0C00_0032
          branch al <u 0x3A l0C00_0030
          al_26 = al - 0x37
          branch al <u 0x47 l0C00_0030
          al_30 = al - 0x57
SCZO_4: orig: SCZO
C_5: orig: C
CZ_6: orig: CZ
al_7: orig: al
    def:  al_7 = PHI(al, al_22)
    uses: use al_7 (=> alOut)
C_8: orig: C
SCZO_9: orig: SCZO
CZ_10: orig: CZ
alOut:Out:al
C_12: orig: C
SCZO_13: orig: SCZO
CZ_14: orig: CZ
SCZO_15: orig: SCZO
C_16: orig: C
CZ_17: orig: CZ
al_18: orig: al
    def:  al_18 = al - 0x30
    uses: al_22 = PHI(al_18, al_26, al_30)
SCZO_19: orig: SCZO
C_20: orig: C
CZ_21: orig: CZ
al_22: orig: al
    def:  al_22 = PHI(al_18, al_26, al_30)
    uses: al_7 = PHI(al, al_22)
C_23: orig: C
SCZO_24: orig: SCZO
CZ_25: orig: CZ
al_26: orig: al
    def:  al_26 = al - 0x37
    uses: al_22 = PHI(al_18, al_26, al_30)
SCZO_27: orig: SCZO
C_28: orig: C
CZ_29: orig: CZ
al_30: orig: al
    def:  al_30 = al - 0x57
    uses: al_22 = PHI(al_18, al_26, al_30)
SCZO_31: orig: SCZO
C_32: orig: C
CZ_33: orig: CZ
SCZO_34: orig: SCZO
C_35: orig: C
CZ_36: orig: CZ
SCZO_37: orig: SCZO
C_38: orig: C
CZ_39: orig: CZ
SCZO_40: orig: SCZO
C_41: orig: C
CZ_42: orig: CZ
SCZO_43: orig: SCZO
C_44: orig: C
CZ_45: orig: CZ
// fn0C00_000A
// Return size: 0
byte fn0C00_000A(byte al, ptr16 alOut)
fn0C00_000A_entry:
	def al
	// succ:  l0C00_000A
l0C00_000A:
	branch al <u 0x30 l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	branch al <=u 0x39 l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	branch al <u 0x41 l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	branch al <=u 0x46 l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	branch al <u 0x61 l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	branch al >u 0x66 l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	al_18 = al - 0x30
	branch al <u 0x3A l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_26 = al - 0x37
	branch al <u 0x47 l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_30 = al - 0x57
	// succ:  l0C00_0030
l0C00_0030:
	al_22 = PHI(al_18, al_26, al_30)
	return false
	// succ:  fn0C00_000A_exit
l0C00_0032:
	return true
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:
	al_7 = PHI(al, al_22)
	use al_7 (=> alOut)

