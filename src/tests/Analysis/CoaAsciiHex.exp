fp:fp
sp_2: orig: sp
al:al
    def:  def al
    uses: branch fn0C00_000A(al, out al_4) l0C00_0009
al_4: orig: al
    def:  branch fn0C00_000A(al, out al_4) l0C00_0009
    uses: Mem7[ds:0x0300:byte] = al_4
C_5: orig: C
ds:ds
    def:  def ds
    uses: Mem7[ds:0x0300:byte] = al_4
Mem7: orig: Mem0
    def:  Mem7[ds:0x0300:byte] = al_4
// fn0C00_0000
// Return size: 0
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	def al
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	branch fn0C00_000A(al, out al_4) l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem7[ds:0x0300:byte] = al_4
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_2: orig: sp
al:al
    def:  def al
    uses: al_12 = al - 0x30
          al_20 = PHI(al, al_22)
          branch al <u 0x30 l0C00_0032
          branch al <=u 0x39 l0C00_0022
          branch al <u 0x41 l0C00_0032
          branch al <=u 0x46 l0C00_0022
          branch al <u 0x61 l0C00_0032
          branch al >u 0x66 l0C00_0032
          branch al <u 0x3A l0C00_0030
          al_14 = al - 0x37
          branch al <u 0x47 l0C00_0030
          al_16 = al - 0x57
SCZO_4: orig: SCZO
SCZO_5: orig: SCZO
SCZO_6: orig: SCZO
SCZO_7: orig: SCZO
SCZO_8: orig: SCZO
SCZO_9: orig: SCZO
C_10: orig: C
al_11: orig: al
    def:  al_11 = PHI(al, al, al)
al_12: orig: al
    def:  al_12 = al - 0x30
    uses: al_22 = PHI(al_12, al_14, al_16)
SCZO_13: orig: SCZO
al_14: orig: al
    def:  al_14 = al - 0x37
    uses: al_22 = PHI(al_12, al_14, al_16)
SCZO_15: orig: SCZO
al_16: orig: al
    def:  al_16 = al - 0x57
    uses: al_22 = PHI(al_12, al_14, al_16)
SCZO_17: orig: SCZO
C_18: orig: C
alOut:Out:al
    def:  use al_20 (=> alOut)
al_20: orig: al
    def:  al_20 = PHI(al, al_22)
    uses: use al_20 (=> alOut)
al_21: orig: al
    def:  al_21 = PHI(al, al, al, al)
al_22: orig: al
    def:  al_22 = PHI(al_12, al_14, al_16)
    uses: al_20 = PHI(al, al_22)
// fn0C00_000A
// Return size: 0
byte fn0C00_000A(byte al, ptr16 & alOut)
fn0C00_000A_entry:
	def al
	// succ:  l0C00_000A
l0C00_000A:
	branch al <u 0x30 l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	branch al <=u 0x39 l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	branch al <u 0x41 l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	branch al <=u 0x46 l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	branch al <u 0x61 l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	branch al >u 0x66 l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	al_12 = al - 0x30
	branch al <u 0x3A l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_14 = al - 0x37
	branch al <u 0x47 l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_16 = al - 0x57
	// succ:  l0C00_0030
l0C00_0030:
	al_22 = PHI(al_12, al_14, al_16)
	return false
	// succ:  fn0C00_000A_exit
l0C00_0032:
	return true
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:
	al_20 = PHI(al, al_22)
	use al_20 (=> alOut)

