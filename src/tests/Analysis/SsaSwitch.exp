fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_3 = sp_2 - 0x0002
sp_3: orig: sp
    def:  sp_3 = sp_2 - 0x0002
    uses: Mem6[ss:sp_3:word16] = cs
          ds_7 = Mem6[ss:sp_3:selector]
          sp_8 = sp_3 + 0x0002
cs:cs
    def:  def cs
    uses: Mem6[ss:sp_3:word16] = cs
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_3:word16] = cs
          ds_7 = Mem6[ss:sp_3:selector]
Mem6: orig: Mem0
    def:  Mem6[ss:sp_3:word16] = cs
    uses: ds_7 = Mem6[ss:sp_3:selector]
          bl_10 = Mem6[ds_7:si:byte]
ds_7: orig: ds
    def:  ds_7 = Mem6[ss:sp_3:selector]
    uses: bl_10 = Mem6[ds_7:si:byte]
          use ds_7
sp_8: orig: sp
    def:  sp_8 = sp_3 + 0x0002
    uses: use sp_8
si:si
    def:  def si
    uses: bl_10 = Mem6[ds_7:si:byte]
bl_10: orig: bl
    def:  bl_10 = Mem6[ds_7:si:byte]
    uses: SCZO_11 = cond(bl_10 - 0x02)
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(bl_10 - 0x02)
    uses: C_12 = SLICE(SCZO_11, bool, 1) (alias)
          Z_13 = SLICE(SCZO_11, bool, 2) (alias)
          O_34 = SLICE(SCZO_11, bool, 4) (alias)
          S_37 = SLICE(SCZO_11, bool, 0) (alias)
C_12: orig: C
    def:  C_12 = SLICE(SCZO_11, bool, 1) (alias)
    uses: branch Test(UGT,C_12 | Z_13) l0C00_0023
          C_30 = PHI(C_12, C_31, C_31, C_31)
Z_13: orig: Z
    def:  Z_13 = SLICE(SCZO_11, bool, 2) (alias)
    uses: branch Test(UGT,C_12 | Z_13) l0C00_0023
          Z_40 = PHI(Z_13, Z_41, Z_41, Z_41)
ax_14: orig: ax
    def:  ax_14 = 0x0000
    uses: ax_28 = PHI(ax_14, ax_26, ax_25, ax_27)
bh:bh
    def:  def bh
    uses: bh_16 = bh ^ bh
          bh_16 = bh ^ bh
          bx_20 = DPB(bx, bh, 8) (alias)
bh_16: orig: bh
    def:  bh_16 = bh ^ bh
    uses: SZO_17 = cond(bh_16)
          bx_21 = DPB(bx_20, bh_16, 8) (alias)
SZO_17: orig: SZO
    def:  SZO_17 = cond(bh_16)
C_18: orig: C
    def:  C_18 = false
bx:bx
    def:  def bx
    uses: bx_20 = DPB(bx, bh, 8) (alias)
bx_20: orig: bx
    def:  bx_20 = DPB(bx, bh, 8) (alias)
    uses: bx_21 = DPB(bx_20, bh_16, 8) (alias)
          bx_29 = PHI(bx_20, bx_22, bx_22, bx_22)
bx_21: orig: bx
    def:  bx_21 = DPB(bx_20, bh_16, 8) (alias)
    uses: bx_22 = bx_21 + bx_21
          bx_22 = bx_21 + bx_21
bx_22: orig: bx
    def:  bx_22 = bx_21 + bx_21
    uses: SCZO_23 = cond(bx_22)
          bl_24 = (byte) bx_22 (alias)
          bx_29 = PHI(bx_20, bx_22, bx_22, bx_22)
          bx_29 = PHI(bx_20, bx_22, bx_22, bx_22)
          bx_29 = PHI(bx_20, bx_22, bx_22, bx_22)
SCZO_23: orig: SCZO
    def:  SCZO_23 = cond(bx_22)
    uses: C_31 = SLICE(SCZO_23, bool, 1) (alias)
          O_35 = SLICE(SCZO_23, bool, 4) (alias)
          S_38 = SLICE(SCZO_23, bool, 0) (alias)
          Z_41 = SLICE(SCZO_23, bool, 2) (alias)
bl_24: orig: bl
    def:  bl_24 = (byte) bx_22 (alias)
    uses: switch (bl_24) { l0C00_0017 l0C00_001B l0C00_001F }
ax_25: orig: ax
    def:  ax_25 = 0x0003
    uses: ax_28 = PHI(ax_14, ax_26, ax_25, ax_27)
ax_26: orig: ax
    def:  ax_26 = 0x0002
    uses: ax_28 = PHI(ax_14, ax_26, ax_25, ax_27)
ax_27: orig: ax
    def:  ax_27 = 0x0001
    uses: ax_28 = PHI(ax_14, ax_26, ax_25, ax_27)
ax_28: orig: ax
    def:  ax_28 = PHI(ax_14, ax_26, ax_25, ax_27)
    uses: use ax_28
bx_29: orig: bx
    def:  bx_29 = PHI(bx_20, bx_22, bx_22, bx_22)
    uses: use bx_29
C_30: orig: C
    def:  C_30 = PHI(C_12, C_31, C_31, C_31)
    uses: use C_30
C_31: orig: C
    def:  C_31 = SLICE(SCZO_23, bool, 1) (alias)
    uses: C_30 = PHI(C_12, C_31, C_31, C_31)
          C_30 = PHI(C_12, C_31, C_31, C_31)
          C_30 = PHI(C_12, C_31, C_31, C_31)
O_33: orig: O
    def:  O_33 = PHI(O_34, O_35, O_35, O_35)
    uses: use O_33
O_34: orig: O
    def:  O_34 = SLICE(SCZO_11, bool, 4) (alias)
    uses: O_33 = PHI(O_34, O_35, O_35, O_35)
O_35: orig: O
    def:  O_35 = SLICE(SCZO_23, bool, 4) (alias)
    uses: O_33 = PHI(O_34, O_35, O_35, O_35)
          O_33 = PHI(O_34, O_35, O_35, O_35)
          O_33 = PHI(O_34, O_35, O_35, O_35)
S_36: orig: S
    def:  S_36 = PHI(S_37, S_38, S_38, S_38)
    uses: use S_36
S_37: orig: S
    def:  S_37 = SLICE(SCZO_11, bool, 0) (alias)
    uses: S_36 = PHI(S_37, S_38, S_38, S_38)
S_38: orig: S
    def:  S_38 = SLICE(SCZO_23, bool, 0) (alias)
    uses: S_36 = PHI(S_37, S_38, S_38, S_38)
          S_36 = PHI(S_37, S_38, S_38, S_38)
          S_36 = PHI(S_37, S_38, S_38, S_38)
Z_40: orig: Z
    def:  Z_40 = PHI(Z_13, Z_41, Z_41, Z_41)
    uses: use Z_40
Z_41: orig: Z
    def:  Z_41 = SLICE(SCZO_23, bool, 2) (alias)
    uses: Z_40 = PHI(Z_13, Z_41, Z_41, Z_41)
          Z_40 = PHI(Z_13, Z_41, Z_41, Z_41)
          Z_40 = PHI(Z_13, Z_41, Z_41, Z_41)
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def cs
	def ss
	def si
	def bh
	bx_20 = DPB(bx, bh, 8) (alias)
	def bx
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	sp_3 = sp_2 - 0x0002
	Mem6[ss:sp_3:word16] = cs
	ds_7 = Mem6[ss:sp_3:selector]
	sp_8 = sp_3 + 0x0002
	bl_10 = Mem6[ds_7:si:byte]
	SCZO_11 = cond(bl_10 - 0x02)
	C_12 = SLICE(SCZO_11, bool, 1) (alias)
	Z_13 = SLICE(SCZO_11, bool, 2) (alias)
	O_34 = SLICE(SCZO_11, bool, 4) (alias)
	S_37 = SLICE(SCZO_11, bool, 0) (alias)
	branch Test(UGT,C_12 | Z_13) l0C00_0023
	// succ:  l0C00_0009 l0C00_0023
l0C00_0009:
	bh_16 = bh ^ bh
	bx_21 = DPB(bx_20, bh_16, 8) (alias)
	SZO_17 = cond(bh_16)
	C_18 = false
	bx_22 = bx_21 + bx_21
	bl_24 = (byte) bx_22 (alias)
	SCZO_23 = cond(bx_22)
	C_31 = SLICE(SCZO_23, bool, 1) (alias)
	O_35 = SLICE(SCZO_23, bool, 4) (alias)
	S_38 = SLICE(SCZO_23, bool, 0) (alias)
	Z_41 = SLICE(SCZO_23, bool, 2) (alias)
	switch (bl_24) { l0C00_0017 l0C00_001B l0C00_001F }
	// succ:  l0C00_0017 l0C00_001B l0C00_001F
l0C00_0017:
	ax_27 = 0x0001
	return
	// succ:  fn0C00_0000_exit
l0C00_001B:
	ax_26 = 0x0002
	return
	// succ:  fn0C00_0000_exit
l0C00_001F:
	ax_25 = 0x0003
	return
	// succ:  fn0C00_0000_exit
l0C00_0023:
	ax_14 = 0x0000
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	Z_40 = PHI(Z_13, Z_41, Z_41, Z_41)
	S_36 = PHI(S_37, S_38, S_38, S_38)
	O_33 = PHI(O_34, O_35, O_35, O_35)
	C_30 = PHI(C_12, C_31, C_31, C_31)
	bx_29 = PHI(bx_20, bx_22, bx_22, bx_22)
	ax_28 = PHI(ax_14, ax_26, ax_25, ax_27)
	use ax_28
	use bx_29
	use C_30
	use ds_7
	use O_33
	use S_36
	use sp_8
	use Z_40

