fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_3 = sp_2 - 0x0002
sp_3: orig: sp
    def:  sp_3 = sp_2 - 0x0002
    uses: Mem6[ss:sp_3:word16] = cs
          ds_7 = Mem6[ss:sp_3:selector]
          sp_8 = sp_3 + 0x0002
cs:cs
    def:  def cs
    uses: Mem6[ss:sp_3:word16] = cs
ss:ss
    def:  def ss
    uses: Mem6[ss:sp_3:word16] = cs
          ds_7 = Mem6[ss:sp_3:selector]
Mem6: orig: Mem0
    def:  Mem6[ss:sp_3:word16] = cs
    uses: ds_7 = Mem6[ss:sp_3:selector]
          bl_10 = Mem6[ds_7:si:byte]
ds_7: orig: ds
    def:  ds_7 = Mem6[ss:sp_3:selector]
    uses: bl_10 = Mem6[ds_7:si:byte]
          use ds_7
sp_8: orig: sp
    def:  sp_8 = sp_3 + 0x0002
    uses: use sp_8
si:si
    def:  def si
    uses: bl_10 = Mem6[ds_7:si:byte]
bl_10: orig: bl
    def:  bl_10 = Mem6[ds_7:si:byte]
    uses: SCZO_11 = cond(bl_10 - 0x02)
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(bl_10 - 0x02)
    uses: CZ_12 = SLICE(SCZO_11, bool, 2) (alias)
          O_34 = SLICE(SCZO_11, bool, 4) (alias)
          S_37 = SLICE(SCZO_11, bool, 0) (alias)
CZ_12: orig: CZ
    def:  CZ_12 = SLICE(SCZO_11, bool, 2) (alias)
    uses: branch Test(UGT,CZ_12) l0C00_0023
          C_30 = SLICE(CZ_12, bool, 1) (alias)
          Z_41 = SLICE(CZ_12, bool, 2) (alias)
ax_13: orig: ax
    def:  ax_13 = 0x0000
    uses: ax_27 = PHI(ax_13, ax_25, ax_24, ax_26)
bh:bh
    def:  def bh
    uses: bh_15 = bh ^ bh
          bh_15 = bh ^ bh
          bx_19 = DPB(bx, bh, 8) (alias)
bh_15: orig: bh
    def:  bh_15 = bh ^ bh
    uses: SZO_16 = cond(bh_15)
          bx_20 = DPB(bx_19, bh_15, 8) (alias)
SZO_16: orig: SZO
    def:  SZO_16 = cond(bh_15)
C_17: orig: C
    def:  C_17 = false
bx:bx
    def:  def bx
    uses: bx_19 = DPB(bx, bh, 8) (alias)
bx_19: orig: bx
    def:  bx_19 = DPB(bx, bh, 8) (alias)
    uses: bx_20 = DPB(bx_19, bh_15, 8) (alias)
          bx_28 = PHI(bx_19, bx_21, bx_21, bx_21)
bx_20: orig: bx
    def:  bx_20 = DPB(bx_19, bh_15, 8) (alias)
    uses: bx_21 = bx_20 + bx_20
          bx_21 = bx_20 + bx_20
bx_21: orig: bx
    def:  bx_21 = bx_20 + bx_20
    uses: SCZO_22 = cond(bx_21)
          bl_23 = (byte) bx_21 (alias)
          bx_28 = PHI(bx_19, bx_21, bx_21, bx_21)
          bx_28 = PHI(bx_19, bx_21, bx_21, bx_21)
          bx_28 = PHI(bx_19, bx_21, bx_21, bx_21)
SCZO_22: orig: SCZO
    def:  SCZO_22 = cond(bx_21)
    uses: C_31 = SLICE(SCZO_22, bool, 1) (alias)
          O_35 = SLICE(SCZO_22, bool, 4) (alias)
          S_38 = SLICE(SCZO_22, bool, 0) (alias)
          Z_42 = SLICE(SCZO_22, bool, 2) (alias)
bl_23: orig: bl
    def:  bl_23 = (byte) bx_21 (alias)
    uses: switch (bl_23) { l0C00_0017 l0C00_001B l0C00_001F }
ax_24: orig: ax
    def:  ax_24 = 0x0003
    uses: ax_27 = PHI(ax_13, ax_25, ax_24, ax_26)
ax_25: orig: ax
    def:  ax_25 = 0x0002
    uses: ax_27 = PHI(ax_13, ax_25, ax_24, ax_26)
ax_26: orig: ax
    def:  ax_26 = 0x0001
    uses: ax_27 = PHI(ax_13, ax_25, ax_24, ax_26)
ax_27: orig: ax
    def:  ax_27 = PHI(ax_13, ax_25, ax_24, ax_26)
    uses: use ax_27
bx_28: orig: bx
    def:  bx_28 = PHI(bx_19, bx_21, bx_21, bx_21)
    uses: use bx_28
C_29: orig: C
    def:  C_29 = PHI(C_30, C_31, C_31, C_31)
    uses: use C_29
C_30: orig: C
    def:  C_30 = SLICE(CZ_12, bool, 1) (alias)
    uses: C_29 = PHI(C_30, C_31, C_31, C_31)
C_31: orig: C
    def:  C_31 = SLICE(SCZO_22, bool, 1) (alias)
    uses: C_29 = PHI(C_30, C_31, C_31, C_31)
          C_29 = PHI(C_30, C_31, C_31, C_31)
          C_29 = PHI(C_30, C_31, C_31, C_31)
O_33: orig: O
    def:  O_33 = PHI(O_34, O_35, O_35, O_35)
    uses: use O_33
O_34: orig: O
    def:  O_34 = SLICE(SCZO_11, bool, 4) (alias)
    uses: O_33 = PHI(O_34, O_35, O_35, O_35)
O_35: orig: O
    def:  O_35 = SLICE(SCZO_22, bool, 4) (alias)
    uses: O_33 = PHI(O_34, O_35, O_35, O_35)
          O_33 = PHI(O_34, O_35, O_35, O_35)
          O_33 = PHI(O_34, O_35, O_35, O_35)
S_36: orig: S
    def:  S_36 = PHI(S_37, S_38, S_38, S_38)
    uses: use S_36
S_37: orig: S
    def:  S_37 = SLICE(SCZO_11, bool, 0) (alias)
    uses: S_36 = PHI(S_37, S_38, S_38, S_38)
S_38: orig: S
    def:  S_38 = SLICE(SCZO_22, bool, 0) (alias)
    uses: S_36 = PHI(S_37, S_38, S_38, S_38)
          S_36 = PHI(S_37, S_38, S_38, S_38)
          S_36 = PHI(S_37, S_38, S_38, S_38)
Z_40: orig: Z
    def:  Z_40 = PHI(Z_41, Z_42, Z_42, Z_42)
    uses: use Z_40
Z_41: orig: Z
    def:  Z_41 = SLICE(CZ_12, bool, 2) (alias)
    uses: Z_40 = PHI(Z_41, Z_42, Z_42, Z_42)
Z_42: orig: Z
    def:  Z_42 = SLICE(SCZO_22, bool, 2) (alias)
    uses: Z_40 = PHI(Z_41, Z_42, Z_42, Z_42)
          Z_40 = PHI(Z_41, Z_42, Z_42, Z_42)
          Z_40 = PHI(Z_41, Z_42, Z_42, Z_42)
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def cs
	def ss
	def si
	def bh
	bx_19 = DPB(bx, bh, 8) (alias)
	def bx
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	sp_3 = sp_2 - 0x0002
	Mem6[ss:sp_3:word16] = cs
	ds_7 = Mem6[ss:sp_3:selector]
	sp_8 = sp_3 + 0x0002
	bl_10 = Mem6[ds_7:si:byte]
	SCZO_11 = cond(bl_10 - 0x02)
	CZ_12 = SLICE(SCZO_11, bool, 2) (alias)
	C_30 = SLICE(CZ_12, bool, 1) (alias)
	O_34 = SLICE(SCZO_11, bool, 4) (alias)
	S_37 = SLICE(SCZO_11, bool, 0) (alias)
	Z_41 = SLICE(CZ_12, bool, 2) (alias)
	branch Test(UGT,CZ_12) l0C00_0023
	// succ:  l0C00_0009 l0C00_0023
l0C00_0009:
	bh_15 = bh ^ bh
	bx_20 = DPB(bx_19, bh_15, 8) (alias)
	SZO_16 = cond(bh_15)
	C_17 = false
	bx_21 = bx_20 + bx_20
	bl_23 = (byte) bx_21 (alias)
	SCZO_22 = cond(bx_21)
	C_31 = SLICE(SCZO_22, bool, 1) (alias)
	O_35 = SLICE(SCZO_22, bool, 4) (alias)
	S_38 = SLICE(SCZO_22, bool, 0) (alias)
	Z_42 = SLICE(SCZO_22, bool, 2) (alias)
	switch (bl_23) { l0C00_0017 l0C00_001B l0C00_001F }
	// succ:  l0C00_0017 l0C00_001B l0C00_001F
l0C00_0017:
	ax_26 = 0x0001
	return
	// succ:  fn0C00_0000_exit
l0C00_001B:
	ax_25 = 0x0002
	return
	// succ:  fn0C00_0000_exit
l0C00_001F:
	ax_24 = 0x0003
	return
	// succ:  fn0C00_0000_exit
l0C00_0023:
	ax_13 = 0x0000
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	Z_40 = PHI(Z_41, Z_42, Z_42, Z_42)
	S_36 = PHI(S_37, S_38, S_38, S_38)
	O_33 = PHI(O_34, O_35, O_35, O_35)
	C_29 = PHI(C_30, C_31, C_31, C_31)
	bx_28 = PHI(bx_19, bx_21, bx_21, bx_21)
	ax_27 = PHI(ax_13, ax_25, ax_24, ax_26)
	use ax_27
	use bx_28
	use C_29
	use ds_7
	use O_33
	use S_36
	use sp_8
	use Z_40

