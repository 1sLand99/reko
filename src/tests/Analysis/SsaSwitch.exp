fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_4 = sp_2 - 0x0002
Top_3: orig: Top
    def:  Top_3 = 0
    uses: use Top_3
sp_4: orig: sp
    def:  sp_4 = sp_2 - 0x0002
    uses: Mem7[ss:sp_4:word16] = cs
          ds_8 = Mem7[ss:sp_4:selector]
          sp_9 = sp_4 + 0x0002
cs:cs
    def:  def cs
    uses: Mem7[ss:sp_4:word16] = cs
ss:ss
    def:  def ss
    uses: Mem7[ss:sp_4:word16] = cs
          ds_8 = Mem7[ss:sp_4:selector]
Mem7: orig: Mem0
    def:  Mem7[ss:sp_4:word16] = cs
    uses: ds_8 = Mem7[ss:sp_4:selector]
          bl_11 = Mem7[ds_8:si:byte]
ds_8: orig: ds
    def:  ds_8 = Mem7[ss:sp_4:selector]
    uses: bl_11 = Mem7[ds_8:si:byte]
          use ds_8
sp_9: orig: sp
    def:  sp_9 = sp_4 + 0x0002
    uses: use sp_9
si:si
    def:  def si
    uses: bl_11 = Mem7[ds_8:si:byte]
bl_11: orig: bl
    def:  bl_11 = Mem7[ds_8:si:byte]
    uses: SCZO_12 = cond(bl_11 - 0x02)
          bx_21 = DPB(bx_20, bl_11, 0) (alias)
SCZO_12: orig: SCZO
    def:  SCZO_12 = cond(bl_11 - 0x02)
    uses: CZ_13 = SLICE(SCZO_12, bool, 2) (alias)
          C_33 = SLICE(SCZO_12, bool, 1) (alias)
          O_37 = SLICE(SCZO_12, bool, 4) (alias)
          S_40 = SLICE(SCZO_12, bool, 0) (alias)
          Z_45 = SLICE(SCZO_12, bool, 2) (alias)
CZ_13: orig: CZ
    def:  CZ_13 = SLICE(SCZO_12, bool, 2) (alias)
    uses: branch Test(UGT,CZ_13) l0C00_0023
ax_14: orig: ax
    def:  ax_14 = 0x0000
    uses: ax_30 = PHI(ax_14, ax_28, ax_27, ax_29)
bh:bh
    def:  def bh
    uses: bh_16 = bh ^ bh
          bh_16 = bh ^ bh
          bx_20 = DPB(bx, bh, 8) (alias)
          bx_22 = DPB(bx_21, bh, 8) (alias)
bh_16: orig: bh
    def:  bh_16 = bh ^ bh
    uses: SZO_17 = cond(bh_16)
          bx_23 = DPB(bx_22, bh_16, 8) (alias)
SZO_17: orig: SZO
    def:  SZO_17 = cond(bh_16)
C_18: orig: C
    def:  C_18 = false
bx:bx
    def:  def bx
    uses: bx_20 = DPB(bx, bh, 8) (alias)
bx_20: orig: bx
    def:  bx_20 = DPB(bx, bh, 8) (alias)
    uses: bx_21 = DPB(bx_20, bl_11, 0) (alias)
bx_21: orig: bx
    def:  bx_21 = DPB(bx_20, bl_11, 0) (alias)
    uses: bx_22 = DPB(bx_21, bh, 8) (alias)
bx_22: orig: bx
    def:  bx_22 = DPB(bx_21, bh, 8) (alias)
    uses: bx_23 = DPB(bx_22, bh_16, 8) (alias)
          bx_31 = PHI(bx_22, bx_24, bx_24, bx_24)
bx_23: orig: bx
    def:  bx_23 = DPB(bx_22, bh_16, 8) (alias)
    uses: bx_24 = bx_23 + bx_23
          bx_24 = bx_23 + bx_23
bx_24: orig: bx
    def:  bx_24 = bx_23 + bx_23
    uses: SCZO_25 = cond(bx_24)
          bl_26 = (byte) bx_24 (alias)
          bx_31 = PHI(bx_22, bx_24, bx_24, bx_24)
          bx_31 = PHI(bx_22, bx_24, bx_24, bx_24)
          bx_31 = PHI(bx_22, bx_24, bx_24, bx_24)
SCZO_25: orig: SCZO
    def:  SCZO_25 = cond(bx_24)
    uses: C_34 = SLICE(SCZO_25, bool, 1) (alias)
          O_38 = SLICE(SCZO_25, bool, 4) (alias)
          S_41 = SLICE(SCZO_25, bool, 0) (alias)
          Z_46 = SLICE(SCZO_25, bool, 2) (alias)
bl_26: orig: bl
    def:  bl_26 = (byte) bx_24 (alias)
    uses: switch (bl_26) { l0C00_0017 l0C00_001B l0C00_001F }
ax_27: orig: ax
    def:  ax_27 = 0x0003
    uses: ax_30 = PHI(ax_14, ax_28, ax_27, ax_29)
ax_28: orig: ax
    def:  ax_28 = 0x0002
    uses: ax_30 = PHI(ax_14, ax_28, ax_27, ax_29)
ax_29: orig: ax
    def:  ax_29 = 0x0001
    uses: ax_30 = PHI(ax_14, ax_28, ax_27, ax_29)
ax_30: orig: ax
    def:  ax_30 = PHI(ax_14, ax_28, ax_27, ax_29)
    uses: use ax_30
bx_31: orig: bx
    def:  bx_31 = PHI(bx_22, bx_24, bx_24, bx_24)
    uses: use bx_31
C_32: orig: C
    def:  C_32 = PHI(C_33, C_34, C_34, C_34)
    uses: use C_32
C_33: orig: C
    def:  C_33 = SLICE(SCZO_12, bool, 1) (alias)
    uses: C_32 = PHI(C_33, C_34, C_34, C_34)
C_34: orig: C
    def:  C_34 = SLICE(SCZO_25, bool, 1) (alias)
    uses: C_32 = PHI(C_33, C_34, C_34, C_34)
          C_32 = PHI(C_33, C_34, C_34, C_34)
          C_32 = PHI(C_33, C_34, C_34, C_34)
O_36: orig: O
    def:  O_36 = PHI(O_37, O_38, O_38, O_38)
    uses: use O_36
O_37: orig: O
    def:  O_37 = SLICE(SCZO_12, bool, 4) (alias)
    uses: O_36 = PHI(O_37, O_38, O_38, O_38)
O_38: orig: O
    def:  O_38 = SLICE(SCZO_25, bool, 4) (alias)
    uses: O_36 = PHI(O_37, O_38, O_38, O_38)
          O_36 = PHI(O_37, O_38, O_38, O_38)
          O_36 = PHI(O_37, O_38, O_38, O_38)
S_39: orig: S
    def:  S_39 = PHI(S_40, S_41, S_41, S_41)
    uses: use S_39
S_40: orig: S
    def:  S_40 = SLICE(SCZO_12, bool, 0) (alias)
    uses: S_39 = PHI(S_40, S_41, S_41, S_41)
S_41: orig: S
    def:  S_41 = SLICE(SCZO_25, bool, 0) (alias)
    uses: S_39 = PHI(S_40, S_41, S_41, S_41)
          S_39 = PHI(S_40, S_41, S_41, S_41)
          S_39 = PHI(S_40, S_41, S_41, S_41)
Z_44: orig: Z
    def:  Z_44 = PHI(Z_45, Z_46, Z_46, Z_46)
    uses: use Z_44
Z_45: orig: Z
    def:  Z_45 = SLICE(SCZO_12, bool, 2) (alias)
    uses: Z_44 = PHI(Z_45, Z_46, Z_46, Z_46)
Z_46: orig: Z
    def:  Z_46 = SLICE(SCZO_25, bool, 2) (alias)
    uses: Z_44 = PHI(Z_45, Z_46, Z_46, Z_46)
          Z_44 = PHI(Z_45, Z_46, Z_46, Z_46)
          Z_44 = PHI(Z_45, Z_46, Z_46, Z_46)
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def cs
	def ss
	def si
	def bh
	bx_20 = DPB(bx, bh, 8) (alias)
	bx_22 = DPB(bx_21, bh, 8) (alias)
	def bx
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0
	sp_4 = sp_2 - 0x0002
	Mem7[ss:sp_4:word16] = cs
	ds_8 = Mem7[ss:sp_4:selector]
	sp_9 = sp_4 + 0x0002
	bl_11 = Mem7[ds_8:si:byte]
	bx_21 = DPB(bx_20, bl_11, 0) (alias)
	SCZO_12 = cond(bl_11 - 0x02)
	CZ_13 = SLICE(SCZO_12, bool, 2) (alias)
	C_33 = SLICE(SCZO_12, bool, 1) (alias)
	O_37 = SLICE(SCZO_12, bool, 4) (alias)
	S_40 = SLICE(SCZO_12, bool, 0) (alias)
	Z_45 = SLICE(SCZO_12, bool, 2) (alias)
	branch Test(UGT,CZ_13) l0C00_0023
	// succ:  l0C00_0009 l0C00_0023
l0C00_0009:
	bh_16 = bh ^ bh
	bx_23 = DPB(bx_22, bh_16, 8) (alias)
	SZO_17 = cond(bh_16)
	C_18 = false
	bx_24 = bx_23 + bx_23
	bl_26 = (byte) bx_24 (alias)
	SCZO_25 = cond(bx_24)
	C_34 = SLICE(SCZO_25, bool, 1) (alias)
	O_38 = SLICE(SCZO_25, bool, 4) (alias)
	S_41 = SLICE(SCZO_25, bool, 0) (alias)
	Z_46 = SLICE(SCZO_25, bool, 2) (alias)
	switch (bl_26) { l0C00_0017 l0C00_001B l0C00_001F }
	// succ:  l0C00_0017 l0C00_001B l0C00_001F
l0C00_0017:
	ax_29 = 0x0001
	return
	// succ:  fn0C00_0000_exit
l0C00_001B:
	ax_28 = 0x0002
	return
	// succ:  fn0C00_0000_exit
l0C00_001F:
	ax_27 = 0x0003
	return
	// succ:  fn0C00_0000_exit
l0C00_0023:
	ax_14 = 0x0000
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	Z_44 = PHI(Z_45, Z_46, Z_46, Z_46)
	S_39 = PHI(S_40, S_41, S_41, S_41)
	O_36 = PHI(O_37, O_38, O_38, O_38)
	C_32 = PHI(C_33, C_34, C_34, C_34)
	bx_31 = PHI(bx_22, bx_24, bx_24, bx_24)
	ax_30 = PHI(ax_14, ax_28, ax_27, ax_29)
	use ax_30
	use bx_31
	use C_32
	use ds_8
	use O_36
	use S_39
	use sp_9
	use Top_3
	use Z_44

