= fn0C00_0000 ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
Top_3: orig: Top
    def:  Top_3 = 0x00
dx:dx
    def:  def dx
    uses: dx_5 = dx ^ dx
          dx_5 = dx ^ dx
dx_5: orig: dx
    def:  dx_5 = dx ^ dx
    uses: SZO_6 = cond(dx_5)
          dx_15 = PHI(dx_5, dx_16, dx_16)
SZO_6: orig: SZO
    def:  SZO_6 = cond(dx_5)
C_7: orig: C
    def:  C_7 = false
cx_8: orig: cx
    def:  cx_8 = 0x0004
    uses: cx_18 = PHI(cx_8, cx_19, cx_20)
di_9: orig: di
    def:  di_9 = 0x0004
    uses: di_21 = PHI(di_9, di_21, di_22)
ds_10: orig: ds
    def:  ds_10 = PHI(ds, ds_10, ds_10)
si_11: orig: si
    def:  si_11 = PHI(si, si_14, si_14)
    uses: ax_13 = Mem0[ds:si_11:word16]
          si_14 = si_11 + 0x0002
Mem12: orig: Mem0
    def:  Mem12 = PHI(Mem0, Mem12, Mem12)
ax_13: orig: ax
    def:  ax_13 = Mem0[ds:si_11:word16]
    uses: dx_16 = dx_15 + ax_13
si_14: orig: si
    def:  si_14 = si_11 + 0x0002
    uses: si_11 = PHI(si, si_14, si_14)
          si_11 = PHI(si, si_14, si_14)
dx_15: orig: dx
    def:  dx_15 = PHI(dx_5, dx_16, dx_16)
    uses: dx_16 = dx_15 + ax_13
dx_16: orig: dx
    def:  dx_16 = dx_15 + ax_13
    uses: SCZO_17 = cond(dx_16)
          Mem25[ds:0x0300:word16] = dx_16
          dx_15 = PHI(dx_5, dx_16, dx_16)
          dx_15 = PHI(dx_5, dx_16, dx_16)
SCZO_17: orig: SCZO
    def:  SCZO_17 = cond(dx_16)
cx_18: orig: cx
    def:  cx_18 = PHI(cx_8, cx_19, cx_20)
    uses: cx_19 = cx_18 - 0x0001
cx_19: orig: cx
    def:  cx_19 = cx_18 - 0x0001
    uses: branch cx_19 != 0x0000 l0C00_0008
          cx_18 = PHI(cx_8, cx_19, cx_20)
cx_20: orig: cx
    def:  cx_20 = 0x0004
    uses: cx_18 = PHI(cx_8, cx_19, cx_20)
di_21: orig: di
    def:  di_21 = PHI(di_9, di_21, di_22)
    uses: di_22 = di_21 - 0x0001
          di_21 = PHI(di_9, di_21, di_22)
di_22: orig: di
    def:  di_22 = di_21 - 0x0001
    uses: SZO_23 = cond(di_22)
          di_21 = PHI(di_9, di_21, di_22)
          branch di_22 != 0x0000 l0C00_0008
SZO_23: orig: SZO
    def:  SZO_23 = cond(di_22)
    uses: Z_24 = SLICE(SZO_23, bool, 2) (alias)
Z_24: orig: Z
    def:  Z_24 = SLICE(SZO_23, bool, 2) (alias)
Mem25: orig: Mem0
    def:  Mem25[ds:0x0300:word16] = dx_16
ds:ds
    def:  def ds
    uses: ax_13 = Mem0[ds:si_11:word16]
          Mem25[ds:0x0300:word16] = dx_16
si:si
    def:  def si
    uses: si_11 = PHI(si, si_14, si_14)
Mem0:Global
    def:  def Mem0
    uses: ax_13 = Mem0[ds:si_11:word16]
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def dx
	def ds
	def si
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0x00
	dx_5 = dx ^ dx
	SZO_6 = cond(dx_5)
	C_7 = false
	cx_8 = 0x0004
	di_9 = 0x0004
	// succ:  l0C00_0008
l0C00_0008:
	di_21 = PHI(di_9, di_21, di_22)
	cx_18 = PHI(cx_8, cx_19, cx_20)
	dx_15 = PHI(dx_5, dx_16, dx_16)
	si_11 = PHI(si, si_14, si_14)
	ax_13 = Mem0[ds:si_11:word16]
	si_14 = si_11 + 0x0002
	dx_16 = dx_15 + ax_13
	SCZO_17 = cond(dx_16)
	cx_19 = cx_18 - 0x0001
	branch cx_19 != 0x0000 l0C00_0008
	// succ:  l0C00_000D l0C00_0008
l0C00_000D:
	cx_20 = 0x0004
	di_22 = di_21 - 0x0001
	SZO_23 = cond(di_22)
	Z_24 = SLICE(SZO_23, bool, 2) (alias)
	branch di_22 != 0x0000 l0C00_0008
	// succ:  l0C00_0013 l0C00_0008
l0C00_0013:
	Mem25[ds:0x0300:word16] = dx_16
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
Top_3: orig: Top
    def:  Top_3 = 0x00
dx:dx
    def:  def dx
dx_5: orig: dx
    def:  dx_5 = 0x0000
    uses: dx_15 = PHI(dx_5, dx_16, dx_16)
SZO_6: orig: SZO
    def:  SZO_6 = cond(0x0000)
C_7: orig: C
    def:  C_7 = false
cx_8: orig: cx
    def:  cx_8 = 0x0004
    uses: cx_18 = PHI(cx_8, cx_19, cx_20)
di_9: orig: di
    def:  di_9 = 0x0004
    uses: di_21 = PHI(di_9, di_21, di_22)
ds_10: orig: ds
    def:  ds_10 = PHI(ds, ds_10, ds_10)
si_11: orig: si
    def:  si_11 = PHI(si, si_14, si_14)
    uses: ax_13 = Mem0[ds:si_11:word16]
          si_14 = si_11 + 0x0002
Mem12: orig: Mem0
    def:  Mem12 = PHI(Mem0, Mem12, Mem12)
ax_13: orig: ax
    def:  ax_13 = Mem0[ds:si_11:word16]
    uses: dx_16 = dx_15 + ax_13
si_14: orig: si
    def:  si_14 = si_11 + 0x0002
    uses: si_11 = PHI(si, si_14, si_14)
          si_11 = PHI(si, si_14, si_14)
dx_15: orig: dx
    def:  dx_15 = PHI(dx_5, dx_16, dx_16)
    uses: dx_16 = dx_15 + ax_13
dx_16: orig: dx
    def:  dx_16 = dx_15 + ax_13
    uses: SCZO_17 = cond(dx_16)
          Mem25[ds:0x0300:word16] = dx_16
          dx_15 = PHI(dx_5, dx_16, dx_16)
          dx_15 = PHI(dx_5, dx_16, dx_16)
SCZO_17: orig: SCZO
    def:  SCZO_17 = cond(dx_16)
cx_18: orig: cx
    def:  cx_18 = PHI(cx_8, cx_19, cx_20)
    uses: cx_19 = cx_18 - 0x0001
cx_19: orig: cx
    def:  cx_19 = cx_18 - 0x0001
    uses: branch cx_19 != 0x0000 l0C00_0008
          cx_18 = PHI(cx_8, cx_19, cx_20)
cx_20: orig: cx
    def:  cx_20 = 0x0004
    uses: cx_18 = PHI(cx_8, cx_19, cx_20)
di_21: orig: di
    def:  di_21 = PHI(di_9, di_21, di_22)
    uses: di_22 = di_21 - 0x0001
          di_21 = PHI(di_9, di_21, di_22)
di_22: orig: di
    def:  di_22 = di_21 - 0x0001
    uses: SZO_23 = cond(di_22)
          branch di_22 != 0x0000 l0C00_0008
          di_21 = PHI(di_9, di_21, di_22)
SZO_23: orig: SZO
    def:  SZO_23 = cond(di_22)
    uses: Z_24 = SLICE(SZO_23, bool, 2) (alias)
Z_24: orig: Z
    def:  Z_24 = SLICE(SZO_23, bool, 2) (alias)
Mem25: orig: Mem0
    def:  Mem25[ds:0x0300:word16] = dx_16
ds:ds
    def:  def ds
    uses: ax_13 = Mem0[ds:si_11:word16]
          Mem25[ds:0x0300:word16] = dx_16
si:si
    def:  def si
    uses: si_11 = PHI(si, si_14, si_14)
Mem0:Global
    def:  def Mem0
    uses: ax_13 = Mem0[ds:si_11:word16]
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def dx
	def ds
	def si
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0x00
	dx_5 = 0x0000
	SZO_6 = cond(0x0000)
	C_7 = false
	cx_8 = 0x0004
	di_9 = 0x0004
	// succ:  l0C00_0008
l0C00_0008:
	di_21 = PHI(di_9, di_21, di_22)
	cx_18 = PHI(cx_8, cx_19, cx_20)
	dx_15 = PHI(dx_5, dx_16, dx_16)
	si_11 = PHI(si, si_14, si_14)
	ax_13 = Mem0[ds:si_11:word16]
	si_14 = si_11 + 0x0002
	dx_16 = dx_15 + ax_13
	SCZO_17 = cond(dx_16)
	cx_19 = cx_18 - 0x0001
	branch cx_19 != 0x0000 l0C00_0008
	// succ:  l0C00_000D l0C00_0008
l0C00_000D:
	cx_20 = 0x0004
	di_22 = di_21 - 0x0001
	SZO_23 = cond(di_22)
	Z_24 = SLICE(SZO_23, bool, 2) (alias)
	branch di_22 != 0x0000 l0C00_0008
	// succ:  l0C00_0013 l0C00_0008
l0C00_0013:
	Mem25[ds:0x0300:word16] = dx_16
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
