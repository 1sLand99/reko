= fn0C00_0000 ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
dx_3: orig: dx
    def:  dx_3 = 0x0000
    uses: dx_13 = PHI(dx_3, dx_14, dx_14)
SZO_4: orig: SZO
    def:  SZO_4 = cond(0x0000)
C_5: orig: C
    def:  C_5 = false
cx_6: orig: cx
    def:  cx_6 = 0x0004
    uses: cx_16 = PHI(cx_6, cx_17, cx_18)
di_7: orig: di
    def:  di_7 = 0x0004
    uses: di_19 = PHI(di_7, di_19, di_20)
ds_8: orig: ds
    def:  ds_8 = PHI(ds, ds_8, ds_8)
si_9: orig: si
    def:  si_9 = PHI(si, si_12, si_12)
    uses: ax_11 = Mem0[ds:si_9:word16]
          si_12 = si_9 + 0x0002
Mem10: orig: Mem0
    def:  Mem10 = PHI(Mem0, Mem10, Mem10)
ax_11: orig: ax
    def:  ax_11 = Mem0[ds:si_9:word16]
    uses: dx_14 = dx_13 + ax_11
si_12: orig: si
    def:  si_12 = si_9 + 0x0002
    uses: si_9 = PHI(si, si_12, si_12)
          si_9 = PHI(si, si_12, si_12)
dx_13: orig: dx
    def:  dx_13 = PHI(dx_3, dx_14, dx_14)
    uses: dx_14 = dx_13 + ax_11
dx_14: orig: dx
    def:  dx_14 = dx_13 + ax_11
    uses: SCZO_15 = cond(dx_14)
          Mem22[ds:0x0300:word16] = dx_14
          dx_13 = PHI(dx_3, dx_14, dx_14)
          dx_13 = PHI(dx_3, dx_14, dx_14)
SCZO_15: orig: SCZO
    def:  SCZO_15 = cond(dx_14)
cx_16: orig: cx
    def:  cx_16 = PHI(cx_6, cx_17, cx_18)
    uses: cx_17 = cx_16 - 0x0001
cx_17: orig: cx
    def:  cx_17 = cx_16 - 0x0001
    uses: branch cx_17 != 0x0000 l0C00_0008
          cx_16 = PHI(cx_6, cx_17, cx_18)
cx_18: orig: cx
    def:  cx_18 = 0x0004
    uses: cx_16 = PHI(cx_6, cx_17, cx_18)
di_19: orig: di
    def:  di_19 = PHI(di_7, di_19, di_20)
    uses: di_20 = di_19 - 0x0001
          di_19 = PHI(di_7, di_19, di_20)
di_20: orig: di
    def:  di_20 = di_19 - 0x0001
    uses: SZO_21 = cond(di_20)
          di_19 = PHI(di_7, di_19, di_20)
          branch di_20 != 0x0000 l0C00_0008
SZO_21: orig: SZO
    def:  SZO_21 = cond(di_20)
Mem22: orig: Mem0
    def:  Mem22[ds:0x0300:word16] = dx_14
ds:ds
    def:  def ds
si:si
    def:  def si
    uses: si_9 = PHI(si, si_12, si_12)
Mem0:Global memory
    def:  def Mem0
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 si, selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	def si
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_3 = 0x0000
	SZO_4 = cond(0x0000)
	C_5 = false
	cx_6 = 0x0004
	di_7 = 0x0004
	// succ:  l0C00_0008
l0C00_0008:
	di_19 = PHI(di_7, di_19, di_20)
	cx_16 = PHI(cx_6, cx_17, cx_18)
	dx_13 = PHI(dx_3, dx_14, dx_14)
	si_9 = PHI(si, si_12, si_12)
	ax_11 = Mem0[ds:si_9:word16]
	si_12 = si_9 + 0x0002
	dx_14 = dx_13 + ax_11
	SCZO_15 = cond(dx_14)
	cx_17 = cx_16 - 0x0001
	branch cx_17 != 0x0000 l0C00_0008
	// succ:  l0C00_000D l0C00_0008
l0C00_000D:
	cx_18 = 0x0004
	di_20 = di_19 - 0x0001
	SZO_21 = cond(di_20)
	branch di_20 != 0x0000 l0C00_0008
	// succ:  l0C00_0013 l0C00_0008
l0C00_0013:
	Mem22[ds:0x0300:word16] = dx_14
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
dx_3: orig: dx
    def:  dx_3 = 0x0000
    uses: dx_13 = PHI(dx_3, dx_14, dx_14)
SZO_4: orig: SZO
    def:  SZO_4 = cond(0x0000)
C_5: orig: C
    def:  C_5 = false
cx_6: orig: cx
    def:  cx_6 = 0x0004
    uses: cx_16 = PHI(cx_6, cx_17, cx_18)
di_7: orig: di
    def:  di_7 = 0x0004
    uses: di_19 = PHI(di_7, di_19, di_20)
ds_8: orig: ds
    def:  ds_8 = PHI(ds, ds_8, ds_8)
si_9: orig: si
    def:  si_9 = PHI(si, si_12, si_12)
    uses: ax_11 = Mem0[ds:si_9:word16]
          si_12 = si_9 + 0x0002
Mem10: orig: Mem0
    def:  Mem10 = PHI(Mem0, Mem10, Mem10)
ax_11: orig: ax
    def:  ax_11 = Mem0[ds:si_9:word16]
    uses: dx_14 = dx_13 + ax_11
si_12: orig: si
    def:  si_12 = si_9 + 0x0002
    uses: si_9 = PHI(si, si_12, si_12)
          si_9 = PHI(si, si_12, si_12)
dx_13: orig: dx
    def:  dx_13 = PHI(dx_3, dx_14, dx_14)
    uses: dx_14 = dx_13 + ax_11
dx_14: orig: dx
    def:  dx_14 = dx_13 + ax_11
    uses: SCZO_15 = cond(dx_14)
          Mem22[ds:0x0300:word16] = dx_14
          dx_13 = PHI(dx_3, dx_14, dx_14)
          dx_13 = PHI(dx_3, dx_14, dx_14)
SCZO_15: orig: SCZO
    def:  SCZO_15 = cond(dx_14)
cx_16: orig: cx
    def:  cx_16 = PHI(cx_6, cx_17, cx_18)
    uses: cx_17 = cx_16 - 0x0001
cx_17: orig: cx
    def:  cx_17 = cx_16 - 0x0001
    uses: branch cx_17 != 0x0000 l0C00_0008
          cx_16 = PHI(cx_6, cx_17, cx_18)
cx_18: orig: cx
    def:  cx_18 = 0x0004
    uses: cx_16 = PHI(cx_6, cx_17, cx_18)
di_19: orig: di
    def:  di_19 = PHI(di_7, di_19, di_20)
    uses: di_20 = di_19 - 0x0001
          di_19 = PHI(di_7, di_19, di_20)
di_20: orig: di
    def:  di_20 = di_19 - 0x0001
    uses: SZO_21 = cond(di_20)
          di_19 = PHI(di_7, di_19, di_20)
          branch di_20 != 0x0000 l0C00_0008
SZO_21: orig: SZO
    def:  SZO_21 = cond(di_20)
Mem22: orig: Mem0
    def:  Mem22[ds:0x0300:word16] = dx_14
ds:ds
    def:  def ds
si:si
    def:  def si
    uses: si_9 = PHI(si, si_12, si_12)
Mem0:Global memory
    def:  def Mem0
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 si, selector ds)
fn0C00_0000_entry:
	def fp
	def ds
	def si
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	dx_3 = 0x0000
	SZO_4 = cond(0x0000)
	C_5 = false
	cx_6 = 0x0004
	di_7 = 0x0004
	// succ:  l0C00_0008
l0C00_0008:
	di_19 = PHI(di_7, di_19, di_20)
	cx_16 = PHI(cx_6, cx_17, cx_18)
	dx_13 = PHI(dx_3, dx_14, dx_14)
	si_9 = PHI(si, si_12, si_12)
	ax_11 = Mem0[ds:si_9:word16]
	si_12 = si_9 + 0x0002
	dx_14 = dx_13 + ax_11
	SCZO_15 = cond(dx_14)
	cx_17 = cx_16 - 0x0001
	branch cx_17 != 0x0000 l0C00_0008
	// succ:  l0C00_000D l0C00_0008
l0C00_000D:
	cx_18 = 0x0004
	di_20 = di_19 - 0x0001
	SZO_21 = cond(di_20)
	branch di_20 != 0x0000 l0C00_0008
	// succ:  l0C00_0013 l0C00_0008
l0C00_0013:
	Mem22[ds:0x0300:word16] = dx_14
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
