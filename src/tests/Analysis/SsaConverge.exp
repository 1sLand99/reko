fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: use sp_2
bx:bx
    def:  def bx
    uses: SCZO_4 = cond(bx - 0x0000)
SCZO_4: orig: SCZO
    def:  SCZO_4 = cond(bx - 0x0000)
    uses: Z_5 = SLICE(SCZO_4, bool, 2) (alias)
          SZO_10 = SLICE(SCZO_4, bool, 4) (alias)
          C_18 = SLICE(SCZO_4, bool, 1) (alias)
          O_20 = SLICE(SCZO_4, bool, 4) (alias)
          S_23 = SLICE(SCZO_4, bool, 0) (alias)
Z_5: orig: Z
    def:  Z_5 = SLICE(SCZO_4, bool, 2) (alias)
    uses: branch Test(EQ,Z_5) l0C00_0013
          Z_26 = PHI(Z_5, Z_27, Z_5)
          Z_26 = PHI(Z_5, Z_27, Z_5)
ax:ax
    def:  def ax
    uses: ax_7 = ax ^ ax
          ax_7 = ax ^ ax
ax_7: orig: ax
    def:  ax_7 = ax ^ ax
    uses: SZO_8 = cond(ax_7)
          ax_13 = PHI(ax_12, ax_7, ax_11)
SZO_8: orig: SZO
    def:  SZO_8 = cond(ax_7)
    uses: O_21 = SLICE(SZO_8, bool, 4) (alias)
          S_24 = SLICE(SZO_8, bool, 0) (alias)
          Z_27 = SLICE(SZO_8, bool, 2) (alias)
C_9: orig: C
    def:  C_9 = false
    uses: C_17 = PHI(C_18, C_9, C_18)
SZO_10: orig: SZO
    def:  SZO_10 = SLICE(SCZO_4, bool, 4) (alias)
    uses: branch Test(GT,SZO_10) l0C00_000D
ax_11: orig: ax
    def:  ax_11 = 0x0001
    uses: ax_13 = PHI(ax_12, ax_7, ax_11)
ax_12: orig: ax
    def:  ax_12 = 0xFFFF
    uses: ax_13 = PHI(ax_12, ax_7, ax_11)
ax_13: orig: ax
    def:  ax_13 = PHI(ax_12, ax_7, ax_11)
    uses: Mem16[ds:0x0100:word16] = ax_13
          use ax_13
ds:ds
    def:  def ds
    uses: Mem16[ds:0x0100:word16] = ax_13
          use ds
Mem16: orig: Mem0
    def:  Mem16[ds:0x0100:word16] = ax_13
C_17: orig: C
    def:  C_17 = PHI(C_18, C_9, C_18)
    uses: use C_17
C_18: orig: C
    def:  C_18 = SLICE(SCZO_4, bool, 1) (alias)
    uses: C_17 = PHI(C_18, C_9, C_18)
          C_17 = PHI(C_18, C_9, C_18)
O_19: orig: O
    def:  O_19 = PHI(O_20, O_21, O_20)
    uses: use O_19
O_20: orig: O
    def:  O_20 = SLICE(SCZO_4, bool, 4) (alias)
    uses: O_19 = PHI(O_20, O_21, O_20)
          O_19 = PHI(O_20, O_21, O_20)
O_21: orig: O
    def:  O_21 = SLICE(SZO_8, bool, 4) (alias)
    uses: O_19 = PHI(O_20, O_21, O_20)
S_22: orig: S
    def:  S_22 = PHI(S_23, S_24, S_23)
    uses: use S_22
S_23: orig: S
    def:  S_23 = SLICE(SCZO_4, bool, 0) (alias)
    uses: S_22 = PHI(S_23, S_24, S_23)
          S_22 = PHI(S_23, S_24, S_23)
S_24: orig: S
    def:  S_24 = SLICE(SZO_8, bool, 0) (alias)
    uses: S_22 = PHI(S_23, S_24, S_23)
Z_26: orig: Z
    def:  Z_26 = PHI(Z_5, Z_27, Z_5)
    uses: use Z_26
Z_27: orig: Z
    def:  Z_27 = SLICE(SZO_8, bool, 2) (alias)
    uses: Z_26 = PHI(Z_5, Z_27, Z_5)
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def bx
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	SCZO_4 = cond(bx - 0x0000)
	Z_5 = SLICE(SCZO_4, bool, 2) (alias)
	SZO_10 = SLICE(SCZO_4, bool, 4) (alias)
	C_18 = SLICE(SCZO_4, bool, 1) (alias)
	O_20 = SLICE(SCZO_4, bool, 4) (alias)
	S_23 = SLICE(SCZO_4, bool, 0) (alias)
	branch Test(EQ,Z_5) l0C00_0013
	// succ:  l0C00_0005 l0C00_0013
l0C00_0005:
	branch Test(GT,SZO_10) l0C00_000D
	// succ:  l0C00_0007 l0C00_000D
l0C00_0007:
	ax_12 = 0xFFFF
	goto l0C00_0015
	// succ:  l0C00_0015
l0C00_000D:
	ax_11 = 0x0001
	goto l0C00_0015
	// succ:  l0C00_0015
l0C00_0013:
	ax_7 = ax ^ ax
	SZO_8 = cond(ax_7)
	O_21 = SLICE(SZO_8, bool, 4) (alias)
	S_24 = SLICE(SZO_8, bool, 0) (alias)
	Z_27 = SLICE(SZO_8, bool, 2) (alias)
	C_9 = false
	// succ:  l0C00_0015
l0C00_0015:
	Z_26 = PHI(Z_5, Z_27, Z_5)
	S_22 = PHI(S_23, S_24, S_23)
	O_19 = PHI(O_20, O_21, O_20)
	C_17 = PHI(C_18, C_9, C_18)
	ax_13 = PHI(ax_12, ax_7, ax_11)
	Mem16[ds:0x0100:word16] = ax_13
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_13
	use C_17
	use ds
	use O_19
	use S_22
	use sp_2
	use Z_26

