fp:fp
    def:  def fp
    uses: call fn10000017 (retsize: 4;)	uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16	defs: eax:eax_8,esp:esp_7
esp_2: orig: esp
Mem0:Global memory
    def:  def Mem0
    uses: eax_4 = Mem0[0x10003420:word32]
eax_4: orig: eax
    def:  eax_4 = Mem0[0x10003420:word32]
    uses: dwLoc04_16 = eax_4
          call fn10000017 (retsize: 4;)	uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16	defs: eax:eax_8,esp:esp_7
esp_5: orig: esp
Mem6: orig: Mem0
esp_7: orig: esp
    def:  call fn10000017 (retsize: 4;)	uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16	defs: eax:eax_8,esp:esp_7
eax_8: orig: eax
    def:  call fn10000017 (retsize: 4;)	uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16	defs: eax:eax_8,esp:esp_7
    uses: ax_9 = (word16) eax_8 (alias)
ax_9: orig: ax
    def:  ax_9 = (word16) eax_8 (alias)
    uses: call fn10000017 (retsize: 4;)	uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16	defs: eax:eax_8,esp:esp_7
          ax_11 = DPB(ax_9, ax_10, 0) (alias)
ax_10: orig: ax
    def:  call fn10000017 (retsize: 4;)	uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16	defs: eax:eax_8,esp:esp_7
ax_11: orig: ax
    def:  ax_11 = DPB(ax_9, ax_10, 0) (alias)
    uses: Mem15[0x10003428:word16] = ax_11
SCZO_12: orig: SCZO
    def:  call fn10000017 (retsize: 4;)	uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16	defs: eax:eax_8,esp:esp_7
esp_13: orig: esp
SCZO_14: orig: SCZO
Mem15: orig: Mem0
    def:  Mem15[0x10003428:word16] = ax_11
dwLoc04_16: orig: dwLoc04
    def:  dwLoc04_16 = eax_4
    uses: call fn10000017 (retsize: 4;)	uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16	defs: eax:eax_8,esp:esp_7
// fn10000000
// Return size: 4
define fn10000000
fn10000000_entry:
	def fp
	def Mem0
	// succ:  l10000000
l10000000:
	eax_4 = Mem0[0x10003420:word32]
	dwLoc04_16 = eax_4
	call fn10000017 (retsize: 4;)
		uses: ax:ax_9,eax:eax_4,esp:fp - 0x00000004,Local -0004:dwLoc04_16
		defs: eax:eax_8,esp:esp_7
	ax_9 = (word16) eax_8 (alias)
	ax_11 = DPB(ax_9, ax_10, 0) (alias)
	Mem15[0x10003428:word16] = ax_11
	return
	// succ:  fn10000000_exit
fn10000000_exit:

fp:fp
esp_2: orig: esp
esp_3: orig: esp
ebp:ebp
Mem5: orig: Mem0
ebp_6: orig: ebp
    uses: ebp_37 = PHI(ebp_6, ebp_6)
          ebp_37 = PHI(ebp_6, ebp_6)
esp_7: orig: esp
ecx:ecx
Mem9: orig: Mem0
Mem10: orig: Mem0
    uses: Mem14 = PHI(Mem10, Mem32)
SCZO_11: orig: SCZO
Z_12: orig: Z
ebp_13: orig: ebp
    def:  ebp_13 = PHI(ebp_6, ebp_13)
Mem14: orig: Mem0
    def:  Mem14 = PHI(Mem10, Mem32)
    uses: eax_15 = (int32) wLoc08_44
          ecx_16 = dwArg04
          edx_17 = (int32) Mem14[ecx_16 + eax_15:byte]
          eax_21 = (int32) wLoc08_46
eax_15: orig: eax
    def:  eax_15 = (int32) wLoc08_44
    uses: edx_17 = (int32) Mem14[ecx_16 + eax_15:byte]
ecx_16: orig: ecx
    def:  ecx_16 = dwArg04
    uses: edx_17 = (int32) Mem14[ecx_16 + eax_15:byte]
edx_17: orig: edx
    def:  edx_17 = (int32) Mem14[ecx_16 + eax_15:byte]
    uses: branch edx_17 == 0x00000000 l1000005A
SZO_18: orig: SZO
C_19: orig: C
Z_20: orig: Z
eax_21: orig: eax
    def:  eax_21 = (int32) wLoc08_46
    uses: branch eax_21 >= 0x00007FFF l1000005A
SCZO_22: orig: SCZO
SO_23: orig: SO
ebp_24: orig: ebp
    def:  ebp_24 = PHI(ebp_13, ebp_13)
Mem25: orig: Mem0
    def:  Mem25 = PHI(Mem14, Mem14)
ax_26: orig: ax
ax_27: orig: ax
ax_28: orig: ax
cx_29: orig: cx
cx_30: orig: cx
SCZO_31: orig: SCZO
Mem32: orig: Mem0
    uses: Mem14 = PHI(Mem10, Mem32)
ax:ax
ax_34: orig: ax
SZO_35: orig: SZO
C_36: orig: C
ebp_37: orig: ebp
    def:  ebp_37 = PHI(ebp_6, ebp_6)
esp_38: orig: esp
Mem39: orig: Mem0
ebp_40: orig: ebp
esp_41: orig: esp
dwLoc04_42: orig: dwLoc04
dwLoc08_43: orig: dwLoc08
wLoc08_44: orig: wLoc08
    def:  wLoc08_44 = 0x0000
    uses: eax_15 = (int32) wLoc08_44
dwArg04:Stack +0004
    def:  def dwArg04
    uses: branch dwArg04 != 0x00000000 l1000002F
          ecx_16 = dwArg04
wLoc08_46: orig: wLoc08
    def:  wLoc08_46 = PHI(wLoc08_44, wLoc08_46)
    uses: eax_21 = (int32) wLoc08_46
dwArg04_47: orig: dwArg04
    def:  dwArg04_47 = PHI(dwArg04, dwArg04_47)
wLoc08_48: orig: wLoc08
wLoc08_49: orig: wLoc08
dwLoc04_50: orig: dwLoc04
dwLoc04_51: orig: dwLoc04
dwLoc04_52: orig: dwLoc04
    def:  dwLoc04_52 = PHI(dwLoc04_42, dwLoc04_52)
// fn10000017
// Return size: 4
define fn10000017
fn10000017_entry:
	def dwArg04
	// succ:  l10000017
l10000017:
	wLoc08_44 = 0x0000
	branch dwArg04 != 0x00000000 l1000002F
	// succ:  l10000027 l1000002F
l10000027:
	goto l1000005E
	// succ:  l1000005E
l1000002F:
	Mem14 = PHI(Mem10, Mem32)
	eax_15 = (int32) wLoc08_44
	ecx_16 = dwArg04
	edx_17 = (int32) Mem14[ecx_16 + eax_15:byte]
	branch edx_17 == 0x00000000 l1000005A
	// succ:  l1000003E l1000005A
l1000003E:
	eax_21 = (int32) wLoc08_46
	branch eax_21 >= 0x00007FFF l1000005A
	// succ:  l10000049 l1000005A
l10000049:
	goto l1000002F
	// succ:  l1000002F
l1000005A:
	// succ:  l1000005E
l1000005E:
	return
	// succ:  fn10000017_exit
fn10000017_exit:

