fp:fp
esp_1: orig: esp
Mem0:Global memory
    def:  def Mem0
    uses: eax_3 = Mem0[0x10003420:word32]
eax_3: orig: eax
    def:  eax_3 = Mem0[0x10003420:word32]
    uses: ax_6 = fn10000017(eax_3)
esp_4: orig: esp
dwLoc04_5: orig: dwLoc04
ax_6: orig: ax
    def:  ax_6 = fn10000017(eax_3)
    uses: Mem10[0x10003428:word16] = ax_6
eax_7: orig: eax
esp_8: orig: esp
SCZO_9: orig: SCZO
Mem10: orig: Mem0
    def:  Mem10[0x10003428:word16] = ax_6
// fn10000000
// Return size: 0
void fn10000000()
fn10000000_entry:
	def Mem0
	// succ:  l10000000
l10000000:
	eax_3 = Mem0[0x10003420:word32]
	ax_6 = fn10000017(eax_3)
	Mem10[0x10003428:word16] = ax_6
	return
	// succ:  fn10000000_exit
fn10000000_exit:

fp:fp
esp_1: orig: esp
esp_2: orig: esp
ebp:ebp
dwLoc04_4: orig: dwLoc04
ebp_5: orig: ebp
esp_6: orig: esp
ecx:ecx
dwLoc08_8: orig: dwLoc08
wLoc08_9: orig: wLoc08
    def:  wLoc08_9 = 0x0000
    uses: wLoc08_12 = PHI(wLoc08_9, wLoc08_32)
dwArg04:Stack +0004
    def:  def dwArg04
    uses: edx_19 = (int32) Mem0[dwArg04 + eax_13:byte]
          branch dwArg04 != 0x00000000 l1000002F
SCZO_11: orig: SCZO
wLoc08_12: orig: wLoc08
    def:  wLoc08_12 = PHI(wLoc08_9, wLoc08_32)
    uses: eax_13 = (int32) wLoc08_12
          eax_23 = (int32) wLoc08_12
          ax_26 = wLoc08_12
          cx_30 = wLoc08_12 + 0x0001
eax_13: orig: eax
    def:  eax_13 = (int32) wLoc08_12
    uses: edx_19 = (int32) Mem0[dwArg04 + eax_13:byte]
eax_14: orig: eax
ecx_16: orig: ecx
ecx_17: orig: ecx
edx_19: orig: edx
    def:  edx_19 = (int32) Mem0[dwArg04 + eax_13:byte]
    uses: branch edx_19 == 0x00000000 l1000005A
edx_20: orig: edx
SZO_21: orig: SZO
C_22: orig: C
eax_23: orig: eax
    def:  eax_23 = (int32) wLoc08_12
    uses: branch eax_23 >= 0x00007FFF l1000005A
SCZO_24: orig: SCZO
ax_26: orig: ax
    def:  ax_26 = wLoc08_12
    uses: ax_51 = PHI(ax_33, ax_26)
ax_27: orig: ax
cx_28: orig: cx
ecx_29: orig: ecx
cx_30: orig: cx
    def:  cx_30 = wLoc08_12 + 0x0001
    uses: wLoc08_32 = cx_30
SCZO_31: orig: SCZO
wLoc08_32: orig: wLoc08
    def:  wLoc08_32 = cx_30
    uses: wLoc08_12 = PHI(wLoc08_9, wLoc08_32)
ax_33: orig: ax
    def:  ax_33 = 0x0000
    uses: ax_51 = PHI(ax_33, ax_26)
SZO_34: orig: SZO
C_35: orig: C
fp_36: orig: fp
fp_37: orig: fp
esp_39: orig: esp
esp_40: orig: esp
esp_41: orig: esp
dwLoc04_43: orig: dwLoc04
dwLoc04_44: orig: dwLoc04
ebp_46: orig: ebp
ebp_47: orig: ebp
ebp_48: orig: ebp
esp_50: orig: esp
ax_51: orig: ax
    def:  ax_51 = PHI(ax_33, ax_26)
    uses: return ax_51
eax:eax
ecx_53: orig: ecx
Mem0:Global memory
    def:  def Mem0
edx:edx
// fn10000017
// Return size: 0
word16 fn10000017(word32 dwArg04)
fn10000017_entry:
	def dwArg04
	def Mem0
	// succ:  l10000017
l10000017:
	wLoc08_9 = 0x0000
	branch dwArg04 != 0x00000000 l1000002F
	// succ:  l10000027 l1000002F
l10000027:
	ax_33 = 0x0000
	goto l1000005E
	// succ:  l1000005E
l1000002F:
	wLoc08_12 = PHI(wLoc08_9, wLoc08_32)
	eax_13 = (int32) wLoc08_12
	edx_19 = (int32) Mem0[dwArg04 + eax_13:byte]
	branch edx_19 == 0x00000000 l1000005A
	// succ:  l1000003E l1000005A
l1000003E:
	eax_23 = (int32) wLoc08_12
	branch eax_23 >= 0x00007FFF l1000005A
	// succ:  l10000049 l1000005A
l10000049:
	cx_30 = wLoc08_12 + 0x0001
	wLoc08_32 = cx_30
	goto l1000002F
	// succ:  l1000002F
l1000005A:
	ax_26 = wLoc08_12
	// succ:  l1000005E
l1000005E:
	ax_51 = PHI(ax_33, ax_26)
	return ax_51
	// succ:  fn10000017_exit
fn10000017_exit:

