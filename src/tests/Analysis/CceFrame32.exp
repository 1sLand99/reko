fp:fp
    def:  def fp
    uses: call fn10000017 (retsize: 4;)	uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004	defs: ax_11,eax_8,esp_7,SCZO_9
esp_2: orig: esp
Mem0:Global memory
    def:  def Mem0
    uses: eax_4 = Mem0[0x10003420:word32]
eax_4: orig: eax
    def:  eax_4 = Mem0[0x10003420:word32]
    uses: dwLoc04_16 = eax_4
          call fn10000017 (retsize: 4;)	uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004	defs: ax_11,eax_8,esp_7,SCZO_9
esp_5: orig: esp
Mem6: orig: Mem0
esp_7: orig: esp
    def:  call fn10000017 (retsize: 4;)	uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004	defs: ax_11,eax_8,esp_7,SCZO_9
eax_8: orig: eax
    def:  call fn10000017 (retsize: 4;)	uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004	defs: ax_11,eax_8,esp_7,SCZO_9
    uses: ax_10 = (word16) eax_8 (alias)
SCZO_9: orig: SCZO
    def:  call fn10000017 (retsize: 4;)	uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004	defs: ax_11,eax_8,esp_7,SCZO_9
ax_10: orig: ax
    def:  ax_10 = (word16) eax_8 (alias)
    uses: call fn10000017 (retsize: 4;)	uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004	defs: ax_11,eax_8,esp_7,SCZO_9
          ax_12 = DPB(ax_10, ax_11, 0) (alias)
ax_11: orig: ax
    def:  call fn10000017 (retsize: 4;)	uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004	defs: ax_11,eax_8,esp_7,SCZO_9
ax_12: orig: ax
    def:  ax_12 = DPB(ax_10, ax_11, 0) (alias)
    uses: Mem15[0x10003428:word16] = ax_12
esp_13: orig: esp
SCZO_14: orig: SCZO
Mem15: orig: Mem0
    def:  Mem15[0x10003428:word16] = ax_12
dwLoc04_16: orig: dwLoc04
    def:  dwLoc04_16 = eax_4
    uses: call fn10000017 (retsize: 4;)	uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004	defs: ax_11,eax_8,esp_7,SCZO_9
// fn10000000
// Return size: 4
%proc fn10000000
fn10000000_entry:
	def fp
	def Mem0
	// succ:  l10000000
l10000000:
	eax_4 = Mem0[0x10003420:word32]
	dwLoc04_16 = eax_4
	call fn10000017 (retsize: 4;)
		uses: ax_10,dwLoc04_16,eax_4,fp - 0x00000004
		defs: ax_11,eax_8,esp_7,SCZO_9
	ax_10 = (word16) eax_8 (alias)
	ax_12 = DPB(ax_10, ax_11, 0) (alias)
	Mem15[0x10003428:word16] = ax_12
	return
	// succ:  fn10000000_exit
fn10000000_exit:

fp:fp
esp_2: orig: esp
esp_3: orig: esp
ebp:ebp
Mem5: orig: Mem0
ebp_6: orig: ebp
    uses: ebp_34 = PHI(ebp_6, ebp_6)
          ebp_34 = PHI(ebp_6, ebp_6)
esp_7: orig: esp
ecx:ecx
Mem9: orig: Mem0
Mem10: orig: Mem0
    uses: Mem13 = PHI(Mem10, Mem29)
SCZO_11: orig: SCZO
ebp_12: orig: ebp
    def:  ebp_12 = PHI(ebp_6, ebp_12)
Mem13: orig: Mem0
    def:  Mem13 = PHI(Mem10, Mem29)
    uses: eax_14 = (int32) wLoc08_41
          ecx_15 = dwArg04
          edx_16 = (int32) Mem13[ecx_15 + eax_14:byte]
          eax_19 = (int32) wLoc08_43
eax_14: orig: eax
    def:  eax_14 = (int32) wLoc08_41
    uses: edx_16 = (int32) Mem13[ecx_15 + eax_14:byte]
ecx_15: orig: ecx
    def:  ecx_15 = dwArg04
    uses: edx_16 = (int32) Mem13[ecx_15 + eax_14:byte]
edx_16: orig: edx
    def:  edx_16 = (int32) Mem13[ecx_15 + eax_14:byte]
    uses: branch edx_16 == 0x00000000 l1000005A
SZO_17: orig: SZO
C_18: orig: C
eax_19: orig: eax
    def:  eax_19 = (int32) wLoc08_43
    uses: branch eax_19 >= 0x00007FFF l1000005A
SCZO_20: orig: SCZO
ebp_21: orig: ebp
    def:  ebp_21 = PHI(ebp_12, ebp_12)
Mem22: orig: Mem0
    def:  Mem22 = PHI(Mem13, Mem13)
ax_23: orig: ax
ax_24: orig: ax
ax_25: orig: ax
cx_26: orig: cx
cx_27: orig: cx
SCZO_28: orig: SCZO
Mem29: orig: Mem0
    uses: Mem13 = PHI(Mem10, Mem29)
ax:ax
ax_31: orig: ax
SZO_32: orig: SZO
C_33: orig: C
ebp_34: orig: ebp
    def:  ebp_34 = PHI(ebp_6, ebp_6)
esp_35: orig: esp
Mem36: orig: Mem0
ebp_37: orig: ebp
esp_38: orig: esp
dwLoc04_39: orig: dwLoc04
dwLoc08_40: orig: dwLoc08
wLoc08_41: orig: wLoc08
    def:  wLoc08_41 = 0x0000
    uses: eax_14 = (int32) wLoc08_41
dwArg04:Stack +0004
    def:  def dwArg04
    uses: branch dwArg04 != 0x00000000 l1000002F
          ecx_15 = dwArg04
wLoc08_43: orig: wLoc08
    def:  wLoc08_43 = PHI(wLoc08_41, wLoc08_43)
    uses: eax_19 = (int32) wLoc08_43
dwArg04_44: orig: dwArg04
    def:  dwArg04_44 = PHI(dwArg04, dwArg04_44)
wLoc08_45: orig: wLoc08
wLoc08_46: orig: wLoc08
dwLoc04_47: orig: dwLoc04
dwLoc04_48: orig: dwLoc04
dwLoc04_49: orig: dwLoc04
    def:  dwLoc04_49 = PHI(dwLoc04_39, dwLoc04_49)
// fn10000017
// Return size: 4
%proc fn10000017
fn10000017_entry:
	def dwArg04
	// succ:  l10000017
l10000017:
	wLoc08_41 = 0x0000
	branch dwArg04 != 0x00000000 l1000002F
	// succ:  l10000027 l1000002F
l10000027:
	goto l1000005E
	// succ:  l1000005E
l1000002F:
	Mem13 = PHI(Mem10, Mem29)
	eax_14 = (int32) wLoc08_41
	ecx_15 = dwArg04
	edx_16 = (int32) Mem13[ecx_15 + eax_14:byte]
	branch edx_16 == 0x00000000 l1000005A
	// succ:  l1000003E l1000005A
l1000003E:
	eax_19 = (int32) wLoc08_43
	branch eax_19 >= 0x00007FFF l1000005A
	// succ:  l10000049 l1000005A
l10000049:
	goto l1000002F
	// succ:  l1000002F
l1000005A:
	// succ:  l1000005E
l1000005E:
	return
	// succ:  fn10000017_exit
fn10000017_exit:

