fp:fp
    def:  def fp
    uses: call fn10000017 (retsize: 4;)	uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17	defs: eax:eax_9,esp:esp_8
esp_2: orig: esp
Top_3: orig: Top
Mem0:Global memory
    def:  def Mem0
    uses: eax_5 = Mem0[0x10003420:word32]
eax_5: orig: eax
    def:  eax_5 = Mem0[0x10003420:word32]
    uses: dwLoc04_17 = eax_5
          call fn10000017 (retsize: 4;)	uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17	defs: eax:eax_9,esp:esp_8
esp_6: orig: esp
Mem7: orig: Mem0
esp_8: orig: esp
    def:  call fn10000017 (retsize: 4;)	uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17	defs: eax:eax_9,esp:esp_8
eax_9: orig: eax
    def:  call fn10000017 (retsize: 4;)	uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17	defs: eax:eax_9,esp:esp_8
    uses: ax_10 = (word16) eax_9 (alias)
ax_10: orig: ax
    def:  ax_10 = (word16) eax_9 (alias)
    uses: call fn10000017 (retsize: 4;)	uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17	defs: eax:eax_9,esp:esp_8
          ax_12 = DPB(ax_10, ax_11, 0) (alias)
ax_11: orig: ax
    def:  call fn10000017 (retsize: 4;)	uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17	defs: eax:eax_9,esp:esp_8
ax_12: orig: ax
    def:  ax_12 = DPB(ax_10, ax_11, 0) (alias)
    uses: Mem16[0x10003428:word16] = ax_12
SCZO_13: orig: SCZO
    def:  call fn10000017 (retsize: 4;)	uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17	defs: eax:eax_9,esp:esp_8
esp_14: orig: esp
SCZO_15: orig: SCZO
Mem16: orig: Mem0
    def:  Mem16[0x10003428:word16] = ax_12
dwLoc04_17: orig: dwLoc04
    def:  dwLoc04_17 = eax_5
    uses: call fn10000017 (retsize: 4;)	uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17	defs: eax:eax_9,esp:esp_8
// fn10000000
// Return size: 4
define fn10000000
fn10000000_entry:
	def fp
	def Mem0
	// succ:  l10000000
l10000000:
	eax_5 = Mem0[0x10003420:word32]
	dwLoc04_17 = eax_5
	call fn10000017 (retsize: 4;)
		uses: ax:ax_10,eax:eax_5,esp:fp - 0x00000004,Local -0004:dwLoc04_17
		defs: eax:eax_9,esp:esp_8
	ax_10 = (word16) eax_9 (alias)
	ax_12 = DPB(ax_10, ax_11, 0) (alias)
	Mem16[0x10003428:word16] = ax_12
	return
	// succ:  fn10000000_exit
fn10000000_exit:

fp:fp
esp_2: orig: esp
Top_3: orig: Top
esp_4: orig: esp
ebp:ebp
Mem6: orig: Mem0
ebp_7: orig: ebp
    uses: ebp_38 = PHI(ebp_7, ebp_7)
          ebp_38 = PHI(ebp_7, ebp_7)
esp_8: orig: esp
ecx:ecx
Mem10: orig: Mem0
Mem11: orig: Mem0
    uses: Mem15 = PHI(Mem11, Mem33)
SCZO_12: orig: SCZO
Z_13: orig: Z
ebp_14: orig: ebp
    def:  ebp_14 = PHI(ebp_7, ebp_14)
Mem15: orig: Mem0
    def:  Mem15 = PHI(Mem11, Mem33)
    uses: eax_16 = (int32) wLoc08_45
          ecx_17 = dwArg04
          edx_18 = (int32) Mem15[ecx_17 + eax_16:byte]
          eax_22 = (int32) wLoc08_47
eax_16: orig: eax
    def:  eax_16 = (int32) wLoc08_45
    uses: edx_18 = (int32) Mem15[ecx_17 + eax_16:byte]
ecx_17: orig: ecx
    def:  ecx_17 = dwArg04
    uses: edx_18 = (int32) Mem15[ecx_17 + eax_16:byte]
edx_18: orig: edx
    def:  edx_18 = (int32) Mem15[ecx_17 + eax_16:byte]
    uses: branch edx_18 == 0x00000000 l1000005A
SZO_19: orig: SZO
C_20: orig: C
Z_21: orig: Z
eax_22: orig: eax
    def:  eax_22 = (int32) wLoc08_47
    uses: branch eax_22 >= 0x00007FFF l1000005A
SCZO_23: orig: SCZO
SO_24: orig: SO
ebp_25: orig: ebp
    def:  ebp_25 = PHI(ebp_14, ebp_14)
Mem26: orig: Mem0
    def:  Mem26 = PHI(Mem15, Mem15)
ax_27: orig: ax
ax_28: orig: ax
ax_29: orig: ax
cx_30: orig: cx
cx_31: orig: cx
SCZO_32: orig: SCZO
Mem33: orig: Mem0
    uses: Mem15 = PHI(Mem11, Mem33)
ax:ax
ax_35: orig: ax
SZO_36: orig: SZO
C_37: orig: C
ebp_38: orig: ebp
    def:  ebp_38 = PHI(ebp_7, ebp_7)
esp_39: orig: esp
Mem40: orig: Mem0
ebp_41: orig: ebp
esp_42: orig: esp
dwLoc04_43: orig: dwLoc04
dwLoc08_44: orig: dwLoc08
wLoc08_45: orig: wLoc08
    def:  wLoc08_45 = 0x0000
    uses: eax_16 = (int32) wLoc08_45
dwArg04:Stack +0004
    def:  def dwArg04
    uses: branch dwArg04 != 0x00000000 l1000002F
          ecx_17 = dwArg04
wLoc08_47: orig: wLoc08
    def:  wLoc08_47 = PHI(wLoc08_45, wLoc08_47)
    uses: eax_22 = (int32) wLoc08_47
dwArg04_48: orig: dwArg04
    def:  dwArg04_48 = PHI(dwArg04, dwArg04_48)
wLoc08_49: orig: wLoc08
wLoc08_50: orig: wLoc08
dwLoc04_51: orig: dwLoc04
dwLoc04_52: orig: dwLoc04
dwLoc04_53: orig: dwLoc04
    def:  dwLoc04_53 = PHI(dwLoc04_43, dwLoc04_53)
// fn10000017
// Return size: 4
define fn10000017
fn10000017_entry:
	def dwArg04
	// succ:  l10000017
l10000017:
	wLoc08_45 = 0x0000
	branch dwArg04 != 0x00000000 l1000002F
	// succ:  l10000027 l1000002F
l10000027:
	goto l1000005E
	// succ:  l1000005E
l1000002F:
	Mem15 = PHI(Mem11, Mem33)
	eax_16 = (int32) wLoc08_45
	ecx_17 = dwArg04
	edx_18 = (int32) Mem15[ecx_17 + eax_16:byte]
	branch edx_18 == 0x00000000 l1000005A
	// succ:  l1000003E l1000005A
l1000003E:
	eax_22 = (int32) wLoc08_47
	branch eax_22 >= 0x00007FFF l1000005A
	// succ:  l10000049 l1000005A
l10000049:
	goto l1000002F
	// succ:  l1000002F
l1000005A:
	// succ:  l1000005E
l1000005E:
	return
	// succ:  fn10000017_exit
fn10000017_exit:

