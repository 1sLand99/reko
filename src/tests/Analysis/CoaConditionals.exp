fp:fp
sp_2: orig: sp
Top_3: orig: Top
ds:ds
    def:  def ds
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          Mem9[ds:0x0F00:byte] = 0x01
          v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
          v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
          Mem14[ds:0x0106:word16] = v7_13
          Mem17[ds:0x0F01:byte] = 0x01
          branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
          Mem25[ds:0x0F02:byte] = 0x01
          branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
          Mem32[ds:0x0F03:byte] = 0x01
          Mem50[ds:0x0F04:byte] = 0x01
          Mem56[ds:0x0F05:byte] = 0x01
          Mem76[ds:0x0F07:byte] = 0x01
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
          branch (Mem52[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
Mem0:Global
    def:  def Mem0
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          Mem11 = PHI(Mem0, Mem9)
ax_6: orig: ax
SCZO_7: orig: SCZO
Z_8: orig: Z
Mem9: orig: Mem0
    def:  Mem9[ds:0x0F00:byte] = 0x01
    uses: Mem11 = PHI(Mem0, Mem9)
ds_10: orig: ds
    def:  ds_10 = PHI(ds, ds)
Mem11: orig: Mem0
    def:  Mem11 = PHI(Mem0, Mem9)
    uses: v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
          v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
ax_12: orig: ax
v7_13: orig: v7
    def:  v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
    uses: Mem14[ds:0x0106:word16] = v7_13
          branch v7_13 <= 0x0000 l0C00_001E
Mem14: orig: Mem0
    def:  Mem14[ds:0x0106:word16] = v7_13
    uses: Mem19 = PHI(Mem14, Mem17)
SCZO_15: orig: SCZO
SZO_16: orig: SZO
Mem17: orig: Mem0
    def:  Mem17[ds:0x0F01:byte] = 0x01
    uses: Mem19 = PHI(Mem14, Mem17)
ds_18: orig: ds
    def:  ds_18 = PHI(ds, ds)
Mem19: orig: Mem0
    def:  Mem19 = PHI(Mem14, Mem17)
    uses: branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
          Mem27 = PHI(Mem19, Mem25)
ax_20: orig: ax
ax_21: orig: ax
SZO_22: orig: SZO
C_23: orig: C
Z_24: orig: Z
Mem25: orig: Mem0
    def:  Mem25[ds:0x0F02:byte] = 0x01
    uses: Mem27 = PHI(Mem19, Mem25)
ds_26: orig: ds
    def:  ds_26 = PHI(ds, ds)
Mem27: orig: Mem0
    def:  Mem27 = PHI(Mem19, Mem25)
    uses: branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
          branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
ax_28: orig: ax
SCZO_29: orig: SCZO
C_30: orig: C
C_31: orig: C
Mem32: orig: Mem0
    def:  Mem32[ds:0x0F03:byte] = 0x01
sp_33: orig: sp
    def:  sp_33 = PHI(sp_2, sp_2)
sp_34: orig: sp
    def:  sp_34 = PHI(sp_2, sp_2)
sp_35: orig: sp
    def:  sp_35 = PHI(sp_2, sp_2)
sp_36: orig: sp
    def:  sp_36 = PHI(sp_2, sp_2)
sp_37: orig: sp
ss_38: orig: ss
    def:  ss_38 = PHI(ss, ss)
ss_39: orig: ss
    def:  ss_39 = PHI(ss, ss)
ss_40: orig: ss
    def:  ss_40 = PHI(ss, ss)
ss_41: orig: ss
    def:  ss_41 = PHI(ss, ss)
ss:ss
    def:  def ss
    uses: Mem69[ss:bp - 0x000A:byte] = 0x01
Mem43: orig: Mem0
    uses: Mem52 = PHI(Mem43, Mem50)
Top_44: orig: Top
    def:  branch fn0C00_0069(0x0003) l0C00_0049
S_45: orig: S
    def:  branch fn0C00_0069(0x0003) l0C00_0049
C_46: orig: C
Z_47: orig: Z
    def:  branch fn0C00_0069(0x0003) l0C00_0049
O_48: orig: O
    def:  branch fn0C00_0069(0x0003) l0C00_0049
ds_49: orig: ds
    def:  ds_49 = PHI(ds, ds)
Mem50: orig: Mem0
    def:  Mem50[ds:0x0F04:byte] = 0x01
    uses: Mem52 = PHI(Mem43, Mem50)
ds_51: orig: ds
    def:  ds_51 = PHI(ds, ds)
Mem52: orig: Mem0
    def:  Mem52 = PHI(Mem43, Mem50)
    uses: branch (Mem52[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
SZO_53: orig: SZO
C_54: orig: C
Z_55: orig: Z
Mem56: orig: Mem0
    def:  Mem56[ds:0x0F05:byte] = 0x01
bp_57: orig: bp
    def:  bp_57 = PHI(bp, bp)
bp_58: orig: bp
    def:  bp_58 = PHI(bp, bp)
bp_59: orig: bp
    def:  bp_59 = PHI(bp, bp)
bp_60: orig: bp
    def:  bp_60 = PHI(bp, bp)
bp_61: orig: bp
    def:  bp_61 = PHI(bp, bp)
bp_62: orig: bp
    def:  bp_62 = PHI(bp, bp)
bp:bp
    def:  def bp
    uses: branch bp < 0x0010 l0C00_005F
          branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
          Mem69[ss:bp - 0x000A:byte] = 0x01
bp_64: orig: bp
SCZO_65: orig: SCZO
SO_66: orig: SO
ss_67: orig: ss
    def:  ss_67 = PHI(ss, ss)
ss_68: orig: ss
    def:  ss_68 = PHI(ss, ss)
Mem69: orig: Mem0
    def:  Mem69[ss:bp - 0x000A:byte] = 0x01
bp_70: orig: bp
    def:  bp_70 = PHI(bp_64, bp_64)
bp_71: orig: bp
SCZO_72: orig: SCZO
O_73: orig: O
ds_74: orig: ds
    def:  ds_74 = PHI(ds, ds)
ds_75: orig: ds
    def:  ds_75 = PHI(ds, ds)
Mem76: orig: Mem0
    def:  Mem76[ds:0x0F07:byte] = 0x01
wLoc02_77: orig: wLoc02
C_85: orig: C
S_89: orig: S
Z_101: orig: Z
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bp, selector ds)
fn0C00_0000_entry:
	def ds
	def Mem0
	def ss
	def bp
	// succ:  l0C00_0000
l0C00_0000:
	branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
	// succ:  l0C00_000A l0C00_000F
l0C00_000A:
	Mem9[ds:0x0F00:byte] = 0x01
	// succ:  l0C00_000F
l0C00_000F:
	Mem11 = PHI(Mem0, Mem9)
	v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
	Mem14[ds:0x0106:word16] = v7_13
	branch v7_13 <= 0x0000 l0C00_001E
	// succ:  l0C00_0019 l0C00_001E
l0C00_0019:
	Mem17[ds:0x0F01:byte] = 0x01
	// succ:  l0C00_001E
l0C00_001E:
	Mem19 = PHI(Mem14, Mem17)
	branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
	// succ:  l0C00_0028 l0C00_002D
l0C00_0028:
	Mem25[ds:0x0F02:byte] = 0x01
	// succ:  l0C00_002D
l0C00_002D:
	Mem27 = PHI(Mem19, Mem25)
	branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
	// succ:  l0C00_0038 l0C00_003D
l0C00_0038:
	Mem32[ds:0x0F03:byte] = 0x01
	// succ:  l0C00_003D
l0C00_003D:
	branch fn0C00_0069(0x0003) l0C00_0049
	// succ:  l0C00_0044 l0C00_0049
l0C00_0044:
	Mem50[ds:0x0F04:byte] = 0x01
	// succ:  l0C00_0049
l0C00_0049:
	Mem52 = PHI(Mem43, Mem50)
	branch (Mem52[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
	// succ:  l0C00_0051 l0C00_0056
l0C00_0051:
	Mem56[ds:0x0F05:byte] = 0x01
	// succ:  l0C00_0056
l0C00_0056:
	branch bp < 0x0010 l0C00_005F
	// succ:  l0C00_005B l0C00_005F
l0C00_005B:
	Mem69[ss:bp - 0x000A:byte] = 0x01
	// succ:  l0C00_005F
l0C00_005F:
	branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
	// succ:  l0C00_0063 l0C00_0068
l0C00_0063:
	Mem76[ds:0x0F07:byte] = 0x01
	// succ:  l0C00_0068
l0C00_0068:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_2: orig: sp
Top_3: orig: Top
sp_4: orig: sp
bp:bp
ss:ss
Mem7: orig: Mem0
bp_8: orig: bp
SCZO_9: orig: SCZO
bp_10: orig: bp
sp_11: orig: sp
wLoc02_12: orig: wLoc02
wArg02:Stack +0002
    def:  def wArg02
    uses: return SLICE(cond(wArg02), bool, 1)
C_14: orig: C
O_15: orig: O
S_16: orig: S
Z_17: orig: Z
// fn0C00_0069
// Return size: 0
bool fn0C00_0069(word16 wArg02)
fn0C00_0069_entry:
	def wArg02
	// succ:  l0C00_0069
l0C00_0069:
	return SLICE(cond(wArg02), bool, 1)
	// succ:  fn0C00_0069_exit
fn0C00_0069_exit:

