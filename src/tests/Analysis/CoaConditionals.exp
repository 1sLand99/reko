fp:fp
sp_2: orig: sp
ds:ds
    def:  def ds
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          Mem8[ds:0x0F00:byte] = 0x01
          v7_12 = Mem10[ds:0x0106:word16] - Mem10[ds:0x0104:word16]
          v7_12 = Mem10[ds:0x0106:word16] - Mem10[ds:0x0104:word16]
          Mem13[ds:0x0106:word16] = v7_12
          Mem16[ds:0x0F01:byte] = 0x01
          branch (Mem18[ds:0x0106:word16] & Mem18[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem18[ds:0x0106:word16] & Mem18[ds:0x0108:word16]) == 0x0000 l0C00_002D
          Mem24[ds:0x0F02:byte] = 0x01
          branch Mem26[ds:0x010A:word16] >=u Mem26[ds:0x010C:word16] l0C00_003D
          Mem31[ds:0x0F03:byte] = 0x01
          Mem48[ds:0x0F04:byte] = 0x01
          Mem54[ds:0x0F05:byte] = 0x01
          Mem74[ds:0x0F07:byte] = 0x01
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          branch Mem26[ds:0x010A:word16] >=u Mem26[ds:0x010C:word16] l0C00_003D
          branch (Mem50[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
Mem0:Global memory
    def:  def Mem0
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          Mem10 = PHI(Mem0, Mem8)
ax_5: orig: ax
SCZO_6: orig: SCZO
Z_7: orig: Z
Mem8: orig: Mem0
    def:  Mem8[ds:0x0F00:byte] = 0x01
    uses: Mem10 = PHI(Mem0, Mem8)
ds_9: orig: ds
    def:  ds_9 = PHI(ds, ds)
Mem10: orig: Mem0
    def:  Mem10 = PHI(Mem0, Mem8)
    uses: v7_12 = Mem10[ds:0x0106:word16] - Mem10[ds:0x0104:word16]
          v7_12 = Mem10[ds:0x0106:word16] - Mem10[ds:0x0104:word16]
ax_11: orig: ax
v7_12: orig: v7
    def:  v7_12 = Mem10[ds:0x0106:word16] - Mem10[ds:0x0104:word16]
    uses: Mem13[ds:0x0106:word16] = v7_12
          branch v7_12 <= 0x0000 l0C00_001E
Mem13: orig: Mem0
    def:  Mem13[ds:0x0106:word16] = v7_12
    uses: Mem18 = PHI(Mem13, Mem16)
SCZO_14: orig: SCZO
SZO_15: orig: SZO
Mem16: orig: Mem0
    def:  Mem16[ds:0x0F01:byte] = 0x01
    uses: Mem18 = PHI(Mem13, Mem16)
ds_17: orig: ds
    def:  ds_17 = PHI(ds, ds)
Mem18: orig: Mem0
    def:  Mem18 = PHI(Mem13, Mem16)
    uses: branch (Mem18[ds:0x0106:word16] & Mem18[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem18[ds:0x0106:word16] & Mem18[ds:0x0108:word16]) == 0x0000 l0C00_002D
          Mem26 = PHI(Mem18, Mem24)
ax_19: orig: ax
ax_20: orig: ax
SZO_21: orig: SZO
C_22: orig: C
Z_23: orig: Z
Mem24: orig: Mem0
    def:  Mem24[ds:0x0F02:byte] = 0x01
    uses: Mem26 = PHI(Mem18, Mem24)
ds_25: orig: ds
    def:  ds_25 = PHI(ds, ds)
Mem26: orig: Mem0
    def:  Mem26 = PHI(Mem18, Mem24)
    uses: branch Mem26[ds:0x010A:word16] >=u Mem26[ds:0x010C:word16] l0C00_003D
          branch Mem26[ds:0x010A:word16] >=u Mem26[ds:0x010C:word16] l0C00_003D
ax_27: orig: ax
SCZO_28: orig: SCZO
C_29: orig: C
C_30: orig: C
Mem31: orig: Mem0
    def:  Mem31[ds:0x0F03:byte] = 0x01
sp_32: orig: sp
    def:  sp_32 = PHI(sp_2, sp_2)
sp_33: orig: sp
    def:  sp_33 = PHI(sp_2, sp_2)
sp_34: orig: sp
    def:  sp_34 = PHI(sp_2, sp_2)
sp_35: orig: sp
    def:  sp_35 = PHI(sp_2, sp_2)
sp_36: orig: sp
ss_37: orig: ss
    def:  ss_37 = PHI(ss, ss)
ss_38: orig: ss
    def:  ss_38 = PHI(ss, ss)
ss_39: orig: ss
    def:  ss_39 = PHI(ss, ss)
ss_40: orig: ss
    def:  ss_40 = PHI(ss, ss)
ss:ss
    def:  def ss
    uses: Mem67[ss:bp - 0x000A:byte] = 0x01
Mem42: orig: Mem0
    uses: Mem50 = PHI(Mem42, Mem48)
S_43: orig: S
    def:  branch fn0C00_0069(0x0003) l0C00_0049
C_44: orig: C
Z_45: orig: Z
    def:  branch fn0C00_0069(0x0003) l0C00_0049
O_46: orig: O
    def:  branch fn0C00_0069(0x0003) l0C00_0049
ds_47: orig: ds
    def:  ds_47 = PHI(ds, ds)
Mem48: orig: Mem0
    def:  Mem48[ds:0x0F04:byte] = 0x01
    uses: Mem50 = PHI(Mem42, Mem48)
ds_49: orig: ds
    def:  ds_49 = PHI(ds, ds)
Mem50: orig: Mem0
    def:  Mem50 = PHI(Mem42, Mem48)
    uses: branch (Mem50[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
SZO_51: orig: SZO
C_52: orig: C
Z_53: orig: Z
Mem54: orig: Mem0
    def:  Mem54[ds:0x0F05:byte] = 0x01
bp_55: orig: bp
    def:  bp_55 = PHI(bp, bp)
bp_56: orig: bp
    def:  bp_56 = PHI(bp, bp)
bp_57: orig: bp
    def:  bp_57 = PHI(bp, bp)
bp_58: orig: bp
    def:  bp_58 = PHI(bp, bp)
bp_59: orig: bp
    def:  bp_59 = PHI(bp, bp)
bp_60: orig: bp
    def:  bp_60 = PHI(bp, bp)
bp:bp
    def:  def bp
    uses: branch bp < 0x0010 l0C00_005F
          branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
          Mem67[ss:bp - 0x000A:byte] = 0x01
bp_62: orig: bp
SCZO_63: orig: SCZO
SO_64: orig: SO
ss_65: orig: ss
    def:  ss_65 = PHI(ss, ss)
ss_66: orig: ss
    def:  ss_66 = PHI(ss, ss)
Mem67: orig: Mem0
    def:  Mem67[ss:bp - 0x000A:byte] = 0x01
bp_68: orig: bp
    def:  bp_68 = PHI(bp_62, bp_62)
bp_69: orig: bp
SCZO_70: orig: SCZO
O_71: orig: O
ds_72: orig: ds
    def:  ds_72 = PHI(ds, ds)
ds_73: orig: ds
    def:  ds_73 = PHI(ds, ds)
Mem74: orig: Mem0
    def:  Mem74[ds:0x0F07:byte] = 0x01
wLoc02_75: orig: wLoc02
C_83: orig: C
S_87: orig: S
Z_95: orig: Z
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bp, selector ds)
fn0C00_0000_entry:
	def ds
	def Mem0
	def ss
	def bp
	// succ:  l0C00_0000
l0C00_0000:
	branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
	// succ:  l0C00_000A l0C00_000F
l0C00_000A:
	Mem8[ds:0x0F00:byte] = 0x01
	// succ:  l0C00_000F
l0C00_000F:
	Mem10 = PHI(Mem0, Mem8)
	v7_12 = Mem10[ds:0x0106:word16] - Mem10[ds:0x0104:word16]
	Mem13[ds:0x0106:word16] = v7_12
	branch v7_12 <= 0x0000 l0C00_001E
	// succ:  l0C00_0019 l0C00_001E
l0C00_0019:
	Mem16[ds:0x0F01:byte] = 0x01
	// succ:  l0C00_001E
l0C00_001E:
	Mem18 = PHI(Mem13, Mem16)
	branch (Mem18[ds:0x0106:word16] & Mem18[ds:0x0108:word16]) == 0x0000 l0C00_002D
	// succ:  l0C00_0028 l0C00_002D
l0C00_0028:
	Mem24[ds:0x0F02:byte] = 0x01
	// succ:  l0C00_002D
l0C00_002D:
	Mem26 = PHI(Mem18, Mem24)
	branch Mem26[ds:0x010A:word16] >=u Mem26[ds:0x010C:word16] l0C00_003D
	// succ:  l0C00_0038 l0C00_003D
l0C00_0038:
	Mem31[ds:0x0F03:byte] = 0x01
	// succ:  l0C00_003D
l0C00_003D:
	branch fn0C00_0069(0x0003) l0C00_0049
	// succ:  l0C00_0044 l0C00_0049
l0C00_0044:
	Mem48[ds:0x0F04:byte] = 0x01
	// succ:  l0C00_0049
l0C00_0049:
	Mem50 = PHI(Mem42, Mem48)
	branch (Mem50[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
	// succ:  l0C00_0051 l0C00_0056
l0C00_0051:
	Mem54[ds:0x0F05:byte] = 0x01
	// succ:  l0C00_0056
l0C00_0056:
	branch bp < 0x0010 l0C00_005F
	// succ:  l0C00_005B l0C00_005F
l0C00_005B:
	Mem67[ss:bp - 0x000A:byte] = 0x01
	// succ:  l0C00_005F
l0C00_005F:
	branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
	// succ:  l0C00_0063 l0C00_0068
l0C00_0063:
	Mem74[ds:0x0F07:byte] = 0x01
	// succ:  l0C00_0068
l0C00_0068:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_2: orig: sp
sp_3: orig: sp
bp:bp
ss:ss
Mem6: orig: Mem0
bp_7: orig: bp
SCZO_8: orig: SCZO
bp_9: orig: bp
sp_10: orig: sp
wLoc02_11: orig: wLoc02
wArg02:Stack +0002
    def:  def wArg02
    uses: return SLICE(cond(wArg02), bool, 1)
C_13: orig: C
O_14: orig: O
S_15: orig: S
Z_16: orig: Z
// fn0C00_0069
// Return size: 0
bool fn0C00_0069(word16 wArg02)
fn0C00_0069_entry:
	def wArg02
	// succ:  l0C00_0069
l0C00_0069:
	return SLICE(cond(wArg02), bool, 1)
	// succ:  fn0C00_0069_exit
fn0C00_0069_exit:

