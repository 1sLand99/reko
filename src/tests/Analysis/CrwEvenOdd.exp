void fn0C00_0000(Register selector ds)
// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Global
// fp:fp
// sp:sp
// ax:ax
// ds:ds
// al:al
// Top:Top
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	ax_5 = DPB(ax_5, fn0C00_0015(0x0003), 0)
	al_10 = (byte) ax_5 (alias)
	Mem12[ds:0x0300:byte] = al_10
	ax_14 = DPB(ax_14, fn0C00_0020(0x0003), 0)
	al_19 = (byte) ax_14 (alias)
	Mem20[ds:0x0301:byte] = al_19
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
Register byte fn0C00_0015(Register word16 ax)
// MayUse:  ax:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: sp
// fn0C00_0015
// Return size: 0
// Mem0:Global
// fp:fp
// sp:sp
// ax:ax
// SZO:SZO
// C:C
// Z:Z
// al:al
// Top:Top
// SCZO:SCZO
// S:S
// O:O
// return address size: 2
byte fn0C00_0015(word16 ax)
fn0C00_0015_entry:
	def ax
	// succ:  l0C00_0015
l0C00_0015:
	branch ax == 0x0000 l0C00_001D
	// succ:  l0C00_0019 l0C00_001D
l0C00_0019:
	// succ:  l0C00_0019_thunk_fn0C00_0020
l0C00_0019_thunk_fn0C00_0020:
	ax_13 = DPB(ax_13, fn0C00_0020(ax - 0x0001), 0)
	return (byte) ax_13
	// succ:  fn0C00_0015_exit
l0C00_001D:
	ax_16 = DPB(ax, 0x01, 0) (alias)
	return (byte) ax_16
	// succ:  fn0C00_0015_exit
fn0C00_0015_exit:
Register byte fn0C00_0020(Register word16 ax)
// MayUse:  ax:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: sp
// fn0C00_0020
// Return size: 0
// Mem0:Global
// fp:fp
// sp:sp
// ax:ax
// SZO:SZO
// C:C
// Z:Z
// al:al
// Top:Top
// SCZO:SCZO
// S:S
// O:O
// return address size: 2
byte fn0C00_0020(word16 ax)
fn0C00_0020_entry:
	def ax
	// succ:  l0C00_0020
l0C00_0020:
	branch ax == 0x0000 l0C00_0028
	// succ:  l0C00_0024 l0C00_0028
l0C00_0024:
	// succ:  l0C00_0024_thunk_fn0C00_0015
l0C00_0024_thunk_fn0C00_0015:
	ax_16 = DPB(ax_16, fn0C00_0015(ax - 0x0001), 0)
	return (byte) ax_16
	// succ:  fn0C00_0020_exit
l0C00_0028:
	ax_19 = DPB(ax, 0x00, 0) (alias)
	return (byte) ax_19
	// succ:  fn0C00_0020_exit
fn0C00_0020_exit:
