#pragma once

// Placeholder file until a "real" assembler comes along.

enum class Opcode
{
	Invalid = 0,
	ADC = 1,
	ADD = 2,
	ADR = 3,
	AESD = 4,
	AESE = 5,
	AESIMC = 6,
	AESMC = 7,
	AND = 8,
	BFC = 9,
	BFI = 10,
	BIC = 11,
	BKPT = 12,
	BL = 13,
	BLX = 14,
	BX = 15,
	BXJ = 16,
	B = 17,
	CDP = 18,
	CDP2 = 19,
	CLREX = 20,
	CLZ = 21,
	CMN = 22,
	CMP = 23,
	CPS = 24,
	CRC32B = 25,
	CRC32CB = 26,
	CRC32CH = 27,
	CRC32CW = 28,
	CRC32H = 29,
	CRC32W = 30,
	DBG = 31,
	DMB = 32,
	DSB = 33,
	EOR = 34,
	VMOV = 35,
	FLDMDBX = 36,
	FLDMIAX = 37,
	VMRS = 38,
	FSTMDBX = 39,
	FSTMIAX = 40,
	HINT = 41,
	HLT = 42,
	ISB = 43,
	LDA = 44,
	LDAB = 45,
	LDAEX = 46,
	LDAEXB = 47,
	LDAEXD = 48,
	LDAEXH = 49,
	LDAH = 50,
	LDC2L = 51,
	LDC2 = 52,
	LDCL = 53,
	LDC = 54,
	LDMDA = 55,
	LDMDB = 56,
	LDM = 57,
	LDMIB = 58,
	LDRBT = 59,
	LDRB = 60,
	LDRD = 61,
	LDREX = 62,
	LDREXB = 63,
	LDREXD = 64,
	LDREXH = 65,
	LDRH = 66,
	LDRHT = 67,
	LDRSB = 68,
	LDRSBT = 69,
	LDRSH = 70,
	LDRSHT = 71,
	LDRT = 72,
	LDR = 73,
	MCR = 74,
	MCR2 = 75,
	MCRR = 76,
	MCRR2 = 77,
	MLA = 78,
	MLS = 79,
	MOV = 80,
	MOVT = 81,
	MOVW = 82,
	MRC = 83,
	MRC2 = 84,
	MRRC = 85,
	MRRC2 = 86,
	MRS = 87,
	MSR = 88,
	MUL = 89,
	MVN = 90,
	ORR = 91,
	PKHBT = 92,
	PKHTB = 93,
	PLDW = 94,
	PLD = 95,
	PLI = 96,
	QADD = 97,
	QADD16 = 98,
	QADD8 = 99,
	QASX = 100,
	QDADD = 101,
	QDSUB = 102,
	QSAX = 103,
	QSUB = 104,
	QSUB16 = 105,
	QSUB8 = 106,
	RBIT = 107,
	REV = 108,
	REV16 = 109,
	REVSH = 110,
	RFEDA = 111,
	RFEDB = 112,
	RFEIA = 113,
	RFEIB = 114,
	RSB = 115,
	RSC = 116,
	SADD16 = 117,
	SADD8 = 118,
	SASX = 119,
	SBC = 120,
	SBFX = 121,
	SDIV = 122,
	SEL = 123,
	SETEND = 124,
	SHA1C = 125,
	SHA1H = 126,
	SHA1M = 127,
	SHA1P = 128,
	SHA1SU0 = 129,
	SHA1SU1 = 130,
	SHA256H = 131,
	SHA256H2 = 132,
	SHA256SU0 = 133,
	SHA256SU1 = 134,
	SHADD16 = 135,
	SHADD8 = 136,
	SHASX = 137,
	SHSAX = 138,
	SHSUB16 = 139,
	SHSUB8 = 140,
	SMC = 141,
	SMLABB = 142,
	SMLABT = 143,
	SMLAD = 144,
	SMLADX = 145,
	SMLAL = 146,
	SMLALBB = 147,
	SMLALBT = 148,
	SMLALD = 149,
	SMLALDX = 150,
	SMLALTB = 151,
	SMLALTT = 152,
	SMLATB = 153,
	SMLATT = 154,
	SMLAWB = 155,
	SMLAWT = 156,
	SMLSD = 157,
	SMLSDX = 158,
	SMLSLD = 159,
	SMLSLDX = 160,
	SMMLA = 161,
	SMMLAR = 162,
	SMMLS = 163,
	SMMLSR = 164,
	SMMUL = 165,
	SMMULR = 166,
	SMUAD = 167,
	SMUADX = 168,
	SMULBB = 169,
	SMULBT = 170,
	SMULL = 171,
	SMULTB = 172,
	SMULTT = 173,
	SMULWB = 174,
	SMULWT = 175,
	SMUSD = 176,
	SMUSDX = 177,
	SRSDA = 178,
	SRSDB = 179,
	SRSIA = 180,
	SRSIB = 181,
	SSAT = 182,
	SSAT16 = 183,
	SSAX = 184,
	SSUB16 = 185,
	SSUB8 = 186,
	STC2L = 187,
	STC2 = 188,
	STCL = 189,
	STC = 190,
	STL = 191,
	STLB = 192,
	STLEX = 193,
	STLEXB = 194,
	STLEXD = 195,
	STLEXH = 196,
	STLH = 197,
	STMDA = 198,
	STMDB = 199,
	STM = 200,
	STMIB = 201,
	STRBT = 202,
	STRB = 203,
	STRD = 204,
	STREX = 205,
	STREXB = 206,
	STREXD = 207,
	STREXH = 208,
	STRH = 209,
	STRHT = 210,
	STRT = 211,
	STR = 212,
	SUB = 213,
	SVC = 214,
	SWP = 215,
	SWPB = 216,
	SXTAB = 217,
	SXTAB16 = 218,
	SXTAH = 219,
	SXTB = 220,
	SXTB16 = 221,
	SXTH = 222,
	TEQ = 223,
	TRAP = 224,
	TST = 225,
	UADD16 = 226,
	UADD8 = 227,
	UASX = 228,
	UBFX = 229,
	UDF = 230,
	UDIV = 231,
	UHADD16 = 232,
	UHADD8 = 233,
	UHASX = 234,
	UHSAX = 235,
	UHSUB16 = 236,
	UHSUB8 = 237,
	UMAAL = 238,
	UMLAL = 239,
	UMULL = 240,
	UQADD16 = 241,
	UQADD8 = 242,
	UQASX = 243,
	UQSAX = 244,
	UQSUB16 = 245,
	UQSUB8 = 246,
	USAD8 = 247,
	USADA8 = 248,
	USAT = 249,
	USAT16 = 250,
	USAX = 251,
	USUB16 = 252,
	USUB8 = 253,
	UXTAB = 254,
	UXTAB16 = 255,
	UXTAH = 256,
	UXTB = 257,
	UXTB16 = 258,
	UXTH = 259,
	VABAL = 260,
	VABA = 261,
	VABDL = 262,
	VABD = 263,
	VABS = 264,
	VACGE = 265,
	VACGT = 266,
	VADD = 267,
	VADDHN = 268,
	VADDL = 269,
	VADDW = 270,
	VAND = 271,
	VBIC = 272,
	VBIF = 273,
	VBIT = 274,
	VBSL = 275,
	VCEQ = 276,
	VCGE = 277,
	VCGT = 278,
	VCLE = 279,
	VCLS = 280,
	VCLT = 281,
	VCLZ = 282,
	VCMP = 283,
	VCMPE = 284,
	VCNT = 285,
	VCVTA = 286,
	VCVTB = 287,
	VCVT = 288,
	VCVTM = 289,
	VCVTN = 290,
	VCVTP = 291,
	VCVTT = 292,
	VDIV = 293,
	VDUP = 294,
	VEOR = 295,
	VEXT = 296,
	VFMA = 297,
	VFMS = 298,
	VFNMA = 299,
	VFNMS = 300,
	VHADD = 301,
	VHSUB = 302,
	VLD1 = 303,
	VLD2 = 304,
	VLD3 = 305,
	VLD4 = 306,
	VLDMDB = 307,
	VLDMIA = 308,
	VLDR = 309,
	VMAXNM = 310,
	VMAX = 311,
	VMINNM = 312,
	VMIN = 313,
	VMLA = 314,
	VMLAL = 315,
	VMLS = 316,
	VMLSL = 317,
	VMOVL = 318,
	VMOVN = 319,
	VMSR = 320,
	VMUL = 321,
	VMULL = 322,
	VMVN = 323,
	VNEG = 324,
	VNMLA = 325,
	VNMLS = 326,
	VNMUL = 327,
	VORN = 328,
	VORR = 329,
	VPADAL = 330,
	VPADDL = 331,
	VPADD = 332,
	VPMAX = 333,
	VPMIN = 334,
	VQABS = 335,
	VQADD = 336,
	VQDMLAL = 337,
	VQDMLSL = 338,
	VQDMULH = 339,
	VQDMULL = 340,
	VQMOVUN = 341,
	VQMOVN = 342,
	VQNEG = 343,
	VQRDMULH = 344,
	VQRSHL = 345,
	VQRSHRN = 346,
	VQRSHRUN = 347,
	VQSHL = 348,
	VQSHLU = 349,
	VQSHRN = 350,
	VQSHRUN = 351,
	VQSUB = 352,
	VRADDHN = 353,
	VRECPE = 354,
	VRECPS = 355,
	VREV16 = 356,
	VREV32 = 357,
	VREV64 = 358,
	VRHADD = 359,
	VRINTA = 360,
	VRINTM = 361,
	VRINTN = 362,
	VRINTP = 363,
	VRINTR = 364,
	VRINTX = 365,
	VRINTZ = 366,
	VRSHL = 367,
	VRSHRN = 368,
	VRSHR = 369,
	VRSQRTE = 370,
	VRSQRTS = 371,
	VRSRA = 372,
	VRSUBHN = 373,
	VSELEQ = 374,
	VSELGE = 375,
	VSELGT = 376,
	VSELVS = 377,
	VSHLL = 378,
	VSHL = 379,
	VSHRN = 380,
	VSHR = 381,
	VSLI = 382,
	VSQRT = 383,
	VSRA = 384,
	VSRI = 385,
	VST1 = 386,
	VST2 = 387,
	VST3 = 388,
	VST4 = 389,
	VSTMDB = 390,
	VSTMIA = 391,
	VSTR = 392,
	VSUB = 393,
	VSUBHN = 394,
	VSUBL = 395,
	VSUBW = 396,
	VSWP = 397,
	VTBL = 398,
	VTBX = 399,
	VCVTR = 400,
	VTRN = 401,
	VTST = 402,
	VUZP = 403,
	VZIP = 404,
	ADDW = 405,
	ASR = 406,
	DCPS1 = 407,
	DCPS2 = 408,
	DCPS3 = 409,
	IT = 410,
	LSL = 411,
	LSR = 412,
	ASRS = 413,
	LSRS = 414,
	ORN = 415,
	ROR = 416,
	RRX = 417,
	SUBS = 418,
	SUBW = 419,
	TBB = 420,
	TBH = 421,
	CBNZ = 422,
	CBZ = 423,
	MOVS = 424,
	POP = 425,
	PUSH = 426,
	NOP = 427,
	YIELD = 428,
	WFE = 429,
	WFI = 430,
	SEV = 431,
	SEVL = 432,
	VPUSH = 433,
	VPOP = 434
};

enum class ArmInstructionOperandType
{
	Immediate
};

enum class ArmCodeCondition
{
	Invalid = 0,
	EQ = 1,
	NE = 2,
	HS = 3,
	LO = 4,
	MI = 5,
	PL = 6,
	VS = 7,
	VC = 8,
	HI = 9,
	LS = 10,
	GE = 11,
	LT = 12,
	GT = 13,
	LE = 14,
	AL = 15
};

class ArmInstructionOperand
{
public:
	ArmInstructionOperandType Type;
};

class ArmInstruction
{
public:
	Opcode Id;

	struct {
		bool UpdateFlags;
	} ArchitectureDetail;
};


